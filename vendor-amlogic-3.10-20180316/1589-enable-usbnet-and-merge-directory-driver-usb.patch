From d4bb0148ec8a161e8900c442eb73670acaa60c39 Mon Sep 17 00:00:00 2001
From: "qi.duan" <qi.duan@amlogic.com>
Date: Fri, 1 Nov 2013 14:19:40 +0800
Subject: [PATCH 1589/5965] enable usbnet and merge directory driver/usb

---
 arch/arm/configs/meson8_defconfig |  1 +
 drivers/net/usb/usbnet.c          |  2 +-
 drivers/usb/core/hcd.c            | 13 +++++++++++++
 include/linux/skbuff.h            |  4 ++--
 4 files changed, 17 insertions(+), 3 deletions(-)
 mode change 100644 => 100755 drivers/net/usb/usbnet.c
 mode change 100644 => 100755 drivers/usb/core/hcd.c
 mode change 100644 => 100755 include/linux/skbuff.h

diff --git a/arch/arm/configs/meson8_defconfig b/arch/arm/configs/meson8_defconfig
index 309d7ee50bf7..aa03be010361 100755
--- a/arch/arm/configs/meson8_defconfig
+++ b/arch/arm/configs/meson8_defconfig
@@ -219,6 +219,7 @@ CONFIG_PPPOLAC=y
 CONFIG_PPPOPNS=y
 CONFIG_PPP_ASYNC=y
 CONFIG_PPP_SYNC_TTY=y
+CONFIG_USB_USBNET=y
 CONFIG_INPUT_POLLDEV=y
 CONFIG_INPUT_EVDEV=y
 CONFIG_INPUT_MISC=y
diff --git a/drivers/net/usb/usbnet.c b/drivers/net/usb/usbnet.c
old mode 100644
new mode 100755
index 06ee82f557d4..d90158c010e9
--- a/drivers/net/usb/usbnet.c
+++ b/drivers/net/usb/usbnet.c
@@ -1557,7 +1557,7 @@ usbnet_probe (struct usb_interface *udev, const struct usb_device_id *prod)
 		if ((dev->driver_info->flags & FLAG_ETHER) != 0 &&
 		    ((dev->driver_info->flags & FLAG_POINTTOPOINT) == 0 ||
 		     (net->dev_addr [0] & 0x02) == 0))
-			strcpy (net->name, "eth%d");
+			strcpy (net->name, "usbnet%d");
 		/* WLAN devices should always be named "wlan%d" */
 		if ((dev->driver_info->flags & FLAG_WLAN) != 0)
 			strcpy(net->name, "wlan%d");
diff --git a/drivers/usb/core/hcd.c b/drivers/usb/core/hcd.c
old mode 100644
new mode 100755
index d53547d2e4c7..e551a376b8a8
--- a/drivers/usb/core/hcd.c
+++ b/drivers/usb/core/hcd.c
@@ -1908,6 +1908,7 @@ void usb_hcd_reset_endpoint(struct usb_device *udev,
 {
 	struct usb_hcd *hcd = bus_to_hcd(udev->bus);
 
+#ifndef CONFIG_USB_DWC_OTG_HCD
 	if (hcd->driver->endpoint_reset)
 		hcd->driver->endpoint_reset(hcd, ep);
 	else {
@@ -1919,6 +1920,18 @@ void usb_hcd_reset_endpoint(struct usb_device *udev,
 		if (is_control)
 			usb_settoggle(udev, epnum, !is_out, 0);
 	}
+#else
+	int epnum = usb_endpoint_num(&ep->desc);
+	int is_out = usb_endpoint_dir_out(&ep->desc);
+	int is_control = usb_endpoint_xfer_control(&ep->desc);
+
+	usb_settoggle(udev, epnum, is_out, 0);
+	if (is_control)
+		usb_settoggle(udev, epnum, !is_out, 0);
+
+	if (hcd->driver->endpoint_reset)
+		hcd->driver->endpoint_reset(hcd, ep);
+#endif
 }
 
 /**
diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
old mode 100644
new mode 100755
index dec1748cd002..f5db22ec0ad3
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -1989,8 +1989,8 @@ static inline struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev
 {
 	struct sk_buff *skb = __netdev_alloc_skb(dev, length + NET_IP_ALIGN, gfp);
 
-	if (NET_IP_ALIGN && skb)
-		skb_reserve(skb, NET_IP_ALIGN);
+	//if (NET_IP_ALIGN && skb)
+	//	skb_reserve(skb, NET_IP_ALIGN);
 	return skb;
 }
 
-- 
2.19.0

