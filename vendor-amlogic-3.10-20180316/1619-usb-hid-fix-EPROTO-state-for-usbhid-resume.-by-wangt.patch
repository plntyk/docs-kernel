From 438eb397dbe068d315c32cceb7babe6a7341e142 Mon Sep 17 00:00:00 2001
From: "qi.duan" <qi.duan@amlogic.com>
Date: Fri, 1 Nov 2013 16:44:51 +0800
Subject: [PATCH 1619/5965] usb:hid: fix EPROTO state for usbhid resume. by
 wangtianhui

---
 drivers/hid/usbhid/hid-core.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)
 mode change 100644 => 100755 drivers/hid/usbhid/hid-core.c

diff --git a/drivers/hid/usbhid/hid-core.c b/drivers/hid/usbhid/hid-core.c
old mode 100644
new mode 100755
index 99418285222c..3aa058bc8e11
--- a/drivers/hid/usbhid/hid-core.c
+++ b/drivers/hid/usbhid/hid-core.c
@@ -287,6 +287,7 @@ static void hid_irq_in(struct urb *urb)
 	struct hid_device	*hid = urb->context;
 	struct usbhid_device 	*usbhid = hid->driver_data;
 	int			status;
+	static int eproto_count = 0;
 
 	switch (urb->status) {
 	case 0:			/* success */
@@ -316,8 +317,18 @@ static void hid_irq_in(struct urb *urb)
 	case -ESHUTDOWN:	/* unplug */
 		clear_bit(HID_IN_RUNNING, &usbhid->iofl);
 		return;
-	case -EILSEQ:		/* protocol error or unplug */
 	case -EPROTO:		/* protocol error or unplug */
+		eproto_count++;
+		if(eproto_count == 5){
+			usbhid_mark_busy(usbhid);
+			clear_bit(HID_IN_RUNNING, &usbhid->iofl);
+			set_bit(HID_RESET_PENDING, &usbhid->iofl);
+			printk("%s too many eproto,try to reset device\n",__func__);
+			schedule_work(&usbhid->reset_work);
+			eproto_count = 0;
+			return;
+		}
+	case -EILSEQ:		/* protocol error or unplug */
 	case -ETIME:		/* protocol error or unplug */
 	case -ETIMEDOUT:	/* Should never happen, but... */
 		usbhid_mark_busy(usbhid);
@@ -328,7 +339,7 @@ static void hid_irq_in(struct urb *urb)
 		hid_warn(urb->dev, "input irq status %d received\n",
 			 urb->status);
 	}
-
+	eproto_count = 0;
 	status = usb_submit_urb(urb, GFP_ATOMIC);
 	if (status) {
 		clear_bit(HID_IN_RUNNING, &usbhid->iofl);
-- 
2.19.0

