From 2466e7d3aa844efd11c53aeba2fe8943abedbe16 Mon Sep 17 00:00:00 2001
From: "xiaobo.gu" <xiaobo.gu@amlogic.com>
Date: Thu, 24 Oct 2013 18:01:13 +0800
Subject: [PATCH 1643/5965] [efuse] Update efuse driver for m8

---
 drivers/amlogic/efuse/efuse_hw.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/drivers/amlogic/efuse/efuse_hw.c b/drivers/amlogic/efuse/efuse_hw.c
index 7ff8ea97009d..8c911c01cb58 100755
--- a/drivers/amlogic/efuse/efuse_hw.c
+++ b/drivers/amlogic/efuse/efuse_hw.c
@@ -80,6 +80,9 @@ static void __efuse_write_byte( unsigned long addr, unsigned long data )
 {
 	unsigned long auto_wr_is_enabled = 0;
 
+	//set efuse PD=0
+	aml_set_reg32_bits( P_EFUSE_CNTL1, 0, 27, 1);
+
 	if (aml_read_reg32( P_EFUSE_CNTL1) & (1 << CNTL1_AUTO_WR_ENABLE_BIT)) {                                                                                
 		auto_wr_is_enabled = 1;
 	} else {                                                                                
@@ -88,9 +91,23 @@ static void __efuse_write_byte( unsigned long addr, unsigned long data )
 		CNTL1_AUTO_WR_ENABLE_BIT, CNTL1_AUTO_WR_ENABLE_SIZE );
 	}
 
+#ifdef CONFIG_ARCH_MESON8
+	unsigned int byte_sel = addr % 4;
+	addr = addr / 4;
+
 	/* write the address */
 	aml_set_reg32_bits( P_EFUSE_CNTL1, addr,
 			CNTL1_BYTE_ADDR_BIT, CNTL1_BYTE_ADDR_SIZE );
+
+	//auto write byte select (0-3), for m8
+	aml_set_reg32_bits( P_EFUSE_CNTL3, byte_sel,
+        CNTL1_AUTO_WR_START_BIT, 2 );
+#else
+	/* write the address */
+    aml_set_reg32_bits( P_EFUSE_CNTL1, addr,
+        CNTL1_BYTE_ADDR_BIT, CNTL1_BYTE_ADDR_SIZE );
+#endif
+
 	/* set starting byte address */
 	aml_set_reg32_bits( P_EFUSE_CNTL1, CNTL1_BYTE_ADDR_SET_ON,
 			CNTL1_BYTE_ADDR_SET_BIT, CNTL1_BYTE_ADDR_SET_SIZE );
@@ -118,6 +135,8 @@ static void __efuse_write_byte( unsigned long addr, unsigned long data )
 				CNTL1_AUTO_WR_ENABLE_BIT, CNTL1_AUTO_WR_ENABLE_SIZE );
 	}
 
+	//set efuse PD=1
+	aml_set_reg32_bits( P_EFUSE_CNTL1, 1, 27, 1);
 	//printk(KERN_INFO "__efuse_write_byte: addr=%ld, data=0x%ld\n", addr, data);
 }
 
@@ -134,6 +153,13 @@ static void __efuse_read_dword( unsigned long addr, unsigned long *data )
 	//	CNTL1_AUTO_RD_ENABLE_BIT, CNTL1_AUTO_RD_ENABLE_SIZE );
 	//}
 
+	//set efuse PD=0
+	aml_set_reg32_bits( P_EFUSE_CNTL1, 0, 27, 1);
+
+#ifdef CONFIG_ARCH_MESON8
+	addr = addr / 4;	//each address have 4 bytes in m8
+#endif
+
 	/* write the address */
 	aml_set_reg32_bits( P_EFUSE_CNTL1, addr,
 			CNTL1_BYTE_ADDR_BIT,  CNTL1_BYTE_ADDR_SIZE );
@@ -157,6 +183,8 @@ static void __efuse_read_dword( unsigned long addr, unsigned long *data )
 	/* read the 32-bits value */
 	( *data ) = aml_read_reg32( P_EFUSE_CNTL2 );
 
+	//set efuse PD=1
+	aml_set_reg32_bits( P_EFUSE_CNTL1, 1, 27, 1);
 	/* if auto read wasn't enabled and we enabled it, then disable it upon exit */
 	//if ( auto_rd_is_enabled == 0 ){                                                                               
 		//aml_set_reg32_bits( P_EFUSE_CNTL1, CNTL1_AUTO_RD_ENABLE_OFF,
-- 
2.19.0

