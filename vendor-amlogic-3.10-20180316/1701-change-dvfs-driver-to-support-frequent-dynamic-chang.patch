From 08ba96d9d9e6540b3d63fed1acf509c01f947a34 Mon Sep 17 00:00:00 2001
From: "tao.zeng" <tao.zeng@amlogic.com>
Date: Tue, 5 Nov 2013 10:10:44 +0800
Subject: [PATCH 1701/5965] change dvfs driver to support frequent dynamic
 change on socket board.

---
 arch/arm/boot/dts/amlogic/meson8_skt.dtd  |  3 ++-
 drivers/amlogic/power/aml_dvfs/aml_dvfs.c | 17 +++++++++++++++++
 2 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_skt.dtd b/arch/arm/boot/dts/amlogic/meson8_skt.dtd
index 334191912d6e..02416686dfff 100755
--- a/arch/arm/boot/dts/amlogic/meson8_skt.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_skt.dtd
@@ -507,6 +507,7 @@ void root_func(){
         vcck_dvfs {
             dvfs_id     = <1>;                                  /** must be value of (1 << n)            */
             table_count = <17>;                                 /** must be correct count for dvfs_table */
+            change-frequent-only;
             dvfs_table  = <
             /* NOTE: frequent in this table must be ascending order */
             /* frequent(Khz)    min_uV      max_uV                  */
@@ -696,7 +697,7 @@ void root_func(){
             vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
             board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
             vbus_dcin_short_connect = <1>;
-            status = "okay";                                    /** status of pmu, only one should be OK */
+            status = "disable";                                 /** status of pmu, only one should be OK */
         };
     };
 
diff --git a/drivers/amlogic/power/aml_dvfs/aml_dvfs.c b/drivers/amlogic/power/aml_dvfs/aml_dvfs.c
index ebf7bdb9a960..f0914bc4fbce 100755
--- a/drivers/amlogic/power/aml_dvfs/aml_dvfs.c
+++ b/drivers/amlogic/power/aml_dvfs/aml_dvfs.c
@@ -183,6 +183,18 @@ int aml_dvfs_freq_change(unsigned int id, unsigned int new_freq, unsigned int ol
 }
 EXPORT_SYMBOL_GPL(aml_dvfs_freq_change);
 
+static int aml_dummy_set_voltage(uint32_t id, uint32_t min_uV, uint32_t max_uV)
+{
+    return 0;
+}
+
+struct aml_dvfs_driver aml_dummy_dvfs_driver = {
+    .name        = "aml-dumy-dvfs",
+    .id_mask     = 0, 
+    .set_voltage = aml_dummy_set_voltage, 
+    .get_voltage = NULL,
+};
+
 struct cpufreq_frequency_table *aml_dvfs_get_freq_table(unsigned int id)
 {
     struct aml_dvfs_master  *master;
@@ -279,6 +291,11 @@ static int aml_dvfs_probe(struct platform_device *pdev)
         if (aml_dvfs_init_for_master(master)) {
             return -EINVAL;    
         }
+        err = of_property_read_bool(child, "change-frequent-only");
+        if (err) {
+            aml_dummy_dvfs_driver.id_mask = id;
+            aml_dvfs_register_driver(&aml_dummy_dvfs_driver); 
+        }
     }
 
     return 0;
-- 
2.19.0

