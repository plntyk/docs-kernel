From 78f54c2d5d6b1589d4f974cc45a3ec2b92abc7c3 Mon Sep 17 00:00:00 2001
From: Rain Zhang-CA <rainzhang@wonton.(none)>
Date: Fri, 25 Oct 2013 18:17:28 -0700
Subject: [PATCH 1726/5965] di, add power control

---
 drivers/amlogic/deinterlace/deinterlace.c    | 55 ++++++++++++++++----
 drivers/amlogic/deinterlace/deinterlace.h    |  5 ++
 drivers/amlogic/deinterlace/deinterlace_hw.c | 29 +++++++++++
 3 files changed, 79 insertions(+), 10 deletions(-)

diff --git a/drivers/amlogic/deinterlace/deinterlace.c b/drivers/amlogic/deinterlace/deinterlace.c
index 9fb58b77b95b..97b035db8640 100755
--- a/drivers/amlogic/deinterlace/deinterlace.c
+++ b/drivers/amlogic/deinterlace/deinterlace.c
@@ -179,7 +179,7 @@ static dev_t di_id;
 static struct class *di_class;
 
 #define INIT_FLAG_NOT_LOAD 0x80
-static char version_s[] = "2013-10-15a";
+static char version_s[] = "2013-10-25a";
 static unsigned char boot_init_flag=0;
 static int receiver_is_amvideo = 1;
 
@@ -1885,6 +1885,10 @@ static void dis2_di(void)
                     di_pre_stru.di_inp_buf = NULL;
                 }
                 di_uninit_buf();
+                di_set_power_control(0,0);
+                if(get_blackout_policy()){
+                    di_set_power_control(1,0);
+                }
                 di_unlock_irqfiq_restore(irq_flag2, fiq_flag);
                 spin_unlock_irqrestore(&plist_lock, flags);
 }
@@ -3105,14 +3109,14 @@ static void top_bot_config(di_buf_t* di_buf)
     vframe_t* vframe = di_buf->vframe;
     if(((invert_top_bot&0x1)!=0) && (!is_progressive(vframe))){
         if(di_buf->invert_top_bot_flag == 0){
-        if((vframe->type & VIDTYPE_TYPEMASK) == VIDTYPE_INTERLACE_TOP){
-            vframe->type&=(~VIDTYPE_TYPEMASK);
-            vframe->type|=VIDTYPE_INTERLACE_BOTTOM;
-        }
-        else{
-            vframe->type&=(~VIDTYPE_TYPEMASK);
-            vframe->type|=VIDTYPE_INTERLACE_TOP;
-        }
+            if((vframe->type & VIDTYPE_TYPEMASK) == VIDTYPE_INTERLACE_TOP){
+                vframe->type&=(~VIDTYPE_TYPEMASK);
+                vframe->type|=VIDTYPE_INTERLACE_BOTTOM;
+            }
+            else{
+                vframe->type&=(~VIDTYPE_TYPEMASK);
+                vframe->type|=VIDTYPE_INTERLACE_TOP;
+            }
             di_buf->invert_top_bot_flag = 1;
         }
     }
@@ -4163,6 +4167,9 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
     int hold_line = post_hold_line;
    	int post_blend_en, post_blend_mode;
 
+    if(di_get_power_control(1)==0){
+        return 0;        
+    }
     get_vscale_skip_count(zoom_start_x_lines);
 
     if(di_post_stru.vscale_skip_flag){
@@ -4335,6 +4342,9 @@ static int de_post_process_pd(void* arg, unsigned zoom_start_x_lines,
     int hold_line = post_hold_line;
    	int post_blend_mode;
 
+    if(di_get_power_control(1)==0){
+        return 0;        
+    }
     get_vscale_skip_count(zoom_start_x_lines);
 
     if(di_post_stru.vscale_skip_flag){
@@ -4487,6 +4497,9 @@ static int de_post_process_prog(void* arg, unsigned zoom_start_x_lines,
     int hold_line = post_hold_line;
    	int post_blend_mode;
 
+    if(di_get_power_control(1)==0){
+        return 0;        
+    }
     get_vscale_skip_count(zoom_start_x_lines);
 
     if(di_post_stru.vscale_skip_flag){
@@ -5434,6 +5447,10 @@ unreg:
                 di_print("%s: di_uninit_buf\n", __func__);
 #endif
                 di_uninit_buf();
+                di_set_power_control(0,0);
+                if(get_blackout_policy()){
+                    di_set_power_control(1,0);
+                }
                 di_unlock_irqfiq_restore(irq_flag2, fiq_flag);
 
 #if (!(defined RUN_DI_PROCESS_IN_IRQ))||(defined ENABLE_SPIN_LOCK_ALWAYS)
@@ -5467,6 +5484,10 @@ static void di_unreg_process_irq(void)
         di_print("%s: di_uninit_buf\n", __func__);
 #endif
         di_uninit_buf();
+        di_set_power_control(0,0);
+        if(get_blackout_policy()){
+            di_set_power_control(1,0);
+        }
         di_unlock_irqfiq_restore(irq_flag2, fiq_flag);
 
 #if (defined ENABLE_SPIN_LOCK_ALWAYS)
@@ -5509,6 +5530,9 @@ static void di_reg_process(void)
         vframe = vf_peek(VFM_NAME);
 
         if(vframe){
+            di_set_power_control(0,1);
+            di_set_power_control(1,1);
+            
             set_output_mode_info();
 /* add for di Reg re-init */
 #if defined(CONFIG_ARCH_MESON2)||(MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6TV)
@@ -6438,6 +6462,9 @@ static int di_probe(struct platform_device *pdev)
                     IRQF_SHARED, "timerC",
                     (void *)"timerC");
 #endif
+
+    di_set_power_control(0,0);
+    di_set_power_control(1,0);
     return r;
 }
 
@@ -6453,6 +6480,8 @@ static int di_remove(struct platform_device *pdev)
     vf_unreg_receiver(&di_vf_recv);
 
     di_uninit_buf();
+    di_set_power_control(0,0);
+    di_set_power_control(1,0);
     /* Remove the cdev */
     device_remove_file(di_device.dev, &dev_attr_config);
     device_remove_file(di_device.dev, &dev_attr_debug);
@@ -6475,13 +6504,19 @@ static int di_suspend(struct platform_device *pdev,pm_message_t state)
 {
 #if (defined RUN_DI_PROCESS_IN_IRQ)&&(!(defined FIQ_VSYNC))
     Wr_reg_bits(ISA_TIMER_MUX,0,18,1);// disable timer c
-#endif
+#endif    
+    di_set_power_control(0,0);
+    di_set_power_control(1,0);
     pr_info("di: di_suspend\n");
     return 0;
 }
 
 static int di_resume(struct platform_device *pdev)
 {
+    if(init_flag){
+        di_set_power_control(0,1);
+        di_set_power_control(1,1);
+    }
 #if (defined RUN_DI_PROCESS_IN_IRQ)&&(!(defined FIQ_VSYNC))
     Wr_reg_bits(ISA_TIMER_MUX,0,14,1);// one time
     Wr_reg_bits(ISA_TIMER_MUX,0,4,2);// 1us
diff --git a/drivers/amlogic/deinterlace/deinterlace.h b/drivers/amlogic/deinterlace/deinterlace.h
index d8e8a893183a..4b9b233cdfc3 100755
--- a/drivers/amlogic/deinterlace/deinterlace.h
+++ b/drivers/amlogic/deinterlace/deinterlace.h
@@ -410,6 +410,7 @@ extern int nr_hfilt_en;
 #define DI_LOG_VFRAME       0x80
 
 extern unsigned int di_log_flag;
+extern unsigned int di_debug_flag;
 
 int di_print(const char *fmt, ...);
 
@@ -433,4 +434,8 @@ typedef struct reg_cfg_{
 
 int get_current_vscale_skip_count(vframe_t* vf);
 
+void di_set_power_control(unsigned char type, unsigned char enable);
+
+unsigned char di_get_power_control(unsigned char type);
+
 #endif
diff --git a/drivers/amlogic/deinterlace/deinterlace_hw.c b/drivers/amlogic/deinterlace/deinterlace_hw.c
index 65888277f153..90cd1a2ad004 100755
--- a/drivers/amlogic/deinterlace/deinterlace_hw.c
+++ b/drivers/amlogic/deinterlace/deinterlace_hw.c
@@ -2104,6 +2104,35 @@ void di_post_read_reverse_irq(bool reverse)
     }
 }
 
+static unsigned char pre_power_on = 0;
+static unsigned char post_power_on = 0;
+void di_set_power_control(unsigned char type, unsigned char enable)
+{
+		if(di_debug_flag&0x20){
+		    return;
+		}
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+    if(type==0){
+        WRITE_MPEG_REG_BITS(HHI_VPU_MEM_PD_REG0, enable?0:3, 26, 2); //di pre
+        pre_power_on = enable;
+    }
+    else{
+        WRITE_MPEG_REG_BITS(HHI_VPU_MEM_PD_REG0, enable?0:3, 28, 2); //di post
+        post_power_on = enable;
+    }
+#endif    
+}
+
+unsigned char di_get_power_control(unsigned char type)
+{
+    if(type==0){
+        return pre_power_on;
+    }
+    else{
+        return post_power_on;
+    }
+    
+}    
 
 #ifdef DI_POST_SKIP_LINE
 MODULE_PARM_DESC(di_vscale_skip_mode, "\n di_vscale_skip_mode\n");
-- 
2.19.0

