From 456f034c32751ea2228e3d483ec41286b227d241 Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Wed, 6 Nov 2013 20:36:06 +0800
Subject: [PATCH 1747/5965] add vdin cm2 config by cmd.

---
 drivers/amlogic/tvin/vdin/vdin_ctl.c | 364 +++++++++++++++++++++++++++
 drivers/amlogic/tvin/vdin/vdin_ctl.h |   7 +
 drivers/amlogic/tvin/vdin/vdin_drv.c |   6 +-
 3 files changed, 375 insertions(+), 2 deletions(-)

diff --git a/drivers/amlogic/tvin/vdin/vdin_ctl.c b/drivers/amlogic/tvin/vdin/vdin_ctl.c
index f2c1b8d138de..20b946959193 100755
--- a/drivers/amlogic/tvin/vdin/vdin_ctl.c
+++ b/drivers/amlogic/tvin/vdin/vdin_ctl.c
@@ -2039,3 +2039,367 @@ void set_chroma_regs(unsigned int offset, unsigned int h_active,unsigned int v_a
 	pr_info("%s cm2 init ok.\n",__func__);
 #endif
 }
+#define CM2_REG_NUM 174
+static struct vdin_cm2_s vdin_cm2_table[CM2_REG_NUM] = {
+	/* enhancement */
+	{0x200,    0xffffffff,		 0x0	  },
+	{0x201,    0xffffffff,		 0x0	  },
+	{0x202,    0xffffffff,		 0x0	  },
+	{0x203,    0xffffffff,		 0x8000400},
+	{0x204,    0xffffffff,		 0x90	  },
+	{0x206,    0xffffffff,		 0x0	  },
+	{0x207,    0xffffffff,		 0x2000000},
+	{0x208,    0xffffffff,		 0x7a	  },
+	{0x209,    0xffffffff,		 0x0	  },
+	{0x20a,    0xffffffff,		 0x0	  },
+	{0x20f,    0xf, 			 0x0,	  },
+	{0x205,    0xffffffff,		 0x437077f},
+	{0x1da1,   0xc000,			 0x0,	  },
+	{0x1da2,   0xffffffff,		 0xfff	  },
+	{0x100,    0xffffffff,		 0x2b5600 },
+	{0x101,    0xffffffff,		 0xc	  },
+	{0x102,    0xffffffff,		 0x0	  },
+	{0x103,    0xffffffff,		 0x0	  },
+	{0x104,    0xffffffff,		 0x0	  },
+	{0x108,    0xffffffff,		 0x295600 },
+	{0x109,    0xffffffff,		 0x1f	  },
+	{0x10a,    0xffffffff,		 0x0	  },
+	{0x10b,    0xffffffff,		 0x0	  },
+	{0x10c,    0xffffffff,		 0x0	  },
+	{0x110,    0xffffffff,		 0x295600 },
+	{0x111,    0xffffffff,		 0x33	  },
+	{0x112,    0xffffffff,		 0x0	  },
+	{0x113,    0xffffffff,		 0x0	  },
+	{0x114,    0xffffffff,		 0x0	  },
+	{0x118,    0xffffffff,		 0x2b5600 },
+	{0x119,    0xffffffff,		 0x3f	  },
+	{0x11a,    0xffffffff,		 0x0	  },
+	{0x11b,    0xffffffff,		 0x0	  },
+	{0x11c,    0xffffffff,		 0x0	  },
+	{0x120,    0xffffffff,		 0x2b5600 },
+	{0x121,    0xffffffff,		 0x3f	  },
+	{0x122,    0xffffffff,		 0x0	  },
+	{0x123,    0xffffffff,		 0x0	  },
+	{0x124,    0xffffffff,		 0x0	  },
+	{0x128,    0xffffffff,		 0x295600 },
+	{0x129,    0xffffffff,		 0x3f	  },
+	{0x12a,    0xffffffff,		 0x0	  },
+	{0x12b,    0xffffffff,		 0x0	  },
+	{0x12c,    0xffffffff,		 0x0	  },
+	{0x130,    0xffffffff,		 0x295400 },
+	{0x131,    0xffffffff,		 0x3f	  },
+	{0x132,    0xffffffff,		 0x0	  },
+	{0x133,    0xffffffff,		 0x0	  },
+	{0x134,    0xffffffff,		 0x0	  },
+	{0x138,    0xffffffff,		 0x295400 },
+	{0x139,    0xffffffff,		 0x33	  },
+	{0x13a,    0xffffffff,		 0x0	  },
+	{0x13b,    0xffffffff,		 0x0	  },
+	{0x13c,    0xffffffff,		 0x0	  },
+	{0x140,    0xffffffff,		 0x295400 },
+	{0x141,    0xffffffff,		 0x9	  },
+	{0x142,    0xffffffff,		 0x0	  },
+	{0x143,    0xffffffff,		 0x0	  },
+	{0x144,    0xffffffff,		 0x0	  },
+	{0x148,    0xffffffff,		 0x295400 },
+	{0x149,    0xffffffff,		 0xea	  },
+	{0x14a,    0xffffffff,		 0x0	  },
+	{0x14b,    0xffffffff,		 0x0	  },
+	{0x14c,    0xffffffff,		 0x0	  },
+	{0x150,    0xffffffff,		 0x295400 },
+	{0x151,    0xffffffff,		 0xd4	  },
+	{0x152,    0xffffffff,		 0x0	  },
+	{0x153,    0xffffffff,		 0x0	  },
+	{0x154,    0xffffffff,		 0x0	  },
+	{0x158,    0xffffffff,		 0x295400 },
+	{0x159,    0xffffffff,		 0xc5	  },
+	{0x15a,    0xffffffff,		 0x0	  },
+	{0x15b,    0xffffffff,		 0x0	  },
+	{0x15c,    0xffffffff,		 0x0	  },
+	{0x160,    0xffffffff,		 0x295400 },
+	{0x161,    0xffffffff,		 0xc1	  },
+	{0x162,    0xffffffff,		 0x0	  },
+	{0x163,    0xffffffff,		 0x0	  },
+	{0x164,    0xffffffff,		 0x0	  },
+	{0x168,    0xffffffff,		 0x295400 },
+	{0x169,    0xffffffff,		 0xcb	  },
+	{0x16a,    0xffffffff,		 0x0	  },
+	{0x16b,    0xffffffff,		 0x0	  },
+	{0x16c,    0xffffffff,		 0x0	  },
+	{0x170,    0xffffffff,		 0x295400 },
+	{0x171,    0xffffffff,		 0xd6	  },
+	{0x172,    0xffffffff,		 0x0	  },
+	{0x173,    0xffffffff,		 0x0	  },
+	{0x174,    0xffffffff,		 0x0	  },
+	{0x178,    0xffffffff,		 0x295600 },
+	{0x179,    0xffffffff,		 0xdb	  },
+	{0x17a,    0xffffffff,		 0x0	  },
+	{0x17b,    0xffffffff,		 0x0	  },
+	{0x17c,    0xffffffff,		 0x0	  },
+	{0x180,    0xffffffff,		 0x295400 },
+	{0x181,    0xffffffff,		 0xec	  },
+	{0x182,    0xffffffff,		 0x0	  },
+	{0x183,    0xffffffff,		 0x0	  },
+	{0x184,    0xffffffff,		 0x0	  },
+	{0x188,    0xffffffff,		 0x295600 },
+	{0x189,    0xffffffff,		 0xf9	  },
+	{0x18a,    0xffffffff,		 0x0	  },
+	{0x18b,    0xffffffff,		 0x0	  },
+	{0x18c,    0xffffffff,		 0x0	  },
+	{0x190,    0xffffffff,		 0x295600 },
+	{0x191,    0xffffffff,		 0x3	  },
+	{0x192,    0xffffffff,		 0x0	  },
+	{0x193,    0xffffffff,		 0x0	  },
+	{0x194,    0xffffffff,		 0x0	  },
+	{0x198,    0xffffffff,		 0x295600 },
+	{0x199,    0xffffffff,		 0x9	  },
+	{0x19a,    0xffffffff,		 0x0	  },
+	{0x19b,    0xffffffff,		 0x0	  },
+	{0x19c,    0xffffffff,		 0x0	  },
+	{0x1a0,    0xffffffff,		 0x295400 },
+	{0x1a1,    0xffffffff,		 0xc	  },
+	{0x1a2,    0xffffffff,		 0x0	  },
+	{0x1a3,    0xffffffff,		 0x0	  },
+	{0x1a4,    0xffffffff,		 0x0	  },
+	{0x1a8,    0xffffffff,		 0x295400 },
+	{0x1a9,    0xffffffff,		 0xe	  },
+	{0x1aa,    0xffffffff,		 0x0	  },
+	{0x1ab,    0xffffffff,		 0x0	  },
+	{0x1ac,    0xffffffff,		 0x0	  },
+	{0x1b0,    0xffffffff,		 0x295400 },
+	{0x1b1,    0xffffffff,		 0xc	  },
+	{0x1b2,    0xffffffff,		 0x0	  },
+	{0x1b3,    0xffffffff,		 0x0	  },
+	{0x1b4,    0xffffffff,		 0x0	  },
+	{0x1b8,    0xffffffff,		 0x295400 },
+	{0x1b9,    0xffffffff,		 0x7	  },
+	{0x1ba,    0xffffffff,		 0x0	  },
+	{0x1bb,    0xffffffff,		 0x0	  },
+	{0x1bc,    0xffffffff,		 0x0	  },
+	{0x1c0,    0xffffffff,		 0x295400 },
+	{0x1c1,    0xffffffff,		 0xfb	  },
+	{0x1c2,    0xffffffff,		 0x0	  },
+	{0x1c3,    0xffffffff,		 0x0	  },
+	{0x1c4,    0xffffffff,		 0x0	  },
+	{0x1c8,    0xffffffff,		 0x295400 },
+	{0x1c9,    0xffffffff,		 0xf2	  },
+	{0x1ca,    0xffffffff,		 0x0	  },
+	{0x1cb,    0xffffffff,		 0x0	  },
+	{0x1cc,    0xffffffff,		 0x0	  },
+	{0x1d0,    0xffffffff,		 0x2295400},
+	{0x1d1,    0xffffffff,		 0xee	  },
+	{0x1d2,    0xffffffff,		 0x0	  },
+	{0x1d3,    0xffffffff,		 0x0	  },
+	{0x1d4,    0xffffffff,		 0x0	  },
+	{0x1d8,    0xffffffff,		 0x4295400},
+	{0x1d9,    0xffffffff,		 0xf5	  },
+	{0x1da,    0xffffffff,		 0x0	  },
+	{0x1db,    0xffffffff,		 0x0	  },
+	{0x1dc,    0xffffffff,		 0x0	  },
+	{0x1e0,    0xffffffff,		 0x8295400},
+	{0x1e1,    0xffffffff,		 0x1	  },
+	{0x1e2,    0xffffffff,		 0x0	  },
+	{0x1e3,    0xffffffff,		 0x0	  },
+	{0x1e4,    0xffffffff,		 0x0	  },
+	{0x1e8,    0xffffffff,		 0x8295400},
+	{0x1e9,    0xffffffff,		 0x5	  },
+	{0x1ea,    0xffffffff,		 0x0	  },
+	{0x1eb,    0xffffffff,		 0x0	  },
+	{0x1ec,    0xffffffff,		 0x0	  },
+	{0x1f0,    0xffffffff,		 0x8295400},
+	{0x1f1,    0xffffffff,		 0x5	  },
+	{0x1f2,    0xffffffff,		 0x0	  },
+	{0x1f3,    0xffffffff,		 0x0	  },
+	{0x1f4,    0xffffffff,		 0x0	  },
+	{0x1f8,    0xffffffff,		 0x4295400},
+	{0x1f9,    0xffffffff,		 0x7	  },
+	{0x1fa,    0xffffffff,		 0x0	  },
+	{0x1fb,    0xffffffff,		 0x0	  },
+	{0x1fc,    0xffffffff,		 0x0	  },
+	/* optimize */ 
+	{0x200,    0xffffffff,		 0x0	  },
+	{0x201,    0xffffffff,		 0x0	  },
+	{0x202,    0xffffffff,		 0x0	  },
+	{0x203,    0xffffffff,		 0x8000400},
+	{0x204,    0xffffffff,		 0x90	  },
+	{0x206,    0xffffffff,		 0x0	  },
+	{0x207,    0xffffffff,		 0x1f60000},
+	{0x208,    0xffffffff,		 0x76	  },
+	{0x209,    0xffffffff,		 0x0	  },
+	{0x20a,    0xffffffff,		 0x0	  },
+	{0x20f,    0xf, 			 0x0,	  },
+	{0x205,    0xffffffff,		 0x437077f},
+	{0x1da1,   0xc000,			 0x0,	  },
+	{0x1da2,   0xffffffff,		 0xfff	  },
+	{0x100,    0xffffffff,		 0xa1100  },
+	{0x101,    0xffffffff,		 0xc	  },
+	{0x102,    0xffffffff,		 0x0	  },
+	{0x103,    0xffffffff,		 0x0	  },
+	{0x104,    0xffffffff,		 0x0	  },
+	{0x108,    0xffffffff,		 0xd1100  },
+	{0x109,    0xffffffff,		 0x1f	  },
+	{0x10a,    0xffffffff,		 0x0	  },
+	{0x10b,    0xffffffff,		 0x0	  },
+	{0x10c,    0xffffffff,		 0x0	  },
+	{0x110,    0xffffffff,		 0xf1300  },
+	{0x111,    0xffffffff,		 0x33	  },
+	{0x112,    0xffffffff,		 0x0	  },
+	{0x113,    0xffffffff,		 0x0	  },
+	{0x114,    0xffffffff,		 0x0	  },
+	{0x118,    0xffffffff,		 0xf1300  },
+	{0x119,    0xffffffff,		 0x3f	  },
+	{0x11a,    0xffffffff,		 0x0	  },
+	{0x11b,    0xffffffff,		 0x0	  },
+	{0x11c,    0xffffffff,		 0x0	  },
+	{0x120,    0xffffffff,		 0xf1300  },
+	{0x121,    0xffffffff,		 0x40	  },
+	{0x122,    0xffffffff,		 0x0	  },
+	{0x123,    0xffffffff,		 0x0	  },
+	{0x124,    0xffffffff,		 0x0	  },
+	{0x128,    0xffffffff,		 0xf1100  },
+	{0x129,    0xffffffff,		 0x40	  },
+	{0x12a,    0xffffffff,		 0x0	  },
+	{0x12b,    0xffffffff,		 0x0	  },
+	{0x12c,    0xffffffff,		 0x0	  },
+	{0x130,    0xffffffff,		 0xd0f00  },
+	{0x131,    0xffffffff,		 0x3f	  },
+	{0x132,    0xffffffff,		 0x0	  },
+	{0x133,    0xffffffff,		 0x0	  },
+	{0x134,    0xffffffff,		 0x0	  },
+	{0x138,    0xffffffff,		 0xa0d00  },
+	{0x139,    0xffffffff,		 0x32	  },
+	{0x13a,    0xffffffff,		 0x0	  },
+	{0x13b,    0xffffffff,		 0x0	  },
+	{0x13c,    0xffffffff,		 0x0	  },
+	{0x140,    0xffffffff,		 0x80a00  },
+	{0x141,    0xffffffff,		 0x9	  },
+	{0x142,    0xffffffff,		 0x0	  },
+	{0x143,    0xffffffff,		 0x0	  },
+	{0x144,    0xffffffff,		 0x0	  },
+	{0x148,    0xffffffff,		 0x80a00  },
+	{0x149,    0xffffffff,		 0xea	  },
+	{0x14a,    0xffffffff,		 0x0	  },
+	{0x14b,    0xffffffff,		 0x0	  },
+	{0x14c,    0xffffffff,		 0x0	  },
+	{0x150,    0xffffffff,		 0xa0a00  },
+	{0x151,    0xffffffff,		 0xd4	  },
+	{0x152,    0xffffffff,		 0x0	  },
+	{0x153,    0xffffffff,		 0x0	  },
+	{0x154,    0xffffffff,		 0x0	  },
+	{0x158,    0xffffffff,		 0xa0800  },
+	{0x159,    0xffffffff,		 0xc3	  },
+	{0x15a,    0xffffffff,		 0x0	  },
+	{0x15b,    0xffffffff,		 0x0	  },
+	{0x15c,    0xffffffff,		 0x0	  },
+	{0x160,    0xffffffff,		 0xa0800  },
+	{0x161,    0xffffffff,		 0xc0	  },
+	{0x162,    0xffffffff,		 0x0	  },
+	{0x163,    0xffffffff,		 0x0	  },
+	{0x164,    0xffffffff,		 0x0	  },
+	{0x168,    0xffffffff,		 0x80800  },
+	{0x169,    0xffffffff,		 0xcb	  },
+	{0x16a,    0xffffffff,		 0x0	  },
+	{0x16b,    0xffffffff,		 0x0	  },
+	{0x16c,    0xffffffff,		 0x0	  },
+	{0x170,    0xffffffff,		 0x60800  },
+	{0x171,    0xffffffff,		 0xd4	  },
+	{0x172,    0xffffffff,		 0x0	  },
+	{0x173,    0xffffffff,		 0x0	  },
+	{0x174,    0xffffffff,		 0x0	  },
+	{0x178,    0xffffffff,		 0x40600  },
+	{0x179,    0xffffffff,		 0xdb	  },
+	{0x17a,    0xffffffff,		 0x0	  },
+	{0x17b,    0xffffffff,		 0x0	  },
+	{0x17c,    0xffffffff,		 0x0	  },
+	{0x180,    0xffffffff,		 0x60600  },
+	{0x181,    0xffffffff,		 0xea	  },
+	{0x182,    0xffffffff,		 0x0	  },
+	{0x183,    0xffffffff,		 0x0	  },
+	{0x184,    0xffffffff,		 0x0	  },
+	{0x188,    0xffffffff,		 0x60600  },
+	{0x189,    0xffffffff,		 0xf7	  },
+	{0x18a,    0xffffffff,		 0x0	  },
+	{0x18b,    0xffffffff,		 0x0	  },
+	{0x18c,    0xffffffff,		 0x0	  },
+	{0x190,    0xffffffff,		 0x60600  },
+	{0x191,    0xffffffff,		 0x3	  },
+	{0x192,    0xffffffff,		 0x0	  },
+	{0x193,    0xffffffff,		 0x0	  },
+	{0x194,    0xffffffff,		 0x0	  },
+	{0x198,    0xffffffff,		 0x80800  },
+	{0x199,    0xffffffff,		 0x9	  },
+	{0x19a,    0xffffffff,		 0x0	  },
+	{0x19b,    0xffffffff,		 0x0	  },
+	{0x19c,    0xffffffff,		 0x0	  },
+	{0x1a0,    0xffffffff,		 0x60a00  },
+	{0x1a1,    0xffffffff,		 0xc	  },
+	{0x1a2,    0xffffffff,		 0x0	  },
+	{0x1a3,    0xffffffff,		 0x0	  },
+	{0x1a4,    0xffffffff,		 0x0	  },
+	{0x1a8,    0xffffffff,		 0x60d00  },
+	{0x1a9,    0xffffffff,		 0xe	  },
+	{0x1aa,    0xffffffff,		 0x0	  },
+	{0x1ab,    0xffffffff,		 0x0	  },
+	{0x1ac,    0xffffffff,		 0x0	  },
+	{0x1b0,    0xffffffff,		 0x80d00  },
+	{0x1b1,    0xffffffff,		 0xc	  },
+	{0x1b2,    0xffffffff,		 0x0	  },
+	{0x1b3,    0xffffffff,		 0x0	  },
+	{0x1b4,    0xffffffff,		 0x0	  },
+	{0x1b8,    0xffffffff,		 0xa0d00  },
+	{0x1b9,    0xffffffff,		 0x7	  },
+	{0x1ba,    0xffffffff,		 0x0	  },
+	{0x1bb,    0xffffffff,		 0x0	  },
+	{0x1bc,    0xffffffff,		 0x0	  },
+	{0x1c0,    0xffffffff,		 0xf0f00  },
+	{0x1c1,    0xffffffff,		 0xfb	  },
+	{0x1c2,    0xffffffff,		 0x0	  },
+	{0x1c3,    0xffffffff,		 0x0	  },
+	{0x1c4,    0xffffffff,		 0x0	  },
+	{0x1c8,    0xffffffff,		 0x110f00 },
+	{0x1c9,    0xffffffff,		 0xf2	  },
+	{0x1ca,    0xffffffff,		 0x0	  },
+	{0x1cb,    0xffffffff,		 0x0	  },
+	{0x1cc,    0xffffffff,		 0x0	  },
+	{0x1d0,    0xffffffff,		 0x131100 },
+	{0x1d1,    0xffffffff,		 0xee	  },
+	{0x1d2,    0xffffffff,		 0x0	  },
+	{0x1d3,    0xffffffff,		 0x0	  },
+	{0x1d4,    0xffffffff,		 0x0	  },
+	{0x1d8,    0xffffffff,		 0x131500 },
+	{0x1d9,    0xffffffff,		 0xf5	  },
+	{0x1da,    0xffffffff,		 0x0	  },
+	{0x1db,    0xffffffff,		 0x0	  },
+	{0x1dc,    0xffffffff,		 0x0	  },
+	{0x1e0,    0xffffffff,		 0x151a00 },
+	{0x1e1,    0xffffffff,		 0x1	  },
+	{0x1e2,    0xffffffff,		 0x0	  },
+	{0x1e3,    0xffffffff,		 0x0	  },
+	{0x1e4,    0xffffffff,		 0x0	  },
+	{0x1e8,    0xffffffff,		 0x171c00 },
+	{0x1e9,    0xffffffff,		 0x5	  },
+	{0x1ea,    0xffffffff,		 0x0	  },
+	{0x1eb,    0xffffffff,		 0x0	  },
+	{0x1ec,    0xffffffff,		 0x0	  },
+	{0x1f0,    0xffffffff,		 0x171a00 },
+	{0x1f1,    0xffffffff,		 0x5	  },
+	{0x1f2,    0xffffffff,		 0x0	  },
+	{0x1f3,    0xffffffff,		 0x0	  },
+	{0x1f4,    0xffffffff,		 0x0	  },
+	{0x1f8,    0xffffffff,		 0x131500 },
+	{0x1f9,    0xffffffff,		 0x7	  },
+	{0x1fa,    0xffffffff,		 0x0	  },
+	{0x1fb,    0xffffffff,		 0x0	  },
+	{0x1fc,    0xffffffff,		 0x0	  },
+
+};
+void vdin_set_cm2(unsigned int offset,unsigned int index)
+{
+	unsigned int i=0,cursor=0;
+	pr_info("%s:vdin cm2 use %s configuration.\n",index?"optimize":"enhancement");
+	for(i=0;i<CM2_REG_NUM;i++){
+		cursor = i+index*CM2_REG_NUM;
+		WR(VDIN_CHROMA_ADDR_PORT,vdin_cm2_table[cursor].addr);
+		WR(VDIN_CHROMA_DATA_PORT,(vdin_cm2_table[cursor].mask & vdin_cm2_table[cursor].value));
+	}
+}
diff --git a/drivers/amlogic/tvin/vdin/vdin_ctl.h b/drivers/amlogic/tvin/vdin/vdin_ctl.h
index 10d4303e4f59..a5e5ba775d52 100755
--- a/drivers/amlogic/tvin/vdin/vdin_ctl.h
+++ b/drivers/amlogic/tvin/vdin/vdin_ctl.h
@@ -125,6 +125,12 @@ typedef struct vdin_hist_cfg_s {
         unsigned int                vend;
 } vdin_hist_cfg_t;
 
+typedef struct vdin_cm2_s {
+	unsigned short addr;
+	unsigned int   mask;
+	unsigned int   value;
+} vdin_cm2_t;
+
 // *****************************************************************************
 // ******** GLOBAL FUNCTION CLAIM ********
 // *****************************************************************************
@@ -162,4 +168,5 @@ extern void vdin_output_ctl(unsigned int offset, unsigned int output_flag);
 extern void vdin_wr_reverse(unsigned int offset, bool hreverse, bool vreverse);
 extern void vdin_set_hvscale(struct vdin_dev_s *devp);
 extern void set_chroma_regs(unsigned int offset, unsigned int h_active,unsigned int v_active);
+extern void vdin_set_cm2(unsigned int offset,unsigned int index);
 #endif
diff --git a/drivers/amlogic/tvin/vdin/vdin_drv.c b/drivers/amlogic/tvin/vdin/vdin_drv.c
index 156cc2bc4ba4..31b958d7d504 100755
--- a/drivers/amlogic/tvin/vdin/vdin_drv.c
+++ b/drivers/amlogic/tvin/vdin/vdin_drv.c
@@ -2504,8 +2504,10 @@ static ssize_t vdin_cm2_store(struct device *dev,
 		data[4] = aml_read_reg32(VCBUS_REG_ADDR(data_port));
 
 		pr_info("rm:[0x%x]-->[0x%x][0x%x][0x%x][0x%x][0x%x] \n",addr, data[0],data[1],data[2],data[3],data[4]);
-	}
-	else {
+	}else if(!strcmp(parm[0],"config")){
+		val = simple_strtol(parm[1],NULL,10);
+		vdin_set_cm2(devp->addr_offset,val);
+	}else {
 		pr_info("invalid command\n");
 		pr_info("please: cat /sys/class/vdin/vdin0/bit");
 	}
-- 
2.19.0

