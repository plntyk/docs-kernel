From 3bdbae1e410eea9196e2bdb6896d2046ccb4aaf2 Mon Sep 17 00:00:00 2001
From: "xiaoyu.yuan" <xiaoyu.yuan@droid05.amlogic.com>
Date: Thu, 7 Nov 2013 17:27:34 +0800
Subject: [PATCH 1759/5965] add touch focus for ov5647

---
 drivers/amlogic/camera/common/config_parser.c |  2 +-
 drivers/amlogic/camera/ov5647.c               | 95 ++++++++++++++++---
 2 files changed, 82 insertions(+), 15 deletions(-)

diff --git a/drivers/amlogic/camera/common/config_parser.c b/drivers/amlogic/camera/common/config_parser.c
index 7514aa02f7e2..a81736ba2947 100755
--- a/drivers/amlogic/camera/common/config_parser.c
+++ b/drivers/amlogic/camera/common/config_parser.c
@@ -1133,7 +1133,7 @@ int generate_para(cam_parameter_t *para,para_index_t pindex){
         scene = para->xml_scenes;
         memcpy(&(scene->ae),cf->scene.scene[pindex.scenes_index].export,97*sizeof(unsigned int));
         memcpy(&(scene->awb),cf->scene.scene[pindex.scenes_index].export + 97,104*sizeof(unsigned int));
-        memcpy(&(scene->af),cf->scene.scene[pindex.scenes_index].export + 201,1*sizeof(unsigned int));
+       // memcpy(&(scene->af),cf->scene.scene[pindex.scenes_index].export + 201,1*sizeof(unsigned int));
     }else{
         para->xml_scenes = NULL;
     }
diff --git a/drivers/amlogic/camera/ov5647.c b/drivers/amlogic/camera/ov5647.c
index 777785d5d2c2..0c16ba2227c7 100755
--- a/drivers/amlogic/camera/ov5647.c
+++ b/drivers/amlogic/camera/ov5647.c
@@ -121,6 +121,8 @@ static int i_index = 3;
 static int t_index = -1;
 static int dest_hactive = 640;
 static int dest_vactive = 480;
+static int capture_delay = 1000;
+module_param(capture_delay,int,0664);
 /* supported controls */
 static struct v4l2_queryctrl ov5647_qctrl[] = {
 	{
@@ -228,20 +230,28 @@ static struct v4l2_queryctrl ov5647_qctrl[] = {
 		.name		= "Rotate",
 		.minimum	= 0,
 		.maximum	= 270,
-		.step		= 90,
-		.default_value	= 0,
-		.flags         = V4L2_CTRL_FLAG_SLIDER,
-	},{
+        .step		= 90,
+        .default_value	= 0,
+        .flags         = V4L2_CTRL_FLAG_SLIDER,
+    },{
         .id            = V4L2_CID_AUTO_FOCUS_STATUS,
-        .type          = 8,//V4L2_CTRL_TYPE_BITMASK,
-        .name          = "focus status",
-        .minimum       = 0,
-        .maximum       = ~3,
-        .step          = 0x1,
-        .default_value = V4L2_AUTO_FOCUS_STATUS_IDLE,
-        .flags         = V4L2_CTRL_FLAG_READ_ONLY,
-	}
-
+            .type          = 8,//V4L2_CTRL_TYPE_BITMASK,
+            .name          = "focus status",
+            .minimum       = 0,
+            .maximum       = ~3,
+            .step          = 0x1,
+            .default_value = V4L2_AUTO_FOCUS_STATUS_IDLE,
+            .flags         = V4L2_CTRL_FLAG_READ_ONLY,
+    },{
+        .id		= V4L2_CID_FOCUS_ABSOLUTE,
+            .type		= V4L2_CTRL_TYPE_INTEGER,
+		.name		= "focus center",
+		.minimum	= 0,
+		.maximum	= ((2000) << 16) | 2000,
+		.step		= 1,
+		.default_value	= (1000 << 16) | 1000,
+		.flags         = V4L2_CTRL_FLAG_SLIDER,
+ 	}
 };
 
 static struct v4l2_frmivalenum ov5647_frmivalenum[]={
@@ -2239,6 +2249,53 @@ void set_resolution_param(struct ov5647_device *dev, resolution_param_t* res_par
     OV5647_set_new_format(ov5647_h_active,ov5647_v_active,current_fr);// should set new para
 }    /* OV5647_set_resolution */
 
+static int set_focus_zone(struct ov5647_device *dev, int value)
+{
+	int xc, yc;
+	struct i2c_client *client = v4l2_get_subdevdata(&dev->sd);
+	int retry_count = 10;
+	int ret = -1;
+	
+	xc = ((value >> 16) & 0xffff) * 80 / 2000;
+	yc = (value & 0xffff) * 60 / 2000;
+	printk("xc = %d, yc = %d\n", xc, yc);
+	
+	dev->cam_para->xml_scenes->af.x = xc;
+	dev->cam_para->xml_scenes->af.y = yc;	
+	dev->cam_para->xml_scenes->af.radius = 40;
+	dev->cam_para->xml_scenes->af.detect_step = 16;
+	dev->cam_para->xml_scenes->af.deta_ave_ratio = 10;
+	dev->cam_para->xml_scenes->af.af_fail_ratio = 20;
+	dev->cam_para->xml_scenes->af.af_retry_max = 2;
+	dev->cam_para->xml_scenes->af.step[0] = 100;
+	dev->cam_para->xml_scenes->af.step[1] = 150;
+	dev->cam_para->xml_scenes->af.step[2] = 200;
+	dev->cam_para->xml_scenes->af.step[3] = 250;
+	dev->cam_para->xml_scenes->af.step[4] = 290;
+	dev->cam_para->xml_scenes->af.step[5] = 330;
+	dev->cam_para->xml_scenes->af.step[6] = 370;
+	dev->cam_para->xml_scenes->af.step[7] = 400;		
+	dev->cam_para->xml_scenes->af.step[8] = 430;		
+	dev->cam_para->xml_scenes->af.step[9] = 460;
+	dev->cam_para->xml_scenes->af.step[10] = 480;		
+    dev->cam_para->xml_scenes->af.step[11] = 500;
+    dev->cam_para->xml_scenes->af.step[12] = 520;
+    dev->cam_para->xml_scenes->af.step[13] = 530;
+    dev->cam_para->xml_scenes->af.step[14] = 540;
+    dev->cam_para->xml_scenes->af.step[15] = 550;
+	dev->cam_para->xml_scenes->af.jump_offset = 100;
+	dev->cam_para->xml_scenes->af.field_delay = 1;
+	
+	dev->cam_para->cam_command = CAM_COMMAND_TOUCH_WINDOW;
+	dev->fe_arg.port = TVIN_PORT_ISP;
+	dev->fe_arg.index = 0;
+	dev->fe_arg.arg = (void *)(dev->cam_para);
+	if(dev->vops != NULL){
+	  dev->vops->tvin_fe_func(0,&dev->fe_arg);
+	}
+	return 0;
+}
+
 unsigned char v4l_2_ov5647(int val)
 {
 	int ret=val/0x20;
@@ -2310,6 +2367,14 @@ static int ov5647_setting(struct ov5647_device *dev,int PROP_ID,int value )
 			printk(" set camera  rotate =%d. \n ",value);
 		}
 		break;
+	case V4L2_CID_FOCUS_ABSOLUTE:
+		printk("V4L2_CID_FOCUS_ABSOLUTE\n");
+		if(ov5647_qctrl[13].default_value!=value){
+			ov5647_qctrl[13].default_value=value;
+			printk(" set camera  focus zone =%d. \n ",value);
+			set_focus_zone(dev, value);
+		}
+		break;
   case V4L2_CID_PRIVACY:       
         break;
 	default:
@@ -2841,7 +2906,7 @@ static int vidioc_streamon(struct file *file, void *priv, enum v4l2_buf_type i)
     para.fmt = TVIN_SIG_FMT_MAX;
     para.frame_rate = ov5647_frmintervals_active.denominator;
     para.h_active = ov5647_h_active;
-    para.v_active = ov5647_v_active;
+    para.v_active = ov5647_v_active - 2;// delete the last two line data
     if(is_capture == 0){
    		para.dest_hactive = dest_hactive;
    		para.dest_vactive = dest_vactive;
@@ -2881,6 +2946,8 @@ static int vidioc_streamon(struct file *file, void *priv, enum v4l2_buf_type i)
     OV5647_set_param_wb(fh->dev,ov5647_qctrl[4].default_value);
     OV5647_set_param_exposure(fh->dev,ov5647_qctrl[5].default_value);
     OV5647_set_param_effect(fh->dev,ov5647_qctrl[6].default_value);
+    if(is_capture == 1)
+    	msleep(capture_delay);
     return ret;
 }
 
-- 
2.19.0

