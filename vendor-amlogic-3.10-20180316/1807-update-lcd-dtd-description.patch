From ac1cd3ca98a24de3a3a61f625b3d6e4fb0b20b1e Mon Sep 17 00:00:00 2001
From: Evoke Zhang <evoke.zhang@amlogic.com>
Date: Mon, 11 Nov 2013 11:23:17 +0800
Subject: [PATCH 1807/5965] update lcd dtd description

---
 arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd |  44 ++++----
 arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd |  48 ++++-----
 arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd |  20 ++--
 arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd |  20 ++--
 arch/arm/boot/dts/amlogic/meson8_skt.dtd     |  20 ++--
 drivers/amlogic/display/backlight/aml.dtd    |   4 +-
 drivers/amlogic/display/vout/aml_lcd.dtd     | 105 +++++++++++++++----
 7 files changed, 163 insertions(+), 98 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd
index b0cd1740b097..a720a39540ec 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd
@@ -839,10 +839,10 @@ sdio{
 		bl_level_default=<102>;	/** default brightness level */
 		
 		/* backlight power ctrl */
-		bl_ctrl_method=<1>;	/** backlight control method(0 for gpio, 1 for pwm_negative, 2 for pwm_positive. decided by hardware design) */
+		bl_ctrl_method=<1>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive. decided by hardware design) */
 		bl_gpio_port="GPIODV_28";	/** backlight control gpio port */
 		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
-		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0 for use pwm_port only, 1 for use bl_gpio_port to control on/off) */
+		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
 		bl_pwm_freq=<1000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
 		bl_pwm_duty_max_min=<100 20>;	/** brightness diminig duty_max, duty_min : (unit: %, positive logic, only for pwm control method) */
 	};
@@ -931,19 +931,19 @@ sdio{
 		
 		/* below configs are decided by hardware design, you can modify them if needed. */
 		//ttl config
-		ttl_rb_bit_swap=<0 0>;	/** ttl rb_swap, bit_swap : (0 for normal, 1 for swap) */
+		ttl_rb_bit_swap=<0 0>;	/** ttl rb_swap, bit_swap : (0=normal, 1=swap) */
 		//lvds config
-		lvds_channel_pn_swap=<0>;	/** lvds channel pn swap(0 for normal, 1 for swap) */
+		lvds_channel_pn_swap=<0>;	/** lvds channel pn swap(0=normal, 1=swap) */
 		
 		/* recommend settings, you can modify them if needed. */
-		valid_hvsync_de=<1 1>;	/** hvsync_signal_valid, DE_signal_valid : (0 for disable signal, 1 for enable signal) */
+		valid_hvsync_de=<1 1>;	/** hvsync_signal_valid, DE_signal_valid : (0=disable signal, 1=enable signal) */
 		hsign_hoffset_vsign_voffset=<1 0 1 0>;	/** hsign, hoffset, vsign, voffset :("sign-offset" is a pair. sign: 0 for negative, 1 for positive) */
 		
-		dither_user_ctrl=<0 0x600>;	/**  dither_user(0 for auto setting, 1 for user define), dither_ctrl(user defined dither control, only valid when user_define=1) */
+		dither_user_ctrl=<0 0x600>;	/**  dither_user(0=auto setting, 1=user define), dither_ctrl(user defined dither control, only valid when user_define=1) */
 		vadj_brightness_contrast_saturation=<0x0 0x80 0x100>;	/** video adjust brightness, contrast, saturation */
 		
-		gamma_en_revert=<1 0>;	/** gamma_en(0 for disable gamma table, 1 for enable gamma table), gamma_table_revert(0 for normal, 1 for revert) */
-		gamma_multi_rgb_coeff=<0 100 100 100>;	/** gamma_multi(0 for single gamma, RGB are same, 1 for multi gamma, RGB are different), gamma_r_coeff(%), gamma_g_coeff(%), gamma_b_coeff(%) */
+		gamma_en_revert=<1 0>;	/** gamma_en(0=disable gamma table, 1=enable gamma table), gamma_table_revert(0=normal, 1=revert) */
+		gamma_multi_rgb_coeff=<0 100 100 100>;	/** gamma_multi(0=single gamma, RGB are same, 1=multi gamma, RGB are different), gamma_r_coeff(%), gamma_g_coeff(%), gamma_b_coeff(%) */
 		/** if gamma_multi=1, there must be 3 gamma tables, named as gamma_table_r, gamma_table_g, gamma_table_b */
 		gamma_table=<0 1 3 4 6 7 8 10 11 12 14 15 17 18 19 22 23 23 24 25 26 27 28 29 30 31 31 32 33 34 35 36 
 					37 37 38 39 40 41 42 43 44 45 46 47 48 49 51 52 53 54 55 56 57 58 60 61 61 62 63 64 66 67 68 69 
@@ -956,12 +956,12 @@ sdio{
 		
 		/* default settings, don't modify them unless there is display problem */
 		clock_spread_spectrum=<0>;	/** ss_level(0=disable, 1=0.5%, 2=1%, 3=2%, 4=3%, 5=4%, 6=5%) */
-		clock_auto_generation=<1>;	/** clk_auto_generation(0 for using customer clock parameters, as clk_pll_div_clk_ctrl defined, 1 for auto generate clock parameters by lcd_clock) */
+		clock_auto_generation=<1>;	/** clk_auto_generation(0=use customer clock parameters, as clk_pll_div_clk_ctrl defined, 1=auto generate clock parameters by lcd_clock) */
 		clk_pll_div_clk_ctrl=<0x1000038 0x918803 0x44003101>;	/** pll_ctrl, div_ctrl, clk_ctrl : (only valid when clk_auto_generation=0) */
 		lvds_vswing=<1>;	/** lvds_vswing_level(default level=1, support level 0,1,2,3,4) */
-		lvds_user_repack=<0 0>;	/** lvds_repack_user(0 for auto setting, 1 for user define), lvds_repack(0 for JEIDA data mapping, 1 for VESA data mapping. only valid when lvds_repack_user=1) */
-		edp_user_link_rate_lane_count=<1 1 4>;	/** edp_user(0 for auto setting, 1 for user define), link_rate(0 for 1.62G, 1 for 2.7G, only valid when edp_user=1), lane_count(support 1,2,4, only valid when edp_user=1) */
-		edp_link_adaptive_vswing=<0 0>;	/** adaptive(0 for fixed user defined vswing, 1 for auto setting vswing by training), vswing(support level 0,1,2,3, user defined vswing, only valid when adaptive=0) */
+		lvds_user_repack=<0 0>;	/** lvds_repack_user(0=auto setting, 1=user define), lvds_repack(0=JEIDA mode data mapping, 1=VESA mode data mapping. only valid when lvds_repack_user=1) */
+		edp_user_link_rate_lane_count=<1 1 4>;	/** edp_user(0=auto setting, 1=user define), link_rate(0=1.62G, 1=2.7G, only valid when edp_user=1), lane_count(support 1,2,4, only valid when edp_user=1) */
+		edp_link_adaptive_vswing=<0 0>;	/** adaptive(0=fixed user defined vswing, 1=auto setting vswing by training), vswing(support level 0,1,2,3, user defined vswing, only valid when adaptive=0) */
 		rgb_base_coeff=<0xf0 0x74a>;	/** rgb_base, rgb_coeff */
 		video_on_pixel_line=<120 22>;	/** video_on_pixel, video_on_line */
 		
@@ -1017,7 +1017,7 @@ sdio{
 		model_name="LP097QX1";	/** lcd model name */
 		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1025,7 +1025,7 @@ sdio{
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
@@ -1048,7 +1048,7 @@ sdio{
 		model_name="B080XAN01";	/** lcd model name */
 		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
 		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1056,7 +1056,7 @@ sdio{
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
                 dsi_clk = <250 280 1>;  /** min_clk, max_clk, scaler**/
 
                 lane_num=<4>;//lane num
@@ -1080,7 +1080,7 @@ sdio{
 		model_name="CLAP070NJ02";	/** lcd model name */
 		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1088,7 +1088,7 @@ sdio{
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
@@ -1106,7 +1106,7 @@ sdio{
 		model_name="TN070TN92";	/** lcd model name */
 		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1114,7 +1114,7 @@ sdio{
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
@@ -1132,7 +1132,7 @@ sdio{
 		model_name="LP097X02";	/** lcd model name */
 		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1140,7 +1140,7 @@ sdio{
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
index 0280d966806b..9e8e7cb24b85 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
@@ -806,10 +806,10 @@ sdio{
 		bl_level_default=<102>;	/** default brightness level */
 
 		/* backlight power ctrl */
-		bl_ctrl_method=<1>;	/** backlight control method(0 for gpio, 1 for pwm_negative, 2 for pwm_positive. decided by hardware design) */
+		bl_ctrl_method=<1>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive. decided by hardware design) */
 		bl_gpio_port="GPIODV_28";	/** backlight control gpio port */
 		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
-		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0 for use pwm_port only, 1 for use bl_gpio_port to control on/off) */
+		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
 		bl_pwm_freq=<1000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
 		bl_pwm_duty_max_min=<90 20>;	/** brightness diminig duty_max, duty_min : (unit: %, positive logic, only for pwm control method) */
 	};
@@ -898,19 +898,19 @@ sdio{
 
 		/* below configs are decided by hardware design, you can modify them if needed. */
 		//ttl config
-		ttl_rb_bit_swap=<0 0>;	/** ttl rb_swap, bit_swap : (0 for normal, 1 for swap) */
+		ttl_rb_bit_swap=<0 0>;	/** ttl rb_swap, bit_swap : (0=normal, 1=swap) */
 		//lvds config
-		lvds_channel_pn_swap=<0>;	/** lvds channel pn swap(0 for normal, 1 for swap) */
+		lvds_channel_pn_swap=<0>;	/** lvds channel pn swap(0=normal, 1=swap) */
 
 		/* recommend settings, you can modify them if needed. */
-		valid_hvsync_de=<1 1>;	/** hvsync_signal_valid, DE_signal_valid : (0 for disable signal, 1 for enable signal) */
+		valid_hvsync_de=<1 1>;	/** hvsync_signal_valid, DE_signal_valid : (0=disable signal, 1=enable signal) */
 		hsign_hoffset_vsign_voffset=<1 0 1 0>;	/** hsign, hoffset, vsign, voffset :("sign-offset" is a pair. sign: 0 for negative, 1 for positive) */
 
-		dither_user_ctrl=<0 0x000>;	/**  dither_user(0 for auto setting, 1 for user define), dither_ctrl(user defined dither control, only valid when user_define=1) */
+		dither_user_ctrl=<0 0x000>;	/**  dither_user(0=auto setting, 1=user define), dither_ctrl(user defined dither control, only valid when user_define=1) */
 		vadj_brightness_contrast_saturation=<0x0 0x80 0x100>;	/** video adjust brightness, contrast, saturation */
 
-		gamma_en_revert=<1 0>;	/** gamma_en(0 for disable gamma table, 1 for enable gamma table), gamma_table_revert(0 for normal, 1 for revert) */
-		gamma_multi_rgb_coeff=<0 100 100 100>;	/** gamma_multi(0 for single gamma, RGB are same, 1 for multi gamma, RGB are different), gamma_r_coeff(%), gamma_g_coeff(%), gamma_b_coeff(%) */
+		gamma_en_revert=<1 0>;	/** gamma_en(0=disable gamma table, 1=enable gamma table), gamma_table_revert(0=normal, 1=revert) */
+		gamma_multi_rgb_coeff=<0 100 100 100>;	/** gamma_multi(0=single gamma, RGB are same, 1=multi gamma, RGB are different), gamma_r_coeff(%), gamma_g_coeff(%), gamma_b_coeff(%) */
 		/** if gamma_multi=1, there must be 3 gamma tables, named as gamma_table_r, gamma_table_g, gamma_table_b */
 		gamma_table=<0 1 2 3 4 5 6 7 8 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
 					32 33 34 35 36 37 37 38 39 40 41 42 43 44 45 46 47 48 49 50 50 51 52 53 54 55 56 57 57 58 59 60 
@@ -923,12 +923,12 @@ sdio{
 
 		/* default settings, don't modify them unless there is display problem */
 		clock_spread_spectrum=<0>;	/** ss_level(0=disable, 1=0.5%, 2=1%, 3=2%, 4=3%, 5=4%, 6=5%) */
-		clock_auto_generation=<1>;	/** clk_auto_generation(0 for using customer clock parameters, as clk_pll_div_clk_ctrl defined, 1 for auto generate clock parameters by lcd_clock) */
+		clock_auto_generation=<1>;	/** clk_auto_generation(0=use customer clock parameters, as clk_pll_div_clk_ctrl defined, 1=auto generate clock parameters by lcd_clock) */
 		clk_pll_div_clk_ctrl=<0x100042b 0x18833 0x03a82102>;	/** pll_ctrl, div_ctrl, clk_ctrl : (only valid when clk_auto_generation=0) */
 		lvds_vswing=<1>;	/** lvds_vswing_level(default level=1, support level 0,1,2,3,4) */
-		lvds_user_repack=<0 0>;	/** lvds_repack_user(0 for auto setting, 1 for user define), lvds_repack(0 for JEIDA data mapping, 1 for VESA data mapping. only valid when lvds_repack_user=1) */
-		edp_user_link_rate_lane_count=<1 1 4>;	/** edp_user(0 for auto setting, 1 for user define), link_rate(0 for 1.62G, 1 for 2.7G, only valid when edp_user=1), lane_count(support 1,2,4, only valid when edp_user=1) */
-		edp_link_adaptive_vswing=<0 0>;	/** adaptive(0 for fixed user defined vswing, 1 for auto setting vswing by training), vswing(support level 0,1,2,3, user defined vswing, only valid when adaptive=0) */
+		lvds_user_repack=<0 0>;	/** lvds_repack_user(0=auto setting, 1=user define), lvds_repack(0=JEIDA mode data mapping, 1=VESA mode data mapping. only valid when lvds_repack_user=1) */
+		edp_user_link_rate_lane_count=<1 1 4>;	/** edp_user(0=auto setting, 1=user define), link_rate(0=1.62G, 1=2.7G, only valid when edp_user=1), lane_count(support 1,2,4, only valid when edp_user=1) */
+		edp_link_adaptive_vswing=<0 0>;	/** adaptive(0=fixed user defined vswing, 1=auto setting vswing by training), vswing(support level 0,1,2,3, user defined vswing, only valid when adaptive=0) */
 		rgb_base_coeff=<0xf0 0x74a>;	/** rgb_base, rgb_coeff */
 		video_on_pixel_line=<177 116>;  /** video_on_pixel, video_on_line */  //for mipi 177=180-3, 180=hvsa+hfp+hbp, 116=vsa+vfp+vbp
 
@@ -984,7 +984,7 @@ sdio{
 		model_name="LP097QX1";	/** lcd model name */
 		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -992,7 +992,7 @@ sdio{
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
@@ -1016,7 +1016,7 @@ sdio{
 		model_name="B080XAN01";	/** lcd model name */
 		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
 		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1024,7 +1024,7 @@ sdio{
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
                 dsi_clk = <500 560 1>;  /** min_clk, max_clk, scaler**/
 
                 lane_num=<4>;//lane num
@@ -1048,7 +1048,7 @@ sdio{
 		model_name="CLAP070NJ02";	/** lcd model name */
 		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1056,7 +1056,7 @@ sdio{
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
@@ -1074,7 +1074,7 @@ sdio{
 		model_name="TN070TN92";	/** lcd model name */
 		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1082,7 +1082,7 @@ sdio{
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
@@ -1100,7 +1100,7 @@ sdio{
 		model_name="LP097X02";	/** lcd model name */
 		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1108,7 +1108,7 @@ sdio{
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_CLAA101FP05XG>
@@ -1132,7 +1132,7 @@ sdio{
 		model_name="CLAA101FP05XG";	/** lcd model name */
 		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<216 135>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
 		resolution=<1920 1200>;	/** horizontal resolution, vertical resolution */
 		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -1140,7 +1140,7 @@ sdio{
 		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
                 dsi_clk = <900 1000 1>;  /** min_clk, max_clk, scaler**/
                 factor = < 2 3 >;
 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
index f3febb53205f..faa2658cee0c 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
@@ -707,7 +707,7 @@ interrupts = <0     137     0x04
 		model_name="LP097QX1";	/** lcd model name */
 		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -715,7 +715,7 @@ interrupts = <0     137     0x04
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
@@ -738,7 +738,7 @@ interrupts = <0     137     0x04
 		model_name="B080XAN01";	/** lcd model name */
 		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
 		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -746,7 +746,7 @@ interrupts = <0     137     0x04
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
                 dsi_clk = <250 280 1>;  /** min_clk, max_clk, scaler**/
 
                 lane_num=<4>;//lane num
@@ -770,7 +770,7 @@ interrupts = <0     137     0x04
 		model_name="CLAP070NJ02";	/** lcd model name */
 		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -778,7 +778,7 @@ interrupts = <0     137     0x04
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
@@ -796,7 +796,7 @@ interrupts = <0     137     0x04
 		model_name="TN070TN92";	/** lcd model name */
 		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -804,7 +804,7 @@ interrupts = <0     137     0x04
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
@@ -822,7 +822,7 @@ interrupts = <0     137     0x04
 		model_name="LP097X02";	/** lcd model name */
 		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -830,7 +830,7 @@ interrupts = <0     137     0x04
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 /// ***************************************************************************************
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
index 531aef63ee2f..1f6452ad46e1 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
@@ -708,7 +708,7 @@ sdio{
 		model_name="LP097QX1";	/** lcd model name */
 		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -716,7 +716,7 @@ sdio{
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
@@ -739,7 +739,7 @@ sdio{
 		model_name="B080XAN01";	/** lcd model name */
 		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
 		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -747,7 +747,7 @@ sdio{
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
                 dsi_clk = <250 280 1>;  /** min_clk, max_clk, scaler**/
 
                 lane_num=<4>;//lane num
@@ -771,7 +771,7 @@ sdio{
 		model_name="CLAP070NJ02";	/** lcd model name */
 		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -779,7 +779,7 @@ sdio{
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
@@ -797,7 +797,7 @@ sdio{
 		model_name="TN070TN92";	/** lcd model name */
 		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -805,7 +805,7 @@ sdio{
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
@@ -823,7 +823,7 @@ sdio{
 		model_name="LP097X02";	/** lcd model name */
 		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -831,7 +831,7 @@ sdio{
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 /// ***************************************************************************************
diff --git a/arch/arm/boot/dts/amlogic/meson8_skt.dtd b/arch/arm/boot/dts/amlogic/meson8_skt.dtd
index 35ee4aacb69b..7a4fd8ad7fef 100755
--- a/arch/arm/boot/dts/amlogic/meson8_skt.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_skt.dtd
@@ -790,7 +790,7 @@ void root_func(){
 		model_name="LP097QX1";	/** lcd model name */
 		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -798,7 +798,7 @@ void root_func(){
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
@@ -821,7 +821,7 @@ void root_func(){
 		model_name="B080XAN01";	/** lcd model name */
 		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
 		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -829,7 +829,7 @@ void root_func(){
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
                 dsi_clk = <250 280 1>;  /** min_clk, max_clk, scaler**/
 
                 lane_num=<4>;//lane num
@@ -853,7 +853,7 @@ void root_func(){
 		model_name="CLAP070NJ02";	/** lcd model name */
 		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -861,7 +861,7 @@ void root_func(){
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
@@ -879,7 +879,7 @@ void root_func(){
 		model_name="TN070TN92";	/** lcd model name */
 		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -887,7 +887,7 @@ void root_func(){
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
@@ -905,7 +905,7 @@ void root_func(){
 		model_name="LP097X02";	/** lcd model name */
 		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -913,7 +913,7 @@ void root_func(){
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 
diff --git a/drivers/amlogic/display/backlight/aml.dtd b/drivers/amlogic/display/backlight/aml.dtd
index fd47dcca8585..5fc94ffe3445 100755
--- a/drivers/amlogic/display/backlight/aml.dtd
+++ b/drivers/amlogic/display/backlight/aml.dtd
@@ -19,10 +19,10 @@
 		bl_level_default=<102>;	/** default brightness level */
 		
 		/* backlight power ctrl */
-		bl_ctrl_method=<1>;	/** backlight control method(0 for gpio, 1 for pwm_negative, 2 for pwm_positive. decided by hardware design) */
+		bl_ctrl_method=<1>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive. decided by hardware design) */
 		bl_gpio_port="GPIODV_28";	/** backlight control gpio port */
 		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
-		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0 for use pwm_port only, 1 for use bl_gpio_port to control on/off) */
+		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
 		bl_pwm_freq=<1000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
 		bl_pwm_duty_max_min=<100 20>;	/** brightness diminig duty_max, duty_min : (unit: %, positive logic, only for pwm control method) */
 	};
diff --git a/drivers/amlogic/display/vout/aml_lcd.dtd b/drivers/amlogic/display/vout/aml_lcd.dtd
index d3aad62166c6..86a862c98138 100755
--- a/drivers/amlogic/display/vout/aml_lcd.dtd
+++ b/drivers/amlogic/display/vout/aml_lcd.dtd
@@ -84,19 +84,19 @@
 		
 		/* below configs are decided by hardware design, you can modify them if needed. */
 		//ttl config
-		ttl_rb_bit_swap=<0 0>;	/** ttl rb_swap, bit_swap : (0 for normal, 1 for swap) */
+		ttl_rb_bit_swap=<0 0>;	/** ttl rb_swap, bit_swap : (0=normal, 1=swap) */
 		//lvds config
-		lvds_channel_pn_swap=<0>;	/** lvds channel pn swap(0 for normal, 1 for swap) */
+		lvds_channel_pn_swap=<0>;	/** lvds channel pn swap(0=normal, 1=swap) */
 		
 		/* recommend settings, you can modify them if needed. */
-		valid_hvsync_de=<1 1>;	/** hvsync_signal_valid, DE_signal_valid : (0 for disable signal, 1 for enable signal) */
+		valid_hvsync_de=<1 1>;	/** hvsync_signal_valid, DE_signal_valid : (0=disable signal, 1=enable signal) */
 		hsign_hoffset_vsign_voffset=<1 0 1 0>;	/** hsign, hoffset, vsign, voffset :("sign-offset" is a pair. sign: 0 for negative, 1 for positive) */
 		
-		dither_user_ctrl=<0 0x600>;	/**  dither_user(0 for auto setting, 1 for user define), dither_ctrl(user defined dither control, only valid when user_define=1) */
+		dither_user_ctrl=<0 0x600>;	/**  dither_user(0=auto setting, 1=user define), dither_ctrl(user defined dither control, only valid when user_define=1) */
 		vadj_brightness_contrast_saturation=<0x0 0x80 0x100>;	/** video adjust brightness, contrast, saturation */
 		
-		gamma_en_revert=<1 0>;	/** gamma_en(0 for disable gamma table, 1 for enable gamma table), gamma_table_revert(0 for normal, 1 for revert) */
-		gamma_multi_rgb_coeff=<0 100 100 100>;	/** gamma_multi(0 for single gamma, RGB are same, 1 for multi gamma, RGB are different), gamma_r_coeff(%), gamma_g_coeff(%), gamma_b_coeff(%) */
+		gamma_en_revert=<1 0>;	/** gamma_en(0=disable gamma table, 1=enable gamma table), gamma_table_revert(0=normal, 1=revert) */
+		gamma_multi_rgb_coeff=<0 100 100 100>;	/** gamma_multi(0=single gamma, RGB are same, 1=multi gamma, RGB are different), gamma_r_coeff(%), gamma_g_coeff(%), gamma_b_coeff(%) */
 		/** if gamma_multi=1, there must be 3 gamma tables, named as gamma_table_r, gamma_table_g, gamma_table_b */
 		gamma_table=<0 1 3 4 6 7 8 10 11 12 14 15 17 18 19 22 23 23 24 25 26 27 28 29 30 31 31 32 33 34 35 36 
 					37 37 38 39 40 41 42 43 44 45 46 47 48 49 51 52 53 54 55 56 57 58 60 61 61 62 63 64 66 67 68 69 
@@ -109,12 +109,12 @@
 		
 		/* default settings, don't modify them unless there is display problem */
 		clock_spread_spectrum=<0>;	/** ss_level(0=disable, 1=0.5%, 2=1%, 3=2%, 4=3%, 5=4%, 6=5%) */
-		clock_auto_generation=<1>;	/** clk_auto_generation(0 for using customer clock parameters, as clk_pll_div_clk_ctrl defined, 1 for auto generate clock parameters by lcd_clock) */
+		clock_auto_generation=<1>;	/** clk_auto_generation(0=use customer clock parameters, as clk_pll_div_clk_ctrl defined, 1=auto generate clock parameters by lcd_clock) */
 		clk_pll_div_clk_ctrl=<0x1000038 0x918803 0x44003101>;	/** pll_ctrl, div_ctrl, clk_ctrl : (only valid when clk_auto_generation=0) */
 		lvds_vswing=<1>;	/** lvds_vswing_level(default level=1, support level 0,1,2,3,4) */
-		lvds_user_repack=<0 0>;	/** lvds_repack_user(0 for auto setting, 1 for user define), lvds_repack(0 for JEIDA data mapping, 1 for VESA data mapping. only valid when lvds_repack_user=1) */
-		edp_user_link_rate_lane_count=<1 1 4>;	/** edp_user(0 for auto setting, 1 for user define), link_rate(0 for 1.62G, 1 for 2.7G, only valid when edp_user=1), lane_count(support 1,2,4, only valid when edp_user=1) */
-		edp_link_adaptive_vswing=<0 0>;	/** adaptive(0 for fixed user defined vswing, 1 for auto setting vswing by training), vswing(support level 0,1,2,3, user defined vswing, only valid when adaptive=0) */
+		lvds_user_repack=<0 0>;	/** lvds_repack_user(0=auto setting, 1=user define), lvds_repack(0=JEIDA mode data mapping, 1=VESA mode data mapping. only valid when lvds_repack_user=1) */
+		edp_user_link_rate_lane_count=<1 1 4>;	/** edp_user(0=auto setting, 1=user define), link_rate(0=1.62G, 1=2.7G, only valid when edp_user=1), lane_count(support 1,2,4, only valid when edp_user=1) */
+		edp_link_adaptive_vswing=<0 0>;	/** adaptive(0=fixed user defined vswing, 1=auto setting vswing by training), vswing(support level 0,1,2,3, user defined vswing, only valid when adaptive=0) */
 		rgb_base_coeff=<0xf0 0x74a>;	/** rgb_base, rgb_coeff */
 		video_on_pixel_line=<120 22>;	/** video_on_pixel, video_on_line */
 		
@@ -170,7 +170,7 @@
 		model_name="LP097QX1";	/** lcd model name */
 		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -178,7 +178,7 @@
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
 //$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
@@ -201,7 +201,7 @@
 		model_name="B080XAN01";	/** lcd model name */
 		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
 		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -209,7 +209,7 @@
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
                 dsi_clk = <250 280 1>;  /** min_clk, max_clk, scaler**/
 
                 lane_num=<4>;//lane num
@@ -233,7 +233,7 @@
 		model_name="CLAP070NJ02";	/** lcd model name */
 		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -241,7 +241,7 @@
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
@@ -259,7 +259,7 @@
 		model_name="TN070TN92";	/** lcd model name */
 		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -267,7 +267,7 @@
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
@@ -285,7 +285,7 @@
 		model_name="LP097X02";	/** lcd model name */
 		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
 		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0 for only support one mode as lcd_bits define, 1 for both support 6/8bit) */
+		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
 		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
@@ -293,7 +293,72 @@
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
 		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
 		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0 for negative, 1 for positive) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+	};
+
+//$$ MATCH "lcd_model_config_match" = <&lcd_CLAA101FP05XG>
+//$$ L2 PROP_STR = "model_name"
+//$$ L2 PROP_STR = "interface"
+//$$ L2 PROP_U32 2 = "active_area"
+//$$ L2 PROP_U32 2 = "lcd_bits_option"
+//$$ L2 PROP_U32 2 = "resolution"
+//$$ L2 PROP_U32 2 = "period"
+//$$ L2 PROP_U32 2 = "clock_hz_pol"
+//$$ L2 PROP_U32 2 = "hsync_width_backporch"
+//$$ L2 PROP_U32 2 = "vsync_width_backporch"
+//$$ L2 PROP_U32 2 = "pol_hsync_vsync"
+//$$ L2 PROP_U32 3 = "dsi_clk"
+//$$ L2 PROP_U32 = "lane_num"
+//$$ L2 PROP_U32 3 = "pol_vs_hs_de"
+//$$ L2 PROP_U32 2 = "dpi_color_type"
+//$$ L2 PROP_U32 2 = "refresh_rate"
+//$$ L2 PROP_U32 2 = "factor"
+	lcd_CLAA101FP05XG:lcd_CLAA101FP05XG{
+		model_name="CLAA101FP05XG";	/** lcd model name */
+		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
+		active_area=<216 135>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+
+		resolution=<1920 1200>;	/** horizontal resolution, vertical resolution */
+		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
+
+		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
+		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+                dsi_clk = <900 1000 1>;  /** min_clk, max_clk, scaler**/
+                factor = < 2 3 >;
+
+                lane_num=<4>;//lane num
+                pol_vs_hs_de=<1 1 0>;
+                dpi_color_type=<5 0>;
+                refresh_rate =<60 0>;// refresh rate available only for 2560x1600
+	};
+	
+//$$ MATCH "lcd_model_config_match" = <&lcd_HE050NA01F>
+//$$ L2 PROP_STR = "model_name"
+//$$ L2 PROP_STR = "interface"
+//$$ L2 PROP_U32 2 = "active_area"
+//$$ L2 PROP_U32 2 = "lcd_bits_option"
+//$$ L2 PROP_U32 2 = "resolution"
+//$$ L2 PROP_U32 2 = "period"
+//$$ L2 PROP_U32 2 = "clock_hz_pol"
+//$$ L2 PROP_U32 2 = "hsync_width_backporch"
+//$$ L2 PROP_U32 2 = "vsync_width_backporch"
+//$$ L2 PROP_U32 2 = "pol_hsync_vsync"
+lcd_HE050NA01F:lcd_HE050NA01F{	//800*480
+		model_name="HE050NA01F";	/** lcd model name */
+		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
+		active_area=<108 65>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+		
+		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
+		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
+		
+		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
+		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
 #endif
-- 
2.19.0

