From 143bc762060b6cf81e32f4037b426f4bfc14b1c3 Mon Sep 17 00:00:00 2001
From: "chengshun.wang" <chengshun.wang@amlogic.com>
Date: Wed, 6 Nov 2013 09:59:13 +0800
Subject: [PATCH 1819/5965] PD# 81382 : external DAC had papa sound in k100

add spk_mute contol interface and not control MPPL9
---
 sound/soc/aml/aml_dai.c         |  6 +++-
 sound/soc/aml/aml_m8.c          | 58 ++++++++++++++++++++++++++++-----
 sound/soc/aml/aml_pcm.c         | 10 +++---
 sound/soc/aml/aml_spdif_dai.c   |  7 +++-
 sound/soc/codecs/aml_m8_codec.c | 12 +++----
 5 files changed, 72 insertions(+), 21 deletions(-)

diff --git a/sound/soc/aml/aml_dai.c b/sound/soc/aml/aml_dai.c
index 02b88b0b9896..6efb230ff46d 100755
--- a/sound/soc/aml/aml_dai.c
+++ b/sound/soc/aml/aml_dai.c
@@ -141,7 +141,11 @@ static int aml_dai_i2s_prepare(struct snd_pcm_substream *substream,
 		s->device_type = AML_AUDIO_I2SIN;		
 	}
 	else{
-		audio_set_i2s_clk(sample_rate, AUDIO_CLK_256FS);
+        printk(KERN_INFO "enterd %s,set_clock:%d,sample_rate=%d\n",__func__,set_clock,sample_rate);
+        if(set_clock != sample_rate ){
+            set_clock = sample_rate;
+            audio_set_i2s_clk(sample_rate, AUDIO_CLK_256FS);
+        }
 		audio_util_set_dac_i2s_format(AUDIO_ALGOUT_DAC_FORMAT_DSP);	
 		
 		s->device_type = AML_AUDIO_I2SOUT;
diff --git a/sound/soc/aml/aml_m8.c b/sound/soc/aml/aml_m8.c
index 7135290920d0..09b9f57d4ced 100755
--- a/sound/soc/aml/aml_m8.c
+++ b/sound/soc/aml/aml_m8.c
@@ -37,6 +37,7 @@
 #include "aml_pcm.h"
 #include "aml_audio_hw.h"
 #include "../codecs/aml_m8_codec.h"
+#include <mach/register.h>
 
 #ifdef CONFIG_USE_OF
 #include <linux/of.h>
@@ -47,6 +48,7 @@
 #include <plat/io.h>
 #endif
 
+#define USE_EXTERNAL_DAC 0
 #define DRV_NAME "aml_snd_m8"
 #define HP_DET                  1
 struct aml_audio_private_data {
@@ -296,6 +298,34 @@ static struct snd_soc_ops aml_asoc_ops = {
     .hw_params = aml_asoc_hw_params,
 };
 
+
+struct aml_audio_private_data *p_audio;
+
+static int aml_m8_spk_enabled;
+
+static int aml_m8_set_spk(struct snd_kcontrol *kcontrol,
+    struct snd_ctl_elem_value *ucontrol)
+{
+    aml_m8_spk_enabled = ucontrol->value.integer.value[0];
+    printk(KERN_INFO "aml_m8_set_spk: aml_m8_spk_enabled=%d\n",aml_m8_spk_enabled);
+
+    msleep(10);
+    amlogic_set_value(p_audio->gpio_mute, aml_m8_spk_enabled, "mute_spk");
+
+    if(aml_m8_spk_enabled ==1)
+        msleep(100);
+
+    return 0;
+}
+
+static int aml_m8_get_spk(struct snd_kcontrol *kcontrol,
+    struct snd_ctl_elem_value *ucontrol)
+{
+    //printk("***aml_m8_get_spk****aml_m8_spk_enabled=%d**\n",aml_m8_spk_enabled);
+    ucontrol->value.integer.value[0] = aml_m8_spk_enabled;
+    return 0;
+}
+
 static int aml_set_bias_level(struct snd_soc_card *card,
         struct snd_soc_dapm_context *dapm, enum snd_soc_bias_level level)
 {
@@ -312,10 +342,6 @@ static int aml_set_bias_level(struct snd_soc_card *card,
     case SND_SOC_BIAS_ON:
         break;
     case SND_SOC_BIAS_PREPARE:
-        if(hp_state==0){
-            amlogic_set_value(p_aml_audio->gpio_mute, 1, "mute_spk");
-            printk("enter %s : unmute spk \n",__func__);
-        }
         /* clock enable */
         if (!p_aml_audio->clock_en) {
             aml_set_clock(1);
@@ -329,10 +355,6 @@ static int aml_set_bias_level(struct snd_soc_card *card,
 
         break;
     case SND_SOC_BIAS_STANDBY:
-        if(hp_state==0){
-            amlogic_set_value(p_aml_audio->gpio_mute, 0, "mute_spk");
-            printk("enter %s : mute spk \n",__func__);
-        }
         /* clock disable */
         if (p_aml_audio->clock_en) {
             aml_set_clock(0);
@@ -396,6 +418,17 @@ static struct snd_soc_jack_pin jack_pins[] = {
     }
 };
 
+static const struct snd_kcontrol_new aml_m8_controls[] = {
+
+    SOC_SINGLE_BOOL_EXT("Amp Spk enable", 0,
+        aml_m8_get_spk,
+        aml_m8_set_spk),
+/*
+    SOC_SINGLE_BOOL_EXT("Audio MPLL9 Switch", 0,
+    aml_m8_get_MPLL9,
+    aml_m8_set_MPLL9),
+    */
+};
 static int aml_asoc_init(struct snd_soc_pcm_runtime *rtd)
 {
 	struct snd_soc_card *card = rtd->card;
@@ -407,6 +440,10 @@ static int aml_asoc_init(struct snd_soc_pcm_runtime *rtd)
 	
     printk(KERN_DEBUG "enter %s \n", __func__);
 	p_aml_audio = snd_soc_card_get_drvdata(card);
+    ret = snd_soc_add_card_controls(codec->card, aml_m8_controls,
+                ARRAY_SIZE(aml_m8_controls));
+    if (ret)
+       return ret;
 
     /* Add specific widgets */
     //snd_soc_dapm_new_controls(dapm, aml_asoc_dapm_widgets,
@@ -501,7 +538,10 @@ static void aml_m8_pinmux_init(struct snd_soc_card *card)
 	p_aml_audio = snd_soc_card_get_drvdata(card);   
     p_aml_audio->pin_ctl = devm_pinctrl_get_select(card->dev, "aml_snd_m8");
     
-
+    p_audio = p_aml_audio;
+ #if USE_EXTERNAL_DAC
+    aml_write_reg32(P_AO_SECURE_REG1,0x00000000);
+ #endif
 	ret = of_property_read_string(card->dev->of_node, "mute_gpio", &str);
 	if (ret < 0) {
 		printk("aml_snd_m8: faild to get mute_gpio!\n");
diff --git a/sound/soc/aml/aml_pcm.c b/sound/soc/aml/aml_pcm.c
index 2d8a11bbc528..b10d3f6a2536 100755
--- a/sound/soc/aml/aml_pcm.c
+++ b/sound/soc/aml/aml_pcm.c
@@ -476,8 +476,8 @@ static int aml_pcm_open(struct snd_pcm_substream *substream)
 		goto out;
 	}
 
-	WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL8, 1,14, 1);			
-	WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);
+	//WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL8, 1,14, 1);			
+	//WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);
 	prtd->substream = substream;
 #if USE_HRTIMER == 0    
 	prtd->timer.function = &aml_pcm_timer_callback;
@@ -503,8 +503,10 @@ static int aml_pcm_close(struct snd_pcm_substream *substream)
 	struct aml_runtime_data *prtd = substream->runtime->private_data;
 	audio_stream_t *s = &prtd->s;	
 	ALSA_TRACE();
-	if(s->device_type == AML_AUDIO_SPDIFOUT)
-		WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL8, 0,14, 1);			
+	if(s->device_type == AML_AUDIO_SPDIFOUT){
+	//	WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL8, 0,14, 1);
+
+    }			
 #if USE_HRTIMER == 0
 	del_timer_sync(&prtd->timer);
 #else
diff --git a/sound/soc/aml/aml_spdif_dai.c b/sound/soc/aml/aml_spdif_dai.c
index bfcb898ed1cd..74a04992a818 100755
--- a/sound/soc/aml/aml_spdif_dai.c
+++ b/sound/soc/aml/aml_spdif_dai.c
@@ -91,6 +91,7 @@ special call by the audiodsp,add these code,as there are three cases for 958 s/p
 2)PCM  output for  all audio, when pcm mode is selected by user .
 3)PCM  output for audios except ac3/dts,when raw output mode is selected by user
 */
+static unsigned set_clock = 0;
 static void aml_hw_iec958_init(struct snd_pcm_substream *substream)
 {
 	ALSA_DEBUG();
@@ -156,7 +157,11 @@ static void aml_hw_iec958_init(struct snd_pcm_substream *substream)
 	//audio_set_clk(sample_rate, AUDIO_CLK_256FS);
 	//audio_util_set_dac_format(AUDIO_ALGOUT_DAC_FORMAT_DSP);	
 	//audio_set_i2s_clk(sample_rate, AUDIO_CLK_256FS);
-	audio_set_958_clk(sample_rate, AUDIO_CLK_256FS);
+    printk(KERN_INFO "enterd %s,set_clock:%d,sample_rate=%d\n",__func__,set_clock,sample_rate);
+    if(set_clock != sample_rate){
+        set_clock = sample_rate;
+        audio_set_958_clk(sample_rate, AUDIO_CLK_256FS);
+    }
 	//audio_util_set_dac_i2s_format(AUDIO_ALGOUT_DAC_FORMAT_DSP);
 	audio_util_set_dac_958_format(AUDIO_ALGOUT_DAC_FORMAT_DSP);
 
diff --git a/sound/soc/codecs/aml_m8_codec.c b/sound/soc/codecs/aml_m8_codec.c
index 685a81872868..76179128eacb 100755
--- a/sound/soc/codecs/aml_m8_codec.c
+++ b/sound/soc/codecs/aml_m8_codec.c
@@ -265,7 +265,7 @@ static int aml_m8_set_bias_level(struct snd_soc_codec *codec,
     case SND_SOC_BIAS_PREPARE:
         switch (codec->dapm.bias_level) {
         case SND_SOC_BIAS_STANDBY:
-	     WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);			
+	    // WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);			
             adac_wr_reg(89,0x0101);
             adac_wr_reg(24,adac_rd_reg(24) | 0x3); // power on the DAC
             break;
@@ -278,21 +278,21 @@ static int aml_m8_set_bias_level(struct snd_soc_codec *codec,
     case SND_SOC_BIAS_STANDBY:
         switch (codec->dapm.bias_level) {
         case SND_SOC_BIAS_PREPARE:
-	     WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);
+	   //  WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);
             adac_wr_reg(89,0x0000); 
             adac_wr_reg(24,adac_rd_reg(24) & 0xfc); //power down the DAC
-	     WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 0,14, 1);
+	    // WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 0,14, 1);
             break;
 
         default:
-	     WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 0,14, 1);			
+	    // WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 0,14, 1);			
             break;
         }
 
         break;
         
     case SND_SOC_BIAS_OFF:
-	 WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 0,14, 1);
+	// WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 0,14, 1);
         break;
     default:
         break;
@@ -1162,7 +1162,7 @@ static int aml_m8_soc_resume(struct snd_soc_codec *codec){
 	printk("aml_m8_codec resume\n");
 
 	aml_m8_set_bias_level(codec, SND_SOC_BIAS_STANDBY);
-	WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);	
+	//WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);	
     return 0;
 }
 
-- 
2.19.0

