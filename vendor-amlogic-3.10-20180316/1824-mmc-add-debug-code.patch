From eae1089191a77f23c5215b4f23f771999497f5fa Mon Sep 17 00:00:00 2001
From: "chunhai.guo" <chunhai.guo@amlogic.com>
Date: Mon, 11 Nov 2013 20:27:21 +0800
Subject: [PATCH 1824/5965] mmc: add debug code

---
 arch/arm/configs/meson8_defconfig      |   1 +
 arch/arm/mach-meson8/include/mach/sd.h |   6 +-
 drivers/amlogic/mmc/Kconfig            |   6 +-
 drivers/amlogic/mmc/aml_sdio.c         |  47 ++++++-
 drivers/amlogic/mmc/amlsd.c            | 163 ++++++++++++++++++-------
 drivers/amlogic/mmc/amlsd.h            |   5 +
 drivers/mmc/core/core.c                |   5 +-
 drivers/mmc/core/sdio.c                |   2 +-
 8 files changed, 185 insertions(+), 50 deletions(-)
 mode change 100644 => 100755 drivers/mmc/core/core.c
 mode change 100644 => 100755 drivers/mmc/core/sdio.c

diff --git a/arch/arm/configs/meson8_defconfig b/arch/arm/configs/meson8_defconfig
index f2c93ad9d905..932d5e101338 100755
--- a/arch/arm/configs/meson8_defconfig
+++ b/arch/arm/configs/meson8_defconfig
@@ -165,6 +165,7 @@ CONFIG_RN5T618=y
 CONFIG_EFUSE=y
 CONFIG_AMLOGIC_USB=y
 CONFIG_MMC_AML=y
+# CONFIG_MMC_AML_DEBUG is not set
 CONFIG_AMLOGIC_SPI_NOR=y
 CONFIG_AML_NEXT_GEN_NAND=y
 CONFIG_AM_ETHERNET=y
diff --git a/arch/arm/mach-meson8/include/mach/sd.h b/arch/arm/mach-meson8/include/mach/sd.h
index 5fd4a65afda5..34147b91ee8f 100755
--- a/arch/arm/mach-meson8/include/mach/sd.h
+++ b/arch/arm/mach-meson8/include/mach/sd.h
@@ -182,7 +182,11 @@ struct amlsd_host {
     u32			opcode; // add by gch for debug
 	u32			arg; // add by gch for debug
     u32         time_req_sta; // request start time
-
+    
+#ifdef      CONFIG_MMC_AML_DEBUG
+    u32         req_cnt;
+#endif
+    
     struct pinctrl *pinctrl;
     int storage_flag; // used for judging if there is a tsd/emmc
 
diff --git a/drivers/amlogic/mmc/Kconfig b/drivers/amlogic/mmc/Kconfig
index 6e1feee55a05..90d655a22bee 100755
--- a/drivers/amlogic/mmc/Kconfig
+++ b/drivers/amlogic/mmc/Kconfig
@@ -12,5 +12,9 @@ config MMC_AML
 	select MMC
 	select MMC_BLOCK
 	select MMC_BLOCK_BOUNCE
-	
+    
+config MMC_AML_DEBUG
+    bool "Amlogic Multimedia Card Debug support"
+	default n
+    
 endmenu
diff --git a/drivers/amlogic/mmc/aml_sdio.c b/drivers/amlogic/mmc/aml_sdio.c
index e30a0168346d..7aa6d6115106 100755
--- a/drivers/amlogic/mmc/aml_sdio.c
+++ b/drivers/amlogic/mmc/aml_sdio.c
@@ -284,6 +284,13 @@ void aml_sdio_request_done(struct mmc_host *mmc, struct mmc_request *mrq)
         sdio_dbg(AMLSD_DBG_RESP,"Cmd %d ,Resp 0x%x\n", cmd->opcode, cmd->resp[0]);
     }
 
+#ifdef      CONFIG_MMC_AML_DEBUG
+	host->req_cnt--;
+
+    aml_dbg_verify_pinmux(pdata);
+    aml_dbg_verify_pull_up(pdata);
+#endif
+
     if (pdata->xfer_post)
         pdata->xfer_post(pdata);
 
@@ -301,7 +308,7 @@ static void aml_sdio_print_err (struct amlsd_host *host, char *msg)
     sdio_err("%s: %s, Cmd%d arg %08x Xfer %d Bytes, "
             "host->xfer_step=%d, host->cmd_is_stop=%d, pdata->port=%d, "
             "virqs=%#0x, virqc=%#0x, conf->cmd_clk_divide=%#x, pdata->clkc=%d, "
-            "conf->bus_width=%d, pdata->width=%d\n",
+            "conf->bus_width=%d, pdata->width=%d, clock=%d\n",
             mmc_hostname(host->mmc),
             msg,
             host->mrq->cmd->opcode,
@@ -314,7 +321,8 @@ static void aml_sdio_print_err (struct amlsd_host *host, char *msg)
             conf->cmd_clk_divide,
             pdata->clkc,
             conf->bus_width,
-            pdata->width);    
+            pdata->width,
+            pdata->mmc->actual_clock);    
 }
 
 /*setup delayed workstruct in aml_sdio_request*/
@@ -328,6 +336,9 @@ static void aml_sdio_timeout(struct work_struct *data)
     struct sdio_status_irq* irqs = (void*)&virqs;
     u32 virqc =readl(host->base + SDIO_IRQC);
     struct sdio_irq_config* irqc = (void*)&virqc;
+#ifdef      CONFIG_MMC_AML_DEBUG
+    struct amlsd_platform * pdata = mmc_priv(host->mmc);
+#endif
 
     spin_lock_irqsave(&host->mrq_lock, flags);
 	if(host->xfer_step == XFER_FINISHED){
@@ -347,6 +358,10 @@ static void aml_sdio_timeout(struct work_struct *data)
 		return;
 	}
 
+    if (!(irqc->arc_cmd_int_en)) {
+        sdio_err("%s: arc_cmd_int_en is not enable\n",  mmc_hostname(host->mmc));
+    }
+
     /* Disable Command-Done-Interrupt to avoid irq occurs
      * It will be enabled again in the next cmd.
      */
@@ -363,10 +378,15 @@ static void aml_sdio_timeout(struct work_struct *data)
         // if ((pdata->port == MESON_SDIO_PORT_B) && (pdata->gpio_power != 0))
             // sdio_err("power_on_pin=%d\n", amlogic_get_value(pdata->gpio_power, MODULE_NAME));
 // #endif
-        // aml_dbg_print_pinmux();
-        // aml_sdio_print_reg(host);
     // }
 
+#ifdef      CONFIG_MMC_AML_DEBUG
+    aml_dbg_verify_pinmux(pdata);
+    aml_dbg_verify_pull_up(pdata);
+    aml_sdio_print_reg(host);
+    // aml_dbg_print_pinmux();
+#endif
+
     host->xfer_step = XFER_TIMEDOUT;
 
     /*set error*/
@@ -478,6 +498,14 @@ void aml_sdio_request(struct mmc_host *mmc, struct mmc_request *mrq)
 
     if(aml_sdio_check_unsupport_cmd(mmc, mrq))
         return;
+
+#ifdef      CONFIG_MMC_AML_DEBUG
+    if (host->req_cnt) {
+        sdio_err("Reentry error! host->req_cnt=%d\n", host->req_cnt);
+    }
+	host->req_cnt++;
+#endif
+
 	if(pdata->eject){
         mrq->cmd->error = -ENOMEDIUM;
         mmc_request_done(mmc, mrq);
@@ -504,6 +532,11 @@ void aml_sdio_request(struct mmc_host *mmc, struct mmc_request *mrq)
 	if(pdata->xfer_pre)
 		pdata->xfer_pre(pdata);
 
+#ifdef      CONFIG_MMC_AML_DEBUG
+    aml_dbg_verify_pull_up(pdata);
+    aml_dbg_verify_pinmux(pdata);
+#endif
+
 	if(!mrq->data)
 		timeout = 100; //mod_timer(&host->timeout_tlist, jiffies + 100);
 	else
@@ -714,6 +747,8 @@ static void aml_sdio_set_clk_rate(struct amlsd_platform* pdata, u32 clk_ios)
 
 	sdio_dbg(AMLSD_DBG_IOS, "Clk IOS %d, Clk Src %d, Host Max Clk %d, clk_divide=%d\n",
         	clk_ios, (clk_rate*2), pdata->f_max, clk_div);
+	// sdio_err("Clk IOS %d, Clk Src %d, Host Max Clk %d, clk_divide=%d, actual_clock=%d\n",
+            // clk_ios, (clk_rate*2), pdata->f_max, clk_div, pdata->mmc->actual_clock);
 }
 
 static void aml_sdio_set_bus_width(struct amlsd_platform* pdata, u32 busw_ios)
@@ -988,6 +1023,10 @@ static struct amlsd_host* aml_sdio_init_host(void)
     
     host->version = AML_MMC_VERSION;
     host->storage_flag = storage_flag;
+
+#ifdef      CONFIG_MMC_AML_DEBUG
+	host->req_cnt = 0;
+#endif
 	return host;
 }
 
diff --git a/drivers/amlogic/mmc/amlsd.c b/drivers/amlogic/mmc/amlsd.c
index f15cde6d80cb..93870bd2b304 100755
--- a/drivers/amlogic/mmc/amlsd.c
+++ b/drivers/amlogic/mmc/amlsd.c
@@ -406,46 +406,6 @@ bool is_emmc_exist (struct amlsd_host* host) // is eMMC/tSD exist
     return false;
 }
 
-/*-------------------debug---------------------*/
-
-unsigned int sdhc_debug=0x0; // 0xffffffff;
-
-static int __init sdhc_debug_setup(char *str)
-{
-	sdhc_debug = simple_strtol(str, NULL, 0);
-	return 1;
-}
-__setup("sdhc_debug=", sdhc_debug_setup);
-
-
-unsigned int sdio_debug=0x000000; // 0xffffff; // 
-
-static int __init sdio_debug_setup(char *str)
-{
-	sdio_debug = simple_strtol(str, NULL, 0);
-	return 1;
-}
-__setup("sdio_debug=", sdio_debug_setup);
-
-void aml_dbg_print_pinmux (void)
-{
-    printk("Pinmux: REG2=0x%08x, REG3=0x%08x, REG4=0x%08x, REG5=0x%08x, REG6=0x%08x, REG8=0x%08x\n", 
-            READ_CBUS_REG(PERIPHS_PIN_MUX_2), 
-            READ_CBUS_REG(PERIPHS_PIN_MUX_3), 
-            READ_CBUS_REG(PERIPHS_PIN_MUX_4), 
-            READ_CBUS_REG(PERIPHS_PIN_MUX_5), 
-            READ_CBUS_REG(PERIPHS_PIN_MUX_6), 
-            READ_CBUS_REG(PERIPHS_PIN_MUX_8));
-}
-
-// void aml_dbg_print_pull_up (struct amlsd_host* host)
-// {
-    // printk("Pull-up: CMD%d, PAD_PULL_UP_REG3=%#08x\n", 
-            // host->opcode, 
-            // READ_CBUS_REG(PAD_PULL_UP_REG3));
-// }
-
-
 /*----sdhc----*/
 
 void aml_sdhc_print_reg(struct amlsd_host* host)
@@ -674,7 +634,7 @@ int of_amlsd_detect(struct amlsd_platform* pdata)
 	int ret=0;
 	if(pdata->gpio_cd)
 		ret = amlogic_get_value(pdata->gpio_cd, MODULE_NAME);
-	// printk(" of_amlsd_detect port %d ret %d\n", pdata->port, ret);
+    // printk("\033[0;40;32m of_amlsd_detect port %d, card %s \033[0m\n", pdata->port, ret?"OUT":"in");
 	return ret;
 }
 
@@ -890,7 +850,6 @@ int aml_is_sduart(struct amlsd_platform * pdata)
 }
 
 
-extern struct pinctrl* g_uart_pinctrl;
 
 // int n=0;
 int aml_uart_switch(struct amlsd_platform* pdata, bool on)
@@ -955,6 +914,126 @@ int aml_uart_switch(struct amlsd_platform* pdata, bool on)
 #endif
 }
 
+/*-------------------debug---------------------*/
+
+unsigned int sdhc_debug=0x0; // 0xffffffff;
+
+static int __init sdhc_debug_setup(char *str)
+{
+	sdhc_debug = simple_strtol(str, NULL, 0);
+	return 1;
+}
+__setup("sdhc_debug=", sdhc_debug_setup);
+
+
+unsigned int sdio_debug=0x000000; // 0xffffff; // 
+
+static int __init sdio_debug_setup(char *str)
+{
+	sdio_debug = simple_strtol(str, NULL, 0);
+	return 1;
+}
+__setup("sdio_debug=", sdio_debug_setup);
+
+void aml_dbg_print_pinmux (void)
+{
+    printk("Pinmux: REG2=0x%08x, REG3=0x%08x, REG4=0x%08x, REG5=0x%08x, REG6=0x%08x, REG8=0x%08x\n", 
+            READ_CBUS_REG(PERIPHS_PIN_MUX_2), 
+            READ_CBUS_REG(PERIPHS_PIN_MUX_3), 
+            READ_CBUS_REG(PERIPHS_PIN_MUX_4), 
+            READ_CBUS_REG(PERIPHS_PIN_MUX_5), 
+            READ_CBUS_REG(PERIPHS_PIN_MUX_6), 
+            READ_CBUS_REG(PERIPHS_PIN_MUX_8));
+}
+
+#ifdef      CONFIG_MMC_AML_DEBUG
+
+#define     CARD_PULL_UP_REG            PAD_PULL_UP_REG2
+#define     EMMC_PULL_UP_REG            PAD_PULL_UP_REG2
+#define     SDIO_PULL_UP_REG            PAD_PULL_UP_REG4
+
+#define     CARD_PULL_UP_REG_EN         PAD_PULL_UP_EN_REG2
+#define     EMMC_PULL_UP_REG_EN         PAD_PULL_UP_EN_REG2
+#define     SDIO_PULL_UP_REG_EN         PAD_PULL_UP_EN_REG4
+
+#define     CARD_PULL_UP_REG_MASK       0x03f00000 // card[5:0], REG2
+#define     EMMC_PULL_UP_REG_MASK       0x0003000f // boot[17:16, 3:0], REG2
+#define     SDIO_PULL_UP_REG_MASK       0x0000030f // gpioX[9:8, 3:0], REG4
+void aml_dbg_verify_pull_up (struct amlsd_platform * pdata)
+{
+    int reg;
+    int reg_en;
+    int reg_mask;
+
+    if (pdata->port == PORT_SDIO_A) {
+        reg = READ_CBUS_REG(SDIO_PULL_UP_REG);
+        reg_en = READ_CBUS_REG(SDIO_PULL_UP_REG_EN);
+        reg_mask = SDIO_PULL_UP_REG_MASK;
+    } else if (pdata->port == PORT_SDIO_B) {
+        reg = READ_CBUS_REG(CARD_PULL_UP_REG);
+        reg_en = READ_CBUS_REG(CARD_PULL_UP_REG_EN);
+        reg_mask = CARD_PULL_UP_REG_MASK;
+    } else if (pdata->port == PORT_SDIO_C) {
+        reg = READ_CBUS_REG(EMMC_PULL_UP_REG);
+        reg_en = READ_CBUS_REG(EMMC_PULL_UP_REG_EN);
+        reg_mask = EMMC_PULL_UP_REG_MASK;
+    }
+
+    if ((reg&reg_mask) != reg_mask) {
+        sdio_err(" %s pull-up error: CMD%d, reg=%#08x, reg_mask=%#x\n", 
+                mmc_hostname(pdata->mmc), pdata->host->opcode, reg, reg_mask);
+    }
+    if ((reg_en&reg_mask) != reg_mask) {
+        sdio_err(" %s pull-up error: CMD%d, reg_en=%#08x, reg_mask=%#x\n", 
+                mmc_hostname(pdata->mmc), pdata->host->opcode, reg_en, reg_mask);
+    }
+}
+
+#define     CARD_PINMUX_REG             PERIPHS_PIN_MUX_2
+#define     EMMC_PINMUX_REG             PERIPHS_PIN_MUX_6
+#define     SDIO_PINMUX_REG             PERIPHS_PIN_MUX_8
+int aml_dbg_verify_pinmux (struct amlsd_platform * pdata)
+{
+    int reg;
+    int reg_mask;
+
+    if (pdata->port == PORT_SDIO_A) {
+        reg = SDIO_PINMUX_REG;
+        if (pdata->mmc->ios.chip_select == MMC_CS_DONTCARE) {
+            reg_mask = 0x0000003f; // all pin
+        } else { // MMC_CS_HIGH
+            reg_mask = 0x00000003; // clk & cmd
+        }
+    } else if (pdata->port == PORT_SDIO_B) {
+        reg = CARD_PINMUX_REG;
+        if (pdata->mmc->ios.chip_select == MMC_CS_DONTCARE) {
+            if(pdata->mmc->caps & MMC_CAP_4_BIT_DATA){
+                reg_mask = 0x0000fc00; // all pin
+            }else{
+                reg_mask = 0x00008c00; // 1 bit
+            }
+        } else { // MMC_CS_HIGH
+            reg_mask = 0x00000c00; // clk & cmd
+        }
+    } else if (pdata->port == PORT_SDIO_C) {
+        reg = EMMC_PINMUX_REG;
+        if (pdata->mmc->ios.chip_select == MMC_CS_DONTCARE) {
+            reg_mask = 0x3f000000; // all pin
+        } else { // MMC_CS_HIGH
+            reg_mask = 0x03000000; // clk & cmd
+        }
+    }
+
+    reg = READ_CBUS_REG(reg);
+    if ((reg&reg_mask) != reg_mask) {
+        sdio_err(" %s pinmux error: CMD%d, reg=%#08x, reg_mask=%#x\n", 
+                mmc_hostname(pdata->mmc), pdata->host->opcode, reg, reg_mask);
+    }
+
+    return 0;
+}
+#endif // #ifdef      CONFIG_MMC_AML_DEBUG
+
 #ifndef CONFIG_AM_WIFI_SD_MMC
 int wifi_setup_dt()
 {
diff --git a/drivers/amlogic/mmc/amlsd.h b/drivers/amlogic/mmc/amlsd.h
index 09d983abc0e3..b85916bea98c 100755
--- a/drivers/amlogic/mmc/amlsd.h
+++ b/drivers/amlogic/mmc/amlsd.h
@@ -118,5 +118,10 @@ bool is_emmc_exist (struct amlsd_host* host); // is eMMC/tSD exist
 void aml_dbg_print_pinmux (void);
 // void of_init_pins (struct amlsd_platform* pdata);
 
+#ifdef      CONFIG_MMC_AML_DEBUG
+void aml_dbg_verify_pull_up (struct amlsd_platform * pdata);
+int aml_dbg_verify_pinmux (struct amlsd_platform * pdata);
+#endif
+
 #endif
 
diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
old mode 100644
new mode 100755
index f2b8a559c9d2..d4cc64c6b167
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -2716,8 +2716,11 @@ int mmc_suspend_host(struct mmc_host *host)
 	}
 	mmc_bus_put(host);
 
-	if (!err && !mmc_card_keep_power(host))
+	if (!err && !mmc_card_keep_power(host)) {
 		mmc_power_off(host);
+    } else {
+        printk("[%s] keep power:%s, err=%d", __FUNCTION__, mmc_card_keep_power(host)?"yes":"NO", err);
+    }
 
 out:
 	return err;
diff --git a/drivers/mmc/core/sdio.c b/drivers/mmc/core/sdio.c
old mode 100644
new mode 100755
index c674c1b3b20f..5aff3a298ba7
--- a/drivers/mmc/core/sdio.c
+++ b/drivers/mmc/core/sdio.c
@@ -973,7 +973,7 @@ static int mmc_sdio_resume(struct mmc_host *host)
 
 	/* No need to reinitialize powered-resumed nonremovable cards */
 	if (mmc_card_is_removable(host) || !mmc_card_keep_power(host)) {
-		sdio_reset(host);
+		// sdio_reset(host);
 		mmc_go_idle(host);
 		err = mmc_sdio_init_card(host, host->ocr, host->card,
 					mmc_card_keep_power(host));
-- 
2.19.0

