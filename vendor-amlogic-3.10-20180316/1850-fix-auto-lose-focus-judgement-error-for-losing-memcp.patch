From 7bd159a4e10b80d63c837e1ef1db3c03b84eb457 Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Wed, 13 Nov 2013 09:37:25 +0800
Subject: [PATCH 1850/5965] fix auto lose focus judgement error for losing
 memcpy.

---
 drivers/amlogic/camera/ov5647.c        |  2 +-
 drivers/amlogic/tvin/isp/isp_drv.c     |  8 ++------
 drivers/amlogic/tvin/isp/isp_sm.c      | 28 ++++++++++++++++----------
 drivers/amlogic/tvin_v4l2/vdin_v4l2.c  | 10 ++-------
 include/linux/amlogic/tvin/tvin_v4l2.h |  4 +---
 5 files changed, 23 insertions(+), 29 deletions(-)

diff --git a/drivers/amlogic/camera/ov5647.c b/drivers/amlogic/camera/ov5647.c
index 2dd0b289eb46..ba3472c19ca5 100755
--- a/drivers/amlogic/camera/ov5647.c
+++ b/drivers/amlogic/camera/ov5647.c
@@ -2717,7 +2717,7 @@ static int set_focus_zone(struct ov5647_device *dev, int value)
 	
 	dev->cam_para->xml_scenes->af.x = tx;
 	dev->cam_para->xml_scenes->af.y = ty;	
-	dev->cam_para->cam_command = CAM_COMMAND_TOUCH_WINDOW;
+	dev->cam_para->cam_command = CAM_COMMAND_TOUCH_FOCUS;
 	dev->fe_arg.port = TVIN_PORT_ISP;
 	dev->fe_arg.index = 0;
 	dev->fe_arg.arg = (void *)(dev->cam_para);
diff --git a/drivers/amlogic/tvin/isp/isp_drv.c b/drivers/amlogic/tvin/isp/isp_drv.c
index a43f9184552b..0f15657f1ca2 100755
--- a/drivers/amlogic/tvin/isp/isp_drv.c
+++ b/drivers/amlogic/tvin/isp/isp_drv.c
@@ -748,7 +748,7 @@ static int isp_fe_open(struct tvin_frontend_s *fe, enum tvin_port_e port)
 		devp->isp_af_parm->field_delay = 1;
 		
 		/*init for auto lose focus tell*/
-		devp->isp_af_parm->detect_step_cnt = 5;
+		devp->isp_af_parm->detect_step_cnt = 16;
 		devp->isp_af_parm->enter_move_ratio = 55;
 		devp->isp_af_parm->enter_static_ratio = 35;
 		devp->isp_af_parm->ave_vdc_thr = 100;
@@ -890,7 +890,7 @@ static int isp_fe_ioctl(struct tvin_frontend_s *fe, void *arg)
                 case CAM_COMMAND_FULLSCAN:
 			devp->capture_parm->af_mode = CAM_SCANMODE_FULL;
 		        break;
-                case CAM_COMMAND_TOUCH_WINDOW:
+                case CAM_COMMAND_TOUCH_FOCUS:
 			//devp->isp_af_parm = &param->xml_scenes->af;
 			devp->isp_af_parm->x = param->xml_scenes->af.x;
 			devp->isp_af_parm->y = param->xml_scenes->af.y;
@@ -905,10 +905,6 @@ static int isp_fe_ioctl(struct tvin_frontend_s *fe, void *arg)
 			devp->flag |= (ISP_FLAG_AF|ISP_FLAG_TOUCH_AF);
 			af_sm_init(devp);
 		        break;
-                case CAM_COMMAND_TOUCH_FOCUS_ON:
-		        break;
-                case CAM_COMMAND_TOUCH_FOCUS_OFF:
-		        break;
                 case CAM_COMMAND_CONTINUOUS_FOCUS_ON:
 		        break;
                 case CAM_COMMAND_CONTINUOUS_FOCUS_OFF:
diff --git a/drivers/amlogic/tvin/isp/isp_sm.c b/drivers/amlogic/tvin/isp/isp_sm.c
index a8b97f68b324..51402f3a24b5 100755
--- a/drivers/amlogic/tvin/isp/isp_sm.c
+++ b/drivers/amlogic/tvin/isp/isp_sm.c
@@ -966,14 +966,14 @@ static bool is_lost_focus(isp_af_info_t *af_info,xml_algorithm_af_t *af_alg)
 	dc2 = af_info->last_blnr.dc[2];
 	dc3 = af_info->last_blnr.dc[3];
 	for(i=0;i<af_alg->detect_step_cnt;i++){
-		delta_dc = dc0>af_info->af_detect[i].dc[0]?dc0-af_info->af_detect[i].dc[0]:af_info->af_detect[i].dc[0]-dc0;
-		v_dc[i]  = div64((unsigned long long)delta_dc*1024,dc0);
-		delta_dc = dc1>af_info->af_detect[i].dc[1]?dc1-af_info->af_detect[i].dc[1]:af_info->af_detect[i].dc[1]-dc1;
-		v_dc[i] += div64((unsigned long long)delta_dc*1024,dc1);
-		delta_dc = dc2>af_info->af_detect[i].dc[2]?dc2-af_info->af_detect[i].dc[2]:af_info->af_detect[i].dc[2]-dc2;
-		v_dc[i] += div64((unsigned long long)delta_dc*1024,dc2);
-		delta_dc = dc3>af_info->af_detect[i].dc[3]?dc3-af_info->af_detect[i].dc[3]:af_info->af_detect[i].dc[3]-dc3;
-		v_dc[i] += div64((unsigned long long)delta_dc*1024,dc3);
+		delta_dc = isp_abs64(dc0,af_info->af_detect[i].dc[0]);
+		v_dc[i]  = div64((delta_dc*1024),(unsigned long long)dc0);
+		delta_dc = isp_abs64(dc1,af_info->af_detect[i].dc[1]);
+		v_dc[i] += div64((delta_dc*1024),(unsigned long long)dc1);
+		delta_dc = isp_abs64(dc2,af_info->af_detect[i].dc[2]);
+		v_dc[i] += div64((delta_dc*1024),(unsigned long long)dc2);
+		delta_dc = isp_abs64(dc3,af_info->af_detect[i].dc[3]);
+		v_dc[i] += div64((delta_dc*1024),(unsigned long long)dc3);
 		sum_vdc += v_dc[i];
 		if(af_sm_dg&0x2)
 			pr_info("v_dc[%u]=%llu.\n",i,v_dc[i]);
@@ -988,11 +988,11 @@ static bool is_lost_focus(isp_af_info_t *af_info,xml_algorithm_af_t *af_alg)
 		if(tmp_vdc1 > ave_vdc){
 			if(ave_vdc > af_alg->ave_vdc_thr){
 			        is_move = true;
+				break;
 			} else{
                                 if(af_sm_dg&0x1)
 				        pr_info("static ave_vdc=%llu.\n",ave_vdc);
 			}
-			break;
 		}else if(tmp_vdc2 < ave_vdc){
 			if(++static_cnt >= af_alg->detect_step_cnt)
 				is_static = true;
@@ -1006,6 +1006,9 @@ static bool is_lost_focus(isp_af_info_t *af_info,xml_algorithm_af_t *af_alg)
 		return false;
 	/* during hysteresis ,still last state*/
 	}else if((!is_static&&!is_move)||!af_info->last_move){
+		if(af_sm_dg&0x1){
+			pr_info("v_dc %llu is between %llu~%llu keep last state.\n",ave_vdc,tmp_vdc2,tmp_vdc1);
+		}
 		return false;
 	}
 	if(af_sm_dg&0x1)
@@ -1014,7 +1017,7 @@ static bool is_lost_focus(isp_af_info_t *af_info,xml_algorithm_af_t *af_alg)
 	if(af_alg->delta_fv_ratio == 0)
 		return true;
 	sum_fv = 0;
-	for(i=0;i<af_alg->valid_step_cnt;i++){
+	for(i=0;i<af_alg->detect_step_cnt;i++){
 		fv[i] = get_fv_base_blnr(&af_info->af_detect[i]);
 		sum_fv += fv[i];
 		if(af_sm_dg&0x4){
@@ -1072,7 +1075,10 @@ void isp_af_detect(isp_dev_t *devp)
 				sm_state.af_state = AF_INIT;
 				if(af_sm_dg)
 					pr_info("[af_sm]:lost focus.\n");
-			}else if(++af_info->cur_index >= af_alg->detect_step_cnt){
+			}else if(af_info->cur_index < af_alg->detect_step_cnt){
+				memcpy(&af_info->af_detect[af_info->cur_index],&af_info->isr_af_data,sizeof(isp_blnr_stat_t));
+				af_info->cur_index++;
+			}else{/*af_info->cur_index >= af_alg->detect_step_cnt*/
 				af_info->cur_index = 0;
 			}
 			break;
diff --git a/drivers/amlogic/tvin_v4l2/vdin_v4l2.c b/drivers/amlogic/tvin_v4l2/vdin_v4l2.c
index d80aa4a7fc8f..2ce00d0a1e79 100755
--- a/drivers/amlogic/tvin_v4l2/vdin_v4l2.c
+++ b/drivers/amlogic/tvin_v4l2/vdin_v4l2.c
@@ -76,14 +76,8 @@ const char *cam_cmd_to_str(cam_command_t cmd)
                 case CAM_COMMAND_FULLSCAN:
 		       	return "CAM_COMMAND_FULLSCAN";
 			break;
-		case CAM_COMMAND_TOUCH_WINDOW:
-			return "CAM_COMMAND_TOUCH_WINDOW";
-			break;
-		case CAM_COMMAND_TOUCH_FOCUS_ON:
-			return "CAM_COMMAND_TOUCH_FOCUS_ON";
-			break;
-		case CAM_COMMAND_TOUCH_FOCUS_OFF:
-			return "CAM_COMMAND_TOUCH_FOCUS_OFF";
+		case CAM_COMMAND_TOUCH_FOCUS:
+			return "CAM_COMMAND_TOUCH_FOCUS";
 			break;
 		case CAM_COMMAND_CONTINUOUS_FOCUS_ON:
 			return "CAM_COMMAND_CONTINUOUS_FOCUS_ON";
diff --git a/include/linux/amlogic/tvin/tvin_v4l2.h b/include/linux/amlogic/tvin/tvin_v4l2.h
index 2a7bebee073c..b6422c8b99c9 100755
--- a/include/linux/amlogic/tvin/tvin_v4l2.h
+++ b/include/linux/amlogic/tvin/tvin_v4l2.h
@@ -235,9 +235,7 @@ typedef enum cam_command_e {
         // af related
         CAM_COMMAND_AF,
         CAM_COMMAND_FULLSCAN,
-        CAM_COMMAND_TOUCH_WINDOW,
-        CAM_COMMAND_TOUCH_FOCUS_ON,
-        CAM_COMMAND_TOUCH_FOCUS_OFF,
+        CAM_COMMAND_TOUCH_FOCUS,
         CAM_COMMAND_CONTINUOUS_FOCUS_ON,
         CAM_COMMAND_CONTINUOUS_FOCUS_OFF,
         CAM_COMMAND_BACKGROUND_FOCUS_ON,
-- 
2.19.0

