From 0958410cb8a41bb085440ab31f6a70b5d6b6f4d6 Mon Sep 17 00:00:00 2001
From: "dezhi.kong" <dezhi.kong@amlogic.com>
Date: Mon, 18 Nov 2013 12:53:39 +0800
Subject: [PATCH 1963/5965] isp,divide af detect window and scan window

---
 drivers/amlogic/tvin/isp/isp_drv.c | 11 ++++++++++-
 drivers/amlogic/tvin/isp/isp_hw.c  | 25 +++++++++++++++----------
 drivers/amlogic/tvin/isp/isp_hw.h  |  2 ++
 drivers/amlogic/tvin/isp/isp_sm.c  |  3 +++
 4 files changed, 30 insertions(+), 11 deletions(-)

diff --git a/drivers/amlogic/tvin/isp/isp_drv.c b/drivers/amlogic/tvin/isp/isp_drv.c
index 7c19161e90a7..77b50fba74f7 100755
--- a/drivers/amlogic/tvin/isp/isp_drv.c
+++ b/drivers/amlogic/tvin/isp/isp_drv.c
@@ -980,10 +980,14 @@ static int isp_fe_ioctl(struct tvin_frontend_s *fe, void *arg)
 			y0 = devp->isp_af_parm->y>devp->af_info.radius?devp->isp_af_parm->y-devp->af_info.radius:0;
 			x1 = devp->isp_af_parm->x + devp->af_info.radius;
 			y1 = devp->isp_af_parm->y + devp->af_info.radius;
+			if(x1 >= devp->info.h_active)
+				x1 = devp->info.h_active - 1;
+			if(y1 >= devp->info.v_active)
+				y1 = devp->info.v_active - 1;
 			if(ioctl_debug)
 				pr_info("focus win: center(%u,%u) left(%u %u) right(%u,%u).\n",devp->isp_af_parm->x,
 					devp->isp_af_parm->y,x0,y0,x1,y1);
-			//isp_set_blenr_stat(x0,y0,x1,y1);
+			isp_set_af_scan_stat(x0,y0,x1,y1);
 			devp->flag |= ISP_FLAG_TOUCH_AF;
 			af_sm_init(devp);
 		        break;
@@ -1031,6 +1035,7 @@ static int isp_fe_isr(struct tvin_frontend_s *fe, unsigned int hcnt64)
 	}
 	if(devp->flag & ISP_AF_SM_MASK){
 	        isp_get_blnr_stat(&af_info->isr_af_data);
+		isp_get_af_scan_stat(&af_info->isr_af_data);
 	}
 	if(devp->flag & ISP_FLAG_SET_EFFECT){
 		csc = &(devp->cam_param->xml_effect_manual->csc);
@@ -1039,9 +1044,11 @@ static int isp_fe_isr(struct tvin_frontend_s *fe, unsigned int hcnt64)
 	}
 	if(devp->flag&ISP_FLAG_CAPTURE){
 		isp_get_blnr_stat(&devp->blnr_stat);
+		isp_get_af_scan_stat(&devp->blnr_stat);
 	}
 	if(devp->flag&ISP_FLAG_BLNR){
 		isp_get_blnr_stat(&devp->blnr_stat);
+		isp_get_af_scan_stat(&devp->blnr_stat);
 		if(devp->vs_cnt-- == 0)
 			devp->flag &= (~ISP_FLAG_BLNR);
 	}
@@ -1049,11 +1056,13 @@ static int isp_fe_isr(struct tvin_frontend_s *fe, unsigned int hcnt64)
 		af = devp->af_dbg;
 		if((af->state >= 1)&&(af->state <= af->delay)){
 			isp_get_blnr_stat(&af->data[af->cur_step]);
+			isp_get_af_scan_stat(&af->data[af->cur_step]);
 			af->state++;
 		}
 	}
 	if(devp->flag & ISP_TEST_FOR_AF_WIN){
 		isp_get_blnr_stat(&devp->af_test.af_bl[devp->af_test.cnt]);
+		isp_get_af_scan_stat(&devp->af_test.af_bl[devp->af_test.cnt]);
 		isp_get_af_stat(&devp->af_test.af_win[devp->af_test.cnt]);
 		isp_get_ae_stat(&devp->af_test.ae_win[devp->af_test.cnt]);
 		if(devp->af_test.cnt++ > devp->af_test.max){
diff --git a/drivers/amlogic/tvin/isp/isp_hw.c b/drivers/amlogic/tvin/isp/isp_hw.c
index 5267e87c4d2b..47341a73c6dc 100755
--- a/drivers/amlogic/tvin/isp/isp_hw.c
+++ b/drivers/amlogic/tvin/isp/isp_hw.c
@@ -248,6 +248,12 @@ void isp_set_af_stat(xml_af_t *afs,unsigned int w,unsigned int h)
 	WR(ISP_AFC_WIND4_LR,(tmp_w<<3)<<16|tmp_w*11);
 	WR(ISP_AFC_WIND4_TB,(tmp_h<<3)<<16|tmp_h*11);
 }
+void isp_set_af_scan_stat(unsigned int x0,unsigned int y0,unsigned int x1,unsigned int y1)
+{
+	WR(ISP_AFC_WIND0_LR,x1|x0<<16);
+	WR(ISP_AFC_WIND0_TB,y1|y0<<16);
+	WR(ISP_AFC_FILTER_SEL,0x000170f0);
+}
 /*
 *reg 0xac~0xae
 */
@@ -272,12 +278,6 @@ void isp_set_blenr_stat(unsigned int x0,unsigned int y0,unsigned int x1,unsigned
 	WR(ISP_BLNR_WIND_LR, x1|x0<<16);
 	WR(ISP_BLNR_WIND_TB, y1|y0<<16);
 	WR_BITS(ISP_BLNR_CTRL,1,BLNR_STATISTICS_EN_BIT,BLNR_STATISTICS_EN_WID);
-
-
-	WR(ISP_AFC_WIND0_LR,x1|x0<<16);
-	WR(ISP_AFC_WIND0_TB,y1|y0<<16);
-	WR(ISP_AFC_FILTER_SEL,0x000170f0);
-
 }
 /*
 *reg 0xb0~0xb1
@@ -667,15 +667,20 @@ void isp_get_af_stat(isp_af_stat_t * af_stat)
 	}
 	return;
 }
-
-void isp_get_blnr_stat(isp_blnr_stat_t *blnr_stat)
+void isp_get_af_scan_stat(isp_blnr_stat_t *blnr_stat)
 {
 	int i = 0, af = isp_rd(ISP_RO_AFC_WIND0_F0);
+	for(i=0;i<4;i++){
+		blnr_stat->ac[i] = af;
+	}
+}
+void isp_get_blnr_stat(isp_blnr_stat_t *blnr_stat)
+{
+	int i = 0;
 
 	for(i=0;i<4;i++){
 		blnr_stat->dc[i] = isp_rd(ISP_RO_BLNR_GRBG_DCSUM0+i);
-		blnr_stat->ac[i] = isp_rd(ISP_RO_BLNR_GRBG_ACSUM0+i);
-		blnr_stat->ac[i] = af;
+		//blnr_stat->ac[i] = isp_rd(ISP_RO_BLNR_GRBG_ACSUM0+i);
 	}
 
 	return;
diff --git a/drivers/amlogic/tvin/isp/isp_hw.h b/drivers/amlogic/tvin/isp/isp_hw.h
index bfa56f020344..b52f3930f095 100755
--- a/drivers/amlogic/tvin/isp/isp_hw.h
+++ b/drivers/amlogic/tvin/isp/isp_hw.h
@@ -88,6 +88,7 @@ extern void isp_set_nr(xml_nr_t *nr);
 extern void isp_set_awb_stat(xml_awb_t *awb,unsigned int w,unsigned int h);
 extern void isp_set_ae_stat(xml_ae_t *ae,unsigned int w,unsigned int h);
 extern void isp_set_af_stat(xml_af_t *af,unsigned int w,unsigned int h);
+extern void isp_set_af_scan_stat(unsigned int x0,unsigned int y0,unsigned int x1,unsigned int y1);
 extern void isp_set_blenr_stat(unsigned int x0,unsigned int y0,unsigned int x1,unsigned int y1);
 extern void isp_set_dbg(xml_dbg_t *dbg);
 extern void isp_set_lnsd_mode(unsigned int mode);
@@ -97,6 +98,7 @@ extern void isp_set_manual_wb(xml_wb_manual_t *wb);
 extern void isp_get_awb_stat(isp_awb_stat_t *awb_stat);
 extern void isp_get_ae_stat(isp_ae_stat_t *ae_stat);
 extern void isp_get_af_stat(isp_af_stat_t *af_stat);
+extern void isp_get_af_scan_stat(isp_blnr_stat_t *blnr_stat);
 extern void isp_get_blnr_stat(isp_blnr_stat_t *blnr_stat);
 extern void isp_set_ae_win(unsigned int left, unsigned int right, unsigned int top, unsigned int bottom);
 extern void isp_set_awb_win(unsigned int left, unsigned int right, unsigned int top, unsigned int bottom);
diff --git a/drivers/amlogic/tvin/isp/isp_sm.c b/drivers/amlogic/tvin/isp/isp_sm.c
index cc57b236ebfc..f07132243176 100755
--- a/drivers/amlogic/tvin/isp/isp_sm.c
+++ b/drivers/amlogic/tvin/isp/isp_sm.c
@@ -1225,6 +1225,7 @@ void isp_af_sm(isp_dev_t *devp)
 
 	switch(sm_state.af_state){
 		case AF_INIT:
+			isp_set_blenr_stat(af_info->x0,af_info->y0,af_info->x1,af_info->y1);
 			af_info->last_great_step = af_alg->af_step_max_thre;
 			if((devp->flag&ISP_FLAG_AE)&&(sm_state.ae_down)){
 			/*awb brake,ae brake*/
@@ -1332,6 +1333,7 @@ void isp_af_sm(isp_dev_t *devp)
 					else
 						sm_state.af_state = AF_NULL;
 					isp_set_blenr_stat(af_info->x0,af_info->y0,af_info->x1,af_info->y1);
+					isp_set_af_scan_stat(af_info->x0,af_info->y0,af_info->x1,af_info->y1);
 				} else {/*af success*/
 					/*enable awb,enable af*/
 				        devp->flag |= af_info->flag_bk;
@@ -1349,6 +1351,7 @@ void isp_af_sm(isp_dev_t *devp)
 					else
 						sm_state.af_state = AF_NULL;
 					isp_set_blenr_stat(af_info->x0,af_info->y0,af_info->x1,af_info->y1);
+					isp_set_af_scan_stat(af_info->x0,af_info->y0,af_info->x1,af_info->y1);
 				}
 			}
 			break;
-- 
2.19.0

