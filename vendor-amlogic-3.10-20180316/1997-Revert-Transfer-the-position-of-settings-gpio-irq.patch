From bc15a8e60a0181a289ae29333f3ec69930ee271e Mon Sep 17 00:00:00 2001
From: "chunxue.yu" <chunxue.yu@amlogic.com>
Date: Wed, 20 Nov 2013 17:25:47 +0800
Subject: [PATCH 1997/5965] Revert "Transfer the position of settings gpio irq"

This reverts commit babe78a886c55b199b07c79ef0a455c65b023fcf.
---
 drivers/amlogic/input/touchscreen/common.c       | 11 +++--------
 .../amlogic/input/touchscreen/focaltech_5x06.c   |  6 +++---
 .../amlogic/input/touchscreen/goodix_gt81xx.c    |  4 ++--
 drivers/amlogic/input/touchscreen/gslx680.c      | 16 ++++++++--------
 drivers/amlogic/input/touchscreen/gt9xx/gt9xx.h  |  2 +-
 5 files changed, 17 insertions(+), 22 deletions(-)

diff --git a/drivers/amlogic/input/touchscreen/common.c b/drivers/amlogic/input/touchscreen/common.c
index 50bb13359949..5c6fe365163a 100755
--- a/drivers/amlogic/input/touchscreen/common.c
+++ b/drivers/amlogic/input/touchscreen/common.c
@@ -321,12 +321,9 @@ GET_DT_ERR_TYPE get_dt_data(struct device_node* of_node, struct touch_pdata *pda
     pdata->gpio_interrupt = amlogic_gpio_name_map_num(str);
     printk("%s: alloc gpio_interrupt(%s)!\n", pdata->owner, str);
     if (pdata->gpio_interrupt <= 0) {
-      pdata->gpio_interrupt = 0;
-      printk("%s: faild to alloc gpio_interrupt(%s)!\n", pdata->owner, str);
-      //return ERR_GPIO_REQ;
-    }
-	else {
-      pdata->gpio_interrupt = 0;
+    	pdata->gpio_interrupt = 0;
+    	printk("%s: faild to alloc gpio_interrupt(%s)!\n", pdata->owner, str);
+      return ERR_GPIO_REQ;
     }
   }
 
@@ -415,8 +412,6 @@ GET_DT_ERR_TYPE request_touch_gpio(struct touch_pdata *pdata)
         return ERR_GPIO_REQ;
       }
 	    printk("%s: request gpio_interrupt = (%d)\n",pdata->owner, pdata->gpio_interrupt);
-	    aml_gpio_direction_input(pdata->gpio_interrupt);
-	    aml_gpio_to_irq(pdata->gpio_interrupt, pdata->irq-INT_GPIO_0, pdata->irq_edge);
 	}
 	if (pdata->gpio_reset) {
       err = aml_gpio_request(pdata->gpio_reset);
diff --git a/drivers/amlogic/input/touchscreen/focaltech_5x06.c b/drivers/amlogic/input/touchscreen/focaltech_5x06.c
index c053a71fa590..59c8b11bfbf2 100755
--- a/drivers/amlogic/input/touchscreen/focaltech_5x06.c
+++ b/drivers/amlogic/input/touchscreen/focaltech_5x06.c
@@ -1244,9 +1244,9 @@ ft5x0x_ts_probe(struct i2c_client *client, const struct i2c_device_id *id)
 		err = -ESRCH;
 		goto exit_create_singlethread;
 	}
-//	aml_gpio_direction_input(g_pdata->gpio_interrupt);
-//	aml_gpio_to_irq(g_pdata->gpio_interrupt, g_pdata->irq-INT_GPIO_0, g_pdata->irq_edge);
-	disable_irq_nosync(g_pdata->irq);
+	aml_gpio_direction_input(g_pdata->gpio_interrupt);
+  aml_gpio_to_irq(g_pdata->gpio_interrupt, g_pdata->irq, g_pdata->irq_edge);
+  disable_irq_nosync(g_pdata->irq);
 	err = request_irq(client->irq, ft5x0x_ts_interrupt, IRQF_DISABLED, client->name, ft5x0x_ts);
 	if (err < 0) {
 		dev_err(&client->dev, "request irq failed\n");
diff --git a/drivers/amlogic/input/touchscreen/goodix_gt81xx.c b/drivers/amlogic/input/touchscreen/goodix_gt81xx.c
index 6914856df326..893849e37640 100755
--- a/drivers/amlogic/input/touchscreen/goodix_gt81xx.c
+++ b/drivers/amlogic/input/touchscreen/goodix_gt81xx.c
@@ -1106,8 +1106,8 @@ static int goodix_ts_probe(struct i2c_client *client, const struct i2c_device_id
 //			IRQF_DISABLED,
 //			client->name, ts);
 
-//		aml_gpio_direction_input(g_pdata->gpio_interrupt);
-//		aml_gpio_to_irq(g_pdata->gpio_interrupt, g_pdata->irq-INT_GPIO_0, g_pdata->irq_edge);
+		aml_gpio_direction_input(g_pdata->gpio_interrupt);
+		aml_gpio_to_irq(g_pdata->gpio_interrupt, g_pdata->irq, g_pdata->irq_edge);
 		ret = request_irq(client->irq, goodix_ts_irq_handler, IRQF_DISABLED, client->name, ts);
 		if (ret < 0) {
 			dev_err(&client->dev,"Cannot allocate ts INT!ERRNO:%d\n", ret);
diff --git a/drivers/amlogic/input/touchscreen/gslx680.c b/drivers/amlogic/input/touchscreen/gslx680.c
index 0ca605d964a8..0a5506da8226 100755
--- a/drivers/amlogic/input/touchscreen/gslx680.c
+++ b/drivers/amlogic/input/touchscreen/gslx680.c
@@ -186,10 +186,10 @@ static int gslX680_chip_init(struct touch_pdata *pdata)
 	mdelay(120); // > 100ms
 	
 #ifdef CONFIG_OF
-//	 if (pdata->gpio_interrupt) {
-//	  aml_gpio_direction_input(pdata->gpio_interrupt);
-//	  aml_gpio_to_irq(pdata->gpio_interrupt, pdata->irq-INT_GPIO_0, pdata->irq_edge);
-//	}
+	 if (pdata->gpio_interrupt) {
+	  aml_gpio_direction_input(pdata->gpio_interrupt);
+	  aml_gpio_to_irq(pdata->gpio_interrupt, pdata->irq, pdata->irq_edge);
+	}
 #else
   gpio_set_status(PAD_GPIOA_16, gpio_status_in);
   gpio_irq_set(PAD_GPIOA_16, GPIO_IRQ(INT_GPIO_0-INT_GPIO_0, GPIO_IRQ_RISING));
@@ -1143,11 +1143,11 @@ static int gsl_ts_probe(struct i2c_client *client,
 	ts_com->software_reset = gslx680_software_reset;
 	ts_com->read_version = gslx680_test_i2c;
 	ts_com->upgrade_touch = gslx680_upgrade_touch;
-	SCREEN_MAX_X = g_pdata->xres;
-	SCREEN_MAX_Y = g_pdata->yres;
-	MAX_FINGERS = g_pdata->max_num;
+  SCREEN_MAX_X = g_pdata->xres;
+  SCREEN_MAX_Y = g_pdata->yres;
+  MAX_FINGERS = g_pdata->max_num;
 	gslX680_chip_init(g_pdata);
-	printk("===== gslx680 TP test start =====\n");
+  printk("===== gslx680 TP test start =====\n");
 	rc = test_i2c(client);
 	if(rc){
 		printk("!!! gslx680 TP is not exist !!!\n");
diff --git a/drivers/amlogic/input/touchscreen/gt9xx/gt9xx.h b/drivers/amlogic/input/touchscreen/gt9xx/gt9xx.h
index 0dd57f954ece..bc57472df9a3 100755
--- a/drivers/amlogic/input/touchscreen/gt9xx/gt9xx.h
+++ b/drivers/amlogic/input/touchscreen/gt9xx/gt9xx.h
@@ -96,7 +96,7 @@ a sample config, send this config should cause the chip cannot work normally*/
                                         }while(0)
 #define GTP_GPIO_AS_INT(pin)            do{\
                                             aml_gpio_direction_input(pin);\
-                                            aml_gpio_to_irq(pin, GTP_INT_IRQ-INT_GPIO_0, ts_com->irq_edge);\
+                                            aml_gpio_to_irq(pin, GTP_INT_IRQ, ts_com->irq_edge);\
                                         }while(0)
 //#define GTP_GPIO_GET_VALUE(pin)         gpio_get_value(pin)
 //#define GTP_GPIO_OUTPUT(pin,level)      gpio_direction_output(pin,level)
-- 
2.19.0

