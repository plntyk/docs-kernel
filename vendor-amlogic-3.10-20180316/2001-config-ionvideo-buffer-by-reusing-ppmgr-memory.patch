From 1c7330a1be30c22fa2cc3697fb7d3bef5cb2ee91 Mon Sep 17 00:00:00 2001
From: "shuai.cao" <shuai.cao@amlogic.com>
Date: Wed, 20 Nov 2013 18:56:26 +0800
Subject: [PATCH 2001/5965] config ionvideo buffer by reusing ppmgr memory

---
 arch/arm/boot/dts/amlogic/meson8_ZeBu.dtd    |  1 +
 arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd |  1 +
 arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd |  1 +
 arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd |  1 +
 arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd |  1 +
 arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd |  1 +
 arch/arm/boot/dts/amlogic/meson8_pxp.dtd     |  1 +
 arch/arm/boot/dts/amlogic/meson8_skt.dtd     |  1 +
 arch/arm/configs/meson8_defconfig            |  1 +
 drivers/amlogic/ionvideo/ionvideo.c          | 36 ++------
 drivers/amlogic/ionvideo/ionvideo.h          |  9 +-
 drivers/amlogic/ionvideo/ppmgr2.c            | 86 ++++++++++----------
 drivers/amlogic/ionvideo/videobuf2-ion.c     | 10 +--
 13 files changed, 66 insertions(+), 84 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_ZeBu.dtd b/arch/arm/boot/dts/amlogic/meson8_ZeBu.dtd
index f3bbbfbc28d2..fcc948fc6c93 100755
--- a/arch/arm/boot/dts/amlogic/meson8_ZeBu.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_ZeBu.dtd
@@ -118,6 +118,7 @@ void root_func(){
         compatible = "amlogic,ion_dev";
         dev_name = "ion_dev";
         status = "ok";
+        reg = <0x14500000 0x03000000>;
     };
 /// **************************************************************************************	
 /// -   DISP&MM-FB
diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
index 7f14690b882c..2bc70585883a 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
@@ -118,6 +118,7 @@ void root_func(){
         compatible = "amlogic,ion_dev";
         dev_name = "ion_dev";
         status = "ok";
+        reg = <0xb400000 0x01400000>;
     };
 /// **************************************************************************************	
 /// -   DISP&MM-FB
diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd
index 4f19ba2d2ed4..7b2e8aba62de 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_v1.dtd
@@ -118,6 +118,7 @@ void root_func(){
         compatible = "amlogic,ion_dev";
         dev_name = "ion_dev";
         status = "ok";
+        reg = <0x1a300000 0x01400000>;
     };
 /// **************************************************************************************	
 /// -   DISP&MM-FB
diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
index 0f7a6956ec0c..3e19780199f3 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
@@ -118,6 +118,7 @@ void root_func(){
         compatible = "amlogic,ion_dev";
         dev_name = "ion_dev";
         status = "ok";
+        reg = <0x0bd00000 0x01000000>;
     };
 /// **************************************************************************************	
 /// -   DISP&MM-FB
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
index 69ecee758b38..7305cae47498 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
@@ -119,6 +119,7 @@ void root_func(){
         compatible = "amlogic,ion_dev";
         dev_name = "ion_dev";
         status = "ok";
+        reg = <0x08500000 0x03000000>;
     };
 /// **************************************************************************************	
 /// -   DISP&MM-FB
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
index 84721afe219f..cf102791d363 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
@@ -118,6 +118,7 @@ void root_func(){
         compatible = "amlogic,ion_dev";
         dev_name = "ion_dev";
         status = "ok";
+        reg = <0x08500000 0x03000000>;
     };
 /// **************************************************************************************	
 /// -   DISP&MM-FB
diff --git a/arch/arm/boot/dts/amlogic/meson8_pxp.dtd b/arch/arm/boot/dts/amlogic/meson8_pxp.dtd
index 7ade22e7ceae..6270c211543b 100755
--- a/arch/arm/boot/dts/amlogic/meson8_pxp.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_pxp.dtd
@@ -118,6 +118,7 @@ void root_func(){
         compatible = "amlogic,ion_dev";
         dev_name = "ion_dev";
         status = "ok";
+        reg = <0x14500000 0x03000000>;
     };
 /// **************************************************************************************	
 /// -   DISP&MM-FB
diff --git a/arch/arm/boot/dts/amlogic/meson8_skt.dtd b/arch/arm/boot/dts/amlogic/meson8_skt.dtd
index 4fe7f15ded60..d63078d14513 100755
--- a/arch/arm/boot/dts/amlogic/meson8_skt.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_skt.dtd
@@ -118,6 +118,7 @@ void root_func(){
         compatible = "amlogic,ion_dev";
         dev_name = "ion_dev";
         status = "ok";
+        reg = <0x14500000 0x03000000>;
     };
 /// **************************************************************************************	
 /// -   DISP&MM-FB
diff --git a/arch/arm/configs/meson8_defconfig b/arch/arm/configs/meson8_defconfig
index afb71dd38551..bc087a68339e 100755
--- a/arch/arm/configs/meson8_defconfig
+++ b/arch/arm/configs/meson8_defconfig
@@ -379,3 +379,4 @@ CONFIG_AML_DVFS=y
 CONFIG_RTC_CLASS=y
 CONFIG_AML_RTC=y
 CONFIG_PM_RUNTIME=y
+CONFIG_AMLOGIC_IONVIDEO=y
diff --git a/drivers/amlogic/ionvideo/ionvideo.c b/drivers/amlogic/ionvideo/ionvideo.c
index 78edb7701fe0..4943cd8a074c 100755
--- a/drivers/amlogic/ionvideo/ionvideo.c
+++ b/drivers/amlogic/ionvideo/ionvideo.c
@@ -108,13 +108,15 @@ static void videoc_compute_pts(struct ionvideo_dev *dev, struct vframe_s* vf) {
     if (vf->pts) {
         timestamp_vpts_set(vf->pts);
         dev->receiver_register = 0;
+        dev->pts = vf->pts_us64;
     } else if (dev->receiver_register){
         timestamp_vpts_set(timestamp_pcrscr_get());
         dev->receiver_register = 0;
+        dev->pts = timestamp_vpts_get();
     } else {
         timestamp_vpts_inc(DUR2PTS(vf->duration));
+        dev->pts = timestamp_vpts_get();
     }
-    dev->pts = vf->pts_us64;
 }
 
 static int ionvideo_fillbuff(struct ionvideo_dev *dev, struct ionvideo_buffer *buf) {
@@ -175,7 +177,7 @@ static void ionvideo_thread_tick(struct ionvideo_dev *dev) {
 
 static void ionvideo_sleep(struct ionvideo_dev *dev) {
     struct ionvideo_dmaqueue *dma_q = &dev->vidq;
-    int timeout;
+    //int timeout;
     DECLARE_WAITQUEUE(wait, current);
 
     dprintk(dev, 4, "%s dma_q=0x%08lx\n", __func__, (unsigned long)dma_q);
@@ -454,7 +456,7 @@ static int vidioc_try_fmt_vid_cap(struct file *file, void *priv, struct v4l2_for
     }
 
     f->fmt.pix.field = V4L2_FIELD_INTERLACED;
-    v4l_bound_align_image(&f->fmt.pix.width, 48, MAX_WIDTH, 16, &f->fmt.pix.height, 32, MAX_HEIGHT, 0, 0);
+    v4l_bound_align_image(&f->fmt.pix.width, 48, MAX_WIDTH, 4, &f->fmt.pix.height, 32, MAX_HEIGHT, 0, 0);
     f->fmt.pix.bytesperline = (f->fmt.pix.width * fmt->depth) >> 3;
     f->fmt.pix.sizeimage = f->fmt.pix.height * f->fmt.pix.bytesperline;
     if (fmt->is_yuv)
@@ -514,8 +516,9 @@ static int vidioc_qbuf(struct file *file, void *priv, struct v4l2_buffer *p) {
     q = dev->vdev.queue;
     if (ppmgr2_dev->inited_canvas < q->num_buffers){
         struct vb2_buffer *vb;
+        void* phy_addr = NULL;
         vb = q->bufs[p->index];
-        void* phy_addr = vb2_plane_cookie(vb, 0);
+        phy_addr = vb2_plane_cookie(vb, 0);
         if (phy_addr && !ppmgr2_canvas_config(ppmgr2_dev, dev->width, dev->height, dev->fmt->fourcc, phy_addr, p->index)) {
             ppmgr2_dev->inited_canvas += 1;
         } else {
@@ -562,8 +565,8 @@ static int vidioc_s_input(struct file *file, void *priv, unsigned int i) {
 /* --- controls ---------------------------------------------- */
 
 static int ionvideo_g_volatile_ctrl(struct v4l2_ctrl *ctrl) {
-    struct ionvideo_dev
-    *dev = container_of(ctrl->handler, struct ionvideo_dev, ctrl_handler);
+    //struct ionvideo_dev
+    //*dev = container_of(ctrl->handler, struct ionvideo_dev, ctrl_handler);
 
     //if (ctrl == dev->autogain)
     //    dev->gain->val = jiffies & 0xff;
@@ -746,27 +749,6 @@ static int ionvideo_release(void) {
     return 0;
 }
 
-static void vidioc_unregister(struct ionvideo_dev *dev) {
-
-    struct ionvideo_dmaqueue *dma_q = &dev->vidq;
-    unsigned long flags = 0;
-
-    /* Release all active buffers */
-    while (!list_empty(&dma_q->active)) {
-        struct ionvideo_buffer *buf;
-
-        spin_lock_irqsave(&dev->slock, flags);
-        buf = list_entry(dma_q->active.next, struct ionvideo_buffer, list);
-        list_del(&buf->list);
-        spin_unlock_irqrestore(&dev->slock, flags);
-
-        buf->vb.v4l2_buf.timestamp.tv_sec = 0;
-        buf->vb.v4l2_buf.timestamp.tv_usec = dev->pts;
-        vb2_buffer_done(&buf->vb, VB2_BUF_STATE_DONE);
-        dprintk(dev, 2, "[%p/%d] done\n", buf, buf->vb.v4l2_buf.index);
-    }
-}
-
 static int video_receiver_event_fun(int type, void* data, void* private_data) {
     struct ionvideo_dev *dev = (struct ionvideo_dev *) private_data;
 
diff --git a/drivers/amlogic/ionvideo/ionvideo.h b/drivers/amlogic/ionvideo/ionvideo.h
index fdcdf99f95e7..c570e8666f6d 100755
--- a/drivers/amlogic/ionvideo/ionvideo.h
+++ b/drivers/amlogic/ionvideo/ionvideo.h
@@ -17,6 +17,7 @@
 #include <media/v4l2-fh.h>
 #include <media/v4l2-event.h>
 #include <media/v4l2-common.h>
+#include <media/videobuf2-core.h>
 
 #include <linux/mm.h>
 #include <mach/mod_gate.h>
@@ -177,12 +178,4 @@ void ppmgr2_set_mirror(struct ppmgr2_device *ppd, int mirror);
 void ppmgr2_set_paint_mode(struct ppmgr2_device *ppd, int paint_mode);
 int v4l_to_ge2d_format(int v4l2_format);
 
-static inline void paint_mode_convert(int paint_mode, int* src_position, int* dst_paint_position, int* dst_plane_position);
-static inline void ge2d_src_config(struct vframe_s* vf, config_para_ex_t* ge2d_config);
-static inline void ge2d_mirror_config(int dst_mirror, config_para_ex_t* ge2d_config);
-static inline void ge2d_angle_config(int dst_angle, config_para_ex_t* ge2d_config);
-static int get_input_format(struct vframe_s* vf);
-static int ge2d_paint_dst(ge2d_context_t *context, config_para_ex_t* ge2d_config, int dst_canvas_id, int dst_pixel_format, int* src_position, int* dst_paint_position, int* dst_plane_position);
-
-
 #endif
diff --git a/drivers/amlogic/ionvideo/ppmgr2.c b/drivers/amlogic/ionvideo/ppmgr2.c
index 31a9bd1a69f3..d8d291ac22b0 100755
--- a/drivers/amlogic/ionvideo/ppmgr2.c
+++ b/drivers/amlogic/ionvideo/ppmgr2.c
@@ -16,8 +16,8 @@ static inline void paint_mode_convert(int paint_mode, int* src_position, int* ds
         dst_paint_position[2] = dst_plane_position[2];
         dst_paint_position[3] = dst_plane_position[3];
     } else if (paint_mode == 1) { //keep size
-        dst_paint_position[0] = dst_plane_position[2] - src_position[2] >> 1;
-        dst_paint_position[1] = dst_plane_position[3] - src_position[3] >> 1;
+        dst_paint_position[0] = (dst_plane_position[2] - src_position[2]) >> 1;
+        dst_paint_position[1] = (dst_plane_position[3] - src_position[3]) >> 1;
         dst_paint_position[2] = src_position[2];
         dst_paint_position[3] = src_position[3];
     } else if (paint_mode == 2) {
@@ -29,8 +29,8 @@ static inline void paint_mode_convert(int paint_mode, int* src_position, int* ds
             dw = dst_plane_position[2];
             dh = dw * src_position[3] / src_position[2];
         }
-        dst_paint_position[0] = dst_plane_position[2] - dw >> 1;
-        dst_paint_position[1] = dst_plane_position[3] - dh >> 1;
+        dst_paint_position[0] = (dst_plane_position[2] - dw) >> 1;
+        dst_paint_position[1] = (dst_plane_position[3] - dh) >> 1;
         dst_paint_position[2] = dw;
         dst_paint_position[3] = dh;
     } else if (paint_mode == 3) { //keep ration black
@@ -42,8 +42,8 @@ static inline void paint_mode_convert(int paint_mode, int* src_position, int* ds
             dh = dst_plane_position[3];
             dw = dh * src_position[2] / src_position[3];
         }
-        dst_paint_position[0] = dst_plane_position[2] - dw >> 1;
-        dst_paint_position[1] = dst_plane_position[3] - dh >> 1;
+        dst_paint_position[0] = (dst_plane_position[2] - dw) >> 1;
+        dst_paint_position[1] = (dst_plane_position[3] - dh) >> 1;
         dst_paint_position[2] = dw;
         dst_paint_position[3] = dh;
     } else if (paint_mode == 4) {
@@ -51,6 +51,37 @@ static inline void paint_mode_convert(int paint_mode, int* src_position, int* ds
     }
 }
 
+static int get_input_format(struct vframe_s* vf) {
+    int format = GE2D_FORMAT_M24_NV21;
+
+    if (vf->type & VIDTYPE_VIU_422) {
+        if ((vf->type & 3) == VIDTYPE_INTERLACE_BOTTOM) {
+            format = GE2D_FORMAT_S16_YUV422 | (GE2D_FORMAT_S16_YUV422B & (3 << 3));
+        } else if ((vf->type & 3) == VIDTYPE_INTERLACE_TOP) {
+            format = GE2D_FORMAT_S16_YUV422 | (GE2D_FORMAT_S16_YUV422T & (3 << 3));
+        } else {
+            format = GE2D_FORMAT_S16_YUV422;
+        }
+    } else if (vf->type & VIDTYPE_VIU_NV21) {
+        if ((vf->type & 3) == VIDTYPE_INTERLACE_BOTTOM) {
+            format = GE2D_FORMAT_M24_NV21 | (GE2D_FORMAT_M24_NV21B & (3 << 3));
+        } else if ((vf->type & 3) == VIDTYPE_INTERLACE_TOP) {
+            format = GE2D_FORMAT_M24_NV21 | (GE2D_FORMAT_M24_NV21T & (3 << 3));
+        } else {
+            format = GE2D_FORMAT_M24_NV21;
+        }
+    } else {
+        if ((vf->type & 3) == VIDTYPE_INTERLACE_BOTTOM) {
+            format = GE2D_FORMAT_M24_YUV420 | (GE2D_FMT_M24_YUV420B & (3 << 3));
+        } else if ((vf->type & 3) == VIDTYPE_INTERLACE_TOP) {
+            format = GE2D_FORMAT_M24_YUV420 | (GE2D_FORMAT_M24_YUV420T & (3 << 3));
+        } else {
+            format = GE2D_FORMAT_M24_YUV420;
+        }
+    }
+    return format;
+}
+
 static inline void ge2d_src_config(struct vframe_s* vf, config_para_ex_t* ge2d_config) {
     canvas_t src_cs0, src_cs1, src_cs2;
     struct vframe_s* src_vf = vf;
@@ -93,7 +124,7 @@ static inline void ge2d_src_config(struct vframe_s* vf, config_para_ex_t* ge2d_c
         ge2d_config->src_para.height = src_vf->height;
     }
     ge2d_config->src2_para.mem_type = CANVAS_TYPE_INVALID;
-    ppmgr2_printk(2, "vf_width is %d , vf_height is %d type:%p\n", vf->width, vf->height, vf->type);
+    ppmgr2_printk(2, "vf_width is %d , vf_height is %d type:%p\n", vf->width, vf->height, (void *)vf->type);
 }
 
 static int ge2d_paint_dst(ge2d_context_t *context, config_para_ex_t* ge2d_config, int dst_canvas_id, int dst_pixel_format, int* src_position, int* dst_paint_position, int* dst_plane_position) {
@@ -162,7 +193,7 @@ static int ge2d_paint_dst(ge2d_context_t *context, config_para_ex_t* ge2d_config
         }
         stretchblt_noalpha(context, src_position[0], src_position[1], src_position[2], src_position[3], dst_paint_position[0], dst_paint_position[1], dst_paint_position[2], dst_paint_position[3]);
     }
-    ppmgr2_printk(2, "dst addr:%p w:%d h:%d canvas_id:%p format:%p\n", dst_cd.addr, dst_cd.width, dst_cd.height, dst_canvas_id, ge2d_config->dst_para.format);
+    ppmgr2_printk(2, "dst addr:%p w:%d h:%d canvas_id:%p format:%p\n", (void *)dst_cd.addr, dst_cd.width, dst_cd.height, (void *)dst_canvas_id, (void *)ge2d_config->dst_para.format);
     ppmgr2_printk(2, "dst plane w:%d h:%d paint w:%d h:%d\n", dst_plane_position[2], dst_plane_position[3], dst_paint_position[2], dst_paint_position[3]);
 
     return 0;
@@ -196,37 +227,6 @@ static inline void ge2d_angle_config(int dst_angle, config_para_ex_t* ge2d_confi
     }
 }
 
-static int get_input_format(struct vframe_s* vf) {
-    int format = GE2D_FORMAT_M24_NV21;
-
-    if (vf->type & VIDTYPE_VIU_422) {
-        if ((vf->type & 3) == VIDTYPE_INTERLACE_BOTTOM) {
-            format = GE2D_FORMAT_S16_YUV422 | (GE2D_FORMAT_S16_YUV422B & (3 << 3));
-        } else if ((vf->type & 3) == VIDTYPE_INTERLACE_TOP) {
-            format = GE2D_FORMAT_S16_YUV422 | (GE2D_FORMAT_S16_YUV422T & (3 << 3));
-        } else {
-            format = GE2D_FORMAT_S16_YUV422;
-        }
-    } else if (vf->type & VIDTYPE_VIU_NV21) {
-        if ((vf->type & 3) == VIDTYPE_INTERLACE_BOTTOM) {
-            format = GE2D_FORMAT_M24_NV21 | (GE2D_FORMAT_M24_NV21B & (3 << 3));
-        } else if ((vf->type & 3) == VIDTYPE_INTERLACE_TOP) {
-            format = GE2D_FORMAT_M24_NV21 | (GE2D_FORMAT_M24_NV21T & (3 << 3));
-        } else {
-            format = GE2D_FORMAT_M24_NV21;
-        }
-    } else {
-        if ((vf->type & 3) == VIDTYPE_INTERLACE_BOTTOM) {
-            format = GE2D_FORMAT_M24_YUV420 | (GE2D_FMT_M24_YUV420B & (3 << 3));
-        } else if ((vf->type & 3) == VIDTYPE_INTERLACE_TOP) {
-            format = GE2D_FORMAT_M24_YUV420 | (GE2D_FORMAT_M24_YUV420T & (3 << 3));
-        } else {
-            format = GE2D_FORMAT_M24_YUV420;
-        }
-    }
-    return format;
-}
-
 /*
  * use ppmgr2 need to init ge2d_context_t, pixel_format, canvas_width, canvas_height,
  * phy_addr, buffer_size, canvas_number.
@@ -262,12 +262,12 @@ int ppmgr2_canvas_config(struct ppmgr2_device *ppd, int dst_width, int dst_heigh
     if (ppd->ge2d_fmt == GE2D_FORMAT_M24_NV21 || ppd->ge2d_fmt == GE2D_FORMAT_M24_NV12) {
         canvas_config(PPMGR2_CANVAS_INDEX + index * 2, (ulong) phy_addr, canvas_width, canvas_height, CANVAS_ADDR_NOWRAP, CANVAS_BLKMODE_LINEAR);
         canvas_config(PPMGR2_CANVAS_INDEX + index * 2 + 1, (ulong)(phy_addr + (canvas_width * canvas_height)), canvas_width, canvas_height >> 1, CANVAS_ADDR_NOWRAP, CANVAS_BLKMODE_LINEAR);
-        ppd->canvas_id[index] = (PPMGR2_CANVAS_INDEX + index * 2) | (PPMGR2_CANVAS_INDEX + index * 2 + 1 << 8);
+        ppd->canvas_id[index] = (PPMGR2_CANVAS_INDEX + index * 2) | ((PPMGR2_CANVAS_INDEX + index * 2 + 1) << 8);
     } else if (ppd->ge2d_fmt == GE2D_FORMAT_S8_Y) {
         canvas_config(PPMGR2_CANVAS_INDEX + index * 3, (ulong) phy_addr, canvas_width, canvas_height, CANVAS_ADDR_NOWRAP, CANVAS_BLKMODE_LINEAR);
         canvas_config(PPMGR2_CANVAS_INDEX + index * 3 + 1, (ulong)(phy_addr + canvas_width * canvas_height), canvas_width >> 1, canvas_height >> 1, CANVAS_ADDR_NOWRAP, CANVAS_BLKMODE_LINEAR);
         canvas_config(PPMGR2_CANVAS_INDEX + index * 3 + 2, (ulong)(phy_addr + (canvas_width * canvas_height * 5 >> 2)), canvas_width >> 1, canvas_height >> 1, CANVAS_ADDR_NOWRAP, CANVAS_BLKMODE_LINEAR);
-        ppd->canvas_id[index] = (PPMGR2_CANVAS_INDEX + index * 3) | (PPMGR2_CANVAS_INDEX + index * 3 + 1 << 8) | (PPMGR2_CANVAS_INDEX + index * 3 + 2 << 16);
+        ppd->canvas_id[index] = (PPMGR2_CANVAS_INDEX + index * 3) | ((PPMGR2_CANVAS_INDEX + index * 3 + 1) << 8) | ((PPMGR2_CANVAS_INDEX + index * 3 + 2) << 16);
     } else {
         int bpp = 0;
         if (ppd->ge2d_fmt == GE2D_FORMAT_S32_ABGR) {
@@ -304,8 +304,8 @@ void ppmgr2_set_paint_mode(struct ppmgr2_device *ppd, int paint_mode) {
 int ppmgr2_process(struct vframe_s* vf, struct ppmgr2_device *ppd, int index) {
     int ret = 0;
     struct vframe_s* src_vf = vf;
-    int src_position[4];
-    int dst_paint_position[4], dst_plane_position[4];
+    int src_position[4] = {0};
+    int dst_paint_position[4] = {0}, dst_plane_position[4] = {0};
     int dst_canvas_id = ppd->canvas_id[index];
     int dst_pixel_format = ppd->ge2d_fmt;
     ge2d_context_t *context = ppd->context;
diff --git a/drivers/amlogic/ionvideo/videobuf2-ion.c b/drivers/amlogic/ionvideo/videobuf2-ion.c
index 92706e316be1..2ab349d2eec6 100755
--- a/drivers/amlogic/ionvideo/videobuf2-ion.c
+++ b/drivers/amlogic/ionvideo/videobuf2-ion.c
@@ -35,10 +35,10 @@ struct vb2_ion_buf {
 
 static void vb2_ion_put(void *buf_priv);
 
-static void *vb2_ion_alloc(void *alloc_ctx, unsigned long size) {
+static void *vb2_ion_alloc(void *alloc_ctx, unsigned long size, gfp_t gfp_flags) {
     struct vb2_ion_buf *buf;
 
-    buf = kzalloc(sizeof(*buf), GFP_KERNEL);
+    buf = kzalloc(sizeof(*buf), GFP_KERNEL | gfp_flags);
     if (!buf)
         return NULL;
 
@@ -55,7 +55,6 @@ static void *vb2_ion_alloc(void *alloc_ctx, unsigned long size) {
     }
 
     atomic_inc(&buf->refcount);
-
     return buf;
 }
 
@@ -213,7 +212,6 @@ static int vb2_ion_map_dmabuf(void *mem_priv) {
 
 static void vb2_ion_unmap_dmabuf(void *mem_priv) {
     struct vb2_ion_buf *buf = mem_priv;
-    struct ion_buffer *buffer = buf->dbuf->priv;
 
     __arm_iounmap(buf->vaddr);
 
@@ -252,7 +250,7 @@ static void *vb2_ion_cookie(void *buf_priv)
 
     struct ion_buffer *buffer = buf->dbuf->priv;
 
-    return buffer->priv_phys;
+    return (void *)buffer->priv_phys;
 }
 
 const struct vb2_mem_ops vb2_ion_memops = {
@@ -267,7 +265,7 @@ const struct vb2_mem_ops vb2_ion_memops = {
     .vaddr = vb2_ion_vaddr,
     .mmap = vb2_ion_mmap,
     .num_users = vb2_ion_num_users,
-    .cookie     = vb2_ion_cookie,
+    .cookie = vb2_ion_cookie,
 };
 EXPORT_SYMBOL_GPL (vb2_ion_memops);
 
-- 
2.19.0

