From b6fe8ab8a76f477ae0abd8fdffc778d1357eca1f Mon Sep 17 00:00:00 2001
From: "chunhai.guo" <chunhai.guo@amlogic.com>
Date: Wed, 20 Nov 2013 21:52:51 +0800
Subject: [PATCH 2003/5965] pd82875: fix sdio debug board detecting error

---
 arch/arm/mach-meson8/include/mach/sd.h |   3 +-
 drivers/amlogic/mmc/aml_sdio.c         |  84 +-------------
 drivers/amlogic/mmc/amlsd.c            | 154 +++++++++++++++++++------
 drivers/amlogic/mmc/amlsd.h            |  13 ++-
 4 files changed, 134 insertions(+), 120 deletions(-)

diff --git a/arch/arm/mach-meson8/include/mach/sd.h b/arch/arm/mach-meson8/include/mach/sd.h
index 9335a2f87735..bca74b47617a 100755
--- a/arch/arm/mach-meson8/include/mach/sd.h
+++ b/arch/arm/mach-meson8/include/mach/sd.h
@@ -63,7 +63,6 @@ struct amlsd_platform {
 	unsigned int clkc_w;
 	unsigned int ctrl;
 	unsigned int clock;
-	unsigned int eject;
 	unsigned int low_burst;
 	unsigned int irq_in;
 	unsigned int irq_in_edge;
@@ -77,6 +76,7 @@ struct amlsd_platform {
     unsigned int gpio_dat3;
     unsigned int jtag_pin;
     int is_sduart;
+    bool is_in;
 
     /* we used this flag to filter some unnecessary cmd before initialized flow */
     bool is_fir_init; // has been initialized for the first time
@@ -134,7 +134,6 @@ struct amlsd_host {
 	unsigned int f_max;
 	unsigned int f_max_w;
 	unsigned int f_min;
-	unsigned int eject;
 	struct tasklet_struct cmd_tlet;
 	struct tasklet_struct data_tlet;
 	struct tasklet_struct busy_tlet;
diff --git a/drivers/amlogic/mmc/aml_sdio.c b/drivers/amlogic/mmc/aml_sdio.c
index c6c733f708b1..e920d9d4ae3f 100755
--- a/drivers/amlogic/mmc/aml_sdio.c
+++ b/drivers/amlogic/mmc/aml_sdio.c
@@ -508,7 +508,7 @@ void aml_sdio_request(struct mmc_host *mmc, struct mmc_request *mrq)
     if(aml_sdio_check_unsupport_cmd(mmc, mrq))
         return;
 
-	if(pdata->eject){
+	if(!pdata->is_in){
         mrq->cmd->error = -ENOMEDIUM;
         mmc_request_done(mmc, mrq);
 		return;
@@ -814,7 +814,7 @@ static void aml_sdio_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)
 {
 	struct amlsd_platform * pdata = mmc_priv(mmc);
 
-	if(pdata->eject)
+	if(!pdata->is_in)
 		return;
 
     /*set power*/
@@ -849,79 +849,7 @@ static int aml_sdio_get_ro(struct mmc_host *mmc)
 int aml_sdio_get_cd(struct mmc_host *mmc)
 {
 	struct amlsd_platform * pdata = mmc_priv(mmc);
-	int ret = 1;
-
-	if(pdata->cd)
-		ret = pdata->cd(pdata);
-	else
-		ret = 0; //inserted
-	pdata->eject = ret;
-	// printk("aml_sdio_get_cd port %d pdata->eject %d\n", pdata->port, pdata->eject);
-	return (ret?0:1);
-}
-
-static irqreturn_t aml_sdio_irq_cd(int irq, void *dev_id)
-{
-    // printk("cd dev_id %x\n", dev_id);
-	return IRQ_WAKE_THREAD;
-}
-
-static irqreturn_t aml_irq_cdin_thread(int irq, void *data)
-{
-	struct amlsd_platform *pdata = (struct amlsd_platform*)data;
-    int ret=0;
-
-    mdelay(500);
-    if(pdata->cd)
-		ret = pdata->cd(pdata);
-    if(!ret){
-        if(aml_is_sduart(pdata)){
-            printk("\033[0;40;33m Uart in\033[0m\n");
-            if(aml_is_sdjtag(pdata)){
-                aml_jtag_sd();
-                aml_uart_switch(pdata, 1);
-                pdata->eject = 1;
-                printk("\033[0;40;32m JTAG in\033[0m\n");
-                return IRQ_HANDLED;
-            }
-            aml_uart_switch(pdata, 1);
-            pdata->mmc->caps &= ~MMC_CAP_4_BIT_DATA;
-        }
-        else{
-            // printk("\033[0;40;35m normal SD card in \033[0m\n");
-            printk("normal SD card in\n");
-            aml_uart_switch(pdata, 0);
-            aml_jtag_gpioao();
-            if(pdata->caps & MMC_CAP_4_BIT_DATA)
-                pdata->mmc->caps |= MMC_CAP_4_BIT_DATA;
-        }
-        mmc_detect_change(pdata->mmc, msecs_to_jiffies(500));
-    } // else
-        // printk("\033[0;40;31m card in irq -> card out, ignore \033[0m\n");
-	return IRQ_HANDLED;
-}
-
-static irqreturn_t aml_irq_cdout_thread(int irq, void *data)
-{
-	struct amlsd_platform *pdata = (struct amlsd_platform*)data;
-    int ret=1;
-
-    mdelay(500);
-    if(pdata->cd)
-		ret = pdata->cd(pdata);
-    if(ret){
-        // printk("\033[0;40;31m card out \033[0m\n");
-        printk("card out\n");
-        aml_uart_switch(pdata, 0);
-        aml_jtag_gpioao();
-        if(pdata->caps & MMC_CAP_4_BIT_DATA)
-            pdata->mmc->caps |= MMC_CAP_4_BIT_DATA;
-        mmc_detect_change(pdata->mmc, msecs_to_jiffies(500));
-        aml_sdio_get_cd(pdata->mmc);
-    } // else{
-        // printk("\033[0;40;33m card out irq -> card in, ignore \033[0m\n");
-    // }
-	return IRQ_HANDLED;
+    return pdata->is_in; // 0: no inserted  1: inserted
 }
 
 #ifdef CONFIG_PM
@@ -1121,7 +1049,7 @@ static int aml_sdio_probe(struct platform_device *pdev)
        //init sdio reg here
         aml_sdio_init_param(pdata);
 
-        aml_sduart_detect(pdata);
+        aml_sduart_pre(pdata);
 
 		ret = mmc_add_host(mmc);
 		if (ret) {
@@ -1137,10 +1065,10 @@ static int aml_sdio_probe(struct platform_device *pdev)
 		if(pdata->irq_in && pdata->irq_out){
 			pdata->irq_init(pdata);
 			ret = request_threaded_irq(pdata->irq_in+INT_GPIO_0,
-                    (irq_handler_t)aml_sdio_irq_cd, aml_irq_cdin_thread,
+                    (irq_handler_t)aml_sdio_irq_cd, aml_irq_cd_thread,
                     IRQF_DISABLED, "mmc_in", (void*)pdata);
             ret |= request_threaded_irq(pdata->irq_out+INT_GPIO_0,
-                    (irq_handler_t)aml_sdio_irq_cd, aml_irq_cdout_thread,
+                    (irq_handler_t)aml_sdio_irq_cd, aml_irq_cd_thread,
                     IRQF_DISABLED, "mmc_out", (void*)pdata);
 			//ret = request_irq(pdata->irq_in+INT_GPIO_0, aml_sdio_irq_cd, IRQF_DISABLED, "mmc_in", pdata);
 			//ret |= request_irq(pdata->irq_out+INT_GPIO_0, aml_sdio_irq_cd, IRQF_DISABLED, "mmc_out", pdata);
diff --git a/drivers/amlogic/mmc/amlsd.c b/drivers/amlogic/mmc/amlsd.c
index 4c44234d161d..8e3ea92e5365 100755
--- a/drivers/amlogic/mmc/amlsd.c
+++ b/drivers/amlogic/mmc/amlsd.c
@@ -688,7 +688,7 @@ int of_amlsd_init(struct amlsd_platform* pdata)
 	return 0;
 }
 
-int aml_devm_pinctrl_put (struct amlsd_host* host)
+void aml_devm_pinctrl_put (struct amlsd_host* host)
 {
     if (host->pinctrl) {
         devm_pinctrl_put(host->pinctrl);
@@ -854,30 +854,47 @@ void aml_cs_dont_care (struct amlsd_platform * pdata) // chip select don't care
     }
 }
 
-int aml_is_sdjtag(struct amlsd_platform * pdata)
+static int aml_is_card_insert (struct amlsd_platform * pdata)
 {
-    int ret, jtag;
-    
-    if(pdata->jtag_pin != 0) {
-        ret = amlogic_gpio_request_one(pdata->jtag_pin, GPIOF_IN, MODULE_NAME);
-        if(ret){
-            printk("DAT1 pinmux used, return no jtag\n");
-            return 0;
-        }
-        CHECK_RET(ret);
-        jtag = amlogic_get_value(pdata->jtag_pin, MODULE_NAME);
-        // print_tmp("sd jtag_pin=%d\n", amlogic_get_value(pdata->jtag_pin, MODULE_NAME));
-        amlogic_gpio_free(pdata->jtag_pin, MODULE_NAME);
-        if(jtag == 1){
-            return 1;
-        }
+	int ret=0;
+
+	if(pdata->gpio_cd)
+		ret = amlogic_get_value(pdata->gpio_cd, MODULE_NAME); // 1: no inserted  0: inserted
+    // sdio_err("card %s\n", ret?"OUT":"IN");
+
+    ret = !ret; // reverse, so ---- 0: no inserted  1: inserted
+
+	return ret;
+}
+
+static int aml_is_sdjtag(struct amlsd_platform * pdata)
+{
+    int card0;
+    card0 = aml_get_reg32_bits(P_PREG_PAD_GPIO0_I, 22, 1);
+    if(card0 == 1){
+        return 1;
     }
+
+    // if(pdata->jtag_pin != 0) {
+        // ret = amlogic_gpio_request_one(pdata->jtag_pin, GPIOF_IN, MODULE_NAME);
+        // if(ret){
+            // printk("DAT1 pinmux used, return no jtag\n");
+            // return 0;
+        // }
+        // CHECK_RET(ret);
+        // jtag = amlogic_get_value(pdata->jtag_pin, MODULE_NAME);
+        // // print_tmp("sd jtag_pin=%d\n", amlogic_get_value(pdata->jtag_pin, MODULE_NAME));
+        // amlogic_gpio_free(pdata->jtag_pin, MODULE_NAME);
+        // if(jtag == 1){
+            // return 1;
+        // }
+    // }
     return 0;
 }
 
-int aml_is_sduart(struct amlsd_platform * pdata)
+static int aml_is_sduart(struct amlsd_platform * pdata)
 {
-    int ret, dat3;
+    int dat3;
 
     if(pdata->is_sduart)
         return 1;
@@ -904,13 +921,14 @@ int aml_is_sduart(struct amlsd_platform * pdata)
     return 0;
 }
 
-
-
 // int n=0;
-int aml_uart_switch(struct amlsd_platform* pdata, bool on)
+static int aml_uart_switch(struct amlsd_platform* pdata, bool on)
 {
     /*on : uart card pin, !on: uart ao pin*/
     if(on){
+        if (pdata->is_sduart) // switch ON already
+            return 0;
+
         print_tmp("aml_uart_switch %d \n\n\n\n\n", on);
         pdata->is_sduart = 1;
         aml_clr_reg32_mask(P_AO_RTI_PIN_MUX_REG, 0x1800); // UART_TX_AO_A
@@ -969,22 +987,90 @@ int aml_uart_switch(struct amlsd_platform* pdata, bool on)
 #endif
 }
 
-void aml_sduart_detect (struct amlsd_platform* pdata)
+static void aml_sd_uart_detect (struct amlsd_platform* pdata)
 {
-#ifdef CONFIG_ARCH_MESON8
-    if (((pdata->port == MESON_SDIO_PORT_B) || (pdata->port == MESON_SDIO_PORT_XC_B))) {
-        // clear pinmux of CARD_4 and make it as a gpio
-        CLEAR_CBUS_REG_MASK(PERIPHS_PIN_MUX_2, 0x00001040);
-        CLEAR_CBUS_REG_MASK(PERIPHS_PIN_MUX_8, 0x00000400);
-        if (aml_is_sduart(pdata)) {
-            if(pdata->caps & MMC_CAP_4_BIT_DATA) {
-                pdata->mmc->caps &= ~MMC_CAP_4_BIT_DATA;
+    static bool is_jtag = false;
+
+    if (aml_is_card_insert(pdata)){
+        if(aml_is_sduart(pdata)){
+            if (!pdata->is_sduart) { // status change
+                printk("\033[0;40;33m Uart in\033[0m\n");
                 aml_uart_switch(pdata, 1);
-                printk("\033[0;40;35m [%s] uart in, make sd card 1 bit bus width \033[0m\n", __FUNCTION__);
-            }
+                pdata->mmc->caps &= ~MMC_CAP_4_BIT_DATA;
+
+                if(aml_is_sdjtag(pdata)){
+                    is_jtag = true;
+                    aml_jtag_sd();
+                    pdata->is_in = false;
+                    printk("\033[0;40;32m JTAG in\033[0m\n");
+
+                    return;
+                }
+                pdata->is_in = true;
+            }/*  else { */
+                // printk("\033[0;40;33m Uart in again---------------- \033[0m\n");
+            /* } */
+        } else {
+            if (!pdata->is_in) { // status change, last time is out, and now is in
+                pdata->is_in = true;
+                // printk("\033[0;40;35m normal SD card in \033[0m\n");
+                printk("normal card in\n");
+                aml_uart_switch(pdata, 0);
+                aml_jtag_gpioao();
+                if(pdata->caps & MMC_CAP_4_BIT_DATA)
+                    pdata->mmc->caps |= MMC_CAP_4_BIT_DATA;
+            }/*  else { */
+                // printk("\033[0;40;35m normal SD card in again---------------- \033[0m\n");
+            /* } */
         }
+    } else {
+        if (pdata->is_in) { // status change, last time is in, and now is out
+            // printk("\033[0;40;31m card out \033[0m\n");
+            printk("card out\n");
+        } else if (is_jtag) {
+            is_jtag = false;
+            printk("\033[0;40;35m JTAG OUT \033[0m\n");
+        } /* else { */
+            // printk("\033[0;40;31m card out again---------------- \033[0m\n");
+        /* } */
+
+        pdata->is_in = false;
+        aml_uart_switch(pdata, 0);
+        aml_jtag_gpioao();
+        if(pdata->caps & MMC_CAP_4_BIT_DATA)
+            pdata->mmc->caps |= MMC_CAP_4_BIT_DATA;
+    }
+    
+    mmc_detect_change(pdata->mmc, msecs_to_jiffies(500));
+
+    return;
+}
+
+irqreturn_t aml_irq_cd_thread(int irq, void *data)
+{
+	struct amlsd_platform *pdata = (struct amlsd_platform*)data;
+
+    mdelay(500);
+    aml_sd_uart_detect(pdata);
+
+	return IRQ_HANDLED;
+}
+
+irqreturn_t aml_sdio_irq_cd(int irq, void *dev_id)
+{
+    // printk("cd dev_id %x\n", dev_id);
+	return IRQ_WAKE_THREAD;
+}
+
+void aml_sduart_pre (struct amlsd_platform* pdata)
+{
+    if (((pdata->port == MESON_SDIO_PORT_B) || (pdata->port == MESON_SDIO_PORT_XC_B))) {
+        // clear pinmux of CARD_0 and CARD_4 to make them used as gpio
+        CLEAR_CBUS_REG_MASK(PERIPHS_PIN_MUX_2, 0x00005040);
+        CLEAR_CBUS_REG_MASK(PERIPHS_PIN_MUX_8, 0x00000400);
+        aml_jtag_gpioao();
+        aml_sd_uart_detect(pdata);
     }
-#endif
 }
 
 /*-------------------debug---------------------*/
diff --git a/drivers/amlogic/mmc/amlsd.h b/drivers/amlogic/mmc/amlsd.h
index 334004d9b5e9..5a02c5fa9e6c 100755
--- a/drivers/amlogic/mmc/amlsd.h
+++ b/drivers/amlogic/mmc/amlsd.h
@@ -109,17 +109,18 @@ void of_amlsd_pwr_off(struct amlsd_platform* pdata);
 int of_amlsd_init(struct amlsd_platform* pdata);
 void of_amlsd_xfer_pre(struct amlsd_platform* pdata);
 void of_amlsd_xfer_post(struct amlsd_platform* pdata);
+
+irqreturn_t aml_sdio_irq_cd(int irq, void *dev_id);
+irqreturn_t aml_irq_cd_thread(int irq, void *data);
+void aml_sduart_pre (struct amlsd_platform* pdata);
+
 void aml_cs_high (struct amlsd_platform * pdata); // chip select high
 void aml_cs_dont_care (struct amlsd_platform * pdata); // chip select don't care
-int aml_is_sdjtag(struct amlsd_platform * pdata);
-int aml_is_sduart(struct amlsd_platform * pdata);
-int aml_uart_switch(struct amlsd_platform* pdata, bool on);
-void aml_sduart_detect(struct amlsd_platform* pdata);
 bool is_emmc_exist (struct amlsd_host* host); // is eMMC/tSD exist
-void aml_dbg_print_pinmux (void);
-int aml_devm_pinctrl_put (struct amlsd_host* host);
+void aml_devm_pinctrl_put (struct amlsd_host* host);
 // void of_init_pins (struct amlsd_platform* pdata);
 
+void aml_dbg_print_pinmux (void);
 #ifdef      CONFIG_MMC_AML_DEBUG
 void aml_dbg_verify_pull_up (struct amlsd_platform * pdata);
 int aml_dbg_verify_pinmux (struct amlsd_platform * pdata);
-- 
2.19.0

