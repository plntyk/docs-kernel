From d0544577112a9aee6d67e4f0e9d4990fc0ce4651 Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Thu, 21 Nov 2013 10:22:33 +0800
Subject: [PATCH 2030/5965] add time print for vdin start/stop.

---
 drivers/amlogic/tvin/isp/isp_sm.c    | 18 ++++++++++++------
 drivers/amlogic/tvin/isp/isp_sm.h    |  1 +
 drivers/amlogic/tvin/vdin/vdin_drv.c |  5 +++++
 drivers/amlogic/tvin/vdin/vdin_drv.h |  2 +-
 4 files changed, 19 insertions(+), 7 deletions(-)

diff --git a/drivers/amlogic/tvin/isp/isp_sm.c b/drivers/amlogic/tvin/isp/isp_sm.c
index 1b8947e7bf42..ce5b1847ac5f 100755
--- a/drivers/amlogic/tvin/isp/isp_sm.c
+++ b/drivers/amlogic/tvin/isp/isp_sm.c
@@ -1585,15 +1585,20 @@ int isp_capture_sm(isp_dev_t *devp)
 			}
 			break;
 		case CAPTURE_SINGLE:
+			if(parm->sigle_count <= 1){
+				ret = TVIN_BUF_NULL;
+				cap_sm->capture_state = CAPTURE_NULL;
+				return ret;
+			}
 			if(cap_sm->adj_cnt <= parm->sigle_count){
 				for(j=0;j<4;j++)
 					cur_ac += devp->blnr_stat.ac[j];
-					if(capture_debug)
-						pr_info("[cap_sm]%u:field[%u] ac_sum %u.\n",__LINE__,cap_sm->adj_cnt,cur_ac);
-					if(cur_ac > cap_sm->max_ac_sum){
-						cap_sm->max_ac_sum = cur_ac;
-						ret = TVIN_BUF_TMP;
-					}
+				if(capture_debug)
+					pr_info("[cap_sm]%u:field[%u] ac_sum %u.\n",__LINE__,cap_sm->adj_cnt,cur_ac);
+				if(cur_ac > cap_sm->max_ac_sum){
+					cap_sm->max_ac_sum = cur_ac;
+					ret = TVIN_BUF_TMP;
+				}
 			}else{
 				ret = TVIN_BUF_RECYCLE_TMP;
 				if(parm->multi_capture_num > 0){
@@ -1607,6 +1612,7 @@ int isp_capture_sm(isp_dev_t *devp)
 						pr_info("[cap_sm]%u:single->capture end.\n",__LINE__);
 				}
 			}
+			
 			break;
 		case CAPTURE_MULTI:
 			if(cap_sm->adj_cnt % parm->skip_step == 0) {
diff --git a/drivers/amlogic/tvin/isp/isp_sm.h b/drivers/amlogic/tvin/isp/isp_sm.h
index d6750fcfcf10..7ed851ecfe91 100755
--- a/drivers/amlogic/tvin/isp/isp_sm.h
+++ b/drivers/amlogic/tvin/isp/isp_sm.h
@@ -93,6 +93,7 @@ typedef enum af_state_e {
 	AF_SUCCESS,
 } af_state_t;
 typedef enum isp_capture_state_e {
+	CAPTURE_NULL,
 	CAPTURE_INIT,
 	CAPTURE_PRE_WAIT,//for time lapse
 	CAPTURE_FLASH_ON,//turn on flash for red eye
diff --git a/drivers/amlogic/tvin/vdin/vdin_drv.c b/drivers/amlogic/tvin/vdin/vdin_drv.c
index d107c68391c1..5d7c896504b9 100755
--- a/drivers/amlogic/tvin/vdin/vdin_drv.c
+++ b/drivers/amlogic/tvin/vdin/vdin_drv.c
@@ -645,6 +645,7 @@ static void vdin_stop_dec(struct vdin_dev_s *devp)
 	pr_info("%s ok\n", __func__);
 }
 //@todo
+
 int start_tvin_service(int no ,vdin_parm_t *para)
 {
 	struct tvin_frontend_s *fe;
@@ -654,6 +655,7 @@ int start_tvin_service(int no ,vdin_parm_t *para)
                 printk(KERN_ERR "[vdin..]%s vdin%d has't registered,please register.\n",__func__,no);
                 return -1;
         }
+	devp->start_time = jiffies_to_msecs(jiffies);
         if (devp->flags & VDIN_FLAG_DEC_STARTED) {
 		pr_err("%s: port 0x%x, decode started already.\n",__func__,para->port);
 		ret = -EBUSY;
@@ -733,7 +735,10 @@ EXPORT_SYMBOL(start_tvin_service);
 int stop_tvin_service(int no)
 {
 	struct vdin_dev_s *devp;
+	unsigned int end_time;
 	devp = vdin_devp[no];
+	end_time = jiffies_to_msecs(jiffies);
+	pr_info("[vdin]:vdin start time:%ums,stop time:%ums,run time:%u.\n",devp->start_time,end_time,end_time-devp->start_time);
 	if(!(devp->flags&VDIN_FLAG_DEC_STARTED)){
 		pr_err("%s:decode hasn't started.\n",__func__);
 		return -EBUSY;
diff --git a/drivers/amlogic/tvin/vdin/vdin_drv.h b/drivers/amlogic/tvin/vdin/vdin_drv.h
index ed2e97b0b3a6..cf25b023ec5f 100755
--- a/drivers/amlogic/tvin/vdin/vdin_drv.h
+++ b/drivers/amlogic/tvin/vdin/vdin_drv.h
@@ -178,7 +178,7 @@ typedef struct vdin_dev_s {
 	unsigned int			cycle;
 	unsigned int			hcnt64_tag;
 	unsigned int			cycle_tag;
-        
+        unsigned int                    start_time;//ms vdin start time    
         unsigned short                  scaler4h;//for vscaler
         unsigned short                  scaler4w;//for hscaler
 } vdin_dev_t;
-- 
2.19.0

