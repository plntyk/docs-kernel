From 916f579c98558a6f4d4202e67a27df93978d8567 Mon Sep 17 00:00:00 2001
From: "chunhai.guo" <chunhai.guo@amlogic.com>
Date: Thu, 21 Nov 2013 20:13:47 +0800
Subject: [PATCH 2049/5965] PD#82782: mmc: support card write protect

---
 arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd |  4 +-
 arch/arm/boot/dts/amlogic/meson8_skt.dtd     |  2 +
 arch/arm/mach-meson8/include/mach/sd.h       |  4 --
 drivers/amlogic/mmc/aml.dtd                  |  4 +-
 drivers/amlogic/mmc/aml_sdio.c               |  4 +-
 drivers/amlogic/mmc/amlsd.c                  | 47 ++++++++++++++++----
 drivers/amlogic/mmc/amlsd.h                  |  9 ++++
 drivers/amlogic/mmc/amlsd_of.c               |  1 +
 8 files changed, 59 insertions(+), 16 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
index cf102791d363..f744989dc4bd 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
@@ -393,6 +393,7 @@ sdio{
 //$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_STR = "jtag_pin"
 //$$ L2 PROP_STR = "gpio_cd"
+//$$ L2 PROP_STR = "gpio_ro"
 //$$ L2 PROP_U32 = "irq_in"
 //$$ L2 PROP_U32 = "irq_out"
 //$$ L2 PROP_U32 = "card_type"
@@ -408,6 +409,7 @@ sdio{
             gpio_dat3 = "CARD_4";
             jtag_pin = "CARD_0";
             gpio_cd = "CARD_6";
+            gpio_ro = "GPIOZ_0";
             irq_in = <3>;
             irq_out = <5>;
             card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
@@ -423,7 +425,7 @@ sdio{
 //$$ L3 PROP_U32 = "f_max"
 //$$ L3 PROP_U32 = "f_max_w"
 //$$ L3 PROP_U32 = "max_req_size"
-//$$ L2 PROP_STR = "gpio_dat3"       	
+//$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_U32 = "card_type"
         emmc{
             status = "ok";
diff --git a/arch/arm/boot/dts/amlogic/meson8_skt.dtd b/arch/arm/boot/dts/amlogic/meson8_skt.dtd
index be93af88c8c8..c0f80d9715f9 100755
--- a/arch/arm/boot/dts/amlogic/meson8_skt.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_skt.dtd
@@ -363,6 +363,7 @@ void root_func(){
 //$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_STR = "jtag_pin"
 //$$ L2 PROP_STR = "gpio_cd"
+//$$ L2 PROP_STR = "gpio_ro"
 //$$ L2 PROP_U32 = "irq_in"
 //$$ L2 PROP_U32 = "irq_out"
 //$$ L2 PROP_U32 = "card_type"
@@ -379,6 +380,7 @@ void root_func(){
             gpio_dat3 = "CARD_4";
             jtag_pin = "CARD_0";
             gpio_cd = "CARD_6";
+            gpio_ro = "GPIOZ_0";
             irq_in = <3>;
             irq_out = <5>;
             card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
diff --git a/arch/arm/mach-meson8/include/mach/sd.h b/arch/arm/mach-meson8/include/mach/sd.h
index bca74b47617a..e27e6a6ebaf0 100755
--- a/arch/arm/mach-meson8/include/mach/sd.h
+++ b/arch/arm/mach-meson8/include/mach/sd.h
@@ -13,10 +13,6 @@
 #include <linux/mmc/host.h>
 #include <linux/earlysuspend.h>
 
-#define AML_MMC_MAJOR_VERSION   1
-#define AML_MMC_MINOR_VERSION   00
-#define AML_MMC_VERSION     ((AML_MMC_MAJOR_VERSION << 8) | AML_MMC_MINOR_VERSION)
-
 enum aml_mmc_waitfor {
 	XFER_INIT,
 	XFER_START,				/* 1 */
diff --git a/drivers/amlogic/mmc/aml.dtd b/drivers/amlogic/mmc/aml.dtd
index 3040f6086952..3adba7c4934a 100755
--- a/drivers/amlogic/mmc/aml.dtd
+++ b/drivers/amlogic/mmc/aml.dtd
@@ -38,6 +38,7 @@ sdio{
 //$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_STR = "jtag_pin"
 //$$ L2 PROP_STR = "gpio_cd"
+//$$ L2 PROP_STR = "gpio_ro"
 //$$ L2 PROP_U32 = "irq_in"
 //$$ L2 PROP_U32 = "irq_out"
 //$$ L2 PROP_U32 = "card_type"
@@ -54,6 +55,7 @@ sdio{
             gpio_dat3 = "CARD_4";
             jtag_pin = "CARD_0";
             gpio_cd = "CARD_6";
+            gpio_ro = "GPIOZ_0";
             irq_in = <3>;
             irq_out = <5>;
             card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
@@ -69,7 +71,7 @@ sdio{
 //$$ L3 PROP_U32 = "f_max"
 //$$ L3 PROP_U32 = "f_max_w"
 //$$ L3 PROP_U32 = "max_req_size"
-//$$ L2 PROP_STR = "gpio_dat3"       	
+//$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_U32 = "card_type"
         emmc{
             status = "ok";
diff --git a/drivers/amlogic/mmc/aml_sdio.c b/drivers/amlogic/mmc/aml_sdio.c
index d25525d8d675..57378b710e10 100755
--- a/drivers/amlogic/mmc/aml_sdio.c
+++ b/drivers/amlogic/mmc/aml_sdio.c
@@ -982,11 +982,11 @@ static int aml_sdio_probe(struct platform_device *pdev)
 
     print_tmp("%s() begin!\n", __FUNCTION__);
 
+    aml_mmc_ver_msg_show();
+
 	host = aml_sdio_init_host();
 	if(!host)
 		goto fail_init_host;
-    
-    printk("mmc driver version: %2d.%02d\n", host->version>>8, host->version&0xff);
 
 	if(amlsd_get_reg_base(pdev, host))
 		goto fail_init_host;
diff --git a/drivers/amlogic/mmc/amlsd.c b/drivers/amlogic/mmc/amlsd.c
index 83d108621918..59edf83e2f23 100755
--- a/drivers/amlogic/mmc/amlsd.c
+++ b/drivers/amlogic/mmc/amlsd.c
@@ -61,6 +61,11 @@
 static struct proc_dir_entry *proc_card;
 static struct mtd_partition *card_table[16];
 
+void aml_mmc_ver_msg_show (void)
+{
+    printk("mmc driver version: %d.%02d, %s\n", AML_MMC_MAJOR_VERSION, AML_MMC_MINOR_VERSION, AML_MMC_VER_MESSAGE);
+}
+
 static inline int card_proc_info (struct seq_file *m, char* dev_name, int i)
 {
 	struct mtd_partition *this = card_table[i];
@@ -670,19 +675,35 @@ void of_amlsd_pwr_off(struct amlsd_platform* pdata)
 }
 int of_amlsd_init(struct amlsd_platform* pdata)
 {
+    int ret;
+
 	BUG_ON(!pdata);
-	if(pdata->gpio_cd)
-		amlogic_gpio_request_one(pdata->gpio_cd, GPIOF_IN, MODULE_NAME);
-	if(pdata->gpio_ro)
-		amlogic_gpio_request_one(pdata->gpio_ro, GPIOF_IN, MODULE_NAME);
+
+	if(pdata->gpio_cd) {
+		ret = amlogic_gpio_request_one(pdata->gpio_cd, GPIOF_IN, MODULE_NAME);
+        CHECK_RET(ret);
+    }
+	if(pdata->gpio_ro) {
+		ret = amlogic_gpio_request_one(pdata->gpio_ro, GPIOF_IN, MODULE_NAME);
+        if (!ret) { // ok
+            ret = amlogic_set_pull_up_down(pdata->gpio_ro, 1, MODULE_NAME); // 0:pull down, 1:pull up 
+            CHECK_RET(ret);
+        } else {
+            sdio_err("request gpio_ro pin fail!\n");
+        }
+    }
 	if(pdata->gpio_power){
-		if(pdata->power_level)
-			amlogic_gpio_request_one(pdata->gpio_power,
+		if(pdata->power_level) {
+			ret = amlogic_gpio_request_one(pdata->gpio_power,
 						GPIOF_OUT_INIT_LOW, MODULE_NAME);
-		else
-			amlogic_gpio_request_one(pdata->gpio_power,
+            CHECK_RET(ret);
+        } else {
+			ret = amlogic_gpio_request_one(pdata->gpio_power,
 						GPIOF_OUT_INIT_HIGH, MODULE_NAME);
+            CHECK_RET(ret);
+        }
 	}
+
 	if(pdata->port == MESON_SDIO_PORT_A)
 		wifi_setup_dt();
 	return 0;
@@ -791,6 +812,16 @@ void of_amlsd_xfer_post(struct amlsd_platform* pdata)
     // aml_dbg_print_pinmux(); // for debug
 }
 
+int of_amlsd_ro (struct amlsd_platform* pdata)
+{
+    int ret = 0; // 0--read&write, 1--read only
+
+    if (pdata->gpio_ro)
+        ret = amlogic_get_value(pdata->gpio_ro, MODULE_NAME);
+    // sdio_err("read-only?--%s\n", ret?"YES":"NO");
+    return ret; 
+}
+
 // void of_init_pins (struct amlsd_platform* pdata)
 // {
     // char pinctrl_name[30];
diff --git a/drivers/amlogic/mmc/amlsd.h b/drivers/amlogic/mmc/amlsd.h
index 659820ad7d13..6e53716846ed 100755
--- a/drivers/amlogic/mmc/amlsd.h
+++ b/drivers/amlogic/mmc/amlsd.h
@@ -3,6 +3,12 @@
 #ifndef AMLSD_H
 #define AMLSD_H
 
+
+#define AML_MMC_MAJOR_VERSION   1
+#define AML_MMC_MINOR_VERSION   01
+#define AML_MMC_VERSION         ((AML_MMC_MAJOR_VERSION << 8) | AML_MMC_MINOR_VERSION)
+#define AML_MMC_VER_MESSAGE     "2013-11-21: support write protect"
+
 extern unsigned sdhc_debug;
 extern unsigned sdio_debug;
 #define DEBUG_SD_OF		1
@@ -83,6 +89,8 @@ struct sd_caps {
 };
 
 extern int storage_flag;
+
+void aml_mmc_ver_msg_show (void);
 extern void aml_sdhc_init_debugfs(struct mmc_host *mmc);
 extern void aml_sdhc_print_reg(struct amlsd_host* host);
 extern void aml_sdio_init_debugfs(struct mmc_host *mmc);
@@ -109,6 +117,7 @@ void of_amlsd_pwr_off(struct amlsd_platform* pdata);
 int of_amlsd_init(struct amlsd_platform* pdata);
 void of_amlsd_xfer_pre(struct amlsd_platform* pdata);
 void of_amlsd_xfer_post(struct amlsd_platform* pdata);
+int of_amlsd_ro (struct amlsd_platform* pdata);
 
 void aml_sd_uart_detect (struct amlsd_platform* pdata);
 irqreturn_t aml_sdio_irq_cd(int irq, void *dev_id);
diff --git a/drivers/amlogic/mmc/amlsd_of.c b/drivers/amlogic/mmc/amlsd_of.c
index 896a29e3e9dd..4c7d7024c1e2 100755
--- a/drivers/amlogic/mmc/amlsd_of.c
+++ b/drivers/amlogic/mmc/amlsd_of.c
@@ -188,6 +188,7 @@ int amlsd_get_platform_data(struct platform_device* pdev,
 		pdata->xfer_post = of_amlsd_xfer_post;
 		// pdata->cd = of_amlsd_detect;
 		pdata->irq_init = of_amlsd_irq_init;
+        pdata->ro = of_amlsd_ro;
     }
     return 0;
 }
-- 
2.19.0

