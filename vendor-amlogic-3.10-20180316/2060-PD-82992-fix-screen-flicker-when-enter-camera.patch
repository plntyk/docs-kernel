From c4e7f1f41f8339a83ae595eac2a78925c66abe31 Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Sat, 23 Nov 2013 10:45:57 +0800
Subject: [PATCH 2060/5965] PD #82992: fix screen flicker when enter camera

---
 drivers/amlogic/camera/ov5647.c      |  2 +-
 drivers/amlogic/tvin/isp/isp_drv.c   |  1 +
 drivers/amlogic/tvin/vdin/vdin_drv.c | 28 +++++++++++++++-------------
 3 files changed, 17 insertions(+), 14 deletions(-)

diff --git a/drivers/amlogic/camera/ov5647.c b/drivers/amlogic/camera/ov5647.c
index de2835dafa7e..addd75fab7bd 100755
--- a/drivers/amlogic/camera/ov5647.c
+++ b/drivers/amlogic/camera/ov5647.c
@@ -3414,10 +3414,10 @@ static int vidioc_streamon(struct file *file, void *priv, enum v4l2_buf_type i)
     para.h_active = ov5647_h_active;
     para.v_active = ov5647_v_active;
     if(ov5647_work_mode != CAMERA_CAPTURE){
+	para.skip_count = 2;
         para.dest_hactive = dest_hactive;
         para.dest_vactive = dest_vactive;
     }else{
-        para.skip_count = 2;
         para.dest_hactive = 0;
         para.dest_vactive = 0;		
     }
diff --git a/drivers/amlogic/tvin/isp/isp_drv.c b/drivers/amlogic/tvin/isp/isp_drv.c
index eb32c5d628a3..feb92af175ca 100755
--- a/drivers/amlogic/tvin/isp/isp_drv.c
+++ b/drivers/amlogic/tvin/isp/isp_drv.c
@@ -827,6 +827,7 @@ static int isp_fe_open(struct tvin_frontend_s *fe, enum tvin_port_e port)
 		devp->capture_parm = devp->cam_param->xml_capture;
 		devp->wave = devp->cam_param->xml_wave;
 		isp_set_def_config(devp->cam_param->xml_regs_map,info->fe_port,info->h_active,info->v_active);
+		isp_set_manual_wb(devp->cam_param->xml_wb_manual);
 		devp->isp_af_parm = kmalloc(sizeof(xml_algorithm_af_t),GFP_KERNEL);
 		memset(devp->isp_af_parm,0,sizeof(xml_algorithm_af_t));
 		devp->isp_af_parm->valid_step_cnt = 16;
diff --git a/drivers/amlogic/tvin/vdin/vdin_drv.c b/drivers/amlogic/tvin/vdin/vdin_drv.c
index 5d7c896504b9..208600e092a0 100755
--- a/drivers/amlogic/tvin/vdin/vdin_drv.c
+++ b/drivers/amlogic/tvin/vdin/vdin_drv.c
@@ -737,8 +737,7 @@ int stop_tvin_service(int no)
 	struct vdin_dev_s *devp;
 	unsigned int end_time;
 	devp = vdin_devp[no];
-	end_time = jiffies_to_msecs(jiffies);
-	pr_info("[vdin]:vdin start time:%ums,stop time:%ums,run time:%u.\n",devp->start_time,end_time,end_time-devp->start_time);
+	
 	if(!(devp->flags&VDIN_FLAG_DEC_STARTED)){
 		pr_err("%s:decode hasn't started.\n",__func__);
 		return -EBUSY;
@@ -760,6 +759,8 @@ int stop_tvin_service(int no)
 	devp->flags &= (~VDIN_FLAG_DEC_STARTED);
 	/* free irq */
 	free_irq(devp->irq,(void *)devp);
+	end_time = jiffies_to_msecs(jiffies);
+	pr_info("[vdin]:vdin start time:%ums,stop time:%ums,run time:%u.\n",devp->start_time,end_time,end_time-devp->start_time);
 	return 0;
 }
 EXPORT_SYMBOL(stop_tvin_service);
@@ -1310,14 +1311,7 @@ static irqreturn_t vdin_v4l2_isr(int irq, void *dev_id)
 	}
 	/*check vs is valid base on the time during continuous vs*/
         vdin_check_cycle(devp);
-        /*check the skip frame*/
-        if(devp->frontend && devp->frontend->sm_ops){
-    	        sm_ops = devp->frontend->sm_ops;
-                if(sm_ops->check_frame_skip && 
-        	        sm_ops->check_frame_skip(devp->frontend)) {
-            	        goto irq_handled;
-                }
-        }
+        
 #if MESON_CPU_TYPE < MESON_CPU_TYPE_MESON8
 	if (devp->flags & VDIN_FLAG_DEC_STOP_ISR){
 		vdin_hw_disable(devp->addr_offset);
@@ -1352,12 +1346,20 @@ static irqreturn_t vdin_v4l2_isr(int irq, void *dev_id)
 			recycle_tmp_vfs(devp->vfp);
 			tmp_vf_put(curr_wr_vfe,devp->vfp);
 			curr_wr_vfe = NULL;
-        /*function of capture end,the reserved is the best*/
+                /*function of capture end,the reserved is the best*/
 		} else if(ret == TVIN_BUF_RECYCLE_TMP) {
-            tmp_to_rd(devp->vfp);
+                        tmp_to_rd(devp->vfp);
 			goto irq_handled;
-        }
+                }
 	}
+	/*check the skip frame*/
+        if(devp->frontend && devp->frontend->sm_ops){
+    	        sm_ops = devp->frontend->sm_ops;
+                if(sm_ops->check_frame_skip && 
+        	        sm_ops->check_frame_skip(devp->frontend)) {
+            	        goto irq_handled;
+                }
+        }
 
         next_wr_vfe = provider_vf_peek(devp->vfp);
 
-- 
2.19.0

