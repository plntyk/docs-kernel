From cc61afd872a5adf5278097b9f5b6c295b18ffdc8 Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Tue, 26 Nov 2013 21:03:07 +0800
Subject: [PATCH 2071/5965] PD #83121: isp update 20131126

1.update gamma,lnsd,disable sensor lnsd
2.add debug interface for isp,vdin
3.fix crash bug when set awb

commit 8e079c6d9a12b282a8d95d55a509461ad34c0256
Author: jiwei chen <jiwei.chen@amlogic.com>
Date:   Tue Nov 26 19:25:13 2013 +0800

    PD #83121: enable lnsd of isp,disable sensor's

commit 954e77b0fccfb96671a664f5b7fc72054cccd262
Author: kele.bai <kele.bai@amlogic.com>
Date:   Tue Nov 26 18:28:12 2013 +0800

    PD #83121 return when cm2 disable.

commit 49f40d6e163eb5cab376e5c4ef92e32dff0ee357
Author: xiaoyu.yuan <xiaoyu.yuan@droid05.amlogic.com>
Date:   Tue Nov 26 16:56:23 2013 +0800

    fix ov5647 crash bug when set awb

commit 3042608184d926d6c5bc568de7114937de4fa032
Author: xiaoyu.yuan <xiaoyu.yuan@droid05.amlogic.com>
Date:   Mon Nov 25 21:24:44 2013 +0800

    PD #83121: fix awb function && fix config parse null bug

commit c11c00bfef3aa2825ecfe833378d51e8385629cb
Author: kele.bai <kele.bai@amlogic.com>
Date:   Mon Nov 25 17:16:36 2013 +0800

    PD #83121 add vdin crop interface.

commit fb32f0e2c4ada2751d115e20861d5d385f62dd15
Author: kele.bai <kele.bai@amlogic.com>
Date:   Mon Nov 25 14:51:20 2013 +0800

    PD #83121 update vdin debug interface for manual scale down, color fmt convertion.

commit 105ca34cacf981068ea39603c7e334fbd1b12d6e
Author: kele.bai <kele.bai@amlogic.com>
Date:   Mon Nov 25 13:33:24 2013 +0800

    PD #83121 update isp debug for wb test.
---
 drivers/amlogic/camera/common/config_parser.c |  20 +-
 drivers/amlogic/camera/common/config_parser.h |   2 +-
 drivers/amlogic/camera/ov5647.c               |  96 ++++---
 drivers/amlogic/tvin/isp/isp_drv.c            |  18 +-
 drivers/amlogic/tvin/isp/isp_drv.h            |   3 +-
 drivers/amlogic/tvin/isp/isp_hw.c             | 254 +++++++++++++++++-
 drivers/amlogic/tvin/isp/isp_hw.h             |   1 +
 drivers/amlogic/tvin/vdin/vdin_ctl.c          |   9 +-
 drivers/amlogic/tvin/vdin/vdin_drv.c          |  96 +++++--
 drivers/amlogic/tvin/vdin/vdin_drv.h          |   5 +-
 10 files changed, 427 insertions(+), 77 deletions(-)

diff --git a/drivers/amlogic/camera/common/config_parser.c b/drivers/amlogic/camera/common/config_parser.c
index c01e4cf3f799..ae8d52305989 100755
--- a/drivers/amlogic/camera/common/config_parser.c
+++ b/drivers/amlogic/camera/common/config_parser.c
@@ -660,7 +660,7 @@ int parse_wb(buffer_para_t *buf_para,int *remained,int *offset){
     cf->wb.sum = sum;
     /**parser body***/
     check = 0;
-    while(check < sum && iter != NULL){
+    while(check < sum){
         iter = search_string(buf_para,offset,remained,"wb","wb");
         if(iter == NULL){
             return -WRONG_FORMAT;
@@ -677,7 +677,6 @@ int parse_wb(buffer_para_t *buf_para,int *remained,int *offset){
             if(iter == NULL)
             	break;
             iter += 1;
-           // printk("wb:%x\n",cf->wb.wb[check].export[i]);
         }
         check++;
      }
@@ -701,7 +700,7 @@ int parse_capture(buffer_para_t *buf_para,int *remained,int *offset){
     //printk("capture sum:%d\n",sum);
     /**parser body***/
     check = 0;
-    while(check < sum && iter != NULL){
+    while(check < sum){
         iter = search_string(buf_para,offset,remained,"capture","capture");
         if(iter == NULL){
         		printk("search wrong\n");
@@ -771,7 +770,7 @@ int parse_scene(buffer_para_t *buf_para,int *remained,int *offset){
          return -NO_MEM;
     } //alloc mem
     check = 0;
-    while(check < sum && iter != NULL){
+    while(check < sum){
         iter = search_string(buf_para,offset,remained,"scenes","scenes");
         if(iter == NULL){
             printk("scene wrong config format\n");
@@ -1213,11 +1212,6 @@ int generate_para(cam_parameter_t *para,para_index_t pindex){
         }
         scene = para->xml_scenes;
         memcpy(&(scene->ae),cf->scene.scene[pindex.scenes_index].export,97*sizeof(unsigned int));
-        if(cf->aet_valid == 1){
-            scene->ae.aet_fmt_gain = sensor_aet_info->format_transfer_parameter;        	
-        }
-        else
-            scene->ae.aet_fmt_gain = 0;
         memcpy(&(scene->awb),cf->scene.scene[pindex.scenes_index].export + 97,104*sizeof(unsigned int));
         // memcpy(&(scene->af),cf->scene.scene[pindex.scenes_index].export + 201,1*sizeof(unsigned int));
     }else{
@@ -1300,10 +1294,10 @@ int generate_para(cam_parameter_t *para,para_index_t pindex){
         }
         capture = para->xml_capture;
         capture->ae_try_max_cnt = (unsigned int)(cf->capture.capture[pindex.capture_index].export[0]);
-		capture->sigle_count = (unsigned int)(cf->capture.capture[pindex.capture_index].export[3]);
-        capture->skip_step = (unsigned int)(cf->capture.capture[pindex.capture_index].export[4]);
-		capture->multi_capture_num = (unsigned int)(cf->capture.capture[pindex.capture_index].export[5]);
-		capture->af_mode = (cam_scanmode_t)(cf->capture.capture[pindex.capture_index].export[2]);
+	    capture->sigle_count = (unsigned int)(cf->capture.capture[pindex.capture_index].export[3]);
+	    capture->skip_step = (unsigned int)(cf->capture.capture[pindex.capture_index].export[4]);
+	    capture->multi_capture_num = (unsigned int)(cf->capture.capture[pindex.capture_index].export[5]);
+	    capture->af_mode = (cam_scanmode_t)(cf->capture.capture[pindex.capture_index].export[2]);
         capture->eyetime = (unsigned int)(cf->capture.capture[pindex.capture_index].export[6]);
         capture->pretime = (unsigned int)(cf->capture.capture[pindex.capture_index].export[7]);
         capture->postime = (unsigned int)(cf->capture.capture[pindex.capture_index].export[8]);
diff --git a/drivers/amlogic/camera/common/config_parser.h b/drivers/amlogic/camera/common/config_parser.h
index 01be4dfe0d5b..611dfd6bd03e 100755
--- a/drivers/amlogic/camera/common/config_parser.h
+++ b/drivers/amlogic/camera/common/config_parser.h
@@ -11,7 +11,7 @@
 #define EFFECT_MAX 16
 #define AET_MAX 32
 #define HW_MAX 16
-#define WB_MAX 9
+#define WB_MAX 10
 #define CAPTURE_ITEM_MAX 5
 #define GAMMA_MAX 257
 #define SCENE_MAX 202
diff --git a/drivers/amlogic/camera/ov5647.c b/drivers/amlogic/camera/ov5647.c
index 332b614139f7..ac96d1af814e 100755
--- a/drivers/amlogic/camera/ov5647.c
+++ b/drivers/amlogic/camera/ov5647.c
@@ -314,6 +314,11 @@ struct v4l2_querymenu ov5647_qmenu_wbmode[] = {
         .index      = CAM_WB_CLOUD,
         .name       = "cloudy-daylight",
         .reserved   = 0,
+    },{
+        .id         = V4L2_CID_DO_WHITE_BALANCE,
+        .index      = CAM_WB_DAYLIGHT,
+        .name       = "daylight",
+        .reserved   = 0,
     },{
         .id         = V4L2_CID_DO_WHITE_BALANCE,
         .index      = CAM_WB_INCANDESCENCE,
@@ -321,14 +326,29 @@ struct v4l2_querymenu ov5647_qmenu_wbmode[] = {
         .reserved   = 0,
     },{
         .id         = V4L2_CID_DO_WHITE_BALANCE,
-        .index      = CAM_WB_DAYLIGHT,
-        .name       = "daylight",
+        .index      = CAM_WB_TUNGSTEN,
+        .name       = "tungsten",
         .reserved   = 0,
     },{
         .id         = V4L2_CID_DO_WHITE_BALANCE,
         .index      = CAM_WB_FLUORESCENT,
         .name       = "fluorescent", 
         .reserved   = 0,
+    },{
+        .id         = V4L2_CID_DO_WHITE_BALANCE,
+        .index      = CAM_WB_MANUAL,
+        .name       = "manual", 
+        .reserved   = 0,
+    },{
+        .id         = V4L2_CID_DO_WHITE_BALANCE,
+        .index      = CAM_WB_SHADE,
+        .name       = "shade", 
+        .reserved   = 0,
+    },{
+        .id         = V4L2_CID_DO_WHITE_BALANCE,
+        .index      = CAM_WB_TWILIGHT,
+        .name       = "twilight", 
+        .reserved   = 0,
     },{
         .id         = V4L2_CID_DO_WHITE_BALANCE,
         .index      = CAM_WB_WARM_FLUORESCENT,
@@ -640,7 +660,7 @@ struct aml_camera_i2c_fig_s OV5647_VGA_script_mipi[] = {
           {0x3618, 0x00},
           {0x5000, 0x06},
 
-          {0x5000, 0x86},
+          {0x5000, 0x06},
           {0x5001, 0x00},
           {0x5002, 0x41},
           {0x5003, 0x08},
@@ -799,7 +819,7 @@ struct aml_camera_i2c_fig_s OV5647_preview_VGA_script[] = {
 	{0x583b,0x28},
 	{0x583c,0x2c},
 	{0x583d,0xce},
-	{0x5000,0x86},
+	{0x5000,0x06},
 	{0x5001,0x00},
 	{0x5002,0x41},			
 	{0x5180,0x08},
@@ -895,7 +915,7 @@ struct aml_camera_i2c_fig_s OV5647_720P_script_mipi[] = {
           {0x3618, 0x00},
           {0x5000, 0x06},
 
-          {0x5000, 0x86},
+          {0x5000, 0x06},
           {0x5001, 0x00},
           {0x5002, 0x41},
 
@@ -1055,7 +1075,7 @@ struct aml_camera_i2c_fig_s OV5647_preview_720P_script[] = {
 	{0x583b,0x28},
 	{0x583c,0x2c},
 	{0x583d,0xce},
-	{0x5000,0x86},
+	{0x5000,0x06},
 	{0x5001,0x00},
 	{0x5002,0x41},
 	{0x5180,0x08},
@@ -1215,7 +1235,7 @@ struct aml_camera_i2c_fig_s OV5647_preview_960P_script[] = {
 	{0x583b,0x28},  
 	{0x583c,0x2c},  
 	{0x583d,0xce},  
-	{0x5000,0x86},  
+	{0x5000,0x06},  
 	{0x5001,0x00},  
 	{0x5002,0x41},	
 	{0x5180,0x08},
@@ -1302,7 +1322,7 @@ struct aml_camera_i2c_fig_s OV5647_1080P_script_mipi[] = {
           {0x3618, 0x04},
           {0x5000, 0x06},
 
-          {0x5000, 0x86},
+          {0x5000, 0x06},
           {0x5001, 0x00},
           {0x5002, 0x41},
 
@@ -1463,7 +1483,7 @@ struct aml_camera_i2c_fig_s OV5647_preview_1080P_script[] = {
 	{0x583b,0x28},
 	{0x583c,0x2c},
 	{0x583d,0xce},
-	{0x5000,0x86},
+	{0x5000,0x06},
 	{0x5001,0x00},
 	{0x5002,0x41},
 	{0x5180,0x08},
@@ -1558,7 +1578,7 @@ struct aml_camera_i2c_fig_s OV5647_5M_script_mipi[] = {
           {0x3618, 0x04},
           {0x5000, 0x06},
 
-          {0x5000, 0x86},
+          {0x5000, 0x06},
           {0x5001, 0x00},
           {0x5002, 0x41},
           {0x5003, 0x08},
@@ -1717,7 +1737,7 @@ struct aml_camera_i2c_fig_s OV5647_capture_5M_script[] = {
 	{0x583b,0x28},
 	{0x583c,0x2c},
 	{0x583d,0xce},
-	{0x5000,0x86},
+	{0x5000,0x06},
 	{0x5001,0x00},
 	{0x5002,0x41},
 	{0x5180,0x08},
@@ -2369,15 +2389,16 @@ static CLASS_ATTR(version_debug, 0664, version_info_show, version_info_store);
 *************************************************************************/
 
 static wb_pair_t wb_pair[] = {
-	{CAM_WB_AUTO,"CAM_WB_AUTO"},
-	{CAM_WB_DAYLIGHT,"CAM_WB_DAYLIGHT"},
-	{CAM_WB_INCANDESCENCE,"CAM_WB_INCANDESCENCE"},
-	{CAM_WB_FLUORESCENT,"CAM_WB_FLUORESCENT"},
-	{CAM_WB_CLOUD,"CAM_WB_CLOUD"},
-	{CAM_WB_SHADE,"CAM_WB_SHADE"},
-	{CAM_WB_TWILIGHT,"CAM_WB_TWILIGHT"},
-	{CAM_WB_WARM_FLUORESCENT,"CAM_WB_WARM_FLUORESCENT"},
-	{CAM_WB_TUNGSTEN,"CAM_WB_TUNGSTEN"}
+    {CAM_WB_AUTO,"CAM_WB_AUTO"},
+    {CAM_WB_CLOUD,"CAM_WB_CLOUD"},
+    {CAM_WB_DAYLIGHT,"CAM_WB_DAYLIGHT"},
+    {CAM_WB_INCANDESCENCE,"CAM_WB_INCANDESCENCE"},
+    {CAM_WB_TUNGSTEN,"CAM_WB_TUNGSTEN"},
+    {CAM_WB_FLUORESCENT,"CAM_WB_FLUORESCENT"},
+    {CAM_WB_MANUAL,"CAM_WB_MANUAL"},
+    {CAM_WB_SHADE,"CAM_WB_SHADE"},
+    {CAM_WB_TWILIGHT,"CAM_WB_TWILIGHT"},
+    {CAM_WB_WARM_FLUORESCENT,"CAM_WB_WARM_FLUORESCENT"},
 };
 
 void OV5647_set_param_wb(struct ov5647_device *dev,enum  camera_wb_flip_e para)//white balance
@@ -3490,7 +3511,7 @@ static int vidioc_streamon(struct file *file, void *priv, enum v4l2_buf_type i)
     para.h_active = ov5647_h_active;
     para.v_active = ov5647_v_active;
     if(ov5647_work_mode != CAMERA_CAPTURE){
-	para.skip_count = 2;
+	    para.skip_count = 2;
         para.dest_hactive = dest_hactive;
         para.dest_vactive = dest_vactive;
     }else{
@@ -3502,23 +3523,14 @@ static int vidioc_streamon(struct file *file, void *priv, enum v4l2_buf_type i)
     para.vsync_phase  = 1;
     para.hs_bp = 0;
     para.vs_bp = 2;
-    para.cfmt = TVIN_NV21;
+    para.cfmt = TVIN_YUV422;
     para.dfmt = TVIN_NV21;
     para.scan_mode = TVIN_SCAN_MODE_PROGRESSIVE;
     para.bt_path = dev->cam_info.bt_path;
     current_fmt = 0;
     if(dev->cam_para == NULL)
     	return -EINVAL;
-    if(generate_para(dev->cam_para,dev->pindex) == 0){
-        para.reserved = (int)(dev->cam_para);
-    }else{
-        free_para(dev->cam_para);
-        para.reserved = 0;
-    }
-    printk("aet_fmt_gain:%d\n",dev->cam_para->xml_scenes->ae.aet_fmt_gain);
-    dev->cam_para->cam_function.set_aet_new_step = OV5647_set_aet_new_step;
-    dev->cam_para->cam_function.check_mains_freq = OV5647_check_mains_freq;
-    dev->cam_para->cam_function.set_af_new_step = OV5647_set_af_new_step;
+    para.reserved = (int)(dev->cam_para);
     if (CAM_MIPI == dev->cam_info.interface)
     {
             para.csi_hw_info.lanes = 2;
@@ -3532,7 +3544,12 @@ static int vidioc_streamon(struct file *file, void *priv, enum v4l2_buf_type i)
             para.csi_hw_info.urgent = 1;
             para.csi_hw_info.clk_channel = dev->cam_info.clk_channel; //clock channel a or b
     }
-
+    if(cf->aet_valid == 1){
+        dev->cam_para->xml_scenes->ae.aet_fmt_gain = sensor_aet_info->format_transfer_parameter;        	
+    }
+    else
+        dev->cam_para->xml_scenes->ae.aet_fmt_gain = 0;
+    printk("aet_fmt_gain:%d\n",dev->cam_para->xml_scenes->ae.aet_fmt_gain);
     printk("ov5647,h=%d, v=%d, dest_h:%d, dest_v:%d,frame_rate=%d,\n", 
             ov5647_h_active, ov5647_v_active, para.dest_hactive,para.dest_vactive,ov5647_frmintervals_active.denominator);
     ret =  videobuf_streamon(&fh->vb_vidq);
@@ -3909,6 +3926,15 @@ static int ov5647_open(struct file *file)
     dev->pindex.scenes_index = 0;
     dev->pindex.wb_index = 0;
     dev->pindex.capture_index = 0;
+    if(generate_para(dev->cam_para,dev->pindex) != 0){
+        printk("generate para failed\n");
+        free_para(dev->cam_para);
+        kfree(dev->cam_para);
+        return -EINVAL;
+    }
+    dev->cam_para->cam_function.set_aet_new_step = OV5647_set_aet_new_step;
+    dev->cam_para->cam_function.check_mains_freq = OV5647_check_mains_freq;
+    dev->cam_para->cam_function.set_af_new_step = OV5647_set_af_new_step;  
     dev->ae_on = false;
     /**creat class file**/		
     cam_class = class_create(THIS_MODULE,"camera"); 
@@ -4000,11 +4026,11 @@ static int ov5647_close(struct file *file)
             video_device_node_name(vdev), dev->users);
     //ov5647_h_active=800;
     //ov5647_v_active=600;
-    ov5647_qctrl[0].default_value= CAM_WB_AUTO;
+    ov5647_qctrl[0].default_value=0;
     ov5647_qctrl[1].default_value=4;
     ov5647_qctrl[2].default_value=0;
     ov5647_qctrl[3].default_value=CAM_BANDING_50HZ;
-    ov5647_qctrl[4].default_value=0;
+    ov5647_qctrl[4].default_value=CAM_WB_AUTO;
 
     ov5647_qctrl[5].default_value=4;
     ov5647_qctrl[6].default_value=0;
diff --git a/drivers/amlogic/tvin/isp/isp_drv.c b/drivers/amlogic/tvin/isp/isp_drv.c
index 56b4b54d1305..ac130781249a 100755
--- a/drivers/amlogic/tvin/isp/isp_drv.c
+++ b/drivers/amlogic/tvin/isp/isp_drv.c
@@ -81,13 +81,13 @@ static ssize_t debug_store(struct device *dev,struct device_attribute *attr, con
 {
 	isp_dev_t *devp;
 	unsigned int addr,data;
-	char *parm[3]={NULL},*ps,*token,*buf_orig;
+	char *parm[3]={NULL},*buf_orig;
 	int n=0;
 	if(!buf)
 		return len;
 	buf_orig = kstrdup(buf, GFP_KERNEL);
 	devp = dev_get_drvdata(dev);
-	parse_param(buf,&parm);
+	parse_param(buf_orig,&parm);
 	if(!strcmp(parm[0],"r")){
 		addr = simple_strtol(parm[1],NULL,16);
 		data = isp_rd(addr);
@@ -136,6 +136,13 @@ static ssize_t debug_store(struct device *dev,struct device_attribute *attr, con
 		pr_info("awb->yuv_mid[%d].sum=%d,count=%d\n",i,awb->yuv_mid[i].sum,awb->yuv_mid[i].count);
 		for(i=0;i<4;i++)
 		pr_info("awb->yuv_high[%d].sum=%d,count=%d\n",i,awb->yuv_high[i].sum,awb->yuv_high[i].count);	
+	}else if(!strcmp(parm[0],"wb_test")){
+		unsigned int flag = simple_strtol(parm[1],NULL,10);
+		if(flag)
+			devp->flag |= ISP_FLAG_TEST_WB;
+		else
+			devp->flag &= (~ISP_FLAG_TEST_WB);
+		pr_info("%s wb test.\n",flag?"start":"stop");
 	}
 	return len;
 }
@@ -827,6 +834,9 @@ static int isp_fe_open(struct tvin_frontend_s *fe, enum tvin_port_e port)
 		devp->wave = devp->cam_param->xml_wave;
 		isp_set_def_config(devp->cam_param->xml_regs_map,info->fe_port,info->h_active,info->v_active);
 		isp_set_manual_wb(devp->cam_param->xml_wb_manual);
+		/*test for wb test disable gamma & lens*/
+		if(devp->flag & ISP_FLAG_TEST_WB)
+			disable_gc_lns(false);
 		devp->isp_af_parm = kmalloc(sizeof(xml_algorithm_af_t),GFP_KERNEL);
 		memset(devp->isp_af_parm,0,sizeof(xml_algorithm_af_t));
 		devp->isp_af_parm->valid_step_cnt = 8;
@@ -1132,8 +1142,8 @@ static int isp_fe_isr(struct tvin_frontend_s *fe, unsigned int hcnt64)
 		ret = max(isp_capture_sm(devp),ret);
 	if(isr_debug&&ret)
 		pr_info("%s isp %d buf.\n",__func__,ret);
-	
-	tasklet_schedule(&devp->isp_task);
+	if(!(devp->flag & ISP_FLAG_TEST_WB))
+		tasklet_schedule(&devp->isp_task);
         return ret;
 }
 
diff --git a/drivers/amlogic/tvin/isp/isp_drv.h b/drivers/amlogic/tvin/isp/isp_drv.h
index 8c749224dc68..2fc4755246e0 100755
--- a/drivers/amlogic/tvin/isp/isp_drv.h
+++ b/drivers/amlogic/tvin/isp/isp_drv.h
@@ -28,7 +28,7 @@
 #include "isp_hw.h"
 #include "../tvin_frontend.h"
 
-#define ISP_VER					"2013.11.24a"
+#define ISP_VER					"2013.11.26a"
 #define ISP_NUM					1
 #define DEVICE_NAME 			        "isp"
 
@@ -48,6 +48,7 @@
 #define ISP_TEST_FOR_AF_WIN			0x00001000
 #define ISP_FLAG_TOUCH_AF			0x00002000
 #define ISP_FLAG_SKIP_BUF			0x00004000
+#define ISP_FLAG_TEST_WB			0x00008000
 
 #define ISP_AF_SM_MASK				ISP_FLAG_AF|ISP_FLAG_TOUCH_AF
 
diff --git a/drivers/amlogic/tvin/isp/isp_hw.c b/drivers/amlogic/tvin/isp/isp_hw.c
index 47341a73c6dc..eb55261a81b9 100755
--- a/drivers/amlogic/tvin/isp/isp_hw.c
+++ b/drivers/amlogic/tvin/isp/isp_hw.c
@@ -27,6 +27,182 @@ MODULE_PARM_DESC(gamma_enable,"\n enable/disable for gamma.\n");
 *reg 0x00~0x07
 *reg 0xaf
 */
+
+static int isp_param_lns_lut_480p[1024] = {
+	0x8a809c8a,0x857c9785,0x80769080,0x7a71897a,0x756d8575,0x71688171,0x6c657b6c,0x69617769,0x665f7366,0x635c6f63,0x615a6c61,0x5f586a5f,0x5e57685e,0x5d56675d,0x5c55655c,0x5b55665b,0x5c56655c,0x5c55665c,0x5c56665c,0x5d57675d,0x5f58695f,0x60596c60,0x625b6f62,0x645d7264,0x68607668,0x6b637b6b,0x70678070,0x746b8474,0x796f8a79,0x7d74907d,0x83799783,0x887e9c88,
+	0x887e9a88,0x837a9483,0x7d748e7d,0x786f8778,0x736b8273,0x6e677d6e,0x6a62776a,0x675f7367,0x645d6f64,0x615a6c61,0x5f59695f,0x5d57675d,0x5b56655b,0x5a55645a,0x59546359,0x59536359,0x59546259,0x59546359,0x5a55635a,0x5b55645b,0x5c56665c,0x5e58695e,0x60596c60,0x635c6e63,0x655e7365,0x69617769,0x6d657c6d,0x71698171,0x766d8676,0x7b728c7b,0x81779381,0x867c9986,
+	0x847b9684,0x80789180,0x7a728a7a,0x756d8475,0x70677e70,0x6b63786b,0x67607367,0x635d6f63,0x615a6b61,0x5e58685e,0x5c56655c,0x5a55635a,0x58536158,0x58526058,0x57525e57,0x56525e56,0x56525e56,0x56525e56,0x57525f57,0x58536158,0x59546359,0x5b55655b,0x5d57685d,0x60596b60,0x625b6f62,0x655e7365,0x6a62786a,0x6e667e6e,0x736b8273,0x786f8978,0x7e758f7e,0x82789582,
+	0x82789282,0x7d748e7d,0x776f8677,0x726a8072,0x6d657b6d,0x68617568,0x645d6f64,0x615a6c61,0x5e58685e,0x5b56655b,0x59546259,0x58536058,0x56515e56,0x55515c55,0x54505b54,0x544f5b54,0x544f5a54,0x54505b54,0x54505c54,0x55515d55,0x57525f57,0x58536258,0x5a55655a,0x5d57685d,0x60596b60,0x635c6f63,0x665f7566,0x6b647a6b,0x70687f70,0x766d8676,0x7b728c7b,0x7f76927f,
+	0x7e768f7e,0x7a728a7a,0x746c8374,0x6f677d6f,0x6a62776a,0x655e7165,0x615b6c61,0x5e58685e,0x5b56655b,0x59546259,0x57525e57,0x55515c55,0x534f5a53,0x524e5852,0x514e5751,0x514d5751,0x514d5751,0x514d5751,0x524e5952,0x534f5953,0x54505c54,0x56515e56,0x58536158,0x5a55645a,0x5d57685d,0x60596c60,0x645d7064,0x68617668,0x6d657c6d,0x736a8273,0x786f8978,0x7c748e7c,
+	0x7c738c7c,0x786f8778,0x726a8072,0x6c657a6c,0x67607467,0x635c6e63,0x5f596a5f,0x5b56655b,0x59546259,0x56525f56,0x54505c54,0x524f5952,0x514d5751,0x504c5550,0x4f4c544f,0x4e4b534e,0x4e4b544e,0x4f4b544f,0x4f4c554f,0x504d5650,0x524e5952,0x54505b54,0x56515e56,0x58536158,0x5b55655b,0x5e58695e,0x625b6e62,0x665f7366,0x6b63796b,0x70687f70,0x766d8776,0x7a718b7a,
+	0x7a718a7a,0x756d8575,0x6f687e6f,0x6a62776a,0x655e7165,0x605a6c60,0x5d57675d,0x5a55635a,0x57535f57,0x54505b54,0x524f5852,0x504d5650,0x4f4b534f,0x4d4b524d,0x4c4a514c,0x4c49504c,0x4c49504c,0x4c49514c,0x4d4a514d,0x4e4b534e,0x4f4c554f,0x514e5851,0x54505b54,0x56515e56,0x59546259,0x5c56665c,0x5f596b5f,0x645d7064,0x68617668,0x6e667d6e,0x746b8374,0x786e8878,
+	0x786f8778,0x736b8273,0x6d657b6d,0x67617467,0x635c6e63,0x5f59695f,0x5b56645b,0x58536058,0x55515c55,0x524f5952,0x504d5650,0x4e4b534e,0x4d4a514d,0x4b494f4b,0x4a484d4a,0x4a474d4a,0x4a474d4a,0x4a484e4a,0x4a494f4a,0x4c49504c,0x4d4b534d,0x4f4c554f,0x524e5852,0x54505c54,0x57526057,0x5a54645a,0x5d58685d,0x625b6d62,0x675f7467,0x6b647a6b,0x71698171,0x756d8675,
+	0x766d8576,0x71698071,0x6b64796b,0x655f7265,0x615b6c61,0x5d57675d,0x59546259,0x56515e56,0x534f5a53,0x514d5651,0x4e4b534e,0x4c49504c,0x4a484e4a,0x49474c49,0x48464a48,0x47464a47,0x47464b47,0x48464b48,0x48474c48,0x4a484e4a,0x4b49504b,0x4d4a534d,0x504c5650,0x524e5952,0x55515e55,0x58536258,0x5c56665c,0x605a6c60,0x655d7265,0x6a62776a,0x6f677e6f,0x736b8473,
+	0x746c8374,0x6f687e6f,0x69627669,0x645d7064,0x5f596a5f,0x5b56645b,0x57536057,0x54505b54,0x524e5852,0x4f4c544f,0x4c4a504c,0x4a484e4a,0x48464b48,0x47454947,0x46444846,0x45444745,0x45444745,0x46444846,0x46454946,0x48464b48,0x49474d49,0x4c49504c,0x4e4b544e,0x514d5751,0x53505c53,0x57525f57,0x5a55645a,0x5e586a5e,0x635c6f63,0x68607468,0x6e657c6e,0x726a8172,
+	0x726a8172,0x6e667c6e,0x68617568,0x625c6e62,0x5e58685e,0x5a54635a,0x56525e56,0x534f5953,0x504d5650,0x4d4b524d,0x4b494f4b,0x48474b48,0x47454947,0x46444746,0x45434645,0x44434644,0x44434544,0x44434644,0x45444745,0x46454946,0x48464b48,0x4a484e4a,0x4c49524c,0x4f4c554f,0x524f5952,0x56515d56,0x59546359,0x5d57685d,0x615b6d61,0x675f7367,0x6c647b6c,0x70687f70,
+	0x71698171,0x6c657a6c,0x67607367,0x615b6c61,0x5d57675d,0x59546159,0x55515c55,0x524e5852,0x4f4c544f,0x4c4a504c,0x49484d49,0x47464a47,0x45444845,0x44434544,0x43424443,0x43424443,0x43424443,0x43424443,0x44434644,0x45444745,0x47454a47,0x49474c49,0x4b484f4b,0x4e4b534e,0x514d5851,0x54505c54,0x58536158,0x5c56665c,0x615a6c61,0x655e7265,0x6b63796b,0x6f667e6f,
+	0x70687f70,0x6b64796b,0x665f7266,0x605a6c60,0x5c56655c,0x57536057,0x54505b54,0x504d5650,0x4e4b524e,0x4b494f4b,0x48474b48,0x46454846,0x44444644,0x43434443,0x42414342,0x42414242,0x42414342,0x42424342,0x43424443,0x44434644,0x46454846,0x47464b47,0x4a484e4a,0x4d4b524d,0x504d5650,0x534f5b53,0x57526057,0x5b56655b,0x60596b60,0x655d7165,0x6a62786a,0x6e657e6e,
+	0x6f687e6f,0x6b63786b,0x655e7165,0x60596a60,0x5b56655b,0x57525f57,0x534f5a53,0x504d5550,0x4d4a514d,0x4a484e4a,0x47464a47,0x45444745,0x44434544,0x42424342,0x41414241,0x41414141,0x42414242,0x42414242,0x42424342,0x43434543,0x45444745,0x47454a47,0x49474d49,0x4c49514c,0x4f4c554f,0x534f5a53,0x56525f56,0x5b55645b,0x5f596a5f,0x645d7064,0x69627769,0x6e657c6e,
+	0x6f677d6f,0x6a63776a,0x645e7064,0x5f59695f,0x5a55645a,0x56525e56,0x524f5952,0x4f4c544f,0x4c4a504c,0x49484d49,0x47454947,0x45444645,0x43424443,0x42414242,0x41414141,0x40414140,0x41414141,0x41414141,0x42424242,0x43424443,0x44434644,0x46454946,0x49474c49,0x4b49504b,0x4f4c544f,0x524e5952,0x56515e56,0x5a55635a,0x5f58695f,0x635c6f63,0x68617668,0x6d647b6d,
+	0x6e677d6e,0x6a63776a,0x645d6f64,0x5f59695f,0x5a55645a,0x56515e56,0x524f5952,0x4f4c544f,0x4b4a4f4b,0x49474c49,0x46454946,0x44444644,0x43424343,0x41414241,0x41414141,0x40404040,0x40404140,0x41404141,0x42414242,0x43424343,0x44434644,0x46454846,0x48464c48,0x4b49504b,0x4e4b544e,0x524e5952,0x55515e55,0x5a54635a,0x5e58695e,0x635c6f63,0x68607568,0x6c647b6c,
+	0x6e677d6e,0x6a63776a,0x645d6f64,0x5f59695f,0x5a55635a,0x56525e56,0x524e5852,0x4e4c544e,0x4b4a4f4b,0x49474b49,0x46454846,0x44444644,0x43424343,0x41414241,0x41404141,0x40404040,0x40404040,0x41414141,0x41414141,0x42424342,0x44434544,0x46444846,0x48464c48,0x4b484f4b,0x4e4b544e,0x524e5952,0x55515e55,0x59546359,0x5e58685e,0x635c6e63,0x68607568,0x6c647b6c,
+	0x6e667c6e,0x6a62776a,0x645d7064,0x5e59695e,0x5a55635a,0x56525e56,0x524f5952,0x4e4c544e,0x4b4a504b,0x48474b48,0x46454846,0x44444644,0x43424343,0x41414241,0x41404141,0x40404040,0x40404140,0x40404140,0x41414241,0x42424442,0x44434644,0x46444846,0x48464b48,0x4b49504b,0x4e4b544e,0x524e5952,0x55515e55,0x59546359,0x5e58695e,0x635c6f63,0x68607668,0x6c647b6c,
+	0x6e677d6e,0x6a63786a,0x645e7064,0x5f59695f,0x5a55645a,0x56525e56,0x524f5952,0x4f4c544f,0x4b4a504b,0x49484c49,0x46454946,0x44444644,0x43424443,0x42414242,0x41404141,0x40404140,0x40404140,0x41414141,0x42414242,0x43424443,0x44434644,0x46444846,0x49474c49,0x4b49504b,0x4e4b544e,0x524e5952,0x55515e55,0x5a54645a,0x5e57695e,0x635c7063,0x68607668,0x6d647c6d,
+	0x6f677e6f,0x6b64786b,0x645f7164,0x5f5a6a5f,0x5b56655b,0x57525f57,0x534f5a53,0x4f4d554f,0x4c4a514c,0x4a484d4a,0x47464947,0x45444745,0x43434543,0x42424342,0x41414241,0x41414141,0x41404141,0x41414241,0x42424342,0x43424443,0x45434745,0x46454946,0x49474d49,0x4c49514c,0x4f4c564f,0x534e5a53,0x56525f56,0x5a55655a,0x5e58695e,0x635c7063,0x69617769,0x6d657c6d,
+	0x70697f70,0x6b64796b,0x665f7266,0x605a6c60,0x5b56655b,0x57536057,0x53505b53,0x504d5650,0x4d4b524d,0x4a494e4a,0x48464b48,0x46454846,0x44444644,0x43434443,0x42424342,0x41414241,0x42414242,0x42414342,0x43424443,0x44434644,0x45444845,0x47464a47,0x4a484e4a,0x4d4a524d,0x504c5650,0x534f5b53,0x57526057,0x5b55655b,0x5f596b5f,0x645d7164,0x6a61786a,0x6e657c6e,
+	0x71698071,0x6d657a6d,0x66607366,0x615c6c61,0x5c57665c,0x58546158,0x54515c54,0x514e5751,0x4e4b534e,0x4b49504b,0x49474c49,0x46454946,0x45444745,0x44434544,0x43424443,0x43424343,0x42424342,0x43424443,0x44434544,0x45444745,0x46454946,0x48474c48,0x4b494f4b,0x4e4b534e,0x514d5751,0x544f5c54,0x58526158,0x5b56665b,0x60596c60,0x655d7265,0x6a62796a,0x6f667f6f,
+	0x726b8272,0x6d667c6d,0x68617468,0x625c6d62,0x5e58685e,0x59556359,0x56525e56,0x524f5952,0x4f4c554f,0x4c4a514c,0x4a484e4a,0x48464b48,0x46454946,0x45444745,0x44434644,0x44434544,0x44434544,0x44434644,0x45444645,0x46454846,0x47464b47,0x49484e49,0x4c49514c,0x4f4b554f,0x524e5952,0x55505e55,0x58536258,0x5d56675d,0x615a6d61,0x665e7366,0x6b647a6b,0x70678070,
+	0x746c8374,0x6f687d6f,0x69627669,0x645e7064,0x5f5a6a5f,0x5a56645a,0x57536057,0x53505b53,0x504e5750,0x4e4c534e,0x4b494f4b,0x49484d49,0x47464b47,0x46454946,0x45444845,0x45444745,0x45444745,0x45444845,0x46454946,0x47464a47,0x49474d49,0x4b49504b,0x4d4b534d,0x504d5650,0x534f5b53,0x56516056,0x5a54645a,0x5e57695e,0x625b6f62,0x67607567,0x6d657c6d,0x72698172,
+	0x766e8576,0x716a8071,0x6b64796b,0x665f7266,0x615b6c61,0x5c57675c,0x58546258,0x55515d55,0x524e5952,0x4f4d554f,0x4d4b524d,0x4b494f4b,0x49484d49,0x48474b48,0x47454a47,0x47454a47,0x46454a46,0x47464a47,0x48464b48,0x49484d49,0x4b484f4b,0x4d4a524d,0x4f4c554f,0x514e5951,0x54505d54,0x57526157,0x5b55665b,0x5f596b5f,0x645c7164,0x69617869,0x6f667f6f,0x736a8373,
+	0x77708877,0x736c8273,0x6d667b6d,0x67617467,0x625c6e62,0x5e59695e,0x5a55645a,0x56525f56,0x54505b54,0x514e5851,0x4f4c554f,0x4c4b524c,0x4b494f4b,0x4a484e4a,0x49474d49,0x49474c49,0x48474c48,0x49474d49,0x4a484e4a,0x4b494f4b,0x4d4a524d,0x4f4c554f,0x514d5851,0x534f5b53,0x56515f56,0x59546359,0x5d57685d,0x615a6d61,0x665e7366,0x6b637a6b,0x71688171,0x756c8575,
+	0x79718979,0x766e8576,0x6f687e6f,0x69637669,0x655e7165,0x5f5a6b5f,0x5c57665c,0x59546259,0x56525e56,0x534f5a53,0x514e5751,0x4e4c544e,0x4d4b524d,0x4c4a514c,0x4b494f4b,0x4b494f4b,0x4b494f4b,0x4b49504b,0x4c49514c,0x4d4b534d,0x4f4c554f,0x504d5750,0x524e5a52,0x55505e55,0x58536258,0x5b55665b,0x5f586b5f,0x635c7063,0x68607668,0x6d657c6d,0x736a8373,0x776e8877,
+	0x7c738c7c,0x78708878,0x716b8071,0x6b65796b,0x67607467,0x625c6e62,0x5e59695e,0x5b56655b,0x58536158,0x55515d55,0x534f5a53,0x514e5851,0x4f4c564f,0x4e4b544e,0x4d4b524d,0x4d4a524d,0x4d4a524d,0x4d4b534d,0x4e4b544e,0x4f4c554f,0x514d5751,0x524f5a52,0x55505d55,0x57526157,0x5a54645a,0x5d57695d,0x615a6d61,0x655e7365,0x6a62796a,0x6f677f6f,0x756c8575,0x79708a79,
+	0x7f768f7f,0x7a738a7a,0x746d8374,0x6e687d6e,0x69637769,0x655e7165,0x615b6c61,0x5d58685d,0x5a55645a,0x57536057,0x55515d55,0x53505b53,0x524e5852,0x504d5750,0x504d5650,0x4f4c554f,0x4f4c554f,0x504d5650,0x504d5750,0x524e5852,0x534f5a53,0x55505d55,0x56526056,0x59546359,0x5c56675c,0x60596b60,0x635c7063,0x68607668,0x6c657b6c,0x726a8272,0x786f8878,0x7c738d7c,
+	0x81799381,0x7d768d7d,0x77708677,0x716a8071,0x6c667a6c,0x67617467,0x635d6f63,0x605a6b60,0x5d58675d,0x5a55645a,0x58536058,0x56515e56,0x54505c54,0x534f5a53,0x524f5952,0x524e5952,0x524e5952,0x524e5a52,0x534f5b53,0x54505c54,0x56515e56,0x57526157,0x59546359,0x5c56665c,0x5f586a5f,0x625b6e62,0x665f7366,0x6b627a6b,0x6f677f6f,0x756c8675,0x7a718c7a,0x7e75907e,
+	0x847c9784,0x80789080,0x7a738a7a,0x746d8374,0x6f687e6f,0x6b64786b,0x66607366,0x625d6f62,0x605a6b60,0x5d57665d,0x5a55645a,0x58546258,0x57526057,0x56515e56,0x55505d55,0x55505d55,0x55505d55,0x55515d55,0x56515e56,0x57526057,0x58536158,0x5a54635a,0x5c56675c,0x5e586a5e,0x625b6e62,0x655d7265,0x69617769,0x6e667d6e,0x726a8372,0x776f8877,0x7d738f7d,0x81779381,
+	0x877e9987,0x827a9382,0x7d758d7d,0x776f8777,0x726a8272,0x6d667b6d,0x69627769,0x655e7265,0x625c6e62,0x5f596a5f,0x5c57665c,0x5a55655a,0x59546259,0x58536158,0x57526057,0x57526057,0x57525f57,0x57526057,0x58536158,0x59536359,0x5a54655a,0x5c56665c,0x5e58695e,0x605a6c60,0x635d7163,0x675f7567,0x6c637b6c,0x70687f70,0x756c8575,0x7a718b7a,0x7f76917f,0x837a9683
+};
+
+static int isp_param_lns_lut_720p[1024] = {
+	0x7f748f7f,0x7b718b7b,0x756c8475,0x70667e70,0x6b62796b,0x665e7266,0x625a6d62,0x5f58695f,0x5c55655c,0x59536259,0x57525f57,0x55505c55,0x534f5a53,0x524e5852,0x514d5751,0x514d5751,0x514d5751,0x514d5851,0x524d5952,0x534e5a53,0x544f5c54,0x56515f56,0x58526258,0x5b55655b,0x5e57695e,0x615a6d61,0x655d7265,0x69617769,0x6f647d6f,0x746a8374,0x796f8979,0x7e728e7e,
+	0x7e738e7e,0x796f8979,0x746a8374,0x6e657c6e,0x69617669,0x645d7164,0x61596c61,0x5d56685d,0x5b55645b,0x58526058,0x56515d56,0x544f5b54,0x524e5852,0x514d5751,0x504c5550,0x504c5550,0x4f4b554f,0x504c5650,0x504c5750,0x514d5851,0x534e5a53,0x55505d55,0x57516057,0x5a53635a,0x5d55675d,0x60586b60,0x645b7064,0x685f7568,0x6d637b6d,0x72688172,0x786e8878,0x7c718c7c,
+	0x7c718c7c,0x786e8778,0x72688072,0x6c637a6c,0x675f7367,0x635b6e63,0x5f58695f,0x5c55665c,0x59536259,0x56515e56,0x544f5a54,0x524d5852,0x504c5650,0x4f4b544f,0x4e4b534e,0x4e4a524e,0x4e4a524e,0x4e4a534e,0x4f4b544f,0x504c5550,0x514d5851,0x534e5b53,0x55505d55,0x58526158,0x5b54655b,0x5e57695e,0x625a6e62,0x665e7366,0x6b62796b,0x70677f70,0x766b8676,0x7a6f8b7a,
+	0x7b708a7b,0x766c8576,0x70677e70,0x6a62786a,0x655d7265,0x61596c61,0x5d56675d,0x5a54635a,0x57525f57,0x55505c55,0x524e5852,0x504c5650,0x4e4b534e,0x4d4a514d,0x4c49514c,0x4c49504c,0x4c49504c,0x4c49504c,0x4d4a514d,0x4e4b534e,0x504b5550,0x524d5852,0x544f5b54,0x57515f57,0x59536359,0x5c56675c,0x60596c60,0x655c7165,0x69607769,0x6f657d6f,0x746a8474,0x796e8879,
+	0x796f8979,0x746a8374,0x6f657c6f,0x69607669,0x645c7064,0x60596a60,0x5c55665c,0x58536158,0x56515d56,0x534e5953,0x504d5650,0x4f4b534f,0x4d4a514d,0x4b494f4b,0x4a484e4a,0x4a484d4a,0x4a474d4a,0x4a484e4a,0x4b484f4b,0x4c49514c,0x4e4b534e,0x504c5650,0x524e5952,0x55505d55,0x58526158,0x5b54655b,0x5f576a5f,0x635b6f63,0x675f7567,0x6d647b6d,0x73688273,0x776c8677,
+	0x786d8678,0x736a8173,0x6d647a6d,0x675f7467,0x635b6e63,0x5e58685e,0x5a54645a,0x57525f57,0x54505b54,0x524d5852,0x4f4c544f,0x4d4a514d,0x4b484f4b,0x4a474d4a,0x49474c49,0x48464b48,0x48464b48,0x49464c49,0x49474d49,0x4b484e4b,0x4c49514c,0x4e4b544e,0x514d5751,0x534f5b53,0x56515f56,0x59546459,0x5d57685d,0x625a6e62,0x665e7366,0x6c62796c,0x71678071,0x766b8576,
+	0x766c8576,0x72687f72,0x6b63796b,0x665e7266,0x615a6c61,0x5d56675d,0x59536259,0x56505d56,0x534f5953,0x504c5550,0x4e4a524e,0x4b494f4b,0x49474d49,0x48464b48,0x47454a47,0x47454947,0x46454946,0x47454a47,0x48464b48,0x49474d49,0x4b484f4b,0x4d4a524d,0x504c5550,0x524e5952,0x55505d55,0x58526258,0x5c56675c,0x60596c60,0x655d7165,0x6a61776a,0x70667e70,0x746a8374,
+	0x756b8375,0x70677e70,0x6a62776a,0x655d7065,0x60596a60,0x5c56655c,0x58526058,0x55505b55,0x524e5852,0x4f4b544f,0x4c4a514c,0x4a484e4a,0x48464b48,0x47454947,0x46454846,0x45444745,0x45444745,0x46444846,0x46454946,0x48464b48,0x4a474d4a,0x4c49504c,0x4e4b534e,0x514d5751,0x544f5b54,0x58526058,0x5b55655b,0x5f586a5f,0x645c7064,0x69607669,0x6e657c6e,0x73698273,
+	0x746a8374,0x6f667d6f,0x69617569,0x645c6f64,0x5f58695f,0x5b55645b,0x57525f57,0x534f5a53,0x514d5651,0x4e4b524e,0x4b494f4b,0x49474c49,0x47454a47,0x45444745,0x45434645,0x44434544,0x44434644,0x45434645,0x46444846,0x47454947,0x49474c49,0x4b484f4b,0x4d4a524d,0x504c5650,0x534f5a53,0x57515f57,0x5a54645a,0x5e57695e,0x635b6f63,0x685f7468,0x6d647b6d,0x72688072,
+	0x73698173,0x6e657c6e,0x68607568,0x635b6e63,0x5e58685e,0x5a54635a,0x56515e56,0x534e5953,0x4f4c554f,0x4d4a514d,0x4a484e4a,0x48464a48,0x46454846,0x45434645,0x44434544,0x43424443,0x43424443,0x44434544,0x45434645,0x46444846,0x48464a48,0x49474d49,0x4c49514c,0x4f4b554f,0x524e5952,0x56505e56,0x59546359,0x5d57685d,0x625a6d62,0x675f7467,0x6d637a6d,0x71678071,
+	0x72688072,0x6d647b6d,0x675f7367,0x625b6d62,0x5d57685d,0x59536259,0x55505d55,0x514e5851,0x4e4b544e,0x4c49504c,0x49474c49,0x47454947,0x45444745,0x44434544,0x43424443,0x42424342,0x43424443,0x43424443,0x44434544,0x45444745,0x47454a47,0x49474c49,0x4b49504b,0x4e4b534e,0x514d5851,0x55505d55,0x59536159,0x5d56675d,0x61596d61,0x665d7366,0x6c62796c,0x70667f70,
+	0x71677f71,0x6c647a6c,0x675f7367,0x615a6c61,0x5d56665d,0x58536158,0x544f5c54,0x514d5751,0x4e4b524e,0x4b494f4b,0x48464b48,0x46454846,0x44434644,0x43424443,0x42414342,0x42414242,0x42414342,0x42424342,0x43424443,0x44434644,0x46444846,0x48464b48,0x4a484f4a,0x4d4a524d,0x514c5751,0x544f5c54,0x58526158,0x5c55665c,0x61596c61,0x655d7265,0x6b61796b,0x6f657e6f,
+	0x70677e70,0x6c63796c,0x665e7266,0x605a6c60,0x5c56665c,0x58526058,0x544f5b54,0x504d5650,0x4d4a524d,0x4a484e4a,0x48464a48,0x45444745,0x44434544,0x42424342,0x41414241,0x41414241,0x41414241,0x42414242,0x42424342,0x44434544,0x45444745,0x47454a47,0x4a474e4a,0x4d49514d,0x504c5650,0x544f5b54,0x57526057,0x5b55655b,0x60586b60,0x655c7165,0x6a61776a,0x6f657e6f,
+	0x70677f70,0x6b63796b,0x655e7265,0x60596b60,0x5b55655b,0x57526057,0x534f5a53,0x504c5550,0x4c4a514c,0x49484d49,0x47454a47,0x45444645,0x43424443,0x42414242,0x41414141,0x41414141,0x41414141,0x41414141,0x42424342,0x43424443,0x45444645,0x47454a47,0x49474d49,0x4c49514c,0x4f4c564f,0x534e5a53,0x57515f57,0x5b55655b,0x5f586a5f,0x645c7064,0x6a60786a,0x6e647d6e,
+	0x6f667e6f,0x6b62786b,0x655d7165,0x5f596b5f,0x5b55655b,0x57525f57,0x534f5a53,0x4f4c544f,0x4c4a504c,0x49474d49,0x46454946,0x45434645,0x43424443,0x42414242,0x41404141,0x41404141,0x40404140,0x41414141,0x41414241,0x43424443,0x44434644,0x46454946,0x49474c49,0x4c49514c,0x4f4c554f,0x534e5a53,0x57515f57,0x5b54645b,0x5f586a5f,0x645c7064,0x69607769,0x6e647c6e,
+	0x6f667e6f,0x6b62786b,0x655d7165,0x5f596a5f,0x5b55655b,0x56515f56,0x534e5953,0x4f4b544f,0x4c49504c,0x49474c49,0x46454946,0x44434644,0x43424443,0x41414241,0x40404140,0x40404040,0x40404040,0x41414141,0x41414241,0x42424342,0x44434644,0x46454946,0x49474c49,0x4b49504b,0x4f4b554f,0x534e5a53,0x56515f56,0x5a54645a,0x5f586a5f,0x645c7064,0x69607669,0x6d647c6d,
+	0x6f667d6f,0x6a62786a,0x655d7165,0x5f596a5f,0x5b55645b,0x56515f56,0x524e5952,0x4f4b544f,0x4c49504c,0x49474c49,0x46454846,0x44434644,0x42424442,0x41414241,0x40404140,0x40404040,0x40404040,0x40404140,0x41414241,0x42424342,0x44434644,0x46444846,0x48464c48,0x4b48504b,0x4f4b544f,0x524e5a52,0x57515f57,0x5a54645a,0x5f58695f,0x645b7064,0x69607669,0x6d637c6d,
+	0x6f667e6f,0x6a62786a,0x655d7165,0x5f596a5f,0x5b55655b,0x56515f56,0x534e5953,0x4f4c544f,0x4b49504b,0x49474c49,0x46454946,0x44434644,0x42424342,0x41414241,0x40404140,0x40404040,0x40404040,0x40404140,0x41414241,0x42424342,0x44434644,0x46444846,0x48464c48,0x4b48504b,0x4f4b544f,0x524e5a52,0x56515f56,0x5a54645a,0x5f57695f,0x635b7063,0x69607669,0x6d637c6d,
+	0x6f667e6f,0x6b62786b,0x655d7165,0x60596a60,0x5b55655b,0x56515f56,0x534e5953,0x4f4c554f,0x4c49504c,0x49474c49,0x46454946,0x44434644,0x43424443,0x41414241,0x40404140,0x40404040,0x40404040,0x41404141,0x41414241,0x42424442,0x44434644,0x46444946,0x48464c48,0x4b49504b,0x4f4b544f,0x524e5952,0x56515f56,0x5a54655a,0x5f576a5f,0x645b7064,0x69607769,0x6d637c6d,
+	0x70667e70,0x6b62786b,0x655d7165,0x60596b60,0x5b55655b,0x57525f57,0x534f5a53,0x4f4c554f,0x4c49504c,0x49484d49,0x47454947,0x45444645,0x43424443,0x42414242,0x41404141,0x40404140,0x40404140,0x41414141,0x42414242,0x43424443,0x44434644,0x46454946,0x49474c49,0x4c49504c,0x4f4b554f,0x534e5a53,0x57515f57,0x5b54655b,0x5f586a5f,0x645b7064,0x69607769,0x6e647d6e,
+	0x70677f70,0x6b63796b,0x665e7266,0x60596b60,0x5c55665c,0x57526057,0x534f5a53,0x4f4c564f,0x4d4a514d,0x4a484e4a,0x47464a47,0x45444745,0x43434543,0x42414342,0x41414241,0x41414141,0x40404140,0x41414241,0x42414342,0x43424543,0x45434745,0x47454947,0x49474d49,0x4c49514c,0x504c5650,0x534e5b53,0x57516057,0x5b54655b,0x5f586b5f,0x645c7164,0x6a61786a,0x6e647d6e,
+	0x71677f71,0x6c637a6c,0x665f7366,0x615a6c61,0x5c56665c,0x58536058,0x54505b54,0x504d5750,0x4d4a524d,0x4a484e4a,0x48464b48,0x45444845,0x44434544,0x42424442,0x42414342,0x41414241,0x41414241,0x41414241,0x42424342,0x43434543,0x45444745,0x47454a47,0x4a474e4a,0x4d4a524d,0x504c5750,0x544f5b54,0x57526057,0x5c55665c,0x60586b60,0x655c7265,0x6a61786a,0x6f657e6f,
+	0x72688072,0x6d647b6d,0x675f7367,0x625b6d62,0x5d57675d,0x58536158,0x55505c55,0x514d5751,0x4e4b534e,0x4b494f4b,0x48474c48,0x46454946,0x44444644,0x43434543,0x42424342,0x42424342,0x42424342,0x42424342,0x43424443,0x44434644,0x46444846,0x48464b48,0x4b484f4b,0x4e4a534e,0x514d5851,0x544f5c54,0x58526158,0x5c55675c,0x60596c60,0x665d7366,0x6b627a6b,0x70657f70,
+	0x73688173,0x6e657b6e,0x68607468,0x625b6d62,0x5e58685e,0x59546259,0x55515d55,0x524e5852,0x4e4b544e,0x4c49504c,0x49474d49,0x47464a47,0x45444845,0x44434644,0x43434543,0x43424443,0x43424443,0x43424443,0x44434644,0x45444745,0x47454a47,0x49474d49,0x4b49504b,0x4e4b544e,0x524d5852,0x55505d55,0x59536259,0x5d56685d,0x61596d61,0x665e7466,0x6c637b6c,0x70667f70,
+	0x736a8273,0x6f667d6f,0x69617569,0x635c6f63,0x5f58695f,0x5a55645a,0x56515e56,0x534f5a53,0x4f4d554f,0x4d4a514d,0x4a484e4a,0x48474b48,0x46454946,0x45444745,0x44434644,0x44434544,0x44434544,0x44434644,0x45444745,0x46444946,0x48464b48,0x4a474e4a,0x4c4a514c,0x4f4b554f,0x524e5a52,0x56505e56,0x59536359,0x5d56685d,0x625a6e62,0x675e7567,0x6d637c6d,0x71678071,
+	0x746b8374,0x70677e70,0x6a62776a,0x645d7064,0x60596a60,0x5b55655b,0x57525f57,0x534f5b53,0x504d5750,0x4e4b534e,0x4b49504b,0x49474d49,0x47464a47,0x46444846,0x45444745,0x45444745,0x44444644,0x45444745,0x46444846,0x47464a47,0x49474c49,0x4b484f4b,0x4d4a534d,0x504c5750,0x534f5b53,0x57516057,0x5a54645a,0x5e576a5e,0x635b6f63,0x685f7568,0x6e647d6e,0x73688273,
+	0x766c8476,0x71687f71,0x6b63786b,0x655e7265,0x615a6c61,0x5c56665c,0x58536158,0x55505c55,0x514e5851,0x4f4c544f,0x4c4a514c,0x4a484e4a,0x48474c48,0x47464a47,0x46454946,0x46444846,0x46444846,0x46454946,0x47454a47,0x48474c48,0x4a484e4a,0x4c49514c,0x4f4b544f,0x514d5851,0x554f5d55,0x58526158,0x5b55665b,0x5f586b5f,0x645c7164,0x69607769,0x6f657e6f,0x74698374,
+	0x776d8677,0x72698172,0x6d647a6d,0x675f7367,0x625b6d62,0x5d57685d,0x59546359,0x56515e56,0x534f5a53,0x504d5650,0x4e4b534e,0x4b49504b,0x4a484e4a,0x48474c48,0x48464b48,0x47464a47,0x47454a47,0x47464a47,0x48474c48,0x4a474d4a,0x4b49504b,0x4d4a534d,0x504c5650,0x524e5952,0x55505e55,0x58536258,0x5c55675c,0x60596d60,0x655d7365,0x6b61796b,0x71668071,0x756a8475,
+	0x786e8878,0x746b8374,0x6e657c6e,0x68617568,0x635c6f63,0x5f58695f,0x5a55645a,0x57526057,0x54505c54,0x524e5852,0x4f4c554f,0x4d4a524d,0x4b484f4b,0x4a484e4a,0x49474c49,0x48474c48,0x48474c48,0x49474d49,0x4a474d4a,0x4b48504b,0x4d4a524d,0x4f4b544f,0x514d5851,0x544f5b54,0x57516057,0x5a53645a,0x5e56695e,0x625a6e62,0x665e7466,0x6c627b6c,0x72688172,0x766b8676,
+	0x7a70897a,0x756c8475,0x6f677d6f,0x6a62776a,0x655d7165,0x60596b60,0x5c56665c,0x58536258,0x56515e56,0x534f5a53,0x514d5751,0x4e4b544e,0x4d4a524d,0x4b49504b,0x4b484f4b,0x4a484e4a,0x4a484e4a,0x4b484f4b,0x4b49504b,0x4d4a524d,0x4e4b544e,0x504c5750,0x524e5a52,0x554f5d55,0x58526258,0x5b55665b,0x5f586a5f,0x635b7063,0x685f7568,0x6d647c6d,0x73698373,0x786d8878,
+	0x7c718c7c,0x776e8677,0x71698071,0x6c63796c,0x665f7366,0x625b6d62,0x5e57685e,0x5a55645a,0x57526057,0x55505c55,0x524e5952,0x504c5650,0x4e4b544e,0x4d4a524d,0x4c4a514c,0x4c49504c,0x4c49504c,0x4c49514c,0x4d4a524d,0x4e4b544e,0x504c5650,0x524d5952,0x544f5c54,0x57515f57,0x59536359,0x5d56685d,0x61596c61,0x655c7265,0x6a61786a,0x6f657e6f,0x756b8575,0x796e8a79,
+	0x7d738d7d,0x796f8879,0x736a8173,0x6d647a6d,0x67607467,0x635c6f63,0x5f586a5f,0x5b55655b,0x58536158,0x56515e56,0x534f5b53,0x514d5851,0x504c5650,0x4f4b544f,0x4e4a534e,0x4d4a524d,0x4d4a534d,0x4e4a534e,0x4f4b544f,0x4f4c554f,0x514d5851,0x534e5a53,0x55505e55,0x58526158,0x5b54655b,0x5e56695e,0x625a6e62,0x665e7466,0x6b627a6b,0x71678071,0x766c8676,0x7b6f8c7b
+};
+
+static int isp_param_lns_lut_960p[1024] = {
+	0x8a7f9a8a,0x857b9585,0x7f758f7f,0x7a71897a,0x756c8375,0x71677f71,0x6c647a6c,0x69617669,0x665e7266,0x635b6e63,0x615a6c61,0x5e58695e,0x5d56675d,0x5c56665c,0x5c55655c,0x5b55645b,0x5b55645b,0x5b55655b,0x5c55665c,0x5d56675d,0x5f58695f,0x60596b60,0x625b6e62,0x655d7165,0x68607568,0x6c637a6c,0x6f677e6f,0x746b8374,0x796f8979,0x7e748f7e,0x83799683,0x897d9c89,
+	0x887d9788,0x83799283,0x7e748c7e,0x786f8678,0x736a8073,0x6e667b6e,0x6a62766a,0x675f7267,0x635c6e63,0x615a6c61,0x5e58685e,0x5c57665c,0x5b55645b,0x5a54635a,0x59546259,0x59536159,0x59536159,0x59536259,0x5a54625a,0x5b55645b,0x5c56665c,0x5e57685e,0x60596b60,0x625b6e62,0x655e7265,0x69617669,0x6d657b6d,0x71698071,0x766e8676,0x7b728c7b,0x82779282,0x877c9987,
+	0x847a9384,0x80768f80,0x7a70887a,0x756c8375,0x70677d70,0x6b63776b,0x675f7267,0x645c6f64,0x605a6a60,0x5e57675e,0x5c56645c,0x5a54625a,0x58536058,0x57525f57,0x56515e56,0x56515d56,0x56515e56,0x56515e56,0x57525f57,0x58536058,0x59536259,0x5b55645b,0x5d57675d,0x5f596a5f,0x625c6e62,0x665e7366,0x6a62776a,0x6e667c6e,0x746b8274,0x79708879,0x7f758f7f,0x83799483,
+	0x82779082,0x7d748c7d,0x776e8577,0x72697f72,0x6d657a6d,0x68607468,0x645c6f64,0x615a6b61,0x5e58675e,0x5b56645b,0x59546159,0x57525f57,0x56515d56,0x55505b55,0x544f5a54,0x534f5a53,0x534f5a53,0x534f5a53,0x54505b54,0x55505d55,0x57525f57,0x58536158,0x5a54645a,0x5d56675d,0x60596b60,0x635c6f63,0x67607467,0x6c647a6c,0x71688071,0x766d8576,0x7c728b7c,0x80769180,
+	0x7f748e7f,0x7a71897a,0x746c8374,0x6f677d6f,0x6a62776a,0x665e7166,0x615b6c61,0x5e58685e,0x5c56655c,0x59536159,0x57525e57,0x55505c55,0x534f5a53,0x524e5852,0x514d5751,0x504d5650,0x504d5650,0x514d5751,0x514d5851,0x534e5953,0x544f5b54,0x56515e56,0x58536158,0x5a55645a,0x5d57685d,0x60596c60,0x645d7164,0x69617769,0x6e657d6e,0x736a8373,0x79708979,0x7d738e7d,
+	0x7c728c7c,0x786f8778,0x72698072,0x6c64796c,0x67607467,0x625c6e62,0x5f58695f,0x5c56655c,0x59546259,0x57525f57,0x54505b54,0x524e5852,0x514d5651,0x4f4c554f,0x4f4b544f,0x4e4b534e,0x4e4b534e,0x4e4b544e,0x4f4b554f,0x504d5650,0x524e5852,0x534f5b53,0x56515e56,0x58536258,0x5b55655b,0x5e58695e,0x625b6e62,0x665f7466,0x6b637a6b,0x71688071,0x776e8677,0x7b718c7b,
+	0x7a70897a,0x756d8475,0x6f677d6f,0x6a62766a,0x655e7165,0x615a6b61,0x5d57675d,0x5a54625a,0x57525f57,0x54505b54,0x524e5852,0x504d5650,0x4e4b534e,0x4d4a524d,0x4c49504c,0x4c49504c,0x4c49504c,0x4c49504c,0x4d4a514d,0x4e4b534e,0x504c5550,0x514d5851,0x544f5b54,0x56515e56,0x59536259,0x5c56675c,0x60596c60,0x645d7064,0x69617669,0x6f667d6f,0x756b8375,0x796f8979,
+	0x786f8778,0x736b8173,0x6d657b6d,0x68617468,0x635c6e63,0x5e58695e,0x5b55645b,0x58536058,0x55515c55,0x524f5852,0x504d5550,0x4e4b524e,0x4c49504c,0x4b494f4b,0x4a484d4a,0x49474d49,0x49474d49,0x4a474d4a,0x4a484e4a,0x4c49504c,0x4d4a524d,0x4f4c554f,0x524e5852,0x54505b54,0x57526057,0x5b55645b,0x5e58685e,0x625b6e62,0x675f7467,0x6d647a6d,0x72698172,0x776d8677,
+	0x766d8576,0x72698072,0x6b64786b,0x665f7266,0x615b6c61,0x5d57675d,0x59546259,0x56525e56,0x53505a53,0x514e5651,0x4e4b534e,0x4c4a504c,0x4a484e4a,0x49474c49,0x48464b48,0x47464a47,0x47464a47,0x47464a47,0x49464c49,0x4a484e4a,0x4c49504c,0x4d4b524d,0x504c5650,0x534f5a53,0x56515e56,0x59536259,0x5d57675d,0x615a6c61,0x655e7265,0x6b62786b,0x71687f71,0x756c8475,
+	0x746c8374,0x70687e70,0x6a63766a,0x655e7065,0x60596a60,0x5b56655b,0x58536058,0x54505b54,0x524e5852,0x4f4c544f,0x4c4a514c,0x4a484e4a,0x48474b48,0x47454947,0x46454846,0x46444746,0x46444846,0x46454846,0x47454947,0x48464b48,0x4a484e4a,0x4c49504c,0x4e4b544e,0x514d5751,0x54505b54,0x57536057,0x5b55655b,0x5f596a5f,0x645c7064,0x69617569,0x6f667d6f,0x746a8274,
+	0x736a8173,0x6e677c6e,0x68617568,0x635c6e63,0x5e58685e,0x5a55635a,0x56525e56,0x534f5a53,0x504d5650,0x4d4b524d,0x4b484f4b,0x49474b49,0x47454947,0x45444745,0x45444645,0x44434544,0x44434544,0x45434645,0x45444745,0x46454946,0x48464b48,0x4a484e4a,0x4d4a524d,0x504d5550,0x534f5a53,0x56515e56,0x5a54635a,0x5e58695e,0x625b6e62,0x68607468,0x6d657b6d,0x72698172,
+	0x71698071,0x6d657a6d,0x67607367,0x625b6d62,0x5d57675d,0x59546259,0x55515c55,0x524e5852,0x4f4c544f,0x4c4a504c,0x4a484d4a,0x47464a47,0x46444746,0x44434644,0x44424444,0x43424443,0x43424443,0x44424544,0x44434644,0x45444745,0x47454a47,0x49474c49,0x4c49504c,0x4e4b544e,0x514e5851,0x55515d55,0x59536259,0x5d57675d,0x615a6d61,0x675f7367,0x6c637a6c,0x71677f71,
+	0x70687e70,0x6c64796c,0x665f7266,0x615a6b61,0x5c56665c,0x58536158,0x54505b54,0x514d5751,0x4e4b534e,0x4b494f4b,0x48474b48,0x46454846,0x44434644,0x43424443,0x42424342,0x42414242,0x42414342,0x43424343,0x43424443,0x44434644,0x46454846,0x48464b48,0x4a484e4a,0x4d4a524d,0x504d5650,0x54505c54,0x58536058,0x5c56665c,0x605a6b60,0x655e7265,0x6b62786b,0x6f667e6f,
+	0x70677d70,0x6b63786b,0x655e7165,0x605a6b60,0x5b56655b,0x57525f57,0x534f5a53,0x504d5550,0x4d4a514d,0x4a484e4a,0x47464a47,0x45444745,0x44434544,0x42424342,0x41414241,0x41414141,0x41414141,0x42414242,0x42424342,0x44434544,0x45444745,0x47454a47,0x4a474d4a,0x4c4a514c,0x504c5650,0x534f5b53,0x57525f57,0x5b55655b,0x5f596a5f,0x645d7064,0x6a62776a,0x6f657d6f,
+	0x6f677c6f,0x6b62776b,0x655e7065,0x5f596a5f,0x5b55645b,0x56525f56,0x534f5953,0x4f4c554f,0x4c4a504c,0x49484d49,0x47454947,0x45444645,0x43424443,0x42414242,0x41414141,0x41404141,0x41414141,0x41414141,0x42414242,0x43424443,0x44434644,0x46454946,0x49474c49,0x4c49504c,0x4f4c554f,0x534f5a53,0x56525f56,0x5b55645b,0x5f586a5f,0x645d7064,0x69617669,0x6d657c6d,
+	0x6f667c6f,0x6a62776a,0x645d6f64,0x5f59695f,0x5b55635b,0x56525e56,0x524f5952,0x4f4c544f,0x4c4a504c,0x49474c49,0x46454946,0x44434644,0x43424443,0x41414241,0x40414140,0x40404040,0x40404040,0x41404141,0x42414242,0x43424343,0x44434644,0x46454846,0x48464c48,0x4b48504b,0x4f4b544f,0x524e5952,0x56515e56,0x5a55645a,0x5f58695f,0x645d6f64,0x69617669,0x6d647c6d,
+	0x6e667d6e,0x6a62776a,0x645d6f64,0x5f59695f,0x5a55645a,0x56525e56,0x524f5952,0x4e4c544e,0x4c4a504c,0x49474c49,0x46454846,0x44434644,0x43424343,0x41414241,0x40404040,0x40404040,0x40404040,0x41404141,0x41414241,0x42424342,0x44434544,0x46444846,0x48464c48,0x4b48504b,0x4f4b544f,0x524e5952,0x56515e56,0x5a54645a,0x5f58695f,0x645c6f64,0x69617669,0x6d647b6d,
+	0x6f667c6f,0x6a62776a,0x645d6f64,0x5f59695f,0x5a55645a,0x56525e56,0x524f5952,0x4f4c544f,0x4c49504c,0x49474c49,0x46454846,0x44444644,0x43424343,0x41414241,0x41404141,0x40404040,0x40404040,0x41404141,0x41414241,0x43424443,0x44434644,0x46444846,0x48464c48,0x4b49504b,0x4f4c544f,0x524e5952,0x56515e56,0x5a54645a,0x5f58695f,0x645c6f64,0x69617669,0x6d657c6d,
+	0x6f677c6f,0x6b63776b,0x655e7065,0x5f596a5f,0x5b55645b,0x56525e56,0x534f5953,0x4f4c544f,0x4c4a504c,0x49474c49,0x47454947,0x45444645,0x43424443,0x42414242,0x41404141,0x40404140,0x40404140,0x41414141,0x41414241,0x43424443,0x44434644,0x46444946,0x49474c49,0x4c49504c,0x4f4c554f,0x534e5a53,0x56515f56,0x5a54645a,0x5f586a5f,0x645c7064,0x69617769,0x6e657c6e,
+	0x70677d70,0x6b63786b,0x655e7165,0x605a6b60,0x5b56655b,0x57525f57,0x534f5a53,0x4f4c554f,0x4c4a514c,0x4a484e4a,0x47464a47,0x45444745,0x43434543,0x42424342,0x41414241,0x41414141,0x41414141,0x41414241,0x42424342,0x43424443,0x45444745,0x47454947,0x49474d49,0x4c4a514c,0x504c5650,0x534f5a53,0x57526057,0x5b55655b,0x5f596b5f,0x645d7064,0x6a62776a,0x6e657d6e,
+	0x71687f71,0x6c64796c,0x665f7266,0x615b6c61,0x5c57665c,0x58536058,0x54505b54,0x514d5751,0x4d4b524d,0x4b494f4b,0x48474b48,0x46454846,0x44434644,0x43424443,0x42424342,0x42414242,0x42414242,0x42414342,0x43424443,0x44434544,0x45444845,0x48464b48,0x4a484e4a,0x4d4a524d,0x504d5750,0x54505c54,0x58536158,0x5c56665c,0x60596b60,0x655e7265,0x6b62786b,0x6f667e6f,
+	0x72698072,0x6d667b6d,0x67607367,0x625c6d62,0x5d57675d,0x59546259,0x55515d55,0x514e5851,0x4e4c544e,0x4c4a504c,0x49484d49,0x47454a47,0x45444745,0x44434644,0x43434443,0x43424443,0x43424443,0x43424443,0x44434544,0x45444745,0x47454a47,0x49474d49,0x4c49504c,0x4e4b544e,0x524e5852,0x55505d55,0x58536258,0x5d56675d,0x615a6d61,0x665e7366,0x6c637a6c,0x70677f70,
+	0x746b8274,0x6f677c6f,0x69627569,0x635d6f63,0x5e59695e,0x5a55635a,0x56525f56,0x534f5a53,0x4f4d564f,0x4d4b524d,0x4a494e4a,0x48474c48,0x47454947,0x45444745,0x44444644,0x44434644,0x44434644,0x44444644,0x45444745,0x46454946,0x48464b48,0x4a484e4a,0x4d4a524d,0x4f4c554f,0x534f5a53,0x56515f56,0x5a54635a,0x5e58695e,0x625b6e62,0x67607567,0x6d657c6d,0x72688172,
+	0x756c8475,0x70687e70,0x6a63776a,0x655e7065,0x605a6b60,0x5b56655b,0x57536057,0x54505c54,0x514e5751,0x4e4c544e,0x4c4a504c,0x4a484d4a,0x48474b48,0x47464947,0x46454846,0x45454845,0x45444845,0x46454846,0x47454a47,0x48464b48,0x4a484e4a,0x4c49504c,0x4e4b544e,0x514d5751,0x54505c54,0x57526157,0x5b55655b,0x5f586b5f,0x645c7064,0x69617669,0x6f667e6f,0x736a8373,
+	0x766d8676,0x726a8072,0x6c65796c,0x675f7367,0x615b6c61,0x5d57675d,0x59546259,0x56525e56,0x524f5952,0x504d5650,0x4d4b524d,0x4b49504b,0x4a484e4a,0x48474c48,0x48464b48,0x47464a47,0x47464a47,0x48464a48,0x48474c48,0x4a484d4a,0x4b49504b,0x4d4b534d,0x504c5650,0x524e5a52,0x55515e55,0x58536258,0x5c56675c,0x605a6c60,0x655e7265,0x6a62796a,0x71678071,0x756b8475,
+	0x786f8878,0x746c8274,0x6e667b6e,0x68617468,0x635d6e63,0x5e59695e,0x5b56645b,0x57536057,0x54505c54,0x524f5852,0x4f4c554f,0x4d4b524d,0x4c49504c,0x4a484e4a,0x49484d49,0x49474d49,0x49474d49,0x49484d49,0x4b484e4b,0x4c49504c,0x4d4a524d,0x4f4c554f,0x514e5851,0x54505c54,0x57526057,0x5a54645a,0x5e57695e,0x625b6f62,0x675f7467,0x6d647b6d,0x72698272,0x766d8776,
+	0x7a718a7a,0x776d8577,0x70687e70,0x6a63776a,0x655f7165,0x615a6c61,0x5d57675d,0x59546259,0x56525f56,0x54505b54,0x514e5851,0x4f4c554f,0x4e4b534e,0x4d4a514d,0x4c49504c,0x4b49504b,0x4b49504b,0x4c49504c,0x4c4a514c,0x4e4b534e,0x4f4c554f,0x514d5851,0x534f5b53,0x56515e56,0x59536359,0x5c56675c,0x60596c60,0x645d7164,0x69617769,0x6e667e6e,0x746b8474,0x796f8a79,
+	0x7d738d7d,0x79708879,0x726b8172,0x6d657a6d,0x67617467,0x635d6e63,0x5f59695f,0x5c56655c,0x58536158,0x56515e56,0x54505b54,0x514e5851,0x504d5650,0x4f4c544f,0x4e4b534e,0x4e4b534e,0x4d4b534d,0x4e4b534e,0x4f4c544f,0x504d5650,0x514e5851,0x534f5b53,0x55515e55,0x58526158,0x5b55655b,0x5e58695e,0x625b6f62,0x665e7466,0x6b637a6b,0x71688071,0x776d8777,0x7b718b7b,
+	0x7f768f7f,0x7b728b7b,0x756d8375,0x6f687d6f,0x6a63776a,0x655f7265,0x615b6c61,0x5e58685e,0x5b55645b,0x58536158,0x56515e56,0x54505b54,0x524e5952,0x514e5851,0x504d5750,0x504d5650,0x504d5650,0x514d5751,0x514d5851,0x524e5952,0x544f5c54,0x56515e56,0x57526157,0x5a54645a,0x5d57685d,0x615a6d61,0x645d7264,0x69617769,0x6e667d6e,0x746a8374,0x796f8979,0x7d728e7d,
+	0x82799282,0x7e748d7e,0x78708778,0x736a8173,0x6d667a6d,0x68617468,0x645e7064,0x605a6b60,0x5e58685e,0x5b55645b,0x58536158,0x56525f56,0x55505c55,0x54505b54,0x534f5a53,0x534f5a53,0x534f5a53,0x534f5a53,0x54505c54,0x55505d55,0x56515f56,0x58536158,0x5a54645a,0x5d56675d,0x60596c60,0x645c7064,0x67607567,0x6c647a6c,0x71688071,0x766d8676,0x7b718c7b,0x7f75907f,
+	0x857c9585,0x81789181,0x7b728a7b,0x766e8476,0x70697d70,0x6b64786b,0x67607467,0x635d6f63,0x605a6b60,0x5d57685d,0x5b55645b,0x59546259,0x57526057,0x56515f56,0x56515e56,0x55515d55,0x55515e55,0x55515e55,0x56515f56,0x57526057,0x59536259,0x5b55655b,0x5d57675d,0x5f596b5f,0x635b6e63,0x665f7366,0x6b63786b,0x6f677e6f,0x746b8374,0x796f8979,0x7e738e7e,0x80769280,
+	0x887e9888,0x837a9383,0x7d758d7d,0x786f8678,0x726a8172,0x6d667b6d,0x69627669,0x655f7265,0x635c6f63,0x5f596a5f,0x5d57675d,0x5b55655b,0x59546359,0x58536258,0x58536158,0x58526058,0x58526058,0x58536158,0x58536258,0x59546359,0x5b55655b,0x5d57675d,0x5f586a5f,0x615b6e61,0x655d7265,0x69617669,0x6d657b6d,0x71698071,0x766d8676,0x7b718b7b,0x7f75907f,0x81769381
+};
+
+static int isp_param_lns_lut_1080p[1024] = {
+	0x635c6d63,0x605b6b60,0x5d57675d,0x5b55645b,0x59546159,0x57525e57,0x55515c55,0x534f5953,0x514e5651,0x4f4c544f,0x4e4b524e,0x4d4a514d,0x4c494f4c,0x4b484e4b,0x4a484d4a,0x4a484d4a,0x4a484d4a,0x4a484d4a,0x4a484e4a,0x4b494f4b,0x4c4a504c,0x4d4a524d,0x4f4c534f,0x504d5550,0x524f5852,0x54505b54,0x56515d56,0x58536058,0x5a55645a,0x5d57675d,0x60596a60,0x625c6d62,
+	0x625c6d62,0x605a6960,0x5d57665d,0x5a55635a,0x58535f58,0x56525d56,0x54505a54,0x524f5852,0x504d5550,0x4f4c534f,0x4d4a514d,0x4c494f4c,0x4b494e4b,0x4a484d4a,0x49474c49,0x49474c49,0x49474c49,0x49474c49,0x4a484d4a,0x4a484e4a,0x4b494f4b,0x4c4a514c,0x4e4b534e,0x4f4c544f,0x514d5751,0x534f5953,0x55515c55,0x57525f57,0x5a54625a,0x5c57665c,0x5f59695f,0x615b6c61,
+	0x615b6b61,0x5e59685e,0x5c56655c,0x59546259,0x57525f57,0x55515c55,0x534f5953,0x514e5751,0x4f4c544f,0x4e4b524e,0x4c4a504c,0x4b484e4b,0x49474d49,0x49474c49,0x48464b48,0x48464a48,0x48464a48,0x48464b48,0x48474b48,0x49474c49,0x4a484d4a,0x4b494f4b,0x4d4a514d,0x4e4b534e,0x504d5650,0x524e5852,0x54505b54,0x56525e56,0x59546159,0x5b56655b,0x5e58685e,0x605a6b60,
+	0x605a6a60,0x5e58685e,0x5b55645b,0x58536058,0x56515d56,0x54505a54,0x524e5752,0x504d5550,0x4e4b534e,0x4c4a504c,0x4b494e4b,0x49474d49,0x48474b48,0x48464a48,0x47454947,0x47454947,0x47454947,0x47454947,0x47464a47,0x48464b48,0x49474c49,0x4a484e4a,0x4c49504c,0x4d4a524d,0x4f4c544f,0x514d5751,0x534f5a53,0x55515d55,0x58536058,0x5a55635a,0x5d57675d,0x60596a60,
+	0x5f59695f,0x5c57665c,0x5a55635a,0x57535e57,0x55515c55,0x534f5953,0x514e5751,0x4f4c534f,0x4d4a514d,0x4b494f4b,0x4a484d4a,0x48474b48,0x48464a48,0x47454947,0x46454846,0x46444746,0x45444845,0x45444845,0x46454846,0x47454947,0x48464b48,0x49474c49,0x4b484e4b,0x4c4a504c,0x4e4b534e,0x504d5550,0x524e5852,0x54505c54,0x57525f57,0x5a54625a,0x5d57665d,0x5f59685f,
+	0x5e58695e,0x5c56655c,0x59546159,0x57525e57,0x54505b54,0x524e5852,0x504d5550,0x4e4b524e,0x4c4a504c,0x4a484e4a,0x49474c49,0x48464a48,0x46454946,0x46444746,0x45444745,0x45434645,0x45434645,0x45434745,0x45444745,0x46454946,0x47464a47,0x48464b48,0x4a474d4a,0x4b494f4b,0x4d4a524d,0x4f4c554f,0x514e5851,0x54505a54,0x56515e56,0x59546159,0x5c56655c,0x5e58685e,
+	0x5e58675e,0x5c56655c,0x59546159,0x55525d55,0x53505a53,0x524e5752,0x504c5550,0x4d4b524d,0x4b494f4b,0x4a484d4a,0x48464b48,0x47454947,0x46444846,0x45444745,0x44434644,0x44434544,0x44434544,0x44434644,0x45434745,0x45444745,0x46454946,0x48464a48,0x49474c49,0x4b484f4b,0x4c49514c,0x4e4b544e,0x504d5750,0x534f5a53,0x56515d56,0x58536158,0x5b56645b,0x5d58675d,
+	0x5d57675d,0x5b55635b,0x58536058,0x55515c55,0x534f5953,0x514d5651,0x4f4c544f,0x4c4a514c,0x4a494e4a,0x49474b49,0x47464a47,0x46444846,0x45444645,0x44434544,0x44434544,0x43424443,0x43424443,0x44434544,0x44434644,0x45444745,0x46444846,0x47464947,0x48464b48,0x4a474e4a,0x4c49504c,0x4e4b534e,0x504d5550,0x524e5952,0x55515c55,0x58536058,0x5b55645b,0x5c57665c,
+	0x5d57665d,0x5a55635a,0x57535f57,0x54505b54,0x524e5852,0x504d5550,0x4e4b534e,0x4c49504c,0x4a484d4a,0x48464b48,0x46454946,0x45444745,0x44434544,0x43434443,0x43424443,0x42424342,0x43424343,0x43424443,0x43424543,0x44434544,0x45434745,0x46454846,0x47464a47,0x49474c49,0x4b494f4b,0x4d4a524d,0x4f4c554f,0x514e5851,0x54505b54,0x57525f57,0x5a54635a,0x5c56655c,
+	0x5c56655c,0x59546259,0x57525f57,0x54505b54,0x514e5751,0x4f4c554f,0x4d4b524d,0x4b494f4b,0x49474c49,0x48464a48,0x46444846,0x45444645,0x44434544,0x43424443,0x42414342,0x42414342,0x42424342,0x43424343,0x43424443,0x44434544,0x44434644,0x45444745,0x47464a47,0x48474c48,0x4a484e4a,0x4c4a514c,0x4e4b544e,0x514e5751,0x544f5b54,0x56525e56,0x59546259,0x5b56655b,
+	0x5b56655b,0x59546259,0x56525e56,0x53505b53,0x514e5751,0x4f4c544f,0x4d4b514d,0x4a494e4a,0x48474c48,0x47454947,0x45444745,0x44434544,0x43424443,0x42424342,0x42414242,0x42414242,0x42414242,0x42414342,0x42424342,0x43424443,0x44434544,0x45444745,0x46454946,0x48464b48,0x4a474d4a,0x4c49504c,0x4e4b534e,0x504d5650,0x534f5a53,0x56515d56,0x59546159,0x5b55645b,
+	0x5b56645b,0x59546159,0x56515d56,0x534f5a53,0x504e5650,0x4f4c544f,0x4d4a504d,0x4a484e4a,0x48474b48,0x46454846,0x45444745,0x44434544,0x43424443,0x42414342,0x41414241,0x41414241,0x41414241,0x42414242,0x42414342,0x43424343,0x43434543,0x45434645,0x46454846,0x48464a48,0x4a474d4a,0x4b49504b,0x4e4b524e,0x504d5650,0x534f5a53,0x56515d56,0x58536158,0x5b55645b,
+	0x5a55645a,0x58536158,0x55515d55,0x534f5953,0x504d5650,0x4e4b534e,0x4c4a504c,0x4a484d4a,0x48464a48,0x46454846,0x44434644,0x43424443,0x42424342,0x42414242,0x41414241,0x41414141,0x41414141,0x41414241,0x41414241,0x42424342,0x43424443,0x44434644,0x45444845,0x47464a47,0x49474c49,0x4b494f4b,0x4d4b524d,0x504c5550,0x524e5952,0x55515d55,0x58536058,0x5a55635a,
+	0x5a55645a,0x58536158,0x55515c55,0x534f5853,0x504d5650,0x4e4b524e,0x4b4a4f4b,0x49474d49,0x47464a47,0x46454746,0x44434544,0x43424443,0x42424342,0x41414241,0x41404141,0x41414141,0x41404141,0x41414141,0x41414241,0x42424342,0x43424443,0x44434644,0x45444745,0x47454a47,0x48474c48,0x4a484e4a,0x4d4a524d,0x504c5550,0x524e5952,0x55505c55,0x58536158,0x5a55635a,
+	0x5a55635a,0x58536058,0x55515c55,0x524f5852,0x504d5550,0x4d4b524d,0x4b494f4b,0x49474c49,0x47464947,0x46444746,0x44434544,0x43424343,0x42414242,0x41414141,0x41404141,0x40404140,0x41404141,0x41414141,0x41414241,0x42414242,0x43424343,0x44434544,0x45444745,0x47454947,0x48464c48,0x4a484f4a,0x4d4a514d,0x4f4c554f,0x524e5852,0x55505c55,0x58536058,0x5a54635a,
+	0x5a55635a,0x58536058,0x55515c55,0x524f5852,0x4f4d554f,0x4d4b514d,0x4b494f4b,0x49484c49,0x47464947,0x45444745,0x44434544,0x43424343,0x42414242,0x41414141,0x41404141,0x41404141,0x40404040,0x41404141,0x41414141,0x42414242,0x42424342,0x44424544,0x45444745,0x47454947,0x48464b48,0x4a484e4a,0x4c4a524c,0x4f4c554f,0x524e5852,0x55505c55,0x57526057,0x5a54625a,
+	0x5a55635a,0x58536058,0x55515c55,0x524f5852,0x4f4c554f,0x4d4b514d,0x4b494f4b,0x49474c49,0x47464947,0x45444745,0x44434544,0x42424342,0x41414241,0x41414141,0x40404040,0x40404040,0x40404040,0x41414141,0x41414141,0x41414241,0x42424342,0x43434543,0x45444745,0x46454946,0x48464b48,0x4a484e4a,0x4c4a514c,0x4f4c544f,0x524e5852,0x54505c54,0x57526057,0x5a55635a,
+	0x5a55635a,0x58536058,0x55515c55,0x524f5952,0x504c5550,0x4d4b524d,0x4b494f4b,0x49474c49,0x47464947,0x45444745,0x44434544,0x42424342,0x41414241,0x41414141,0x41414141,0x40404040,0x40404040,0x41404141,0x41414241,0x42414242,0x42424342,0x43424543,0x45434745,0x46454946,0x48464b48,0x4a484e4a,0x4c4a514c,0x4f4c554f,0x524e5852,0x54505c54,0x58526058,0x5a54635a,
+	0x5a55635a,0x58536058,0x55515c55,0x524f5852,0x4f4c554f,0x4d4b524d,0x4b494f4b,0x49474c49,0x47464947,0x45444745,0x44434544,0x42424342,0x42414242,0x41414141,0x40404040,0x40404140,0x40404040,0x40404140,0x41414141,0x41414241,0x42424342,0x43424543,0x45434745,0x46454846,0x48464b48,0x4a484e4a,0x4c4a514c,0x4f4c554f,0x524e5852,0x54505c54,0x57526057,0x5a54635a,
+	0x5a55635a,0x58536058,0x55515c55,0x524f5952,0x504d5550,0x4d4b524d,0x4b494f4b,0x49474c49,0x47464a47,0x45444745,0x44434544,0x43424343,0x42414242,0x41414141,0x41404141,0x40404140,0x40404140,0x41414141,0x41414241,0x41414241,0x42424342,0x43434543,0x45434745,0x46454946,0x48464b48,0x4a484e4a,0x4c4a524c,0x4f4c554f,0x524e5852,0x55505c55,0x57526057,0x5a54635a,
+	0x5b55635b,0x58536058,0x55515c55,0x524f5952,0x504d5550,0x4d4b524d,0x4b494f4b,0x49484d49,0x47464a47,0x45454845,0x44434544,0x43424443,0x42424242,0x41414241,0x41414141,0x40404140,0x40414140,0x41414141,0x41414241,0x42424342,0x43424443,0x44434544,0x45444745,0x46454946,0x48474c48,0x4b484e4b,0x4d4a524d,0x4f4c554f,0x524e5952,0x55505d55,0x58536058,0x5a55635a,
+	0x5b56645b,0x59546159,0x55515c55,0x534f5953,0x504d5650,0x4e4b534e,0x4c4a504c,0x4a484d4a,0x48464a48,0x46454846,0x44444644,0x43424443,0x42424342,0x41414241,0x41414141,0x40404140,0x41414141,0x41414141,0x41414241,0x42414342,0x43424443,0x44434544,0x45444745,0x47454947,0x49474c49,0x4b494f4b,0x4d4a524d,0x504c5650,0x524e5952,0x55515d55,0x58536158,0x5a55645a,
+	0x5b56645b,0x59546159,0x55525d55,0x534f5953,0x504d5650,0x4e4b534e,0x4c4a504c,0x4a484d4a,0x48464b48,0x46454846,0x45444645,0x43434543,0x42424342,0x42414242,0x41414241,0x41414141,0x41414241,0x41414241,0x42414242,0x42414342,0x43424543,0x44434644,0x45444845,0x47464b47,0x49474c49,0x4b494f4b,0x4e4b534e,0x504c5650,0x524f5952,0x55515d55,0x58536158,0x5b55645b,
+	0x5b56645b,0x59546259,0x56525e56,0x53505a53,0x514e5751,0x4f4c544f,0x4d4a514d,0x4a484e4a,0x48474b48,0x47464947,0x45444845,0x44434544,0x43424443,0x42424342,0x42414242,0x41414241,0x41414241,0x41414241,0x42414342,0x42424442,0x43424543,0x44434644,0x46454846,0x48464a48,0x4a474e4a,0x4c49504c,0x4e4b534e,0x504d5650,0x534f5a53,0x56515d56,0x58536158,0x5b55645b,
+	0x5c57655c,0x59556359,0x57525e57,0x54505b54,0x514e5751,0x4f4c544f,0x4d4a524d,0x4b494f4b,0x49474c49,0x47464a47,0x46454846,0x44444644,0x43434543,0x43424443,0x42424342,0x42414342,0x42414342,0x42424342,0x43424443,0x43424543,0x44434644,0x45444745,0x47454947,0x48464b48,0x4a484e4a,0x4c49514c,0x4e4b544e,0x514d5751,0x534f5b53,0x56515e56,0x59546259,0x5b56655b,
+	0x5d57675d,0x5a55635a,0x57535f57,0x54515b54,0x524e5852,0x504d5550,0x4d4b524d,0x4b494f4b,0x49484d49,0x48464b48,0x47454947,0x45444745,0x44434644,0x43434443,0x43424443,0x42424342,0x42424442,0x43424443,0x43424443,0x44434544,0x45434645,0x46444846,0x47464a47,0x49474c49,0x4b484f4b,0x4d4a524d,0x4f4c554f,0x514d5851,0x54505c54,0x57525f57,0x59546359,0x5c56665c,
+	0x5d58675d,0x5a56645a,0x58536058,0x55515c55,0x524f5952,0x504d5650,0x4e4b534e,0x4c4a504c,0x4a484e4a,0x48474c48,0x47464947,0x45454845,0x44444644,0x44434544,0x43434543,0x43434443,0x43424443,0x43424543,0x44434544,0x44434644,0x45444745,0x46454946,0x48464b48,0x49484d49,0x4b49504b,0x4d4a534d,0x4f4c564f,0x524e5952,0x54505c54,0x57526057,0x5a55645a,0x5c56665c,
+	0x5e58675e,0x5b56655b,0x58546158,0x56525d56,0x53505a53,0x514e5751,0x4e4c544e,0x4d4a514d,0x4b494f4b,0x49474d49,0x48464b48,0x46454946,0x45444845,0x45444745,0x44434644,0x44434544,0x44434544,0x44434644,0x44434644,0x45444745,0x46454846,0x47464a47,0x49474c49,0x4a484e4a,0x4c49514c,0x4e4b544e,0x504d5750,0x534e5a53,0x55515d55,0x58536158,0x5b55645b,0x5d57675d,
+	0x5f59685f,0x5c57665c,0x59546259,0x56525e56,0x54505b54,0x514e5851,0x4f4d554f,0x4d4b524d,0x4b49504b,0x4a484d4a,0x48474c48,0x47464a47,0x46454946,0x45444845,0x44444744,0x44444644,0x44444644,0x45444745,0x45444745,0x46454846,0x47464a47,0x48464b48,0x49474d49,0x4b484f4b,0x4d4a514d,0x4f4c544f,0x514d5751,0x534f5b53,0x55515e55,0x58536158,0x5b56655b,0x5d57685d,
+	0x5f5a695f,0x5d57675d,0x5a55625a,0x57535f57,0x55515c55,0x524f5952,0x504d5650,0x4e4c534e,0x4c4a514c,0x4b494f4b,0x49484d49,0x48474b48,0x47464a47,0x46454946,0x45454845,0x45444845,0x45454845,0x45454845,0x46454846,0x47464947,0x48464b48,0x49474c49,0x4a484f4a,0x4c49514c,0x4e4b534e,0x504c5650,0x524e5952,0x54505c54,0x56525f56,0x59546259,0x5c56665c,0x5f58695f,
+	0x605a6b60,0x5e58685e,0x5a56645a,0x58536058,0x55515d55,0x53505a53,0x514e5751,0x4f4c544f,0x4d4b524d,0x4b4a504b,0x4a494e4a,0x49474c49,0x48464b48,0x47464a47,0x47464947,0x46454946,0x46454946,0x47454947,0x47464a47,0x48464b48,0x49474c49,0x4a484e4a,0x4b49504b,0x4d4a524d,0x4e4c544e,0x514d5751,0x534f5a53,0x55515d55,0x57526057,0x5a54635a,0x5d57675d,0x5f596a5f,
+	0x615b6c61,0x5e59685e,0x5b56645b,0x59546159,0x56525e56,0x54505b54,0x524f5952,0x504d5650,0x4e4c534e,0x4c4a514c,0x4b494f4b,0x4a484d4a,0x49474c49,0x48474b48,0x47464b47,0x47464b47,0x47464a47,0x47464a47,0x48464b48,0x48474c48,0x4a484d4a,0x4b484f4b,0x4c49514c,0x4e4b534e,0x4f4c554f,0x514e5751,0x534f5a53,0x55515d55,0x58536058,0x5a55645a,0x5d57685d,0x60596b60
+};
+
+static int isp_param_lns_lut_5m[1024] = {
+	0x8d809d8d,0x867c9786,0x81769081,0x7b728a7b,0x776d8577,0x72698072,0x6e657b6e,0x6a62776a,0x675f7467,0x645c7064,0x625a6d62,0x60586a60,0x5e57695e,0x5d56675d,0x5d56665d,0x5c55665c,0x5c55665c,0x5c55665c,0x5d56675d,0x5e57685e,0x5f586a5f,0x615a6c61,0x635b6f63,0x665e7366,0x69617669,0x6d647a6d,0x70687f70,0x756c8475,0x79708979,0x7f758e7f,0x857a9685,0x8a7e9c8a,
+	0x897e9989,0x857a9385,0x7f758d7f,0x7a70877a,0x746b8274,0x70677c70,0x6b63786b,0x68607468,0x655e7065,0x625b6d62,0x60596a60,0x5e57685e,0x5c56655c,0x5b55645b,0x5a54635a,0x5a54625a,0x5a54635a,0x5a54635a,0x5b55645b,0x5c56655c,0x5d57675d,0x5f58695f,0x615a6b61,0x635c6f63,0x675f7267,0x6a62776a,0x6e667c6e,0x736a8173,0x786e8678,0x7d738b7d,0x82789282,0x887d9888,
+	0x867b9586,0x81789081,0x7c73897c,0x766d8376,0x72687e72,0x6c64796c,0x68607468,0x655e6f65,0x625b6c62,0x5f59685f,0x5d57665d,0x5b55635b,0x5a54625a,0x58536058,0x57525f57,0x57525e57,0x57525f57,0x57525f57,0x58536058,0x59536159,0x5a54635a,0x5c56655c,0x5e57685e,0x615a6b61,0x635c6f63,0x675f7367,0x6b63776b,0x70677d70,0x756c8275,0x79708879,0x7f758e7f,0x83799483,
+	0x83799283,0x7e758c7e,0x79708679,0x736b8073,0x6e667b6e,0x69617569,0x655e7065,0x625b6c62,0x5f59685f,0x5c56655c,0x5a55625a,0x58536058,0x57525e57,0x56515c56,0x55505b55,0x54505b54,0x54505b54,0x55505b55,0x55505c55,0x56515d56,0x57536057,0x59546259,0x5b55645b,0x5e57685e,0x615a6b61,0x645d6f64,0x68607468,0x6d64796d,0x72697f72,0x776e8577,0x7c738b7c,0x81779081,
+	0x80768e80,0x7c728a7c,0x766d8376,0x70677d70,0x6b63776b,0x665f7266,0x625b6c62,0x5f59685f,0x5c56655c,0x5a54625a,0x58535f58,0x56515c56,0x54505a54,0x534f5953,0x524e5752,0x514e5751,0x514e5751,0x524e5752,0x524e5852,0x534f5a53,0x55515c55,0x57525e57,0x59536159,0x5b55645b,0x5e58685e,0x615a6c61,0x665e7166,0x6a62766a,0x6f667b6f,0x746b8174,0x7a70887a,0x7d748c7d,
+	0x7d748c7d,0x79708779,0x736b8073,0x6e657a6e,0x68607468,0x645c6e64,0x60596960,0x5d57655d,0x5a55625a,0x57535f57,0x55515c55,0x534f5953,0x514e5751,0x504d5550,0x4f4c544f,0x4f4b544f,0x4f4b534f,0x4f4c544f,0x504c5550,0x514d5751,0x534e5953,0x54505b54,0x56515e56,0x59546159,0x5c56655c,0x5f58695f,0x635c6e63,0x67607367,0x6d64796d,0x72697e72,0x776e8577,0x7b728a7b,
+	0x7b718a7b,0x766e8476,0x71687e71,0x6b63776b,0x665e7166,0x615b6c61,0x5e57675e,0x5a55635a,0x58535f58,0x55515c55,0x534f5953,0x514d5651,0x4f4c544f,0x4e4b524e,0x4d4a514d,0x4c49504c,0x4c49504c,0x4c4a504c,0x4d4a524d,0x4e4b534e,0x504d5550,0x524e5852,0x54505b54,0x57525e57,0x5a54625a,0x5d57665d,0x605a6b60,0x655e7065,0x6a62766a,0x6f667c6f,0x756b8275,0x796f8779,
+	0x796f8779,0x746c8274,0x6e667b6e,0x68617468,0x645d6e64,0x60596960,0x5b56645b,0x58536158,0x56525d56,0x534f5953,0x514d5651,0x4e4b534e,0x4d4a514d,0x4c494f4c,0x4a484e4a,0x4a484d4a,0x4a474d4a,0x4a484d4a,0x4b484f4b,0x4c49504c,0x4e4b534e,0x504c5550,0x524e5952,0x55505b55,0x58526058,0x5b55645b,0x5e58695e,0x635c6e63,0x68607368,0x6d65796d,0x736a8073,0x776e8577,
+	0x766e8576,0x736a8073,0x6c65796c,0x675f7267,0x625b6c62,0x5d57675d,0x5a54625a,0x56525e56,0x54505a54,0x514e5751,0x4f4c534f,0x4c4a514c,0x4b484e4b,0x49474c49,0x48464b48,0x47464a47,0x47464a47,0x48464b48,0x49474c49,0x4a484e4a,0x4c49504c,0x4e4b534e,0x504d5650,0x534f5953,0x56515e56,0x59546259,0x5d57665d,0x615a6c61,0x665f7166,0x6b63776b,0x71687e71,0x756c8275,
+	0x756c8375,0x71687d71,0x6b63766b,0x655e7065,0x605a6a60,0x5c56655c,0x58536058,0x55515c55,0x524f5852,0x504c5550,0x4d4a514d,0x4b484e4b,0x49474c49,0x47464947,0x46454846,0x46444746,0x46444746,0x46444846,0x47454947,0x48464b48,0x4a484d4a,0x4c49504c,0x4f4b544f,0x514d5751,0x54505b54,0x58526058,0x5b56645b,0x5f59695f,0x645d6f64,0x69627569,0x6f677c6f,0x746a8174,
+	0x736b8273,0x6f677c6f,0x69617469,0x635d6e63,0x5f59695f,0x5a55635a,0x57525e57,0x53505a53,0x514e5651,0x4e4b534e,0x4b494f4b,0x49474c49,0x47454947,0x46444746,0x45434645,0x44434544,0x44434544,0x44434644,0x45444745,0x46454946,0x48464b48,0x4a484e4a,0x4d4a514d,0x504c5550,0x534f5953,0x56525e56,0x5a55635a,0x5e58685e,0x635c6d63,0x68607368,0x6e657a6e,0x72698072,
+	0x726a8072,0x6e667a6e,0x68607368,0x625c6d62,0x5e58675e,0x59546259,0x56515d56,0x524f5852,0x504c5550,0x4d4a514d,0x4a484d4a,0x47464a47,0x46444746,0x44434644,0x43424443,0x43424443,0x43424443,0x43424543,0x44434644,0x45444745,0x47454a47,0x49474c49,0x4b49504b,0x4e4b534e,0x524e5852,0x55505c55,0x59546159,0x5d57675d,0x625b6c62,0x675f7267,0x6c64796c,0x71687f71,
+	0x71697f71,0x6d65796d,0x675f7267,0x615b6c61,0x5c57665c,0x58536158,0x55505b55,0x514e5751,0x4e4c534e,0x4c4a4f4c,0x49474b49,0x46454846,0x45444645,0x43424443,0x42424342,0x42414242,0x42414242,0x42424342,0x43424443,0x44434644,0x46454846,0x48464b48,0x4a484e4a,0x4d4a524d,0x514d5651,0x54505b54,0x58536058,0x5c56655c,0x615a6b61,0x665e7166,0x6b63786b,0x70677d70,
+	0x70687e70,0x6b64796b,0x665f7166,0x615a6b61,0x5c56655c,0x58535f58,0x54505b54,0x504d5650,0x4d4b524d,0x4a494e4a,0x48464a48,0x45444745,0x44434544,0x42424342,0x41414241,0x41414141,0x41414141,0x42414242,0x42424342,0x43434543,0x45444745,0x47454a47,0x49484d49,0x4c4a514c,0x504d5550,0x534f5a53,0x57525f57,0x5b55655b,0x60596a60,0x655d7065,0x6b62776b,0x6f667c6f,
+	0x6f677e6f,0x6b64786b,0x655e7165,0x605a6a60,0x5b56645b,0x57525f57,0x534f5a53,0x504c5550,0x4d4a514d,0x4a484d4a,0x47464947,0x45444645,0x43424443,0x42414242,0x41414141,0x40404140,0x41414141,0x41414141,0x42414242,0x43424443,0x45444645,0x46454946,0x49474c49,0x4c49504c,0x4f4c554f,0x534f5953,0x56525f56,0x5b55645b,0x5f59695f,0x645d7064,0x6a61766a,0x6e657c6e,
+	0x6f677d6f,0x6b63776b,0x655e7165,0x60596a60,0x5b55645b,0x57525e57,0x534f5953,0x504c5450,0x4c4a504c,0x4a484d4a,0x47454947,0x45444645,0x43424343,0x41414241,0x41404141,0x40404040,0x40404040,0x41414141,0x41414241,0x42424342,0x44434644,0x46454846,0x48464c48,0x4b49504b,0x4f4b544f,0x534e5953,0x56515e56,0x5b55635b,0x5f59695f,0x645d6f64,0x69617669,0x6e657c6e,
+	0x6f667e6f,0x6b63776b,0x655e7065,0x60596a60,0x5b55645b,0x56525e56,0x534f5953,0x4f4c544f,0x4c4a504c,0x49484c49,0x46454946,0x44444644,0x43424343,0x41414241,0x40404040,0x40404040,0x40404040,0x40404140,0x41414241,0x42424342,0x44434544,0x46444846,0x48464b48,0x4b494f4b,0x4f4b544f,0x524e5952,0x56515e56,0x5a55635a,0x5f58695f,0x645c6f64,0x69617669,0x6d657b6d,
+	0x6f677d6f,0x6b63776b,0x655e7065,0x60596a60,0x5b55645b,0x57525e57,0x534f5953,0x4f4c554f,0x4c4a504c,0x49484d49,0x46454946,0x44444644,0x43424343,0x41414241,0x40414140,0x40404040,0x40404040,0x41414141,0x41414241,0x42424342,0x44434644,0x46454846,0x48464c48,0x4b49504b,0x4f4c544f,0x524e5952,0x56515e56,0x5a54645a,0x5f58695f,0x645d6f64,0x69617669,0x6e657b6e,
+	0x70677d70,0x6b64786b,0x655e7165,0x605a6a60,0x5b56645b,0x57525f57,0x534f5953,0x504d5550,0x4c4a514c,0x4a484d4a,0x47464947,0x45444645,0x43434443,0x42414242,0x41414141,0x40404040,0x40404140,0x41414141,0x41414241,0x43424443,0x44434644,0x46454846,0x49474c49,0x4c49504c,0x4f4c554f,0x534f5a53,0x56525f56,0x5b55645b,0x5f596a5f,0x645d6f64,0x6a62766a,0x6d657c6d,
+	0x70687e70,0x6c64796c,0x665f7266,0x605a6b60,0x5c56655c,0x57536057,0x54505a54,0x504d5650,0x4d4a514d,0x4a494e4a,0x47464a47,0x45444745,0x43434543,0x42424342,0x41414241,0x41414141,0x41404141,0x41414241,0x42414342,0x43424543,0x45444745,0x47454a47,0x49474d49,0x4c4a514c,0x504c5650,0x534f5a53,0x57525f57,0x5b56655b,0x60596a60,0x645d7064,0x6a62776a,0x6f667c6f,
+	0x71697f71,0x6d65796d,0x67607267,0x615b6c61,0x5d57665d,0x58536158,0x54505c54,0x514e5751,0x4e4b534e,0x4b494f4b,0x48474b48,0x46454846,0x44444644,0x43424443,0x42424342,0x42414242,0x42414242,0x42414342,0x43424443,0x44434544,0x46444846,0x48464b48,0x4a484e4a,0x4d4a524d,0x514d5651,0x54505b54,0x58526058,0x5c56655c,0x615a6b61,0x655e7165,0x6b63786b,0x6f677e6f,
+	0x736a8073,0x6e667b6e,0x68617368,0x625c6d62,0x5e58675e,0x59546259,0x55515d55,0x524f5852,0x4f4c544f,0x4c4a504c,0x4a484d4a,0x47464a47,0x45444845,0x44434644,0x43434443,0x43424443,0x43424443,0x43424443,0x44434544,0x45444745,0x47454947,0x49474c49,0x4b49504b,0x4e4b544e,0x514e5851,0x55505d55,0x59536259,0x5d57675d,0x615a6c61,0x665f7366,0x6c64796c,0x71687f71,
+	0x746b8274,0x6f677d6f,0x69627569,0x645d6f64,0x5f59695f,0x5a55635a,0x57525e57,0x534f5a53,0x504d5650,0x4d4b524d,0x4b494f4b,0x48474b48,0x46454946,0x45444745,0x44444644,0x44434644,0x44434544,0x44434644,0x45444745,0x46454946,0x48464b48,0x4a484e4a,0x4d4a514d,0x4f4c554f,0x534f5a53,0x56515e56,0x5a54635a,0x5e58685e,0x625b6e62,0x68607468,0x6d657b6d,0x72698072,
+	0x766c8476,0x71697e71,0x6b64776b,0x655e7165,0x605a6a60,0x5c56655c,0x58536058,0x55515c55,0x514e5751,0x4f4c544f,0x4c4a504c,0x4a484e4a,0x48474b48,0x47454a47,0x46454846,0x46444746,0x45444745,0x46444846,0x47454947,0x48464b48,0x4a484d4a,0x4c49504c,0x4e4b534e,0x514d5751,0x54505c54,0x57526057,0x5b55645b,0x5f586a5f,0x645c7064,0x69617569,0x6f667c6f,0x736a8273,
+	0x776e8577,0x736b8073,0x6d65796d,0x67607267,0x625c6c62,0x5d58675d,0x59556259,0x56525e56,0x534f5a53,0x514d5651,0x4e4b534e,0x4c49504c,0x4a484e4a,0x49474c49,0x48464b48,0x47464a47,0x47464a47,0x48464a48,0x49474c49,0x4a484d4a,0x4b49504b,0x4d4b534d,0x504c5650,0x534e5953,0x55515d55,0x59536259,0x5c56665c,0x615a6c61,0x655e7165,0x6b63786b,0x71687e71,0x756c8375,
+	0x79708879,0x756c8375,0x6e677c6e,0x69627569,0x645d6f64,0x5f59695f,0x5b56645b,0x58536058,0x55515c55,0x524f5952,0x504d5650,0x4e4b534e,0x4c4a504c,0x4b494f4b,0x4a484e4a,0x49474d49,0x49484d49,0x4a484d4a,0x4a484f4a,0x4c4a504c,0x4d4b524d,0x504c5550,0x524e5852,0x54505b54,0x57526057,0x5a55645a,0x5e58685e,0x635b6e63,0x68607468,0x6d657a6d,0x73698073,0x776d8577,
+	0x7b728a7b,0x776e8577,0x71697e71,0x6b64776b,0x665f7166,0x615b6c61,0x5d58675d,0x5a55635a,0x57525f57,0x54505c54,0x524e5852,0x504d5550,0x4e4b534e,0x4d4a514d,0x4c4a504c,0x4b49504b,0x4b49504b,0x4c4a504c,0x4d4a514d,0x4e4b534e,0x4f4c554f,0x514e5851,0x534f5b53,0x56515e56,0x59546259,0x5c56665c,0x61596b61,0x655d7065,0x6a62766a,0x6f677d6f,0x746c8274,0x786f8778,
+	0x7e748d7e,0x7a71887a,0x746c8174,0x6e667a6e,0x69617469,0x645d6f64,0x605a6a60,0x5c57665c,0x59546259,0x57525e57,0x54505b54,0x524e5852,0x514d5651,0x4f4c554f,0x4e4b544e,0x4e4b534e,0x4e4b534e,0x4e4b534e,0x4f4c544f,0x504d5650,0x524e5852,0x534f5b53,0x56515e56,0x58536158,0x5b55655b,0x5f58695f,0x635b6e63,0x675f7367,0x6c63796c,0x72687f72,0x776d8677,0x7b718a7b,
+	0x80778f80,0x7c748a7c,0x776e8477,0x71697e71,0x6b64786b,0x66607266,0x625c6d62,0x5f59695f,0x5b56655b,0x59546159,0x57525e57,0x55505c55,0x534f5a53,0x524e5852,0x514d5751,0x514d5751,0x504d5750,0x514d5751,0x524e5852,0x534f5953,0x54505c54,0x56515e56,0x58536158,0x5a55645a,0x5e58685e,0x615a6c61,0x655e7165,0x6a62776a,0x6f667c6f,0x746b8274,0x7a70887a,0x7d738c7d,
+	0x837a9383,0x7f768e7f,0x7a71877a,0x746c8174,0x6e667b6e,0x69627669,0x655f7165,0x615b6c61,0x5f58685f,0x5c56655c,0x59546259,0x57525f57,0x56515d56,0x55505c55,0x54505b54,0x534f5a53,0x534f5a53,0x54505b54,0x55505c55,0x55505d55,0x57525f57,0x58536158,0x5a55645a,0x5d57675d,0x615a6b61,0x645d7064,0x68607468,0x6d647a6d,0x72698072,0x776d8577,0x7c728b7c,0x7f758f7f,
+	0x877d9687,0x82799182,0x7d738a7d,0x776e8477,0x716a7f71,0x6c65796c,0x68617468,0x645d7064,0x625b6c62,0x5f58695f,0x5c56655c,0x5a55635a,0x59536159,0x57526057,0x56525f56,0x56515e56,0x56515e56,0x56515f56,0x57526057,0x58536158,0x5a54635a,0x5b56655b,0x5d57685d,0x60596b60,0x635c6f63,0x675f7367,0x6c63796c,0x70677e70,0x756c8375,0x7a70887a,0x7e748d7e,0x81779281,
+	0x89809a89,0x847b9484,0x7e768e7e,0x79718879,0x746c8274,0x6e687d6e,0x6a63786a,0x66607366,0x645d7064,0x605a6c60,0x5e58695e,0x5c56665c,0x5b55645b,0x5a54635a,0x59546259,0x59536159,0x58536158,0x59536259,0x59546259,0x5a54645a,0x5c56665c,0x5e57685e,0x60596b60,0x625b6e62,0x665e7266,0x6a62776a,0x6e657c6e,0x73698073,0x776e8577,0x7c728b7c,0x80768f80,0x82789382
+};
+
 void isp_top_init(xml_top_t *top,unsigned int w,unsigned int h)
 {
 	unsigned short offset[XML_TOP]={
@@ -301,6 +477,67 @@ static void isp_set_lnsd(xml_lut_ls_t *lnsd)
 		}
 	}
 }
+
+static void isp_set_lnsd_test(unsigned int w,unsigned int h)
+{
+	int i;
+	pr_info("%s:w=%d,h=%d\n",__func__,w,h);
+    WRITE_VCBUS_REG(0x2d28, (READ_VCBUS_REG(0x2d28)&0xefffffff)); // disable lens shielding
+    WRITE_VCBUS_REG(0x2daf, 0x0000000c);         // lens shielding lut ram: v-bus write mode
+    if((w==640)&&(h==480))
+    {
+		pr_info("480p\n");
+	    WRITE_VCBUS_REG(0x2d29, 0x018D0212);      // lens shielding xscale & yscale
+	    WRITE_VCBUS_REG(0x2dc6, 0x00000000);         // point to head of ram
+	    for (i = 0; i < 1024; i++)
+	    {
+			WRITE_VCBUS_REG(0x2dc7, isp_param_lns_lut_480p[i]);
+	    }
+    }
+	else if((w==1280)&&(h==720))
+    {
+		pr_info("720p\n");
+	    WRITE_VCBUS_REG(0x2d29, 0x00C60161);      // lens shielding xscale & yscale
+	    WRITE_VCBUS_REG(0x2dc6, 0x00000000);         // point to head of ram
+	    for (i = 0; i < 1024; i++)
+	    {
+			WRITE_VCBUS_REG(0x2dc7, isp_param_lns_lut_720p[i]);
+	    }
+    }
+	else if((w==1280)&&(h==960))
+    {
+		pr_info("960p\n");
+	    WRITE_VCBUS_REG(0x2d29, 0x00C60108);      // lens shielding xscale & yscale
+	    WRITE_VCBUS_REG(0x2dc6, 0x00000000);         // point to head of ram
+	    for (i = 0; i < 1024; i++)
+	    {
+			WRITE_VCBUS_REG(0x2dc7, isp_param_lns_lut_960p[i]);
+	    }
+    }
+	else if((w==1920)&&(h==1080))
+    {
+		pr_info("1080p\n");
+	    WRITE_VCBUS_REG(0x2d29, 0x008400EB);      // lens shielding xscale & yscale
+	    WRITE_VCBUS_REG(0x2dc6, 0x00000000);         // point to head of ram
+	    for (i = 0; i < 1024; i++)
+	    {
+			WRITE_VCBUS_REG(0x2dc7, isp_param_lns_lut_1080p[i]);
+	    }
+    }
+	else if((w==2592)&&(h==1944))
+    {
+		pr_info("5m\n");
+	    WRITE_VCBUS_REG(0x2d29, 0x00620082);      // lens shielding xscale & yscale
+	    WRITE_VCBUS_REG(0x2dc6, 0x00000000);         // point to head of ram
+	    for (i = 0; i < 1024; i++)
+	    {
+			WRITE_VCBUS_REG(0x2dc7, isp_param_lns_lut_5m[i]);
+	    }
+    }
+    WRITE_VCBUS_REG(0x2daf, 0x00000000); // lens shielding lut ram: hardware read mode	
+    WRITE_VCBUS_REG(0x2d28, (READ_VCBUS_REG(0x2d28)|0x10000000));
+}
+
 void isp_set_lnsd_mode(unsigned int mode)
 {
 	WR_BITS(ISP_LNS_CTRL,mode,LNS_MESH_MODE_BIT,LNS_MESH_MODE_WID);
@@ -315,6 +552,20 @@ static void isp_set_gamma_table(struct xml_lut_gc_s *gt)
 		pr_info("%s:null pointer error.\n",__func__);
 	}
 }
+/*
+*disable gamma correction & lnsd
+*/
+void disable_gc_lns(bool flag)
+{
+	if(flag){
+		WR_BITS(ISP_LNS_CTRL,1,LNS_CMOP_ENABLE_BIT,LNS_CMOP_ENABLE_WID);
+		WR_BITS(ISP_GMR0_CTRL,1,GMR_CORRECT_ENABLE_BIT,GMR_CORRECT_ENABLE_WID);
+	}else{
+		WR_BITS(ISP_LNS_CTRL,0,LNS_CMOP_ENABLE_BIT,LNS_CMOP_ENABLE_WID);
+		WR_BITS(ISP_GMR0_CTRL,0,GMR_CORRECT_ENABLE_BIT,GMR_CORRECT_ENABLE_WID);
+	}
+}
+
 /*
 *
 */
@@ -343,12 +594,13 @@ void isp_set_def_config(xml_default_regs_t *regs,tvin_port_t fe_port,unsigned in
 	isp_set_matrix(NULL,h);
 	isp_set_sharpness(&regs->sharp);
 	isp_set_nr(&regs->nr);
-	isp_set_blenr_stat(0,0,w-1,h-1);
+	isp_set_blenr_stat((w>>2),(h>>2),(w-(w>>2)),(h-(h>>2)));
 	isp_set_awb_stat(&regs->awb_reg,w,h);
 	isp_set_ae_stat(&regs->ae_reg,w,h);
 	isp_set_af_stat(&regs->af_reg,w,h);
 	//isp_set_dbg(&regs->dbg);
 	isp_set_lnsd(&regs->lnsd);
+	isp_set_lnsd_test(w,h);
 	isp_set_gamma_table(&regs->lut_gc);
 	pr_info("[%s..]%s: init ok(w:%d,h:%d).\n",DEVICE_NAME,__func__,w,h);
 }
diff --git a/drivers/amlogic/tvin/isp/isp_hw.h b/drivers/amlogic/tvin/isp/isp_hw.h
index b52f3930f095..7f218631fad7 100755
--- a/drivers/amlogic/tvin/isp/isp_hw.h
+++ b/drivers/amlogic/tvin/isp/isp_hw.h
@@ -113,6 +113,7 @@ extern void isp_awb_set_gain(unsigned int r, unsigned int g, unsigned int b);
 extern void isp_awb_get_gain(isp_awb_gain_t *awb_gain);
 extern void set_isp_gamma_table(unsigned short *gamma,unsigned int type);
 extern void get_isp_gamma_table(unsigned short *gamma,unsigned int type);
+extern void disable_gc_lns(bool flag);
 extern void isp_ls_curve(unsigned int psize_v2h, unsigned int hactive, 
         unsigned int vactive, unsigned int ocenter_c2l, 
         unsigned int ocenter_c2t, unsigned int gain_0db, 
diff --git a/drivers/amlogic/tvin/vdin/vdin_ctl.c b/drivers/amlogic/tvin/vdin/vdin_ctl.c
index d1a0b6519854..4d4d30f85b20 100755
--- a/drivers/amlogic/tvin/vdin/vdin_ctl.c
+++ b/drivers/amlogic/tvin/vdin/vdin_ctl.c
@@ -2401,13 +2401,16 @@ static struct vdin_cm2_s vdin_cm2_table[CM2_REG_NUM] = {
 void vdin_set_cm2(unsigned int offset,unsigned int index)
 {
 	unsigned int i=0,cursor=0;
-	pr_info("%s:vdin.%u cm2 use %s configuration.\n",__func__,offset,index?"optimize":"enhancement");
+
+        if(!cm_enable)
+		return;
+	
+        pr_info("%s:vdin.%u cm2 use %s configuration.\n",__func__,offset,index?"optimize":"enhancement");
 	WR_BITS(VDIN_CM_BRI_CON_CTRL,0,CM_TOP_EN_BIT,CM_TOP_EN_WID);
 	for(i=0;i<CM2_REG_NUM;i++){
 		cursor = i+index*CM2_REG_NUM;
 		WR(VDIN_CHROMA_ADDR_PORT,vdin_cm2_table[cursor].addr);
 		WR(VDIN_CHROMA_DATA_PORT,(vdin_cm2_table[cursor].mask & vdin_cm2_table[cursor].value));
 	}
-	if (cm_enable)
-	    WR_BITS(VDIN_CM_BRI_CON_CTRL, 1, CM_TOP_EN_BIT,CM_TOP_EN_WID);
+        WR_BITS(VDIN_CM_BRI_CON_CTRL, 1, CM_TOP_EN_BIT,CM_TOP_EN_WID);
 }
diff --git a/drivers/amlogic/tvin/vdin/vdin_drv.c b/drivers/amlogic/tvin/vdin/vdin_drv.c
index 208600e092a0..259928447eeb 100755
--- a/drivers/amlogic/tvin/vdin/vdin_drv.c
+++ b/drivers/amlogic/tvin/vdin/vdin_drv.c
@@ -123,6 +123,9 @@ static bool invert_top_bot = false;
 module_param(invert_top_bot,bool,0644);
 MODULE_PARM_DESC(invert_top_bot,"invert field type top or bottom");
 
+static unsigned short v_cut_offset = 2;
+module_param(v_cut_offset,ushort,0664);
+MODULE_PARM_DESC(v_cut_offset,"the cut window vertical offset for isp");
 
 /*
 *the check flag in vdin_isr
@@ -527,6 +530,8 @@ static void vdin_start_dec(struct vdin_dev_s *devp)
         if(devp->frontend && devp->frontend->sm_ops){
 	        sm_ops = devp->frontend->sm_ops;
 	        sm_ops->get_sig_propery(devp->frontend, &devp->prop);
+		if(devp->flags & VDIN_FLAG_MANUAL_CONVERTION)
+			devp->prop.dest_cfmt = devp->dest_cfmt;
         }
 	
 	vdin_get_format_convert(devp);
@@ -708,24 +713,20 @@ int start_tvin_service(int no ,vdin_parm_t *para)
 		return -1;
 	}
 	//disable cut window?
-	devp->parm.cutwin.he = 0;
-	devp->parm.cutwin.hs = 0;
 	if(para->port == TVIN_PORT_ISP) {
-		devp->parm.cutwin.ve = 2;
-		devp->parm.cutwin.vs = 2;
-	} else {
-		devp->parm.cutwin.ve = 0;
-		devp->parm.cutwin.vs = 0;
-	}
+		devp->parm.cutwin.ve = v_cut_offset;
+		devp->parm.cutwin.vs = v_cut_offset;
+	} 
         /*add for scaler down*/
-	devp->scaler4w = para->dest_hactive;
-	devp->scaler4h = para->dest_vactive;
-     
+	if(!(devp->flags & VDIN_FLAG_MANUAL_CONVERTION)) {
+		devp->scaler4w = para->dest_hactive;
+		devp->scaler4h = para->dest_vactive;
+	}
         #ifdef CONFIG_ARCH_MESON6
         switch_mod_gate_by_name("vdin", 1);
         #endif
 	vdin_start_dec(devp);
-	devp->flags = VDIN_FLAG_DEC_OPENED;
+	devp->flags |= VDIN_FLAG_DEC_OPENED;
 	devp->flags |= VDIN_FLAG_DEC_STARTED;
 	return 0;
 }
@@ -1958,6 +1959,8 @@ static void vdin_dump_state(vdin_dev_t *devp)
 * 5.enable vdin0-nr path or vdin0-mem
 * echo output2nr >/sys/class/vdin/vdin0/attr
 * echo output2mem >/sys/class/vdin/vdin0/attr
+* 6.modify for vdin fmt & color fmt convertion
+* echo w h cfmt >/sys/class/isp/isp0/attr
 */
 static ssize_t vdin_attr_store(struct device *dev,struct device_attribute *attr,const char *buf, size_t len)
 {
@@ -2117,12 +2120,18 @@ static ssize_t vdin_attr_store(struct device *dev,struct device_attribute *attr,
                         return len;
                 vdin_vf_unfreeze(devp->vfp);
         }
-        else if(!strcmp(parm[0],"hvscaler")){
-                if(parm[1] && parm[2]){
-                        devp->scaler4w = simple_strtoul(parm[1],NULL,10);
-                        devp->scaler4h = simple_strtoul(parm[2],NULL,10);
+        else if(!strcmp(parm[0],"convertion")){
+                if(parm[1] && parm[2] && parm[3]){
+                        devp->scaler4w  = simple_strtoul(parm[1],NULL,10);
+                        devp->scaler4h  = simple_strtoul(parm[2],NULL,10);
+			devp->dest_cfmt = simple_strtoul(parm[3],NULL,10); 
+			devp->flags |= VDIN_FLAG_MANUAL_CONVERTION;
+			pr_info("enable manual convertion w=%u h=%u dest_cfmt=%s.\n",
+				devp->scaler4w,devp->scaler4h,tvin_color_fmt_str(devp->dest_cfmt));
                 } else {
-                        pr_info("%u %u\n",devp->scaler4w,devp->scaler4h);
+                	devp->flags &= (~VDIN_FLAG_MANUAL_CONVERTION);
+                        pr_info("disable manual convertion w=%u h=%u dest_cfmt=%s.\n",
+				devp->scaler4w,devp->scaler4h,tvin_color_fmt_str(devp->dest_cfmt));
                 }
         }
         else if(!strcmp(parm[0],"state")){
@@ -2249,6 +2258,56 @@ static ssize_t vdin_isr_log_store(struct device *dev,
 
 static DEVICE_ATTR(isr_log,  0664, vdin_isr_log_show, vdin_isr_log_store);
 #endif
+static void parse_param(char *buf_orig,char **parm)
+{
+	char *ps, *token;
+	unsigned int n=0;
+	ps = buf_orig;
+        while(1) {
+                token = strsep(&ps, " \n");
+                if (token == NULL)
+                        break;
+                if (*token == '\0')
+                        continue;
+                parm[n++] = token;
+        }
+}
+
+static ssize_t vdin_crop_show(struct device * dev,
+struct device_attribute *attr, char * buf)
+{
+        int len = 0;
+        struct vdin_dev_s *devp = dev_get_drvdata(dev);
+        tvin_cutwin_t *crop = &devp->parm.cutwin;
+
+        len += sprintf(buf+len,"hs_offset %u,he_offset %u,vs_offset %u,ve_offset %u.\n",
+				crop->hs,crop->he,crop->vs,crop->ve);
+	return len;
+}
+
+static ssize_t vdin_crop_store(struct device * dev,
+struct device_attribute *attr, const char * buf, size_t count)
+{
+	char *parm[4]={NULL},*buf_orig;
+	struct vdin_dev_s *devp = dev_get_drvdata(dev);
+	tvin_cutwin_t *crop = &devp->parm.cutwin;
+	if(!buf)
+		return count;
+	buf_orig = kstrdup(buf, GFP_KERNEL);
+	parse_param(buf_orig,parm);
+	
+	crop->hs = simple_strtol(parm[0],NULL,10);
+	crop->he = simple_strtol(parm[1],NULL,10);
+	crop->vs = simple_strtol(parm[2],NULL,10);
+	crop->ve = simple_strtol(parm[3],NULL,10);
+
+	pr_info("hs_offset %u,he_offset %u,vs_offset %u,ve_offset %u.\n",	
+                                crop->hs,crop->he,crop->vs,crop->ve);
+			
+	return count;
+}
+
+static DEVICE_ATTR(crop, 0664, vdin_crop_show, vdin_crop_store);
 
 static int memp = -1;
 
@@ -2620,7 +2679,8 @@ static int vdin_drv_probe(struct platform_device *pdev)
         ret = device_create_file(vdevp->dev,&dev_attr_isr_log);
         #endif
         ret = device_create_file(vdevp->dev,&dev_attr_attr);
-	    ret = device_create_file(vdevp->dev,&dev_attr_cm2);
+        ret = device_create_file(vdevp->dev,&dev_attr_cm2);
+	ret = device_create_file(vdevp->dev,&dev_attr_crop);
 
 	if(ret < 0) {
 		pr_err("%s: fail to create vdin attribute files.\n", __func__);
diff --git a/drivers/amlogic/tvin/vdin/vdin_drv.h b/drivers/amlogic/tvin/vdin/vdin_drv.h
index cf25b023ec5f..ca5cdcd64e88 100755
--- a/drivers/amlogic/tvin/vdin/vdin_drv.h
+++ b/drivers/amlogic/tvin/vdin/vdin_drv.h
@@ -34,7 +34,7 @@
 #include "../tvin_frontend.h"
 #include "vdin_vf.h"
 
-#define VDIN_VER "Ref.2013/11/12a"
+#define VDIN_VER "Ref.2013/11/25b"
 
 /*the counter of vdin*/
 #define VDIN_MAX_DEVS			2
@@ -53,6 +53,8 @@
 #define VDIN_FLAG_OUTPUT_TO_NR		0x00000400
 /*flag for force vdin buffer recycle*/
 #define VDIN_FLAG_FORCE_RECYCLE         0x00000800
+/*flag for vdin scale down,color fmt convertion*/
+#define VDIN_FLAG_MANUAL_CONVERTION     0x00001000
 
 /*values of vdin isr bypass check flag */
 #define VDIN_BYPASS_STOP_CHECK          0x00000001
@@ -181,6 +183,7 @@ typedef struct vdin_dev_s {
         unsigned int                    start_time;//ms vdin start time    
         unsigned short                  scaler4h;//for vscaler
         unsigned short                  scaler4w;//for hscaler
+        unsigned short                  dest_cfmt;//for color fmt convertion
 } vdin_dev_t;
 
 #endif /* __TVIN_VDIN_DRV_H */
-- 
2.19.0

