From 241c8b131b3e71652294417ac4c48e639690fd7b Mon Sep 17 00:00:00 2001
From: timyao <tim.yao@amlogic.com>
Date: Wed, 4 Dec 2013 15:51:42 -0800
Subject: [PATCH 2370/5965] Add clkgate control routines. Use clkgate routines
 to control CLK81/MISC clocks for u_dos/parser_top.

---
 arch/arm/mach-meson8/Makefile               |  2 +-
 arch/arm/mach-meson8/clkgate.c              | 68 +++++++++++++++++++++
 arch/arm/mach-meson8/include/mach/clkgate.h | 37 +++++++++++
 drivers/amlogic/amports/amstream.c          |  8 +++
 drivers/amlogic/amports/encoder.c           |  5 ++
 5 files changed, 119 insertions(+), 1 deletion(-)
 create mode 100644 arch/arm/mach-meson8/clkgate.c
 create mode 100644 arch/arm/mach-meson8/include/mach/clkgate.h

diff --git a/arch/arm/mach-meson8/Makefile b/arch/arm/mach-meson8/Makefile
index dd6c69181148..156012306d44 100755
--- a/arch/arm/mach-meson8/Makefile
+++ b/arch/arm/mach-meson8/Makefile
@@ -5,7 +5,7 @@
 # Common support
 
 
-obj-y := cpu.o clock.o time.o iomapping.o vpu.o
+obj-y := cpu.o clock.o time.o iomapping.o vpu.o clkgate.o
 obj-y += power_gate.o
 obj-m :=
 obj-n :=
diff --git a/arch/arm/mach-meson8/clkgate.c b/arch/arm/mach-meson8/clkgate.c
new file mode 100644
index 000000000000..1643cd260caa
--- /dev/null
+++ b/arch/arm/mach-meson8/clkgate.c
@@ -0,0 +1,68 @@
+/*
+ * arch/arm/mach-meson8/clockgate.c
+ *
+ * Copyright (C) 2013-2014 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+
+/*
+ * The control routines here are for CBUS register 0x1050, 0x1051, 0x1052, 0x1054
+ * for CLK81 and Miscellaneous Clock Gates
+ */
+
+#include <linux/export.h>
+#include <linux/spinlock.h>
+#include <linux/atomic.h>
+
+#include <mach/am_regs.h>
+#include <mach/clkgate.h>
+
+/* we could add lock for each bit but the operation here
+ * is not often so just use a single lock for now.
+ */
+static DEFINE_SPINLOCK(lock);
+
+static unsigned long reg_addr[GCLK_MAX] = {
+    P_HHI_GCLK_MPEG0, P_HHI_GCLK_MPEG1, P_HHI_GCLK_MPEG2, P_HHI_GCLK_OTHER
+};
+
+static atomic_t use_count[GCLK_MAX][32];
+
+void clkgate_get(gate_type_t type, unsigned int bit)
+{
+    if ((type <= GCLK_MAX) && (bit < 32)) {
+        spin_lock(&lock);
+        if (atomic_inc_return(&use_count[type][bit]) == 1) {
+            aml_set_reg32_bits(reg_addr[type], 1, bit, 1);
+        }
+        spin_unlock(&lock);
+    }
+}
+
+void clkgate_put(gate_type_t type, unsigned int bit)
+{
+    if ((type <= GCLK_MAX) && (bit < 32)) {
+        if (atomic_dec_and_lock(&use_count[type][bit], &lock)) {
+            aml_set_reg32_bits(reg_addr[type], 0, bit, 1);
+            spin_unlock(&lock);
+        }
+    }
+}
+
+EXPORT_SYMBOL(clkgate_get);
+EXPORT_SYMBOL(clkgate_put);
+
diff --git a/arch/arm/mach-meson8/include/mach/clkgate.h b/arch/arm/mach-meson8/include/mach/clkgate.h
new file mode 100644
index 000000000000..b0978009c166
--- /dev/null
+++ b/arch/arm/mach-meson8/include/mach/clkgate.h
@@ -0,0 +1,37 @@
+/*
+ * Copyright (C) 2013-2014 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#ifndef CLKGATE_H
+#define CLKGATE_H
+
+typedef enum {
+    GCLK_MPEG0 = 0,
+    GCLK_MPEG1 = 1,
+    GCLK_MPEG2 = 2,
+    GCLK_OTHER = 3,
+    GCLK_MAX   = 4
+} gate_type_t;
+
+#define CLKGATE_BIT_U_DOS_TOP	        1
+#define CLKGATE_BIT_U_PARSER_TOP        25
+
+extern void clkgate_get(gate_type_t type, unsigned int bit);
+extern void clkgate_put(gate_type_t type, unsigned int bit);
+
+#endif /* CLKGATE_H */
+
diff --git a/drivers/amlogic/amports/amstream.c b/drivers/amlogic/amports/amstream.c
index 31eee28b7fba..27b6481eabd5 100755
--- a/drivers/amlogic/amports/amstream.c
+++ b/drivers/amlogic/amports/amstream.c
@@ -52,6 +52,7 @@
 #include <asm/uaccess.h>
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
 #include <mach/mod_gate.h>
+#include <mach/clkgate.h>
 #endif
 #include "streambuf.h"
 #include "streambuf_reg.h"
@@ -1044,7 +1045,10 @@ static int amstream_open(struct inode *inode, struct file *file)
     }
 
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+    clkgate_get(GCLK_MPEG1, CLKGATE_BIT_U_PARSER_TOP);
+
     if (this->type & PORT_TYPE_VIDEO) {
+        clkgate_get(GCLK_MPEG0, CLKGATE_BIT_U_DOS_TOP);
         vdec_poweron(VDEC_1);
         memset(&amstream_dec_info, 0, sizeof(amstream_dec_info));
     }
@@ -1100,7 +1104,11 @@ static int amstream_release(struct inode *inode, struct file *file)
 
     if (this->type & PORT_TYPE_VIDEO) {
         vdec_poweroff(VDEC_1);
+        clkgate_put(GCLK_MPEG0, CLKGATE_BIT_U_DOS_TOP);
     }
+
+    clkgate_put(GCLK_MPEG1, CLKGATE_BIT_U_PARSER_TOP);
+
 #elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
     switch_mod_gate_by_name("audio", 0);
     switch_mod_gate_by_name("vdec", 0);
diff --git a/drivers/amlogic/amports/encoder.c b/drivers/amlogic/amports/encoder.c
index 69354f77f984..983becd54c4e 100755
--- a/drivers/amlogic/amports/encoder.c
+++ b/drivers/amlogic/amports/encoder.c
@@ -17,6 +17,7 @@
 #include <linux/dma-mapping.h>
 #include <linux/platform_device.h>
 #include <mach/am_regs.h>
+#include <mach/clkgate.h>
 #include <plat/io.h>
 #include <linux/ctype.h>
 #include <linux/amlogic/amports/ptsserv.h>
@@ -1046,6 +1047,8 @@ static s32 avc_poweron(void)
 	data32 = 0;
 	enable_hcoder_ddr_access();
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+	clkgate_get(GCLK_MPEG0, CLKGATE_BIT_U_DOS_TOP);
+
 	data32 = READ_AOREG(AO_RTI_PWR_CNTL_REG0);
 	data32 = data32 & (~(0x18));
 	WRITE_AOREG(AO_RTI_PWR_CNTL_REG0, data32);
@@ -1095,6 +1098,8 @@ static s32 avc_poweroff(void)
 	hvdec_clock_disable();
 	// HCODEC power off
 	WRITE_AOREG(AO_RTI_GEN_PWR_SLEEP0, READ_AOREG(AO_RTI_GEN_PWR_SLEEP0) | 0x3);
+	// put dos top clock
+	clkgate_put(GCLK_MPEG0, CLKGATE_BIT_U_DOS_TOP);
 #else
 	hvdec_clock_disable();
 #endif
-- 
2.19.0

