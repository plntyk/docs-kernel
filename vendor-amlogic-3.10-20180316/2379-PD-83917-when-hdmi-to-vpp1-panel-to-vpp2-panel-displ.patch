From 5b9e10180af2c6061551c3b97a249a9d51aaf281 Mon Sep 17 00:00:00 2001
From: "wei.nie" <wei.nie@amlogic.com>
Date: Thu, 5 Dec 2013 21:19:35 +0800
Subject: [PATCH 2379/5965] PD#:83917:when hdmi to vpp1,panel to vpp2, panel
 display random

---
 arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd |  2 +-
 drivers/amlogic/display/osd/osd_hw.c         | 28 ++++++++++++++------
 drivers/amlogic/display/osd_ext/osd_main.h   | 10 +++----
 3 files changed, 26 insertions(+), 14 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
index ff552fe975f4..1c010be6871f 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
@@ -148,7 +148,7 @@ void root_func(){
 		status = "ok";
 		reg = <0x06200000 0x01000000
 	       	 0x07200000 0x00100000>;
-		display_size_default = <768 1024 768 2048 32>;////1024x768x8=0x600000<0x01000000
+		display_size_default = <768 1024 768 2048 32>;//1024x768x8=0x600000<0x01000000
 	 
 	};
 
diff --git a/drivers/amlogic/display/osd/osd_hw.c b/drivers/amlogic/display/osd/osd_hw.c
index 755012d3e50c..bb22bc9dcafa 100755
--- a/drivers/amlogic/display/osd/osd_hw.c
+++ b/drivers/amlogic/display/osd/osd_hw.c
@@ -1048,16 +1048,16 @@ void osd_get_osd_rotate_angle_hw(u32 index,u32 *angle)
 }
 void osd_set_osd_rotate_on_hw(u32 index, u32 on_off)
 {
-	static dispdata_t save_disp_data={0,0,0,0};
-	static dispdata_t save_disp_data2={0,0,0,0};
+	//static dispdata_t save_disp_data={0,0,0,0};
+	//static dispdata_t save_disp_data2={0,0,0,0};
 	osd_hw.rotate[index].on_off = on_off;
 
 	if(on_off)
 	{
 		if(index == OSD1){
-			memcpy(&save_disp_data,&osd_hw.dispdata[index],sizeof(dispdata_t));
+			//memcpy(&save_disp_data,&osd_hw.dispdata[index],sizeof(dispdata_t));
 		}else if(index == OSD2){
-			memcpy(&save_disp_data2,&osd_hw.dispdata[index],sizeof(dispdata_t));
+			//memcpy(&save_disp_data2,&osd_hw.dispdata[index],sizeof(dispdata_t));
 		}
 		g_rotation_width = osd_hw.rotation_pandata[index].x_end-osd_hw.rotation_pandata[index].x_start;
 		g_rotation_height = osd_hw.rotation_pandata[index].y_end-osd_hw.rotation_pandata[index].y_start;
@@ -1072,12 +1072,12 @@ void osd_set_osd_rotate_on_hw(u32 index, u32 on_off)
 			VSYNCOSD_SET_MPEG_REG_MASK(VIU_SW_RESET, 1<<0);
 			VSYNCOSD_CLR_MPEG_REG_MASK(VIU_SW_RESET, 1<<0);
 			VSYNCOSD_SET_MPEG_REG_MASK(VIU_OSD1_FIFO_CTRL_STAT, 1<<0);
-			memcpy(&osd_hw.dispdata[index],&save_disp_data,sizeof(dispdata_t));
+			//memcpy(&osd_hw.dispdata[index],&save_disp_data,sizeof(dispdata_t));
 		}else{
 			VSYNCOSD_SET_MPEG_REG_MASK(VIU_SW_RESET, 1<<1);
 			VSYNCOSD_CLR_MPEG_REG_MASK(VIU_SW_RESET, 1<<1);
 			VSYNCOSD_SET_MPEG_REG_MASK(VIU_OSD2_FIFO_CTRL_STAT, 1<<0);
-			memcpy(&osd_hw.dispdata[index],&save_disp_data2,sizeof(dispdata_t));
+			//memcpy(&osd_hw.dispdata[index],&save_disp_data2,sizeof(dispdata_t));
 		}
 	}
 	add_to_update_list(index,OSD_COLOR_MODE);
@@ -2020,14 +2020,26 @@ static void osd1_update_disp_geometry(void)
 			}
 		} else if (osd_hw.free_scale_enable[OSD1]
 				&& (osd_hw.free_scale_data[OSD1].x_end > 0)
-				&& (osd_hw.free_scale_data[OSD1].y_end > 0)) {
+				&& (osd_hw.free_scale_data[OSD1].y_end > 0)
+				&& (!osd_hw.rotate[OSD1].on_off)) {
 			/* enable osd free scale */
 			data32 = (osd_hw.free_scale_data[OSD1].x_start & 0x1fff) | (osd_hw.free_scale_data[OSD1].x_end & 0x1fff) << 16;
 			VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK0_CFG_W1,data32);
 			data32 = ((osd_hw.free_scale_data[OSD1].y_start + osd_hw.pandata[OSD1].y_start) & 0x1fff)
 					| ((osd_hw.free_scale_data[OSD1].y_end  + osd_hw.pandata[OSD1].y_start) & 0x1fff) << 16 ;
 			VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK0_CFG_W2, data32);
-		} else if (osd_hw.rotate[OSD1].on_off
+		} else if (osd_hw.free_scale_enable[OSD1]
+				&& (osd_hw.free_scale_data[OSD1].x_end > 0)
+				&& (osd_hw.free_scale_data[OSD1].y_end > 0)
+				&& (osd_hw.rotate[OSD1].on_off
+				&& osd_hw.rotate[OSD1].angle > 0)){
+			data32 = (osd_hw.rotation_pandata[OSD1].x_start & 0x1fff) | (osd_hw.rotation_pandata[OSD1].x_end & 0x1fff) << 16;
+			VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK0_CFG_W1,data32);
+			data32 = ((osd_hw.rotation_pandata[OSD1].y_start + osd_hw.pandata[OSD1].y_start) & 0x1fff)
+					| ((osd_hw.rotation_pandata[OSD1].y_end  + osd_hw.pandata[OSD1].y_start) & 0x1fff) << 16 ;
+			VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK0_CFG_W2,data32);
+			VSYNCOSD_WR_MPEG_REG(VPU_PROT1_Y_START_END,data32);
+		}else if (osd_hw.rotate[OSD1].on_off
 				&& osd_hw.rotate[OSD1].angle > 0){
 			/* enable osd rotation */
 			data32 = (osd_hw.rotation_pandata[OSD1].x_start & 0x1fff) | (osd_hw.rotation_pandata[OSD1].x_end & 0x1fff) << 16;
diff --git a/drivers/amlogic/display/osd_ext/osd_main.h b/drivers/amlogic/display/osd_ext/osd_main.h
index 45d27b192155..6743348c6fa4 100755
--- a/drivers/amlogic/display/osd_ext/osd_main.h
+++ b/drivers/amlogic/display/osd_ext/osd_main.h
@@ -32,13 +32,13 @@ static __u32 var_screeninfo[5];
 
 static struct fb_var_screeninfo mydef_var[] = {
 	{
-		.xres            = 1200,
-		.yres            = 690,
-		.xres_virtual    = 1200,
-		.yres_virtual    = 1380,
+		.xres            = 768,
+		.yres            = 1024,
+		.xres_virtual    = 768,
+		.yres_virtual    = 2048,
 		.xoffset         = 0,
 		.yoffset         = 0,
-		.bits_per_pixel = 16,
+		.bits_per_pixel = 32,
 		.grayscale       = 0,
 		.red             = {0, 0, 0},
 		.green           = {0, 0, 0},
-- 
2.19.0

