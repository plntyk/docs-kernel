From 4f43e266129fec8b920506460c6e1f682155420f Mon Sep 17 00:00:00 2001
From: "chengshun.wang" <chengshun.wang@amlogic.com>
Date: Thu, 26 Dec 2013 19:10:05 +0800
Subject: [PATCH 2665/5965] save power consumption when suspend for audio DAC
 5616 platform

---
 arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd |  4 ++
 sound/soc/aml/aml_m8.h                       |  4 ++
 sound/soc/aml/aml_m8_rt5616.c                | 66 +++++++++++++++++++-
 3 files changed, 72 insertions(+), 2 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
index 90747ed6ac00..36fef1dda904 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
@@ -1339,6 +1339,10 @@ sdio{
             "micbias1","MAIN MIC",
             "IN2P","micbias1";
         mute_gpio = "GPIOY_15";
+        I2S_MCLK = "GPIOAO_8";
+        I2S_SCLK = "GPIOAO_9";
+        I2S_LRCLK = "GPIOAO_10";
+        I2S_ODAT = "GPIOAO_11";
         //mute_inv;
         hp_paraments = <800 300 0 5 1>;
         pinctrl-names = "aml_snd_m8";
diff --git a/sound/soc/aml/aml_m8.h b/sound/soc/aml/aml_m8.h
index 3c8de59673cf..83ff28753d50 100755
--- a/sound/soc/aml/aml_m8.h
+++ b/sound/soc/aml/aml_m8.h
@@ -7,6 +7,10 @@ struct aml_audio_private_data {
 	int gpio_hp_det;
 	bool det_pol_inv;
 	int gpio_mute;
+    int gpio_i2s_m;
+    int gpio_i2s_s;
+    int gpio_i2s_r;
+    int gpio_i2s_o;
 	bool mute_inv;
 	struct pinctrl *pin_ctl;
     int hp_last_state;
diff --git a/sound/soc/aml/aml_m8_rt5616.c b/sound/soc/aml/aml_m8_rt5616.c
index 6d27ebaac782..8be9fcb91a3b 100755
--- a/sound/soc/aml/aml_m8_rt5616.c
+++ b/sound/soc/aml/aml_m8_rt5616.c
@@ -357,15 +357,77 @@ static int aml_suspend_pre(struct snd_soc_card *card)
     return 0;
 }
 
+static int i2s_gpio_set(struct snd_soc_card *card)
+{
+    struct aml_audio_private_data *p_aml_audio;
+    const char *str=NULL;
+    int ret;
+    
+
+    p_aml_audio = snd_soc_card_get_drvdata(card);
+    if(p_aml_audio->pin_ctl)
+        devm_pinctrl_put(p_aml_audio->pin_ctl);
+    ret = of_property_read_string(card->dev->of_node, "I2S_MCLK", &str);
+    if (ret < 0) {
+        printk("I2S_MCLK: faild to get gpio I2S_MCLK!\n");
+    }else{
+        p_aml_audio->gpio_i2s_m = amlogic_gpio_name_map_num(str);
+        amlogic_gpio_request_one(p_aml_audio->gpio_i2s_m,GPIOF_OUT_INIT_LOW,"low_mclk");
+        amlogic_set_value(p_aml_audio->gpio_i2s_m, 0, "low_mclk");
+    }
+
+    ret = of_property_read_string(card->dev->of_node, "I2S_SCLK", &str);
+    if (ret < 0) {
+        printk("I2S_SCLK: faild to get gpio I2S_SCLK!\n");
+    }else{
+        p_aml_audio->gpio_i2s_s = amlogic_gpio_name_map_num(str);
+        amlogic_gpio_request_one(p_aml_audio->gpio_i2s_s,GPIOF_OUT_INIT_LOW,"low_sclk");
+        amlogic_set_value(p_aml_audio->gpio_i2s_s, 0, "low_sclk");
+    }
+
+    ret = of_property_read_string(card->dev->of_node, "I2S_LRCLK", &str);
+    if (ret < 0) {
+        printk("I2S_LRCLK: faild to get gpio I2S_LRCLK!\n");
+    }else{
+        p_aml_audio->gpio_i2s_r = amlogic_gpio_name_map_num(str);
+        amlogic_gpio_request_one(p_aml_audio->gpio_i2s_r,GPIOF_OUT_INIT_LOW,"low_lrclk");
+        amlogic_set_value(p_aml_audio->gpio_i2s_r, 0, "low_lrclk");
+    }
+
+    ret = of_property_read_string(card->dev->of_node, "I2S_ODAT", &str);
+    if (ret < 0) {
+        printk("I2S_ODAT: faild to get gpio I2S_ODAT!\n");
+    }else{
+        p_aml_audio->gpio_i2s_o = amlogic_gpio_name_map_num(str);
+        amlogic_gpio_request_one(p_aml_audio->gpio_i2s_o,GPIOF_OUT_INIT_LOW,"low_odata");
+        amlogic_set_value(p_aml_audio->gpio_i2s_o, 0, "low_odata");
+    }
+    return 0;
+}
 static int aml_suspend_post(struct snd_soc_card *card)
 {
-    printk(KERN_DEBUG "enter %s\n", __func__);
+    printk(KERN_INFO "enter %s\n", __func__);   
+    i2s_gpio_set(card);
     return 0;
 }
 
 static int aml_resume_pre(struct snd_soc_card *card)
 {
-    printk(KERN_DEBUG "enter %s\n", __func__);
+    printk(KERN_INFO "enter %s\n", __func__);
+    struct aml_audio_private_data *p_aml_audio;
+    p_aml_audio = snd_soc_card_get_drvdata(card);  
+
+    if(p_aml_audio->gpio_i2s_m)
+        amlogic_gpio_free(p_aml_audio->gpio_i2s_m,"low_mclk");
+    if(p_aml_audio->gpio_i2s_s)
+        amlogic_gpio_free(p_aml_audio->gpio_i2s_s,"low_sclk");
+    if(p_aml_audio->gpio_i2s_r)
+        amlogic_gpio_free(p_aml_audio->gpio_i2s_r,"low_lrclk");
+    if(p_aml_audio->gpio_i2s_o)
+        amlogic_gpio_free(p_aml_audio->gpio_i2s_o,"low_odata");
+   
+
+    p_aml_audio->pin_ctl = devm_pinctrl_get_select(card->dev, "aml_snd_m8");
     return 0;
 }
 
-- 
2.19.0

