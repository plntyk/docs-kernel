From b38a4a539054a3f0b1fac3ecdbff1bcace26a13c Mon Sep 17 00:00:00 2001
From: "tao.zeng" <tao.zeng@amlogic.com>
Date: Fri, 3 Jan 2014 14:58:51 +0800
Subject: [PATCH 2708/5965] PD #85691: Import feature of reset to system for
 some custormer requirement

---
 arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd |  1 +
 drivers/amlogic/power/ricoh/ricoh_pmu.c      |  5 +++++
 drivers/amlogic/power/ricoh/rn5t618-sply.c   | 17 +++++++++++++++++
 include/linux/amlogic/ricoh_pmu.h            |  1 +
 4 files changed, 24 insertions(+)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
index bfed8a0040a7..335256d453e9 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_v1.dtd
@@ -705,6 +705,7 @@ sdio{
             vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
             board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
             vbus_dcin_short_connect = <0>;
+            reset-to-system;
             status = "okay";                                    /** status of pmu, only one should be OK */
         };
     };
diff --git a/drivers/amlogic/power/ricoh/ricoh_pmu.c b/drivers/amlogic/power/ricoh/ricoh_pmu.c
index 824679830161..4a8fc7b47f44 100755
--- a/drivers/amlogic/power/ricoh/ricoh_pmu.c
+++ b/drivers/amlogic/power/ricoh/ricoh_pmu.c
@@ -86,10 +86,15 @@ static void scan_node_tree(struct device_node *top_node, int off)
 
 static int setup_supply_data(struct device_node *node, struct ricoh_pmu_init_data *s_data)
 {
+    int err;
     struct device_node *b_node;
     struct battery_parameter *battery;
     phandle fhandle;
 
+    err = of_property_read_bool(node, "reset-to-system");
+    if (err) {
+        s_data->reset_to_system = 1;    
+    }
     PARSE_UINT32_PROPERTY(node, "soft_limit_to99", s_data->soft_limit_to99, parse_failed);
     PARSE_UINT32_PROPERTY(node, "board_battery",   fhandle,                 parse_failed);
     PARSE_UINT32_PROPERTY(node, "vbus_dcin_short_connect", s_data->vbus_dcin_short_connect, parse_failed);
diff --git a/drivers/amlogic/power/ricoh/rn5t618-sply.c b/drivers/amlogic/power/ricoh/rn5t618-sply.c
index da2ccdcc9eb5..1dce8ebdec29 100755
--- a/drivers/amlogic/power/ricoh/rn5t618-sply.c
+++ b/drivers/amlogic/power/ricoh/rn5t618-sply.c
@@ -30,6 +30,8 @@
 #include <linux/amlogic/aml_rtc.h>
 #include <linux/amlogic/ricoh_pmu.h>
 #include <mach/usbclock.h>
+#include <linux/reboot.h>
+#include <linux/notifier.h>
 
 #ifdef CONFIG_HAS_EARLYSUSPEND
 #include <linux/earlysuspend.h>
@@ -194,6 +196,9 @@ EXPORT_SYMBOL_GPL(rn5t618_get_gpio);
 
 void rn5t618_power_off()
 {
+    if (g_rn5t618_init->reset_to_system) {
+        rn5t618_set_bits(0x0007, 0x00, 0x01);    
+    }
     rn5t618_set_gpio(0, 1);
     rn5t618_set_gpio(1, 1);
     msleep(100);
@@ -1348,6 +1353,14 @@ static void rn5t618_irq_work_func(struct work_struct *work)
     enable_irq(supply->irq);
 }
 
+static struct notifier_block rn5t618_reboot_nb;
+static int rn5t618_reboot_work(struct notifier_block *nb, unsigned long state, void *cmd)
+{
+    RICOH_DBG("%s, clear flags\n", __func__);
+    rn5t618_set_bits(0x0007, 0x00, 0x01);
+    return NOTIFY_DONE;
+}
+
 struct aml_pmu_driver rn5t618_pmu_driver = {
     .name                           = "rn5t618",
     .pmu_get_coulomb                = rn5t618_get_coulomber, 
@@ -1461,6 +1474,10 @@ static int rn5t618_battery_probe(struct platform_device *pdev)
     dwc_otg_power_register_notifier(&supply->otg_nb);
     dwc_otg_charger_detect_register_notifier(&supply->usb_nb);
 #endif
+    if (g_rn5t618_init->reset_to_system) {
+        rn5t618_reboot_nb.notifier_call = rn5t618_reboot_work;
+        register_reboot_notifier(&rn5t618_reboot_nb);
+    }
     if (supply->irq == RN5T618_IRQ_NUM) {
         INIT_WORK(&supply->irq_work, rn5t618_irq_work_func); 
         ret = request_irq(supply->irq, 
diff --git a/include/linux/amlogic/ricoh_pmu.h b/include/linux/amlogic/ricoh_pmu.h
index 9e78907792b3..ee3af9ae1fe7 100755
--- a/include/linux/amlogic/ricoh_pmu.h
+++ b/include/linux/amlogic/ricoh_pmu.h
@@ -64,6 +64,7 @@ struct ricoh_pmu_init_data {
     int   temp_to_stop_charger;                     // stop charger when temperature is higher than this value
     int   temp_to_power_off;                        // power off system when temperature is higher than this value
     int   vbus_dcin_short_connect;
+    int   reset_to_system;                          // flag to indicate if need reset to system
     struct battery_parameter *board_battery;        // battery parameter
 };
 
-- 
2.19.0

