From 6a305b947d256417c5beed7b4a124a40dd16a6d2 Mon Sep 17 00:00:00 2001
From: "yun.cai" <yun.cai@amlogic.com>
Date: Wed, 4 Dec 2013 09:22:02 +0800
Subject: [PATCH 2857/5965] M6: add rtc support and remove related warning

---
 arch/arm/configs/meson6_defconfig |  2 --
 drivers/amlogic/rtc/aml_rtc.c     | 16 ++++++++--------
 2 files changed, 8 insertions(+), 10 deletions(-)
 mode change 100644 => 100755 arch/arm/configs/meson6_defconfig

diff --git a/arch/arm/configs/meson6_defconfig b/arch/arm/configs/meson6_defconfig
old mode 100644
new mode 100755
index b613a6d54581..f66efc277001
--- a/arch/arm/configs/meson6_defconfig
+++ b/arch/arm/configs/meson6_defconfig
@@ -152,7 +152,6 @@ CONFIG_MAC80211_DEBUG_MENU=y
 CONFIG_RFKILL=y
 CONFIG_RFKILL_INPUT=y
 CONFIG_EARLY_INIT=y
-# CONFIG_AML_RTC is not set
 CONFIG_I2C_AML=y
 # CONFIG_MESON_INPUT_REMOTE is not set
 # CONFIG_MESON_NEW_INPUT_REMOTE is not set
@@ -199,7 +198,6 @@ CONFIG_DEVPTS_MULTIPLE_INSTANCES=y
 # CONFIG_HID_GENERIC is not set
 # CONFIG_USB_SUPPORT is not set
 CONFIG_SWITCH=y
-CONFIG_RTC_CLASS=y
 CONFIG_UIO=y
 CONFIG_UIO_PDRV=y
 CONFIG_UIO_PDRV_GENIRQ=y
diff --git a/drivers/amlogic/rtc/aml_rtc.c b/drivers/amlogic/rtc/aml_rtc.c
index df85c0bcee44..f4cabba80025 100755
--- a/drivers/amlogic/rtc/aml_rtc.c
+++ b/drivers/amlogic/rtc/aml_rtc.c
@@ -308,7 +308,7 @@ static void rtc_set_mode(unsigned mode)
 }
 
 static void static_register_write(unsigned data);
-static int	 _ser_access_write_locked(unsigned long addr, unsigned long data);
+static void	 _ser_access_write_locked(unsigned long addr, unsigned long data);
 static void aml_rtc_reset(void)
 {
     if (get_rtc_status())
@@ -358,7 +358,7 @@ out:
 	return val;
 }
 
-static int _ser_access_write_locked(unsigned long addr, unsigned long data)
+static void _ser_access_write_locked(unsigned long addr, unsigned long data)
 {
 	int s_nrdy_cnt = 0;
 	int rst_times = 0;
@@ -749,27 +749,27 @@ static int get_gpo_flag(void)
 
 unsigned int aml_read_rtc_mem_reg(unsigned char reg_id)
 {
-	if (reg_id > 4)
-		return 0;
 	unsigned char reg_array[] = {
 		RTC_REGMEM_ADDR_0,
 		RTC_REGMEM_ADDR_1,
 		RTC_REGMEM_ADDR_2,
 		RTC_REGMEM_ADDR_3,
 	};
+	if (reg_id > 4)
+		return 0;
 	return  ser_access_read(reg_array[reg_id]);
 }
 
 int aml_write_rtc_mem_reg(unsigned char reg_id, unsigned int data)
 {
-	if (reg_id > 4)
-		return 0;
 	unsigned char reg_array[] = {
 		RTC_REGMEM_ADDR_0,
 		RTC_REGMEM_ADDR_1,
 		RTC_REGMEM_ADDR_2,
 		RTC_REGMEM_ADDR_3,
 	};
+	if (reg_id > 4)
+		return 0;
 	return  ser_access_write(reg_array[reg_id], data);
 }
 
@@ -811,14 +811,14 @@ static int power_down_gpo(unsigned long data)
 	return 0;
 }
 #endif
-static int aml_rtc_shutdown(struct platform_device *pdev)
+static void aml_rtc_shutdown(struct platform_device *pdev)
 {
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6	
 	ser_access_write(RTC_GPO_COUNTER_ADDR,0x500000);
 #else	
 	ser_access_write(RTC_GPO_COUNTER_ADDR,0x100000);
 #endif    
-    return 0;
+//    return 0;
 }
 
 static int aml_rtc_remove(struct platform_device *dev)
-- 
2.19.0

