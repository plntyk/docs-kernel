From 41de12a156cd8078672f64b2dfe523011b70a33d Mon Sep 17 00:00:00 2001
From: Peifu Jiang <peifu.jiang@amlogic.com>
Date: Fri, 6 Dec 2013 18:09:21 +0800
Subject: [PATCH 2863/5965] OSD: fix compiling error.

---
 drivers/amlogic/Kconfig                      |  4 +-
 drivers/amlogic/display/osd/Makefile         |  2 -
 drivers/amlogic/display/osd/osd_hw.c         | 12 +++-
 drivers/amlogic/display/osd/osd_prot_dummy.c | 70 --------------------
 include/linux/amlogic/osd/osd.h              | 10 +--
 5 files changed, 18 insertions(+), 80 deletions(-)
 delete mode 100755 drivers/amlogic/display/osd/osd_prot_dummy.c

diff --git a/drivers/amlogic/Kconfig b/drivers/amlogic/Kconfig
index 91940c00b878..b7043a94e59a 100755
--- a/drivers/amlogic/Kconfig
+++ b/drivers/amlogic/Kconfig
@@ -101,8 +101,8 @@ comment "GPU (ARM Mali)"
 #isource "drivers/amlogic/ump/Kconfig"
 #isource "drivers/amlogic/mali/Kconfig"
 #comment "GPU (ARM Mali (external))"
-source "../hardware/arm/gpu/ump/Kconfig"
-source "../hardware/arm/gpu/mali/Kconfig"
+isource "../hardware/arm/gpu/ump/Kconfig"
+isource "../hardware/arm/gpu/mali/Kconfig"
 source "drivers/amlogic/ion_dev/Kconfig"
 
 #
diff --git a/drivers/amlogic/display/osd/Makefile b/drivers/amlogic/display/osd/Makefile
index 2d150234dc07..138309fff86b 100755
--- a/drivers/amlogic/display/osd/Makefile
+++ b/drivers/amlogic/display/osd/Makefile
@@ -9,8 +9,6 @@ fb-objs =  osd_hw.o osd_main.o osd_dev.o
 
 ifeq ($(CONFIG_ARCH_MESON8),y)
 fb-objs += osd_prot.o
-else
-fb-objs += osd_prot_dummy.o
 endif
 
 obj-$(CONFIG_VSYNC_RDMA) += osd_rdma.o
diff --git a/drivers/amlogic/display/osd/osd_hw.c b/drivers/amlogic/display/osd/osd_hw.c
index 2cb6bac6c609..e41c1b4b10eb 100755
--- a/drivers/amlogic/display/osd/osd_hw.c
+++ b/drivers/amlogic/display/osd/osd_hw.c
@@ -1066,11 +1066,15 @@ void osd_set_osd_rotate_on_hw(u32 index, u32 on_off)
 	}
 	else
 	{
+#ifdef CONFIG_ARCH_MESON8
 		VSYNCOSD_SET_MPEG_REG_MASK(VPU_SW_RESET, 1<<8);
 		VSYNCOSD_CLR_MPEG_REG_MASK(VPU_SW_RESET, 1<<8);
+#endif
 		if(index == OSD1){
+#ifdef CONFIG_ARCH_MESON8
 			VSYNCOSD_SET_MPEG_REG_MASK(VIU_SW_RESET, 1<<0);
 			VSYNCOSD_CLR_MPEG_REG_MASK(VIU_SW_RESET, 1<<0);
+#endif
 			VSYNCOSD_SET_MPEG_REG_MASK(VIU_OSD1_FIFO_CTRL_STAT, 1<<0);
 			//memcpy(&osd_hw.dispdata[index],&save_disp_data,sizeof(dispdata_t));
 		}else{
@@ -1482,7 +1486,7 @@ static   void  osd1_update_color_mode(void)
 
 	if (osd_hw.color_info[OSD1] != NULL) {
 		data32= (osd_hw.scan_mode== SCAN_MODE_INTERLACE) ? 2 : 0;
-		data32 |=VSYNCOSD_RD_MPEG_REG(VIU_OSD1_BLK0_CFG_W0)&0x30007040;
+		data32 |= VSYNCOSD_RD_MPEG_REG(VIU_OSD1_BLK0_CFG_W0)&0x30007040;
 		data32 |= osd_hw.fb_gem[OSD1].canvas_idx << 16 ;
 		if(!osd_hw.rotate[OSD1].on_off)
 		data32 |= OSD_DATA_LITTLE_ENDIAN	 <<15 ;
@@ -1674,6 +1678,7 @@ static void osd1_update_disp_osd_rotate(void)
 	y_end = osd_hw.rotation_pandata[OSD1].y_end;
 	y_len_m1 = y_end-y_start;
 
+#ifdef CONFIG_ARCH_MESON8
 	osd_set_prot(
                 x_rev,
                 y_rev,
@@ -1699,6 +1704,7 @@ static void osd1_update_disp_osd_rotate(void)
                 REQ_OFF_MIN,
                 OSD1,
                 osd_hw.rotate[OSD1].on_off);
+#endif
 	remove_from_update_list(OSD1, DISP_OSD_ROTATE);
 }
 static void osd2_update_disp_osd_rotate(void)
@@ -1744,6 +1750,7 @@ static void osd2_update_disp_osd_rotate(void)
 	y_end = osd_hw.rotation_pandata[OSD2].y_end;
 	y_len_m1 = y_end-y_start;
 
+#ifdef CONFIG_ARCH_MESON8
 	osd_set_prot(
                 x_rev,
                 y_rev,
@@ -1769,6 +1776,7 @@ static void osd2_update_disp_osd_rotate(void)
                 REQ_OFF_MIN,
                 OSD2,
                 osd_hw.rotate[OSD2].on_off);
+#endif
     remove_from_update_list(OSD2, DISP_OSD_ROTATE);
 }
 
@@ -2047,7 +2055,9 @@ static void osd1_update_disp_geometry(void)
 			data32 = ((osd_hw.rotation_pandata[OSD1].y_start + osd_hw.pandata[OSD1].y_start) & 0x1fff)
 					| ((osd_hw.rotation_pandata[OSD1].y_end  + osd_hw.pandata[OSD1].y_start) & 0x1fff) << 16 ;
 			VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK0_CFG_W2,data32);
+#ifdef CONFIG_ARCH_MESON8
 			VSYNCOSD_WR_MPEG_REG(VPU_PROT1_Y_START_END,data32);
+#endif
 		}else {
 			/* norma/l mode */
 			data32 = (osd_hw.pandata[OSD1].x_start & 0x1fff) | (osd_hw.pandata[OSD1].x_end & 0x1fff) << 16;
diff --git a/drivers/amlogic/display/osd/osd_prot_dummy.c b/drivers/amlogic/display/osd/osd_prot_dummy.c
deleted file mode 100755
index 323eecba9232..000000000000
--- a/drivers/amlogic/display/osd/osd_prot_dummy.c
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Amlogic Meson
- * frame buffer driver
- *
- * Copyright (C) 2009 Amlogic, Inc.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the named License,
- * or any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
- *
- * Author:  Amlogic Platform Group
- *
- */
-
-#include <linux/kernel.h>
-#include <linux/spinlock.h>
-#include <plat/regops.h>
-#include <mach/am_regs.h>
-#include <linux/irqreturn.h>
-#include <linux/errno.h>
-#include <linux/irq.h>
-#include <linux/slab.h>
-#include <linux/interrupt.h>
-#include <linux/osd/osd.h>
-#include <linux/vout/vout_notify.h>
-#include <linux/amports/canvas.h>
-#include "osd_log.h"
-#include <linux/amlog.h>
-#include "osd_prot.h"
-
-
-int osd_set_prot(unsigned char   x_rev,
-                unsigned char   y_rev,
-                unsigned char   bytes_per_pixel,
-                unsigned char   conv_422to444,
-                unsigned char   little_endian,
-                unsigned int    hold_lines,
-                unsigned int    x_start,
-                unsigned int    x_end,
-                unsigned int    y_start,
-                unsigned int    y_end,
-                unsigned int    y_len_m1,
-                unsigned char   y_step,
-                unsigned char   pat_start_ptr,
-                unsigned char   pat_end_ptr,
-                unsigned long   pat_val,
-                unsigned int    canv_addr,
-                unsigned int    cid_val,
-                unsigned char   cid_mode,
-                unsigned char   cugt,
-                unsigned char   req_onoff_en,
-                unsigned int    req_on_max,
-                unsigned int    req_off_min,
-                unsigned char   osd_index,
-                unsigned char   on)
-{
-    printk("PROT unsupported for this platform\r\n");
-    return 0;
-}   
-
diff --git a/include/linux/amlogic/osd/osd.h b/include/linux/amlogic/osd/osd.h
index 9186d0b032ea..9832f2c4cfcc 100755
--- a/include/linux/amlogic/osd/osd.h
+++ b/include/linux/amlogic/osd/osd.h
@@ -151,10 +151,10 @@ u32  VSYNCOSD_RD_MPEG_REG(unsigned long addr);
 int VSYNCOSD_SET_MPEG_REG_MASK(unsigned long adr, unsigned long _mask);
 int VSYNCOSD_CLR_MPEG_REG_MASK(unsigned long adr, unsigned long _mask);
 #else
-#define VSYNCOSD_WR_MPEG_REG(adr,val) aml_write_reg32(P_##adr, val);
-#define VSYNCOSD_WR_MPEG_REG_BITS(adr, val, start, len)  aml_set_reg32_bits(P_##adr, val, start, len);
-#define VSYNCOSD_RD_MPEG_REG(adr) aml_read_reg32(P_##adr);
-#define VSYNCOSD_SET_MPEG_REG_MASK(adr, _mask) aml_set_reg32_mask(P_##adr, _mask);
-#define VSYNCOSD_CLR_MPEG_REG_MASK(adr,  _mask) aml_clr_reg32_mask(P_##adr, _mask);
+#define VSYNCOSD_WR_MPEG_REG(adr,val) aml_write_reg32(P_##adr, val)
+#define VSYNCOSD_WR_MPEG_REG_BITS(adr, val, start, len)  aml_set_reg32_bits(P_##adr, val, start, len)
+#define VSYNCOSD_RD_MPEG_REG(adr) aml_read_reg32(P_##adr)
+#define VSYNCOSD_SET_MPEG_REG_MASK(adr, _mask) aml_set_reg32_mask(P_##adr, _mask)
+#define VSYNCOSD_CLR_MPEG_REG_MASK(adr,  _mask) aml_clr_reg32_mask(P_##adr, _mask)
 #endif
 #endif /* OSD1_H */
-- 
2.19.0

