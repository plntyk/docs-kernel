From 8b9b6cf2672cc30c76194d78a17fa0cbd84837a6 Mon Sep 17 00:00:00 2001
From: "chunhai.guo" <chunhai.guo@amlogic.com>
Date: Tue, 10 Dec 2013 20:09:03 +0800
Subject: [PATCH 2870/5965] [mmc] correct dt of m6 projects and some other
 modifications: 1. correct dt configuration of g18/g24/g33/m6skt. 2. add
 miscellaneous modifications on mmc host code.

Conflicts:

	drivers/amlogic/mmc/aml_sdio.c
	drivers/amlogic/mmc/amlsd.h

Conflicts:

	drivers/amlogic/mmc/aml_sdio.c
	drivers/amlogic/mmc/amlsd.h
---
 arch/arm/boot/dts/amlogic/meson6_g18.dtd    |  4 ++
 arch/arm/boot/dts/amlogic/meson6_g24.dtd    | 24 ++++---
 arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd | 25 ++++---
 arch/arm/boot/dts/amlogic/meson6_skt.dtd    |  1 +
 drivers/amlogic/mmc/aml_sdio.c              | 70 +++++++++++--------
 drivers/amlogic/mmc/amlsd.c                 | 74 ++++++++++++++++++++-
 drivers/amlogic/mmc/amlsd.h                 | 10 ++-
 7 files changed, 159 insertions(+), 49 deletions(-)
 mode change 100644 => 100755 arch/arm/boot/dts/amlogic/meson6_g24.dtd

diff --git a/arch/arm/boot/dts/amlogic/meson6_g18.dtd b/arch/arm/boot/dts/amlogic/meson6_g18.dtd
index 5c22e31f24d9..b77b1f497cbe 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g18.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g18.dtd
@@ -357,6 +357,7 @@
             f_max = <50000000>;
             f_max_w = <50000000>;
             max_req_size = <0x20000>;          /*128KB*/
+            gpio_dat3 = "CARD_3";
             gpio_cd = "CARD_6";
             gpio_power = "CARD_8";
             power_level = <0>;
@@ -364,6 +365,7 @@
             #irq_in_edge = "GPIO_IRQ_FALLING";
             irq_out = <6>;
             #irq_out_edge = "GPIO_IRQ_RISING";
+            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
         	
         emmc{
@@ -379,6 +381,7 @@
             #gpio_cd = "CARD_6";
             #gpio_power = "CARD_8";
             #power_level = <0>;
+            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
         
         // sdio{
@@ -390,6 +393,7 @@
             // f_max = <50000000>;
             // f_max_w = <50000000>;
             // max_req_size = <0x20000>;          /*128KB*/
+            // card_type = <3>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         // };
     };
     
diff --git a/arch/arm/boot/dts/amlogic/meson6_g24.dtd b/arch/arm/boot/dts/amlogic/meson6_g24.dtd
old mode 100644
new mode 100755
index 29f6d83aea2d..2f0fbc55f016
--- a/arch/arm/boot/dts/amlogic/meson6_g24.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g24.dtd
@@ -591,6 +591,7 @@
             f_max = <50000000>;
             f_max_w = <50000000>;
             max_req_size = <0x20000>;          /*128KB*/
+            gpio_dat3 = "CARD_3";
             gpio_cd = "CARD_6";
             gpio_power = "CARD_8";
             power_level = <0>;
@@ -598,6 +599,7 @@
             #irq_in_edge = "GPIO_IRQ_FALLING";
             irq_out = <6>;
             #irq_out_edge = "GPIO_IRQ_RISING";
+            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
         	
         emmc{
@@ -613,18 +615,20 @@
             #gpio_cd = "CARD_6";
             #gpio_power = "CARD_8";
             #power_level = <0>;
+            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
         
-        sdio{
-            port = <0>;          /*0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "sdio";
-            ocr_avail = <0x200000>;          /*VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE";
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /*128KB*/
-        };
+        // sdio{
+            // port = <0>;          /*0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+            // pinname = "sdio";
+            // ocr_avail = <0x200000>;          /*VDD voltage 3.3 ~ 3.4 */
+            // caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE";
+            // f_min = <300000>;
+            // f_max = <50000000>;
+            // f_max_w = <50000000>;
+            // max_req_size = <0x20000>;          /*128KB*/
+            // card_type = <3>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
     };
     
     // sdhc{
diff --git a/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd b/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
index 59294f465b7b..2243e6a70d86 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
@@ -619,8 +619,9 @@
             #irq_in_edge = "GPIO_IRQ_FALLING";
             irq_out = <6>;
             #irq_out_edge = "GPIO_IRQ_RISING";
+            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
-            
+        	
         emmc{
             port = <2>;          /*0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
@@ -634,18 +635,20 @@
             #gpio_cd = "CARD_6";
             #gpio_power = "CARD_8";
             #power_level = <0>;
+            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
         
-        sdio{
-            port = <0>;          /*0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "sdio";
-            ocr_avail = <0x200000>;          /*VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE";
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /*128KB*/
-        };
+        // sdio{
+            // port = <0>;          /*0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+            // pinname = "sdio";
+            // ocr_avail = <0x200000>;          /*VDD voltage 3.3 ~ 3.4 */
+            // caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE";
+            // f_min = <300000>;
+            // f_max = <50000000>;
+            // f_max_w = <50000000>;
+            // max_req_size = <0x20000>;          /*128KB*/
+            // card_type = <3>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
     };
     
     // sdhc{
diff --git a/arch/arm/boot/dts/amlogic/meson6_skt.dtd b/arch/arm/boot/dts/amlogic/meson6_skt.dtd
index ab4ca7a01684..811781572fce 100755
--- a/arch/arm/boot/dts/amlogic/meson6_skt.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_skt.dtd
@@ -435,6 +435,7 @@
             f_max = <50000000>;
             f_max_w = <50000000>;
             max_req_size = <0x20000>;          /*128KB*/
+            gpio_dat3 = "CARD_3";
             gpio_cd = "CARD_6";
             gpio_power = "CARD_8";
             power_level = <0>;
diff --git a/drivers/amlogic/mmc/aml_sdio.c b/drivers/amlogic/mmc/aml_sdio.c
index 45f5c47614e2..00aaf203543c 100755
--- a/drivers/amlogic/mmc/aml_sdio.c
+++ b/drivers/amlogic/mmc/aml_sdio.c
@@ -316,18 +316,22 @@ static void aml_sdio_print_err (struct amlsd_host *host, char *msg)
     u32 virqs = readl(host->base + SDIO_IRQS);
     u32 virqc = readl(host->base + SDIO_IRQC);
     u32 vconf = readl(host->base + SDIO_CONF);
+    u32 sdio_send = readl(host->base + SDIO_SEND);
+    u32 sdio_argu = readl(host->base + SDIO_ARGU);
     struct sdio_config* conf = (void*)&vconf;
     struct clk* clk_src = clk_get_sys("clk81", NULL);
     u32 clk_rate = clk_get_rate(clk_src)/2;
 
-    sdio_err("%s: %s, Cmd%d arg %08x Xfer %d Bytes, "
+    sdio_err("%s: %s, Cmd%d sdio_send=%#x, arg %#x, sdio_argu=%#x, Xfer %d Bytes, "
             "host->xfer_step=%d, host->cmd_is_stop=%d, pdata->port=%d, "
             "virqs=%#0x, virqc=%#0x, conf->cmd_clk_divide=%d, pdata->clkc=%d, "
             "conf->bus_width=%d, pdata->width=%d, conf=%#x, clock=%d\n",
             mmc_hostname(host->mmc),
             msg,
             host->mrq->cmd->opcode,
+            sdio_send,
             host->mrq->cmd->arg,
+            sdio_argu,
             host->mrq->data?host->mrq->data->blksz*host->mrq->data->blocks:0,
             host->xfer_step,
             host->cmd_is_stop,
@@ -338,7 +342,7 @@ static void aml_sdio_print_err (struct amlsd_host *host, char *msg)
             conf->bus_width,
             pdata->width,
             vconf,
-            clk_rate / (pdata->clkc + 1));    
+            clk_rate / (conf->cmd_clk_divide + 1));    
 }
 
 /*setup delayed workstruct in aml_sdio_request*/
@@ -542,6 +546,7 @@ void aml_sdio_request(struct mmc_host *mmc, struct mmc_request *mrq)
 	if(mrq->data) {
         /*Copy data to dma buffer for write request*/
 		aml_sdio_prepare_dma(host, mrq);
+        writel(host->bn_dma_buf, host->base + SDIO_ADDR);
 
 		sdio_dbg(AMLSD_DBG_REQ ,"%s: blksz %d blocks %d flags %08x "
 			"tsac %d ms nsac %d\n",
@@ -569,23 +574,24 @@ void aml_sdio_request(struct mmc_host *mmc, struct mmc_request *mrq)
 	schedule_delayed_work(&host->timeout, timeout);
 
     spin_lock_irqsave(&host->mrq_lock, flags);
+    if(host->xfer_step != XFER_FINISHED && host->xfer_step != XFER_INIT)
+        sdio_err("host->xfer_step %d\n", host->xfer_step);
 
     host->mrq = mrq;
 	host->mmc = mmc;
-	host->pdata = pdata;
     host->xfer_step = XFER_START;
     host->opcode = mrq->cmd->opcode;
     host->arg = mrq->cmd->arg;
 
-    if(mrq->data){
-		// sdio_dbg(AMLSD_DBG_REQ ,"%s: blksz %d blocks %d flags %08x "
-			// "tsac %d ms nsac %d\n",
-			// mmc_hostname(mmc), mrq->data->blksz,
-			// mrq->data->blocks, mrq->data->flags,
-			// mrq->data->timeout_ns / 1000000,
-			// mrq->data->timeout_clks);
-	    writel(host->bn_dma_buf, host->base + SDIO_ADDR);
-    }
+    // if(mrq->data){
+        // sdio_dbg(AMLSD_DBG_REQ ,"%s: blksz %d blocks %d flags %08x "
+            // "tsac %d ms nsac %d\n",
+            // mmc_hostname(mmc), mrq->data->blksz,
+            // mrq->data->blocks, mrq->data->flags,
+            // mrq->data->timeout_ns / 1000000,
+            // mrq->data->timeout_clks);
+        // writel(host->bn_dma_buf, host->base + SDIO_ADDR);
+    // }
 
     aml_sdio_start_cmd(mmc, mrq);
     host->xfer_step = XFER_AFTER_START;
@@ -888,6 +894,11 @@ static int aml_sdio_suspend(struct platform_device *pdev, pm_message_t state)
         if (ret)
             break;
 
+        // clear detect information when suspend
+        if (!(pdata->caps & MMC_CAP_NONREMOVABLE)) {
+            aml_sd_uart_detect_clr(pdata);
+        }
+
         i++;
 	}
 
@@ -897,9 +908,12 @@ static int aml_sdio_suspend(struct platform_device *pdev, pm_message_t state)
             if (i < 0) {
                 break;
             }
-            // if(aml_card_type_sdio(pdata)) { // sdio_wifi
-                // wifi_setup_dt();
-            // }
+            if(aml_card_type_sdio(pdata)) { // sdio_wifi
+                wifi_setup_dt();
+            }
+            if (!(pdata->caps & MMC_CAP_NONREMOVABLE)) {
+                aml_sd_uart_detect(pdata);
+            }
             mmc = pdata->mmc;
             mmc_resume_host(mmc);
         }
@@ -998,7 +1012,7 @@ static int aml_sdio_probe(struct platform_device *pdev)
 	struct amlsd_platform* pdata;
 	int ret = 0, i;
 
-    print_tmp("%s() begin!\n", __FUNCTION__);
+    // print_tmp("%s() begin!\n", __FUNCTION__);
 
     aml_mmc_ver_msg_show();
 
@@ -1097,19 +1111,23 @@ static int aml_sdio_probe(struct platform_device *pdev)
 		if(pdata->irq_in && pdata->irq_out){
 			pdata->irq_init(pdata);
 			ret = request_threaded_irq(pdata->irq_in+INT_GPIO_0,
-                    (irq_handler_t)aml_sdio_irq_cd, aml_irq_cd_thread,
+                    (irq_handler_t)aml_sd_irq_cd, aml_irq_cd_thread,
                     IRQF_DISABLED, "mmc_in", (void*)pdata);
+            if (ret) {
+                sdio_err("Failed to request mmc IN detect\n");
+                goto probe_free_host;
+            }
             ret |= request_threaded_irq(pdata->irq_out+INT_GPIO_0,
-                    (irq_handler_t)aml_sdio_irq_cd, aml_irq_cd_thread,
+                    (irq_handler_t)aml_sd_irq_cd, aml_irq_cd_thread,
                     IRQF_DISABLED, "mmc_out", (void*)pdata);
-			//ret = request_irq(pdata->irq_in+INT_GPIO_0, aml_sdio_irq_cd, IRQF_DISABLED, "mmc_in", pdata);
-			//ret |= request_irq(pdata->irq_out+INT_GPIO_0, aml_sdio_irq_cd, IRQF_DISABLED, "mmc_out", pdata);
-			if (ret) {
-				sdio_err("Failed to request mmc detect\n");
-				goto fail_cd_irq_in;
-			}
-		}
-	}
+            //ret = request_irq(pdata->irq_in+INT_GPIO_0, aml_sd_irq_cd, IRQF_DISABLED, "mmc_in", pdata);
+            //ret |= request_irq(pdata->irq_out+INT_GPIO_0, aml_sd_irq_cd, IRQF_DISABLED, "mmc_out", pdata);
+            if (ret) {
+                sdio_err("Failed to request mmc OUT detect\n");
+                goto fail_cd_irq_in;
+            }
+        }
+    }
 
     print_tmp("%s() success!\n", __FUNCTION__);
     platform_set_drvdata(pdev, host);
diff --git a/drivers/amlogic/mmc/amlsd.c b/drivers/amlogic/mmc/amlsd.c
index 51356f62f970..c04b9980e6e5 100755
--- a/drivers/amlogic/mmc/amlsd.c
+++ b/drivers/amlogic/mmc/amlsd.c
@@ -1027,6 +1027,13 @@ static int aml_uart_switch(struct amlsd_platform* pdata, bool on)
 #endif
 }
 
+// clear detect information
+void aml_sd_uart_detect_clr (struct amlsd_platform* pdata)
+{
+    pdata->is_sduart = 0;
+    pdata->is_in = 0;
+}
+
 void aml_sd_uart_detect (struct amlsd_platform* pdata)
 {
     static bool is_jtag = false;
@@ -1096,7 +1103,7 @@ irqreturn_t aml_irq_cd_thread(int irq, void *data)
 	return IRQ_HANDLED;
 }
 
-irqreturn_t aml_sdio_irq_cd(int irq, void *dev_id)
+irqreturn_t aml_sd_irq_cd(int irq, void *dev_id)
 {
     // printk("cd dev_id %x\n", dev_id);
 	return IRQ_WAKE_THREAD;
@@ -1113,6 +1120,71 @@ void aml_sduart_pre (struct amlsd_platform* pdata)
     }
 }
 
+static int aml_cmd_invalid (struct mmc_host* mmc, struct mmc_request* mrq)
+{
+    // struct amlsd_platform * pdata = mmc_priv(mmc);
+
+    // sdio_err("%s: filter cmd%d, card_type=%d\n", mmc_hostname(mmc), mrq->cmd->opcode, pdata->card_type);
+    mrq->cmd->error = -EINVAL;
+    mmc_request_done(mmc, mrq);
+
+    return -EINVAL;
+}
+
+int aml_check_unsupport_cmd(struct mmc_host* mmc, struct mmc_request* mrq)
+{
+    struct amlsd_platform * pdata = mmc_priv(mmc);
+
+    // if ((pdata->port != PORT_SDIO) && (mrq->cmd->opcode == SD_IO_SEND_OP_COND ||
+    // mrq->cmd->opcode == SD_IO_RW_DIRECT ||
+    // mrq->cmd->opcode == SD_IO_RW_EXTENDED)) {
+    // mrq->cmd->error = -EINVAL;
+    // mmc_request_done(mmc, mrq);
+    // return -EINVAL;
+    // } 
+
+    if (mrq->cmd->opcode == 3) { // CMD3 means the first time initialized flow is running
+        pdata->is_fir_init = false;
+    }
+
+    if (mmc->caps & MMC_CAP_NONREMOVABLE) { // nonremovable device
+        if (pdata->is_fir_init) { // init for the first time
+            if (aml_card_type_sdio(pdata)) {
+                if (mrq->cmd->opcode == SD_IO_RW_DIRECT
+                        || mrq->cmd->opcode == SD_IO_RW_EXTENDED
+                        || mrq->cmd->opcode == SD_SEND_IF_COND) { // filter cmd 52/53/8 for a sdio device before init
+                    return aml_cmd_invalid(mmc, mrq);
+                }
+            } else if (aml_card_type_mmc(pdata)) {
+                if (mrq->cmd->opcode == SD_IO_SEND_OP_COND
+                        || mrq->cmd->opcode == SD_IO_RW_DIRECT
+                        || mrq->cmd->opcode == SD_IO_RW_EXTENDED
+                        || mrq->cmd->opcode == SD_SEND_IF_COND
+                        || mrq->cmd->opcode == MMC_APP_CMD) { // filter cmd 5/52/53/8/55 for an mmc device before init
+                    return aml_cmd_invalid(mmc, mrq);
+                }
+            } else if (aml_card_type_sd(pdata) || aml_card_type_non_sdio(pdata)) {
+                if (mrq->cmd->opcode == SD_IO_SEND_OP_COND
+                        || mrq->cmd->opcode == SD_IO_RW_DIRECT
+                        || mrq->cmd->opcode == SD_IO_RW_EXTENDED) { // filter cmd 5/52/53 for a sd card before init
+                    return aml_cmd_invalid(mmc, mrq);
+                }
+            }
+        }
+    } else { // removable device
+        // filter cmd 5/52/53 for a non-sdio device
+        if (!aml_card_type_sdio(pdata) && !aml_card_type_unknown(pdata)) {
+            if (mrq->cmd->opcode == SD_IO_SEND_OP_COND
+                    || mrq->cmd->opcode == SD_IO_RW_DIRECT
+                    || mrq->cmd->opcode == SD_IO_RW_EXTENDED) {
+                return aml_cmd_invalid(mmc, mrq);
+            }
+        }
+    }
+    // sdio_err("%s: cmd%d, card_type=%d\n", mmc_hostname(mmc), mrq->cmd->opcode, pdata->card_type);
+    return 0;
+}
+
 /*-------------------debug---------------------*/
 
 unsigned int sdhc_debug=0x0; // 0xffffffff;
diff --git a/drivers/amlogic/mmc/amlsd.h b/drivers/amlogic/mmc/amlsd.h
index 126b514b3ca9..102cc24f2f51 100755
--- a/drivers/amlogic/mmc/amlsd.h
+++ b/drivers/amlogic/mmc/amlsd.h
@@ -28,6 +28,13 @@ extern unsigned sdio_debug;
 #define AMLSD_DBG_IRQ		(1<<9)
 #define AMLSD_DBG_CLKC		(1<<10)
 
+#define     DETECT_CARD_IN          1
+#define     DETECT_CARD_OUT         2
+#define     DETECT_CARD_JTAG_IN     3
+#define     DETECT_CARD_JTAG_OUT    4
+void aml_sd_uart_detect (struct amlsd_platform* pdata);
+void aml_sd_uart_detect_clr (struct amlsd_platform* pdata);
+
 #define EMMC_DAT3_PINMUX_CLR    0
 #define EMMC_DAT3_PINMUX_SET    1
 
@@ -120,9 +127,10 @@ void of_amlsd_xfer_post(struct amlsd_platform* pdata);
 int of_amlsd_ro (struct amlsd_platform* pdata);
 
 void aml_sd_uart_detect (struct amlsd_platform* pdata);
-irqreturn_t aml_sdio_irq_cd(int irq, void *dev_id);
+irqreturn_t aml_sd_irq_cd(int irq, void *dev_id);
 irqreturn_t aml_irq_cd_thread(int irq, void *data);
 void aml_sduart_pre (struct amlsd_platform* pdata);
+int aml_check_unsupport_cmd(struct mmc_host* mmc, struct mmc_request* mrq);
 
 void aml_cs_high (struct amlsd_platform * pdata); // chip select high
 void aml_cs_dont_care (struct amlsd_platform * pdata); // chip select don't care
-- 
2.19.0

