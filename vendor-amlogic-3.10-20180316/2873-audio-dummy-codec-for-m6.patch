From 905124412846a958a3b6987496aee6e52fb4b11b Mon Sep 17 00:00:00 2001
From: "chengshun.wang" <chengshun.wang@amlogic.com>
Date: Tue, 10 Dec 2013 21:14:17 +0800
Subject: [PATCH 2873/5965] [audio] dummy codec for m6

Conflicts:

	sound/soc/aml/aml_i2s.c
---
 arch/arm/boot/dts/amlogic/meson6_g18.dtd | 116 +++++++++++++++++++++--
 arch/arm/configs/meson6_defconfig        |   5 +
 arch/arm/mach-meson6/include/mach/regs.h |  12 +++
 sound/soc/aml/aml_audio_hw.c             |   6 +-
 sound/soc/aml/aml_i2s.c                  |  19 ++--
 sound/soc/aml/aml_m_dummy.c              |  58 ++++++++----
 sound/soc/aml/aml_pcm_dai.c              |   4 +-
 sound/soc/aml/aml_spdif_dai.c            |  12 ++-
 8 files changed, 189 insertions(+), 43 deletions(-)
 mode change 100644 => 100755 arch/arm/mach-meson6/include/mach/regs.h

diff --git a/arch/arm/boot/dts/amlogic/meson6_g18.dtd b/arch/arm/boot/dts/amlogic/meson6_g18.dtd
index b77b1f497cbe..d11be105a4fb 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g18.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g18.dtd
@@ -437,17 +437,115 @@
 		pinctrl-0=<&remote_pins>;
 	};
 	
-	audio{
-		compatible = "amlogic,aml-audio";
-		dev_name = "aml-audio.0";
-	};
+	/// ***************************************************************************************
+/// -   Audio
+//$$ MODULE="Audio"
+//$$ DEVICE="audio_i2s"
+//$$ L2 PROP_STR = "status"
+    audio_platform{
+        compatible = "amlogic,aml-i2s";
+        dev_name = "aml-i2s.0";
+        status = "okay";
+    };
+
+//$$ DEVICE="audio_i2s_dai"
+//$$ L2 PROP_STR = "status"
+    audio_dai{
+        compatible = "amlogic,aml-i2s-dai";
+        dev_name = "aml-i2s-dai.0";
+        status = "okay";
+    };
+    audio_spdif_dai{
+        compatible = "amlogic,aml-spdif-dai";
+        dev_name = "aml-spdif-dai.0";
+        status = "okay";
+    };
 
-	audio_dai{
-		compatible = "amlogic,aml-dai";
-		dev_name = "aml-dai.0";
-	};
+audio_spdif_codec{
+        compatible = "amlogic,aml-spdif-codec";
+        dev_name = "spdif-dit.0";
+        status = "okay";
+    };
+
+//$$ DEVICE="audio_pcm2BT_codec"
+//$$ L2 PROP_STR = "status"
+    audio_pcm2BT_codec{
+        compatible = "amlogic,pcm2BT-codec";
+        dev_name = "pcm2bt.0";
+        status = "okay";
+    };
+
+//$$ DEVICE="audio_pcm_dai"
+//$$ L2 PROP_STR = "status"
+    audio_pcm_dai{
+        compatible = "amlogic,aml-pcm-dai";
+        dev_name = "aml-pcm-dai.0";
+        status = "okay";
+    };
+
+//$$ DEVICE="audio_pcm"
+//$$ L2 PROP_STR = "status"
+    audio_pcm{
+        compatible = "amlogic,aml-pcm";
+        dev_name = "aml-pcm.0";
+        status = "okay";
+    };
+    
+    wm8960_sound_card{
+        compatible = "sound_card,wm8960";
+        aml,sound_card = "AML-WM8960";
+        //aml,audio-codec = <&wm8960>;
+        aml,codec_dai = "wm8960-hifi";
+        aml,audio-routing =
+            "Ext Spk","SPK_LP",
+            "Ext Spk","SPK_LN",
+            "Ext Spk","SPK_RP",
+            "Ext Spk","SPK_RN",
+            "HP","HP_L",
+            "HP","HP_R",
+            "MICB","Mic",
+            "LINPUT1","MICB",
+            "LINPUT2","MICB",
+            "RINPUT1","MICB",
+            "RINPUT2","MICB";
+            
+        capless = <1>; 
+        dres = <2>; /*WM8960_DRES_600R*/
+        dis_hp_det = <0>;
+        pinctrl-names = "wm8960_audio";
+        pinctrl-0 = <&aml_i2s_pins &config_aml_hp_det_pins>;
+        wm8960_gpio = "GPIOA_19";
+        hp_det_inv;
+        status = "disabled";
+        
+    };
+
+    rt5631_sound_card{
+        compatible = "sound_card,rt5631";
+        aml,sound_card = "AML-RT5631";
+        //aml,audio-codec = <&rt5631>;
+        aml,codec_dai = "rt5631-hifi";
+        aml,audio-routing =
+            "Ext Spk", "SPOL",
+            "Ext Spk","SPOR",
+            "HP","HPOL",
+            "HP","HPOR",
+            "MIC1","MIC Bias1",
+            "MIC Bias1","MAIN MIC";
+        
+        /*dev_name = "aml_sound_card";*/
+        /*reg = <0 0>;*/
+        capless = <0>;
+        spk_watt = <0>;     /*RT5631_SPK_1_0W*/
+        spk_output = <2>;   /*RT5631_SPK_RIGHT*/
+        mic_input = <0>;    /*RT5631_MIC_DIFFERENTIAL*/
+        pinctrl-names = "rt5631_audio";
+        pinctrl-0 = <&aml_i2s_pins &config_aml_hp_det_pins>;
+        rt5631_gpio = "GPIOA_19";
+        hp_det_inv;
+        status = "disabled";
+    };
 
-	
 	dummy_codec_audio{
         status = "okay";
         compatible = "amlogic,aml_dummy_codec_audio";
diff --git a/arch/arm/configs/meson6_defconfig b/arch/arm/configs/meson6_defconfig
index b0caf2c43c7d..79f0b45d9b96 100755
--- a/arch/arm/configs/meson6_defconfig
+++ b/arch/arm/configs/meson6_defconfig
@@ -144,6 +144,11 @@ CONFIG_I2C_AML=y
 # CONFIG_MESON_INPUT_KEYBOARD is not set
 # CONFIG_AMLOGIC_BOARD_HAS_PMU is not set
 CONFIG_AMLOGIC_USB=y
+CONFIG_SOUND=y
+CONFIG_SND=y
+CONFIG_SND_SOC=y
+CONFIG_SND_AML_SOC=y
+CONFIG_SND_AML_M_DUMMY_CODEC=y
 CONFIG_MMC_AML=y
 CONFIG_MMC_DEBUG=y
 # CONFIG_MMC_AML_DEBUG is not set
diff --git a/arch/arm/mach-meson6/include/mach/regs.h b/arch/arm/mach-meson6/include/mach/regs.h
old mode 100644
new mode 100755
index bddc77efe5f7..483abff2f1fd
--- a/arch/arm/mach-meson6/include/mach/regs.h
+++ b/arch/arm/mach-meson6/include/mach/regs.h
@@ -79,6 +79,18 @@
 #define AUDIN_FIFO0_CHAN     11    //14:11   channel number.  in M1 suppose there's only 1 channel and 2 channel.
 #define AUDIN_FIFO0_UG       15    // urgent request enable.
 
+#define AUDIN_FIFO1_EN       0
+#define AUDIN_FIFO1_LOAD     2    //write 1 to load address to AUDIN_FIFO0.
+         
+#define AUDIN_FIFO1_DIN_SEL  3
+            // 0     spdifIN
+            // 1     i2Sin
+            // 2     PCMIN
+            // 3     HDMI in
+            // 4     DEMODULATOR IN
+#define AUDIN_FIFO1_ENDIAN   8    //10:8   data endian control.
+#define AUDIN_FIFO1_CHAN     11    //14:11   channel number.  in M1 suppose there's only 1 channel and 2 channel.
+#define AUDIN_FIFO1_UG       15    // urgent request enable.
 
 /*BT656 MACRO */
 //#define BT_CTRL 0x2240 	///../ucode/register.h
diff --git a/sound/soc/aml/aml_audio_hw.c b/sound/soc/aml/aml_audio_hw.c
index c6d8c5e287de..aa667944d3a2 100755
--- a/sound/soc/aml/aml_audio_hw.c
+++ b/sound/soc/aml/aml_audio_hw.c
@@ -506,7 +506,7 @@ void audio_util_set_dac_958_format(unsigned format)
 	WRITE_MPEG_REG_BITS(AIU_CLK_CTRL,3,4,2);// 958 divisor: 0=no div; 1=div by 2; 2=div by 3; 3=div by 4.
 #else
 	WRITE_MPEG_REG_BITS(AIU_CLK_CTRL,1,4,2);// 958 divisor: 0=no div; 1=div by 2; 2=div by 3; 3=div by 4.
-#endif.
+#endif
 	WRITE_MPEG_REG_BITS(AIU_CLK_CTRL,1,1,1);// enable 958 clock
 }
 
@@ -1229,6 +1229,9 @@ unsigned int audio_hdmi_init_ready()
 {
 	return 	READ_MPEG_REG_BITS(AIU_HDMI_CLK_DATA_CTRL, 0, 2);
 }
+
+#ifdef CONFIG_ARCH_MESON8
+
 /* power gate control for iec958 audio out */
 unsigned audio_spdifout_pg_enable(unsigned char enable)
 {
@@ -1281,3 +1284,4 @@ unsigned audio_aiu_pg_enable(unsigned char enable)
         AUDIO_CLK_GATE_OFF(AIU_TOP_LEVEL);
 	}
 }
+#endif
diff --git a/sound/soc/aml/aml_i2s.c b/sound/soc/aml/aml_i2s.c
index 6004974002aa..feab7d136b70 100755
--- a/sound/soc/aml/aml_i2s.c
+++ b/sound/soc/aml/aml_i2s.c
@@ -496,14 +496,13 @@ static int aml_i2s_open(struct snd_pcm_substream *substream)
 	s= &prtd->s;
 	WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);
 	mutex_lock(&gate_mutex);
-	if(!num_clk_gate){
-        num_clk_gate = 1;
-    	if(audio_gate_status == 0){
-    		audio_aiu_pg_enable(1);
-    		ALSA_DEBUG("aml_pcm_open  device type %x \n", s->device_type);
-    		
-    	}
-    }
+#ifdef CONFIG_ARCH_MESON8
+	if(audio_gate_status == 0){
+		audio_aiu_pg_enable(1);
+		ALSA_DEBUG("aml_pcm_open  device type %x \n", s->device_type);
+		
+	}
+#endif
 	audio_gate_status  |= s->device_type;
 	mutex_unlock(&gate_mutex);		
  out:
@@ -516,11 +515,13 @@ static int aml_i2s_close(struct snd_pcm_substream *substream)
 	audio_stream_t *s = &prtd->s;	
 	ALSA_TRACE();
 	mutex_lock(&gate_mutex);
-	audio_gate_status  &= ~s->device_type;	
+	audio_gate_status  &= ~s->device_type;
+#ifdef CONFIG_ARCH_MESON8
 	if(audio_gate_status == 0){
 		ALSA_DEBUG("aml_pcm_close  device type %x \n", s->device_type);		
 		//audio_aiu_pg_enable(0);
 	}
+#endif
 	mutex_unlock(&gate_mutex);		
 //	if(s->device_type == AML_AUDIO_SPDIFOUT)
 //		WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL8, 0,14, 1);			
diff --git a/sound/soc/aml/aml_m_dummy.c b/sound/soc/aml/aml_m_dummy.c
index 4f0b713da586..6aca7c0ed16b 100755
--- a/sound/soc/aml/aml_m_dummy.c
+++ b/sound/soc/aml/aml_m_dummy.c
@@ -153,24 +153,25 @@ static struct snd_soc_dai_link dummy_codec_dai_link[] = {
     {
         .name = "DUMMY_CODEC",
         .stream_name = "DUMMY_CODEC PCM",
-        .cpu_dai_name = "aml-dai0",
+        .cpu_dai_name = "aml-i2s-dai.0",
         .codec_dai_name = "dummy_codec",
         .init = dummy_codec_codec_init,
-        .platform_name = "aml-audio.0",
+        .platform_name = "aml-i2s.0",
         .codec_name = "dummy_codec.0",
         .ops = &dummy_codec_soc_ops,
     },
-#ifdef CONFIG_SND_SOC_PCM2BT
-    {
-        .name = "BT Voice",
-        .stream_name = "Voice PCM",
-        .cpu_dai_name = "aml-dai1",
-        .codec_dai_name = "pcm2bt-pcm",
-        .platform_name = "aml-audio.0",
-        .codec_name = "pcm2bt.0",
-        //.ops = &voice_soc_ops,
+
+	{
+        .name = "AML-SPDIF",
+        .stream_name = "SPDIF PCM",
+        .cpu_dai_name = "aml-spdif-dai.0",
+        .codec_dai_name = "dit-hifi",
+        .init = NULL,
+        .platform_name = "aml-i2s.0",
+        .codec_name = "spdif-dit.0",
+        .ops = NULL,      
     },
-#endif
+
 };
 
 static struct snd_soc_card snd_soc_dummy_codec = {
@@ -191,13 +192,13 @@ static void dummy_codec_device_init(void)
 
 	if (IS_ERR(p))
 		return p;
-			
+
 	s = pinctrl_lookup_state(p, "dummy_codec_audio");
 	if (IS_ERR(s)) {
 		pinctrl_put(p);
 		return ERR_PTR(PTR_ERR(s));
 	}
-		
+
 	ret = pinctrl_select_state(p, s);
 	if (ret < 0) {
 		pinctrl_put(p);
@@ -227,10 +228,11 @@ static struct platform_device *dummy_codec_snd_device = NULL;
 static int dummy_codec_audio_probe(struct platform_device *pdev)
 {
     int ret = 0;
+		struct snd_soc_card *card = &snd_soc_dummy_codec;
 
     //printk(KERN_DEBUG "enter %s\n", __func__);
     printk("enter %s\n", __func__);
-#ifdef CONFIG_USE_OF		
+#ifdef CONFIG_USE_OF
 		dummy_codec_pdata = kzalloc(sizeof(struct dummy_codec_platform_data), GFP_KERNEL);
 		if(!dummy_codec_pdata){
            // kfree(dummy_codec_pdata);
@@ -245,13 +247,33 @@ static int dummy_codec_audio_probe(struct platform_device *pdev)
 				goto err1;
             }
 		}
-		dummy_codec_dev=&pdev->dev;		
+		dummy_codec_dev=&pdev->dev;
     dummy_codec_pdata->device_init = &dummy_codec_device_init;
     dummy_codec_pdata->device_uninit = &dummy_codec_device_deinit;
-         
+
 		pdev->dev.platform_data = dummy_codec_pdata;
+		dummy_codec_snd_pdata = pdev->dev.platform_data;
 #endif
 
+#if 1
+    card->dev = &pdev->dev;
+		platform_set_drvdata(pdev, card);
+		snd_soc_card_set_drvdata(card, dummy_codec_pdata);
+		if (!(pdev->dev.of_node)) {
+			dev_err(&pdev->dev, "Must be instantiated using device tree\n");
+			ret = -EINVAL;
+			goto err;
+		}
+
+    ret = snd_soc_register_card(card);
+		if (ret) {
+			dev_err(&pdev->dev, "snd_soc_register_card failed (%d)\n",
+			ret);
+		goto err;
+	}
+
+#endif
+#if 0
     dummy_codec_snd_pdata = pdev->dev.platform_data;
     snd_BUG_ON(!dummy_codec_snd_pdata);
     dummy_codec_snd_device = platform_device_alloc("soc-audio", -1);
@@ -268,7 +290,7 @@ static int dummy_codec_audio_probe(struct platform_device *pdev)
         printk(KERN_ERR "ASoC: Platform device allocation failed\n");
         goto err_device_add;
     }
-
+#endif
 
     dummy_codec_dev_init();
 
diff --git a/sound/soc/aml/aml_pcm_dai.c b/sound/soc/aml/aml_pcm_dai.c
index 9248c2bddb0a..875e5609abbc 100755
--- a/sound/soc/aml/aml_pcm_dai.c
+++ b/sound/soc/aml/aml_pcm_dai.c
@@ -62,7 +62,7 @@ static int aml_dai_pcm_prepare(struct snd_pcm_substream *substream,
 #ifdef AML_DAI_DEBUG
 	printk("***Entered %s:%s\n", __FILE__,__func__);
 #endif
-#if 1
+//#if 1
     struct snd_pcm_runtime *runtime = substream->runtime;
 	struct aml_pcm_runtime_data *prtd = runtime->private_data;
 
@@ -78,7 +78,7 @@ static int aml_dai_pcm_prepare(struct snd_pcm_substream *substream,
     prtd->buffer_offset = 0;
     prtd->data_size = 0;
     prtd->peroid_elapsed = 0;
-#endif
+//#endif
 	return 0;
 }
 
diff --git a/sound/soc/aml/aml_spdif_dai.c b/sound/soc/aml/aml_spdif_dai.c
index 9af0705d9227..edba4bdabad3 100755
--- a/sound/soc/aml/aml_spdif_dai.c
+++ b/sound/soc/aml/aml_spdif_dai.c
@@ -275,8 +275,10 @@ static int aml_dai_spdif_startup(struct snd_pcm_substream *substream,
 	}
 	s = &prtd->s; 
 	if(substream->stream == SNDRV_PCM_STREAM_PLAYBACK){
-		s->device_type = AML_AUDIO_SPDIFOUT;
-		audio_spdifout_pg_enable(1);
+		s->device_type = AML_AUDIO_SPDIFOUT;
+#ifdef CONFIG_ARCH_MESON8
+		audio_spdifout_pg_enable(1);
+#endif
 	}	
 	else{
 		s->device_type = AML_AUDIO_SPDIFIN;
@@ -295,8 +297,10 @@ static void aml_dai_spdif_shutdown(struct snd_pcm_substream *substream,
 	struct snd_dma_buffer *buf = &substream->dma_buffer;	
 		
 	if(substream->stream == SNDRV_PCM_STREAM_PLAYBACK){
-		memset((void*)runtime->dma_area,0,snd_pcm_lib_buffer_bytes(substream));
-		audio_spdifout_pg_enable(0);	
+		memset((void*)runtime->dma_area,0,snd_pcm_lib_buffer_bytes(substream));
+#ifdef CONFIG_ARCH_MESON8
+		audio_spdifout_pg_enable(0);	
+#endif
 	}
 	
 }
-- 
2.19.0

