From df7d0d343e0f4b7239ed979a7015296385f614d6 Mon Sep 17 00:00:00 2001
From: "Chris.Sun" <qiuwei.sun@amlogic.com>
Date: Fri, 13 Dec 2013 19:07:06 +0800
Subject: [PATCH 2890/5965] Add MEMSSensor warning-free drivers.

Conflicts:

	arch/arm/configs/meson6_defconfig
---
 arch/arm/configs/meson6_defconfig           | 41 +++++++-------
 drivers/amlogic/input/sensor/cm3232.c       |  3 +-
 drivers/amlogic/input/sensor/common.c       |  1 -
 drivers/amlogic/input/sensor/dmt10.c        |  3 +-
 drivers/amlogic/input/sensor/isl29023.c     |  6 +--
 drivers/amlogic/input/sensor/kionix_accel.c |  9 ++--
 drivers/amlogic/input/sensor/lis3dh_acc.c   |  2 -
 drivers/amlogic/input/sensor/lsm303d.c      |  8 ++-
 drivers/amlogic/input/sensor/ltr501_als.c   |  4 +-
 drivers/amlogic/input/sensor/ltr558_pls.c   | 59 +++++++++------------
 drivers/amlogic/input/sensor/mma7660.c      |  4 +-
 drivers/amlogic/input/sensor/mma8452.c      | 15 +++---
 drivers/amlogic/input/sensor/mma865x.c      |  7 +--
 drivers/amlogic/input/sensor/mxc622x.c      |  3 +-
 drivers/amlogic/input/sensor/stk831x.c      | 10 ++--
 15 files changed, 81 insertions(+), 94 deletions(-)

diff --git a/arch/arm/configs/meson6_defconfig b/arch/arm/configs/meson6_defconfig
index fc333fd253b5..fdc1ed0d0c55 100755
--- a/arch/arm/configs/meson6_defconfig
+++ b/arch/arm/configs/meson6_defconfig
@@ -275,22 +275,25 @@ CONFIG_AML_PMU=y
 CONFIG_AML1212=y
 CONFIG_RICOH_PMU=y
 CONFIG_RN5T618=y
-
-CONFIG_WIRELESS=y
-CONFIG_CFG80211=y
-CONFIG_CFG80211_DEFAULT_PS=y
-CONFIG_MAC80211=y
-CONFIG_MAC80211_HAS_RC=y
-CONFIG_MAC80211_RC_MINSTREL=y
-CONFIG_MAC80211_RC_MINSTREL_HT=y
-CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
-CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
-CONFIG_AM_WIFI=y
-CONFIG_AM_WIFI_SD_MMC=y
-CONFIG_AM_WIFI_USB=y
-#CONFIG_RTL8188EU=m
-#CONFIG_RTL8192CU=m
-
-CONFIG_BCMDHD_POWER_OFF_IN_SUSPEND=y
-CONFIG_SDIO_DHD_CDC_WIFI_40181_MODULE=m
-CONFIG_BCMDHD_OOB=y
+CONFIG_SENSOR_DEVICES=y
+CONFIG_GRAVITY_BMA250=y
+CONFIG_GRAVITY_BMA222=y
+CONFIG_GRAVITY_MMA7660=y
+CONFIG_GRAVITY_LIS3DH=y
+CONFIG_GRAVITY_MMA8452=y
+CONFIG_GRAVITY_MC32X0=y
+CONFIG_GRAVITY_DMARD06=y
+CONFIG_GRAVITY_MMA865X=y
+CONFIG_GRAVITY_STK8312=y
+CONFIG_GRAVITY_LSM303D=y
+CONFIG_GRAVITY_DMARD10=y
+CONFIG_GRAVITY_KXTJ9=y
+CONFIG_GRAVITY_MM3A310=y
+CONFIG_GRAVITY_MXC622X=y
+CONFIG_LIGHT_CM36283=y
+CONFIG_LIGHT_CM3232=y
+CONFIG_LIGHT_LTR501=y
+CONFIG_LIGHT_EPL6814=y
+CONFIG_LIGHT_STK220X=y
+CONFIG_LIGHT_LTR558=y
+CONFIG_LIGHT_ISL29023=y
diff --git a/drivers/amlogic/input/sensor/cm3232.c b/drivers/amlogic/input/sensor/cm3232.c
index bac38faeba82..36c80c97e60b 100644
--- a/drivers/amlogic/input/sensor/cm3232.c
+++ b/drivers/amlogic/input/sensor/cm3232.c
@@ -86,7 +86,6 @@ static int I2C_RxData(uint16_t slaveAddr, uint8_t *rxData, int length)
 	uint8_t loop_i;
   uint8_t subaddr[1];
   
-  subaddr[0] = CM3232_ALS_READ_COMMAND_CODE;
   
 	struct i2c_msg msg[] = {
 		{
@@ -103,6 +102,8 @@ static int I2C_RxData(uint16_t slaveAddr, uint8_t *rxData, int length)
 		 },
 	};
 
+    subaddr[0] = CM3232_ALS_READ_COMMAND_CODE;
+
 	for (loop_i = 0; loop_i < I2C_RETRY_COUNT; loop_i++) {
 
 		if (i2c_transfer(lp_info->i2c_client->adapter, msg, 2) > 0)
diff --git a/drivers/amlogic/input/sensor/common.c b/drivers/amlogic/input/sensor/common.c
index 3e9f5c0834bf..53261b83fbb8 100644
--- a/drivers/amlogic/input/sensor/common.c
+++ b/drivers/amlogic/input/sensor/common.c
@@ -203,7 +203,6 @@ static int aml_sensor_probe(struct platform_device *pdev)
 	struct device_node* child;
 	struct i2c_board_info i2c_info;
 	struct i2c_adapter *adapter;
-	struct i2c_client *client;
     int i2c_bus_nr; 
     int gpio;
 
diff --git a/drivers/amlogic/input/sensor/dmt10.c b/drivers/amlogic/input/sensor/dmt10.c
index 2421fe194ab4..2e657d2fbddb 100644
--- a/drivers/amlogic/input/sensor/dmt10.c
+++ b/drivers/amlogic/input/sensor/dmt10.c
@@ -659,8 +659,7 @@ void device_i2c_merge_register_values(struct i2c_client *client, s16 *val, u8 ms
 void device_i2c_read_xyz(struct i2c_client *client, s16 *xyz_p)
 {	
 	u8 buffer[11];
-	s16 xyzTmp[SENSOR_DATA_SIZE];
-	int i, j;
+	int i;
 	/* get xyz high/low bytes, 0x12 */
 	buffer[0] = REG_STADR;
 	device_i2c_rxdata(client, buffer, 10);
diff --git a/drivers/amlogic/input/sensor/isl29023.c b/drivers/amlogic/input/sensor/isl29023.c
index d27ecd7c3277..e600c7fbb62c 100644
--- a/drivers/amlogic/input/sensor/isl29023.c
+++ b/drivers/amlogic/input/sensor/isl29023.c
@@ -168,7 +168,7 @@ static bool isl29023_read_lux(struct i2c_client *client, int *lux);
 
 static int polling_function(void* arg)
 {
-	uint32_t lux;
+	uint32_t lux = 0;
 	uint32_t delay;
 	init_completion(&thread_completion);
 
@@ -211,13 +211,11 @@ static bool isl29023_write_data(struct i2c_client *client, u8 reg,
 	return true;
 }
 
-static bool isl29023_disable()
+static void isl29023_disable(void)
 {
 	printk("isl29023_disable\n");
 	isl29023_write_data(the_data_isl29023->client, ISL29023_REG_ADD_COMMAND1,
 			0, 0xff, 0);
-
-
 }
 
 static bool isl29023_set_range(struct i2c_client *client, unsigned long range,
diff --git a/drivers/amlogic/input/sensor/kionix_accel.c b/drivers/amlogic/input/sensor/kionix_accel.c
index 056bef840534..9f392b54b779 100644
--- a/drivers/amlogic/input/sensor/kionix_accel.c
+++ b/drivers/amlogic/input/sensor/kionix_accel.c
@@ -365,7 +365,7 @@ static void kionix_accel_grp1_report_accel_data(struct kionix_accel_driver *acce
 	u8 accel_data[3];
 	s16 x, y, z;
 	int err;
-	struct input_dev *input_dev = acceld->input_dev;
+	//struct input_dev *input_dev = acceld->input_dev;
 	int loop = KIONIX_I2C_RETRY_COUNT;
 
 	if(atomic_read(&acceld->accel_enabled) > 0) {
@@ -529,7 +529,7 @@ static void kionix_accel_grp2_report_accel_data(struct kionix_accel_driver *acce
 	}; } accel_data;
 	s16 x, y, z;
 	int err;
-	struct input_dev *input_dev = acceld->input_dev;
+	//struct input_dev *input_dev = acceld->input_dev;
 	int loop;
 
 	/* Only read the output registers if enabled */
@@ -978,6 +978,7 @@ exit:
 	return (err < 0) ? err : count;
 }
 
+#if 0
 /* Returns the direction of device */
 static ssize_t kionix_accel_get_direct(struct device *dev,
 				struct device_attribute *attr, char *buf)
@@ -987,7 +988,6 @@ static ssize_t kionix_accel_get_direct(struct device *dev,
 
 	return sprintf(buf, "%d\n", acceld->accel_pdata.accel_direction);
 }
-
 /* Allow users to change the direction the device */
 static ssize_t kionix_accel_set_direct(struct device *dev, struct device_attribute *attr,
 						const char *buf, size_t count)
@@ -1043,6 +1043,7 @@ exit:
 
 	return (err < 0) ? err : count;
 }
+#endif
 
 /* Returns the data output of device */
 static ssize_t kionix_accel_get_data(struct device *dev,
@@ -1148,7 +1149,7 @@ exit:
 
 static DEVICE_ATTR(enable, S_IRUGO|S_IWUSR|S_IWGRP, kionix_accel_get_enable, kionix_accel_set_enable);
 static DEVICE_ATTR(delay, S_IRUGO|S_IWUSR|S_IWGRP, kionix_accel_get_delay, kionix_accel_set_delay);
-static DEVICE_ATTR(direct, S_IRUGO|S_IWUSR|S_IWGRP, kionix_accel_get_direct, kionix_accel_set_direct);
+//static DEVICE_ATTR(direct, S_IRUGO|S_IWUSR|S_IWGRP, kionix_accel_get_direct, kionix_accel_set_direct);
 static DEVICE_ATTR(data, S_IRUGO, kionix_accel_get_data, NULL);
 static DEVICE_ATTR(cali, S_IRUGO|S_IWUSR|S_IWGRP, kionix_accel_get_cali, kionix_accel_set_cali);
 
diff --git a/drivers/amlogic/input/sensor/lis3dh_acc.c b/drivers/amlogic/input/sensor/lis3dh_acc.c
index 21157536adb6..e84a443e700d 100644
--- a/drivers/amlogic/input/sensor/lis3dh_acc.c
+++ b/drivers/amlogic/input/sensor/lis3dh_acc.c
@@ -1092,8 +1092,6 @@ static ssize_t attr_get_debug(struct device *dev,
 static ssize_t attr_set_debug(struct device *dev,
 		struct device_attribute *attr,	const char *buf, size_t size)
 {
-     int err, xyz[3]={0};
-     
      struct i2c_client *client = to_i2c_client(dev);
      struct lis3dh_acc_status *stat = i2c_get_clientdata(client);
      
diff --git a/drivers/amlogic/input/sensor/lsm303d.c b/drivers/amlogic/input/sensor/lsm303d.c
index 1ee6fb960edc..5227fa6c2e0b 100644
--- a/drivers/amlogic/input/sensor/lsm303d.c
+++ b/drivers/amlogic/input/sensor/lsm303d.c
@@ -290,8 +290,7 @@ static int lsm303d_i2c_read(struct lsm303d_status *stat, u8 *buf, int len)
 			ret = -1;
 
 		if (ret < 0) {
-			printk(&stat->client->dev,
-				"read transfer error: len:%d, command=0x%02x\n",
+			printk("read transfer error: len:%d, command=0x%02x\n",
 				len, cmd);
 			return 0;
 		}
@@ -697,7 +696,6 @@ static int lsm303d_acc_update_odr(struct lsm303d_status *stat,
 {
 	int err = -1;
 	u8 config[2];
-	int i;
 
 #if 0
 	for (i = ARRAY_SIZE(lsm303d_acc_odr_table) - 1; i >= 0; i--) {
@@ -1018,7 +1016,7 @@ static ssize_t attr_get_enable_acc(struct kobject *kobj,
 		err = lsm303d_i2c_read(stat, buff, 1);
 		if (err < 0)
 		{
-			printk(KERN_ERR"read 0x0f failed\n", 0x0f);	
+			printk(KERN_ERR"read 0x0f failed\n");	
 		}
 		else
 		{
@@ -1061,9 +1059,9 @@ static ssize_t attr_set_enable_acc(struct kobject *kobj,
 	else if(val == 6)
 	{
 		int err; u8 buff[2];
+		u8 val = 0;
 		aml_dbg = 1;
 		buff[0] = 0x21;
-		u8 val = 0;
 		err = lsm303d_i2c_read(stat, buff, 1);
 		if (err < 0)
 		{
diff --git a/drivers/amlogic/input/sensor/ltr501_als.c b/drivers/amlogic/input/sensor/ltr501_als.c
index 0c93c3c2d945..244d88b05dda 100644
--- a/drivers/amlogic/input/sensor/ltr501_als.c
+++ b/drivers/amlogic/input/sensor/ltr501_als.c
@@ -180,7 +180,7 @@ static int ltr501_i2c_write_reg(u8 reg, u8 value)
  * ## PS CONFIG ##
  * ###############
  */
-
+#if 0
 static int ltr501_ps_enable(int gainrange)
 {
 	int ret;
@@ -221,7 +221,7 @@ static int ltr501_ps_enable(int gainrange)
 
 	return ret;
 }
-
+#endif
 
 // Put PS into Standby mode
 static int ltr501_ps_disable(void)
diff --git a/drivers/amlogic/input/sensor/ltr558_pls.c b/drivers/amlogic/input/sensor/ltr558_pls.c
index e35fd3cf6220..8f9bff5562b3 100644
--- a/drivers/amlogic/input/sensor/ltr558_pls.c
+++ b/drivers/amlogic/input/sensor/ltr558_pls.c
@@ -39,7 +39,7 @@ static int ltr558_probed = 0;
 static int calibrate_high_ltr558 = 0;	//add for calibrate
 static int calibrate_low_ltr558 = 0;
 static int calibrate_status_ltr558 = 0;	// add for calibrate
-static int ps_opened_ltr558; 
+//static int ps_opened_ltr558; 
 static int als_opened_ltr558; 
 //static struct work_struct irq_workqueue; 
 static int ps_data_changed_ltr558; 
@@ -304,7 +304,6 @@ static int ltr558_ps_read(void)
 	int psdata;
 	//unsigned int psval_lo, psval_hi, psdata;
 	//int psval_lo, psval_hi, psdata;
-	int ret = 0;
 	ltr558_i2c_read_reg(LTR558_PS_DATA_0, &psval_lo); 
 	if (psval_lo < 0){ 
 		psdata = psval_lo; 
@@ -339,6 +338,7 @@ static int ltr558_ps_read_status(void)
  return intval;
 }
 
+#if 0 
 static int ltr558_ps_open(struct inode *inode, struct file *file) 
 { 
  if (ps_opened_ltr558) { 
@@ -349,13 +349,13 @@ static int ltr558_ps_open(struct inode *inode, struct file *file)
  return 0; 
 } 
  
- 
 static int ltr558_ps_release(struct inode *inode, struct file *file) 
 { 
  LTR558_DEBUG(KERN_ALERT "%s\n", __func__); 
  ps_opened_ltr558 = 0; 
  return ltr558_ps_disable(); 
 } 
+#endif
 //gionee liudj add for debug begin
 /*----------------------------------------------------------------------------*/
 static ssize_t ltr558_show_ps(struct device* cd, struct device_attribute *attr, char* buf)
@@ -369,7 +369,7 @@ static ssize_t ltr558_show_ps(struct device* cd, struct device_attribute *attr,
 		return 0;
 	}
  	dat = ltr558_ps_read();
-	ltr558_i2c_read_reg(0x8c, &dat1);
+	ltr558_i2c_read_reg(0x8c, (unsigned char *)&dat1);
 	if(0 > dat)
 		dat = ltr558_ps_read();
 	return snprintf(buf,PAGE_SIZE,"ps_data %d     0x%x    high=0x%x   low=0x%x  0x8c=0x%x\n",dat, dat, calibrate_high_ltr558, calibrate_low_ltr558, dat1);		
@@ -403,7 +403,6 @@ static ssize_t ltr558_ps_status(struct device* cd, struct device_attribute *attr
 }*/
 static ssize_t ltr558_ps_status(struct device* cd, struct device_attribute *attr, char* buf)
 {
-	unsigned char dat=0;
 	int i = 0;
 	u8 bufdata;
 	int count  = 0;
@@ -467,7 +466,7 @@ static int read_int_from_buf(struct device* cd, const char* buf, size_t count,
 	return idx;
 }
 
-static ssize_t ltr558_store_reg(struct device* cd,struct device_attribute *attr,char *buf,ssize_t count)
+static ssize_t ltr558_store_reg(struct device* cd,struct device_attribute *attr,const char *buf,size_t count)
 {
 
 	u32 data[2];
@@ -478,7 +477,7 @@ static ssize_t ltr558_store_reg(struct device* cd,struct device_attribute *attr,
 		return 0;
 	}
 
-	if(2 != read_int_from_buf(the_data_ltr558,buf,count,data,2))
+	if(2 != read_int_from_buf(NULL ,buf,count,data,2))
 	{
 		LTR558_DEBUG("%sinvalid format:\n",__func__);
 		return 0;
@@ -574,6 +573,7 @@ static ssize_t ltr558_show_version(struct device* cd,
 	LTR558_DEBUG("%s  failed", __func__);
 	return err;
 }
+#if 0
 static long ltr558_ps_ioctl(struct file *file, unsigned int cmd, unsigned long arg) 
 { 
 	int ret = 0; 
@@ -621,7 +621,9 @@ static long ltr558_ps_ioctl(struct file *file, unsigned int cmd, unsigned long a
 	}
 	return ret;
 }
- 
+#endif
+
+#if 0 
 static struct file_operations ltr558_ps_fops = { 
  .owner  = THIS_MODULE, 
  .open  = ltr558_ps_open, 
@@ -629,13 +631,7 @@ static struct file_operations ltr558_ps_fops = {
  .unlocked_ioctl  = ltr558_ps_ioctl, 
  //.poll  = ltr558_ps_poll, 
 }; 
- 
- 
-static struct miscdevice ltr558_ps_dev = { 
- .minor = MISC_DYNAMIC_MINOR, 
- .name = LTR558_DEVICE, 
- .fops = &ltr558_ps_fops, 
-}; 
+#endif 
  
 /*
 * ################ 
@@ -696,7 +692,6 @@ static int ltr558_als_read(int gainrange)
  int alsval_ch1 =0;
  int luxdata_int=0; 
  int ratio=0;
- int luxdata_flt=0; 
  int ch0_coeff=0;
  int ch1_coeff=0; 
   #if 0
@@ -708,12 +703,12 @@ static int ltr558_als_read(int gainrange)
  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH1_1, &alsval_ch1_hi); 
  alsval_ch1 = (alsval_ch1_hi * 256) + alsval_ch1_lo; 
  #else
-  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH1_0, &alsval_ch1_lo); 
-  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH1_1, &alsval_ch1_hi); 
+  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH1_0, (unsigned char *)&alsval_ch1_lo); 
+  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH1_1, (unsigned char *)&alsval_ch1_hi); 
  alsval_ch1 = (alsval_ch1_hi * 256) + alsval_ch1_lo; 
  
-  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH0_0, &alsval_ch0_lo); 
-  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH0_1, &alsval_ch0_hi); 
+  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH0_0, (unsigned char *)&alsval_ch0_lo); 
+  ltr558_i2c_read_reg(LTR558_ALS_DATA_CH0_1, (unsigned char *)&alsval_ch0_hi); 
  alsval_ch0 = (alsval_ch0_hi * 256) + alsval_ch0_lo;  
  #endif
  LTR558_DEBUG("alsval_ch0[%d],alsval_ch1[%d]\n",alsval_ch0,alsval_ch1);
@@ -782,7 +777,7 @@ static int ltr558_als_read_status(void)
  return intval; 
 } 
  
- 
+#if 0 
 static int ltr558_als_open(struct inode *inode, struct file *file) 
 { 
  if (als_opened_ltr558) { 
@@ -792,7 +787,9 @@ static int ltr558_als_open(struct inode *inode, struct file *file)
  als_opened_ltr558 = 1; 
  return 0; 
 } 
- 
+#endif
+
+#if 0 
 static int ltr558_als_release(struct inode *inode, struct file *file) 
 { 
  LTR558_DEBUG(KERN_ALERT "%s\n", __func__); 
@@ -847,8 +844,9 @@ static long ltr558_als_ioctl(struct file *file, unsigned int cmd, unsigned long
  } 
  return ret; 
 }
+#endif 
+
 /*
- 
 static unsigned int ltr558_als_poll(struct file *fp, poll_table * wait) 
 { 
  if(als_data_changed_ltr558) 
@@ -862,6 +860,7 @@ static unsigned int ltr558_als_poll(struct file *fp, poll_table * wait)
 } 
 
  */
+ #if 0
 static struct file_operations ltr558_als_fops = { 
  .owner  = THIS_MODULE, 
  .open  = ltr558_als_open, 
@@ -869,13 +868,7 @@ static struct file_operations ltr558_als_fops = {
  .unlocked_ioctl  = ltr558_als_ioctl, 
  //.poll        = ltr558_als_poll, 
 }; 
- 
- 
-static struct miscdevice ltr558_als_dev = { 
- .minor = MISC_DYNAMIC_MINOR, 
- .name = LTR558_DEVICE, 
- .fops = &ltr558_als_fops, 
-}; 
+#endif 
 
 //=================
 static int ltr558_open(struct inode *inode, struct file *file) 
@@ -1182,11 +1175,10 @@ reset:
 //	error = ltr558_als_enable(init_als_gain); 
 /*	if (error < 0) 
 	{
-		goto out; 
+        return error; 
 	}
 */	error = 0; 
 
-out: 
 	return error; 
 } 
 
@@ -1212,8 +1204,7 @@ static void ltr558_early_suspend(struct early_suspend *handler)
 
 static void ltr558_early_resume(struct early_suspend *handler)
 {	
-	
- int ret; 
+ //int ret; 
  //ret = ltr558_devinit(); 
  LTR558_DEBUG("%s\n", __func__);
  // ret = ltr558_ps_enable(PS_RANGE1); 
diff --git a/drivers/amlogic/input/sensor/mma7660.c b/drivers/amlogic/input/sensor/mma7660.c
index 1c8b1e3cc350..436c92881c48 100644
--- a/drivers/amlogic/input/sensor/mma7660.c
+++ b/drivers/amlogic/input/sensor/mma7660.c
@@ -172,7 +172,6 @@ static int mma7660_load_cablic(const char *addr)
 
 static void mma7660_put_cablic(const char *addr)
 {
-	char value[128];
 	long fd = sys_open(addr,O_CREAT | O_RDWR | O_TRUNC,0);
 
 	if(fd<0){
@@ -458,13 +457,14 @@ static void mma7660_worker(struct work_struct *work)
 
 DECLARE_WORK(mma7660_work, mma7660_worker);
 
+#if 0
 // interrupt handler
 static irqreturn_t mmx7660_irq_handler(int irq, void *dev_id)
 {
 	schedule_work(&mma7660_work);
 	return IRQ_RETVAL(1);
 }
-
+#endif
 
 /*
  * Initialization function
diff --git a/drivers/amlogic/input/sensor/mma8452.c b/drivers/amlogic/input/sensor/mma8452.c
index a710e4861a6f..b9547f6ef93d 100644
--- a/drivers/amlogic/input/sensor/mma8452.c
+++ b/drivers/amlogic/input/sensor/mma8452.c
@@ -371,7 +371,7 @@ static void enable_change_mma8452_reg(int enable)
 	buf[0] = MMA8452_REG_CTRL;
 	if (mma8452_i2c_rx_data(buf, 1) < 0) {
 		printk("read reg[0x%x] fail", buf[0]);
-		return -EINVAL;
+		return ;
 	}
 	if (enable) {
 		buf[1] = buf[0] & ~MMA8452_CTRL_ACTIVE;
@@ -408,7 +408,6 @@ static ssize_t mma8452_read_write_reg_store(struct device *dev,
 		const char *buf, size_t count)
 {
     char str[64];
-	size_t buf_size;
 	char *start=str;
 	unsigned long reg;
 	unsigned long value;
@@ -444,26 +443,26 @@ static ssize_t mma8452_read_write_reg_store(struct device *dev,
 				start++;
 		value = simple_strtoul(start, &start, 16);	
 		data[1] = value;		
-		printk("Write reg[0x%x]=0x%x\n", reg, data[1]);
+		printk("Write reg[0x%lx]=0x%x\n", reg, data[1]);
 		enable_change_mma8452_reg(1);
 		if (mma8452_i2c_tx_data(data, 2) < 0) {
-			printk("write reg[%x] fail", reg);
+			printk("write reg[%lx] fail", reg);
 			return -EINVAL;
 		}
 		enable_change_mma8452_reg(0);
 		// read back
 		data[0] = reg;
 		if (mma8452_i2c_rx_data(data, 1) < 0) {
-			printk("read reg[0x%x] fail", reg);
+			printk("read reg[0x%lx] fail", reg);
 			return -EINVAL;
 		}
-		printk("Read reg[%x]=0x%x\n", reg, data[0]);
+		printk("Read reg[%lx]=0x%x\n", reg, data[0]);
 	} else { 
 		if (mma8452_i2c_rx_data(data, 1) < 0) {
-			printk("read reg[0x%x] fail", reg);
+			printk("read reg[0x%lx] fail", reg);
 			return -EINVAL;
 		}
-		printk("Read reg[0x%x]=0x%x\n", reg, data[0]);
+		printk("Read reg[0x%lx]=0x%x\n", reg, data[0]);
 	}
 				
 	return count;
diff --git a/drivers/amlogic/input/sensor/mma865x.c b/drivers/amlogic/input/sensor/mma865x.c
index 9081faa012cb..2df94503a320 100644
--- a/drivers/amlogic/input/sensor/mma865x.c
+++ b/drivers/amlogic/input/sensor/mma865x.c
@@ -380,6 +380,7 @@ static ssize_t mma865x_enable_store(struct device *dev,
 	mutex_unlock(&pdata->data_lock);
 	return count;
 }
+#if 0
 static ssize_t mma865x_position_show(struct device *dev,
 				   struct device_attribute *attr, char *buf)
 {
@@ -405,15 +406,15 @@ static ssize_t mma865x_position_store(struct device *dev,
 	mutex_unlock(&pdata->data_lock);
 	return count;
 }
-
+#endif
 static DEVICE_ATTR(delay, S_IWGRP| S_IWUSR | S_IRUGO,
 		   mma865x_delay_show, mma865x_delay_store);
 static DEVICE_ATTR(debug, S_IWGRP | S_IWUSR | S_IRUGO,
 		   mma865x_debug_show, mma865x_debug_store);
 static DEVICE_ATTR(enable, S_IWGRP | S_IWUSR | S_IRUGO,
 		   mma865x_enable_show, mma865x_enable_store);
-static DEVICE_ATTR(position, S_IWGRP | S_IWUSR | S_IRUGO,
-		   mma865x_position_show, mma865x_position_store);
+
+//static DEVICE_ATTR(position, S_IWGRP | S_IWUSR | S_IRUGO, mma865x_position_show, mma865x_position_store);
 
 static struct attribute *mma865x_attributes[] = {
 	&dev_attr_enable.attr,
diff --git a/drivers/amlogic/input/sensor/mxc622x.c b/drivers/amlogic/input/sensor/mxc622x.c
index d1baafdb5a85..fd00e7d5015b 100644
--- a/drivers/amlogic/input/sensor/mxc622x.c
+++ b/drivers/amlogic/input/sensor/mxc622x.c
@@ -603,9 +603,10 @@ static int mxc622x_acc_probe(struct i2c_client *client,
 	int result = -1;
 	int tempvalue;
 
+	struct i2c_adapter *adapter;
+
 	pr_info("%s: probe start.\n", MXC622X_ACC_DEV_NAME);
 
-	struct i2c_adapter *adapter;
 	adapter = to_i2c_adapter(client->dev.parent);
 	result = i2c_check_functionality(adapter,
 					 I2C_FUNC_SMBUS_BYTE |
diff --git a/drivers/amlogic/input/sensor/stk831x.c b/drivers/amlogic/input/sensor/stk831x.c
index c0600fc489c9..55ad680687d9 100644
--- a/drivers/amlogic/input/sensor/stk831x.c
+++ b/drivers/amlogic/input/sensor/stk831x.c
@@ -3063,7 +3063,6 @@ static ssize_t stk831x_firlen_store(struct device *dev,
 static ssize_t stk831x_range_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	struct stk831x_data *stk = i2c_get_clientdata(this_client);
 	char grange = 0;
        int range = 0;
 
@@ -3071,14 +3070,14 @@ static ssize_t stk831x_range_show(struct device *dev,
        range = stk8313_range[2].range;
        if(!STK831x_GetRange(&grange)) {
             if(grange <= 0x3)
-                range = stk8313_range[grange].range;
+                range = stk8313_range[(int)grange].range;
        }
 	return sprintf(buf, "%d\n", range);
 #elif defined(CONFIG_GRAVITY_STK8312)
        range = stk8312_range[1].range;
        if(!STK831x_GetRange(&grange)) {
             if(grange <= 0x2)
-                range= stk8312_range[grange].range;
+                range= stk8312_range[(int)grange].range;
        }
        return sprintf(buf, "%d\n", range);
 #endif
@@ -3087,7 +3086,6 @@ static ssize_t stk831x_range_show(struct device *dev,
 static ssize_t stk831x_resolution_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	struct stk831x_data *stk = i2c_get_clientdata(this_client);
 	char grange = 0;
        int resolution = 0;
 	
@@ -3095,13 +3093,13 @@ static ssize_t stk831x_resolution_show(struct device *dev,
        resolution = stk8313_range[2].resolution;
        if(!STK831x_GetRange(&grange)) {
             if(grange <= 0x3)
-                resolution = stk8313_range[grange].resolution;
+                resolution = stk8313_range[(int)grange].resolution;
        }
 #elif defined(CONFIG_GRAVITY_STK8312)
        resolution = stk8312_range[1].resolution;
        if(!STK831x_GetRange(&grange)) {
             if(grange <= 0x2)
-                resolution = stk8312_range[grange].resolution;
+                resolution = stk8312_range[(int)grange].resolution;
        }
 #endif
 
-- 
2.19.0

