From 0078bd05f30553f91ececcd0458973d7823012a8 Mon Sep 17 00:00:00 2001
From: "chunxue.yu" <chunxue.yu@amlogic.com>
Date: Tue, 7 Jan 2014 11:35:37 +0800
Subject: [PATCH 2921/5965] merge touch by chunxue.yu

---
 drivers/amlogic/input/touchscreen/common.c     | 18 +++++++++++-------
 .../amlogic/input/touchscreen/focaltech_5x06.c |  7 ++++---
 .../amlogic/input/touchscreen/gt9xx/gt9xx.c    | 12 +++++++-----
 include/linux/amlogic/input/common.h           |  6 +++---
 4 files changed, 25 insertions(+), 18 deletions(-)

diff --git a/drivers/amlogic/input/touchscreen/common.c b/drivers/amlogic/input/touchscreen/common.c
index dba56ebacfd5..f5b2a12c361b 100755
--- a/drivers/amlogic/input/touchscreen/common.c
+++ b/drivers/amlogic/input/touchscreen/common.c
@@ -219,9 +219,9 @@ GET_DT_ERR_TYPE get_dt_data(struct device_node* of_node, struct touch_pdata *pda
 												"GPIO_IRQ_FALLING",
 											};
 	if (!pdata->fw_file)
-		pdata->fw_file = "/system/etc/touch/touch.fw";
+		strcpy(pdata->fw_file, "/system/etc/touch/touch.fw");
 	if (!pdata->config_file)
-		pdata->config_file = "/system/etc/touch/touch.cfg";
+		strcpy(pdata->config_file, "/system/etc/touch/touch.cfg");
 	if (!of_node) {
 		printk("%s: dev.of_node == NULL!\n", pdata->owner);
 		return ERR_NO_NODE;
@@ -357,19 +357,23 @@ GET_DT_ERR_TYPE get_dt_data(struct device_node* of_node, struct touch_pdata *pda
   	pdata->gpio_power = 0;
   }
 
-  err = of_property_read_string(of_node,"fw_file",&pdata->fw_file);
+  err = of_property_read_string(of_node,"fw_file",&str);
 	if (err) {
 	  printk("%s warnning: faild to get fw_file, set firmware %s!\n",pdata->owner, pdata->fw_file);
   }
-  else
+  else {
+	strcpy(pdata->fw_file, str);
   	printk("%s get fw_file, set firmware %s!\n",pdata->owner, pdata->fw_file);
+  }
 
-  err = of_property_read_string(of_node,"config_file",&pdata->config_file);
+  err = of_property_read_string(of_node,"config_file", &str);
 	if (err) {
 	  printk("%s warnning: faild to get config_file, set config_file %s!\n", pdata->owner, pdata->config_file);
   }
-  else
+  else {
+	strcpy(pdata->config_file, str);
   	printk("%s get config_file, set config_file %s!\n", pdata->owner, pdata->config_file);
+  }
   
   return ERR_NO;
 }
@@ -480,7 +484,7 @@ static ssize_t touch_class_read(struct class *cla, struct class_attribute *attr,
 		}
     return 0;
 }
-static ssize_t touch_class_write(struct class *cla, struct class_attribute *attr, const char *buf, ssize_t count)
+static ssize_t touch_class_write(struct class *cla, struct class_attribute *attr, const char *buf, size_t count)
 {
 	printk("buf[0]=%d, buf[1]=%d\n", buf[0], buf[1]);
 	if (!strcmp(attr->attr.name, "PrintkFlag")) {
diff --git a/drivers/amlogic/input/touchscreen/focaltech_5x06.c b/drivers/amlogic/input/touchscreen/focaltech_5x06.c
index 4ccae1f86b8e..35c1bac3ff3a 100755
--- a/drivers/amlogic/input/touchscreen/focaltech_5x06.c
+++ b/drivers/amlogic/input/touchscreen/focaltech_5x06.c
@@ -1187,7 +1187,7 @@ static void ft5x0x_read_version(char* ver)
 		printk("[FST] Firmware version = 0x%x\n", uc_reg_value);
 }
 
-static void ft5x0x_late_upgrade(void)
+static int ft5x0x_late_upgrade(void *data)
 {
 	int file_size;
 //	static int count;
@@ -1203,7 +1203,8 @@ static void ft5x0x_late_upgrade(void)
 	fts_ctpm_fw_upgrade_with_i_file();
 	enable_irq(ts_com->irq);
 	printk("%s :first load firmware\n", ts_com->owner);
-	do_exit(0);
+	//do_exit(0);
+	return 0;
 }
 
 /***********************************************************************************************
@@ -1342,7 +1343,7 @@ ft5x0x_ts_probe(struct i2c_client *client, const struct i2c_device_id *id)
   if (ts_com->auto_update_fw)
   {
     disable_irq(ts_com->irq);
-    ts_com->upgrade_task = kthread_run(ft5x0x_late_upgrade, NULL, "ft5x0x_late_upgrade");
+    ts_com->upgrade_task = kthread_run(ft5x0x_late_upgrade, (void *)NULL, "ft5x0x_late_upgrade");
     if (!ts_com->upgrade_task)
       printk("%s creat upgrade process failed\n", __func__);
     else
diff --git a/drivers/amlogic/input/touchscreen/gt9xx/gt9xx.c b/drivers/amlogic/input/touchscreen/gt9xx/gt9xx.c
index f9ef8676cba3..433b24660203 100755
--- a/drivers/amlogic/input/touchscreen/gt9xx/gt9xx.c
+++ b/drivers/amlogic/input/touchscreen/gt9xx/gt9xx.c
@@ -1254,7 +1254,7 @@ static s32 gtp_init_panel(struct goodix_ts_data *ts)
     u8 opr_buf[16] = {0};
     u8 sensor_id = 0; 
 		int cfg_info_group1_len;
-		u8 *cfg_info_group1;
+		u8 *cfg_info_group1 = NULL;
 
     u8 cfg_info_group2[] = CTP_CFG_GROUP2;
     u8 cfg_info_group3[] = CTP_CFG_GROUP3;
@@ -2214,10 +2214,11 @@ static void gt9xx_upgrade_touch(void)
 	}
 }
 #ifdef LATE_UPGRADE
-static void gt9xx_late_upgrade(struct goodix_ts_data *ts)
+static int gt9xx_late_upgrade(void *data)
 {
-	int file_size;
-	int count;
+	int file_size = -1;
+	int count = 0;
+	struct goodix_ts_data *ts = (struct goodix_ts_data *)data;
 	while(count < 10000) {
 		file_size = touch_open_fw(ts_com->config_file);
 		if(file_size < 0) {
@@ -2235,7 +2236,8 @@ static void gt9xx_late_upgrade(struct goodix_ts_data *ts)
 			gtp_irq_enable(ts);
 		ts->config_finish = 1;
 	}
-	do_exit(0);
+	//do_exit(0);
+	return 0;
 }
 #endif
 /*******************************************************
diff --git a/include/linux/amlogic/input/common.h b/include/linux/amlogic/input/common.h
index f4d63385444d..417e7a99596e 100755
--- a/include/linux/amlogic/input/common.h
+++ b/include/linux/amlogic/input/common.h
@@ -36,7 +36,7 @@
 #define aml_gpio_direction_output(gpio, val) amlogic_gpio_direction_output(gpio, val, ts_com->owner)
 #define aml_get_value(gpio) amlogic_get_value(gpio, ts_com->owner)
 #define aml_set_value(gpio,val) amlogic_set_value(gpio, val, ts_com->owner)
-#define aml_gpio_to_irq(gpio, irq, irq_edge) 	amlogic_gpio_to_irq(gpio, ts_com->owner, AML_GPIO_IRQ(irq,FILTER_NUM7,irq_edge))
+#define aml_gpio_to_irq(gpio, irq, irq_edge) 	amlogic_gpio_to_irq(gpio, ts_com->owner, AML_GPIO_IRQ((irq),FILTER_NUM7,irq_edge))
 
 #define touch_dbg(fmt, args...)  { if(ts_com->printk_enable_flag) \
 					printk("[%s]: " fmt, ts_com->owner, ## args); }
@@ -63,8 +63,8 @@ struct touch_pdata {
   unsigned reg;
   unsigned auto_update_fw;
 	char *owner;
-	char *fw_file;
-	char *config_file;
+	char fw_file[255];
+	char config_file[255];
 	
 	int printk_enable_flag;
 	void(*hardware_reset)(struct touch_pdata *);
-- 
2.19.0

