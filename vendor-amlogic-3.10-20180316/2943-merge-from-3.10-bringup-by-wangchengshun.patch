From ae15012941b2ed7ab39d3937ba3402f7d76e715d Mon Sep 17 00:00:00 2001
From: xu xing <xing.xu@amlogic.com>
Date: Wed, 8 Jan 2014 20:43:25 +0800
Subject: [PATCH 2943/5965] merge from 3.10 bringup by wangchengshun

---
 sound/soc/aml/m8/aml_audio_hw.c  | 23 +++++++------
 sound/soc/aml/m8/aml_audio_hw.h  |  2 +-
 sound/soc/aml/m8/aml_i2s.c       |  6 ++--
 sound/soc/aml/m8/aml_i2s_dai.c   | 59 +++++++++++++++++++-------------
 sound/soc/aml/m8/aml_m8.c        | 33 ++----------------
 sound/soc/aml/m8/aml_spdif_dai.c |  2 +-
 6 files changed, 56 insertions(+), 69 deletions(-)
 mode change 100644 => 100755 sound/soc/aml/m8/aml_audio_hw.c
 mode change 100644 => 100755 sound/soc/aml/m8/aml_audio_hw.h
 mode change 100644 => 100755 sound/soc/aml/m8/aml_i2s.c
 mode change 100644 => 100755 sound/soc/aml/m8/aml_i2s_dai.c
 mode change 100644 => 100755 sound/soc/aml/m8/aml_m8.c
 mode change 100644 => 100755 sound/soc/aml/m8/aml_spdif_dai.c

diff --git a/sound/soc/aml/m8/aml_audio_hw.c b/sound/soc/aml/m8/aml_audio_hw.c
old mode 100644
new mode 100755
index 52d1b586f8d3..13c58e991453
--- a/sound/soc/aml/m8/aml_audio_hw.c
+++ b/sound/soc/aml/m8/aml_audio_hw.c
@@ -245,6 +245,7 @@ void audio_set_958outbuf(u32 addr, u32 size,int flag)
         }else{
           WRITE_MPEG_REG(AIU_MEM_IEC958_END_PTR, (addr & 0xffffffc0) + (size & 0xffffffc0) - 1);    // this is for RAW mode
         }
+        WRITE_MPEG_REG_BITS(AIU_MEM_IEC958_MASKS, 0x303, 0, 16);
 
         WRITE_MPEG_REG_BITS(AIU_MEM_IEC958_CONTROL, 1, 0, 1);
         WRITE_MPEG_REG_BITS(AIU_MEM_IEC958_CONTROL, 0, 0, 1);
@@ -256,9 +257,12 @@ void audio_set_958outbuf(u32 addr, u32 size,int flag)
 /*
 i2s mode 0: master 1: slave
 */
-static void i2sin_fifo0_set_buf(u32 addr, u32 size,u32 i2s_mode)
+static void i2sin_fifo0_set_buf(u32 addr, u32 size,u32 i2s_mode,u32 i2s_sync)
 {
 	unsigned char  mode = 0;
+    unsigned int sync_mode = 0;
+    if(i2s_sync)
+        sync_mode = i2s_sync;
 	if(i2s_mode &I2SIN_SLAVE_MODE)
 		mode = 1;
 	WRITE_MPEG_REG(AUDIN_FIFO0_START, addr & 0xffffffc0);
@@ -289,7 +293,7 @@ static void i2sin_fifo0_set_buf(u32 addr, u32 size,u32 i2s_mode)
 									 (3<<I2SIN_SIZE)
 									|(1<<I2SIN_CHAN_EN)		/*bit10~13*/ //2 channel
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TV
-									|(0<<I2SIN_POS_SYNC)
+									|(sync_mode<<I2SIN_POS_SYNC)
 #else
 									|(1<<I2SIN_POS_SYNC)
 #endif
@@ -323,10 +327,10 @@ static void spdifin_fifo1_set_buf(u32 addr, u32 size)
 				  );
 	WRITE_MPEG_REG(AUDIN_FIFO1_CTRL1,0xc);
 }
-void audio_in_i2s_set_buf(u32 addr, u32 size,u32 i2s_mode)
+void audio_in_i2s_set_buf(u32 addr, u32 size,u32 i2s_mode, u32 i2s_sync)
 {
 	printk("i2sin_fifo0_set_buf \n");		
-	i2sin_fifo0_set_buf(addr,size,i2s_mode);
+	i2sin_fifo0_set_buf(addr,size,i2s_mode,i2s_sync);
 	audio_in_buf_ready = 1;
 }
 void audio_in_spdif_set_buf(u32 addr, u32 size)
@@ -453,8 +457,8 @@ void audio_set_i2s_mode(u32 mode)
         //WRITE_MPEG_REG_BITS(AIU_MEM_I2S_CONTROL, 0, 0, 1);
 
         if (ENABLE_IEC958) {
-            WRITE_MPEG_REG_BITS(AIU_MEM_IEC958_MASKS, mask[mode], 0,
-                                16);
+       //     WRITE_MPEG_REG_BITS(AIU_MEM_IEC958_MASKS, mask[mode], 0,
+             //                   16);
             //WRITE_MPEG_REG_BITS(AIU_MEM_IEC958_CONTROL, 1, 0, 1);
             //WRITE_MPEG_REG_BITS(AIU_MEM_IEC958_CONTROL, 0, 0, 1);
         }
@@ -1177,7 +1181,7 @@ void audio_set_958_mode(unsigned mode, _aiu_958_raw_setting_t * set)
 void audio_out_i2s_enable(unsigned flag)
 {
     if (flag) {
-        WRITE_MPEG_REG(AIU_RST_SOFT, 0x05);
+        WRITE_MPEG_REG(AIU_RST_SOFT, 0x01);
         READ_MPEG_REG(AIU_I2S_SYNC);
         WRITE_MPEG_REG_BITS(AIU_MEM_I2S_CONTROL, 3, 1, 2);
         // Maybe cause POP noise
@@ -1195,6 +1199,7 @@ void audio_hw_958_enable(unsigned flag)
     if (ENABLE_IEC958)
     {
     		if(flag){
+        		WRITE_MPEG_REG(AIU_RST_SOFT, 0x04);
 	              WRITE_MPEG_REG(AIU_958_FORCE_LEFT, 0);
 	              WRITE_MPEG_REG_BITS(AIU_958_DCU_FF_CTRL, 1, 0, 1);
 	              WRITE_MPEG_REG_BITS(AIU_MEM_IEC958_CONTROL, 3, 1, 2);
@@ -1225,9 +1230,6 @@ unsigned int audio_hdmi_init_ready()
 {
 	return 	READ_MPEG_REG_BITS(AIU_HDMI_CLK_DATA_CTRL, 0, 2);
 }
-
-#ifdef CONFIG_ARCH_MESON8
-
 /* power gate control for iec958 audio out */
 unsigned audio_spdifout_pg_enable(unsigned char enable)
 {
@@ -1280,4 +1282,3 @@ unsigned audio_aiu_pg_enable(unsigned char enable)
         AUDIO_CLK_GATE_OFF(AIU_TOP_LEVEL);
 	}
 }
-#endif
diff --git a/sound/soc/aml/m8/aml_audio_hw.h b/sound/soc/aml/m8/aml_audio_hw.h
old mode 100644
new mode 100755
index 587b9c7f75a3..398cb559435e
--- a/sound/soc/aml/m8/aml_audio_hw.h
+++ b/sound/soc/aml/m8/aml_audio_hw.h
@@ -105,7 +105,7 @@ extern unsigned I2S_MODE;
 
 void audio_set_aiubuf(u32 addr, u32 size, unsigned int channel);
 void audio_set_958outbuf(u32 addr, u32 size, int flag);
-void audio_in_i2s_set_buf(u32 addr, u32 size,u32 i2s_mode);
+void audio_in_i2s_set_buf(u32 addr, u32 size,u32 i2s_mode, u32 i2s_sync);
 void audio_in_spdif_set_buf(u32 addr, u32 size);
 void audio_in_i2s_enable(int flag);
 void audio_in_spdif_enable(int flag);
diff --git a/sound/soc/aml/m8/aml_i2s.c b/sound/soc/aml/m8/aml_i2s.c
old mode 100644
new mode 100755
index 807102ddddd9..6004974002aa
--- a/sound/soc/aml/m8/aml_i2s.c
+++ b/sound/soc/aml/m8/aml_i2s.c
@@ -34,10 +34,10 @@
 #define HRTIMER_PERIOD (1000000000UL/1000)
 //#define DEBUG_ALSA_PLATFRORM
 
-#define ALSA_PRINT(fmt,args...)	printk(KERN_INFO "[aml-i2s]" fmt,##args)
+#define ALSA_PRINT(fmt,args...)	printk(KERN_INFO "[aml-platform]" fmt,##args)
 #ifdef DEBUG_ALSA_PLATFRORM
-#define ALSA_DEBUG(fmt,args...) 	printk(KERN_INFO "[aml-i2s]" fmt,##args)
-#define ALSA_TRACE()     			printk("[aml-i2s] enter func %s,line %d\n",__FUNCTION__,__LINE__);
+#define ALSA_DEBUG(fmt,args...) 	printk(KERN_INFO "[aml-platform]" fmt,##args)
+#define ALSA_TRACE()     			printk("[aml-platform] enter func %s,line %d\n",__FUNCTION__,__LINE__);
 #else
 #define ALSA_DEBUG(fmt,args...) 
 #define ALSA_TRACE()   
diff --git a/sound/soc/aml/m8/aml_i2s_dai.c b/sound/soc/aml/m8/aml_i2s_dai.c
old mode 100644
new mode 100755
index 9bf499e581fb..06c1524e9d04
--- a/sound/soc/aml/m8/aml_i2s_dai.c
+++ b/sound/soc/aml/m8/aml_i2s_dai.c
@@ -27,6 +27,7 @@
 #include <linux/of.h>
 
 static aml_dai_info_t dai_info[3] = {{0}};
+static int i2s_pos_sync = 0;
 #define AML_DAI_DEBUG
 //#define AML_DAI_PCM_SUPPORT 
 
@@ -160,30 +161,31 @@ static int aml_dai_i2s_prepare(struct snd_pcm_substream *substream,
 			sample_rate	=	AUDIO_CLK_FREQ_441;
 			break;
 	};
-	if(substream->stream == SNDRV_PCM_STREAM_CAPTURE)
-	{
-		s->i2s_mode = dai_info[dai->id].i2s_mode;
-		audio_in_i2s_set_buf(runtime->dma_addr, runtime->dma_bytes*2,0);
-		memset((void*)runtime->dma_area,0,runtime->dma_bytes*2);
-		{
-			int * ppp = (int*)(runtime->dma_area+runtime->dma_bytes*2-8);
-			ppp[0] = 0x78787878;
-			ppp[1] = 0x78787878;
-		}
-		s->device_type = AML_AUDIO_I2SIN;		
-	}
-	else{
-        printk(KERN_INFO "enterd %s,set_clock:%d,sample_rate=%d\n",__func__,set_clock,sample_rate);
-        if(set_clock != sample_rate ){
-            set_clock = sample_rate;
-            audio_set_i2s_clk(sample_rate, AUDIO_CLK_256FS);
+
+    printk(KERN_INFO "enterd %s,set_clock:%d,sample_rate=%d\n",__func__,set_clock,sample_rate);
+    if(set_clock != sample_rate ){
+        set_clock = sample_rate;
+        audio_set_i2s_clk(sample_rate, AUDIO_CLK_256FS);
+    }
+    audio_util_set_dac_i2s_format(AUDIO_ALGOUT_DAC_FORMAT_DSP); 
+    
+    if(substream->stream == SNDRV_PCM_STREAM_CAPTURE)
+    {
+        s->i2s_mode = dai_info[dai->id].i2s_mode;
+        audio_in_i2s_set_buf(runtime->dma_addr, runtime->dma_bytes*2,0,i2s_pos_sync);
+        memset((void*)runtime->dma_area,0,runtime->dma_bytes*2);
+        {
+            int * ppp = (int*)(runtime->dma_area+runtime->dma_bytes*2-8);
+            ppp[0] = 0x78787878;
+            ppp[1] = 0x78787878;
         }
-		audio_util_set_dac_i2s_format(AUDIO_ALGOUT_DAC_FORMAT_DSP);	
-		
-		s->device_type = AML_AUDIO_I2SOUT;
-		aml_hw_i2s_init(runtime);
-	}
-	return 0;
+        s->device_type = AML_AUDIO_I2SIN;       
+    }
+    else{       
+        s->device_type = AML_AUDIO_I2SOUT;
+        aml_hw_i2s_init(runtime);
+    }
+    return 0;
 }
 static int aml_dai_i2s_trigger(struct snd_pcm_substream *substream, int cmd,
 				struct snd_soc_dai *dai)
@@ -243,6 +245,17 @@ static int aml_dai_set_i2s_fmt(struct snd_soc_dai *dai,
 #endif
 	if(fmt&SND_SOC_DAIFMT_CBS_CFS)//slave mode 
 		dai_info[dai->id].i2s_mode = I2S_SLAVE_MODE;
+    
+    switch (fmt & SND_SOC_DAIFMT_INV_MASK) {
+    case SND_SOC_DAIFMT_NB_NF:
+         i2s_pos_sync = 0;
+        break;
+    case SND_SOC_DAIFMT_IB_NF:
+         i2s_pos_sync = 1;
+        break;
+    default:
+        return -EINVAL;
+    }
 	return 0;
 }
 
diff --git a/sound/soc/aml/m8/aml_m8.c b/sound/soc/aml/m8/aml_m8.c
old mode 100644
new mode 100755
index 577a86af14fe..1221214c201c
--- a/sound/soc/aml/m8/aml_m8.c
+++ b/sound/soc/aml/m8/aml_m8.c
@@ -35,6 +35,7 @@
 
 #include "aml_i2s_dai.h"
 #include "aml_i2s.h"
+#include "aml_m8.h"
 #include "aml_audio_hw.h"
 #include "../../codecs/aml_m8_codec.h"
 #include <mach/register.h>
@@ -51,35 +52,6 @@
 #define USE_EXTERNAL_DAC 1
 #define DRV_NAME "aml_snd_m8"
 #define HP_DET                  1
-struct aml_audio_private_data {
-    int bias_level;
-    int clock_en;
-	int gpio_hp_det;
-	bool det_pol_inv;
-	int gpio_mute;
-	bool mute_inv;
-	struct pinctrl *pin_ctl;
-    int hp_last_state;
-    unsigned int hp_val_h;
-    unsigned int hp_val_l;
-    unsigned int mic_val;
-    unsigned int hp_detal;
-    unsigned int hp_adc_ch;
-
-    bool mic_det;
-    
-
-    int timer_en;
-    int detect_flag;
-    struct timer_list timer;
-    struct work_struct work;
-    struct mutex lock;
-    struct snd_soc_jack jack;
-    void* data;
-
-	struct switch_dev sdev; // for android
-	struct switch_dev mic_sdev; // for android
-};
 
 static void aml_set_clock(int enable)
 {
@@ -552,7 +524,8 @@ static void aml_m8_pinmux_init(struct snd_soc_card *card)
     
     p_audio = p_aml_audio;
  #if USE_EXTERNAL_DAC
-    aml_write_reg32(P_AO_SECURE_REG1,0x00000000);
+    //aml_write_reg32(P_AO_SECURE_REG1,0x00000000);
+    aml_clr_reg32_mask(P_AO_SECURE_REG1, ((1<<8) | (1<<1)));
  #endif
 	ret = of_property_read_string(card->dev->of_node, "mute_gpio", &str);
 	if (ret < 0) {
diff --git a/sound/soc/aml/m8/aml_spdif_dai.c b/sound/soc/aml/m8/aml_spdif_dai.c
old mode 100644
new mode 100755
index 79feaf05dff5..15dc65a869ad
--- a/sound/soc/aml/m8/aml_spdif_dai.c
+++ b/sound/soc/aml/m8/aml_spdif_dai.c
@@ -172,7 +172,7 @@ static void aml_hw_iec958_init(struct snd_pcm_substream *substream)
 		i2s_mode = AIU_I2S_MODE_PCM16;
 		break;
 	}	
-	printk("DEBUG-->call audio_set_i2s_mode()\n");
+	
 	//audio_set_i2s_mode(i2s_mode);
 	/* case 1,raw mode enabled */
 	if(IEC958_mode_codec){
-- 
2.19.0

