From ce1c32766e3ad5aa7c63367a282de66740860b3c Mon Sep 17 00:00:00 2001
From: "shi.liu" <shi.liu@amlogic.com>
Date: Mon, 13 Jan 2014 10:01:56 +0800
Subject: [PATCH 2973/5965] PD #85481 fs: Memory access of user progress
 oversteps the boundary of normal zone

Based on 3.13 upstream patch:

https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/fs/seq_file.c?id=801a76050bcf8d4e500eb8d048ff6265f37a61c8

author	Al Viro <viro@ZenIV.linux.org.uk>	2013-11-19 01:20:43 (GMT)
committer	 Linus Torvalds <torvalds@linux-foundation.org>	2013-11-19 03:07:53 (GMT)
commit	801a76050bcf8d4e500eb8d048ff6265f37a61c8 (patch)
tree	261258d2a4f61f07f238c18ea1087fca6eea9947 /fs/seq_file.c
parent	27b5c3f3cc9c5ce0702db1cca718c827e8b689e9 (diff)

seq_file: always clear m->count when we free m->buf

Once we'd freed m->buf, m->count should become zero - we have no valid
contents reachable via m->buf.

Reported-by: Charley (Hao Chuan) Chu <charley.chu@broadcom.com>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---
 fs/seq_file.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)
 mode change 100644 => 100755 fs/seq_file.c

diff --git a/fs/seq_file.c b/fs/seq_file.c
old mode 100644
new mode 100755
index 774c1eb7f1c9..e358747ecb52
--- a/fs/seq_file.c
+++ b/fs/seq_file.c
@@ -136,6 +136,7 @@ static int traverse(struct seq_file *m, loff_t offset)
 Eoverflow:
 	m->op->stop(m, p);
 	kfree(m->buf);
+	m->count = 0;
 	m->buf = kmalloc(m->size <<= 1, GFP_KERNEL);
 	return !m->buf ? -ENOMEM : -EAGAIN;
 }
@@ -232,10 +233,10 @@ ssize_t seq_read(struct file *file, char __user *buf, size_t size, loff_t *ppos)
 			goto Fill;
 		m->op->stop(m, p);
 		kfree(m->buf);
+		m->count = 0;
 		m->buf = kmalloc(m->size <<= 1, GFP_KERNEL);
 		if (!m->buf)
 			goto Enomem;
-		m->count = 0;
 		m->version = 0;
 		pos = m->index;
 		p = m->op->start(m, &pos);
@@ -328,6 +329,8 @@ loff_t seq_lseek(struct file *file, loff_t offset, int whence)
 				m->read_pos = offset;
 				retval = file->f_pos = offset;
 			}
+		} else {
+			file->f_pos = offset;
 		}
 	}
 	file->f_version = m->version;
-- 
2.19.0

