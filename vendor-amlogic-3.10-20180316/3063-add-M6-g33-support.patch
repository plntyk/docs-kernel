From 49ac9b86d8c9de11b3ef63f2ff7234e3ebb28174 Mon Sep 17 00:00:00 2001
From: "yun.cai" <yun.cai@amlogic.com>
Date: Thu, 16 Jan 2014 20:18:07 +0800
Subject: [PATCH 3063/5965] add M6 g33 support

---
 arch/arm/boot/dts/amlogic/meson6_g18.dtd      |   7 +-
 arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd   |  36 +--
 kernel/sysctl.c                               |  27 ++-
 sound/soc/aml/m6/Makefile                     |   1 +
 sound/soc/aml/m6/aml_audio_codec_probe.c      | 207 ++++++++++++++++++
 sound/soc/aml/m8/Makefile                     |   1 +
 .../common => aml/m8}/aml_audio_codec_probe.c |   0
 sound/soc/codecs/Makefile                     |   2 +-
 8 files changed, 254 insertions(+), 27 deletions(-)
 create mode 100644 sound/soc/aml/m6/aml_audio_codec_probe.c
 rename sound/soc/{codecs/common => aml/m8}/aml_audio_codec_probe.c (100%)
 mode change 100755 => 100644

diff --git a/arch/arm/boot/dts/amlogic/meson6_g18.dtd b/arch/arm/boot/dts/amlogic/meson6_g18.dtd
index 78ed5eb64143..a5c839936c6a 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g18.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g18.dtd
@@ -96,6 +96,7 @@ void root_func(){
         dev_name = "ion_dev";
         status = "ok";
         reserve-memory = <0x01200000>;
+        reserve-iomap = "true";
     };
 
 /// **************************************************************************************	
@@ -111,6 +112,7 @@ void root_func(){
 		dev_name = "mesonfb";
 		status = "okay";
 		reserve-memory = <0x01000000 0x00100000>;
+		reserve-iomap = "true";
 	  vmode = <2>; /*0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P*/
 	  scale_mode = <0>; /*0:default 1:new*/
 	  display_size_default = <1920 1080 1920 2160 32>;
@@ -123,6 +125,7 @@ void root_func(){
 		dev_name = "deinterlace";
 		status = "okay";
 		reserve-memory = <0x02300000>;
+		reserve-iomap = "true";
 	};
 
 /// ***************************************************************************************
@@ -136,6 +139,7 @@ void root_func(){
 		dev_name = "mesonstream.0";
 		status = "okay";
 		reserve-memory = <0x04000000 0x00a00000>;
+		reserve-iomap = "true";
 	};
 
 /// ***************************************************************************************
@@ -148,7 +152,8 @@ void root_func(){
 		compatible = "amlogic,ppmgr";
 		dev_name = "ppmgr";
 		status = "okay";
-		reserve-memory = <0x02c00000>;		
+		reserve-memory = <0x02c00000>;	
+		reserve-iomap = "true";	
 	};
 
 
diff --git a/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd b/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
index 74df3ff1330b..88d35aed7879 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
@@ -96,6 +96,7 @@ void root_func(){
         dev_name = "ion_dev";
         status = "ok";
         reserve-memory = <0x01200000>;
+        reserve-iomap = "true";
     };
 
 /// **************************************************************************************	
@@ -111,6 +112,7 @@ void root_func(){
 		dev_name = "mesonfb";
 		status = "okay";
 		reserve-memory = <0x00500000 0x00100000>;
+		reserve-iomap = "true";
  		vmode = <1>; /**0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P*/
  		display_size_default = <1024 600 1024 1200 32>;
 	};
@@ -124,6 +126,7 @@ void root_func(){
 		dev_name = "mesonfb-ext";
 		status = "disabled";
 		reserve-memory = <0x00500000 0x00100000>;
+		reserve-iomap = "true";
 		display_size_default = <1024 600 1024 1200 32>;
 	 
 	};
@@ -139,16 +142,18 @@ void root_func(){
 		dev_name = "mesonstream.0";
 		status = "okay";
 		reserve-memory = <0x04000000 0x00f00000>;
+		reserve-iomap = "true";
 	};
 
-//	vdin0{
-//		compatible = "amlogic,vdin";
-//		dev_name = "vdin";
-//		status = "okay";
-//		reserve-memory = <0x04000000 0x04000000>;
-//		irq = <115>;
-//		vdin_id = <0>;
-//	};
+	vdin0{
+		compatible = "amlogic,vdin";
+		dev_name = "vdin";
+		status = "okay";
+		reserve-memory = <0x04000000>;
+		reserve-iomap = "true";
+		irq = <115>;
+		vdin_id = <0>;
+	};
 
 	vm{
 		compatible = "amlogic,vm";
@@ -167,6 +172,7 @@ void root_func(){
 		dev_name = "ppmgr";
 		status = "okay";
 		reserve-memory = <0x00d00000>;		
+		reserve-iomap = "true";
 	};
 /// ***************************************************************************************
 ///	-	DISP&MM-Vout
@@ -1057,13 +1063,13 @@ void root_func(){
 /// ***************************************************************************************
 ///	-	Audio
 //$$ MODULE="Audio"
-//$$ DEVICE="audio_platform"
-//$$ L2 PROP_STR = "status"  
-    audio_platform{
-        compatible = "amlogic,aml-audio";
-        dev_name = "aml-audio.0";
-	status = "okay";
-    };
+//$$ DEVICE="audio"
+//$$ L2 PROP_STR = "status"
+		audio{
+			compatible = "amlogic,aml-audio";
+			dev_name = "aml-audio.0";
+			status = "okay";
+		};
 
 //$$ DEVICE="audio_dai"
 //$$ L2 PROP_STR = "status"
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index c32311853aad..11cbf9044f16 100755
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -91,6 +91,9 @@
 #include <linux/nmi.h>
 #endif
 
+#ifdef CONFIG_MESON_SUSPEND
+#include <mach/cpu.h>
+#endif
 
 #if defined(CONFIG_SYSCTL)
 
@@ -273,9 +276,11 @@ static int min_extfrag_threshold;
 static int max_extfrag_threshold = 1000;
 #endif
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 #ifdef CONFIG_MESON_SUSPEND
 extern unsigned int arc_serial_disable;
 #endif
+#endif
 static struct ctl_table kern_table[] = {
 	{
 		.procname	= "sched_child_runs_first",
@@ -1067,6 +1072,7 @@ static struct ctl_table kern_table[] = {
 		.proc_handler	= proc_dointvec,
 	},
 #endif
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 #ifdef CONFIG_MESON_SUSPEND
 	{
 		.procname	= "arc_firm_log",
@@ -1075,6 +1081,7 @@ static struct ctl_table kern_table[] = {
 		.mode		= 0644,
 		.proc_handler	= proc_dointvec,
 	},
+#endif
 #endif
 	{ }
 };
@@ -1120,7 +1127,7 @@ static struct ctl_table vm_table[] = {
 		.proc_handler	= proc_dointvec,
 	},
 	{
-		.procname	= "page-cluster", 
+		.procname	= "page-cluster",
 		.data		= &page_cluster,
 		.maxlen		= sizeof(int),
 		.mode		= 0644,
@@ -1585,7 +1592,7 @@ static struct ctl_table fs_table[] = {
 		.mode		= 0555,
 		.child		= inotify_table,
 	},
-#endif	
+#endif
 #ifdef CONFIG_EPOLL
 	{
 		.procname	= "epoll",
@@ -1923,12 +1930,12 @@ static int __do_proc_dointvec(void *tbl_data, struct ctl_table *table,
 	unsigned long page = 0;
 	size_t left;
 	char *kbuf;
-	
+
 	if (!tbl_data || !table->maxlen || !*lenp || (*ppos && !write)) {
 		*lenp = 0;
 		return 0;
 	}
-	
+
 	i = (int *) tbl_data;
 	vleft = table->maxlen / sizeof(*i);
 	left = *lenp;
@@ -2017,7 +2024,7 @@ static int do_proc_dointvec(struct ctl_table *table, int write,
  * @ppos: file position
  *
  * Reads/writes up to table->maxlen/sizeof(unsigned int) integer
- * values from/to the user buffer, treated as an ASCII string. 
+ * values from/to the user buffer, treated as an ASCII string.
  *
  * Returns 0 on success.
  */
@@ -2376,7 +2383,7 @@ static int do_proc_dointvec_ms_jiffies_conv(bool *negp, unsigned long *lvalp,
  * @ppos: file position
  *
  * Reads/writes up to table->maxlen/sizeof(unsigned int) integer
- * values from/to the user buffer, treated as an ASCII string. 
+ * values from/to the user buffer, treated as an ASCII string.
  * The values read are assumed to be in seconds, and are converted into
  * jiffies.
  *
@@ -2398,8 +2405,8 @@ int proc_dointvec_jiffies(struct ctl_table *table, int write,
  * @ppos: pointer to the file position
  *
  * Reads/writes up to table->maxlen/sizeof(unsigned int) integer
- * values from/to the user buffer, treated as an ASCII string. 
- * The values read are assumed to be in 1/USER_HZ seconds, and 
+ * values from/to the user buffer, treated as an ASCII string.
+ * The values read are assumed to be in 1/USER_HZ seconds, and
  * are converted into jiffies.
  *
  * Returns 0 on success.
@@ -2421,8 +2428,8 @@ int proc_dointvec_userhz_jiffies(struct ctl_table *table, int write,
  * @ppos: the current position in the file
  *
  * Reads/writes up to table->maxlen/sizeof(unsigned int) integer
- * values from/to the user buffer, treated as an ASCII string. 
- * The values read are assumed to be in 1/1000 seconds, and 
+ * values from/to the user buffer, treated as an ASCII string.
+ * The values read are assumed to be in 1/1000 seconds, and
  * are converted into jiffies.
  *
  * Returns 0 on success.
diff --git a/sound/soc/aml/m6/Makefile b/sound/soc/aml/m6/Makefile
index 9fad46a1ac6e..65f03fb43455 100644
--- a/sound/soc/aml/m6/Makefile
+++ b/sound/soc/aml/m6/Makefile
@@ -13,6 +13,7 @@ obj-$(CONFIG_SND_AML_M6_SOC) += aml_notify.o
 obj-$(CONFIG_SND_AML_M6_SOC) += snd-soc-aml-platform.o
 obj-$(CONFIG_SND_AML_M6_SOC) += snd-soc-aml-platform-pcm2bt.o
 obj-$(CONFIG_SND_AML_M6_SOC) += snd-soc-aml-hw-pcm2bt.o
+obj-$(CONFIG_SND_AML_M6_SOC) += aml_audio_codec_probe.o
 
 #AML M6 Machine support
 snd-soc-aml-m6-rt5631-objs := aml_m6_rt5631.o
diff --git a/sound/soc/aml/m6/aml_audio_codec_probe.c b/sound/soc/aml/m6/aml_audio_codec_probe.c
new file mode 100644
index 000000000000..0296a3b564f7
--- /dev/null
+++ b/sound/soc/aml/m6/aml_audio_codec_probe.c
@@ -0,0 +1,207 @@
+/*******************************************************************
+ *
+ *  Copyright C 2010 by Amlogic, Inc. All Rights Reserved.
+ *
+ *  Description:
+ *
+ *  Author: Amlogic Software
+ *
+ *******************************************************************/
+#include <linux/i2c.h>
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/err.h>
+#include <linux/platform_device.h>
+#include <linux/of.h>
+#include <linux/slab.h>
+#include <linux/pinctrl/consumer.h>
+#include <mach/am_regs.h>
+#include <linux/delay.h>
+#include <mach/gpio.h>
+#include <linux/amlogic/aml_audio_codec_probe.h>
+#include <linux/amlogic/aml_gpio_consumer.h>
+
+
+
+extern struct i2c_client * i2c_new_device(struct i2c_adapter *adap,
+            struct i2c_board_info const *info);
+
+
+static struct platform_device* audio_codec_pdev = NULL;
+
+bool is_rt5631;
+bool is_wm8960;
+bool is_rt5616;
+
+static int regist_codec_info(struct device_node* p_node, aml_audio_codec_info_t* audio_codec_dev)
+{
+    int ret = 0;
+    ret = of_property_read_string(p_node, "codec_name", &audio_codec_dev->name);
+    if (ret) {
+        printk("get audio codec name failed!\n");
+    }
+    ret = of_property_read_string(p_node, "status", &audio_codec_dev->status);
+    if(ret){
+        printk("%s:this audio codec is disabled!\n",audio_codec_dev->name);
+    }
+    if(!strcmp(audio_codec_dev->name, "rt5631") && !strcmp(audio_codec_dev->status,"okay")){
+        is_rt5631 = true;
+    }else if(strcmp(audio_codec_dev->name, "wm8960") && strcmp(audio_codec_dev->status,"okay")){
+        is_wm8960 = true;
+    }else if(strcmp(audio_codec_dev->name, "rt5616") && strcmp(audio_codec_dev->status,"okay")){
+        is_rt5616 = true;
+    }
+
+    printk("*********is_rt5631=%d,is_wm8960=%d,is_rt5616=%d*\n",is_rt5631,is_wm8960,is_rt5616);
+    return 0;
+}
+
+
+static int get_audio_codec_i2c_info(struct device_node* p_node, aml_audio_codec_info_t* audio_codec_dev)
+{
+    const char* str;
+    int ret = 0;
+    unsigned i2c_addr;
+    struct i2c_adapter *adapter;
+
+    ret = of_property_read_string(p_node, "codec_name", &audio_codec_dev->name);
+    if (ret) {
+        printk("get audio codec name failed!\n");
+        goto err_out;
+    }
+
+    ret = of_property_match_string(p_node,"status","okay");
+    if(ret){
+        printk("%s:this audio codec is disabled!\n",audio_codec_dev->name);
+        goto err_out;
+    }
+    printk("use audio codec %s\n",audio_codec_dev->name);
+
+    ret = of_property_read_u32(p_node,"capless",&audio_codec_dev->capless);
+    if(ret){
+        printk("don't find audio codec capless mode!\n");
+    }
+
+    ret = of_property_read_string(p_node, "i2c_bus", &str);
+    if (ret) {
+        printk("%s: faild to get i2c_bus str,use default i2c bus!\n", audio_codec_dev->name);
+        audio_codec_dev->i2c_bus_type = AML_I2C_BUS_D;
+    } else {
+        if (!strncmp(str, "i2c_bus_a", 9))
+            audio_codec_dev->i2c_bus_type = AML_I2C_BUS_A;
+        else if (!strncmp(str, "i2c_bus_b", 9))
+            audio_codec_dev->i2c_bus_type = AML_I2C_BUS_B;
+        else if (!strncmp(str, "i2c_bus_c", 9))
+            audio_codec_dev->i2c_bus_type = AML_I2C_BUS_C;
+        else if (!strncmp(str, "i2c_bus_d", 9))
+            audio_codec_dev->i2c_bus_type = AML_I2C_BUS_D;
+        else if (!strncmp(str, "i2c_bus_ao", 10))
+            audio_codec_dev->i2c_bus_type = AML_I2C_BUS_AO;
+        else
+            audio_codec_dev->i2c_bus_type = AML_I2C_BUS_D;
+    }
+
+    ret = of_property_read_u32(p_node,"i2c_addr",&i2c_addr);
+    if(ret){
+        printk("don't find i2c adress capless,use default!\n");
+        audio_codec_dev->i2c_addr = 0x1B;
+    }else{
+        audio_codec_dev->i2c_addr = i2c_addr;
+    }
+    printk("audio codec addr: 0x%x\n", audio_codec_dev->i2c_addr);
+    printk("audio codec i2c bus: %d\n", audio_codec_dev->i2c_bus_type);
+
+    /* test if the camera is exist */
+    adapter = i2c_get_adapter(audio_codec_dev->i2c_bus_type);
+    if (!adapter) {
+        printk("can not do probe function\n");
+        ret = -1;
+        goto err_out;
+    }
+    ret = 0;
+
+err_out:
+    return ret;
+}
+
+
+static int aml_audio_codec_probe(struct platform_device *pdev)
+{
+    struct device_node* audio_codec_node = pdev->dev.of_node;
+    struct device_node* child;
+    struct i2c_board_info board_info;
+    struct i2c_adapter *adapter;
+    aml_audio_codec_info_t temp_audio_codec;
+    audio_codec_pdev = pdev;
+    is_rt5631 = false;
+    is_wm8960 = false;
+    is_rt5616 = false;
+    for_each_child_of_node(audio_codec_node, child) {
+
+        memset(&temp_audio_codec, 0, sizeof(aml_audio_codec_info_t));
+        regist_codec_info(child,&temp_audio_codec);
+        if (get_audio_codec_i2c_info(child, &temp_audio_codec)) {
+            continue;
+        }
+        memset(&board_info, 0, sizeof(board_info));
+        strncpy(board_info.type, temp_audio_codec.name, I2C_NAME_SIZE);
+        adapter = i2c_get_adapter(temp_audio_codec.i2c_bus_type);
+        board_info.addr = temp_audio_codec.i2c_addr;
+        board_info.platform_data = &temp_audio_codec;
+        i2c_new_device(adapter, &board_info);
+    }
+    return 0;
+}
+
+
+static int aml_audio_codec_remove(struct platform_device *pdev)
+{
+    is_rt5631 = false;
+    is_wm8960 = false;
+    is_rt5616 = false;
+
+    return 0;
+}
+
+static const struct of_device_id aml_audio_codec_probe_dt_match[]={
+    {
+        .compatible = "amlogic,audio_codec",
+    },
+    {},
+};
+
+static  struct platform_driver aml_audio_codec_probe_driver = {
+    .probe      = aml_audio_codec_probe,
+    .remove     = aml_audio_codec_remove,
+    .driver     = {
+        .name   = "aml_audio_codec_probe",
+        .owner  = THIS_MODULE,
+        .of_match_table = aml_audio_codec_probe_dt_match,
+    },
+};
+
+static int __init aml_audio_codec_probe_init(void)
+{
+    int ret;
+
+    ret = platform_driver_register(&aml_audio_codec_probe_driver);
+    if (ret){
+        printk(KERN_ERR"aml_audio_codec_probre_driver register failed\n");
+        return ret;
+    }
+
+    return ret;
+}
+
+static void __exit aml_audio_codec_probe_exit(void)
+{
+    platform_driver_unregister(&aml_audio_codec_probe_driver);
+}
+
+module_init(aml_audio_codec_probe_init);
+module_exit(aml_audio_codec_probe_exit);
+
+MODULE_LICENSE("GPL v2");
+MODULE_DESCRIPTION("Amlogic Audio Codec prober driver");
+
diff --git a/sound/soc/aml/m8/Makefile b/sound/soc/aml/m8/Makefile
index b0db67d6bb7f..b9544d711138 100755
--- a/sound/soc/aml/m8/Makefile
+++ b/sound/soc/aml/m8/Makefile
@@ -18,6 +18,7 @@ obj-$(CONFIG_SND_AML_M8_SOC) += aml_notify.o
 #obj-$(CONFIG_SND_AML_M8_SOC) += snd-soc-aml-platform-pcm2bt.o
 obj-$(CONFIG_SND_AML_M8_SOC) += snd-soc-aml-hw-pcm2bt.o
 obj-$(CONFIG_SND_AML_M8_SOC) += snd-soc-aml-spdif-dai.o
+obj-$(CONFIG_SND_AML_M8_SOC) += aml_audio_codec_probe.o
 
 #AML spdif codec support
 snd-soc-aml-spdif-codec-objs := aml_spdif_codec.o
diff --git a/sound/soc/codecs/common/aml_audio_codec_probe.c b/sound/soc/aml/m8/aml_audio_codec_probe.c
old mode 100755
new mode 100644
similarity index 100%
rename from sound/soc/codecs/common/aml_audio_codec_probe.c
rename to sound/soc/aml/m8/aml_audio_codec_probe.c
diff --git a/sound/soc/codecs/Makefile b/sound/soc/codecs/Makefile
index d80510eec2f8..709ecf5f8c41 100755
--- a/sound/soc/codecs/Makefile
+++ b/sound/soc/codecs/Makefile
@@ -250,7 +250,7 @@ obj-$(CONFIG_SND_SOC_WM_ADSP)	+= snd-soc-wm-adsp.o
 obj-$(CONFIG_SND_SOC_WM_HUBS)	+= snd-soc-wm-hubs.o
 obj-$(CONFIG_SND_SOC_DUMMY_CODEC)   += snd-soc-dummy_codec.o
 obj-$(CONFIG_SND_SOC_AML_M8_CODEC)	+= snd-soc-aml-m8-codec.o
-obj-y += aml_audio_codec_probe.o
+#obj-y += aml_audio_codec_probe.o
 obj-$(CONFIG_SND_SOC_PCM2BT)    += snd-soc-pcm2bt.o
 
 # Amp
-- 
2.19.0

