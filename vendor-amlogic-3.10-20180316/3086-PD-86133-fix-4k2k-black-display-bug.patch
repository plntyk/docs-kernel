From c88c8041bb8f96b36b66a414188104706482e256 Mon Sep 17 00:00:00 2001
From: "shuai.cao" <shuai.cao@amlogic.com>
Date: Mon, 20 Jan 2014 16:04:52 +0800
Subject: [PATCH 3086/5965] PD# 86133: fix 4k2k black display bug

---
 drivers/amlogic/amports/video.c            | 23 ++++++++++++++++------
 drivers/amlogic/amports/video_prot.c       |  1 +
 include/linux/amlogic/amports/video_prot.h |  1 +
 3 files changed, 19 insertions(+), 6 deletions(-)

diff --git a/drivers/amlogic/amports/video.c b/drivers/amlogic/amports/video.c
index 4304c5ffe9ef..7e1493e22528 100755
--- a/drivers/amlogic/amports/video.c
+++ b/drivers/amlogic/amports/video.c
@@ -236,6 +236,8 @@ static int video_onoff_state = VIDEO_ENABLE_STATE_IDLE;
          if (!use_prot) { \
              VD1_MEM_POWER_ON(); \
              VIDEO_LAYER_ON(); \
+         } else {\
+             VD1_MEM_POWER_ON(); \
          } \
     } while (0)
 #else
@@ -1869,8 +1871,10 @@ static irqreturn_t vsync_isr(int irq, void *dev_id)
         PROT_MEM_POWER_OFF();
         video_prot_clear(&video_prot);
         video_prot.power_down = 0;
-        video_prot.power_on = 0;
+        //video_prot.power_on = 0;
         video_prot.angle_changed = 0;
+        video_prot.enable_layer = 0;
+        video_property_changed = true;
     }
     if (use_prot && video_prot.power_down) {
         video_prot_set_angle(&video_prot, 0);
@@ -1894,20 +1898,19 @@ static irqreturn_t vsync_isr(int irq, void *dev_id)
         }
         u32 angle_orientation = (video_angle + video_prot.src_vframe_orientation) % 4;
         u32 last_angle_orientation = (video_prot.angle + video_prot.src_vframe_orientation) % 4;
-        if (angle_orientation != last_angle_orientation || video_prot.enable_layer) {
+        if (video_prot.enable_layer || get_vpu_mem_pd_vmod(VPU_PIC_ROT2) == VPU_MEM_POWER_DOWN) {
             if (angle_orientation % 2) {
                 if (video_prot.angle_changed & 0x1) {
                     video_prot.angle_changed = 0x2;
                     video_prot_set_angle(&video_prot, 0);
                     video_prot_gate(0);
                     video_prot_set_angle(&video_prot, 0);
-                    wait_count = 20;
+                    wait_count = 50;
                     return IRQ_HANDLED;
                 } else if (video_prot.angle_changed & 0x2) {
                     if (wait_count-- > 0) {
                         return IRQ_HANDLED;
                     }
-                    VD1_MEM_POWER_ON();
                     VIDEO_LAYER_ON();
                     video_prot.angle = angle_orientation;
                     video_prot.status = angle_orientation % 2;
@@ -1927,13 +1930,21 @@ static irqreturn_t vsync_isr(int irq, void *dev_id)
                     video_prot.angle_changed = 0;
                 }
             }
-
+        } else if (angle_orientation != last_angle_orientation) {
+            if (video_prot.angle_changed & 0x1) {
+                video_prot.angle = angle_orientation;
+                video_prot.status = angle_orientation % 2;
+                video_prot_set_angle(&video_prot, angle_orientation);
+                video_prot_gate(video_prot.status);
+                video_property_changed = 1;
+                video_prot.angle_changed = 0;
+            }
         } else {
             video_prot.angle_changed = 0;
         }
         if (video_prot.enable_layer) {
             wait_count = 20;
-            VD1_MEM_POWER_ON();
+            //VD1_MEM_POWER_ON();
             VIDEO_LAYER_ON();
             video_prot.enable_layer = 0;
             return IRQ_HANDLED;
diff --git a/drivers/amlogic/amports/video_prot.c b/drivers/amlogic/amports/video_prot.c
index 8666e789d831..797b76ec55cd 100755
--- a/drivers/amlogic/amports/video_prot.c
+++ b/drivers/amlogic/amports/video_prot.c
@@ -206,6 +206,7 @@ void video_prot_init(video_prot_t* video_prot, vframe_t *vf) {
     video_prot->y_end = vf->height - 1;
     video_prot->viu_type = vf->type;
     video_prot->src_vframe_orientation = vf->orientation;
+    video_prot->disable_prot = 0;
 
 }
 
diff --git a/include/linux/amlogic/amports/video_prot.h b/include/linux/amlogic/amports/video_prot.h
index e9e7deada83f..70e5872ca41f 100755
--- a/include/linux/amlogic/amports/video_prot.h
+++ b/include/linux/amlogic/amports/video_prot.h
@@ -27,6 +27,7 @@ typedef struct {
     u32 power_down;
     u32 power_on;
     u32 use_prot;
+    u32 disable_prot;
     u32 x_start;
     u32 y_start;
     u32 x_end;
-- 
2.19.0

