From 742aef4faed84f157fa7ed9c1a7c17403c12f100 Mon Sep 17 00:00:00 2001
From: "rongrong.zhou" <rongrong.zhou@amlogic.com>
Date: Fri, 24 Jan 2014 13:32:35 +0800
Subject: [PATCH 3107/5965] merge from amlogic-3.0 
 907e63df30c6e8c1cf52c85beb4084dacc6d7fc3 PD #74814 Play "tears of steel" with
 mosaic, non allow write again. Did not write data when buf is full, return
 EAGAIN.  Play music, when drm write, esparser write failed, return r.

---
 drivers/amlogic/amports/esparser.c | 44 +++++++++++++++---------------
 1 file changed, 22 insertions(+), 22 deletions(-)

diff --git a/drivers/amlogic/amports/esparser.c b/drivers/amlogic/amports/esparser.c
index 4eaa1bec6c58..b13185e53a8b 100755
--- a/drivers/amlogic/amports/esparser.c
+++ b/drivers/amlogic/amports/esparser.c
@@ -35,8 +35,7 @@
 #include <asm/atomic.h>
 
 #include <mach/am_regs.h>
-
-
+#include <linux/delay.h>
 
 #include "vdec_reg.h"
 #include "streambuf_reg.h"
@@ -460,9 +459,10 @@ ssize_t drm_write(struct file *file,
 {
     s32 r;
     u32 len ;
-    u32 realcount;
+    u32 realcount,totalcount;
     u32 re_count = count;
     u32 havewritebytes =0;
+    u32 leftcount = 0;
 
     drminfo_t tmpmm;
     drminfo_t *drm=&tmpmm;
@@ -497,21 +497,17 @@ ssize_t drm_write(struct file *file,
 	
     len = realcount ;
     count = realcount;
+    totalcount = realcount;
 
     while (len > 0) {
         if (stbuf->type!=BUF_TYPE_SUBTITLE && stbuf_space(stbuf) < count) {
-            if (file->f_flags & O_NONBLOCK) {/*subtitle have no level to check,*/
-                len = stbuf_space(stbuf) ;	
-                if (len<256) //<1k.do eagain,
+            len = min(stbuf_canusesize(stbuf) / 8, len);
+            if (stbuf_space(stbuf) < len) {
+            r = stbuf_wait_space(stbuf, len);
+            if ((r < leftcount) && (leftcount > 0)) { // write part data , not allow return ;
+                continue;
+            }else if ((r < 0)&&(leftcount==0)){//buf is full;
                     return -EAGAIN;
-        	} else {
-	            len = min(stbuf_canusesize(stbuf) / 8, len);
-	            if (stbuf_space(stbuf) < len) {
-	                r = stbuf_wait_space(stbuf, len);
-	                if (r < 0) {
-                            DRM_PRNT("r<0");
-	                    return r;
-	                }
 	            }
             }
     	}
@@ -520,21 +516,25 @@ ssize_t drm_write(struct file *file,
     	mutex_lock(&esparser_mutex);
 
         r = _esparser_write(buf,len,stbuf->type,isphybuf);
+        if (r < 0){
+            printk("drm_write _esparser_write failed [%d]\n",r);
+            return r;
+        }
         havewritebytes += r;
-	if (havewritebytes == realcount) {
+        leftcount = totalcount - havewritebytes;
+        if (havewritebytes == totalcount){
+
             mutex_unlock(&esparser_mutex);
             break;//write ok;
-        }else if ((havewritebytes==len)&&(len==realcount)){
-            mutex_unlock(&esparser_mutex);
-            break;//write finish;	
-        }else if (havewritebytes < realcount ){
-            DRM_PRNT("writeagain  havewritebytes[%d]  wantwrite[%d] realwrite[%d] totallen[%d]\n",havewritebytes,len,r,realcount);
+        }else if ((len > 0 )&& (havewritebytes < totalcount)){
+            DRM_PRNT("writeagain havewritebytes[%d] wantwrite[%d] totalcount[%d] realcount[%d] \n",
+                              havewritebytes,len,totalcount,realcount);
             len = len-r;//write again;
             buf=buf+r;
         }else{
-            printk("###else  havewritebytes[%d]  wantwrite[%d] realwrite[%d] totallen[%d]\n",havewritebytes,len,r,realcount);
+            printk("###else havewritebytes[%d] wantwrite[%d] totalcount[%d] realcount[%d]\n",
+                havewritebytes,len,totalcount,realcount);
         }
-
         mutex_unlock(&esparser_mutex);
     }
 
-- 
2.19.0

