From 732e9bb454432ad92f0107030452aafcbe9c1b76 Mon Sep 17 00:00:00 2001
From: "wei.nie" <wei.nie@amlogic.com>
Date: Tue, 28 Jan 2014 16:32:54 +0800
Subject: [PATCH 3145/5965] PD#set mesonfb-ext buffer size to 0 for HDMI dual
 out,save memory

---
 arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd  |  2 +-
 arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd  |  2 +-
 arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd  |  2 +-
 .../arm/boot/dts/amlogic/meson8_k101_512M.dtd |  2 +-
 arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd  |  2 +-
 drivers/amlogic/display/osd_ext/osd_hw.c      | 13 +++-
 drivers/amlogic/display/osd_ext/osd_main.c    | 64 +++++++++++++------
 7 files changed, 58 insertions(+), 29 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
index a6966a5abfb1..55939112e9f6 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
@@ -135,7 +135,7 @@ void root_func(){
 		compatible = "amlogic,mesonfb-ext";
 		dev_name = "mesonfb-ext";
 		status = "ok";
-		reserve-memory = <0x02400000  0x00100000>; 	 
+		need-memory = <0>; /*0:no need,1:need*/
 		display_size_default = <2048 1536 2048 4608 32>;//2048x1536x4x3=0x02400000
 		reserve-iomap = "true";
 	 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
index 194b3ce5a699..c4daf71ef14d 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
@@ -134,7 +134,7 @@ void root_func(){
 		compatible = "amlogic,mesonfb-ext";
 		dev_name = "mesonfb-ext";
 		status = "ok";
-		reserve-memory = <0x02400000  0x00100000>; 	 
+		need-memory = <0>; /*0:no need,1:need*/
 		display_size_default = <2048 1536 2048 4608 32>;//2048x1536x4x3=0x02400000
 	 
 	};
diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
index 98edf3c59012..0e7ca06ec77f 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
@@ -136,7 +136,7 @@ void root_func(){
 		compatible = "amlogic,mesonfb-ext";
 		dev_name = "mesonfb-ext";
 		status = "ok";
-	   	reserve-memory = <0x01000000  0x00100000>;
+		need-memory = <0>; /*0:no need,1:need*/
 	   	reserve-iomap = "true";
         display_size_default = <768 1024 768 3072 32>;//1024x768x4x3==0x0900000 < 0x01000000
 	 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
index 27b687a33a3e..c4e919da7c7a 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
@@ -136,7 +136,7 @@ void root_func(){
 		compatible = "amlogic,mesonfb-ext";
 		dev_name = "mesonfb-ext";
 		status = "ok";
-	   	reserve-memory = <0x0900000  0x00100000>;
+		need-memory = <0>; /*0:no need,1:need*/
 	   	reserve-iomap = "true";
         display_size_default = <768 1024 768 3072 32>;//1024x768x4x3==0x0900000 < 0x01000000
 	 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd
index 499adad6e92d..49d3dd7d4fb7 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd
@@ -136,7 +136,7 @@ void root_func(){
 		compatible = "amlogic,mesonfb-ext";
 		dev_name = "mesonfb-ext";
 		status = "ok";
-	   	reserve-memory = <0x01000000  0x00100000>;
+		need-memory = <0>; /*0:no need,1:need*/
 	   	reserve-iomap = "true";
         display_size_default = <768 1024 768 3072 32>;//1024x768x4x3==0x0900000 < 0x01000000
 	 
diff --git a/drivers/amlogic/display/osd_ext/osd_hw.c b/drivers/amlogic/display/osd_ext/osd_hw.c
index 0ffe82aecf39..713d32978db6 100755
--- a/drivers/amlogic/display/osd_ext/osd_hw.c
+++ b/drivers/amlogic/display/osd_ext/osd_hw.c
@@ -511,9 +511,16 @@ void osd_ext_setup(struct osd_ctl_s *osd_ext_ctl,
 		osd_ext_hw.fb_gem[index].addr = fbmem;
 		osd_ext_hw.fb_gem[index].width = w;
 		osd_ext_hw.fb_gem[index].height = yres_virtual;
-		canvas_config(osd_ext_hw.fb_gem[index].canvas_idx, osd_ext_hw.fb_gem[index].addr,
-			      osd_ext_hw.fb_gem[index].width, osd_ext_hw.fb_gem[index].height,
-			      CANVAS_ADDR_NOWRAP, CANVAS_BLKMODE_LINEAR);
+
+		if(fbmem == 0){
+			canvas_config(osd_ext_hw.fb_gem[index].canvas_idx, osd_hw.fb_gem[index].addr,
+				osd_ext_hw.fb_gem[index].width, osd_ext_hw.fb_gem[index].height,
+				CANVAS_ADDR_NOWRAP, CANVAS_BLKMODE_LINEAR);
+		}else{
+			canvas_config(osd_ext_hw.fb_gem[index].canvas_idx, osd_ext_hw.fb_gem[index].addr,
+				osd_ext_hw.fb_gem[index].width, osd_ext_hw.fb_gem[index].height,
+				CANVAS_ADDR_NOWRAP, CANVAS_BLKMODE_LINEAR);
+		}
 	}
 
 	if (color != osd_ext_hw.color_info[index]) {
diff --git a/drivers/amlogic/display/osd_ext/osd_main.c b/drivers/amlogic/display/osd_ext/osd_main.c
index e850f7c2259e..9a76eade5c7d 100755
--- a/drivers/amlogic/display/osd_ext/osd_main.c
+++ b/drivers/amlogic/display/osd_ext/osd_main.c
@@ -1367,6 +1367,7 @@ osd_ext_probe(struct platform_device *pdev)
 	logo_object_t  *init_logo_obj = NULL;
 	int  logo_osd_ext_index = 0, i;
 	myfb_dev_t 	*fbdev = NULL;
+	int osd_ext_memory = 0;	//0:don't need osd_ext memory,1:need osd_ext memory
 
 	vout2_register_client(&osd_ext_notifier_nb);
 
@@ -1376,6 +1377,12 @@ osd_ext_probe(struct platform_device *pdev)
 		osddev_ext_init();
 	}
 	vinfo = get_current_vinfo2();
+
+	ret = of_property_read_u32_array(pdev->dev.of_node, "need-memory", &osd_ext_memory, 1);
+	if(ret){
+		printk("don't find need osd_ext memory from mesonfb_ext-dts\n");
+	}
+
 	for (index = 0; index < OSD_COUNT; index++) {
 		//platform resource
 #if 0
@@ -1391,15 +1398,17 @@ osd_ext_probe(struct platform_device *pdev)
 			continue ;
 		}
 #else
-		mem = &memobj;
-		ret = find_reserve_block(pdev->dev.of_node->name,index);
-		if(ret < 0){
-			amlog_level(LOG_LEVEL_HIGH,"can not find %s%d reserve block\n",pdev->dev.of_node->name,index);
-			r = -EFAULT;
-			goto failed2;
+		if(osd_ext_memory){
+			mem = &memobj;
+			ret = find_reserve_block(pdev->dev.of_node->name,index);
+			if(ret < 0){
+				amlog_level(LOG_LEVEL_HIGH,"can not find %s%d reserve block\n",pdev->dev.of_node->name,index);
+				r = -EFAULT;
+				goto failed2;
+			}
+			mem->start = (phys_addr_t)get_reserve_block_addr(ret);
+			mem->end = mem->start+ (phys_addr_t)get_reserve_block_size(ret)-1;
 		}
-		mem->start = (phys_addr_t)get_reserve_block_addr(ret);
-		mem->end = mem->start+ (phys_addr_t)get_reserve_block_size(ret)-1;
 #endif
 		fbi = framebuffer_alloc(sizeof(struct myfb_dev), &pdev->dev);
 		if (!fbi) {
@@ -1417,14 +1426,19 @@ osd_ext_probe(struct platform_device *pdev)
 		fix = &fbi->fix;
 
 		gp_fbdev_list[index] = fbdev;
-		fbdev->fb_mem_paddr = mem->start;
-		fbdev->fb_len = mem->end - mem->start + 1;
-		fbdev->fb_mem_vaddr = ioremap_wc(fbdev->fb_mem_paddr, fbdev->fb_len);
 
-		if (!fbdev->fb_mem_vaddr) {
-			amlog_level(LOG_LEVEL_HIGH, "failed to ioremap framebuffer\n");
-			r = -ENOMEM;
-			goto failed1;
+		if(osd_ext_memory){
+			fbdev->fb_mem_paddr = mem->start;
+			fbdev->fb_len = mem->end - mem->start + 1;
+			fbdev->fb_mem_vaddr = ioremap_wc(fbdev->fb_mem_paddr, fbdev->fb_len);
+
+			if (!fbdev->fb_mem_vaddr) {
+				amlog_level(LOG_LEVEL_HIGH, "failed to ioremap framebuffer\n");
+				r = -ENOMEM;
+				goto failed1;
+			}
+		}else{
+			fbdev->fb_mem_paddr = 0;		//osd_ext don't need memory
 		}
 
 		//clear framebuffer memory
@@ -1477,10 +1491,14 @@ osd_ext_probe(struct platform_device *pdev)
 			r = -ENOENT;
 			goto failed1;
 		}
-		Bpp = (fbdev->color->color_index > 8 ? (fbdev->color->color_index > 16 ? (fbdev->color->color_index > 24 ? 4 : 3) : 2) : 1);
-		fix->line_length = var->xres_virtual * Bpp;
-		fix->smem_start = fbdev->fb_mem_paddr;
-		fix->smem_len = fbdev->fb_len;
+
+		if(osd_ext_memory){
+			Bpp = (fbdev->color->color_index > 8 ? (fbdev->color->color_index > 16 ? (fbdev->color->color_index > 24 ? 4 : 3) : 2) : 1);
+			fix->line_length = var->xres_virtual * Bpp;
+			fix->smem_start = fbdev->fb_mem_paddr;
+			fix->smem_len = fbdev->fb_len;
+		}
+
 		if (fb_alloc_cmap(&fbi->cmap, 16, 0) != 0) {
 			amlog_level(LOG_LEVEL_HIGH, "unable to allocate color map memory\n");
 			r = -ENOMEM;
@@ -1495,8 +1513,12 @@ osd_ext_probe(struct platform_device *pdev)
 		memset(fbi->pseudo_palette, 0, sizeof(u32) * 16);
 
 		fbi->fbops = &osd_ext_ops;
-		fbi->screen_base = (char __iomem *)fbdev->fb_mem_vaddr ;
-		fbi->screen_size = fix->smem_len;
+
+		if(osd_ext_memory){
+			fbi->screen_base = (char __iomem *)fbdev->fb_mem_vaddr ;
+			fbi->screen_size = fix->smem_len;
+		}
+
 		set_default_display_axis(&fbdev->fb_info->var, &fbdev->osd_ext_ctl, vinfo);
 		osd_ext_check_var(var, fbi);
 		register_framebuffer(fbi);
-- 
2.19.0

