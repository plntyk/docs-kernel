From 7bb33f29fe67089ccb9a31d0828841a252d3e897 Mon Sep 17 00:00:00 2001
From: "yu.zheng" <yu.zheng@amlogic.com>
Date: Wed, 29 Jan 2014 16:50:19 +0800
Subject: [PATCH 3256/5965] PD: #85481: HDMI M8: hdmi audio update strategies
 changed for monkey test.

---
 debug                                  |  1 +
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c | 50 ++++++++++++++++++++------
 2 files changed, 41 insertions(+), 10 deletions(-)
 create mode 100644 debug

diff --git a/debug b/debug
new file mode 100644
index 000000000000..b6623585d2c6
--- /dev/null
+++ b/debug
@@ -0,0 +1 @@
+rc10c8
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index dad258aad9bb..f10466fcfc4e 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -900,6 +900,7 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
     struct snd_pcm_substream *substream =(struct snd_pcm_substream*)para;
     Hdmi_tx_audio_para_t* audio_param = &(hdmitx_device.cur_audio_param);
 
+    hdmitx_device.audio_param_update_flag = 0;
     switch (substream->runtime->rate) {
         case 192000:
             audio_param->sample_rate = FS_192K;
@@ -914,10 +915,16 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
             audio_param->sample_rate = FS_88K2;
             break;
         case 48000:
-            audio_param->sample_rate = FS_48K;
+            if(audio_param->sample_rate != FS_48K) {
+                audio_param->sample_rate = FS_48K; 
+                hdmitx_device.audio_param_update_flag = 1;
+            }
             break;
         case 44100:
-            audio_param->sample_rate = FS_44K1;
+            if(audio_param->sample_rate != FS_44K1) {
+                audio_param->sample_rate = FS_44K1;
+                hdmitx_device.audio_param_update_flag = 1;
+            }
             break;
         case 32000:
             audio_param->sample_rate = FS_32K;
@@ -930,13 +937,25 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
 
     switch (cmd){
     case AOUT_EVENT_IEC_60958_PCM:
-        audio_param->type = CT_PCM;
-        audio_param->sample_size = SS_16BITS;
+        if(audio_param->type != CT_PCM) {
+            audio_param->type = CT_PCM;
+            hdmitx_device.audio_param_update_flag = 1;
+        }
+        if(audio_param->sample_size != SS_16BITS) {
+            audio_param->sample_size = SS_16BITS;
+            hdmitx_device.audio_param_update_flag = 1;
+        }
         hdmi_print(INF, AUD "aout notify format PCM\n");
         break;
     case AOUT_EVENT_RAWDATA_AC_3:
-        audio_param->type = CT_AC_3;
-        audio_param->sample_size = SS_16BITS;
+        if(audio_param->type != CT_AC_3) {
+            audio_param->type = CT_AC_3;
+            hdmitx_device.audio_param_update_flag = 1;
+        }
+        if(audio_param->sample_size = SS_16BITS ) {
+            audio_param->sample_size = SS_16BITS;
+            hdmitx_device.audio_param_update_flag = 1;
+        }
         hdmi_print(INF, AUD "aout notify format AC-3\n");
         break;
     case AOUT_EVENT_RAWDATA_MPEG1:
@@ -975,8 +994,14 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
         hdmi_print(INF, AUD "aout notify format One Bit Audio\n");
         break;
     case AOUT_EVENT_RAWDATA_DOBLY_DIGITAL_PLUS:
-        audio_param->type = CT_DOLBY_D;
-        audio_param->sample_size = SS_16BITS;
+        if(audio_param->type != CT_DOLBY_D) {
+            audio_param->type = CT_DOLBY_D;
+            hdmitx_device.audio_param_update_flag = 1;
+        }
+        if(audio_param->sample_size != SS_16BITS) {
+            audio_param->sample_size = SS_16BITS;
+            hdmitx_device.audio_param_update_flag = 1;
+        }
         //audio_param->sample_rate = FS_48K;//192K;      // FS_48K;       //
         hdmi_print(INF, AUD "aout notify format Dobly Digital +\n");
         break;
@@ -1004,9 +1029,14 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
         break;
     }
 
-    audio_param->channel_num = substream->runtime->channels - 1;
+    if(audio_param->channel_num != (substream->runtime->channels - 1)) {
+        audio_param->channel_num = substream->runtime->channels - 1;
+        hdmitx_device.audio_param_update_flag = 1;
+    }
+
+    if(hdmitx_device.audio_param_update_flag == 0)
+        printk("HDMI: no audio update\n");
 
-    hdmitx_device.audio_param_update_flag = 1;
     return 0;
 }
 
-- 
2.19.0

