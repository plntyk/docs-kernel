From c2177aa2739a8df2f687999198eaf8b13ec4f5da Mon Sep 17 00:00:00 2001
From: "shi.liu" <shi.liu@amlogic.com>
Date: Fri, 14 Feb 2014 10:19:06 +0800
Subject: [PATCH 3349/5965] PD #86969: mm: optimize kswapd

---
 include/linux/mmzone.h | 2 +-
 mm/vmscan.c            | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/include/linux/mmzone.h b/include/linux/mmzone.h
index fb73d93ed238..d8867d762884 100644
--- a/include/linux/mmzone.h
+++ b/include/linux/mmzone.h
@@ -786,7 +786,7 @@ extern int init_currently_empty_zone(struct zone *zone, unsigned long start_pfn,
 				     enum memmap_context context);
 
 extern void lruvec_init(struct lruvec *lruvec);
-#define START_KSWAPD_FREE_PAGE_THRESH 32768
+#define START_KSWAPD_FREE_PAGE_THRESH 16384
 static inline struct zone *lruvec_zone(struct lruvec *lruvec)
 {
 #ifdef CONFIG_MEMCG
diff --git a/mm/vmscan.c b/mm/vmscan.c
index 3df5eb61a3f9..0850ddc28007 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -2815,8 +2815,8 @@ loop_again:
 				testorder = 0;
 
 			if ((buffer_heads_over_limit && is_highmem_idx(i)) ||
-			    !zone_balanced(zone, testorder,
-					   balance_gap, end_zone)) {
+			    !zone_balanced(zone, testorder, balance_gap, end_zone) ||
+				(global_page_state(NR_FREE_PAGES) < START_KSWAPD_FREE_PAGE_THRESH)) {
 				shrink_zone(zone, &sc);
 
 				reclaim_state->reclaimed_slab = 0;
-- 
2.19.0

