From 4fad36922cbed66cb454e6bde94a5bfc87c62b43 Mon Sep 17 00:00:00 2001
From: "wei.nie" <wei.nie@amlogic.com>
Date: Sat, 8 Feb 2014 16:00:04 +0800
Subject: [PATCH 3356/5965] PD#86733:G33 Hdmi dual display hdmi:shaking
 ,panel:always black

---
 arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd  | 27 ++++++++++----------
 arch/arm/configs/meson6_defconfig            |  8 +++++-
 arch/arm/mach-meson6/include/mach/register.h |  4 +++
 drivers/amlogic/display/osd_ext/osd_hw.c     | 18 +++++++++++--
 drivers/amlogic/display/vout2/vout2_serve.c  |  4 +--
 5 files changed, 42 insertions(+), 19 deletions(-)
 mode change 100644 => 100755 arch/arm/mach-meson6/include/mach/register.h

diff --git a/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd b/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
index acc8a215c76b..f2684c46089d 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
@@ -117,19 +117,18 @@ void root_func(){
  		display_size_default = <1024 600 1024 1200 32>;
 	};
 	
-//$$ DEVICE = "mesonfb-ext"
-//$$ L2 PROP_STR = "status"
-//$$ L3 PROP_U32 2 ="reserve-memory"
-//$$ L2 PROP_U32 5 = "display_size_default"
-	mesonfb-ext{
-		compatible = "amlogic,mesonfb-ext";
-		dev_name = "mesonfb-ext";
-		status = "disabled";
-		reserve-memory = <0x00500000 0x00100000>;
-		reserve-iomap = "true";
-		display_size_default = <1024 600 1024 1200 32>;
-	 
-	};
+//$$ DEVICE = "mesonfb-ext"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 2 ="reserve-memory"
+//$$ L2 PROP_U32 5 = "display_size_default"
+	mesonfb-ext{
+		compatible = "amlogic,mesonfb-ext";
+		dev_name = "mesonfb-ext";
+		status = "okay";
+		need-memory = <0>; /*0:no need,1:need*/
+		display_size_default = <1024 600 1024 1200 32>;
+		reserve-iomap= "true";
+	};
 
 /// ***************************************************************************************
 ///	-	DISP&MM-A/V stream
@@ -208,7 +207,7 @@ void root_func(){
 	mesonvout2{
 		compatible = "amlogic,mesonvout2";
 		dev_name = "mesonvout2";
-		status = "disabled";
+		status = "okay";
 	};	
 /// ***************************************************************************************
 ///	-	RTC
diff --git a/arch/arm/configs/meson6_defconfig b/arch/arm/configs/meson6_defconfig
index 69aac2a2e414..896bd64c6d6f 100755
--- a/arch/arm/configs/meson6_defconfig
+++ b/arch/arm/configs/meson6_defconfig
@@ -130,8 +130,14 @@ CONFIG_BRIDGE=y
 # CONFIG_BRIDGE_IGMP_SNOOPING is not set
 CONFIG_VSYNC_RDMA=y
 CONFIG_AM_VIDEO=y
+CONFIG_AM_TV_OUTPUT2=y
 CONFIG_FB_AM=y
 CONFIG_FB_OSD2_CURSOR=y
+CONFIG_FB_OSD2_DEFAULT_WIDTH=32
+CONFIG_FB_OSD2_DEFAULT_HEIGHT=32
+CONFIG_FB_OSD2_DEFAULT_WIDTH_VIRTUAL=32
+CONFIG_FB_OSD2_DEFAULT_HEIGHT_VIRTUAL=32
+CONFIG_AM_FB_EXT=y
 CONFIG_AM_GE2D=y
 CONFIG_AM_LOGO=y
 CONFIG_PHONET=y
@@ -151,7 +157,7 @@ CONFIG_RFKILL=y
 CONFIG_RFKILL_INPUT=y
 CONFIG_EARLY_INIT=y
 CONFIG_I2C_AML=y
-CONFIG_SARADC_AM=y
+#CONFIG_SARADC_AM=y
 CONFIG_AM_REMOTE=y
 # CONFIG_MESON_NEW_INPUT_REMOTE is not set
 CONFIG_ADC_KEYPADS_AM=y
diff --git a/arch/arm/mach-meson6/include/mach/register.h b/arch/arm/mach-meson6/include/mach/register.h
old mode 100644
new mode 100755
index 58baa9b13529..1ea26e945b5f
--- a/arch/arm/mach-meson6/include/mach/register.h
+++ b/arch/arm/mach-meson6/include/mach/register.h
@@ -1194,6 +1194,10 @@
 #define P_HHI_VDIN_MEAS_CLK_CNTL 		CBUS_REG_ADDR(HHI_VDIN_MEAS_CLK_CNTL) 	///../ucode/register.h
 #define HHI_PCM_CLK_CNTL 0x1096 	///../ucode/register.h
 #define P_HHI_PCM_CLK_CNTL 		CBUS_REG_ADDR(HHI_PCM_CLK_CNTL) 	///../ucode/register.h
+#define HHI_VDAC_CNTL0 0x10bd 	///../ucode/register.h:1642
+#define P_HHI_VDAC_CNTL0 		CBUS_REG_ADDR(HHI_VDAC_CNTL0)
+#define HHI_VDAC_CNTL1 0x10be 	///../ucode/register.h:1643
+#define P_HHI_VDAC_CNTL1 		CBUS_REG_ADDR(HHI_VDAC_CNTL1)
 #define HHI_SYS_PLL_CNTL 0x1098 	///../ucode/register.h
 #define P_HHI_SYS_PLL_CNTL 		CBUS_REG_ADDR(HHI_SYS_PLL_CNTL) 	///../ucode/register.h
 #define HHI_SYS_PLL_CNTL2 0x1099 	///../ucode/register.h
diff --git a/drivers/amlogic/display/osd_ext/osd_hw.c b/drivers/amlogic/display/osd_ext/osd_hw.c
index 713d32978db6..ed49e527ea3d 100755
--- a/drivers/amlogic/display/osd_ext/osd_hw.c
+++ b/drivers/amlogic/display/osd_ext/osd_hw.c
@@ -251,12 +251,13 @@ static irqreturn_t vsync_isr(int irq, void *dev_id)
 	unsigned int scan_line_number = 0;
 	unsigned char output_type=0;
 	u32 data32 = 0;
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	if (osd_ext_hw.rotate[OSD1].on_off > 0 && osd_ext_hw.rotate[OSD1].angle > 0){
 		data32 = ((osd_ext_hw.rotation_pandata[OSD1].y_start + osd_ext_hw.pandata[OSD1].y_start) & 0x1fff)
 				| ((osd_ext_hw.rotation_pandata[OSD1].y_end  + osd_ext_hw.pandata[OSD1].y_start) & 0x1fff) << 16 ;
 		aml_write_reg32(P_VPU_PROT1_Y_START_END, data32);
-		//aml_write_reg32(P_VIU2_OSD1_BLK0_CFG_W2,data32);
 	}
+#endif
 	output_type=aml_read_reg32(P_VPU_VIU_VENC_MUX_CTRL)&0x3;
 	osd_ext_hw.scan_mode= SCAN_MODE_PROGRESSIVE;
 	switch(output_type)
@@ -935,6 +936,7 @@ void osd_ext_get_osd_ext_rotate_angle_hw(u32 index,u32 *angle)
 
 void osd_ext_set_osd_ext_rotate_on_hw(u32 index, u32 on_off)
 {
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	static dispdata_t save_disp_data={0,0,0,0};
 	static dispdata_t save_disp_data2={0,0,0,0};
 	osd_ext_hw.rotate[index].on_off = on_off;
@@ -971,6 +973,7 @@ void osd_ext_set_osd_ext_rotate_on_hw(u32 index, u32 on_off)
 	add_to_update_list(index, DISP_GEOMETRY);
 	add_to_update_list(index, DISP_OSD_ROTATE);
 	osd_ext_wait_vsync_hw();
+#endif
 }
 
 void osd_ext_get_osd_ext_rotate_on_hw(u32 index,u32 *on_off)
@@ -1097,7 +1100,7 @@ static  void  osd1_update_disp_freescale_enable(void)
 	dst_h = osd_ext_hw.free_dst_data[OSD1].y_end - osd_ext_hw.free_dst_data[OSD1].y_start+1;
 	vf_phase_step = ((osd_ext_hw.free_scale_height[OSD1]+1) << 20) / dst_h;
 	vf_phase_step = (vf_phase_step << 4);
-
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	aml_set_reg32_bits(P_VPP2_OSD_SC_DUMMY_DATA, 0x00808000, 0, 32);
 
 	if (osd_ext_hw.free_scale_enable[OSD1]){
@@ -1146,6 +1149,7 @@ static  void  osd1_update_disp_freescale_enable(void)
 	}
 
 	remove_from_update_list(OSD1,DISP_FREESCALE_ENABLE);
+#endif
 }
 
 static void osd1_update_coef(void)
@@ -1168,6 +1172,7 @@ static void osd1_update_coef(void)
 		vf_coef = filt_coef0;
 	}
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	if (vf_coef_wren) {
 		aml_set_reg32_bits(P_VPP2_OSD_SCALE_COEF_IDX, 0x0000, 0, 9);
 		for (i = 0; i < 33; i++)
@@ -1194,6 +1199,7 @@ static void osd1_update_coef(void)
 		}
 	}
 	remove_from_update_list(OSD1,OSD_FREESCALE_COEF);
+#endif
 }
 
 static  void  osd2_update_disp_freescale_enable(void)
@@ -1219,6 +1225,7 @@ static  void  osd2_update_disp_freescale_enable(void)
 	vf_phase_step = ((osd_ext_hw.free_scale_height[OSD2]+1) << 20) / dst_h;
 	vf_phase_step = (vf_phase_step << 4);
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	aml_set_reg32_bits(P_VPP2_OSD_SC_DUMMY_DATA, 0x00808000, 0, 32);
 
 	if (osd_ext_hw.free_scale_enable[OSD2]){
@@ -1266,6 +1273,7 @@ static  void  osd2_update_disp_freescale_enable(void)
 		aml_set_reg32_bits(P_VPP2_OSD_VSC_INI_PHASE, 0, 0, 16);
 	}
 	remove_from_update_list(OSD2,DISP_FREESCALE_ENABLE);
+#endif
 }
 
 static void osd2_update_coef(void)
@@ -1288,6 +1296,7 @@ static void osd2_update_coef(void)
 		vf_coef = filt_coef0;
 	}
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	if (vf_coef_wren) {
 		aml_set_reg32_bits (P_VPP2_OSD_SCALE_COEF_IDX, 0x0000, 0, 9);
 		for (i = 0; i < 33; i++)
@@ -1314,6 +1323,7 @@ static void osd2_update_coef(void)
 		}
 	}
 	remove_from_update_list(OSD2,OSD_FREESCALE_COEF);
+#endif
 }
 
 static void osd1_update_color_mode(void)
@@ -1475,6 +1485,7 @@ static void osd1_update_disp_osd_rotate(void)
 	y_end = osd_ext_hw.rotation_pandata[OSD1].y_end;
 	y_len_m1 = y_end-y_start;
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	osd_ext_set_prot(
                 x_rev,
                 y_rev,
@@ -1501,6 +1512,7 @@ static void osd1_update_disp_osd_rotate(void)
                 OSD1,
                 osd_ext_hw.rotate[OSD1].on_off);
 	remove_from_update_list(OSD1, DISP_OSD_ROTATE);
+#endif
 }
 
 static void osd2_update_disp_osd_rotate(void)
@@ -1546,6 +1558,7 @@ static void osd2_update_disp_osd_rotate(void)
 	y_end = osd_ext_hw.rotation_pandata[OSD2].y_end;
 	y_len_m1 = y_end-y_start;
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	osd_ext_set_prot(
                 x_rev,
                 y_rev,
@@ -1572,6 +1585,7 @@ static void osd2_update_disp_osd_rotate(void)
                 OSD2,
                 osd_ext_hw.rotate[OSD2].on_off);
     remove_from_update_list(OSD2, DISP_OSD_ROTATE);
+#endif
 }
 
 static void osd1_update_color_key(void)
diff --git a/drivers/amlogic/display/vout2/vout2_serve.c b/drivers/amlogic/display/vout2/vout2_serve.c
index e7917d8abdd5..404cbbdd0222 100755
--- a/drivers/amlogic/display/vout2/vout2_serve.c
+++ b/drivers/amlogic/display/vout2/vout2_serve.c
@@ -320,10 +320,10 @@ static int
 	}
 
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
-   	WRITE_VCBUS_REG_BITS(VPP2_OFIFO_SIZE, 0x800,
+    aml_set_reg32_bits(P_VPP2_OFIFO_SIZE, 0x800,
                         VPP_OFIFO_SIZE_BIT, VPP_OFIFO_SIZE_WID);
 #else
-   	WRITE_VCBUS_REG_BITS(VPP2_OFIFO_SIZE, 0x780,
+    aml_set_reg32_bits(P_VPP2_OFIFO_SIZE, 0x780,
                         VPP_OFIFO_SIZE_BIT, VPP_OFIFO_SIZE_WID);
 #endif                        
 
-- 
2.19.0

