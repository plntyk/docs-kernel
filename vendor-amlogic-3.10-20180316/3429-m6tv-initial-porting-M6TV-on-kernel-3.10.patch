From 761383fea2fea7f410402b98a3a0ed253b829642 Mon Sep 17 00:00:00 2001
From: "bo.yang" <bo.yang@amlogic.com>
Date: Sun, 16 Feb 2014 15:36:23 +0800
Subject: [PATCH 3429/5965] m6tv: initial porting M6TV on kernel-3.10

---
 arch/arm/Makefile                             |    3 +-
 arch/arm/boot/dts/amlogic/meson6tv_ref.dtd    |  257 +
 arch/arm/configs/meson6tv_defconfig           |  111 +
 arch/arm/mach-meson6tv/Kconfig                |   87 +
 arch/arm/mach-meson6tv/Kconfig.boards         |   10 +
 arch/arm/mach-meson6tv/Makefile               |   27 +
 arch/arm/mach-meson6tv/Makefile.boot          |    4 +
 .../arm/mach-meson6tv/board-meson6tv-common.c |  121 +
 arch/arm/mach-meson6tv/cache.c                |  142 +
 arch/arm/mach-meson6tv/clock.c                | 2873 ++++++
 arch/arm/mach-meson6tv/common.h               |   33 +
 arch/arm/mach-meson6tv/cpu.c                  |   72 +
 arch/arm/mach-meson6tv/gpio.c                 |  672 ++
 arch/arm/mach-meson6tv/headsmp.S              |   35 +
 arch/arm/mach-meson6tv/hotplug.c              |   86 +
 arch/arm/mach-meson6tv/include/mach/am_regs.h |   36 +
 arch/arm/mach-meson6tv/include/mach/ao_regs.h |  101 +
 arch/arm/mach-meson6tv/include/mach/audio.h   |   90 +
 .../mach-meson6tv/include/mach/avosstyle_io.h |   85 +
 arch/arm/mach-meson6tv/include/mach/bt656.h   |   65 +
 .../mach-meson6tv/include/mach/c_stb_define.h |  815 ++
 arch/arm/mach-meson6tv/include/mach/canvas.h  |   48 +
 arch/arm/mach-meson6tv/include/mach/clk_set.h |   37 +
 arch/arm/mach-meson6tv/include/mach/clock.h   |  148 +
 arch/arm/mach-meson6tv/include/mach/cpu.h     |   35 +
 arch/arm/mach-meson6tv/include/mach/gpio.h    |  248 +
 .../arm/mach-meson6tv/include/mach/hardware.h |   27 +
 arch/arm/mach-meson6tv/include/mach/io.h      |  168 +
 arch/arm/mach-meson6tv/include/mach/irqs.h    |  194 +
 arch/arm/mach-meson6tv/include/mach/memory.h  |   31 +
 .../arm/mach-meson6tv/include/mach/mod_gate.h |   85 +
 arch/arm/mach-meson6tv/include/mach/nand.h    |   49 +
 arch/arm/mach-meson6tv/include/mach/pctl.h    |  127 +
 arch/arm/mach-meson6tv/include/mach/pinmux.h  |   76 +
 arch/arm/mach-meson6tv/include/mach/pm.h      |   49 +
 .../mach-meson6tv/include/mach/power_gate.h   |  884 ++
 .../arm/mach-meson6tv/include/mach/register.h | 8036 +++++++++++++++++
 arch/arm/mach-meson6tv/include/mach/smp.h     |   30 +
 arch/arm/mach-meson6tv/include/mach/system.h  |   54 +
 arch/arm/mach-meson6tv/include/mach/timex.h   |   33 +
 arch/arm/mach-meson6tv/include/mach/uart.h    |   41 +
 arch/arm/mach-meson6tv/include/mach/vpp.h     |   77 +
 arch/arm/mach-meson6tv/iomapping.c            |  145 +
 arch/arm/mach-meson6tv/mod_gate.c             |  999 ++
 arch/arm/mach-meson6tv/pinctrl.c              |  783 ++
 arch/arm/mach-meson6tv/pm.c                   | 1203 +++
 arch/arm/mach-meson6tv/power_gate.c           |   45 +
 arch/arm/mach-meson6tv/power_suspend.c        |   86 +
 arch/arm/mach-meson6tv/smp.c                  |  176 +
 arch/arm/mach-meson6tv/time.c                 |  443 +
 arch/arm/mach-meson6tv/usbclock.c             |  113 +
 arch/arm/plat-meson/Kconfig                   |   31 +-
 mk_m6tv.sh                                    |   21 +
 53 files changed, 20234 insertions(+), 13 deletions(-)
 create mode 100755 arch/arm/boot/dts/amlogic/meson6tv_ref.dtd
 create mode 100755 arch/arm/configs/meson6tv_defconfig
 create mode 100755 arch/arm/mach-meson6tv/Kconfig
 create mode 100755 arch/arm/mach-meson6tv/Kconfig.boards
 create mode 100755 arch/arm/mach-meson6tv/Makefile
 create mode 100755 arch/arm/mach-meson6tv/Makefile.boot
 create mode 100755 arch/arm/mach-meson6tv/board-meson6tv-common.c
 create mode 100755 arch/arm/mach-meson6tv/cache.c
 create mode 100755 arch/arm/mach-meson6tv/clock.c
 create mode 100755 arch/arm/mach-meson6tv/common.h
 create mode 100755 arch/arm/mach-meson6tv/cpu.c
 create mode 100755 arch/arm/mach-meson6tv/gpio.c
 create mode 100755 arch/arm/mach-meson6tv/headsmp.S
 create mode 100755 arch/arm/mach-meson6tv/hotplug.c
 create mode 100755 arch/arm/mach-meson6tv/include/mach/am_regs.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/ao_regs.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/audio.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/avosstyle_io.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/bt656.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/c_stb_define.h
 create mode 100644 arch/arm/mach-meson6tv/include/mach/canvas.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/clk_set.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/clock.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/cpu.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/gpio.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/hardware.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/io.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/irqs.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/memory.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/mod_gate.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/nand.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/pctl.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/pinmux.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/pm.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/power_gate.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/register.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/smp.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/system.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/timex.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/uart.h
 create mode 100755 arch/arm/mach-meson6tv/include/mach/vpp.h
 create mode 100755 arch/arm/mach-meson6tv/iomapping.c
 create mode 100755 arch/arm/mach-meson6tv/mod_gate.c
 create mode 100755 arch/arm/mach-meson6tv/pinctrl.c
 create mode 100755 arch/arm/mach-meson6tv/pm.c
 create mode 100755 arch/arm/mach-meson6tv/power_gate.c
 create mode 100755 arch/arm/mach-meson6tv/power_suspend.c
 create mode 100755 arch/arm/mach-meson6tv/smp.c
 create mode 100755 arch/arm/mach-meson6tv/time.c
 create mode 100755 arch/arm/mach-meson6tv/usbclock.c
 create mode 100755 mk_m6tv.sh

diff --git a/arch/arm/Makefile b/arch/arm/Makefile
index afd2aececd86..0d9eb3d1a0db 100755
--- a/arch/arm/Makefile
+++ b/arch/arm/Makefile
@@ -157,6 +157,7 @@ machine-$(CONFIG_ARCH_KIRKWOOD)		+= kirkwood
 machine-$(CONFIG_ARCH_KS8695)		+= ks8695
 machine-$(CONFIG_ARCH_LPC32XX)		+= lpc32xx
 machine-$(CONFIG_ARCH_MESON6)           += meson6
+machine-$(CONFIG_ARCH_MESON6TV)		+= meson6tv
 machine-$(CONFIG_ARCH_MESON8)           += meson8
 machine-$(CONFIG_ARCH_MMP)		+= mmp
 machine-$(CONFIG_ARCH_MSM)		+= msm
@@ -297,7 +298,7 @@ zinstall uinstall install: vmlinux
 %.dtb: scripts
 	$(Q)$(MAKE) $(build)=$(subst $(wildcard $(srctree)//),,$(subst $(join /,$(subst dtb,dts,$@)),,$(firstword $(wildcard $(srctree)/$(boot)/dts/amlogic/$(subst dtb,dts,$@) $(srctree)/$(CUSTOMER_DIR_NAME)/meson/dt/$(subst dtb,dts,$@))))) \
 	MACHINE=$(MACHINE) \
-	$(subst $(wildcard $(srctree)//),,$(subst .dts,.dtb,$(firstword $(wildcard $(srctree)/$(boot)/dts/amlogic/$(subst dtb,dts,$@) $(srctree)/$(CUSTOMER_DIR_NAME)/meson/dt/$(subst dtb,dts,$@))))) 
+	$(subst $(wildcard $(srctree)//),,$(subst .dts,.dtb,$(firstword $(wildcard $(srctree)/$(boot)/dts/amlogic/$(subst dtb,dts,$@) $(srctree)/$(CUSTOMER_DIR_NAME)/meson/dt/$(subst dtb,dts,$@)))))
 	rm  $(firstword $(wildcard $(srctree)/$(boot)/dts/amlogic/$(subst dtb,dts,$@) $(srctree)/$(CUSTOMER_DIR_NAME)/meson/dt/$(subst dtb,dts,$@)))
 
 dtbs: scripts
diff --git a/arch/arm/boot/dts/amlogic/meson6tv_ref.dtd b/arch/arm/boot/dts/amlogic/meson6tv_ref.dtd
new file mode 100755
index 000000000000..17e67e7a9261
--- /dev/null
+++ b/arch/arm/boot/dts/amlogic/meson6tv_ref.dtd
@@ -0,0 +1,257 @@
+/*
+ * Amlogic-MX REF Device Tree Source
+ *
+ * Copyright Amlogic 2013
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; either version 2 of the License, or (at your
+ * option) any later version.
+ */
+
+/dts-v1/;
+/{
+	compatible = "AMLOGIC,8726_MX";
+	model = "AMLOGIC";
+	interrupt-parent = <&gic>;
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		cpu@0 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a9";
+			reg = <0x200>;
+		};
+
+		cpu@1 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a9";
+			reg = <0x1>;
+		};
+	};
+
+	/*start memory config*/
+	memory {
+		device_type = "memory";
+		aml_reserved_start = <0x85000000>;
+		aml_reserved_end = <0x84000000>;
+		phys_offset = <0x80000000>;
+		linux,total-memory = <0x40000000>;
+	};
+
+	gic:interrupt-controller {
+	        compatible = "arm,cortex-a9-gic";
+	        reg = <0xc4301000 0x1000
+	               0xc4300100 0x0100>;
+	        interrupt-controller;
+	        #interrupt-cells = <3>;
+	        #address-cells = <0>;
+	};
+
+	uart_ao {
+		compatible = "amlogic,aml_uart";
+		port_name = "uart_ao";
+		status = "okay";
+		dev_name = "uart_ao";
+		pinctrl-names = "default";
+		pinctrl-0 = <&ao_uart_pins>;
+	};
+
+	uart_0 {
+		compatible = "amlogic,aml_uart";
+		port_name = "uart_a";
+		status = "okay";
+		dev_name = "uart_0";
+		pinctrl-names = "default";
+	};
+
+	uart_1 {
+		compatible = "amlogic,aml_uart";
+		port_name = "uart_b";
+		status = "disabled";
+		dev_name = "uart_1";
+	};
+
+	uart_2 {
+		compatible = "amlogic,aml_uart";
+		port_name = "uart_c";
+		status = "disabled";
+		dev_name = "uart_2";
+	};
+
+	uart_3 {
+		compatible = "amlogic,aml_uart";
+		port_name = "uart_d";
+		status = "ok";
+		dev_name = "uart_3";
+	};
+
+	mesonvout {
+		compatible = "amlogic,mesonvout";
+		dev_name = "mesonvout";
+		status = "okay";
+	};
+
+	mesonfb {
+		compatible = "amlogic,mesonfb";
+		dev_name = "mesonfb";
+		status = "okay";
+		reserve-memory = <0x01000000 0x00100000>;
+		vmode = <2>; /*0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P*/
+		display_size_default = <1920 1080 1920 2160 32>;
+	};
+
+	aml_pm {
+		compatible = "amlogic,pm";
+		dev_name = "aml_pm";
+		status = "okay";
+	};
+
+	cpufreq-meson {
+		compatible = "amlogic,cpufreq-meson";
+		status = "okay";
+	};
+
+
+	i2c@c1108500 { /*I2C-A*/
+		compatible = "amlogic,aml_i2c";
+		dev_name = "i2c-A";
+		status = "ok";
+		reg = <0xC1108500 0x20>;
+		device_id = <1>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&a_i2c_master>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+
+
+	i2c@c11087c0 { /*I2C-B*/
+		compatible = "amlogic,aml_i2c";
+		dev_name = "i2c-B";
+		status = "ok";
+		reg = <0xC11087C0 0x20>;
+		device_id = <2>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&b_i2c_master>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+
+
+	lvds {
+		compatible = "amlogic,lvds";
+		status = "okay";
+	};
+
+	audio {
+		compatible = "amlogic,aml-audio";
+		dev_name = "aml-audio.0";
+	};
+
+	audio_dai {
+		compatible = "amlogic,aml-dai";
+		dev_name = "aml-dai.0";
+	};
+
+
+	dummy_codec_audio {
+		status = "okay";
+		compatible = "amlogic,aml_dummy_codec_audio";
+		dev_name = "aml_dummy_codec_audio.0";
+		pinctrl-names = "dummy_codec_audio";
+		pinctrl-0 = <&aml_dummy_codec_pins>;
+	};
+
+	dummy_codec {
+		status = "okay";
+		compatible = "amlogic,aml_dummy_codec";
+		dev_name = "dummy_codec.0";
+	};
+
+	saradc {
+		compatible = "amlogic,saradc";
+		status = "okay";
+	};
+
+	adc_keypad {
+		compatible = "amlogic,adc_keypad";
+		status = "okay";
+		key_num = <5>;
+		name_len = <20>;
+		key_name = "menu","vol-","vol+","back","home";
+		key_code = <139 114 115 158 102>;
+		key_chan = <4 4 4 4 4>;
+		key_val = <9 275 150 392 513>;
+		key_tolerance = <40 40 40 40 40>;
+	};
+
+	key_input {
+		compatible = "amlogic,key_input";
+		status = "okay";
+		scan_period = <20>;
+		fuzz_time = <60>;
+		key_code_list = <116>;
+		key_num = <1>;
+		config = <0>;
+	};
+
+	meson-remote {
+		compatible = "amlogic,aml_remote";
+		dev_name = "meson-remote";
+		status = "okay";
+		ao_baseaddr = <0xf3100480>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&remote_pins>;
+	};
+
+	gpio:gpio {
+		compatible = "amlogic,m6tv-gpio";
+		dev_name = "gpio";
+		#gpio-cells = <2>;
+	};
+
+	pinmux {
+		compatible = "amlogic,pinmux-m6tv";
+		dev_name = "pinmux";
+		#pinmux-cells = <2>;
+
+		ao_uart_pins:ao_uart {
+			amlogic,setmask = <10 0x1800>;
+			amlogic,pins = "GPIOAO_0", "GPIOAO_1";
+		};
+
+		a_i2c_master:a_i2c {
+			amlogic,setmask = <5 0xC0000000>;
+			amlogic,clrmask = <5 0x30000000>;
+			amlogic,pins = "GPIOZ_6","GPIOZ_7";
+		};
+
+		b_i2c_master:b_i2c {
+			amlogic,setmask = <5 0x0C000000>;
+			amlogic,clrmask = <5 0x03000000>;
+			amlogic,pins = "GPIOZ_8","GPIOZ_9";
+		};
+
+		aml_dummy_codec_pins:aml_dummy_codec_pins {
+			amlogic,setmask = <8 0x6A00000
+					   3 0x800000>;
+			amlogic,clrmask = <8 0x1461000
+					   1 0x1
+					   3 0x5400000
+					   7 0x10000000>;
+			amlogic,pins = "GPIOZ_14", "GPIOZ_15", "GPIOZ_16", "GPIOZ_17", "GPIOZ_19";
+		};
+
+		remote_pins:remote_pin {
+			amlogic,setmask = <10 0x1>;
+			amlogic,pins = "GPIOAO_7";
+		};
+	}; /* end of pinmux*/
+
+}; /* end of / */
+
diff --git a/arch/arm/configs/meson6tv_defconfig b/arch/arm/configs/meson6tv_defconfig
new file mode 100755
index 000000000000..83c67096c10c
--- /dev/null
+++ b/arch/arm/configs/meson6tv_defconfig
@@ -0,0 +1,111 @@
+CONFIG_KERNEL_LZMA=y
+CONFIG_SYSVIPC=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE="rootfs.cpio"
+CONFIG_KALLSYMS_ALL=y
+CONFIG_EMBEDDED=y
+CONFIG_MODULES=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_ARCH_MESON6TV=y
+CONFIG_MESON_SUSPEND=y
+CONFIG_MESON_LEGACY_REGISTER_API=y
+# CONFIG_CACHE_L2X0 is not set
+CONFIG_ARM_ERRATA_751472=y
+CONFIG_ARM_ERRATA_754322=y
+CONFIG_ARM_ERRATA_764369=y
+CONFIG_SMP=y
+CONFIG_NR_CPUS=2
+CONFIG_AEABI=y
+CONFIG_HIGHMEM=y
+# CONFIG_COMPACTION is not set
+CONFIG_VFP=y
+CONFIG_NEON=y
+CONFIG_BINFMT_MISC=y
+# CONFIG_OF_LM is not set
+# CONFIG_AML_RTC is not set
+CONFIG_AM_REMOTE=y
+# CONFIG_MESON_NEW_INPUT_REMOTE is not set
+# CONFIG_MESON_INPUT_KEYBOARD is not set
+# CONFIG_AMLOGIC_BOARD_HAS_PMU is not set
+# CONFIG_AMAUDIO is not set
+# CONFIG_AM_CANVAS is not set
+# CONFIG_AM_DISPLAY_MODULE is not set
+# CONFIG_AML_HDMI_TX is not set
+# CONFIG_MALI400 is not set
+# CONFIG_AMLOGIC_ION is not set
+# CONFIG_CRYPTO_AML_HW_CRYPRO is not set
+# CONFIG_CRYPTO_DEVICE_DRIVER is not set
+CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+CONFIG_PROC_DEVICETREE=y
+CONFIG_OF_SELFTEST=y
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_SCSI=y
+CONFIG_BLK_DEV_SD=y
+CONFIG_BLK_DEV_SR=y
+CONFIG_SCSI_MULTI_LUN=y
+CONFIG_INPUT_POLLDEV=y
+CONFIG_INPUT_EVDEV=y
+CONFIG_INPUT_MISC=y
+CONFIG_INPUT_UINPUT=y
+CONFIG_DEVPTS_MULTIPLE_INSTANCES=y
+CONFIG_I2C=y
+CONFIG_I2C_CHARDEV=y
+CONFIG_SOUND=y
+CONFIG_SND=y
+CONFIG_SND_SOC=y
+CONFIG_SND_AML_M6_SOC=y
+CONFIG_SND_AML_M_DUMMY_CODEC=y
+# CONFIG_HID_GENERIC is not set
+# CONFIG_USB_SUPPORT is not set
+CONFIG_SWITCH=y
+CONFIG_RTC_CLASS=y
+CONFIG_UIO=y
+CONFIG_UIO_PDRV=y
+CONFIG_UIO_PDRV_GENIRQ=y
+CONFIG_STAGING=y
+CONFIG_ANDROID=y
+CONFIG_ANDROID_BINDER_IPC=y
+CONFIG_ASHMEM=y
+CONFIG_ANDROID_LOGGER=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER=y
+CONFIG_EXT2_FS=y
+CONFIG_EXT3_FS=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_FS_POSIX_ACL=y
+CONFIG_EXT4_FS_SECURITY=y
+CONFIG_EXT4_DEBUG=y
+CONFIG_QUOTA=y
+CONFIG_QFMT_V2=y
+CONFIG_FUSE_FS=y
+CONFIG_ISO9660_FS=y
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_TMPFS=y
+CONFIG_CONFIGFS_FS=y
+CONFIG_CRAMFS=y
+CONFIG_NLS_CODEPAGE_437=y
+CONFIG_NLS_ISO8859_1=y
+CONFIG_PRINTK_TIME=y
+CONFIG_MAGIC_SYSRQ=y
+CONFIG_READABLE_ASM=y
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_SECTION_MISMATCH=y
+CONFIG_SCHEDSTATS=y
+CONFIG_TIMER_STATS=y
+CONFIG_DEBUG_INFO=y
+CONFIG_RCU_CPU_STALL_TIMEOUT=60
+# CONFIG_FTRACE is not set
+CONFIG_CRC_T10DIF=y
+CONFIG_CRC7=y
diff --git a/arch/arm/mach-meson6tv/Kconfig b/arch/arm/mach-meson6tv/Kconfig
new file mode 100755
index 000000000000..7cb634e7edb5
--- /dev/null
+++ b/arch/arm/mach-meson6tv/Kconfig
@@ -0,0 +1,87 @@
+if ARCH_MESON6TV
+
+config MESON_M6C_ENHANCEMENT
+       bool "M6C chip enhancement based on M6TV"
+       default n
+       help
+               If using M6C chip instead of M6W or M6L .
+
+config MESON_M6TV_RECOVERY_MODE
+	bool "Recovery mode"
+	help
+		Include support for revocery mode.
+
+config CLKTREE_DEBUG
+	bool "New clock tree debug support"
+	default y
+	help
+		Create a node /sys/class/meson_clocktree/clkTree to get/set clocks
+
+
+menu    "Meson Global Timer Setting"
+config MESON_TIMERA
+	bool "Enable EE Domain Timer A"
+	default y
+	help
+		Enable EE Timer A . if enable the timer is 1Mhz
+config MESON_TIMERB
+	bool "Enable EE Domain Timer B"
+	depends on !SMP || HAVE_ARM_TWD
+	default n
+	help
+		Enable EE Timer B . if enable the timer is 1Mhz
+config MESON_TIMERC
+	bool "Enable EE Domain Timer C"
+	default n
+	help
+		Enable EE Timer C . if enable the timer is 1Mhz
+config MESON_TIMERD
+	bool "Enable EE Domain Timer D"
+	depends on !SMP || HAVE_ARM_TWD
+	default n
+	help
+		Enable EE Timer D . if enable the timer is 1Mhz
+endmenu
+
+
+config MESON_CPU_TEMP_SENSOR
+	bool "meson temperature sensor cpu interface support"
+	default n
+	help
+		/sys/class/saradc/temperature can got the celius .
+config CORE_FREQ_TRACK
+    bool "trace for cpu frequence with kernel timestamp"
+    default n
+    help
+        Create /dev/core_freq to collect cpu frequent change information with kernel timestamp
+
+config MESON6_SMP_HOTPLUG
+	bool "Hotplug support for test"
+	depends on SMP
+	default n
+	help
+		Hotplug let cpu1 enter wfi. Wake up it via SGI by cpu0
+
+config SUPPORT_USB_BURNING
+	bool "USB burning support"
+	default n
+	help
+		select it for enable USB burning function
+
+config MESON_L2CC_OPTIMIZE
+	bool "Optimize L2 cache"
+	depends on SMP && CACHE_L2X0
+	default n
+	help
+		enable PL310 double linefill
+
+config MESON_L2CC_STANDBY
+	bool "Enable L2 cache standby"
+	depends on SMP && CACHE_L2X0
+	default n
+	help
+		enable PL310 dynamic gating & standby mode
+
+endif # ARCH_MESON36
+
+
diff --git a/arch/arm/mach-meson6tv/Kconfig.boards b/arch/arm/mach-meson6tv/Kconfig.boards
new file mode 100755
index 000000000000..bd00b48bcefd
--- /dev/null
+++ b/arch/arm/mach-meson6tv/Kconfig.boards
@@ -0,0 +1,10 @@
+if ARCH_MESON6TV
+
+config MACH_MESON6TV_COMMON_BOARD
+	depends on ARCH_MESON6TV
+	bool "Meson6TV common board"
+	default y
+	help
+	  Support for Amlogic Meson6TV common development platform.
+
+endif # ARCH_MESON6TV
diff --git a/arch/arm/mach-meson6tv/Makefile b/arch/arm/mach-meson6tv/Makefile
new file mode 100755
index 000000000000..bd6e07d8bff6
--- /dev/null
+++ b/arch/arm/mach-meson6tv/Makefile
@@ -0,0 +1,27 @@
+#
+# Makefile for the linux kernel.
+#
+
+# Common support
+obj-y := cpu.o clock.o time.o iomapping.o gpio.o pinctrl.o mod_gate.o power_gate.o
+
+obj-m :=
+obj-n :=
+obj-  :=
+
+# Board support
+obj-$(CONFIG_MACH_MESON6TV_COMMON_BOARD)	+= board-meson6tv-common.o
+
+# Cache config
+obj-$(CONFIG_CACHE_L2X0)			+= cache.o
+
+# Power Management
+obj-$(CONFIG_SUSPEND)				+= pm.o
+
+obj-$(CONFIG_HOTPLUG_CPU)			+= hotplug.o
+obj-$(CONFIG_SMP)				+= headsmp.o smp.o
+
+obj-$(CONFIG_MESON_SUSPEND)			+= power_suspend.o
+
+obj-$(CONFIG_CPU_IDLE)				+= cpuidle.o
+
diff --git a/arch/arm/mach-meson6tv/Makefile.boot b/arch/arm/mach-meson6tv/Makefile.boot
new file mode 100755
index 000000000000..0ab96884ac0b
--- /dev/null
+++ b/arch/arm/mach-meson6tv/Makefile.boot
@@ -0,0 +1,4 @@
+   zreladdr-y	:= 0x80008000
+params_phys-y	:= 0x80000100
+initrd_phys-y	:= 0x80800000
+
diff --git a/arch/arm/mach-meson6tv/board-meson6tv-common.c b/arch/arm/mach-meson6tv/board-meson6tv-common.c
new file mode 100755
index 000000000000..b21b736c8849
--- /dev/null
+++ b/arch/arm/mach-meson6tv/board-meson6tv-common.c
@@ -0,0 +1,121 @@
+/*
+ * arch/arm/mach-meson6tv/board-meson6tv-common.c
+ *
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/mm.h>
+#include <linux/dma-mapping.h>
+#include <linux/of.h>
+#include <linux/reboot.h>
+#include <linux/platform_device.h>
+#include <linux/of_platform.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/map.h>
+#include <mach/io.h>
+#ifdef CONFIG_SMP
+#include <mach/smp.h>
+#endif
+#include <plat/irq.h>
+
+#include "common.h"
+
+extern unsigned long long aml_reserved_start;
+extern unsigned long long aml_reserved_end;
+
+struct map_desc __initdata meson6tv_board_io_desc[1];
+
+static void __init meson6tv_map_board_io(void)
+{
+	meson6tv_board_io_desc[0].virtual = PAGE_ALIGN(__phys_to_virt(aml_reserved_start)),
+	meson6tv_board_io_desc[0].pfn = __phys_to_pfn(aml_reserved_start),
+	meson6tv_board_io_desc[0].length = aml_reserved_end - aml_reserved_start + 1,
+	meson6tv_board_io_desc[0].type = MT_MEMORY_NONCACHED,
+	iotable_init(meson6tv_board_io_desc,ARRAY_SIZE(meson6tv_board_io_desc));
+}
+
+static void __init meson6tv_map_io(void)
+{
+	meson6tv_map_default_io();
+	meson6tv_map_board_io();
+}
+
+static void __init meson6tv_init_early(void)
+{
+	/*
+	 * Mali or some USB devices allocate their coherent buffers from atomic
+	 * context. Increase size of atomic coherent pool to make sure such
+	 * the allocations won't fail.
+	 */
+	init_dma_coherent_pool_size(SZ_4M);
+}
+
+static void __init meson6tv_init_irq(void)
+{
+	meson_init_gic_irq();
+}
+
+static struct of_device_id mxs_of_platform_bus_ids[] = {
+	{.compatible = "simple-bus",},
+	{},
+};
+
+#if 0
+static struct of_device_id mxs_of_lm_bus_ids[] = {
+	{.compatible = "logicmodule-bus",},
+	{},
+};
+#endif
+
+static void meson6tv_power_off(void)
+{
+	printk("triggering power off\n");
+	kernel_restart("charging_reboot");
+}
+
+static void __init meson6tv_dt_init_machine(void)
+{
+	struct device *parent;
+	parent = get_device(&platform_bus);
+
+	of_platform_populate(NULL, mxs_of_platform_bus_ids, NULL, parent);
+	//of_lm_populate(NULL, mxs_of_lm_bus_ids, NULL, NULL);
+
+	//of_platform_populate(NULL, of_default_bus_match_table,
+	//aml_meson6_auxdata_lookup, NULL);
+	pm_power_off = meson6tv_power_off;
+}
+
+static const char __initdata *m6tv_common_boards_compat[] = {
+	"AMLOGIC,8726_MX",
+	"AMLOGIC,8726_MXS",
+	"AMLOGIC,8726_MXL",
+	NULL,
+};
+
+DT_MACHINE_START(AML8726_MX, "Amlogic Meson6TV platform")
+	.smp		= smp_ops(meson6tv_smp_ops),
+	.map_io		= meson6tv_map_io,	// dt - 1
+	.init_early	= meson6tv_init_early,	// dt -2
+	.init_irq	= meson6tv_init_irq,	// dt - 3
+	.init_time	= meson6tv_timer_init,	// dt - 4
+	.init_machine	= meson6tv_dt_init_machine,
+	.dt_compat	= m6tv_common_boards_compat,
+MACHINE_END
+
diff --git a/arch/arm/mach-meson6tv/cache.c b/arch/arm/mach-meson6tv/cache.c
new file mode 100755
index 000000000000..9b21428be2bd
--- /dev/null
+++ b/arch/arm/mach-meson6tv/cache.c
@@ -0,0 +1,142 @@
+/*
+ * arch/arm/mach-meson6tv/cache.c
+ *
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/string.h>
+#include <asm/hardware/cache-l2x0.h>
+
+#include <plat/io.h>
+#include <mach/io.h>
+
+#if 0
+extern void meson6_l2x0_init(void __iomem *);
+
+#ifdef  CONFIG_MESON_L2CC_OPTIMIZE
+static inline u32 __init read_actlr(void)
+{
+	u32 actlr;
+
+	__asm__("mrc p15, 0, %0, c1, c0, 1\n" : "=r" (actlr));
+	printk(KERN_INFO "===actlr=0x%x\n", actlr);
+	return actlr;
+}
+
+static inline void __init write_actlr(u32 actlr)
+{
+	__asm__("mcr p15, 0, %0, c1, c0, 1\n" : : "r" (actlr));
+}
+#endif
+
+
+static int __init meson_cache_init(void)
+{
+#ifdef CONFIG_CACHE_L2X0
+	__u32 prefetch, aux, scu_ctrl;
+	void __iomem *l2x0_base;
+	void __iomem *scu_base = (void __iomem *) IO_PERIPH_BASE;
+	/*
+	* Early BRESP, I/D prefetch enabled
+	* Shared attribute override enabled
+	* Full line of zero enabled
+	*/
+//      l2x0_init((void __iomem *)IO_PL310_BASE, ((1 << L2X0_AUX_CTRL_ASSOCIATIVITY_SHIFT) |
+//              (0x1 << 25) |
+//              (0x1 << L2X0_AUX_CTRL_NS_LOCKDOWN_SHIFT) |
+//              (0x1 << L2X0_AUX_CTRL_NS_INT_CTRL_SHIFT))|(0x2 << L2X0_AUX_CTRL_WAY_SIZE_SHIFT), L2X0_AUX_CTRL_MASK);
+// 	(3<<28)|(3<<26) | (1<<11) |(1<<10)|(1<<13)|(1<<22), ~0);
+
+	l2x0_base=(void __iomem *)IO_PL310_BASE;
+
+#ifdef  CONFIG_MESON_L2CC_OPTIMIZE
+	l2x0_init(l2x0_base, ((1<<L2X0_AUX_CTRL_INSTR_PREFETCH_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_DATA_PREFETCH_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_NS_INT_CTRL_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_NS_LOCKDOWN_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_SHARE_OVERRIDE_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_SHARE_INVALID_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_STORE_BUFFER_LIMIT_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_HIGH_PRIORITY_SO_DEVICE_SHIFT) |
+			      (1<<0 | (1<<L2X0_AUX_CTRL_EARLY_BRESP_SHIFT))),
+			      ~0);
+#else /* CONFIG_MESON_L2CC_OPTIMIZE */
+	l2x0_init(l2x0_base, ((1<<L2X0_AUX_CTRL_INSTR_PREFETCH_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_DATA_PREFETCH_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_NS_INT_CTRL_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_NS_LOCKDOWN_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_SHARE_OVERRIDE_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_SHARE_INVALID_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_STORE_BUFFER_LIMIT_SHIFT) |
+			      (1<<L2X0_AUX_CTRL_HIGH_PRIORITY_SO_DEVICE_SHIFT)),
+			      ~0);
+#endif /* CONFIG_MESON_L2CC_OPTIMIZE */
+
+#ifdef CONFIG_MESON_L2CC_STANDBY
+	writel_relaxed(0x3, l2x0_base + L2X0_POWER_CTRL);//enable dynamic clock gate & standby mode
+#endif /* CONFIG_MESON_L2CC_STANDBY */
+
+	prefetch = readl_relaxed(l2x0_base+ L2X0_PREFETCH_CTRL);
+	/* prefetch 1+6 lines over */
+	prefetch |= 0x6;
+
+#ifdef CONFIG_SMP
+	prefetch |= (1<<28) | (1<<29);
+#ifdef CONFIG_MESON_L2CC_OPTIMIZE
+	prefetch	|= (1<<24);
+#endif /* CONFIG_MESON_L2CC_OPTIMIZE */
+	writel_relaxed(prefetch, l2x0_base + L2X0_PREFETCH_CTRL);
+#else /* CONFIG_SMP */
+	prefetch |= (1<<30) | (1<<24) | (1<<28) | (1<<29);
+	writel_relaxed(prefetch, l2x0_base + L2X0_PREFETCH_CTRL);
+#endif /* CONFIG_SMP */
+
+#ifdef 	CONFIG_MESON_L2CC_OPTIMIZE
+	write_actlr((read_actlr()|(1<<3) | (1<<1)));
+	read_actlr();
+
+	scu_ctrl = __raw_readl(scu_base + 0);
+	scu_ctrl |= (1<<3);
+	__raw_writel(scu_ctrl, scu_base + 0);
+	printk("SCU_CTRL: scu_ctrl=0x%x\n", scu_ctrl);
+
+	aux=readl_relaxed(l2x0_base+ L2X0_AUX_CTRL);
+	prefetch=readl_relaxed(l2x0_base+ L2X0_PREFETCH_CTRL);
+	printk("pl310: aux=0x%x, prefetch=0x%x\n", aux, prefetch);
+#endif /* CONFIG_MESON_L2CC_OPTIMIZE */
+
+#endif /* CONFIG_CACHE_L2X0 */
+	return 0;
+}
+early_initcall(meson_cache_init);
+
+#else
+static int __init meson_cache_of_init(void)
+{
+	int aux = 0;
+	/*
+		put some default aux setting here
+	*/
+
+	l2x0_of_init(aux,~0);
+	return 0;
+}
+early_initcall(meson_cache_of_init);
+#endif
diff --git a/arch/arm/mach-meson6tv/clock.c b/arch/arm/mach-meson6tv/clock.c
new file mode 100755
index 000000000000..e257be94eed1
--- /dev/null
+++ b/arch/arm/mach-meson6tv/clock.c
@@ -0,0 +1,2873 @@
+/*
+ * arch/arm/mach-meson6tv/clock.c
+ *
+ * Copyright (C) 2011-2012 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+///#define DEBUG
+///#define CONFIG_CPU_FREQ_DEBUG		1
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/clk.h>
+#include <linux/init.h>
+#include <linux/spinlock.h>
+#include <linux/delay.h>
+#include <linux/sysfs.h>
+#include <linux/device.h>
+#include <linux/err.h>
+#include <linux/cpu.h>
+
+#include <linux/clkdev.h>
+#include <plat/io.h>
+#include <mach/clock.h>
+#include <mach/hardware.h>
+#include <mach/clk_set.h>
+#include <mach/power_gate.h>
+#include <plat/regops.h>
+#include <plat/cpufreq.h>
+#include <linux/printk.h>
+static DEFINE_SPINLOCK(mali_clk_lock);
+static DEFINE_SPINLOCK(clockfw_lock);
+static DEFINE_MUTEX(clock_ops_lock);
+
+static unsigned int mali_max = 333000;
+static unsigned int freq_limit = 1;
+
+static int set_sys_pll(struct clk *clk, unsigned long dst);
+static void get_a9_divid(unsigned int idx, unsigned int * scale_divn, unsigned int * scale_out);
+#define IS_CLK_ERR(a)  (IS_ERR(a) || a == 0)
+
+#if 0
+#ifdef CONFIG_INIT_A9_CLOCK_FREQ
+static unsigned long __initdata init_clock = CONFIG_INIT_A9_CLOCK;
+#else
+static unsigned long __initdata init_clock = 0;
+#endif
+#endif
+
+static unsigned int gpu_to_min_cpu(unsigned int gpu);
+static int _clk_set_rate_gpu(struct clk *clk, unsigned long gpu, unsigned long cpu);
+static unsigned long clk_get_rate_a9(struct clk * clkdev);
+
+#define CONFIG_MALI_MINIMUM_FREQ	0
+
+// -----------------------------------------
+// clk_util_clk_msr
+// -----------------------------------------
+// from twister_core.v
+/**        .clk_to_msr_in          ( { 13'h0,                      // [63:50]
+                                    cts_mipi_phy_clk,
+                                    am_ring_osc_out_mali[1],    // [49]
+                                    am_ring_osc_out_mali[0],    // [48]
+                                    am_ring_osc_out_a9[1],      // [47]
+                                    am_ring_osc_out_a9[0],      // [46]
+                                    cts_pwm_A_clk,              // [45]
+                                    cts_pwm_B_clk,              // [44]
+                                    cts_pwm_C_clk,              // [43]
+                                    cts_pwm_D_clk,              // [42]
+                                    cts_eth_tx_clk,             // [41]
+                                    cts_pcm_mclk,               // [40]
+                                    cts_pcm_sclk,               // [39]
+                                    cts_vdin_meas_clk,          // [38]
+                                    cts_vdac_clk[1],            // [37]
+                                    cts_hdmi_tx_pixel_clk,      // [36]
+                                    cts_mali_clk,               // [35]
+                                    cts_sdhc_clk1,              // [34]
+                                    cts_sdhc_clk0,              // [33]
+                                    cts_vdec_clk,               // [32]
+                                    1'b0,                       // [31]
+                                    cts_slow_ddr_clk,           // [30]
+                                    cts_vdac_clk[0],            // [29]
+                                    cts_sar_adc_clk,            // [28]
+                                    cts_enci_clk,               // [27]
+                                    sc_clk_int,                 // [26]
+                                    sys_pll_div3,               // [25]
+                                    lvds_fifo_clk,              // [24]
+                                    HDMI_CH0_TMDSCLK,           // [23]
+                                    clk_rmii_from_pad,            // [22]
+                                    mod_audin_aoclk_i,          // [21]
+                                    rtc_osc_clk_out,            // [20]
+                                    cts_hdmi_sys_clk,           // [19]
+                                    cts_led_pll_clk,            // [18]
+                                    cts_vghl_pll_clk,           // [17]
+                                    cts_FEC_CLK_2,              // [16]
+                                    cts_FEC_CLK_1,              // [15]
+                                    cts_FEC_CLK_0,              // [14]
+                                    cts_amclk,                  // [13]
+                                    vid2_pll_clk,               // [12]
+                                    cts_eth_rmii,               // [11]
+                                    cts_enct_clk,               // [10]
+                                    cts_encl_clk,               // [9]
+                                    cts_encp_clk,               // [8]
+                                    clk81,                      // [7]
+                                    vid_pll_clk,                // [6]
+                                    usb1_clk_12mhz,             // [5]
+                                    usb0_clk_12mhz,             // [4]
+                                    ddr_pll_clk,                // [3]
+                                    1'b0,                       // [2]
+                                    am_ring_osc_clk_out_ee[1],     // [1]
+                                    am_ring_osc_clk_out_ee[0]} ),  // [0]
+*/
+//
+// For Example
+//
+// unsigend long    clk81_clk   = clk_util_clk_msr( 2,      // mux select 2
+//                                                  50 );   // measure for 50uS
+//
+// returns a value in "clk81_clk" in Hz
+//
+// The "uS_gate_time" can be anything between 1uS and 65535 uS, but the limitation is
+// the circuit will only count 65536 clocks.  Therefore the uS_gate_time is limited by
+//
+//   uS_gate_time <= 65535/(expect clock frequency in MHz)
+//
+// For example, if the expected frequency is 400Mhz, then the uS_gate_time should
+// be less than 163.
+//
+// Your measurement resolution is:
+//
+//    100% / (uS_gate_time * measure_val )
+//
+//
+// #define MSR_CLK_DUTY                               0x21d6
+// #define MSR_CLK_REG0                               0x21d7
+// #define MSR_CLK_REG1                               0x21d8
+// #define MSR_CLK_REG2                               0x21d9
+//
+/**
+unsigned long    clk_util_clk_msr(   unsigned long   clk_mux, unsigned long   uS_gate_time )
+{
+    // Set the measurement gate to 100uS
+    Wr(MSR_CLK_REG0, (Rd(MSR_CLK_REG0) & ~(0xFFFF << 0)) | ((uS_gate_time-1) << 0) );
+    // Disable continuous measurement
+    // disable interrupts
+    Wr(MSR_CLK_REG0, (Rd(MSR_CLK_REG0) & ~((1 << 18) | (1 << 17))) );
+    Wr(MSR_CLK_REG0, (Rd(MSR_CLK_REG0) & ~(0x1f << 20)) | ((clk_mux << 20) |  // Select MUX
+                                                          (1 << 19) |     // enable the clock
+                                                          (1 << 16)) );    // enable measuring
+    // Delay
+    Rd(MSR_CLK_REG0);
+    // Wait for the measurement to be done
+    while( (Rd(MSR_CLK_REG0) & (1 << 31)) ) {}
+    // disable measuring
+    Wr(MSR_CLK_REG0, (Rd(MSR_CLK_REG0) & ~(1 << 16)) | (0 << 16) );
+
+    unsigned long   measured_val = (Rd(MSR_CLK_REG2) & 0x000FFFFF); // only 20 bits
+
+    if( measured_val == 0xFFFFF ) {     // 20 bits max
+        return(0);
+    } else {
+        // Return value in Hz
+        return(measured_val*(1000000/uS_gate_time));
+    }
+}
+**/
+
+#ifndef CONFIG_CLK_MSR_NEW
+unsigned int clk_util_clk_msr(unsigned int clk_mux)
+{
+	unsigned int  msr;
+	unsigned int regval = 0;
+	aml_write_reg32(P_MSR_CLK_REG0,0);
+    // Set the measurement gate to 64uS
+	clrsetbits_le32(P_MSR_CLK_REG0,0xffff,64-1);
+    // Disable continuous measurement
+    // disable interrupts
+    clrbits_le32(P_MSR_CLK_REG0,((1 << 18) | (1 << 17)));
+	clrsetbits_le32(P_MSR_CLK_REG0,(0x1f<<20),(clk_mux<<20)|(1<<19)|(1<<16));
+
+	aml_read_reg32(P_MSR_CLK_REG0);
+    // Wait for the measurement to be done
+      do {
+        regval = aml_read_reg32(P_MSR_CLK_REG0);
+    } while (regval & (1 << 31));
+    // disable measuring
+	clrbits_le32(P_MSR_CLK_REG0,(1 << 16));
+	 msr=(aml_read_reg32(P_MSR_CLK_REG2)+31)&0x000FFFFF;
+    // Return value in MHz*measured_val
+    return (msr>>6)*1000000;
+
+
+
+/*
+    unsigned int regval = 0;
+    /// Set the measurement gate to 64uS
+    clrsetbits_le32(P_MSR_CLK_REG0,0xffff,63);
+
+    // Disable continuous measurement
+    // disable interrupts
+    clrsetbits_le32(P_MSR_CLK_REG0,
+        ((1 << 18) | (1 << 17)|(0x1f << 20)),///clrbits
+        (clk_mux << 20) |                    /// Select MUX
+        (1 << 19) |                          /// enable the clock
+        (1 << 16));
+    // Wait for the measurement to be done
+    regval = aml_read_reg32(P_MSR_CLK_REG0);
+    do {
+        regval = aml_read_reg32(P_MSR_CLK_REG0);
+    } while (regval & (1 << 31));
+
+    // disable measuring
+    clrbits_le32(P_MSR_CLK_REG0, (1 << 16));
+    regval = (aml_read_reg32(P_MSR_CLK_REG2) + 31) & 0x000FFFFF;
+    // Return value in MHz*measured_val
+    return (regval >> 6)*1000000;
+*/
+}
+#else
+unsigned int clk_util_clk_msr(unsigned int clk_mux)
+{
+    unsigned int regval = 0;
+    /// Set the measurement gate to 64uS
+    clrsetbits_le32(P_MSR_CLK_REG0,0xffff,121);///122us
+
+    // Disable continuous measurement
+    // disable interrupts
+    clrsetbits_le32(P_MSR_CLK_REG0,
+        ((1 << 18) | (1 << 17)|(0x1f << 20)),///clrbits
+        (clk_mux << 20) |                    /// Select MUX
+        (1 << 19) |                          /// enable the clock
+        (1 << 16));
+    // Wait for the measurement to be done
+    regval = aml_read_reg32(P_MSR_CLK_REG0);
+    do {
+        regval = aml_read_reg32(P_MSR_CLK_REG0);
+    } while (regval & (1 << 31));
+
+    // disable measuring
+    clrbits_le32(P_MSR_CLK_REG0, (1 << 16));
+    regval = (aml_read_reg32(P_MSR_CLK_REG2)) & 0x000FFFFF;
+    regval += (regval/10000) * 6;
+    // Return value in MHz*measured_val
+    return (regval << 13);
+}
+
+#endif
+
+
+#ifdef  CONFIG_CORE_FREQ_TRACK
+
+#define CORE_FREQ_MAJOR     229
+#include <asm/processor.h>
+#include <asm/uaccess.h>
+#include <linux/fs.h>
+#include <linux/types.h>
+
+#define CORE_FREQ_LINK_SIZE     1023
+
+struct core_clock {
+    unsigned long long  kernel_time;
+    unsigned long       core_freq;
+};
+
+struct core_clock_info  {
+    struct core_clock_info *next;
+    struct core_clock       core_clock[CORE_FREQ_LINK_SIZE];
+};
+
+#define CPU_FREQ_MAX            1320
+#define CPU_FREQ_STEP_SIZE      24
+static struct core_clock core_clock_total[CPU_FREQ_MAX / CPU_FREQ_STEP_SIZE + 1];
+static signed int  core_freq_track_start  = -1;
+static unsigned int  core_freq_track_detail = 0;
+static unsigned int  core_freq_track_cnt    = 0;
+static unsigned int  core_freq_track_idx    = 0;
+static unsigned long long start_time = 0;
+static unsigned long long stop_time  = 0;
+static unsigned long long prev_time  = 0;
+static unsigned long prev_freq  = 0;
+static struct core_clock_info *aml_core_clock_info = NULL;
+
+static int core_freq_track_open(struct inode *inode, struct file *file)
+{
+    return 0;
+}
+
+static int core_freq_track_release(struct inode *inode, struct file *file)
+{
+    return 0;
+}
+
+extern u64 sched_clock_cpu(int cpu);
+static unsigned long long cpu_clock(int cpu)
+{
+	unsigned long long clock;
+	unsigned long flags;
+
+	local_irq_save(flags);
+	clock = sched_clock_cpu(cpu);
+	local_irq_restore(flags);
+
+	return clock;
+}
+
+static void do_core_freq_track(unsigned long freq)
+{
+    unsigned long long ker_time;
+    struct core_clock_info *next;
+    struct core_clock_info *tmp;
+
+    ker_time = cpu_clock(smp_processor_id());
+    if (!core_freq_track_cnt) {                     // first record
+        start_time = ker_time;
+        prev_freq  = freq;
+        prev_time  = ker_time;
+        if (core_freq_track_detail && aml_core_clock_info) {
+            aml_core_clock_info->core_clock[core_freq_track_idx].kernel_time = ker_time;
+            aml_core_clock_info->core_clock[core_freq_track_idx].core_freq   = freq;
+            core_freq_track_idx++;
+        }
+        core_freq_track_cnt++;
+        return ;
+    } else {
+        core_clock_total[prev_freq / (CPU_FREQ_STEP_SIZE * 1000000)].kernel_time += ker_time - prev_time;
+        prev_freq = freq;
+        prev_time = ker_time;
+        stop_time = ker_time;
+        core_freq_track_cnt++;
+        if (core_freq_track_detail && aml_core_clock_info) {
+            aml_core_clock_info->core_clock[core_freq_track_idx].kernel_time = ker_time;
+            aml_core_clock_info->core_clock[core_freq_track_idx].core_freq   = freq;
+            core_freq_track_idx++;
+            if (core_freq_track_idx >= CORE_FREQ_LINK_SIZE) {
+                next = kzalloc(sizeof(*next), GFP_KERNEL);
+                tmp  = aml_core_clock_info;
+                while (tmp->next) {
+                    tmp = tmp->next;
+                }
+                tmp->next = next;
+                if (next == NULL) {
+                    printk(" ##ERROR, allocate memory failed, stop track\n");
+                    core_freq_track_start = 0;
+                    return;
+                }
+                core_freq_track_idx = 0;
+            }
+        }
+    }
+}
+
+static ssize_t core_freq_track_read(struct file *file, char __user *buf, size_t len,
+                                    loff_t *ppos)
+{
+    int     size = 0;
+    char    rbuf[200];
+    unsigned long long t;
+    unsigned long long total_time = stop_time - start_time;
+    unsigned long long temp_time;
+    unsigned long tmp1, tmp2;
+    unsigned long percent;
+    unsigned long ns;
+    static read_step = 0;
+    static read_idx  = 0;
+    static struct core_clock_info *next = NULL;
+    struct core_clock_info *tmp;
+
+    if (core_freq_track_start < 0) {
+        printk("usage:\n"
+               "echo 0 > /dev/core_freq     stop track\n"
+               "     1 > /dev/core_freq     start track, but not collect details\n"
+               "     2 > /dev/core_freq     start track, with details\n");
+        return 0;
+    }
+    // first , sprintf total statistics
+    if (!read_step) {
+        if (!read_idx) {
+            size += sprintf(rbuf + size, "freq,      time,     %\n");
+        }
+        while (read_idx < ARRAY_SIZE(core_clock_total)) {
+            if (!core_clock_total[read_idx].kernel_time) {
+                read_idx++;
+            } else {
+                if (core_clock_total[read_idx].kernel_time) {
+                    t  = core_clock_total[read_idx].kernel_time;
+                    temp_time = t;
+                    do_div(temp_time,  100000);
+                    do_div(total_time, 100000000);
+                    tmp1 = (unsigned long)temp_time;
+                    tmp2 = (unsigned long)total_time;
+                    percent = tmp1 / tmp2;
+                    ns = do_div(t, 1000000000);
+                    size += sprintf(rbuf + size, "%4d, %6u.%06u, %2d.%01d\n",
+                                    read_idx * 24, (unsigned long)t, ns / 1000,
+                                    percent / 10, percent % 10);
+                }
+                read_idx++;
+                break;
+            }
+        }
+        if (read_idx >= ARRAY_SIZE(core_clock_total)) {
+            read_idx = 0;
+            read_step++;
+            size += sprintf(rbuf + size, "start time,   stop time,   total time\n");
+            t  = start_time;
+            ns = do_div(t, 1000000000);
+            size += sprintf(rbuf + size, "%6u.%06u, ", (unsigned long)t, ns / 1000);
+            t  = stop_time;
+            ns = do_div(t, 1000000000);
+            size += sprintf(rbuf + size, "%6u.%06u, ",  (unsigned long)t, ns / 1000);
+            t  = stop_time - start_time;;
+            ns = do_div(t, 1000000000);
+            size += sprintf(rbuf + size, "%6u.%06u\n", (unsigned long)t, ns / 1000);
+            if (core_freq_track_detail) {
+                size += sprintf(rbuf + size, "\ndetails:\n");
+                next = aml_core_clock_info;
+            }
+        }
+        copy_to_user(buf, rbuf, size);
+        return size;
+    }
+    if (read_step == 1) {       // sprintf details
+        if (next) {
+            if (next->core_clock[read_idx].core_freq) {
+                t = next->core_clock[read_idx].kernel_time;
+                ns = do_div(t, 1000000000);
+                size += sprintf(rbuf + size, "%6d.%06d, %4d\n",
+                                (unsigned long)t, ns / 1000, next->core_clock[read_idx].core_freq / 1000000);
+            } else {
+                // at end of detail
+                kfree(next);
+                read_step = 0;
+                read_idx  = 0;
+                next = NULL;
+                aml_core_clock_info = NULL;
+                return 0;
+            }
+            read_idx++;
+            if (read_idx >= CORE_FREQ_LINK_SIZE) {
+                tmp  = next;
+                next = next->next;
+                kfree(tmp);
+            }
+            copy_to_user(buf, rbuf, size);
+            return size;
+        }
+    }
+
+    read_step = 0;
+    read_idx  = 0;
+    next = NULL;
+
+    return 0;
+}
+
+static ssize_t core_freq_track_write(struct file *file, char __user *buf, size_t len,
+                                     loff_t *ppos)
+{
+    char    value;
+    unsigned long long ker_time;
+    struct core_clock_info *tmp, *next;
+
+    copy_from_user(&value, buf, sizeof(char));
+
+    switch (value) {
+    case '0':
+        if (core_freq_track_start) {
+            ker_time = cpu_clock(0);
+            core_clock_total[prev_freq / (CPU_FREQ_STEP_SIZE * 1000000)].kernel_time += ker_time - prev_time;
+            stop_time = ker_time;
+            core_freq_track_cnt++;
+            if (core_freq_track_detail && aml_core_clock_info) {
+                aml_core_clock_info->core_clock[core_freq_track_idx].kernel_time = ker_time;
+                aml_core_clock_info->core_clock[core_freq_track_idx].core_freq   = prev_freq;
+                core_freq_track_idx++;
+                if (core_freq_track_idx >= CORE_FREQ_LINK_SIZE) {
+                    next = kzalloc(sizeof(*next), GFP_KERNEL);
+                    tmp  = aml_core_clock_info;
+                    while (tmp->next) {
+                        tmp = tmp->next;
+                    }
+                    tmp->next = next;
+                    if (next == NULL) {
+                        printk(" ##ERROR, allocate memory failed, stop track\n");
+                        core_freq_track_start = 0;
+                        return;
+                    }
+                    core_freq_track_idx = 0;
+                }
+            }
+        }
+        core_freq_track_start  = 0;
+        printk("core freq track stop, got %d samples\n", core_freq_track_cnt);
+        break;
+
+    case '1':
+        memset(core_clock_total, 0, sizeof(core_clock_total));
+        core_freq_track_cnt    = 0;
+        core_freq_track_detail = 0;
+        core_freq_track_start  = 1;
+        printk("start track, but not with details\n");
+        break;
+
+    case '2':
+        memset(core_clock_total, 0, sizeof(core_clock_total));
+        if (!aml_core_clock_info) {
+            aml_core_clock_info = kzalloc(sizeof(struct core_clock_info), GFP_KERNEL);
+            if (!aml_core_clock_info) {
+                printk("ERROR, allocate memory failed\n");
+                return -1;
+            } else {
+                printk(" allocate memory success, addr:%p\n", aml_core_clock_info);
+            }
+        }
+        core_freq_track_cnt    = 0;
+        core_freq_track_idx    = 0;
+        core_freq_track_detail = 1;
+        core_freq_track_start  = 1;
+        printk("start track, with details\n");
+        break;
+
+    default:
+        printk("unsupport command, %c\n", value);
+        break;
+    }
+    return len;
+}
+
+static struct file_operations core_freq_ops = {
+    .open    = core_freq_track_open,
+    .read    = core_freq_track_read,
+    .write   = core_freq_track_write,
+    .release = core_freq_track_release,
+};
+
+static struct class *core_freq_class = NULL;
+
+static int __init core_freq_track_init(void)
+{
+    int res;
+
+    res = register_chrdev(CORE_FREQ_MAJOR, "core_freq", &core_freq_ops);
+    core_freq_class = class_create(THIS_MODULE, "core_freq");
+    if (res < 0 || !core_freq_class) {
+        printk("register dev failed\n");
+        return -1;
+    }
+    device_create(core_freq_class, NULL, MKDEV(CORE_FREQ_MAJOR, 2), NULL, "core_freq");
+    return 0;
+}
+
+static void __exit core_freq_track_exit(void)
+{
+    unregister_chrdev(CORE_FREQ_MAJOR, "core_freq");
+}
+
+module_init(core_freq_track_init);
+module_exit(core_freq_track_exit);
+
+#endif  /* CONFIG_CORE_FREQ_TRACK */
+
+
+unsigned long mali_clock_gating_lock(void)
+{
+	unsigned long flags;
+
+	spin_lock_irqsave(&mali_clk_lock, flags);
+
+    return flags;
+}
+EXPORT_SYMBOL(mali_clock_gating_lock);
+
+void mali_clock_gating_unlock(unsigned long flags)
+{
+	spin_unlock_irqrestore(&mali_clk_lock, flags);
+}
+EXPORT_SYMBOL(mali_clock_gating_unlock);
+
+
+int    clk_measure(char  index )
+{
+	const char* clk_table[]={
+	" CTS_MIPI_PHY_CLK(50)",
+	" AM_RING_OSC_OUT_MALI[1](49)",
+	" AM_RING_OSC_OUT_MALI[0](48)",
+	" AM_RING_OSC_OUT_A9[1](47)",
+	" AM_RING_OSC_OUT_A9[0](46)",
+	" CTS_PWM_A_CLK(45)",
+	" CTS_PWM_B_CLK(44)",
+	" CTS_PWM_C_CLK(43)",
+	" CTS_PWM_D_CLK(42)",
+	" CTS_ETH_TX(41)",
+	" CTS_PCM_MCLK(40)",
+	" CTS_PCM_SCLK(39)",
+	" CTS_VDIN_MEAS_CLK(38)",
+	" CTS_VDAC_CLK1(37)",
+	" CTS_HDMI_TX_PIXEL_CLK(36)",
+	" CTS_MALI_CLK (35)",
+	" CTS_SDHC_CLK1(34)",
+	" CTS_SDHC_CLK0(33)",
+	" CTS_VDAC_CLK(32)",
+	" Reserved(31)",
+	" CTS_SLOW_DDR_CLK(30)",
+	" CTS_VDAC_CLK0(29)",
+	" CTS_SAR_ADC_CLK(28)",
+	" CTS_ENCI_CL(27)",
+	" SC_CLK_INT(26)",
+	" SYS_PLL_DIV3(25)",
+	" LVDS_FIFO_CLK(24)",
+	" HDMI_CH0_TMDSCLK(23)",
+	" CLK_RMII_FROM_PAD (22)",
+	" MOD_AUDIN_AMCLK_I(21)",
+	" RTC_OSC_CLK_OUT (20)",
+	" CTS_HDMI_SYS_CLK(19)",
+	" CTS_LED_PLL_CLK(18)",
+	" CTS_VGHL_PLL_CLK (17)",
+	" CTS_FEC_CLK_2(16)",
+	" CTS_FEC_CLK_1 (15)",
+	" CTS_FEC_CLK_0 (14)",
+	" CTS_AMCLK(13)",
+	" VID2_PLL_CLK(12)",
+	" CTS_ETH_RMII(11)",
+	" CTS_ENCT_CLK(10)",
+	" CTS_ENCL_CLK(9)",
+	" CTS_ENCP_CLK(8)",
+	" CLK81 (7)",
+	" VID_PLL_CLK(6)",
+	" USB1_CLK_12MHZ (5)",
+	" USB0_CLK_12MHZ (4)",
+	" DDR_PLL_CLK(3)",
+	" Reserved(2)",
+	" AM_RING_OSC_CLK_OUT1(1)",
+	" AM_RING_OSC_CLK_OUT0(0)",
+	};
+	int  i;
+	int len = sizeof(clk_table)/sizeof(char*) - 1;
+	if (index  == 0xff)
+	{
+	 	for(i = 0;i < len;i++)
+		{
+			printk("[%10d]%s\n",clk_util_clk_msr(i),clk_table[len-i]);
+		}
+		return 0;
+	}
+	printk("[%10d]%s\n",clk_util_clk_msr(index),clk_table[len-index]);
+	return 0;
+}
+
+long clk_round_rate(struct clk *clk, unsigned long rate)
+{
+	if (clk == NULL || IS_ERR(clk))
+		return -EINVAL;
+
+    if (rate < clk->min)
+        return clk->min;
+
+    if (rate > clk->max)
+        return clk->max;
+
+    return rate;
+}
+EXPORT_SYMBOL(clk_round_rate);
+
+unsigned long clk_get_rate(struct clk *clk)
+{
+	if (clk == NULL || IS_ERR(clk))
+		return -EINVAL;
+
+    if (clk->get_rate)
+		return clk->get_rate(clk);
+	else
+		return clk->rate;
+}
+EXPORT_SYMBOL(clk_get_rate);
+
+int on_parent_changed(struct clk *clk, int rate, int before,int failed)
+{
+	struct clk_ops* pops = clk->clk_ops;
+	while(pops){
+		if(before == 1){
+				if(pops->clk_ratechange_before)
+					pops->clk_ratechange_before(rate,pops->privdata);
+		}
+		else{
+				if(pops->clk_ratechange_after)
+					pops->clk_ratechange_after(rate,pops->privdata,failed);
+		}
+		pops = pops->next;
+	}
+	return 0;
+}
+
+int meson_notify_childs_changed(struct clk *clk,int before,int failed)
+{
+	struct clk* p;
+	if(IS_CLK_ERR(clk))
+		return 0;
+	p = (struct clk*)(clk->child.next);
+	if (p) {
+		unsigned long flags;
+
+		int rate = clk_get_rate(p);
+		spin_lock_irqsave(&clockfw_lock, flags);
+		on_parent_changed(p,rate,before,failed);
+		spin_unlock_irqrestore(&clockfw_lock, flags);
+
+		meson_notify_childs_changed(p,before,failed);
+
+		p = (struct clk*)p->sibling.next;
+		while(p){
+		  spin_lock_irqsave(&clockfw_lock, flags);
+			on_parent_changed(p,rate,before,failed);
+			spin_unlock_irqrestore(&clockfw_lock, flags);
+
+			meson_notify_childs_changed(p,before,failed);
+
+			p = (struct clk*)p->sibling.next;
+		}
+	}
+	return 0;
+}
+
+//flow. self -> child -> child slibling
+int meson_clk_set_rate(struct clk *clk, unsigned long rate)
+{
+	unsigned long flags=0;
+	int ret;
+	int ops_run_count;
+	struct clk_ops *p;
+
+	if(clk->set_rate == NULL || IS_CLK_ERR(clk))
+			return 0;
+	//post message before clk change.
+	{
+			ret = 0;
+			ops_run_count = 0;
+			p = clk->clk_ops;
+			while(p){
+				ops_run_count++;
+				if(p->clk_ratechange_before)
+					ret = p->clk_ratechange_before(rate, p->privdata);
+				if(ret != 0)
+					break;
+				p = p->next;
+			}
+			meson_notify_childs_changed(clk,1,ret);
+	}
+
+
+	if(ret == 0){
+	  if (!clk->open_irq)
+	      spin_lock_irqsave(&clockfw_lock, flags);
+	  else
+	      spin_lock(&clockfw_lock);
+//		printk(KERN_INFO "%s() clk=%p rate=%lu\n", __FUNCTION__, clk, rate);
+	  if(clk->set_rate)
+	  	ret = clk->set_rate(clk, rate) ;
+	  if (!clk->open_irq)
+	      spin_unlock_irqrestore(&clockfw_lock, flags);
+	  else
+	      spin_unlock(&clockfw_lock);
+	}
+
+	//post message after clk change.
+	{
+			int idx = 0;
+			p = clk->clk_ops;
+			while(p){
+				idx++;
+				if(idx > ops_run_count)
+					break;
+				if(p->clk_ratechange_after)
+						p->clk_ratechange_after(rate, p->privdata,ret);
+				p = p->next;
+			}
+	}
+
+	meson_notify_childs_changed(clk,0,ret);
+
+  return ret;
+}
+
+int clk_set_rate(struct clk *clk, unsigned long rate)
+{
+	int ret=0;
+	int parent_rate = 0;
+	if(IS_CLK_ERR(clk))
+		return 0;
+	if(clk_get_rate(clk) == rate){
+			return 0;
+	}
+
+	if(clk->need_parent_changed){
+		unsigned long flags;
+	  spin_lock_irqsave(&clockfw_lock, flags);
+		parent_rate = clk->need_parent_changed(clk, rate);
+	  spin_unlock_irqrestore(&clockfw_lock, flags);
+	}
+
+	if(parent_rate != 0)
+		clk_set_rate(clk->parent,parent_rate);
+	else{
+		mutex_lock(&clock_ops_lock);
+		//printk(KERN_INFO "%s() clk=%p rate=%lu\n", __FUNCTION__, clk, rate);
+		ret = meson_clk_set_rate(clk,rate);
+	 	mutex_unlock(&clock_ops_lock);
+	}
+	return ret;
+}
+EXPORT_SYMBOL(clk_set_rate);
+
+unsigned long long clkparse(const char *ptr, char **retptr)
+{
+    char *endptr;   /* local pointer to end of parsed string */
+
+    unsigned long long ret = simple_strtoull(ptr, &endptr, 0);
+
+    switch (*endptr) {
+    case 'G':
+    case 'g':
+        ret *= 1000;
+    case 'M':
+    case 'm':
+        ret *= 1000;
+    case 'K':
+    case 'k':
+        ret *= 1000;
+        endptr++;
+    default:
+        break;
+    }
+
+    if (retptr) {
+        *retptr = endptr;
+    }
+
+    return ret;
+}
+
+int meson_enable(struct clk *clk)
+{
+	if (IS_CLK_ERR(clk))
+		return 0;
+
+	if (clk_get_status(clk) == 1)
+		return 0;
+
+	if (meson_enable(clk->parent) == 0) {
+			struct clk_ops *p;
+			int idx;
+			int ops_run_count = 0;
+			int ret = 0;
+			p = clk->clk_ops;
+			while(p){
+					ops_run_count++;
+					if(p->clk_enable_before)
+						ret = p->clk_enable_before(p->privdata);
+					if(ret == 1)
+						break;
+					p = p->next;
+			}
+
+			if(ret == 0){
+				if(clk->enable)
+					ret = clk->enable(clk);
+				else if(clk->clk_gate_reg_adr != 0)
+					aml_set_reg32_mask(clk->clk_gate_reg_adr,clk->clk_gate_reg_mask);
+					ret = 0;
+			}
+
+			p = clk->clk_ops;
+			idx = 0;
+			while(p){
+				idx++;
+				if(idx > ops_run_count)
+					break;
+				if(p->clk_enable_after)
+					 p->clk_enable_after(p->privdata,ret);
+				p = p->next;
+			}
+
+			return ret;
+		}
+		else
+			return 1;
+}
+int clk_enable(struct clk *clk)
+{
+		int ret;
+		mutex_lock(&clock_ops_lock);
+		ret = meson_enable(clk);
+		mutex_unlock(&clock_ops_lock);
+		return ret;
+}
+EXPORT_SYMBOL(clk_enable);
+
+int  meson_clk_disable(struct clk *clk)
+{
+		int ret = 0;
+		int ops_run_count = 0;
+		if(IS_CLK_ERR(clk))
+			return 0;
+		if(clk_get_status(clk) == 0)
+			return 0;
+
+		if(clk->child.next){
+			struct clk* pchild = (struct clk*)(clk->child.next);
+			if(meson_clk_disable(pchild) != 0)
+				return 1;
+			pchild = (struct clk*)pchild->sibling.next;
+			while(pchild){
+				if(meson_clk_disable(pchild) != 0)
+					return 1;
+				pchild = (struct clk*)pchild->sibling.next;
+			}
+		}
+
+		//do clk disable
+		//post message before clk disable.
+		{
+			struct clk_ops *p;
+			ret = 0;
+			p = clk->clk_ops;
+			while(p){
+				ops_run_count++;
+				if(p->clk_disable_before)
+					ret = p->clk_disable_before(p->privdata);
+				if(ret != 0)
+					break;
+				p = p->next;
+			}
+		}
+
+		//do clock gate disable
+		if(ret == 0){
+			if(clk->disable)
+				ret = clk->disable(clk);
+			else if(clk->clk_gate_reg_adr != 0){
+					aml_clr_reg32_mask(clk->clk_gate_reg_adr,clk->clk_gate_reg_mask);
+					ret = 0;
+			}
+		}
+
+		//post message after clk disable.
+		{
+			struct clk_ops *p;
+			int idx = 0;
+			p = clk->clk_ops;
+			while(p){
+				idx++;
+				if(idx > ops_run_count)
+					break;
+				if(p->clk_disable_after)
+						p->clk_disable_after(p->privdata,ret);
+				p = p->next;
+			}
+		}
+
+		return ret;
+}
+
+void clk_disable(struct clk *clk)
+{
+		mutex_lock(&clock_ops_lock);
+		meson_clk_disable(clk);
+		mutex_unlock(&clock_ops_lock);
+}
+EXPORT_SYMBOL(clk_disable);
+
+/**
+ * Section all get rate functions
+ */
+static unsigned long clk_msr_get(struct clk * clk)
+{
+	uint32_t temp;
+	uint32_t cnt = 0;
+	if(clk->rate>0)
+	{
+		return clk->rate;
+	}
+	if(clk->msr>0)
+	{
+		clk->rate = clk_util_clk_msr(clk->msr);
+	}else if (clk->parent){
+		cnt=clk_get_rate(clk->parent);
+		cnt /= 1000000;
+		clk->msr_mul=clk->msr_mul?clk->msr_mul:1;
+		clk->msr_div=clk->msr_div?clk->msr_div:1;
+		temp=cnt*clk->msr_mul;
+		clk->rate=temp/clk->msr_div;
+		clk->rate *= 1000000;
+	}
+	return clk->rate;
+}
+
+static unsigned long clk_get_rate_xtal(struct clk * clkdev)
+{
+	unsigned long clk;
+	clk = aml_get_reg32_bits(P_PREG_CTLREG0_ADDR, 4, 6);
+	clk = clk * 1000 * 1000;
+	return clk;
+}
+
+static unsigned long clk_get_rate_sys(struct clk * clkdev)
+{
+	unsigned long clk;
+	if (clkdev && clkdev->rate)
+		clk = clkdev->rate;
+	else {
+		//using measure sys div3 to get sys pll clock. (25)
+		unsigned long mul, div, od, temp;
+		unsigned long long result;
+		clk = clk_get_rate_xtal(NULL);
+		temp = aml_read_reg32(P_HHI_SYS_PLL_CNTL);
+		mul=temp&((1<<9)-1);
+		div=(temp>>9)&0x3f;
+		od=(temp>>16)&3;
+		result=((u64)clk)*((u64)mul);
+		do_div(result,div);
+		clk = (unsigned long)(result>>od);
+	}
+	return clk;
+}
+
+static unsigned long clk_get_rate_a9(struct clk * clkdev)
+{
+	unsigned long clk = 0;
+	unsigned int sysclk_cntl;
+
+	if (clkdev && clkdev->rate)
+		return clkdev->rate;
+
+	sysclk_cntl = aml_read_reg32(P_HHI_SYS_CPU_CLK_CNTL);
+	if((sysclk_cntl & (1<<7)) == 0)
+		clk = clk_get_rate_xtal(NULL);
+	else{
+		unsigned long parent_clk = 0;
+		unsigned int pll_sel = sysclk_cntl&3;
+		if(pll_sel == 0)
+			parent_clk = clk_get_rate_xtal(NULL);
+		else if(pll_sel == 1)
+			parent_clk = clk_get_rate_sys(clkdev->parent);
+		else if(pll_sel == 2)
+			parent_clk = clk_util_clk_msr(3);//ddr clock
+		else
+			printk(KERN_INFO "Error : A9 parent pll selection incorrect!");
+		if(parent_clk > 0){
+			unsigned int N = (sysclk_cntl >> 8) & 0x3F;
+			unsigned int div = 1;
+			unsigned sel = (sysclk_cntl >> 2) & 3;
+			if(sel == 1)
+				div = 2;
+			else if(sel == 2)
+				div = 3;
+			else if(sel == 3)
+				div = 2 * N;
+			clk = parent_clk / div;
+		}
+	}
+	if (clk == 0) {
+		pr_info("clk_get_rate_a9 measured clk=0 sysclk_cntl=%#x\n", sysclk_cntl);
+	}
+
+	return clk;
+}
+
+static unsigned long a9_cur_clk = 0;
+#ifdef CONFIG_HAVE_ARM_TWD
+static unsigned long clk_get_rate_smp_twd(struct clk * clkdev)
+{
+
+    return (a9_cur_clk ? a9_cur_clk : clk_get_rate_a9(NULL)) / 4;
+}
+#endif /* CONFIG_HAVE_ARM_TWD */
+
+/**
+ * udelay will delay depending on lpj.  lpj is adjusted before|after
+ * cpu freq is changed, so udelay could take longer or shorter than
+ * expected. This function scales the udelay value to get a more
+ * accurate delay during cpu freq changes.
+ * lpj is adjust elsewhere, so drivers don't need to worry about this.
+ */
+static inline void udelay_scaled(unsigned long usecs, unsigned int oldMHz,
+                                 unsigned int newMHz)
+{
+	udelay(usecs * newMHz / oldMHz);
+}
+
+/**
+ *  Internal CPU clock rate setting function.
+ *
+ *  MUST be called with proper protection.
+ */
+static int _clk_set_rate_cpu(struct clk *clk, unsigned long cpu, unsigned long gpu)
+{
+	unsigned long parent = 0;
+	unsigned long oldcpu = clk_get_rate_a9(clk);
+	unsigned int cpu_clk_cntl = aml_read_reg32(P_HHI_SYS_CPU_CLK_CNTL);
+	unsigned int idx;
+
+	//printk(KERN_INFO "(CTS_CPU_CLK) %ldMHz --> %ldMHz (0x%x)\n", clk_get_rate_a9(clk) / 1000000, cpu / 1000000, cpu_clk_cntl);
+
+	/**
+	 *  CPU <-> GPU clock need to satisfy the following:
+	 *
+	 *      CPU > GPU
+	 *
+	 *  If GPU is busy then abort the scaling request.
+	 */
+#if 0
+	if (aml_read_reg32(P_HHI_MALI_CLK_CNTL) & (1 << 8)) {
+		if (!gpu)
+			gpu = clk_util_clk_msr(35);
+		if (cpu <= gpu) {
+			unsigned int min_cpu = gpu_to_min_cpu(gpu / 1000) * 1000;
+			// already at min
+			if (oldcpu == min_cpu)
+				return -EINVAL;
+			// bring target cpu freq down only to minimum this gpu freq supports
+			if (cpu < min_cpu)
+				cpu = min_cpu;
+		}
+		else if(cpu < gpu + 24000000)
+    			cpu += 24000000;
+	}
+#endif
+	if ((cpu_clk_cntl & 3) == 1) {
+		unsigned int n = 0;
+		//unsigned char factor = 1;
+		unsigned int scale_out = 0;
+
+		parent = clk_get_rate_sys(clk->parent);
+		// CPU switch to xtal
+		aml_write_reg32(P_HHI_SYS_CPU_CLK_CNTL, cpu_clk_cntl & ~(1 << 7));
+		if (oldcpu <= cpu) {
+			// when increasing frequency, lpj has already been adjusted
+			udelay_scaled(10, cpu / 1000000, 24 /*clk_get_rate_xtal*/);
+		} else {
+			// when decreasing frequency, lpj has not yet been adjusted
+			udelay_scaled(10, oldcpu / 1000000, 24 /*clk_get_rate_xtal*/);
+		}
+#if 0
+		if (parent == cpu)
+			scale_out = 0;
+		else if ((parent >> 1) == cpu)
+			scale_out = 1;
+		else if (parent == ((cpu << 1) + cpu))
+			scale_out = 2;
+		else {
+			parent = cpu;
+
+			while (parent < 750000000) {
+				switch (factor) {
+				case 1:
+					scale_out = 1;
+					factor = 2;
+					break;
+				case 2:
+					scale_out = 2;
+					factor = 3;
+					break;
+				default:
+					scale_out = 3;
+					n++;
+					factor = (n << 1);
+					break;
+				}
+
+				parent = cpu * factor;
+			}
+
+			set_sys_pll(clk->parent, parent);
+		}
+
+		cpu_clk_cntl = ((cpu_clk_cntl & ~((3 << 2) | (0x3f << 8))) | (scale_out << 2) | (n << 8));
+		printk(KERN_INFO "(CTS_CPU_CLK) syspll=%lu n=%d scale_out=%d cpu_clk_cntl=0x%x\n", parent, n, scale_out, cpu_clk_cntl);
+		aml_write_reg32(P_HHI_SYS_CPU_CLK_CNTL, cpu_clk_cntl);
+#else
+	#if 0
+		//set_sys_pll(clk->parent, cpu);
+	#else
+		clk->parent->old_rate = oldcpu;
+		idx = set_sys_pll(clk->parent, cpu);
+		get_a9_divid(idx, &n, &scale_out);
+		parent = clk_get_rate_sys(clk->parent);
+		// update actual cpu freq
+		cpu = parent;
+		cpu_clk_cntl = ((cpu_clk_cntl & ~((3 << 2) | (0x3f << 8))) | (scale_out << 2) | (n << 8));
+#ifdef CONFIG_CPU_FREQ_DEBUG_DETAIL
+		pr_debug("(CTS_CPU_CLK) syspll=%lu n=%d scale_out=%d cpu_clk_cntl=0x%x\n", parent, n, scale_out, cpu_clk_cntl);
+#endif /* CONFIG_CPU_FREQ_DEBUG_DETAIL */
+		aml_write_reg32(P_HHI_SYS_CPU_CLK_CNTL, cpu_clk_cntl);
+	#endif
+#endif
+		//_clk_set_rate_gpu(clk_get_sys("mali", "pll_fixed"), gpu / 1000000, cpu);
+		// cpu increased, adjust gpu
+		#if 0
+		if (cpu > a9_cur_clk)
+			_clk_set_rate_gpu(NULL, 0, cpu);
+		#endif
+		// Read CBUS for short delay, then CPU switch to sys pll
+		cpu_clk_cntl = aml_read_reg32(P_HHI_SYS_CPU_CLK_CNTL);
+		aml_write_reg32(P_HHI_SYS_CPU_CLK_CNTL, (cpu_clk_cntl) | (1 << 7));
+		if (oldcpu <= cpu) {
+			// when increasing frequency, lpj has already been adjusted
+			udelay(100);
+		} else {
+			// when decreasing frequency, lpj has not yet been adjusted
+			udelay_scaled(100, oldcpu / 1000000, cpu / 1000000);
+		}
+
+		// CPU switch to sys pll
+		//cpu_clk_cntl = aml_read_reg32(P_HHI_SYS_CPU_CLK_CNTL);
+		//aml_set_reg32_mask(P_HHI_SYS_CPU_CLK_CNTL, (1 << 7));
+ 	}
+
+	clk->rate = cpu;
+
+#ifdef CONFIG_CPU_FREQ_DEBUG
+	pr_debug("(CTS_CPU_CLK) CPU %ld.%ldMHz\n", clk_get_rate_a9(clk) / 1000000, clk_get_rate_a9(clk)%1000000);
+#endif /* CONFIG_CPU_FREQ_DEBUG */
+
+#ifdef CONFIG_CORE_FREQ_TRACK
+    if (core_freq_track_start > 0) {
+        do_core_freq_track(clk_get_rate_a9(clk));
+    }
+#endif  /* CONFIG_CORE_FREQ_TRACK */
+
+	return 0;
+}
+
+#ifdef CONFIG_SMP
+#define USE_ON_EACH_CPU 0
+struct clk_change_info{
+  int cpu;
+  struct clk * clk;
+  unsigned long rate;
+  int err;
+};
+
+#define MESON_CPU_CONTROL_REG (IO_AHB_BASE + 0x1ff80)
+#define MESON_CPU1_CONTROL_ADDR_REG (IO_AHB_BASE + 0x1ff84)
+#define MESON_CPU_STATUS_REG(cpu) (IO_AHB_BASE + 0x1ff90 +(cpu<<2))
+#define MESON_CPU_STATUS(cpu) aml_read_reg32(MESON_CPU_STATUS_REG(cpu))
+#define MESON_CPU_SET_STATUS(status) aml_write_reg32(MESON_CPU_STATUS_REG(smp_processor_id()),status)
+
+#define MESON_CPU_SLEEP		1
+#define MESON_CPU_WAKEUP	2
+
+void meson_set_cpu_ctrl_reg(int value)
+{
+	spin_lock(&clockfw_lock);
+	aml_write_reg32(MESON_CPU_CONTROL_REG, value);
+	spin_unlock(&clockfw_lock);
+}
+#if 0
+static unsigned long cpu_sleep_max_count = 0;
+static unsigned long cpu_wait_max_count = 0;
+
+static unsigned tag_print=0;
+#endif
+static inline unsigned long meson_smp_wait_others(unsigned status)
+{
+	unsigned long count = 0;
+	int mask;
+	int cpu = 0, my = smp_processor_id();
+
+	mask = (((1 << nr_cpu_ids) - 1) & (~(1 << my)));
+	do {
+		__asm__ __volatile__ ("wfe" : : : "memory");
+		for_each_online_cpu(cpu) {
+
+			if (cpu != my && MESON_CPU_STATUS(cpu) == status) {
+				count++;
+				mask &= ~(1 << cpu);
+			}
+		}
+
+	} while (mask);
+
+	return count;
+}
+
+static inline void meson_smp_init_transaction(void)
+{
+    int cpu;
+
+    aml_write_reg32(MESON_CPU_CONTROL_REG, 0);
+
+    for_each_online_cpu(cpu) {
+        aml_write_reg32(MESON_CPU_STATUS_REG(cpu), 0);
+    }
+}
+
+static void smp_a9_clk_change(struct clk_change_info * info)
+{
+    int cpu = smp_processor_id();
+#if USE_ON_EACH_CPU
+    unsigned long count = 0;
+    if (cpu != info->cpu) {
+        unsigned long flags;
+        MESON_CPU_SET_STATUS(MESON_CPU_SLEEP);
+        pr_debug("CPU%u: Hey CPU %d, I am going to sleep\n", cpu, info->cpu);
+        smp_wmb();
+	dsb_sev();
+	local_irq_save(flags);
+        while ((aml_read_reg32(MESON_CPU_CONTROL_REG) & (1 << cpu)) == 0) {
+		count++;
+
+            __asm__ __volatile__ ("wfe" : : : "memory");
+        }
+        local_irq_restore(flags);
+        MESON_CPU_SET_STATUS(MESON_CPU_WAKEUP);
+
+        if (count > cpu_sleep_max_count) cpu_sleep_max_count = count;
+
+        pr_debug("CPU%u: Hey CPU %d, I woke up (%lu %lu)\n", cpu, info->cpu, count, cpu_sleep_max_count);
+        smp_wmb();
+        dsb_sev();
+    }
+    else
+
+    {
+        pr_debug("CPU%u: Hey other CPU, I am waiting for you to sleep\n", cpu);
+
+        count = meson_smp_wait_others(MESON_CPU_SLEEP);
+        if (count > cpu_wait_max_count) cpu_wait_max_count = count;
+
+        pr_debug("CPU%u: All other CPU in sleep (%lu %lu)\n", cpu, count, cpu_wait_max_count);
+
+        info->err = _clk_set_rate_cpu(info->clk, info->rate, 0);
+        aml_write_reg32(MESON_CPU_CONTROL_REG, 0xf);
+        smp_wmb();
+        dsb_sev();
+    }
+
+#else
+        if(cpu!=info->cpu){
+            info->err = _clk_set_rate_cpu(info->clk, info->rate, 0);
+        }
+#endif
+}
+#endif /* CONFIG_SMP */
+
+
+
+static int clk_set_rate_a9(struct clk *clk, unsigned long rate)
+{
+#ifdef CONFIG_SMP
+	struct clk_change_info info;
+#endif /* CONFIG_SMP */
+	int error = 0;
+
+	if (rate < 1000)
+		rate *= 1000000;
+
+	if(freq_limit && rate > 1200000000)
+	{
+		rate = 1200000000;
+		printk("cpu freq limited to %lu \n", rate);
+	}
+#ifdef CONFIG_SMP
+#if USE_ON_EACH_CPU
+	if (aml_read_reg32(MESON_CPU_CONTROL_REG)) {
+#else
+	if (num_online_cpus()>1) {
+#endif
+		info.cpu  = smp_processor_id();
+		info.clk  = clk;
+		info.rate = rate;
+		info.err  = 0;
+#if USE_ON_EACH_CPU
+		meson_smp_init_transaction();
+		on_each_cpu((void (*) (void * info))smp_a9_clk_change, &info, 0);
+#else
+		smp_call_function((void (*) (void * info))smp_a9_clk_change, &info, 1);
+#endif
+		error = info.err;
+	}
+	else {
+		error = _clk_set_rate_cpu(clk, rate, 0);
+	}
+
+	if (error == 0)
+		a9_cur_clk = clk->rate;
+#else
+	error = _clk_set_rate_cpu(clk, rate, 0);
+#endif /* CONFIG_SMP */
+
+	return error;
+}
+
+#ifdef CONFIG_CLK81_DFS
+static int clk81_target_rate = 0;
+
+static int set_clk81_clock(int rate)
+{
+    aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 0, 8, 1); //switch to xtal
+    if (rate <= 100000000) {//100M
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 3, 0, 7); //div 4
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 7, 12, 3); //switch to fclk_div5
+    } else if (rate > 100000000 && rate <= 118000000) {//111M
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 5, 0, 7); //div 6
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 6, 12, 3); //switch to fclk_div3
+    } else if (rate > 118000000 && rate <= 132000000) {//125M
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 7, 0, 7); //div 8
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 5, 12, 3); //switch to fclk_div2
+    } else if (rate > 132000000 && rate <= 180000000) {//167M
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 3, 0, 7); //div 8
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 6, 12, 3); //switch to fclk_div3
+    } else if (rate > 180000000) {//200M
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 1, 0, 7); //div 2
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 7, 12, 3); //switch to fclk_div5
+    } else if (rate > 200000000) {//222M
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 2, 0, 7); //div 3
+        aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 6, 12, 3); //switch to fclk_div3
+    }
+    aml_read_reg32(P_HHI_MPEG_CLK_CNTL);
+    aml_set_reg32_bits(P_HHI_MPEG_CLK_CNTL, 1, 8, 1);
+}
+
+int check_and_set_clk81(void)
+{
+	if (clk81_target_rate > 0) {
+		set_clk81_clock(clk81_target_rate);
+		clk81_target_rate = 0;
+	}
+	return 0;
+}
+
+static int cal_final_clk81_clk(int rate)
+{
+    int ret;
+    if (rate <= 100000000) {//100M
+        ret = 100000000;
+    } else if (rate > 100000000 && rate <= 118000000) {//111M
+        ret = 111000000;
+    } else if (rate > 118000000 && rate <= 132000000) {//125M
+        ret = 125000000;
+    } else if (rate > 132000000 && rate <= 180000000) {//167M
+        ret = 167000000;
+    } else if (rate > 180000000) {//200M
+        ret = 200000000;
+    } else if (rate > 200000000) {//222M
+        ret = 222000000;
+    }
+    return ret;
+}
+
+static int clk_set_rate_clk81(struct clk *clk, unsigned long rate)
+{
+    int clk81_rate;
+    clk81_rate = clk_get_rate(clk);
+    if (cal_final_clk81_clk(rate) == clk81_rate)
+        return 0;
+    printk("pre clk81 rate is %d\n", clk81_rate);
+    printk("new clk81 rate is %d\n", rate);
+
+    clk81_target_rate = rate;
+
+    while(clk81_target_rate >0)
+        msleep(2);
+
+    clk->rate = clk_util_clk_msr(7); //mesure current clk81 clock
+
+    clk81_rate = clk_get_rate(clk);
+    aml_clr_reg32_mask(P_UART0_CONTROL, (1 << 19) | 0xFFF);
+    aml_set_reg32_mask(P_UART0_CONTROL, (((clk81_rate / (115200 * 4)) - 1) & 0xfff));
+    aml_clr_reg32_mask(P_UART1_CONTROL, (1 << 19) | 0xFFF);
+    aml_set_reg32_mask(P_UART1_CONTROL, (((clk81_rate / (115200 * 4)) - 1) & 0xfff));
+    aml_clr_reg32_mask(P_AO_UART_CONTROL, (1 << 19) | 0xFFF);
+    aml_set_reg32_bits(P_AO_UART_CONTROL, ((clk81_rate / (115200 * 4)) - 1) & 0xfff, 0, 12);
+    printk("                          \n");
+    printk("clk81 switch to %d\n", clk81_rate);
+}
+#endif /* CONFIG_CLK81_DFS */
+
+static unsigned long clk_get_rate_gpu(struct clk * clkdev)
+{
+	unsigned long clk = 0;
+	unsigned int gpu_clk_cntl = aml_read_reg32(P_HHI_MALI_CLK_CNTL);
+	int src = (gpu_clk_cntl >> 9) & 7;
+	int N = (gpu_clk_cntl & 0x7F) + 1;
+
+	//printk(KERN_INFO "%s() cntl=0x%x src=%d N=%d\n", __FUNCTION__, gpu_clk_cntl, src, N);
+	if (src == 7)
+		clk = 2000000000 / (5 * N);
+	else if (src == 6)
+		clk = 2000000000 / (3 * N);
+	else if (src == 5)
+		clk = 2000000000 / (2 * N);
+	else
+		clk = 0;
+
+	return clk;
+}
+
+static unsigned int gpu_pll_cntl_lookup[] = {
+	0x0400,	// DPLL / 1  = N/A (400)
+	0x0400,	// DPLL / 2  = N/A (400)
+	0x0400,	// DPLL / 3  = N/A (400)
+	0x0400,	// DPLL / 4  = N/A (400)
+	0x0400,	// DPLL / 5  = 400
+	0x0201,	// DPLL / 6  = 333
+	0x0003,	// DPLL / 7  = N/A (250)
+	0x0003,	// DPLL / 8  = 250
+	0x0202,	// DPLL / 9  = 222
+	0x0401,	// DPLL / 10 = 200
+	0x0203,	// DPLL / 11 = N/A (167)
+	0x0203,	// DPLL / 12 = 167
+	0x0006,	// DPLL / 13 = N/A (143)
+	0x0006,	// DPLL / 14 = 143
+	0x0204,	// DPLL / 15 = 133
+	0x0007,	// DPLL / 16 = 125
+	0x0205,	// DPLL / 17 = N/A (111)
+	0x0205,	// DPLL / 18 = 111
+	0x0403,	// DPLL / 19 = N/A (100)
+	0x0403,	// DPLL / 20 = 100
+	0x0206,	// DPLL / 21 = 95
+	0x0207,	// DPLL / 22 = N/A (83)
+	0x0207,	// DPLL / 23 = N/A (83)
+	0x0207,	// DPLL / 24 = 83
+	0x0209,	// DPLL / 25 = N/A (66)
+	0x0209,	// DPLL / 26 = N/A (66)
+	0x0209,	// DPLL / 27 = N/A (66)
+	0x0209,	// DPLL / 28 = N/A (66)
+	0x0209,	// DPLL / 29 = N/A (66)
+	0x0209,	// DPLL / 30 = 66
+};
+
+static unsigned int gpu_to_min_cpu(unsigned int gpu)
+{
+	if (gpu == 0)
+		gpu = mali_max;
+	//NOTICE cpu rates must be rounded to final rate
+	if (gpu <=  83000) return  96000;
+	if (gpu <= 111000) return 120000;
+	if (gpu <= 167000) return 168000;
+	if (gpu <= 250000) return 264000;
+	if (gpu <= 333000) return 336000;
+	return 408000;
+}
+
+/**
+ *  Internal GPU clock rate setting function.
+ *
+ *  MUST be called with proper protection.
+ */
+static int _clk_set_rate_gpu(struct clk *clk, unsigned long gpu, unsigned long cpu)
+{
+	unsigned long mali_flags;
+	int enabled;
+
+	cpu /= 1000000;
+#if 0
+	if (!gpu) {
+		if (cpu >= 400)
+			gpu = 400;
+		else if (cpu > 333)
+			gpu = 333;
+		else if (cpu > 250)
+			gpu = 250;
+		else if (cpu > 166)
+			gpu = 166;
+		else if (cpu > 111)
+			gpu = 111;
+		else if (cpu > 83)
+			gpu = 83;
+		else
+			gpu = 66;
+	} else if (gpu > 400)
+		gpu = 400;
+
+	if (gpu > (mali_max / 1000))
+		gpu = mali_max / 1000;
+
+	if (gpu == (clk_get_rate_gpu(NULL) / 1000000))
+		return 0;
+#endif
+	mali_flags = mali_clock_gating_lock();
+
+	enabled = (aml_read_reg32(P_HHI_MALI_CLK_CNTL) & (1 << 8));
+	if (enabled)
+		aml_clr_reg32_mask((P_HHI_MALI_CLK_CNTL), (1 << 8));
+
+	aml_clr_reg32_mask(P_HHI_MALI_CLK_CNTL, 0x7F | (0x7 << 9));
+	aml_set_reg32_mask(P_HHI_MALI_CLK_CNTL,0xf00);//0xd01=330M; 0xf00=400M
+
+	mali_clock_gating_unlock(mali_flags);
+
+	if (enabled) {
+		pr_debug("%s() cpu=%luMHz gpu=%luMHz idx=%ld cntl=0x%x\n", __FUNCTION__, cpu, gpu, 2000 / gpu - 1, gpu_pll_cntl_lookup[2000 / gpu - 1]);
+		pr_debug("%s() gpu=%luMHz\n", __FUNCTION__, clk_get_rate_gpu(NULL) / 1000000);
+	}
+
+	return 0;
+}
+
+static int clk_set_rate_mali(struct clk *clk, unsigned long rate)
+{
+	pr_debug("%s() GPU %luMHz --> %luMHz\n", __FUNCTION__, clk_get_rate_gpu(NULL) / 1000000, rate / 1000000);
+
+	if (clk->priv)
+		_clk_set_rate_gpu(clk, 0, clk_get_rate_a9(clk->priv));
+
+	pr_debug("%s() %luMHz\n", __FUNCTION__, clk_get_rate_gpu(NULL) / 1000000);
+
+	return 0;
+}
+
+static int clk_enable_mali(struct clk *clk)
+{
+#if 0
+	/* Turn on mali clock */
+	unsigned long cpu = 0;
+	unsigned int min_cpu;
+#endif
+	unsigned long flags;
+	unsigned long mali_flags;
+
+	if (!clk->priv) {
+		return -1;
+	}
+#if 0
+#ifdef CONFIG_CPU_FREQ
+	cpu = clk_get_rate_a9(clk->priv);
+	min_cpu = gpu_to_min_cpu(mali_max);
+	if ((cpu / 1000) < min_cpu) {
+		/* bump CPU up to get Mali enabled at higher freq. Using cpufreq
+		 * to do so, which will properly adjust voltage and jiffies
+		 */
+		meson_cpufreq_boost(min_cpu);
+	}
+#endif
+#endif
+
+	spin_lock_irqsave(&clockfw_lock, flags);
+
+	//cpu = clk_get_rate_a9(clk->priv);
+	_clk_set_rate_gpu(NULL, 0, 0);
+
+    mali_flags = mali_clock_gating_lock();
+	aml_set_reg32_mask(P_HHI_MALI_CLK_CNTL, (1 << 8));
+    mali_clock_gating_unlock(mali_flags);
+
+#ifdef CONFIG_CPU_FREQ_DEBUG
+	printk(KERN_INFO "%s() GPU=%luMHz CPU=%luMhz\n", __FUNCTION__, clk_get_rate_gpu(NULL) / 1000000, clk_get_rate_a9(clk->priv) / 1000000);
+#endif /* CONFIG_CPU_FREQ_DEBUG */
+
+	spin_unlock_irqrestore(&clockfw_lock, flags);
+	return 0;
+}
+
+static int clk_disable_mali(struct clk *clk)
+{
+	/* Turn off mali clock */
+	unsigned long flags;
+	unsigned long mali_flags;
+
+	spin_lock_irqsave(&clockfw_lock, flags);
+#ifdef CONFIG_CPU_FREQ_DEBUG
+	printk(KERN_INFO "%s() GPU=%luMHz CPU=%luMhz\n", __FUNCTION__, clk_get_rate_gpu(NULL) / 1000000, clk_get_rate_a9(clk->priv) / 1000000);
+#endif /* CONFIG_CPU_FREQ_DEBUG */
+
+    mali_flags = mali_clock_gating_lock();
+	aml_clr_reg32_mask(P_HHI_MALI_CLK_CNTL, (1 << 8));
+    mali_clock_gating_unlock(mali_flags);
+
+	spin_unlock_irqrestore(&clockfw_lock, flags);
+	return 0;
+}
+#if 0
+static int clk_status_mali(struct clk *clk)
+{
+	/* Check mali clock status */
+	unsigned long flags;
+
+	spin_lock_irqsave(&clockfw_lock, flags);
+	return aml_read_reg32(P_HHI_MALI_CLK_CNTL) & (1 << 8)
+	spin_unlock_irqrestore(&clockfw_lock, flags);
+}
+#endif
+static unsigned long clk_get_rate_vid2(struct clk * clkdev)
+{
+	unsigned long clk;
+	unsigned int viid_cntl = aml_read_reg32(P_HHI_VIID_PLL_CNTL);
+	unsigned long parent_clk;
+	unsigned od,M,N;
+	parent_clk = clk_get_rate(clkdev->parent);
+	if(!viid_cntl)
+		return 0;
+	parent_clk /= 1000000;
+	od = (viid_cntl>>16)&3;
+	M = viid_cntl&0x1FF;
+	N = (viid_cntl>>9)&0x1F;
+	if(od == 0)
+		od = 1;
+	else if(od == 1)
+		od = 2;
+	else if(od == 2)
+		od = 4;
+	clk = parent_clk * M / N;
+	clk /= od;
+	clk *= 1000000;
+	return clk;
+}
+
+static unsigned long clk_get_rate_hpll(struct clk * clkdev)
+{
+	unsigned long clk;
+	unsigned int vid_cntl = aml_read_reg32(P_HHI_VID_PLL_CNTL);
+	unsigned long parent_clk;
+	unsigned od_fb,od_hdmi,od_ldvs,M,N;
+	parent_clk = clk_get_rate(clkdev->parent);
+	parent_clk /= 1000000;
+	od_ldvs = (vid_cntl>>16)&3;
+	od_hdmi = (vid_cntl>>18)&3;
+	od_fb = (vid_cntl>>20)&3;
+	M = vid_cntl&0x3FF;
+	N = (vid_cntl>>10)&0x1F;
+	if(od_hdmi == 0)
+		od_hdmi = 1;
+	else if(od_hdmi == 1)
+		od_hdmi = 2;
+	else if(od_hdmi == 2)
+		od_hdmi = 4;
+	if(od_fb == 0)
+		od_fb = 1;
+	else if(od_fb == 1)
+		od_fb = 2;
+	else if(od_fb == 2)
+		od_fb = 4;
+
+	clk = parent_clk * M * od_fb / N;
+	clk /= od_hdmi;
+	clk *= 1000000;
+	return clk;
+}
+
+#define CLK_DEFINE(devid,conid,msr_id,setrate,getrate,en,dis,privdata)  \
+    static struct clk clk_##devid={                                     \
+        .set_rate=setrate,.get_rate=getrate,.enable=en,.disable=dis,    \
+        .priv=privdata,.parent=&clk_##conid ,.msr=msr_id                \
+    };                                                                  \
+    static struct clk_lookup clk_lookup_##devid={                       \
+        .dev_id=#devid,.con_id=#conid,.clk=&clk_##devid                 \
+    };clkdev_add(&clk_lookup_##devid)
+
+///TOP level
+static struct clk clk_xtal = {
+	.rate		= -1,
+	.get_rate	= clk_get_rate_xtal,
+};
+
+static struct clk_lookup clk_lookup_xtal = {
+	.dev_id		= "xtal",
+	.con_id		= NULL,
+	.clk		= &clk_xtal
+};
+
+#if 1
+#define SYS_PLL_TABLE_MIN	  48000000
+#define SYS_PLL_TABLE_MAX	1512000000
+
+struct sys_pll_s {
+    unsigned cntl;
+    unsigned cntl2;
+    unsigned cntl3;
+    unsigned cntl4;
+    unsigned scan;
+    unsigned scale_divn;
+};
+
+static unsigned sys_pll_settings[][6] = {
+	{0x20220, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 3, 2},  // 48 = 192 / 2 / 2
+	{0x20224, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 2},  // 72 = 216 / 3
+	{0x20220, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},  // 96
+	{0x20228, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},  // 120
+	{0x20230, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},  // 144
+	{0x20238, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},  // 168
+	{0x20220, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 192
+	{0x20224, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 216
+	{0x20228, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 240
+	{0x2022C, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 264
+	{0x20230, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 288
+	{0x20234, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 312
+	{0x20238, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 336
+	{0x2023C, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 360
+	{0x00220, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 384
+	{0x00222, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 408
+	{0x00224, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 432
+	{0x00226, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 456
+	{0x00228, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 480
+	{0x0022A, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 504
+	{0x0022C, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 528
+	{0x0022E, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 552
+	{0x00230, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 576
+	{0x00232, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 600
+	{0x00234, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 624
+	{0x00236, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 648
+	{0x00238, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 672
+	{0x0023A, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 696
+	{0x0023C, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 720
+	{0x0023E, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 1},	// 744
+	{0x00220, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 768
+	{0x00221, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 792
+	{0x00222, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 816
+	{0x00223, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 840
+	{0x00224, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 864
+	{0x00225, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 888
+	{0x00226, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 912
+	{0x00227, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 936
+	{0x00228, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 960
+	{0x00229, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 984
+	{0x0022A, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1008
+	{0x0022B, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1032
+	{0x0022C, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1056
+	{0x0022D, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1080
+	{0x0022E, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1104
+	{0x0022F, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1128
+	{0x00230, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1152
+	{0x00231, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1176
+	{0x00232, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},	// 1200
+	{0x00233, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1224
+	{0x00234, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1248
+	{0x00235, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1272
+	{0x00236, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1296
+	{0x00237, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1320
+	{0x00238, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1344
+	{0x00239, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1368
+	{0x0023a, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1392
+	{0x0023b, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1416
+	{0x0023c, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1440
+	{0x0023d, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1464
+	{0x0023e, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1488
+	{0x0023f, M6_SYS_PLL_CNTL_2, M6_SYS_PLL_CNTL_3, M6_SYS_PLL_CNTL_4, 0},  // 1512
+};
+static unsigned setup_a9_clk_max=1512000000;
+static unsigned setup_a9_clk_min=192000000;
+static int __init a9_clk_max(char *str)
+{
+
+    unsigned long  clk=clkparse(str, 0);
+    if(clk<SYS_PLL_TABLE_MIN || clk>SYS_PLL_TABLE_MAX)
+        return 0;
+    setup_a9_clk_max=clk-(clk%24000000);
+    BUG_ON(setup_a9_clk_min>setup_a9_clk_max);
+    return 0;
+}
+early_param("a9_clk_max", a9_clk_max);
+static int __init a9_clk_min(char *str)
+{
+    unsigned long  clk = clkparse(str, 0);
+    if (clk < SYS_PLL_TABLE_MIN || clk > SYS_PLL_TABLE_MAX)
+        return 0;
+    setup_a9_clk_min = clk - (clk % 24000000);
+    BUG_ON(setup_a9_clk_min>setup_a9_clk_max);
+    return 0;
+}
+
+early_param("a9_clk_min", a9_clk_min);
+static int set_sys_pll(struct clk *clk, unsigned long dst)
+{
+	int idx;
+	unsigned int curr_cntl = aml_read_reg32(P_HHI_SYS_PLL_CNTL);
+	unsigned int cpu_clk_cntl = 0;
+
+	if (dst < SYS_PLL_TABLE_MIN) dst = SYS_PLL_TABLE_MIN;
+	if (dst > SYS_PLL_TABLE_MAX) dst = SYS_PLL_TABLE_MAX;
+
+	idx = ((dst - SYS_PLL_TABLE_MIN) / 1000000) / 24;
+	cpu_clk_cntl = sys_pll_settings[idx][0];
+
+#ifdef CONFIG_CPU_FREQ_DEBUG_DETAIL
+	pr_debug("CTS_CPU_CLK %ldMHz idx=%d\n", dst / 1000000, idx);
+	pr_debug("CTS_CPU_CLK sys_pll_cntl=0x%x cur_cntl=0x%x\n", cpu_clk_cntl, curr_cntl);
+#endif /* CONFIG_CPU_FREQ_DEBUG_DETAIL */
+
+	if (cpu_clk_cntl != curr_cntl) {
+		aml_write_reg32(P_HHI_SYS_PLL_CNTL,  sys_pll_settings[idx][0] | (1 << 29));
+		aml_write_reg32(P_HHI_SYS_PLL_CNTL2, sys_pll_settings[idx][1]);
+		aml_write_reg32(P_HHI_SYS_PLL_CNTL3, sys_pll_settings[idx][2]);
+		aml_write_reg32(P_HHI_SYS_PLL_CNTL4, sys_pll_settings[idx][3]);
+		aml_write_reg32(P_HHI_SYS_PLL_CNTL,  sys_pll_settings[idx][0]);
+#if 1
+		if (clk->old_rate <= dst) {
+			// when increasing frequency, lpj has already been adjusted
+			do {
+				udelay_scaled(100, dst / 1000000, 24 /*clk_get_rate_xtal*/);
+			} while ((aml_read_reg32(P_HHI_SYS_PLL_CNTL) & 0x80000000) == 0);
+		} else {
+			// when decreasing frequency, lpj has not yet been adjusted
+			do {
+				udelay_scaled(100, clk->old_rate / 1000000, 24 /*clk_get_rate_xtal*/);
+			} while ((aml_read_reg32(P_HHI_SYS_PLL_CNTL) & 0x80000000) == 0);
+		}
+#else
+		M6_PLL_WAIT_FOR_LOCK(P_HHI_SYS_PLL_CNTL);
+#endif
+	}
+	else {
+		//printk(KERN_INFO "(CTS_CPU_CLK) No Change (0x%x)\n", cpu_clk_cntl);
+	}
+
+	if (clk)
+		clk->rate = (idx * 24000000) + SYS_PLL_TABLE_MIN;
+
+#ifdef CONFIG_CPU_FREQ_DEBUG_DETAIL
+	printk("CTS_CPU_CLK %ldMHz idx=%d 0x%x scale_out=%d\n", dst / 1000000, idx, cpu_clk_cntl, sys_pll_settings[idx][4]);
+#endif /* CONFIG_CPU_FREQ_DEBUG_DETAIL */
+
+	return idx;
+}
+static void get_a9_divid(unsigned int idx, unsigned int * scale_divn, unsigned int * scale_out)
+{
+	*scale_divn = sys_pll_settings[idx][5];
+	*scale_out  = sys_pll_settings[idx][4];
+}
+#else
+static int set_sys_pll(struct clk *clk, unsigned long src, unsigned long dst)
+{
+	unsigned int od, M, N;
+	unsigned long parent_clk = 0, rate;
+	rate = clk_get_rate(clk);
+
+	if (dst > clk->max || dst < clk->min) {
+		printk(KERN_ERR "SYS PLL rate (%lu) out of range [%lu, %lu]\n", dst, clk->min, clk->max);
+		return -EINVAL;
+	}
+
+	if (dst != rate) {
+		unsigned long vco;
+		int found = 0;
+
+		if (clk->parent)
+			parent_clk = clk_get_rate(clk->parent);
+		else
+			printk(KERN_ERR "sys pll: no parent clock assigned!\n");
+
+		parent_clk /= 1000000;
+		dst /= 1000000;
+		if (dst > 750)
+			od = 1;
+		else if ((dst << 1) > 750)
+			od = 2;
+		else
+			od = 4;
+
+		vco = dst * od;
+
+		// vco 750M ~ 1.5G
+		for (N = 1; N < 0x1F; N++) {
+			for (M = 0x1FF; M > 0; M--) {
+				rate = parent_clk * M / N;
+
+				if( rate == vco) {
+					found = 1;
+					break;
+				}
+				else if (rate > vco)
+					continue;
+				else
+					break;
+			}
+
+			if (found)
+				break;
+		}
+
+		if (found) {
+			unsigned int sys_clk_cntl = 0;
+
+			if (od == 4)
+				od = 2;
+			else if (od == 2)
+				od = 1;
+			else
+				od = 0;
+
+			sys_clk_cntl = (M) | (N << 9) | (od << 16);
+
+			M6_PLL_RESET(P_HHI_SYS_PLL_CNTL);
+			aml_write_reg32(P_HHI_SYS_PLL_CNTL2, M6_SYS_PLL_CNTL_2);
+			aml_write_reg32(P_HHI_SYS_PLL_CNTL3, M6_SYS_PLL_CNTL_3);
+			aml_write_reg32(P_HHI_SYS_PLL_CNTL4, M6_SYS_PLL_CNTL_4);
+			aml_write_reg32(P_HHI_SYS_PLL_CNTL, sys_clk_cntl);
+#if 1
+			do {
+				udelay(100);
+			} while ((aml_read_reg32(P_HHI_SYS_PLL_CNTL) & 0x80000000) == 0);
+#else
+			M6_PLL_WAIT_FOR_LOCK(P_HHI_SYS_PLL_CNTL);
+#endif
+			pr_debug("(CTS_CPU_CLK) M=%d N=%d OD=%d sys_clk_cntl=0x%x\n", M, N, od, sys_clk_cntl);
+		}
+		else
+		{
+			printk(KERN_ERR "sys pll: no clock setting matched.\n");
+			return -1;
+		}
+	}
+
+	return 1;
+}
+#endif
+
+static int set_hpll_pll(struct clk * clk, unsigned long dst)
+{
+	unsigned od,M,N;
+	unsigned long parent_clk = 0, rate;
+	rate = clk_get_rate(clk);
+	if(dst > clk->max || dst < clk->min){
+		printk("vid pll: invalid rate : %lu  [%lu ~ %lu]\n",dst,clk->min,clk->max);
+		return -1;
+	}
+	if(dst != rate){
+		unsigned vco;
+		unsigned od_fb = 0;
+		int found = 0;
+		if(clk->parent)
+			parent_clk = clk_get_rate(clk->parent);
+		else
+			printk("vid2 pll: no parent clock assigned!\n");
+		parent_clk /= 1000000;
+		dst /= 1000000;
+		if(dst > 750)
+			od = 1;
+		else if( (dst * 2) > 750)
+			od = 2;
+		else
+			od = 4;
+
+		vco = dst * od;
+
+		//vco 750M ~1.5G
+		for(N = 1; N < 0x1F; N++){
+				for(M = 0x1FF * 4; M > 0; M--){
+					rate = parent_clk * M / N;
+					if(rate == vco){
+						if(M > 0x1FF){
+							if(((M / 2) < 0x1FF) && ((M%2) == 0)){
+									od_fb = 2;
+									M = M / od_fb;
+									found = 1;
+							}else if((M%4) == 0){
+								od_fb = 4;
+								M = M/od_fb;
+								found = 1;
+							}
+							else
+								break;
+						}
+						else{
+							od_fb = 1;
+							found = 1;
+							break;
+						}
+					}
+					else if(rate > vco)
+						continue;
+					else
+						break;
+				}
+
+				if(found)
+					break;
+		}
+
+		if(found){
+			unsigned vid_cntl = 0;
+			if(od == 4)
+				od = 2;
+			else if(od == 2)
+				od = 1;
+			else
+				od = 0;
+			if(od_fb == 4)
+				od_fb = 2;
+			else if(od_fb == 2)
+				od_fb = 1;
+			else
+				od_fb = 0;
+
+			vid_cntl = (M) | (N <<10) | (od << 18) | (od_fb <<20);
+
+			//VID PLL
+			M6_PLL_RESET(P_HHI_VID_PLL_CNTL);
+			aml_write_reg32(P_HHI_VID_PLL_CNTL2, M6_VID_PLL_CNTL_2 );
+			aml_write_reg32(P_HHI_VID_PLL_CNTL3, M6_VID_PLL_CNTL_3 );
+			aml_write_reg32(P_HHI_VID_PLL_CNTL4, M6_VID_PLL_CNTL_4 );
+			aml_write_reg32(P_HHI_VID_PLL_CNTL,  vid_cntl );
+			M6_PLL_WAIT_FOR_LOCK(P_HHI_VID_PLL_CNTL);
+		}
+		else
+		{
+			printk("vid pll: no clock setting matched.\n");
+			return -1;
+		}
+	}
+
+	return 1;
+}
+static int set_fixed_pll(struct clk * clk, unsigned long dst)
+{
+	if(dst == 2000000000){
+		//fixed pll = xtal * M(0:8) * OD_FB(4) /N(9:13) /OD(16:17)
+		//M: 0~511  OD_FB:0~1 + 1, N:0~32 + 1 OD:0~3 + 1
+		//recommend this pll is fixed as 2G.
+		unsigned long xtal = 24000000;
+		unsigned cntl = aml_read_reg32(P_HHI_MPLL_CNTL);
+		unsigned m = cntl&0x1FF;
+		unsigned n = ((cntl>>9)&0x1F);
+		unsigned od = ((cntl >>16)&3) + 1;
+		unsigned od_fb = ((aml_read_reg32(P_HHI_MPLL_CNTL4)>>4)&1) + 1;
+		unsigned long rate;
+		if(clk->parent)
+			xtal = clk_get_rate(clk->parent);
+		xtal /= 1000000;
+		rate = xtal * m * od_fb;
+		rate /= n;
+		rate /= od;
+		rate *= 1000000;
+		if(dst != rate){
+			M6_PLL_RESET(P_HHI_MPLL_CNTL);
+			aml_write_reg32(P_HHI_MPLL_CNTL2,M6_MPLL_CNTL_2);
+			aml_write_reg32(P_HHI_MPLL_CNTL2, M6_MPLL_CNTL_2 );
+			aml_write_reg32(P_HHI_MPLL_CNTL3, M6_MPLL_CNTL_3 );
+			aml_write_reg32(P_HHI_MPLL_CNTL4, M6_MPLL_CNTL_4 );
+			aml_write_reg32(P_HHI_MPLL_CNTL5, M6_MPLL_CNTL_5 );
+			aml_write_reg32(P_HHI_MPLL_CNTL6, M6_MPLL_CNTL_6 );
+			aml_write_reg32(P_HHI_MPLL_CNTL7, M6_MPLL_CNTL_7 );
+			aml_write_reg32(P_HHI_MPLL_CNTL8, M6_MPLL_CNTL_8 );
+			aml_write_reg32(P_HHI_MPLL_CNTL9, M6_MPLL_CNTL_9 );
+			aml_write_reg32(P_HHI_MPLL_CNTL10,M6_MPLL_CNTL_10);
+			aml_write_reg32(P_HHI_MPLL_CNTL, 0x67d );
+			M6_PLL_WAIT_FOR_LOCK(P_HHI_MPLL_CNTL);
+		}
+	}
+	else
+		return -1;
+	return 0;
+}
+static int set_vid2_pll(struct clk * clk, unsigned long dst)
+{
+	unsigned od,M,N;
+	unsigned long parent_clk = 0, rate;
+	rate = clk_get_rate(clk);
+	if(dst > clk->max || dst < clk->min){
+		printk("vid2 pll: invalid rate : %lu  [%lu ~ %lu]\n",dst,clk->min,clk->max);
+		return -1;
+	}
+	if(dst != rate){
+		unsigned vco;
+		int found = 0;
+		if(clk->parent)
+			parent_clk = clk_get_rate(clk->parent);
+		else
+			printk("vid2 pll: no parent clock assigned!\n");
+		parent_clk /= 1000000;
+		dst /= 1000000;
+		if(dst > 750)
+			od = 1;
+		else if( (dst * 2) > 750)
+			od = 2;
+		else
+			od = 4;
+
+		vco = dst * od;
+
+		//vco 750M ~1.5G
+		for(N = 1; N < 0x1F; N++){
+				for(M = 0x1FF; M > 0; M--){
+					rate = parent_clk * M / N;
+					if(rate == vco){
+						found = 1;
+						break;
+					}
+					else if(rate > vco)
+						continue;
+					else
+						break;
+				}
+
+				if(found)
+					break;
+		}
+
+		if(found){
+			unsigned viid_cntl = 0;
+			if(od == 4)
+				od = 2;
+			else if(od == 2)
+				od = 1;
+			else
+				od = 0;
+
+			viid_cntl = (M) | (N <<9) | (od << 16);
+			//VIID PLL
+			M6_PLL_RESET(P_HHI_VIID_PLL_CNTL);
+			aml_write_reg32(P_HHI_VIID_PLL_CNTL2, M6_VIID_PLL_CNTL_2 );
+			aml_write_reg32(P_HHI_VIID_PLL_CNTL3, M6_VIID_PLL_CNTL_3 );
+			aml_write_reg32(P_HHI_VIID_PLL_CNTL4, M6_VIID_PLL_CNTL_4 );
+			aml_write_reg32(P_HHI_VIID_PLL_CNTL,  viid_cntl);
+			M6_PLL_WAIT_FOR_LOCK(P_HHI_VIID_PLL_CNTL);
+		}
+		else
+		{
+			printk("vid2 pll: no clock setting matched.\n");
+			return -1;
+		}
+	}
+
+	return 1;
+}
+//------------------------------------
+//return 0:not in the clock tree, 1:in the clock tree
+static int clk_in_clocktree(struct clk *clktree, struct clk *clk)
+{
+	struct clk *p;
+	int ret = 0;
+	if(IS_CLK_ERR(clk) || IS_CLK_ERR(clktree))
+		return 0;
+	if(clktree == clk)
+		return 1;
+	p = (struct clk*)clktree->sibling.next;
+	while(p){
+		if(p == clk){
+			ret = 1;
+			break;
+		}
+		p = (struct clk*)p->sibling.next;
+	}
+	if(ret == 1)
+		return ret;
+	return clk_in_clocktree((struct clk*)clktree->child.next, clk);
+}
+
+//return 0:ok, 1:fail
+static int meson_clk_register(struct clk* clk, struct clk* parent)
+{
+	if (clk_in_clocktree(parent,clk))
+			return 0;
+	mutex_lock(&clock_ops_lock);
+	clk->parent = parent;
+	if (parent->child.next == NULL) {
+		parent->child.next = (struct list_head*)clk;
+		clk->sibling.next = NULL;
+		clk->sibling.prev = NULL;
+	}
+	else {
+		struct clk* p = (       struct clk*)(parent->child.next);
+		while(p->sibling.next != NULL)
+			p = (       struct clk*)(p->sibling.next);
+		p->sibling.next = (struct list_head*)clk;
+		clk->sibling.prev = (struct list_head*)p;
+		clk->sibling.next = NULL;
+	}
+	mutex_unlock(&clock_ops_lock);
+	return 0;
+}
+
+int clk_register(struct clk *clk,const char *parent)
+{
+	struct clk* p = clk_get_sys(parent,0);
+	if(!IS_CLK_ERR(p))
+		return meson_clk_register(clk,p);
+	return 1;
+}
+EXPORT_SYMBOL(clk_register);
+
+void clk_unregister(struct clk *clk)
+{
+		if(IS_CLK_ERR(clk))
+			return;
+		mutex_lock(&clock_ops_lock);
+		if(clk->sibling.next){
+				struct clk* pnext = (struct clk*)(clk->sibling.next);
+				pnext->sibling.prev = clk->sibling.prev;
+				if(clk->sibling.prev)
+					((struct clk*)(clk->sibling.prev))->sibling.next = (struct list_head*)pnext;
+				else
+					clk->parent->child.next = (struct list_head*)pnext;
+
+		}
+		else if(clk->sibling.prev){
+				struct clk* prev = (struct clk*)(clk->sibling.prev);
+				prev->sibling.next = clk->sibling.next;
+				if(clk->sibling.next)
+					((struct clk*)(clk->sibling.next))->sibling.prev =(struct list_head*) prev;
+		}
+		else{
+			struct clk* parent = clk->parent;
+			if(parent)
+				parent->child.next = NULL;
+		}
+		clk->sibling.next = NULL;
+		clk->sibling.prev = NULL;
+		mutex_unlock(&clock_ops_lock);
+}
+EXPORT_SYMBOL(clk_unregister);
+
+/**
+ *  Check clock status.
+ *
+ *  0 -- Disabled
+ *  1 -- Enabled
+ *  2 -- Unknown
+ */
+int clk_get_status(struct clk *clk)
+{
+	int ret = 2;
+	unsigned long flags;
+
+	spin_lock_irqsave(&clockfw_lock, flags);
+	if (clk->status)
+		ret = clk->status(clk);
+	else if (clk->clk_gate_reg_adr != 0)
+		ret = ((aml_read_reg32(clk->clk_gate_reg_adr) & clk->clk_gate_reg_mask) ? 1 : 0);
+	spin_unlock_irqrestore(&clockfw_lock, flags);
+
+	return ret;
+}
+EXPORT_SYMBOL(clk_get_status);
+
+//return: 0:success  1: fail
+int clk_ops_register(struct clk *clk, struct clk_ops *ops)
+{
+	int found = 0;
+	struct clk_ops *p;
+
+	mutex_lock(&clock_ops_lock);
+	ops->next = NULL;
+	p = clk->clk_ops;
+	while(p != NULL){
+		if(p == ops){
+			found = 1;
+			break;
+		}
+		p = p->next;
+	}
+
+	if(found == 0){
+		if(clk->clk_ops	== NULL)
+			clk->clk_ops = ops;
+		else{
+			struct clk_ops* p = clk->clk_ops;
+			while(p->next)
+				p = p->next;
+			p->next = ops;
+		}
+	}
+	mutex_unlock(&clock_ops_lock);
+	return 0;
+}
+EXPORT_SYMBOL(clk_ops_register);
+
+//return: 0:success  1: fail
+int clk_ops_unregister(struct clk *clk, struct clk_ops *ops)
+{
+	if(ops == NULL || IS_CLK_ERR(clk))
+		return 0;
+
+	mutex_lock(&clock_ops_lock);
+
+	if(clk->clk_ops == ops){
+		if(clk->clk_ops->next == NULL)
+			clk->clk_ops = NULL;
+		else
+			clk->clk_ops = clk->clk_ops->next;
+	}
+	else if(clk->clk_ops){
+		struct clk_ops *p, *p1;
+		p = clk->clk_ops->next;
+		p1 = clk->clk_ops;
+		while(p != NULL && p != ops){
+			p1 = p;
+			p = p->next;
+		}
+		if(p == ops)
+			p1->next = p->next;
+	}
+	ops->next = NULL;
+	mutex_unlock(&clock_ops_lock);
+	return 0;
+}
+EXPORT_SYMBOL(clk_ops_unregister);
+
+///FIXME add data later
+#define PLL_CLK_DEFINE(name,msr)    		\
+	static unsigned pll_##name##_data[10];	\
+    CLK_DEFINE(pll_##name,xtal,msr,set_##name##_pll, \
+    		clk_msr_get,NULL,NULL,&pll_##name##_data)
+_Pragma("GCC diagnostic ignored \"-Wdeclaration-after-statement\"");
+#define PLL_RELATION_DEF(child,parent) meson_clk_register(&clk_pll_##child,&clk_##parent)
+#define CLK_PLL_CHILD_DEF(child,parent) meson_clk_register(&clk_##child,&clk_pll_##parent)
+
+#if 0
+typedef  struct {
+       unsigned int  a9_clk_cntl   ;
+       unsigned char mali_clk_cntl;
+}clk_cntl_t;
+
+static int A9_ratechange_before(unsigned long newrate,void* privdata)
+{
+	//switch A9 input to xtal
+	clk_cntl_t * pdata = (clk_cntl_t*)privdata;
+
+       pdata->mali_clk_cntl=aml_read_reg32(P_HHI_MALI_CLK_CNTL);
+       aml_clr_reg32_mask(P_HHI_MALI_CLK_CNTL,(7<<9));//mali switch to crystal
+	pdata->a9_clk_cntl = aml_read_reg32(P_HHI_SYS_CPU_CLK_CNTL);
+	aml_clr_reg32_mask(P_HHI_SYS_CPU_CLK_CNTL,(1<<7));
+
+	return 0;
+}
+static int A9_ratechange_after(unsigned long newrate,void* privdata,int failed)
+{
+	//recovery input pll.
+	clk_cntl_t * pdata = (clk_cntl_t *)privdata;
+	if((pdata->a9_clk_cntl & (1<<7)) != 0)
+		aml_set_reg32_mask(P_HHI_SYS_CPU_CLK_CNTL,(1<<7));
+       aml_set_reg32_mask(P_HHI_MALI_CLK_CNTL,(7<<9));//mali switch to fclk_div5
+	return 0;
+}
+static int Mali_ratechange_before(unsigned long newrate,void* privdata)
+{
+	//switch A9 input to xtal
+	clk_cntl_t * pdata = (clk_cntl_t*)privdata;
+       aml_clr_reg32_mask(P_HHI_MALI_CLK_CNTL,(7<<9));//mali switch to crystal
+       return 0;
+}
+static int Mali_ratechange_after(unsigned long newrate,void* privdata,int failed)
+{
+	//recovery input pll.
+	clk_cntl_t * pdata = (clk_cntl_t *)privdata;
+
+#if  defined(CONFIG_MALI_CLK_333M)
+       aml_set_reg32_mask(P_HHI_MALI_CLK_CNTL,(1<<8)|(6<<9));//mali switch to fclk_div3
+#elif  defined(CONFIG_MALI_CLK_400M)
+       aml_set_reg32_mask(P_HHI_MALI_CLK_CNTL,(1<<8)|(7<<9));//mali switch to fclk_div5
+#elif  defined(CONFIG_MALI_CLK_250M)
+        aml_set_reg32_mask(P_HHI_MALI_CLK_CNTL,(1<<8)|(5<<9));//mali switch to fclk_div2
+#endif
+
+	return 0;
+}
+
+static clk_cntl_t a9_clk_cntl;
+static struct clk_ops a9_clk_ops={
+	//.clk_ratechange_before = A9_ratechange_before,
+	//.clk_ratechange_after = A9_ratechange_after,
+	.privdata = &a9_clk_cntl,
+};
+
+static clk_cntl_t mali_clk_cntl;
+static struct clk_ops mali_clk_ops={
+	//.clk_ratechange_before = Mali_ratechange_before,
+	//.clk_ratechange_after = Mali_ratechange_after,
+	.privdata = &mali_clk_cntl,
+};
+#endif
+
+#ifdef CONFIG_CLKTREE_DEBUG
+
+extern struct clk_lookup * lookup_clk(struct clk* clk);
+void print_clk_name(struct clk* clk)
+{
+	printk("Todo: we have not lookup_clk in this kernel!\n");
+	#if 0
+	struct clk_lookup * p = lookup_clk(clk);
+	if(p)
+		printk("  %s  \n",p->dev_id);
+	else
+		printk(" unknown \n");
+	#endif
+}
+
+void dump_child(int nlevel, struct clk* clk)
+{
+		if(!IS_CLK_ERR(clk)){
+			int i;
+			for(i = 0; i < nlevel; i++)
+				printk("  ");
+			print_clk_name(clk);
+			dump_child(nlevel+6,(struct clk*)(clk->child.next));
+			{
+				struct clk * p = (struct clk*)(clk->sibling.prev);
+				while(p){
+					for(i = 0; i < nlevel; i++)
+						printk("  ");
+					print_clk_name(p);
+					dump_child(nlevel+6,(struct clk*)(p->child.next));
+					p = (struct clk*)(p->sibling.prev);
+				}
+
+				p = (struct clk*)(clk->sibling.next);
+				while(p){
+					for(i = 0; i < nlevel; i++)
+						printk("  ");
+					print_clk_name(p);
+					dump_child(nlevel+6,(struct clk*)(p->child.next));
+					p = (struct clk*)(p->sibling.next);
+				}
+			}
+		}
+}
+
+void dump_clock_tree(struct clk* clk)
+{
+	printk("========= dump clock tree==============\n");
+	mutex_lock(&clock_ops_lock);
+
+	int nlevel = 0;
+	if(!IS_CLK_ERR(clk)){
+		print_clk_name(clk);
+		dump_child(nlevel + 6,(struct clk*)(clk->child.next));
+			{	int i;
+				struct clk * p = (struct clk*)clk->sibling.prev;
+				while(p){
+					for(i = 0; i < nlevel; i++)
+						printk("  ");
+					print_clk_name(p);
+					dump_child(nlevel+6,(struct clk*)(p->child.next));
+					p = (struct clk*)clk->sibling.prev;
+				}
+
+				p = (struct clk*)clk->sibling.next;
+				while(p){
+					for(i = 0; i < nlevel; i++)
+						printk("  ");
+					print_clk_name(p);
+					dump_child(nlevel+6,(struct clk*)(p->child.next));
+					p = (struct clk*)clk->sibling.next;
+				}
+			}
+	}
+	mutex_unlock(&clock_ops_lock);
+	printk("========= dump clock tree end ==============\n");
+}
+
+static ssize_t  clock_tree_store(struct class *cla, struct class_attribute *attr, const char *buf,size_t count)
+{
+	char* p = (char *)buf;
+	char cmd;
+	char name[20];
+	unsigned long rate = 0;
+	int idx = 0;
+	if(count < 1)
+		return -1;
+	while((idx < count) && ((*p == ' ') || (*p == '\t')|| (*p == '\r') || (*p == '\n'))){
+		 p++;
+		 idx++;
+	}
+
+	if(idx <= count){
+		int i;
+		cmd = *p;
+		p++;
+		while((idx < count) && ((*p == ' ') || (*p == '\t')|| (*p == '\r') || (*p == '\n'))){
+		 p++;
+		 idx++;
+		}
+		i = 0;
+		while((idx < count) && (*p != ' ') && (*p != '\t') && (*p != '\r') && (*p != '\n')){
+			name[i++] = *p;
+			p++;
+			idx++;
+		}
+		name[i] = '\0';
+		p++;
+		while((idx < count) && ((*p == ' ') || (*p == '\t')|| (*p == '\r') || (*p == '\n'))){
+		 p++;
+		 idx++;
+		}
+		if(idx < count){
+			int val;
+			sscanf(p, "%d", &val);
+			rate = val;
+		}
+
+		if(cmd == 'r'){
+			if(strcmp(name,"tree") == 0){
+				struct clk* clk = clk_get_sys("xtal",NULL);
+				if(!IS_CLK_ERR(clk))
+					dump_clock_tree(clk);
+			}
+			else{
+				struct clk* clk = clk_get_sys(name,NULL);
+				if(!IS_CLK_ERR(clk)){
+					clk->rate = 0; //enforce update rate
+					printk("%s : %lu\n",name,clk_get_rate(clk));
+				}
+				else
+					printk("no %s in tree.\n",name);
+			}
+		}
+		else if(cmd == 'w'){
+				struct clk* clk = clk_get_sys(name,NULL);
+				if(!IS_CLK_ERR(clk)){
+					if(rate < 1000000 || rate >1512000000)
+						printk("Invalid rate : %lu\n",rate);
+					else{
+						if(clk_set_rate(clk,rate) ==0)
+							printk("%s = %lu\n",name,rate);
+						else
+							printk("set %s = %lu failed.\n",name,rate);
+					}
+				}
+				else
+					printk("no %s in tree.\n",name);
+		}
+		else if(cmd == 'o'){
+				struct clk* clk = clk_get_sys(name,NULL);
+				if(!IS_CLK_ERR(clk)){
+					if(clk_enable(clk) ==0)
+							printk("%s gate on\n",name);
+					else
+							printk("gate on %s failed.\n",name);
+				}
+				else
+					printk("no %s in tree.\n",name);
+
+		}
+		else if(cmd == 'f'){
+				struct clk* clk = clk_get_sys(name,NULL);
+				if(!IS_CLK_ERR(clk)){
+						clk_disable(clk);
+						printk("gate off %s.\n",name);
+				}
+				else
+					printk("no %s in tree.\n",name);
+		}
+		else
+			printk("command:%c invalid.\n",cmd);
+	}
+
+	return count;
+}
+
+static ssize_t  clock_tree_show(struct class *cla, struct class_attribute *attr, char *buf)
+{
+	printk("Usage:\n");
+	printk("1. echo r tree >clkTree       ,display the clock tree.\n");
+	printk("2. echo r clockname >clkTree  ,display the clock rate.\n");
+	printk("3. echo w clockname rate >clkTree  ,modify the clock rate.\n");
+	printk("4. echo o clockname >clkTree  ,gate on clock.\n");
+	printk("5. echo f clockname >clkTree  ,gate off clock.\n");
+
+	printk("Example:\n");
+	printk("1. display the clock tree.\n");
+	printk("   echo r tree >clkTree\n");
+	printk("2. display clk81 rate.\n");
+	printk("   echo r clk81 >clkTree\n");
+	printk("3. modify sys pll as 792M.\n");
+	printk("   echo w pll_sys 792000000 >clkTree\n");
+	return 0;
+}
+
+static struct class_attribute clktree_class_attrs[] = {
+
+
+	__ATTR(clkTree, S_IRWXU, clock_tree_show, clock_tree_store),
+	__ATTR_NULL,
+};
+
+static struct class meson_clktree_class = {
+	.name = "meson_clocktree",
+	.class_attrs = clktree_class_attrs,
+};
+#endif
+
+// -------------------- mali_max sysfs ---------------------
+static ssize_t mali_max_store(struct class *cla, struct class_attribute *attr, const char *buf, size_t count)
+{
+	unsigned int input;
+	int ret;
+	ret = sscanf(buf, "%u", &input);
+	if (ret != 1 || input > 400000 || input < 83000)
+		return -EINVAL;
+	mali_max = input;
+	return count;
+}
+static ssize_t mali_max_show(struct class *cla, struct class_attribute *attr, char *buf)
+{
+	printk("%u\n", mali_max);
+	return sprintf(buf, "%d\n", mali_max);
+}
+
+// -------------------- frequency limit sysfs ---------------------
+static ssize_t freq_limit_store(struct class *cla, struct class_attribute *attr, const char *buf, size_t count)
+{
+	unsigned int input;
+	int ret;
+	ret = sscanf(buf, "%u", &input);
+	if (ret != 1)
+		return -EINVAL;
+	freq_limit = input;
+	return count;
+}
+static ssize_t freq_limit_show(struct class *cla, struct class_attribute *attr, char *buf)
+{
+	printk("%u\n", freq_limit);
+	return sprintf(buf, "%d\n", freq_limit);
+}
+
+static struct class_attribute mali_freq_class_attrs[] = {
+	__ATTR(max, S_IRWXU, mali_max_show, mali_max_store),
+	__ATTR_NULL,
+};
+
+static struct class meson_mali_freq_class = {
+	.name = "mali_freq",
+	.class_attrs = mali_freq_class_attrs,
+};
+
+static struct class_attribute freq_limit_class_attrs[] = {
+	__ATTR(limit, S_IRWXU, freq_limit_show, freq_limit_store),
+	__ATTR_NULL,
+};
+
+static struct class meson_freq_limit_class = {
+	.name = "freq_limit",
+	.class_attrs = freq_limit_class_attrs,
+};
+
+// ------------------- /mali_max sysfs ---------------------
+
+static int __init meson_clock_init(void)
+{
+	clkdev_add(&clk_lookup_xtal);
+    CLK_DEFINE(pll_ddr,xtal,3,NULL,clk_msr_get,NULL,NULL,NULL);
+    PLL_CLK_DEFINE(sys,(unsigned long)-1);
+    PLL_CLK_DEFINE(vid2,12);
+    PLL_CLK_DEFINE(fixed,-1);
+    PLL_CLK_DEFINE(hpll,-1);///@todo unknown now
+	clk_pll_fixed.msr_mul = 125 *2;
+	clk_pll_fixed.msr_div = 3;
+    clk_pll_sys.get_rate = clk_get_rate_sys;
+    clk_pll_vid2.get_rate = clk_get_rate_vid2;
+    clk_pll_hpll.get_rate = clk_get_rate_hpll;
+
+    clk_pll_vid2.max = 1512000000;//1.5G
+    clk_pll_vid2.min = 187500000;//187M
+    clk_pll_hpll.max = 1512000000;//1.5G
+    clk_pll_hpll.min = 187500000;//187M
+    clk_pll_sys.max = 1512000000;//1.5G
+    clk_pll_sys.min = 187500000;//187M
+    clk_pll_ddr.max = 1512000000;//1.5G
+    clk_pll_ddr.min = 187500000;//187M
+    clk_pll_fixed.max = 2000000000; //2G
+    clk_pll_fixed.min = 250000000;//250M
+
+    //create pll tree
+    PLL_RELATION_DEF(sys,xtal);
+    PLL_RELATION_DEF(ddr,xtal);
+    PLL_RELATION_DEF(vid2,xtal);
+    PLL_RELATION_DEF(fixed,xtal);
+    PLL_RELATION_DEF(hpll,xtal);
+
+    // Add clk81
+#ifdef CONFIG_CLK81_DFS
+    CLK_DEFINE(clk81, pll_fixed, 7, clk_set_rate_clk81, clk_msr_get, NULL, NULL, NULL);
+#else
+    CLK_DEFINE(clk81, pll_fixed, 7, NULL, clk_msr_get, NULL, NULL, NULL);
+#endif
+
+	// Add clk81 as pll_fixed's child
+    CLK_PLL_CHILD_DEF(clk81, fixed);
+
+    clk_clk81.clk_gate_reg_adr = P_HHI_MPEG_CLK_CNTL;
+    clk_clk81.clk_gate_reg_mask = (1<<7);
+    clk_clk81.open_irq = 1;
+
+	// Add CPU clock
+	CLK_DEFINE(a9_clk, pll_sys, -1, clk_set_rate_a9, clk_get_rate_a9, NULL, NULL, NULL);
+	clk_a9_clk.min = setup_a9_clk_min;
+	clk_a9_clk.max = setup_a9_clk_max;
+	//clk_a9_clk.open_irq = 1;
+	CLK_PLL_CHILD_DEF(a9_clk,sys);
+
+#ifdef CONFIG_HAVE_ARM_TWD
+	static struct clk clk_smp_twd = {
+		.set_rate =((void *)0),
+		.get_rate = clk_get_rate_smp_twd,
+		.enable = NULL,
+		.disable = NULL,
+		.priv = NULL,
+		.parent = NULL,
+		.msr = -1
+	    };
+
+	static struct clk_lookup clk_lookup_smp_twd = {
+		.dev_id = "smp_twd",
+		.con_id = NULL,
+		.clk = &clk_smp_twd
+	};
+
+	clkdev_add(&clk_lookup_smp_twd);
+#endif /* CONFIG_HAVE_ARM_TWD */
+
+	// Add GPU clock
+	CLK_DEFINE(mali, pll_fixed, 35, clk_set_rate_mali, clk_msr_get, NULL, NULL, &clk_a9_clk);
+	clk_mali.min = 111000000;
+	clk_mali.max = 400000000;
+	clk_mali.enable = clk_enable_mali;
+	clk_mali.disable = clk_disable_mali;
+	//clk_mali.status = clk_status_mali;
+	CLK_PLL_CHILD_DEF(mali, fixed);
+	//clk_ops_register(&clk_mali, &mali_clk_ops);
+#if 0
+    // Add clk usb0
+    CLK_DEFINE(usb0,xtal,4,NULL,clk_msr_get,NULL,NULL,NULL);
+    meson_clk_register(&clk_usb0,&clk_xtal);
+    clk_usb0.clk_gate_reg_adr = P_USB_ADDR0;
+    clk_usb0.clk_gate_reg_mask = (1<<0);
+
+    // Add clk usb1
+    CLK_DEFINE(usb1,xtal,5,NULL,clk_msr_get,NULL,NULL,NULL);
+  	meson_clk_register(&clk_usb1,&clk_xtal);
+    clk_usb1.clk_gate_reg_adr = P_USB_ADDR8;
+    clk_usb1.clk_gate_reg_mask = (1<<0);
+#endif
+	{
+		// Dump clocks
+		char *clks[] = {
+				"xtal",
+				"pll_sys",
+				"pll_fixed",
+				"pll_vid2",
+				"pll_hpll",
+				"pll_ddr",
+				"a9_clk",
+				"clk81",
+				"usb0",
+				"usb1",
+				"smp_twd"
+		};
+		int i;
+		int count = ARRAY_SIZE(clks);
+		struct clk *clk;
+
+		for (i = 0; i < count; i++) {
+			char *clk_name = clks[i];
+
+			clk = clk_get_sys(clk_name, NULL);
+			if (!IS_CLK_ERR(clk))
+				printk("clkrate [ %s ] : %lu\n", clk_name, clk_get_rate(clk));
+		}
+	}
+
+#ifdef CONFIG_CLKTREE_DEBUG
+	class_register(&meson_clktree_class);
+#endif
+	class_register(&meson_mali_freq_class);
+	class_register(&meson_freq_limit_class);
+
+	return 0;
+}
+
+/* initialize clocking early to be available later in the boot */
+core_initcall(meson_clock_init);
diff --git a/arch/arm/mach-meson6tv/common.h b/arch/arm/mach-meson6tv/common.h
new file mode 100755
index 000000000000..bbb3eef79e12
--- /dev/null
+++ b/arch/arm/mach-meson6tv/common.h
@@ -0,0 +1,33 @@
+/*
+ * arch/arm/mach-meson6tv/common.h
+ *
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+/* time.c */
+extern void __init meson6tv_timer_init(void);
+
+/* headsmp.S */
+extern void meson_secondary_startup(void);
+
+/* clock.c */
+extern void meson_set_cpu_ctrl_reg(int value);
+
+/* pinctrl.c */
+extern unsigned p_pull_up_addr[];
+extern unsigned p_pin_mux_reg_addr[];
+
diff --git a/arch/arm/mach-meson6tv/cpu.c b/arch/arm/mach-meson6tv/cpu.c
new file mode 100755
index 000000000000..1dedc480c802
--- /dev/null
+++ b/arch/arm/mach-meson6tv/cpu.c
@@ -0,0 +1,72 @@
+/*
+ * arch/arm/mach-meson6tv/cpu.c
+ *
+ * Copyright (C) 2011-2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <plat/io.h>
+#include <plat/regops.h>
+#include <linux/printk.h>
+#include <linux/string.h>
+#include <asm/hardware/cache-l2x0.h>
+
+extern void meson6_l2x0_init(void __iomem *);
+
+#ifdef  CONFIG_MESON_L2CC_OPTIMIZE
+static inline u32 __init read_actlr(void)
+{
+	u32 actlr;
+
+	__asm__("mrc p15, 0, %0, c1, c0, 1\n" : "=r" (actlr));
+	printk(KERN_INFO "===actlr=0x%x\n", actlr);
+	return actlr;
+}
+
+static inline void __init write_actlr(u32 actlr)
+{
+	__asm__("mcr p15, 0, %0, c1, c0, 1\n" : : "r" (actlr));
+}
+#endif
+
+
+unsigned (*get_cpu_temperature_celius)(void) = NULL;
+EXPORT_SYMBOL_GPL(get_cpu_temperature_celius);
+
+int get_cpu_temperature(void)
+{
+	return get_cpu_temperature_celius ? get_cpu_temperature_celius() : -1;
+}
+
+int mali_revb_flag = -1;
+EXPORT_SYMBOL_GPL(mali_revb_flag);
+
+static int __init maliversion(char *str)
+{
+	mali_revb_flag=-1;
+	if (strncasecmp(str, "a", 1) == 0)
+		mali_revb_flag = 0;
+	else if(strncasecmp(str, "b", 1) == 0)
+		mali_revb_flag = 1;
+
+
+	return 1;
+}
+__setup("mali_version=", maliversion);
+
diff --git a/arch/arm/mach-meson6tv/gpio.c b/arch/arm/mach-meson6tv/gpio.c
new file mode 100755
index 000000000000..a27412a67078
--- /dev/null
+++ b/arch/arm/mach-meson6tv/gpio.c
@@ -0,0 +1,672 @@
+/*
+ * arch/arm/mach-meson6tv/gpio.c
+ *
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/slab.h>
+#include <linux/platform_device.h>
+#include <linux/of.h>
+#include <linux/pinctrl/consumer.h>
+#include <linux/gpio.h>
+
+#include <linux/amlogic/gpio-amlogic.h>
+
+#include <mach/am_regs.h>
+#include <mach/gpio.h>
+
+#include "common.h"
+
+unsigned p_gpio_oen_addr[] = {
+	P_PREG_PAD_GPIO0_EN_N,	// 0x200c
+	P_PREG_PAD_GPIO1_EN_N,	// 0x200f
+	P_PREG_PAD_GPIO2_EN_N,	// 0x2012
+	P_PREG_PAD_GPIO3_EN_N,	// 0x2015
+	P_PREG_PAD_GPIO4_EN_N,	// 0x2018
+	P_PREG_PAD_GPIO5_EN_N,	// 0x201b
+	P_PREG_PAD_GPIO6_EN_N,	// 0x2008
+	P_AO_GPIO_O_EN_N,
+};
+static unsigned p_gpio_output_addr[] = {
+	P_PREG_PAD_GPIO0_O,	// 0x200d
+	P_PREG_PAD_GPIO1_O,	// 0x2010
+	P_PREG_PAD_GPIO2_O,	// 0x2013
+	P_PREG_PAD_GPIO3_O,	// 0x2016
+	P_PREG_PAD_GPIO4_O,	// 0x2019
+	P_PREG_PAD_GPIO5_O,	// 0x201c
+	P_PREG_PAD_GPIO6_O,	// 0x2009
+	P_AO_GPIO_O_EN_N,
+};
+static unsigned p_gpio_input_addr[] = {
+	P_PREG_PAD_GPIO0_I,	// 0x200e
+	P_PREG_PAD_GPIO1_I,	// 0x2011
+	P_PREG_PAD_GPIO2_I,	// 0x2014
+	P_PREG_PAD_GPIO3_I,	// 0x2017
+	P_PREG_PAD_GPIO4_I,	// 0x201a
+	P_PREG_PAD_GPIO5_I,	// 0x201d
+	P_PREG_PAD_GPIO6_I,	// 0x200a
+	P_AO_GPIO_I,
+};
+
+#define PIN_MUX(reg, bit)	((reg << 5) | bit)
+#define NONE			(0xFFFF)
+#define MUX_SIZE		6
+
+static unsigned int m6tv_pin_mux[][MUX_SIZE] = {
+	[GPIOZ_0]	=	{PIN_MUX(4,13),NONE,NONE,NONE,NONE,NONE},
+	[GPIOZ_1]	=	{PIN_MUX(4,12),NONE,NONE,NONE,NONE,NONE},
+	[GPIOZ_2]	=	{PIN_MUX(4,11),NONE,NONE,NONE,NONE,NONE},
+	[GPIOZ_3]	=	{PIN_MUX(4,10),NONE,NONE,NONE,NONE,NONE},
+	[GPIOZ_4]	=	{NONE,PIN_MUX(4, 9),NONE,NONE,NONE,NONE},
+	[GPIOZ_5]	=	{NONE,PIN_MUX(4, 8),NONE,NONE,NONE,NONE},
+	[GPIOZ_6]	=	{NONE,NONE,NONE,NONE,PIN_MUX(5,31),PIN_MUX(5,29)},
+	[GPIOZ_7]	=	{NONE,NONE,NONE,NONE,PIN_MUX(5,30),PIN_MUX(5,28)},
+	[GPIOZ_8]	=	{NONE,NONE,NONE,NONE,PIN_MUX(5,27),PIN_MUX(5,25)},
+	[GPIOZ_9]	=	{NONE,NONE,NONE,NONE,PIN_MUX(5,26),PIN_MUX(5,24)},
+	[GPIOZ_10]	=	{PIN_MUX(4,25),PIN_MUX(8,16),PIN_MUX(8,30),NONE,NONE,NONE},
+	[GPIOZ_11]	=	{PIN_MUX(4,24),PIN_MUX(8,15),NONE,PIN_MUX(8,29),NONE,NONE},
+	[GPIOZ_12]	=	{PIN_MUX(4,23),PIN_MUX(8,14),NONE,PIN_MUX(8,28),NONE,PIN_MUX(9,12)},
+	[GPIOZ_13]	=	{PIN_MUX(4,22),PIN_MUX(8,13),NONE,PIN_MUX(8,27),NONE,NONE},
+	[GPIOZ_14]	=	{NONE,PIN_MUX(8,12),NONE,PIN_MUX(8,26),NONE,NONE},
+	[GPIOZ_15]	=	{NONE,PIN_MUX(8,18),PIN_MUX(8,24),PIN_MUX(8,25),NONE,NONE},
+	[GPIOZ_16]	=	{NONE,PIN_MUX(8,17),PIN_MUX(8,22),PIN_MUX(8,23),NONE,NONE},
+	[GPIOZ_17]	=	{NONE,NONE,NONE,PIN_MUX(8,21),NONE,NONE},
+	[GPIOZ_18]	=	{PIN_MUX(3,24),NONE,NONE,NONE,NONE,NONE},
+	[GPIOZ_19]	=	{PIN_MUX(3,23),NONE,NONE,NONE,PIN_MUX(7,28),PIN_MUX(3,26)},
+
+	[GPIOY_0]	=	{PIN_MUX(6,31),PIN_MUX(6,30),NONE,PIN_MUX(6, 4),NONE,NONE},
+	[GPIOY_1]	=	{PIN_MUX(6,18),NONE,PIN_MUX(6, 3),NONE,NONE,NONE},
+	[GPIOY_2]	=	{PIN_MUX(6,17),NONE,PIN_MUX(6, 2),NONE,NONE,NONE},
+	[GPIOY_3]	=	{PIN_MUX(6,16),NONE,PIN_MUX(6, 1),NONE,NONE,NONE},
+	[GPIOY_4]	=	{PIN_MUX(6,15),NONE,PIN_MUX(6, 0),NONE,NONE,NONE},
+	[GPIOY_5]	=	{PIN_MUX(6,14),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_6]	=	{PIN_MUX(6,13),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_7]	=	{PIN_MUX(6,12),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_8]	=	{PIN_MUX(6,11),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_9]	=	{PIN_MUX(6,10),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_10]	=	{PIN_MUX(6, 9),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_11]	=	{PIN_MUX(6, 8),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_12]	=	{PIN_MUX(6, 7),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_13]	=	{PIN_MUX(6, 6),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_14]	=	{PIN_MUX(6, 5),NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_15]	=	{NONE,NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_16]	=	{NONE,NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_17]	=	{NONE,NONE,NONE,NONE,NONE,NONE},
+	[GPIOY_18]	=	{NONE,PIN_MUX(9, 1),NONE,NONE,NONE,NONE},
+	[GPIOY_19]	=	{NONE,PIN_MUX(9, 0),NONE,NONE,NONE,NONE},
+	[GPIOY_20]	=	{NONE,NONE,PIN_MUX(9,10),PIN_MUX(7,27),PIN_MUX(2,31),NONE},
+	[GPIOY_21]	=	{NONE,NONE,PIN_MUX(9, 9),PIN_MUX(7,26),PIN_MUX(2,30),NONE},
+	[GPIOY_22]	=	{NONE,NONE,PIN_MUX(9, 8),PIN_MUX(7,25),PIN_MUX(2,29),NONE},
+	[GPIOY_23]	=	{NONE,NONE,PIN_MUX(9, 7),PIN_MUX(7,24),PIN_MUX(2,28),NONE},
+	[GPIOY_24]	=	{NONE,NONE,PIN_MUX(9, 6),NONE,NONE,NONE},
+	[GPIOY_25]	=	{NONE,NONE,PIN_MUX(9, 5),NONE,NONE,NONE},
+	[GPIOY_26]	=	{NONE,NONE,PIN_MUX(9, 4),NONE,NONE,NONE},
+	[GPIOY_27]	=	{NONE,NONE,PIN_MUX(9, 3),NONE,NONE,NONE},
+
+	[GPIOW_0]	=	{PIN_MUX(0,27),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_1]	=	{PIN_MUX(0,26),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_2]	=	{PIN_MUX(0,25),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_3]	=	{PIN_MUX(0,24),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_4]	=	{PIN_MUX(0,23),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_5]	=	{PIN_MUX(0,22),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_6]	=	{PIN_MUX(0,21),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_7]	=	{PIN_MUX(0,20),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_8]	=	{PIN_MUX(0,19),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_9]	=	{PIN_MUX(0,18),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_10]	=	{PIN_MUX(0,17),NONE,NONE,PIN_MUX(8, 9),PIN_MUX(8,10),NONE},
+	[GPIOW_11]	=	{PIN_MUX(0,16),NONE,NONE,NONE,NONE,NONE},
+	[GPIOW_12]	=	{PIN_MUX(0,15),NONE,NONE,NONE,NONE,NONE},
+	[GPIOW_13]	=	{PIN_MUX(0,14),NONE,NONE,NONE,NONE,NONE},
+	[GPIOW_14]	=	{PIN_MUX(0,13),NONE,NONE,NONE,NONE,NONE},
+	[GPIOW_15]	=	{PIN_MUX(0,12),NONE,NONE,NONE,NONE,NONE},
+	[GPIOW_16]	=	{PIN_MUX(0,11),NONE,NONE,NONE,NONE,NONE},
+	[GPIOW_17]	=	{PIN_MUX(1, 2),NONE,NONE,NONE,NONE,NONE},
+	[GPIOW_18]	=	{PIN_MUX(1, 1),NONE,NONE,NONE,NONE,NONE},
+	[GPIOW_19]	=	{PIN_MUX(1, 0),PIN_MUX(3,22),NONE,NONE,NONE,NONE},
+
+	[GPIOX_0]	=	{PIN_MUX(1,12),PIN_MUX(5,14),PIN_MUX(8, 5),NONE,NONE,NONE},
+	[GPIOX_1]	=	{PIN_MUX(1,13),PIN_MUX(5,13),PIN_MUX(8, 4),NONE,NONE,NONE},
+	[GPIOX_2]	=	{PIN_MUX(1,14),PIN_MUX(5,13),PIN_MUX(8, 3),NONE,NONE,NONE},
+	[GPIOX_3]	=	{PIN_MUX(1,15),PIN_MUX(5,13),PIN_MUX(8, 2),NONE,NONE,NONE},
+	[GPIOX_4]	=	{PIN_MUX(1,16),PIN_MUX(5,12),NONE,PIN_MUX(3,30),PIN_MUX(7,21),NONE},
+	[GPIOX_5]	=	{PIN_MUX(1,17),PIN_MUX(5,12),NONE,PIN_MUX(3,29),PIN_MUX(7,20),NONE},
+	[GPIOX_6]	=	{PIN_MUX(1,18),PIN_MUX(5,12),NONE,PIN_MUX(3,28),PIN_MUX(7,19),NONE},
+	[GPIOX_7]	=	{PIN_MUX(1,19),PIN_MUX(5,12),NONE,PIN_MUX(3,27),PIN_MUX(7,18),NONE},
+	[GPIOX_8]	=	{NONE,PIN_MUX(5,11),PIN_MUX(8, 1),NONE,NONE,NONE},
+	[GPIOX_9]	=	{NONE,PIN_MUX(5,10),PIN_MUX(8, 0),NONE,NONE,NONE},
+	[GPIOX_10]	=	{NONE,NONE,NONE,NONE,PIN_MUX(7,22),NONE},
+	[GPIOX_11]	=	{NONE,NONE,NONE,NONE,NONE,NONE},
+	[GPIOX_12]	=	{NONE,NONE,NONE,NONE,NONE,PIN_MUX(3,21)},
+
+	[BOOT_0	]	=	{PIN_MUX(2,26),NONE,PIN_MUX(4,30),PIN_MUX(6,29),NONE,NONE},
+	[BOOT_1	]	=	{PIN_MUX(2,26),NONE,PIN_MUX(4,29),PIN_MUX(6,28),NONE,NONE},
+	[BOOT_2	]	=	{PIN_MUX(2,26),NONE,PIN_MUX(4,29),PIN_MUX(6,27),NONE,NONE},
+	[BOOT_3	]	=	{PIN_MUX(2,26),NONE,PIN_MUX(4,29),PIN_MUX(6,26),NONE,NONE},
+	[BOOT_4	]	=	{PIN_MUX(2,26),NONE,PIN_MUX(4,28),NONE,NONE,NONE},
+	[BOOT_5	]	=	{PIN_MUX(2,26),NONE,PIN_MUX(4,28),NONE,NONE,NONE},
+	[BOOT_6	]	=	{PIN_MUX(2,26),NONE,PIN_MUX(4,28),NONE,NONE,NONE},
+	[BOOT_7	]	=	{PIN_MUX(2,26),NONE,PIN_MUX(4,28),NONE,NONE,NONE},
+	[BOOT_8	]	=	{PIN_MUX(2,25),NONE,NONE,NONE,NONE,NONE},
+	[BOOT_9	]	=	{PIN_MUX(2,24),NONE,NONE,NONE,NONE,NONE},
+	[BOOT_10]	=	{PIN_MUX(2,23),PIN_MUX(2,17),PIN_MUX(4,27),PIN_MUX(6,25),NONE,NONE},
+	[BOOT_11]	=	{PIN_MUX(2,22),PIN_MUX(2,16),PIN_MUX(4,26),PIN_MUX(6,24),NONE,NONE},
+	[BOOT_12]	=	{PIN_MUX(2,21),PIN_MUX(5, 1),NONE,NONE,NONE,NONE},
+	[BOOT_13]	=	{PIN_MUX(2,20),PIN_MUX(5, 3),NONE,NONE,NONE,NONE},
+	[BOOT_14]	=	{PIN_MUX(2,19),PIN_MUX(5, 2),NONE,NONE,NONE,NONE},
+	[BOOT_15]	=	{PIN_MUX(2,18),NONE,NONE,NONE,NONE,NONE},
+	[BOOT_16]	=	{PIN_MUX(2,27),NONE,NONE,NONE,NONE,NONE},
+	[BOOT_17]	=	{NONE,PIN_MUX(5, 0),PIN_MUX(3, 25),NONE,PIN_MUX(7, 29),NONE},
+
+	[GPIOP_0]	=	{PIN_MUX(4, 3),NONE,NONE,PIN_MUX(9,22),PIN_MUX(9,21),PIN_MUX(9,20)},//
+	[GPIOP_1]	=	{PIN_MUX(4, 2),PIN_MUX(1,22),NONE,NONE,NONE,PIN_MUX(9,23)},
+	[GPIOP_2]	=	{PIN_MUX(4,17),PIN_MUX(1,23),PIN_MUX(4,15),NONE,NONE,PIN_MUX(9,24)},
+	[GPIOP_3]	=	{PIN_MUX(4,16),PIN_MUX(1,24),PIN_MUX(4,14),NONE,NONE,PIN_MUX(9,25)},
+	[GPIOP_4]	=	{NONE,PIN_MUX(1,25),NONE,NONE,NONE,PIN_MUX(9,26)},
+	[GPIOP_5]	=	{NONE,NONE,PIN_MUX(1,21),PIN_MUX(2, 1),PIN_MUX(7,30),PIN_MUX(9,27)},
+	[GPIOP_6]	=	{NONE,NONE,PIN_MUX(1,20),PIN_MUX(2, 0),PIN_MUX(2, 2),PIN_MUX(9,28)},
+	[GPIOP_7]	=	{NONE,NONE,NONE,NONE,NONE,PIN_MUX(9,29)},
+
+	[CARD_0	]	=	{NONE,NONE,PIN_MUX(2, 7),PIN_MUX(2,15),NONE,NONE},
+	[CARD_1	]	=	{NONE,NONE,PIN_MUX(2, 6),PIN_MUX(2,14),NONE,NONE},
+	[CARD_2	]	=	{NONE,NONE,PIN_MUX(2, 6),PIN_MUX(2,13),NONE,NONE},
+	[CARD_3	]	=	{NONE,NONE,PIN_MUX(2, 6),PIN_MUX(2,12),NONE,NONE},
+	[CARD_4	]	=	{PIN_MUX(1, 4),NONE,PIN_MUX(2, 5),PIN_MUX(2,11),NONE,NONE},
+	[CARD_5	]	=	{PIN_MUX(1, 5),NONE,PIN_MUX(2, 4),PIN_MUX(2,10),NONE,NONE},
+	[CARD_6	]	=	{PIN_MUX(1, 6),NONE,NONE,NONE,NONE,NONE},
+	[CARD_7	]	=	{PIN_MUX(1, 7),NONE,NONE,NONE,PIN_MUX(6, 23),PIN_MUX(8, 11)},
+	[CARD_8	]	=	{NONE,NONE,NONE,NONE,PIN_MUX(6,23),PIN_MUX(8,11)},
+
+	[GPIOB_0]	=	{PIN_MUX(0, 1),PIN_MUX(3,10),NONE,NONE,NONE,NONE},
+	[GPIOB_1]	=	{PIN_MUX(0, 0),PIN_MUX(3,11),NONE,NONE,NONE,NONE},
+	[GPIOB_2]	=	{PIN_MUX(0, 0),PIN_MUX(3,11),NONE,NONE,NONE,NONE},
+	[GPIOB_3]	=	{PIN_MUX(0, 0),PIN_MUX(3,11),PIN_MUX(5,23),NONE,NONE,NONE},
+	[GPIOB_4]	=	{PIN_MUX(0, 0),PIN_MUX(3,11),PIN_MUX(5,22),NONE,NONE,NONE},
+	[GPIOB_5]	=	{PIN_MUX(0, 0),PIN_MUX(3,11),PIN_MUX(5,21),NONE,NONE,NONE},
+	[GPIOB_6]	=	{PIN_MUX(0, 0),PIN_MUX(3,11),PIN_MUX(5,20),NONE,NONE,NONE},
+	[GPIOB_7]	=	{PIN_MUX(0, 0),PIN_MUX(3,11),PIN_MUX(5,19),NONE,NONE,NONE},
+	[GPIOB_8]	=	{PIN_MUX(0, 3),PIN_MUX(3, 9),PIN_MUX(5,18),NONE,NONE,NONE},
+	[GPIOB_9]	=	{PIN_MUX(0, 3),PIN_MUX(3, 8),PIN_MUX(5,17),NONE,NONE,NONE},
+	[GPIOB_10]	=	{PIN_MUX(0, 2),PIN_MUX(3, 7),PIN_MUX(5,16),NONE,NONE,NONE},
+	[GPIOB_11]	=	{PIN_MUX(0, 2),PIN_MUX(3, 6),PIN_MUX(5,15),NONE,NONE,NONE},
+	[GPIOB_12]	=	{PIN_MUX(0, 2),NONE,PIN_MUX(3,17),PIN_MUX(5, 5),NONE,NONE},
+	[GPIOB_13]	=	{PIN_MUX(0, 2),NONE,PIN_MUX(3,16),NONE,NONE,NONE},
+	[GPIOB_14]	=	{PIN_MUX(0, 2),NONE,PIN_MUX(3,15),NONE,NONE,NONE},
+	[GPIOB_15]	=	{PIN_MUX(0, 2),NONE,PIN_MUX(3,14),NONE,NONE,NONE},
+	[GPIOB_16]	=	{PIN_MUX(0, 5),NONE,PIN_MUX(3,13),NONE,NONE,NONE},
+	[GPIOB_17]	=	{PIN_MUX(0, 5),NONE,PIN_MUX(3,12),NONE,NONE,NONE},
+	[GPIOB_18]	=	{PIN_MUX(0, 4),NONE,PIN_MUX(3,12),NONE,NONE,NONE},
+	[GPIOB_19]	=	{PIN_MUX(0, 4),NONE,PIN_MUX(3,12),NONE,NONE,NONE},
+	[GPIOB_20]	=	{PIN_MUX(0, 4),NONE,PIN_MUX(3,12),NONE,NONE,NONE},
+	[GPIOB_21]	=	{PIN_MUX(0, 4),NONE,PIN_MUX(3,12),NONE,NONE,NONE},
+	[GPIOB_22]	=	{PIN_MUX(0, 4),NONE,PIN_MUX(3,12),NONE,NONE,NONE},
+	[GPIOB_23]	=	{PIN_MUX(0, 4),NONE,PIN_MUX(3,12),NONE,NONE,NONE},
+
+	[GPIOA_0]	=	{PIN_MUX(0, 6),PIN_MUX(3, 4),NONE,NONE,PIN_MUX(6,20),PIN_MUX(8,11)},
+	[GPIOA_1]	=	{PIN_MUX(0, 6),PIN_MUX(3, 5),NONE,NONE,PIN_MUX(6,20),PIN_MUX(8,11)},
+	[GPIOA_2]	=	{PIN_MUX(0, 6),PIN_MUX(3, 5),NONE,NONE,PIN_MUX(6,20),PIN_MUX(8,11)},
+	[GPIOA_3]	=	{PIN_MUX(0, 6),PIN_MUX(3, 5),NONE,NONE,PIN_MUX(6,20),PIN_MUX(8,11)},
+	[GPIOA_4]	=	{PIN_MUX(0, 6),PIN_MUX(3, 5),NONE,NONE,PIN_MUX(6,20),PIN_MUX(8,11)},
+	[GPIOA_5]	=	{PIN_MUX(0, 6),PIN_MUX(3, 5),NONE,NONE,PIN_MUX(6,20),PIN_MUX(8,11)},
+	[GPIOA_6]	=	{PIN_MUX(0, 6),PIN_MUX(3, 5),NONE,NONE,PIN_MUX(6,20),PIN_MUX(8,11)},
+	[GPIOA_7]	=	{PIN_MUX(0, 6),PIN_MUX(3, 5),NONE,NONE,PIN_MUX(6,20),PIN_MUX(8,11)},
+	[GPIOA_8]	=	{PIN_MUX(0, 6),PIN_MUX(3, 0),NONE,NONE,PIN_MUX(6,21),PIN_MUX(8,11)},
+	[GPIOA_9]	=	{PIN_MUX(0, 6),PIN_MUX(3, 1),NONE,NONE,PIN_MUX(6,21),PIN_MUX(8,11)},
+	[GPIOA_10]	=	{PIN_MUX(0, 6),PIN_MUX(3, 2),NONE,NONE,PIN_MUX(6,21),PIN_MUX(8,11)},
+	[GPIOA_11]	=	{PIN_MUX(0, 6),PIN_MUX(3, 3),NONE,NONE,PIN_MUX(6,21),PIN_MUX(8,11)},
+	[GPIOA_12]	=	{PIN_MUX(0, 6),NONE,PIN_MUX(4,21),PIN_MUX(7, 0),PIN_MUX(6,21),PIN_MUX(8,11)},
+	[GPIOA_13]	=	{PIN_MUX(0, 6),NONE,PIN_MUX(4,20),PIN_MUX(7, 1),PIN_MUX(6,21),PIN_MUX(8,11)},
+	[GPIOA_14]	=	{PIN_MUX(0, 6),NONE,PIN_MUX(4,19),PIN_MUX(7, 2),PIN_MUX(6,21),PIN_MUX(8,11)},
+	[GPIOA_15]	=	{PIN_MUX(0, 6),NONE,PIN_MUX(4,18),PIN_MUX(7, 3),PIN_MUX(6,21),PIN_MUX(8,11)},
+	[GPIOA_16]	=	{PIN_MUX(0, 6),NONE,NONE,PIN_MUX(7, 4),PIN_MUX(6,22),PIN_MUX(8,11)},
+	[GPIOA_17]	=	{PIN_MUX(0, 6),NONE,NONE,PIN_MUX(7, 5),PIN_MUX(6,22),PIN_MUX(8,11)},
+	[GPIOA_18]	=	{PIN_MUX(0, 6),NONE,NONE,PIN_MUX(7, 6),PIN_MUX(6,22),PIN_MUX(8,11)},
+	[GPIOA_19]	=	{PIN_MUX(0, 6),NONE,NONE,PIN_MUX(7, 7),PIN_MUX(6,22),PIN_MUX(8,11)},
+	[GPIOA_20]	=	{PIN_MUX(0, 6),NONE,NONE,PIN_MUX(7, 8),PIN_MUX(6,22),PIN_MUX(8,11)},
+	[GPIOA_21]	=	{PIN_MUX(0, 6),NONE,NONE,PIN_MUX(7, 9),PIN_MUX(6,22),PIN_MUX(8,11)},
+	[GPIOA_22]	=	{PIN_MUX(0, 6),NONE,NONE,PIN_MUX(7,10),PIN_MUX(6,22),PIN_MUX(8,11)},
+	[GPIOA_23]	=	{PIN_MUX(0, 6),NONE,NONE,PIN_MUX(7,11),PIN_MUX(6,22),PIN_MUX(8,11)},
+	[GPIOA_24]	=	{PIN_MUX(0, 7),NONE,NONE,PIN_MUX(7,12),PIN_MUX(6,23),PIN_MUX(8,11)},
+	[GPIOA_25]	=	{PIN_MUX(0, 8),NONE,NONE,PIN_MUX(7,13),PIN_MUX(6,23),PIN_MUX(8,11)},
+	[GPIOA_26]	=	{PIN_MUX(0, 9),NONE,NONE,PIN_MUX(7,14),PIN_MUX(6,23),PIN_MUX(8,11)},
+	[GPIOA_27]	=	{PIN_MUX(0,10),NONE,NONE,PIN_MUX(7,15),PIN_MUX(6,23),PIN_MUX(8,11)},
+	[GPIOA_28]	=	{NONE,NONE,NONE,PIN_MUX(7,16),PIN_MUX(6,23),PIN_MUX(8,11)},
+	[GPIOA_29]	=	{NONE,NONE,NONE,PIN_MUX(7,17),PIN_MUX(6,23),PIN_MUX(8,11)},
+
+	[GPIOAO_0]	=	{PIN_MUX(10,12),NONE,NONE,NONE,NONE,NONE},
+	[GPIOAO_1]	=	{PIN_MUX(10,11),NONE,NONE,NONE,NONE,NONE},
+	[GPIOAO_2]	=	{PIN_MUX(10,10),PIN_MUX(10,26),PIN_MUX(10, 8),PIN_MUX(10, 4),NONE,NONE},
+	[GPIOAO_3]	=	{PIN_MUX(10, 9),PIN_MUX(10,25),PIN_MUX(10, 7),PIN_MUX(10, 3),NONE,NONE},
+	[GPIOAO_4]	=	{NONE,PIN_MUX(10,24),PIN_MUX(10, 6),PIN_MUX(10, 2),NONE,NONE},
+	[GPIOAO_5]	=	{NONE,PIN_MUX(10,23),PIN_MUX(10, 5),PIN_MUX(10, 1),NONE,NONE},
+	[GPIOAO_6]	=	{PIN_MUX(10,19),NONE,NONE,PIN_MUX(10,14),PIN_MUX(10,31),PIN_MUX(10,22)},
+	[GPIOAO_7]	=	{NONE,NONE,NONE,NONE,PIN_MUX(10, 0),NONE},
+	[GPIOAO_8]	=	{NONE,PIN_MUX(10,30),NONE,NONE,NONE,NONE},
+	[GPIOAO_9]	=	{NONE,PIN_MUX(10,29),NONE,NONE,NONE,NONE},
+	[GPIOAO_10]	=	{NONE,PIN_MUX(10,28),NONE,PIN_MUX(10,17),NONE,NONE},
+	[GPIOAO_11]	=	{NONE,PIN_MUX(10,27),NONE,NONE,NONE,PIN_MUX(10,21)},
+};
+
+
+#define PIN_MAP(pin,reg,bit) \
+{ \
+	.num=pin, \
+	.name=#pin, \
+	.out_en_reg_bit=GPIO_REG_BIT(reg,bit), \
+	.out_value_reg_bit=GPIO_REG_BIT(reg,bit), \
+	.input_value_reg_bit=GPIO_REG_BIT(reg,bit), \
+}
+#define PIN_AOMAP(pin,en_reg,en_bit,out_reg,out_bit,in_reg,in_bit) \
+{ \
+	.num=pin, \
+	.name=#pin, \
+	.out_en_reg_bit=GPIO_REG_BIT(en_reg,en_bit), \
+	.out_value_reg_bit=GPIO_REG_BIT(out_reg,out_bit), \
+	.input_value_reg_bit=GPIO_REG_BIT(in_reg,in_bit), \
+	.gpio_owner=NULL, \
+}
+
+struct amlogic_gpio_desc amlogic_pins[] = {
+	PIN_MAP(GPIOZ_0,  6, 0),
+	PIN_MAP(GPIOZ_1,  6, 1),
+	PIN_MAP(GPIOZ_2,  6, 2),
+	PIN_MAP(GPIOZ_3,  6, 3),
+	PIN_MAP(GPIOZ_4,  6, 4),
+	PIN_MAP(GPIOZ_5,  6, 5),
+	PIN_MAP(GPIOZ_6,  6, 6),
+	PIN_MAP(GPIOZ_7,  6, 7),
+	PIN_MAP(GPIOZ_8,  6, 8),
+	PIN_MAP(GPIOZ_9,  6, 9),
+	PIN_MAP(GPIOZ_10, 6, 10),
+	PIN_MAP(GPIOZ_11, 6, 11),
+	PIN_MAP(GPIOZ_12, 6, 12),
+	PIN_MAP(GPIOZ_13, 6, 13),
+	PIN_MAP(GPIOZ_14, 6, 14),
+	PIN_MAP(GPIOZ_15, 6, 15),
+	PIN_MAP(GPIOZ_16, 6, 16),
+	PIN_MAP(GPIOZ_17, 6, 17),
+	PIN_MAP(GPIOZ_18, 6, 18),
+	PIN_MAP(GPIOZ_19, 6, 19),
+
+	PIN_MAP(GPIOY_0,  2, 0),
+	PIN_MAP(GPIOY_1,  2, 1),
+	PIN_MAP(GPIOY_2,  2, 2),
+	PIN_MAP(GPIOY_3,  2, 3),
+	PIN_MAP(GPIOY_4,  2, 4),
+	PIN_MAP(GPIOY_5,  2, 5),
+	PIN_MAP(GPIOY_6,  2, 6),
+	PIN_MAP(GPIOY_7,  2, 7),
+	PIN_MAP(GPIOY_8,  2, 8),
+	PIN_MAP(GPIOY_9,  2, 9),
+	PIN_MAP(GPIOY_10, 2, 10),
+	PIN_MAP(GPIOY_11, 2, 11),
+	PIN_MAP(GPIOY_12, 2, 12),
+	PIN_MAP(GPIOY_13, 2, 13),
+	PIN_MAP(GPIOY_14, 2, 14),
+	PIN_MAP(GPIOY_15, 2, 15),
+	PIN_MAP(GPIOY_16, 2, 16),
+	PIN_MAP(GPIOY_17, 2, 17),
+	PIN_MAP(GPIOY_18, 2, 18),
+	PIN_MAP(GPIOY_19, 2, 19),
+	PIN_MAP(GPIOY_20, 2, 20),
+	PIN_MAP(GPIOY_21, 2, 21),
+	PIN_MAP(GPIOY_22, 2, 22),
+	PIN_MAP(GPIOY_23, 2, 23),
+	PIN_MAP(GPIOY_24, 2, 24),
+	PIN_MAP(GPIOY_25, 2, 25),
+	PIN_MAP(GPIOY_26, 2, 26),
+	PIN_MAP(GPIOY_27, 2, 27),
+
+	PIN_MAP(GPIOW_0,  5, 0),
+	PIN_MAP(GPIOW_1,  5, 1),
+	PIN_MAP(GPIOW_2,  5, 2),
+	PIN_MAP(GPIOW_3,  5, 3),
+	PIN_MAP(GPIOW_4,  5, 4),
+	PIN_MAP(GPIOW_5,  5, 5),
+	PIN_MAP(GPIOW_6,  5, 6),
+	PIN_MAP(GPIOW_7,  5, 7),
+	PIN_MAP(GPIOW_8,  5, 8),
+	PIN_MAP(GPIOW_9,  5, 9),
+	PIN_MAP(GPIOW_10, 5, 10),
+	PIN_MAP(GPIOW_11, 5, 11),
+	PIN_MAP(GPIOW_12, 5, 12),
+	PIN_MAP(GPIOW_13, 5, 13),
+	PIN_MAP(GPIOW_14, 5, 14),
+	PIN_MAP(GPIOW_15, 5, 15),
+	PIN_MAP(GPIOW_16, 5, 16),
+	PIN_MAP(GPIOW_17, 5, 17),
+	PIN_MAP(GPIOW_18, 5, 18),
+	PIN_MAP(GPIOW_19, 5, 19),
+
+
+	PIN_MAP(GPIOX_0,  4, 0),
+	PIN_MAP(GPIOX_1,  4, 1),
+	PIN_MAP(GPIOX_2,  4, 2),
+	PIN_MAP(GPIOX_3,  4, 3),
+	PIN_MAP(GPIOX_4,  4, 4),
+	PIN_MAP(GPIOX_5,  4, 5),
+	PIN_MAP(GPIOX_6,  4, 6),
+	PIN_MAP(GPIOX_7,  4, 7),
+	PIN_MAP(GPIOX_8,  4, 8),
+	PIN_MAP(GPIOX_9,  4, 9),
+	PIN_MAP(GPIOX_10, 4, 10),
+	PIN_MAP(GPIOX_11, 4, 11),
+	PIN_MAP(GPIOX_12, 4, 12),
+
+	PIN_MAP(BOOT_0,  3, 0),
+	PIN_MAP(BOOT_1,  3, 1),
+	PIN_MAP(BOOT_2,  3, 2),
+	PIN_MAP(BOOT_3,  3, 3),
+	PIN_MAP(BOOT_4,  3, 4),
+	PIN_MAP(BOOT_5,  3, 5),
+	PIN_MAP(BOOT_6,  3, 6),
+	PIN_MAP(BOOT_7,  3, 7),
+	PIN_MAP(BOOT_8,  3, 8),
+	PIN_MAP(BOOT_9,  3, 9),
+	PIN_MAP(BOOT_10, 3, 10),
+	PIN_MAP(BOOT_11, 3, 11),
+	PIN_MAP(BOOT_12, 3, 12),
+	PIN_MAP(BOOT_13, 3, 13),
+	PIN_MAP(BOOT_14, 3, 14),
+	PIN_MAP(BOOT_15, 3, 15),
+	PIN_MAP(BOOT_16, 3, 16),
+	PIN_MAP(BOOT_17, 3, 17),
+
+	PIN_MAP(GPIOP_0,  1, 24),
+	PIN_MAP(GPIOP_1,  1, 25),
+	PIN_MAP(GPIOP_2,  1, 26),
+	PIN_MAP(GPIOP_3,  1, 27),
+	PIN_MAP(GPIOP_4,  1, 28),
+	PIN_MAP(GPIOP_5,  1, 29),
+	PIN_MAP(GPIOP_6,  1, 30),
+	PIN_MAP(GPIOP_7,  1, 31),
+
+	PIN_MAP(CARD_0,  5, 23),
+	PIN_MAP(CARD_1,  5, 24),
+	PIN_MAP(CARD_2,  5, 25),
+	PIN_MAP(CARD_3,  5, 26),
+	PIN_MAP(CARD_4,  5, 27),
+	PIN_MAP(CARD_5,  5, 28),
+	PIN_MAP(CARD_6,  5, 29),
+	PIN_MAP(CARD_7,  5, 30),
+	PIN_MAP(CARD_8,  5, 31),
+
+	PIN_MAP(GPIOB_0,  1, 0),
+	PIN_MAP(GPIOB_1,  1, 1),
+	PIN_MAP(GPIOB_2,  1, 2),
+	PIN_MAP(GPIOB_3,  1, 3),
+	PIN_MAP(GPIOB_4,  1, 4),
+	PIN_MAP(GPIOB_5,  1, 5),
+	PIN_MAP(GPIOB_6,  1, 6),
+	PIN_MAP(GPIOB_7,  1, 7),
+	PIN_MAP(GPIOB_8,  1, 8),
+	PIN_MAP(GPIOB_9,  1, 9),
+	PIN_MAP(GPIOB_10, 1, 10),
+	PIN_MAP(GPIOB_11, 1, 11),
+	PIN_MAP(GPIOB_12, 1, 12),
+	PIN_MAP(GPIOB_13, 1, 13),
+	PIN_MAP(GPIOB_14, 1, 14),
+	PIN_MAP(GPIOB_15, 1, 15),
+	PIN_MAP(GPIOB_16, 1, 16),
+	PIN_MAP(GPIOB_17, 1, 17),
+	PIN_MAP(GPIOB_18, 1, 18),
+	PIN_MAP(GPIOB_19, 1, 19),
+	PIN_MAP(GPIOB_20, 1, 20),
+	PIN_MAP(GPIOB_21, 1, 21),
+	PIN_MAP(GPIOB_22, 1, 22),
+	PIN_MAP(GPIOB_23, 1, 23),
+
+	PIN_MAP(GPIOA_0,  0, 0),
+	PIN_MAP(GPIOA_1,  0, 1),
+	PIN_MAP(GPIOA_2,  0, 2),
+	PIN_MAP(GPIOA_3,  0, 3),
+	PIN_MAP(GPIOA_4,  0, 4),
+	PIN_MAP(GPIOA_5,  0, 5),
+	PIN_MAP(GPIOA_6,  0, 6),
+	PIN_MAP(GPIOA_7,  0, 7),
+	PIN_MAP(GPIOA_8,  0, 8),
+	PIN_MAP(GPIOA_9,  0, 9),
+	PIN_MAP(GPIOA_10, 0, 10),
+	PIN_MAP(GPIOA_11, 0, 11),
+	PIN_MAP(GPIOA_12, 0, 12),
+	PIN_MAP(GPIOA_13, 0, 13),
+	PIN_MAP(GPIOA_14, 0, 14),
+	PIN_MAP(GPIOA_15, 0, 15),
+	PIN_MAP(GPIOA_16, 0, 16),
+	PIN_MAP(GPIOA_17, 0, 17),
+	PIN_MAP(GPIOA_18, 0, 18),
+	PIN_MAP(GPIOA_19, 0, 19),
+	PIN_MAP(GPIOA_20, 0, 20),
+	PIN_MAP(GPIOA_21, 0, 21),
+	PIN_MAP(GPIOA_22, 0, 22),
+	PIN_MAP(GPIOA_23, 0, 23),
+	PIN_MAP(GPIOA_24, 0, 24),
+	PIN_MAP(GPIOA_25, 0, 25),
+	PIN_MAP(GPIOA_26, 0, 26),
+	PIN_MAP(GPIOA_27, 0, 27),
+	PIN_MAP(GPIOA_28, 0, 28),
+	PIN_MAP(GPIOA_29, 0, 29),
+
+	PIN_AOMAP(GPIOAO_0,  7, 0,  7, 16, 7, 0),
+	PIN_AOMAP(GPIOAO_1,  7, 1,  7, 17, 7, 1),
+	PIN_AOMAP(GPIOAO_2,  7, 2,  7, 18, 7, 2),
+	PIN_AOMAP(GPIOAO_3,  7, 3,  7, 19, 7, 3),
+	PIN_AOMAP(GPIOAO_4,  7, 4,  7, 20, 7, 4),
+	PIN_AOMAP(GPIOAO_5,  7, 5,  7, 21, 7, 5),
+	PIN_AOMAP(GPIOAO_6,  7, 6,  7, 22, 7, 6),
+	PIN_AOMAP(GPIOAO_7,  7, 7,  7, 23, 7, 7),
+	PIN_AOMAP(GPIOAO_8,  7, 8,  7, 24, 7, 8),
+	PIN_AOMAP(GPIOAO_9,  7, 9,  7, 25, 7, 9),
+	PIN_AOMAP(GPIOAO_10, 7, 10, 7, 26, 7, 10),
+	PIN_AOMAP(GPIOAO_11, 7, 11, 7, 27, 7, 11),
+};
+
+static int m6tv_gpio_requst(struct gpio_chip *chip, unsigned offset)
+{
+	int ret;
+	unsigned int i, reg, bit;
+
+	ret = pinctrl_request_gpio(offset);
+	if (!ret) {
+		for (i = 0; i < MUX_SIZE; i++) {
+			if (m6tv_pin_mux[offset][i] != NONE) {
+				reg = GPIO_REG(m6tv_pin_mux[offset][i]);
+				bit = GPIO_BIT(m6tv_pin_mux[offset][i]);
+				aml_clr_reg32_mask(p_pin_mux_reg_addr[reg], 1<<bit);
+			}
+		}
+	}
+	return ret;
+}
+
+static void m6tv_gpio_free(struct gpio_chip *chip, unsigned offset)
+{
+	pinctrl_free_gpio(offset);
+	return;
+}
+
+static int m6tv_gpio_direction_input(struct gpio_chip *chip, unsigned offset)
+{
+	unsigned int reg,bit;
+	reg = GPIO_REG(amlogic_pins[offset].out_en_reg_bit);
+	bit = GPIO_BIT(amlogic_pins[offset].out_en_reg_bit);
+	aml_set_reg32_mask(p_gpio_oen_addr[reg], 1<<bit);
+	return 0;
+}
+
+static int m6tv_gpio_get(struct gpio_chip *chip, unsigned offset)
+{
+	unsigned int reg,bit;
+	reg = GPIO_REG(amlogic_pins[offset].input_value_reg_bit);
+	bit = GPIO_BIT(amlogic_pins[offset].input_value_reg_bit);
+	return aml_get_reg32_bits(p_gpio_input_addr[reg], bit, 1);
+}
+
+static int m6tv_gpio_direction_output(struct gpio_chip *chip, unsigned offset, int value)
+{
+	unsigned int reg,bit;
+	reg = GPIO_REG(amlogic_pins[offset].out_value_reg_bit);
+	bit = GPIO_BIT(amlogic_pins[offset].out_value_reg_bit);
+	if (value)
+		aml_set_reg32_mask(p_gpio_output_addr[reg], 1<<bit);
+	else
+		aml_clr_reg32_mask(p_gpio_output_addr[reg], 1<<bit);
+	reg = GPIO_REG(amlogic_pins[offset].out_en_reg_bit);
+	bit = GPIO_BIT(amlogic_pins[offset].out_en_reg_bit);
+	aml_clr_reg32_mask(p_gpio_oen_addr[reg], 1<<bit);
+	return 0;
+}
+
+static void m6tv_gpio_set(struct gpio_chip *chip, unsigned offset, int value)
+{
+	unsigned int reg,bit;
+	reg=GPIO_REG(amlogic_pins[offset].out_value_reg_bit);
+	bit=GPIO_BIT(amlogic_pins[offset].out_value_reg_bit);
+	if (value)
+		aml_set_reg32_mask(p_gpio_output_addr[reg], 1<<bit);
+	else
+		aml_clr_reg32_mask(p_gpio_output_addr[reg], 1<<bit);
+}
+
+/* defined in gpio-amlogic.c */
+extern int gpio_flag;
+
+static int m6tv_gpio_to_irq(struct gpio_chip *chip, unsigned offset)
+{
+	unsigned reg, start_bit;
+	/* referrence AML_GPIO_IRQ used in device driver to set GPIO IRQ.
+	 * AML_GPIO_IRQ(irq_bank,filter,type) ((irq_bank&0x7)|(filter&0x7)<<8|(type&0x3)<<16)
+	 */
+	unsigned irq_bank = gpio_flag & 0x7;
+	unsigned filter   = (gpio_flag >> 8) & 0x7;
+	unsigned irq_type = (gpio_flag >> 16) & 0x3;
+
+	unsigned type[] = { 0x0, 	/*GPIO_IRQ_HIGH*/
+			    0x10000,	/*GPIO_IRQ_LOW*/
+			    0x1,	/*GPIO_IRQ_RISING*/
+			    0x10001,	/*GPIO_IRQ_FALLING*/};
+
+	/* set trigger type */
+	aml_clrset_reg32_bits(P_GPIO_INTR_EDGE_POL,
+			0x10001 << irq_bank,
+			type[irq_type] << irq_bank);
+
+
+	/* select pin */
+	reg = irq_bank < 4 ? P_GPIO_INTR_GPIO_SEL0:P_GPIO_INTR_GPIO_SEL1;
+	start_bit = (irq_bank & 3) * 8;
+	aml_clrset_reg32_bits(reg, 0xff << start_bit, amlogic_pins[offset].num << start_bit);
+
+	/* set filter */
+	start_bit = (irq_bank)*4;
+	aml_clrset_reg32_bits(P_GPIO_INTR_FILTER_SEL0, 0x7 << start_bit, filter << start_bit);
+
+	return 0;
+}
+
+/*
+ * extern
+ */
+int gpio_amlogic_name_to_num(const char *name)
+{
+	int i,tmp=100, num=0;
+	int len = strlen(name);
+	char *p = kzalloc(len+1, GFP_KERNEL);
+	char *start = p;
+	if(!p) {
+		printk("%s:malloc error\n",__func__);
+		return -1;
+	}
+
+	p = strcpy(p, name);
+	for ( i= 0; i < len; p++, i++) {
+		if (*p == '_') {
+			*p='\0';
+			tmp=i;
+		}
+		if (i > tmp && *p >= '0' && *p <= '9')
+			num = num*10 + *p-'0';
+	}
+
+	p = start;
+
+	if (!strcmp(p, "GPIOZ"))
+		num = num + 0;
+	else if (!strcmp(p, "GPIOY"))
+		num = num + 20;
+	else if(!strcmp(p, "GPIOW"))
+		num = num + 48;
+	else if(!strcmp(p, "GPIOX"))
+		num = num + 68;
+	else if(!strcmp(p, "BOOT"))
+		num = num + 81;
+	else if(!strcmp(p, "GPIOP"))
+		num = num + 99;
+	else if(!strcmp(p, "CARD"))
+		num = num + 107;
+	else if(!strcmp(p, "GPIOB"))
+		num = num + 116;
+	else if(!strcmp(p,"GPIOA"))
+		num = num + 140;
+	else if(!strcmp(p,"GPIOAO"))
+		num = num + 170;
+	else
+		num = -1;
+	kzfree(start);
+	return num;
+}
+
+static struct gpio_chip m6tv_gpio_chip = {
+	.request		= m6tv_gpio_requst,
+	.free			= m6tv_gpio_free,
+	.direction_input	= m6tv_gpio_direction_input,
+	.get			= m6tv_gpio_get,
+	.direction_output	= m6tv_gpio_direction_output,
+	.set			= m6tv_gpio_set,
+	.to_irq			= m6tv_gpio_to_irq,
+};
+
+static int m6tv_gpio_probe(struct platform_device *pdev)
+{
+#ifdef CONFIG_OF_GPIO
+	m6tv_gpio_chip.of_node = pdev->dev.of_node;
+#endif
+
+	m6tv_gpio_chip.base = 0;
+	m6tv_gpio_chip.ngpio = ARRAY_SIZE(amlogic_pins);
+	gpiochip_add(&m6tv_gpio_chip);
+	return 0;
+}
+
+static const struct of_device_id m6tv_gpio_match_table[] = {
+	{
+	.compatible = "amlogic,m6tv-gpio",
+	},
+	{ },
+};
+
+static struct platform_driver m6tv_gpio_driver = {
+	.probe		= m6tv_gpio_probe,
+	.driver		= {
+		.name	= "amlogic_gpio",
+		.owner	= THIS_MODULE,
+		.of_match_table = of_match_ptr(m6tv_gpio_match_table),
+	},
+};
+
+static int __init m6tv_gpio_init(void)
+{
+	return platform_driver_register(&m6tv_gpio_driver);
+}
+postcore_initcall(m6tv_gpio_init);
+
diff --git a/arch/arm/mach-meson6tv/headsmp.S b/arch/arm/mach-meson6tv/headsmp.S
new file mode 100755
index 000000000000..9a1f71caec87
--- /dev/null
+++ b/arch/arm/mach-meson6tv/headsmp.S
@@ -0,0 +1,35 @@
+/*
+ *  linux/arch/arm/mach-realview/headsmp.S
+ *
+ *  Copyright (c) 2003 ARM Limited
+ *  All Rights Reserved
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#include <linux/linkage.h>
+#include <linux/init.h>
+
+	__CPUINIT
+
+ENTRY(meson_secondary_startup)
+	mrc	p15, 0, r0, c0, c0, 5
+	and	r0, r0, #15
+	adr	r4, 1f
+	ldmia	r4, {r5, r6}
+	sub	r4, r4, r5
+	add	r6, r6, r4
+pen:	ldr	r7, [r6]
+	cmp	r7, r0
+	bne	pen
+
+	/*
+	 * we've been released from the holding pen: secondary_stack
+	 * should now contain the SVC stack for this core
+	 */
+	b	secondary_startup
+
+	.align
+1:	.long	.
+	.long	pen_release
diff --git a/arch/arm/mach-meson6tv/hotplug.c b/arch/arm/mach-meson6tv/hotplug.c
new file mode 100755
index 000000000000..ffb0da7707f0
--- /dev/null
+++ b/arch/arm/mach-meson6tv/hotplug.c
@@ -0,0 +1,86 @@
+/*
+ * arch/arm/mach-meson6tv/hotplug.c
+ *
+ * Copyright (C) 2012-2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+
+#include <linux/kernel.h>
+#include <linux/errno.h>
+#include <linux/smp.h>
+#include <linux/module.h>
+#include <asm/cacheflush.h>
+#include <plat/regops.h>
+
+#include <mach/io.h>
+#include "common.h"
+
+int meson6tv_cpu_kill(unsigned int cpu)
+{
+	return 1;
+}
+
+/*
+ * platform-specific code to shutdown a CPU
+ *
+ * Called with IRQs disabled
+ */
+void meson6tv_cpu_die(unsigned int cpu)
+{
+	//aml_write_reg32((IO_AHB_BASE + 0x1ff80),0);
+	meson_set_cpu_ctrl_reg(0);
+	flush_cache_all();
+	dsb();
+	dmb();
+
+	for (;;) {
+		/*
+		 * Execute WFI
+		 */
+		pr_debug("CPU%u: Enter WFI\n", cpu);
+	        __asm__ __volatile__ ("wfi" : : : "memory");
+
+
+		if (smp_processor_id() == cpu) {
+			/*
+			 * OK, proper wakeup, we're done
+			 */
+			if((aml_read_reg32(IO_AHB_BASE + 0x1ff80)&0x3) == ((1 << cpu) | 1))
+			{
+#ifdef CONFIG_MESON6_SMP_HOTPLUG
+				/*
+				 * Need invalidate data cache because of disable cpu0 fw
+				 */
+				extern  void v7_invalidate_dcache_all(void);
+				v7_invalidate_dcache_all();
+#endif
+				break;
+			}
+		}
+		pr_debug("CPU%u: spurious wakeup call\n", cpu);
+	}
+}
+
+int meson6tv_cpu_disable(unsigned int cpu)
+{
+	/*
+	 * we don't allow CPU 0 to be shutdown (it is still too special
+	 * e.g. clock tick interrupts)
+	 */
+	return cpu == 0 ? -EPERM : 0;
+}
+
diff --git a/arch/arm/mach-meson6tv/include/mach/am_regs.h b/arch/arm/mach-meson6tv/include/mach/am_regs.h
new file mode 100755
index 000000000000..9e1281101f1e
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/am_regs.h
@@ -0,0 +1,36 @@
+/*
+* arch/arm/mach-meson6tv/include/mach/am_regs.h
+*
+* Copyright (C) 2012-2013 Amlogic, Inc.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+
+#ifndef __MACH_MESON6TV_AM_REGS_H
+#define __MACH_MESON6TV_AM_REGS_H
+
+#include <linux/io.h>
+#include <plat/io.h>
+#include "ao_regs.h"
+#include "audio.h"
+#include "bt656.h"
+#include "vpp.h"
+#include "register.h"
+#include "c_stb_define.h"
+#include "cpu.h"
+#include "io.h"
+
+#endif /* __MACH_MESON6TV_AM_REGS_H */
diff --git a/arch/arm/mach-meson6tv/include/mach/ao_regs.h b/arch/arm/mach-meson6tv/include/mach/ao_regs.h
new file mode 100755
index 000000000000..cb8acc18b872
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/ao_regs.h
@@ -0,0 +1,101 @@
+/*
+ *  arch/arm/mach-meson6tv/include/mach/ao_regs.h
+ *
+ *  Copyright (C) 2010-2013 AMLOGIC, INC.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#ifndef __MACH_MESON6TV_AO_REGS_H
+#define __MACH_MESON6TV_AO_REGS_H
+// -------------------------------------------------------------------
+// BASE #0
+// -------------------------------------------------------------------
+
+#define AO_RTI_STATUS_REG0        (((0x00 << 8) | (0x00))<<2)
+#define AO_RTI_STATUS_REG1        (((0x00 << 8) | (0x01))<<2)
+#define AO_RTI_STATUS_REG2        (((0x00 << 8) | (0x02))<<2)
+#define AO_RTI_PWR_CNTL_REG0      (((0x00 << 8) | (0x04))<<2)
+#define AO_RTI_PIN_MUX_REG        (((0x00 << 8) | (0x05))<<2)
+#define AO_WD_GPIO_REG            (((0x00 << 8) | (0x06))<<2)
+#define AO_REMAP_REG0             (((0x00 << 8) | (0x07))<<2)
+#define AO_REMAP_REG1             (((0x00 << 8) | (0x08))<<2)
+#define AO_GPIO_O_EN_N            (((0x00 << 8) | (0x09))<<2)
+#define AO_GPIO_I                 (((0x00 << 8) | (0x0A))<<2)
+#define AO_RTI_PULL_UP_REG        (((0x00 << 8) | (0x0B))<<2)
+#define AO_RTI_JTAG_CODNFIG_REG   (((0x00 << 8) | (0x0C))<<2)
+#define AO_RTI_WD_MARK            (((0x00 << 8) | (0x0D))<<2)
+#define AO_RTI_GEN_CNTL_REG0      (((0x00 << 8) | (0x10))<<2)
+#define AO_WATCHDOG_REG           (((0x00 << 8) | (0x11))<<2)
+#define AO_WATCHDOG_RESET         (((0x00 << 8) | (0x12))<<2)
+#define AO_TIMER_REG              (((0x00 << 8) | (0x13))<<2)
+#define AO_TIMERA_REG             (((0x00 << 8) | (0x14))<<2)
+#define AO_TIMERE_REG             (((0x00 << 8) | (0x15))<<2)
+#define AO_AHB2DDR_CNTL           (((0x00 << 8) | (0x18))<<2)
+#define AO_IRQ_MASK_FIQ_SEL       (((0x00 << 8) | (0x20))<<2)
+#define AO_IRQ_GPIO_REG           (((0x00 << 8) | (0x21))<<2)
+#define AO_IRQ_STAT               (((0x00 << 8) | (0x22))<<2)
+#define AO_IRQ_STAT_CLR           (((0x00 << 8) | (0x23))<<2)
+#define AO_DEBUG_REG0             (((0x00 << 8) | (0x28))<<2)
+#define AO_DEBUG_REG1             (((0x00 << 8) | (0x29))<<2)
+#define AO_DEBUG_REG2             (((0x00 << 8) | (0x2a))<<2)
+#define AO_DEBUG_REG3             (((0x00 << 8) | (0x2b))<<2)
+// -------------------------------------------------------------------
+// BASE #1
+// -------------------------------------------------------------------
+#define AO_IR_DEC_LDR_ACTIVE      (((0x01 << 8) | (0x20))<<2)
+#define AO_IR_DEC_LDR_IDLE        (((0x01 << 8) | (0x21))<<2)
+#define AO_IR_DEC_LDR_REPEAT      (((0x01 << 8) | (0x22))<<2)
+#define AO_IR_DEC_BIT_0           (((0x01 << 8) | (0x23))<<2)
+#define AO_IR_DEC_REG0            (((0x01 << 8) | (0x24))<<2)
+#define AO_IR_DEC_FRAME           (((0x01 << 8) | (0x25))<<2)
+#define AO_IR_DEC_STATUS          (((0x01 << 8) | (0x26))<<2)
+#define AO_IR_DEC_REG1            (((0x01 << 8) | (0x27))<<2)
+// ----------------------------
+// UART
+// ----------------------------
+#define AO_UART_WFIFO             (((0x01 << 8) | (0x30))<<2)
+#define AO_UART_RFIFO             (((0x01 << 8) | (0x31))<<2)
+#define AO_UART_CONTROL           (((0x01 << 8) | (0x32))<<2)
+#define AO_UART_STATUS            (((0x01 << 8) | (0x33))<<2)
+#define AO_UART_MISC              (((0x01 << 8) | (0x34))<<2)
+// ----------------------------
+// I2C Master (8)
+// ----------------------------
+#define AO_I2C_M_0_CONTROL_REG    (((0x01 << 8) | (0x40))<<2)
+#define AO_I2C_M_0_SLAVE_ADDR     (((0x01 << 8) | (0x41))<<2)
+#define AO_I2C_M_0_TOKEN_LIST0    (((0x01 << 8) | (0x42))<<2)
+#define AO_I2C_M_0_TOKEN_LIST1    (((0x01 << 8) | (0x43))<<2)
+#define AO_I2C_M_0_WDATA_REG0     (((0x01 << 8) | (0x44))<<2)
+#define AO_I2C_M_0_WDATA_REG1     (((0x01 << 8) | (0x45))<<2)
+#define AO_I2C_M_0_RDATA_REG0     (((0x01 << 8) | (0x46))<<2)
+#define AO_I2C_M_0_RDATA_REG1     (((0x01 << 8) | (0x47))<<2)
+// ----------------------------
+// I2C Slave (3)
+// ----------------------------
+#define AO_I2C_S_CONTROL_REG      (((0x01 << 8) | (0x50))<<2)
+#define AO_I2C_S_SEND_REG         (((0x01 << 8) | (0x51))<<2)
+#define AO_I2C_S_RECV_REG         (((0x01 << 8) | (0x52))<<2)
+#define AO_I2C_S_CNTL1_REG        (((0x01 << 8) | (0x53))<<2)
+// ---------------------------
+// RTC (4)
+// ---------------------------
+//#define AO_RTC_ADDR0              (((0x01 << 8) | (0xd0))<<2)
+//#define AO_RTC_ADDR1              (((0x01 << 8) | (0xd1))<<2)
+//#define AO_RTC_ADDR2              (((0x01 << 8) | (0xd2))<<2)
+//#define AO_RTC_ADDR3              (((0x01 << 8) | (0xd3))<<2)
+//#define AO_RTC_ADDR4              (((0x01 << 8) | (0xd4))<<2)
+
+#endif // __MACH_MESON6TV_AO_REGS_H
diff --git a/arch/arm/mach-meson6tv/include/mach/audio.h b/arch/arm/mach-meson6tv/include/mach/audio.h
new file mode 100755
index 000000000000..9ca88e7b56dd
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/audio.h
@@ -0,0 +1,90 @@
+/*
+ * arch/arm/mach-meson6tvd/include/mach/audio.h
+ *
+ * Copyright (C) 2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __MACH_MESON_AUDIO_REGS_H
+#define __MACH_MESON_AUDIO_REGS_H
+
+#define SPDIF_EN			31
+#define SPDIF_INT_EN			30
+#define SPDIF_BURST_PRE_INT_EN		29
+#define SPDIF_TIE_0			24
+#define SPDIF_SAMPLE_SEL		23
+#define SPDIF_REVERSE_EN		22
+#define SPDIF_BIT_ORDER 		20
+#define SPDIF_CHNL_ORDER		19
+#define SPDIF_DATA_TYPE_SEL		18
+#define SPDIF_XTDCLK_UPD_ITVL		14	//16:14
+#define SPDIF_CLKNUM_54U		0	//13:0
+
+#define SPDIF_CLKNUM_192K		24	//29:24
+#define SPDIF_CLKNUM_96K		18	//23:18
+#define SPDIF_CLKNUM_48K		12	//17:12
+#define SPDIF_CLKNUM_44K		6	// 11:6
+#define SPDIF_CLKNUM_32K		0	// 5:0
+
+#define I2SIN_DIR			0	// I2S CLK and LRCLK direction. 0 : input 1 : output.
+#define I2SIN_CLK_SEL			1	// I2S clk selection : 0 : from pad input. 1 : from AIU.
+#define I2SIN_LRCLK_SEL			2
+#define I2SIN_POS_SYNC			3
+#define I2SIN_LRCLK_SKEW		4	// 6:4
+#define I2SIN_LRCLK_INVT		7
+#define I2SIN_SIZE			8	//9:8 : 0 16 bit. 1 : 18 bits 2 : 20 bits 3 : 24bits.
+#define I2SIN_CHAN_EN			10	//13:10.
+#define I2SIN_EN			15
+
+#define AUDIN_FIFO0_EN			0
+#define AUDIN_FIFO0_RST			1
+#define AUDIN_FIFO0_LOAD		2	//write 1 to load address to AUDIN_FIFO0.
+
+#define AUDIN_FIFO0_DIN_SEL		3
+	// 0	 spdifIN
+	// 1	 i2Sin
+	// 2	 PCMIN
+	// 3	 HDMI in
+	// 4	 DEMODULATOR IN
+#define AUDIN_FIFO0_ENDIAN		8	//10:8   data endian control.
+#define AUDIN_FIFO0_CHAN		11	//14:11   channel number.  in M1 suppose there's only 1 channel and 2 channel.
+#define AUDIN_FIFO0_UG			15	// urgent request enable.
+#define AUDIN_FIFO0_HOLD0_EN		19
+#define AUDIN_FIFO0_HOLD1_EN		20
+#define AUDIN_FIFO0_HOLD2_EN		21
+#define AUDIN_FIFO0_HOLD0_SEL		22	// 23:22
+#define AUDIN_FIFO0_HOLD1_SEL		24	// 25:24
+#define AUDIN_FIFO0_HOLD2_SEL		26	// 27:26
+#define AUDIN_FIFO0_HOLD_LVL		28	// 27:26
+
+#define AUDIN_FIFO1_EN			0
+#define AUDIN_FIFO1_RST			1
+#define AUDIN_FIFO1_LOAD		2	//write 1 to load address to AUDIN_FIFO0.
+
+#define AUDIN_FIFO1_DIN_SEL		3
+	// 0	 spdifIN
+	// 1	 i2Sin
+	// 2	 PCMIN
+	// 3	 HDMI in
+	// 4	 DEMODULATOR IN
+#define AUDIN_FIFO1_ENDIAN		8	//10:8   data endian control.
+#define AUDIN_FIFO1_CHAN		11	//14:11   channel number.  in M1 suppose there's only 1 channel and 2 channel.
+#define AUDIN_FIFO1_UG			15	// urgent request enable.
+#define AUDIN_FIFO1_HOLD0_EN		19
+#define AUDIN_FIFO1_HOLD1_EN		20
+#define AUDIN_FIFO1_HOLD2_EN		21
+#define AUDIN_FIFO1_HOLD0_SEL		22	// 23:22
+#define AUDIN_FIFO1_HOLD1_SEL		24	// 25:24
+#define AUDIN_FIFO1_HOLD2_SEL		26	// 27:26
+#define AUDIN_FIFO1_HOLD_LVL		28	// 27:26
+
+
+#endif // __MACH_MESON_AUDIO_REGS_H
diff --git a/arch/arm/mach-meson6tv/include/mach/avosstyle_io.h b/arch/arm/mach-meson6tv/include/mach/avosstyle_io.h
new file mode 100755
index 000000000000..c0c84db70f40
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/avosstyle_io.h
@@ -0,0 +1,85 @@
+/*
+ *
+ * arch/arm/mach-meson6tv/include/mach/am_regs.h
+ *
+ *  Copyright (C) 2012 AMLOGIC, INC.
+ *
+ * License terms: GNU General Public License (GPL) version 2
+ * Basic register address definitions in physical memory and
+ * some block defintions for core devices like the timer.
+ */
+
+#ifndef __MACH_MESON6TV_AVOSSTYL_IO_H
+#define __MACH_MESON6TV_AVOSSTYL_IO_H
+
+#ifndef __ASSEMBLY__
+#define WRITE_REG(bus,reg, val) aml_write_reg32( bus##_REG_ADDR(reg),val)
+#define READ_REG(bus,reg) (aml_read_reg32(bus##_REG_ADDR(reg)))
+#define WRITE_REG_BITS(bus,reg, val, start, len) \
+    aml_set_reg32_bits(bus##_REG_ADDR(reg),	val,start,len)
+#define READ_REG_BITS(bus,reg, start, len) \
+     aml_get_reg32_bits(bus##_REG_ADDR(reg),start,len)
+#define CLEAR_REG_MASK(bus,reg, mask)   aml_clr_reg32_mask(bus##_REG_ADDR(reg), (mask))
+#define SET_REG_MASK(bus,reg, mask)     aml_set_reg32_mask(bus##_REG_ADDR(reg), (mask))
+
+#ifndef CONFIG_DISABLE_CBUS_IO_FUNC
+///CBUS BUS io operation
+#define WRITE_CBUS_REG(a...)        WRITE_REG(CBUS,a)
+#define READ_CBUS_REG(a...)         READ_REG(CBUS,a)
+#define WRITE_CBUS_REG_BITS(a...)   WRITE_REG_BITS(CBUS,a)
+#define READ_CBUS_REG_BITS(a...)    READ_REG_BITS(CBUS,a)
+#define CLEAR_CBUS_REG_MASK(a...)   CLEAR_REG_MASK(CBUS,a)
+#define SET_CBUS_REG_MASK(a...)     SET_REG_MASK(CBUS,a)
+#endif
+#ifndef CONFIG_DISABLE_AXI_IO_FUNC
+///AXI BUS io operation
+#define WRITE_AXI_REG(a...)         WRITE_REG(AXI,a)
+#define READ_AXI_REG(a...)          READ_REG(AXI,a)
+#define WRITE_AXI_REG_BITS(a...)    WRITE_REG_BITS(AXI,a)
+#define READ_AXI_REG_BITS(a...)     READ_REG_BITS(AXI,a)
+#define CLEAR_AXI_REG_MASK(a...)    CLEAR_REG_MASK(AXI,a)
+#define SET_AXI_REG_MASK(a...)      SET_REG_MASK(AXI,a)
+#endif
+#ifndef CONFIG_DISABLE_AHB_IO_FUNC
+///AHB BUS io operation
+#define WRITE_AHB_REG(a...)         WRITE_REG(AHB,a)
+#define READ_AHB_REG(a...)          READ_REG(AHB,a)
+#define WRITE_AHB_REG_BITS(a...)    WRITE_REG_BITS(AHB,a)
+#define READ_AHB_REG_BITS(a...)     READ_REG_BITS(AHB,a)
+#define CLEAR_AHB_REG_MASK(a...)    CLEAR_REG_MASK(AHB,a)
+#define SET_AHB_REG_MASK(a...)      SET_REG_MASK(AHB,a)
+#endif
+#ifndef CONFIG_DISABLE_APB_IO_FUNC
+///APB BUS io operation
+#define WRITE_APB_REG(a...)         WRITE_REG(APB,a)
+#define READ_APB_REG(a...)          READ_REG(APB,a)
+#define WRITE_APB_REG_BITS(a...)    WRITE_REG_BITS(APB,a)
+#define READ_APB_REG_BITS(a...)     READ_REG_BITS(APB,a)
+#define CLEAR_APB_REG_MASK(a...)    CLEAR_REG_MASK(APB,a)
+#define SET_APB_REG_MASK(a...)      SET_REG_MASK(APB,a)
+#endif
+#ifndef CONFIG_DISABLE_AOBUS_IO_FUNC
+///AOBUS BUS io operation
+#define WRITE_AOBUS_REG(a...)         WRITE_REG(AOBUS,a)
+#define READ_AOBUS_REG(a...)          READ_REG(AOBUS,a)
+#define WRITE_AOBUS_REG_BITS(a...)    WRITE_REG_BITS(AOBUS,a)
+#define READ_AOBUS_REG_BITS(a...)     READ_REG_BITS(AOBUS,a)
+#define CLEAR_AOBUS_REG_MASK(a...)    CLEAR_REG_MASK(AOBUS,a)
+#define SET_AOBUS_REG_MASK(a...)      SET_REG_MASK(AOBUS,a)
+#endif
+#ifndef CONFIG_DISABLE_MPEG_IO_FUNC
+///MPEG BUS io operation
+#define WRITE_MPEG_REG      WRITE_CBUS_REG
+#define READ_MPEG_REG       READ_CBUS_REG
+#define WRITE_MPEG_REG_BITS WRITE_CBUS_REG_BITS
+#define READ_MPEG_REG_BITS  READ_CBUS_REG_BITS
+#define CLEAR_MPEG_REG_MASK CLEAR_CBUS_REG_MASK
+#define SET_MPEG_REG_MASK   SET_CBUS_REG_MASK
+#endif
+
+
+#endif
+
+
+
+#endif //__MACH_MESSON3_REGS_H
diff --git a/arch/arm/mach-meson6tv/include/mach/bt656.h b/arch/arm/mach-meson6tv/include/mach/bt656.h
new file mode 100755
index 000000000000..547a2786673f
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/bt656.h
@@ -0,0 +1,65 @@
+/*
+ * arch/arm/mach-meson6tvd/include/mach/bt656.h
+ *
+ * Copyright (C) 2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __MACH_MESON_BT656_REGS_H
+#define __MACH_MESON_BT656_REGS_H
+
+//#define BT_CTRL 0x2240 	///../ucode/register.h
+#define BT_SYSCLOCK_RESET		30	//Sync fifo soft  reset_n at system clock domain.     Level reset. 0 = reset. 1 : normal mode.
+#define BT_656CLOCK_RESET		29	//Sync fifo soft reset_n at bt656 clock domain.   Level reset.  0 = reset.  1 : normal mode.
+#define BT_VSYNC_SEL			25	//25:26 VDIN VS selection.   00 :  SOF.  01: EOF.   10: vbi start point.  11 : vbi end point.
+#define BT_HSYNC_SEL			23	//24:23 VDIN HS selection.  00 : EAV.  01: SAV.    10:  EOL.  11: SOL
+#define BT_CAMERA_MODE			22	// Camera_mode
+#define BT_CLOCK_ENABLE			7	// 1: enable bt656 clock. 0: disable bt656 clock.
+
+//#define BT_PORT_CTRL 0x2249 	///../ucode/register.h
+#define BT_VSYNC_MODE			23	//1: use  vsync  as the VBI start point. 0: use the regular vref.
+#define BT_HSYNC_MODE			22	//1: use hsync as the active video start point.  0. Use regular sav and eav.
+#define BT_SOFT_RESET			31	// Soft reset
+#define BT_JPEG_START			30
+#define BT_JPEG_IGNORE_BYTES		18	//20:18
+#define BT_JPEG_IGNORE_LAST		17
+#define BT_UPDATE_ST_SEL		16
+#define BT_COLOR_REPEAT			15
+#define BT_VIDEO_MODE			13	// 14:13
+#define BT_AUTO_FMT			12
+#define BT_PROG_MODE			11
+#define BT_JPEG_MODE			10
+#define BT_XCLK27_EN_BIT		9	// 1 : xclk27 is input.     0 : xclk27 is output.
+#define BT_FID_EN_BIT			8	// 1 : enable use FID port.
+#define BT_CLK27_SEL_BIT		7	// 1 : external xclk27      0 : internal clk27.
+#define BT_CLK27_PHASE_BIT		6	// 1 : no inverted          0 : inverted.
+#define BT_ACE_MODE_BIT			5	// 1 : auto cover error by hardware.
+#define BT_SLICE_MODE_BIT		4	// 1 : no ancillay flag     0 : with ancillay flag.
+#define BT_FMT_MODE_BIT			3	// 1 : ntsc                 0 : pal.
+#define BT_REF_MODE_BIT			2	// 1 : from bit stream.     0 : from ports.
+#define BT_MODE_BIT			1	// 1 : BT656 model          0 : SAA7118 mode.
+#define BT_EN_BIT			0	// 1 : enable.
+#define BT_VSYNC_PHASE			0
+#define BT_HSYNC_PHASE			1
+#define BT_VSYNC_PULSE			2
+#define BT_HSYNC_PULSE			3
+#define BT_FID_PHASE			4
+#define BT_FID_HSVS			5
+#define BT_IDQ_EN			6
+#define BT_IDQ_PHASE			7
+#define BT_D8B				8
+#define BT_10BTO8B			9
+#define BT_FID_DELAY			10	//12:10
+#define BT_VSYNC_DELAY			13	//
+#define BT_HSYNC_DELAY			16
+
+
+#endif // __MACH_MESON_BT656_REGS_H
diff --git a/arch/arm/mach-meson6tv/include/mach/c_stb_define.h b/arch/arm/mach-meson6tv/include/mach/c_stb_define.h
new file mode 100755
index 000000000000..f8bb3131b1db
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/c_stb_define.h
@@ -0,0 +1,815 @@
+// ----------------------------------------------------------------------
+// This file is automatically generated from the script:
+//
+// ./create_stb_define_for_C_code.pl
+//
+// and was applied to the file
+//
+// ./stb_define.h
+//
+// DO NOT EDIT!!!!!
+// ----------------------------------------------------------------------
+//
+#ifdef C_STB_DEFINE_H
+#else
+#define C_STB_DEFINE_H
+
+//========================================================================
+//  STB Registers Start
+//========================================================================
+// -----------------------------------------------
+#define STB_CBUS_BASE           0x1600
+// -----------------------------------------------
+// There are two instantiations under one CBUS slave.  Each CBUS slave can support
+// 256 registers.  Each demux is allocated 128 registers so set the offset in
+// the middle
+// Copy this define but don't add a base address
+#define DEMUX_1_OFFSET         0x00
+#define DEMUX_2_OFFSET         0x50
+#define DEMUX_3_OFFSET         0xa0
+//========================================================================
+//  STB TOP Registers                   (8'hf0 - 8'hf7)
+//========================================================================
+// bit 22 -- invert fec_error for S2P1
+// bit 21 -- invert fec_data for S2P1
+// bit 20 -- invert fec_sync for S2P1
+// bit 19 -- invert fec_valid for S2P1
+// bit 18 -- invert fec_clk for S2P1
+// bit 17:16 -- fec_s_sel for S2P1  00 - select TS0, 01 -- select TS1, 10 -- select TS2, 11 - reserved
+// Bit 15 -- enable_des_pl_clk
+// Bit 14:13 -- reserved
+// Bit 12:10 -- ts_out_select, 0-TS0, 1-TS1, 2-TS2, 3,4-Reserved, 5-S2P1, 6-S2P0, 7-File
+// bit 9:8 -- des_i_sel 00 -- select demux0 as des input, 01 -- select_demux1, 10 -- select_demux2, 11 - reserved
+// bit 7 -- enable_des_pl
+// bit 6 -- invert fec_error for S2P0
+// bit 5 -- invert fec_data for S2P0
+// bit 4 -- invert fec_sync for S2P0
+// bit 3 -- invert fec_valid for S2P0
+// bit 2 -- invert fec_clk for S2P0
+// bit 1:0 -- fec_s_sel for S2P0  00 - select TS0, 01 -- select TS1, 10 -- select TS2, 11 - reserved
+//#define STB_TOP_CONFIG          (STB_CBUS_BASE + 0xf0) // 0x16f0
+/*----------- bit define -----------*/
+#define INVERT_S2P1_FEC_ERROR       22
+#define INVERT_S2P1_FEC_DATA        21
+#define INVERT_S2P1_FEC_SYNC        20
+#define INVERT_S2P1_FEC_VALID       19
+#define INVERT_S2P1_FEC_CLK         18
+#define S2P1_FEC_SERIAL_SEL         16
+#define ENABLE_DES_PL_CLK           15
+#define TS_OUTPUT_SOURCE            10
+#define DES_INPUT_SEL               8
+#define ENABLE_DES_PL               7
+#define INVERT_S2P0_FEC_ERROR       6
+#define INVERT_S2P0_FEC_DATA        5
+#define INVERT_S2P0_FEC_SYNC        4
+#define INVERT_S2P0_FEC_VALID       3
+#define INVERT_S2P0_FEC_CLK         2
+#define S2P0_FEC_SERIAL_SEL         0
+
+// 15:8 -- TS_package_length_sub_1 (default : 187)
+//  7:0 -- fec_sync_byte (default : 0x47)
+//#define TS_TOP_CONFIG           (STB_CBUS_BASE + 0xf1) // 0x16f1
+/*----------- bit define -----------*/
+#define TS_PACKAGE_LENGTH_SUB_1     8
+#define FEC_DEFAULT_SYNC_BYTE       0
+
+// Bit 23:16 -- file_m2ts_skip_bytes
+// Bit 15:8 -- des_out_dly
+// Bit 7:6 -- transport_scrambling_control_odd // should be 3
+// Bit 5 -- ts_hiu_enable
+// Bit 4:0 -- fec_clk_div
+//#define TS_FILE_CONFIG          (STB_CBUS_BASE + 0xf2) // 0x16f2
+/*----------- bit define -----------*/
+#define FILE_M2TS_SKIP_BYTES        16
+#define DES_OUT_DLY                 8
+#define TRANSPORT_SCRAMBLING_CONTROL_ODD 6
+#define TS_HIU_ENABLE               5
+#define FEC_FILE_CLK_DIV            0
+
+// Bit 13:8 -- des ts pl state   -- Read Only
+// Bit 3:0 PID index to 8 PID to get key-set
+// auto increse after TS_PL_PID_DATA read/write
+//#define TS_PL_PID_INDEX         (STB_CBUS_BASE + 0xf3) // 0x16f3
+/*----------- bit define -----------*/
+#define DES_TS_PL_STATE             8
+
+// Bit 13 -- PID match disble
+// Bit 12:0 -- PID
+//#define TS_PL_PID_DATA          (STB_CBUS_BASE + 0xf4) // 0x16f4
+/*----------- bit define -----------*/
+#define PID_MATCH_DISABLE_HIGH       29
+#define PID_MATCH_HIGH               16
+#define PID_MATCH_DISABLE_LOW        13
+#define PID_MATCH_LOW                0
+
+//#define COMM_DESC_KEY0          (STB_CBUS_BASE + 0xf5) // 0x16f5 // Common descrambler key (key bits[63:32])
+//#define COMM_DESC_KEY1          (STB_CBUS_BASE + 0xf6) // 0x16f6 // Common descrambler key (key bits[31:0])
+//#define COMM_DESC_KEY_RW        (STB_CBUS_BASE + 0xf7) // 0x16f7 // bits[3:0] point to the address to write the key {COMM_DESC_KEY1, COMM_DESC_KEY0}
+// Writing this register writes the key to RAM
+
+//========================================================================
+//  Multiple STB Registers                  (8'h00 - 8'h45)
+//========================================================================
+// STB registers are 8'h0x
+// Bit 15:0 -- version number : 0x0002  (v0.01)
+//#define STB_VERSION             (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x00)  // 0x1600 // read only
+//#define STB_VERSION_2           (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x00)  // 0x1650 // read only
+//#define STB_VERSION_3           (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x00)  // 0x16a0 // read only
+
+//#define STB_TEST_REG            (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x01)  // 0x1601
+//#define STB_TEST_REG_2          (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x01)  // 0x1651
+//#define STB_TEST_REG_3          (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x01)  // 0x16a1
+
+// Bit 15 -- fec_core_select 1 - select descramble output
+// Bit 14:12 -  fec_select 0-TS0, 1-TS1, 2-TS2, 3,4-Reserved, 5-S2P1, 6-S2P0, 7-File
+// Bit 11 -- FEC_CLK
+// Bit 10 -- SOP
+// Bit 9 -- D_VALID
+// Bit 8 -- D_FAIL
+// Bit 7:0 -- D_DATA 7:0
+//#define FEC_INPUT_CONTROL       (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x02)  // 0x1602
+//#define FEC_INPUT_CONTROL_2     (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x02)  // 0x1652
+//#define FEC_INPUT_CONTROL_3     (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x02)  // 0x16a2
+/*----------- bit define -----------*/
+#define FEC_CORE_SEL               15
+#define FEC_SEL                    12
+#define FEC_INPUT_FEC_CLK          11
+#define FEC_INPUT_SOP              10
+#define FEC_INPUT_D_VALID           9
+#define FEC_INPUT_D_FAIL            8
+
+//#define FEC_INPUT_DATA          (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x03)  // 0x1603 // read only
+//#define FEC_INPUT_DATA_2        (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x03)  // 0x1653 // read only
+//#define FEC_INPUT_DATA_3        (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x03)  // 0x16a3 // read only
+
+// bit 31 -- enable_free_clk_fec_data_valid
+// bit 30 -- enable_free_clk_stb_reg
+// bit 29:21 -- reserved
+// bit 20 (bit 4) -- Bypass use recoder path
+// bit 19 (bit 3) -- clear_PID_continuity_counter_valid
+// bit 18 (bit 2) -- Disable Splicing
+// bit 17 (bit 1) -- Insert PES_STRONG_SYNC in Audio PES
+// bit 16 (bit 0) -- Insert PES_STRONG_SYNC in Video PES
+// Bit 15 - do not trust section length
+// Bit 14 - om cmd push even zero
+// Bit 13 - reserved
+// Bit 12 - SUB, OTHER PES interrupt at beginning of PES
+// Bit 11 - discard_av_package -- for ts_recorder use only
+// Bit 10 - ts_recorder_select  0:after PID filter 1:before PID filter
+// Bit 9 - ts_recorder_enable
+// Bit 8 - (table_id == 0xff) means section_end
+// Bit 7 - do not send uncomplete section
+// Bit 6 - do not discard duplicate package
+// Bit 5 - search SOP when trasport_error_indicator
+// Bit 4 - stb demux enable
+// Bit 3 - do not reset state machine on SOP
+// Bit 2 - search SOP when error happened ( when ignore_fail_n_sop, will have this case)
+// Bit 1 - do not use SOP input ( check FEC sync byte instead )
+// Bit 0 - ignore fec_error bit when non sop ( check error on SOP only)
+//#define DEMUX_CONTROL           (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x04)  // 0x1604
+//#define DEMUX_CONTROL_2         (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x04)  // 0x1654
+//#define DEMUX_CONTROL_3         (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x04)  // 0x16a4
+/*----------- bit define -----------*/
+#define ENABLE_FREE_CLK_FEC_DATA_VALID          31
+#define ENABLE_FREE_CLK_STB_REG                 30
+#define BYPASS_USE_RECODER_PATH                 20
+#define CLEAR_PID_CONTINUITY_COUNTER_VALID      19
+#define DISABLE_SPLICING                        18
+#define INSERT_AUDIO_PES_STRONG_SYNC            17
+#define INSERT_VIDEO_PES_STRONG_SYNC            16
+#define SECTION_LENGTH_UNTRUSTY                 15
+#define OM_CMD_PUSH_EVEN_ZERO                   14
+#define OTHER_INT_AT_PES_BEGINING               12
+#define DISCARD_AV_PACKAGE                      11
+#define TS_RECORDER_SELECT                      10
+#define TS_RECORDER_ENABLE                      9
+#define SECTION_END_WITH_TABLE_ID               8
+#define SEND_COMPLETE_SECTION_ONLY              7
+#define KEEP_DUPLICATE_PACKAGE                  6
+#define SEACH_SOP_ON_TRANSPORT_ERROR            5
+#define STB_DEMUX_ENABLE                        4
+#define NO_RESET_ON_SOP                         3
+#define SEARCH_SOP_ON_ERROR                     2
+#define NOT_USE_OF_SOP_INPUT                    1
+#define IGNORE_NONSOP_FEC_ERROR                 0
+
+// bit 15:8 demux package length - 1 ( default : 187 )
+// bit 7:0 default is 0x47
+//#define FEC_SYNC_BYTE           (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x05)  // 0x1605
+//#define FEC_SYNC_BYTE_2         (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x05)  // 0x1655
+//#define FEC_SYNC_BYTE_3         (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x05)  // 0x16a5
+
+/******************************************************************************************************
+FM Memory Usage :
+0-15 (32 PID filter target) ---- 15:13-PID type 12:0-PID target or force data
+(force data : 1 will mask corespoding bit, 0 will disable this PID filter channel)
+advanced setting -- bit 7:0
+                    bit 7 -- PID bit 12:11 compare result force
+                    bit 6 -- PID bit 10:9 compare result force
+                    bit 5 -- PID bit 8:7 compare result force
+                    bit 4 -- PID bit 6:5 compare result force
+                    bit 3 -- PID bit 4:3 compare result force
+                    bit 2 -- PID bit 2 compare result force
+                    bit 1 -- PID bit 1 compare result force
+                    bit 0 -- PID bit 0 compare result force
+16-255(15x32 Section filter target)
+For first byte : Table_ID
+---- 15-Mask High 4-bits
+     14-Mask Low 4-bits
+     13-disable_PID_check
+     12:8-PIDindex
+     7:0-section target (always EQ)
+For rest of bytes :
+---- 15-Mask 14-EQ/NE 13-disable_PID_check 12:8-PIDindex 7:0-section target (or force data)
+advanced setting -- bit 7:0 force compare result
+******************************************************************************************************/
+/*----------- bit define -----------*/
+#define PID_TYPE                                13
+#define PID_TARGET                              0
+
+#define SECTION_FIRSTBYTE_MASKHIGH              15
+#define SECTION_FIRSTBYTE_MASKLOW               14
+#define SECTION_FIRSTBYTE_DISABLE_PID_CHECK     13
+#define SECTION_FIRSTBYTE_PID_INDEX             8
+#define SECTION_TARGET                          0
+
+#define SECTION_RESTBYTE_MASK                   15
+#define SECTION_RESTBYTE_MASK_EQ                14
+#define SECTION_RESTBYTE_DISABLE_PID_CHECK      13
+#define SECTION_RESTBYTE_PID_INDEX              8
+
+// bit 31:16 -- filter memory write data hi[31:16]
+// bit 15:0 -- filter memory write data low [15:0]
+//#define FM_WR_DATA              (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x06)  // 0x1606
+//#define FM_WR_DATA_2            (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x06)  // 0x1656
+//#define FM_WR_DATA_3            (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x06)  // 0x16a6
+/*----------- bit define -----------*/
+#define FM_WR_DATA_HI                           16
+
+// bit 31:24 -- advanced setting hi
+// bit 23:16 -- advanced setting low
+// bit 15 -- filter memory write data request
+// bit 7:0 -- filter memory write addr
+//#define FM_WR_ADDR              (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x07)  // 0x1607
+//#define FM_WR_ADDR_2            (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x07)  // 0x1657
+//#define FM_WR_ADDR_3            (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x07)  // 0x16a7
+/*----------- bit define -----------*/
+#define FM_ADVANCED_SETTING_HI                  24
+#define FM_ADVANCED_SETTING_LO                  16
+#define FM_WR_DATA_REQUEST                      15
+
+// bit 13:8 demux state  -- read only
+// bit 7:4 -- maxnum section filter compare address
+// bit 3:0 -- maxnum PID filter compare address
+//#define MAX_FM_COMP_ADDR        (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x08)  // 0x1608
+//#define MAX_FM_COMP_ADDR_2      (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x08)  // 0x1658
+//#define MAX_FM_COMP_ADDR_3      (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x08)  // 0x16a8
+/*----------- bit define -----------*/
+#define DEMUX_STATE                             8
+#define MAX_FM_SECTION_FILTER_COMP_ADDR         4
+
+// bit 15 - transport_error_indicator
+// bit 14 - payload_unit_start_indicator
+// bit 13 - transport_priority
+// bit 12:0 - PID
+//#define TS_HEAD_0               (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x09)  // 0x1609
+//#define TS_HEAD_0_2             (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x09)  // 0x1659
+//#define TS_HEAD_0_3             (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x09)  // 0x16a9
+/*----------- bit define -----------*/
+#define TRANSPORT_ERROR_INDICATOR               15
+#define PAYLOAD_UNIT_START_INDICATOR            14
+#define TRANSPORT_PRIORITY                      13
+
+// bit 7:6 transport_scrambling_control
+// bit 5:4 adaptation_field_control
+// bit 3:0 continuity_counter
+//#define TS_HEAD_1               (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x0a)  // 0x160a
+//#define TS_HEAD_1_2             (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x0a)  // 0x165a
+//#define TS_HEAD_1_3             (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x0a)  // 0x16aa
+/*----------- bit define -----------*/
+#define TRANSPORT_SCRAMBLING_CONTROL            6
+#define ADAPTATION_FIELD_CONTROL                4
+
+// bit 15:12 -- om_cmd_count (read only)
+// bit  11:9 -- overflow_count // bit  11:9 -- om_cmd_wr_ptr (read only)
+// bit   8:6 -- om_overwrite_count // bit   8:6 -- om_cmd_rd_ptr (read only)
+// bit   5:3 -- type_stb_om_w_rd (read only)
+// bit     2 -- unit_start_stb_om_w_rd (read only)
+// bit     1 -- om_cmd_overflow (read only)
+// bit     0 -- om_cmd_pending (read)
+// bit     0 -- om_cmd_read_finished (write)
+//#define OM_CMD_STATUS           (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x0b)  // 0x160b
+//#define OM_CMD_STATUS_2         (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x0b)  // 0x165b
+//#define OM_CMD_STATUS_3         (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x0b)  // 0x16ab
+/*----------- bit define -----------*/
+#define OM_CMD_COUNT                            12
+#define OM_OVERFLOW_COUNT                       9
+#define OM_OVERWRITE_COUNT                      6
+#define TYPE_STB_OM_W_RD                        3
+#define UNIT_START_STB_OM_W_RD                  2
+#define OM_CMD_OVERFLOW                         1
+
+// bit 15:9 -- count_stb_om_w_rd  (read only)
+// bit 8:0 -- start_stb_om_wa_rd (read only)
+//#define OM_CMD_DATA             (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x0c)  // 0x160c
+//#define OM_CMD_DATA_2           (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x0c)  // 0x165c
+//#define OM_CMD_DATA_3           (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x0c)  // 0x16ac
+/*----------- bit define -----------*/
+#define COUNT_STB_OM_W_RD                       9
+
+// bit 11:0 -- offset for section data
+//#define OM_CMD_DATA2            (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x0d)  // 0x160d
+//#define OM_CMD_DATA2_2          (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x0d)  // 0x165d
+//#define OM_CMD_DATA2_3          (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x0d)  // 0x16ad
+
+// bit 31:16 -- base address for section buffer group 0 (*0x400 to get real address)
+// bit 15:0 -- base address for section buffer group 1 (*0x400 to get real address)
+//#define SEC_BUFF_01_START       (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x0e)  // 0x160e
+//#define SEC_BUFF_01_START_2     (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x0e)  // 0x165e
+//#define SEC_BUFF_01_START_3     (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x0e)  // 0x16ae
+/*----------- bit define -----------*/
+#define SEC_BUFF_0_BASE_ADDR                    16
+
+// bit 31:16 -- base address for section buffer group 2 (*0x400 to get real address)
+// bit 15:0 -- base address for section buffer group 3 (*0x400 to get real address)
+//#define SEC_BUFF_23_START       (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x0f)  // 0x160f
+//#define SEC_BUFF_23_START_2     (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x0f)  // 0x165f
+//#define SEC_BUFF_23_START_3     (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x0f)  // 0x16af
+/*----------- bit define -----------*/
+#define SEC_BUFF_2_BASE_ADDR                    16
+
+// bit 15:12 -- section buffer size for group 3
+// bit 11:8 -- section buffer size for group 2
+// bit 7:4 -- section buffer size for group 1
+// bit 3:0 -- section buffer size for group 0 (bit used,  for example, 10 means 1K)
+//#define SEC_BUFF_SIZE           (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x10)  // 0x1610
+//#define SEC_BUFF_SIZE_2         (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x10)  // 0x1660
+//#define SEC_BUFF_SIZE_3         (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x10)  // 0x16b0
+/*----------- bit define -----------*/
+#define SEC_BUFF_3_SIZE                        12
+#define SEC_BUFF_2_SIZE                         8
+#define SEC_BUFF_1_SIZE                         4
+
+// section buffer busy status for buff 31:0 ( Read Only )
+//#define SEC_BUFF_BUSY           (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x11)  // 0x1611
+//#define SEC_BUFF_BUSY_2         (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x11)  // 0x1661
+//#define SEC_BUFF_BUSY_3         (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x11)  // 0x16b1
+
+// section buffer write status for buff 31:0 -- Read
+// clear buffer status ( buff READY and BUSY ) -- write
+//#define SEC_BUFF_READY          (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x12)  // 0x1612
+//#define SEC_BUFF_READY_2        (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x12)  // 0x1662
+//#define SEC_BUFF_READY_3        (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x12)  // 0x16b2
+
+// bit 15 -- section_reset_busy (Read Only)
+// bit 14 -- output_section_buffer_valid
+// bit 12:8 -- SEC_BUFFER_NUMBER for the INDEX buffer  Read_Only
+// bit 4:0 -- SEC_BUFFER_INDEX   RW
+//#define SEC_BUFF_NUMBER         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x13)  // 0x1613
+//#define SEC_BUFF_NUMBER_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x13)  // 0x1663
+//#define SEC_BUFF_NUMBER_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x13)  // 0x16b3
+/*----------- bit define -----------*/
+#define SECTION_RESET_BUSY                      15
+#define OUTPUT_SECTION_BUFFER_VALID             14
+#define INDEXED_SEC_BUFF_NUMBER                 8
+
+// bit 9:5 -- BYPASS PID number
+// bit 4:0 -- PCR PID number
+//#define ASSIGN_PID_NUMBER       (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x14)  // 0x1614
+//#define ASSIGN_PID_NUMBER_2     (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x14)  // 0x1664
+//#define ASSIGN_PID_NUMBER_3     (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x14)  // 0x16b4
+/*----------- bit define -----------*/
+#define BYPASS_PID_NUMBER                       5
+
+// bit 15:0 -- stream_id filter bit enable
+// bit 7:0 -- stream_id filter target
+//#define VIDEO_STREAM_ID         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x15)  // 0x1615
+//#define VIDEO_STREAM_ID_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x15)  // 0x1665
+//#define VIDEO_STREAM_ID_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x15)  // 0x16b5
+
+//#define AUDIO_STREAM_ID         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x16)  // 0x1616
+//#define AUDIO_STREAM_ID_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x16)  // 0x1666
+//#define AUDIO_STREAM_ID_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x16)  // 0x16b6
+
+//#define SUB_STREAM_ID           (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x17)  // 0x1617
+//#define SUB_STREAM_ID_2         (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x17)  // 0x1667
+//#define SUB_STREAM_ID_3         (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x17)  // 0x16b7
+
+//#define OTHER_STREAM_ID         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x18)  // 0x1618
+//#define OTHER_STREAM_ID_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x18)  // 0x1668
+//#define OTHER_STREAM_ID_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x18)  // 0x16b8
+
+// bit 12 -- PCR_EN
+// bit 11:0 -- PCR90K_DIV
+//#define PCR90K_CTL              (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x19)  // 0x1619
+//#define PCR90K_CTL_2            (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x19)  // 0x1669
+//#define PCR90K_CTL_3            (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x19)  // 0x16b9
+/*----------- bit define -----------*/
+#define PCR_EN                     12
+
+// bit 15:0 -- PCR[31:0] R/W
+//#define PCR_DEMUX               (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x1a)  // 0x161a
+//#define PCR_DEMUX_2             (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x1a)  // 0x166a
+//#define PCR_DEMUX_3             (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x1a)  // 0x16ba
+
+// bit 15:0 -- VPTS[31:0] R/W
+//#define VIDEO_PTS_DEMUX         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x1b)  // 0x161b
+//#define VIDEO_PTS_DEMUX_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x1b)  // 0x166b
+//#define VIDEO_PTS_DEMUX_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x1b)  // 0x16bb
+
+// bit 15:0 -- VDTS[31:0] R/W
+//#define VIDEO_DTS_DEMUX         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x1c)  // 0x161c
+//#define VIDEO_DTS_DEMUX_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x1c)  // 0x166c
+//#define VIDEO_DTS_DEMUX_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x1c)  // 0x16bc
+
+// bit 15:0 -- APTS[31:0] R/W
+//#define AUDIO_PTS_DEMUX         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x1d)  // 0x161d
+//#define AUDIO_PTS_DEMUX_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x1d)  // 0x166d
+//#define AUDIO_PTS_DEMUX_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x1d)  // 0x16bd
+
+// bit 15:0 -- SPTS[31:0] R/W
+//#define SUB_PTS_DEMUX           (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x1e)  // 0x161e
+//#define SUB_PTS_DEMUX_2         (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x1e)  // 0x166e
+//#define SUB_PTS_DEMUX_3         (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x1e)  // 0x16be
+
+// read -- status, write 1 clear status
+// bit 15 -- SUB_PTS[32]
+// bit 14 -- AUDIO_PTS[32]
+// bit 13 -- VIDEO_DTS[32]
+// bit 12 -- VIDEO_PTS[32]
+// bit 3 -- sub_pts_ready
+// bit 2 -- audio_pts_ready
+// bit 1 -- video_dts_ready
+// bit 0 -- video_pts_ready
+//#define STB_PTS_DTS_STATUS      (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x1f)  // 0x161f
+//#define STB_PTS_DTS_STATUS_2    (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x1f)  // 0x166f
+//#define STB_PTS_DTS_STATUS_3    (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x1f)  // 0x16bf
+/*----------- bit define -----------*/
+#define SUB_PTS_BIT32              15
+#define AUDIO_PTS_BIT32            14
+#define VIDEO_DTS_BIT32            13
+#define VIDEO_PTS_BIT32            12
+#define SUB_PTS_READY              3
+#define AUDIO_PTS_READY            2
+#define VIDEO_DTS_READY            1
+#define VIDEO_PTS_READY            0
+
+// bit 3:0 --
+//  0 -- adaptation_field_length[7:0], adaption_field_byte_1[7:0]
+//  1 -- stream_id[7:0], pes_header_bytes_left[7:0]
+//  2 -- pes_package_bytes_left[15:0]
+//  3 -- pes_ctr_byte[7:0], pes_flag_byte[7:0]
+//#define STB_DEBUG_INDEX         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x20)  // 0x1620
+//#define STB_DEBUG_INDEX_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x20)  // 0x1670
+//#define STB_DEBUG_INDEX_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x20)  // 0x16c0
+
+// read only
+//#define STB_DEBUG_DATA_OUT      (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x21)  // 0x1621
+//#define STB_DEBUG_DATA_OUT_2    (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x21)  // 0x1671
+//#define STB_DEBUG_DATA_OUT_3    (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x21)  // 0x16c1
+
+// default : 0x807f
+// bit 15:9  -- MAX OM DMA COUNT  (default: 0x40)
+// bit 8:0   -- LAST ADDR OF OM ADDR (default: 127)
+#define STB_OM_CTL              (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x22)  // 0x1622
+#define STB_OM_CTL_2            (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x22)  // 0x1672
+#define STB_OM_CTL_3            (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x22)  // 0x16c2
+/*----------- bit define -----------*/
+#define MAX_OM_DMA_COUNT           9
+#define LAST_OM_ADDR               0
+
+// 15:0  WRITE 1 CLEAR to clear interrupt source
+// 9 -- splicing_point
+// 8 -- other_PES_int
+// 7 -- sub_PES_int
+// 6 -- discontinuity
+// 5 -- duplicated_pack_found
+// 4 -- New PDTS ready
+// 3 -- om_cmd_buffer ready for access
+// 2 -- section buffer ready
+// 1 -- transport_error_indicator
+// 0 -- TS ERROR PIN
+//#define STB_INT_STATUS          (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x23)  // 0x1623
+//#define STB_INT_STATUS_2        (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x23)  // 0x1673
+//#define STB_INT_STATUS_3        (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x23)  // 0x16c3
+/*----------- bit define -----------*/
+#define PCR_READY                  11
+#define AUDIO_SPLICING_POINT       10
+#define VIDEO_SPLICING_POINT       9
+#define OTHER_PES_READY            8
+#define SUB_PES_READY              7
+#define DIS_CONTINUITY_PACKET      6
+#define DUPLICATED_PACKET          5
+#define NEW_PDTS_READY             4
+#define OM_CMD_READ_PENDING        3
+#define SECTION_BUFFER_READY       2
+#define TS_ERROR_PACKAGE           1
+#define TS_ERROR_PIN               0
+
+// When Bit 31 - 1 write will indicate all type use sepertate endian (Write Only)
+// When Bit 31 - 0 write will indicate all type else use Bit 8:6
+// Bit 23:21 - demux om write endian control for OTHER_PES_PACKET
+// Bit 20:18 - demux om write endian control for SCR_ONLY_PACKET
+// Bit 17:15 - demux om write endian control for SUB_PACKET
+// Bit 14:12 - demux om write endian control for AUDIO_PACKET
+// Bit 11:9  - demux om write endian control for VIDEO_PACKET
+// Bit 8:6 - demux om write endian control for else
+// Bit 5:3 - demux om write endian control for bypass
+// Bit 2:0 - demux om write endian control for section
+//#define DEMUX_ENDIAN            (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x24)  // 0x1624
+//#define DEMUX_ENDIAN_2          (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x24)  // 0x1674
+//#define DEMUX_ENDIAN_3          (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x24)  // 0x16c4
+/*----------- bit define -----------*/
+#define SEPERATE_ENDIAN            31
+#define OTHER_PES_ENDIAN           21
+#define SCR_ENDIAN                 18
+#define SUB_ENDIAN                 15
+#define AUDIO_ENDIAN               12
+#define VIDEO_ENDIAN               9
+#define OTHER_ENDIAN               6
+#define BYPASS_ENDIAN              3
+#define SECTION_ENDIAN             0
+
+// Bit 7 -- use hi_bsf interface
+//#define TS_HIU_CTL              (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x25)  // 0x1625
+//#define TS_HIU_CTL_2            (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x25)  // 0x1675
+//#define TS_HIU_CTL_3            (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x25)  // 0x16c5
+/*----------- bit define -----------*/
+#define LAST_BURST_THRESHOLD       8
+#define USE_HI_BSF_INTERFACE       7
+
+// bit 15:0 -- base address for section buffer start (*0x10000 to get real base)
+//#define SEC_BUFF_BASE           (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x26)  // 0x1626
+//#define SEC_BUFF_BASE_2         (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x26)  // 0x1676
+//#define SEC_BUFF_BASE_3         (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x26)  // 0x16c6
+
+// bit 11 -- mask bit for OTHER_PES_AHB_DMA_EN
+// bit 10 -- mask bit for SUB_AHB_DMA_EN
+// bit 9 -- mask bit for BYPASS_AHB_DMA_EN
+// bit 8 -- mask bit for SECTION_AHB_DMA_EN
+// bit 7 -- mask bit for recoder stream
+// bit 6:0 -- mask bit for each type
+//#define DEMUX_MEM_REQ_EN        (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x27)  // 0x1627
+//#define DEMUX_MEM_REQ_EN_2      (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x27)  // 0x1677
+//#define DEMUX_MEM_REQ_EN_3      (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x27)  // 0x16c7
+/*----------- bit define -----------*/
+#define OTHER_PES_AHB_DMA_EN       11
+#define SUB_AHB_DMA_EN             10
+#define BYPASS_AHB_DMA_EN          9
+#define SECTION_AHB_DMA_EN         8
+#define RECORDER_STREAM            7
+#define OTHER_PES_PACKET           6
+#define SCR_ONLY_PACKET            5
+#define BYPASS_PACKET              4
+#define SECTION_PACKET             3
+#define SUB_PACKET                 2
+#define AUDIO_PACKET               1
+#define VIDEO_PACKET               0
+
+// bit 31:0 -- vb_wr_ptr for video PDTS
+//#define VIDEO_PDTS_WR_PTR       (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x28)  // 0x1628
+//#define VIDEO_PDTS_WR_PTR_2     (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x28)  // 0x1678
+//#define VIDEO_PDTS_WR_PTR_3     (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x28)  // 0x16c8
+
+// bit 31:0 -- ab_wr_ptr for audio PDTS
+//#define AUDIO_PDTS_WR_PTR       (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x29)  // 0x1629
+//#define AUDIO_PDTS_WR_PTR_2     (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x29)  // 0x1679
+//#define AUDIO_PDTS_WR_PTR_3     (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x29)  // 0x16c9
+
+// bit 20:0 -- SB_WRITE_PTR (sb_wr_ptr << 3 == byte write position)
+//#define SUB_WR_PTR              (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x2a)  // 0x162a
+//#define SUB_WR_PTR_2            (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x2a)  // 0x167a
+//#define SUB_WR_PTR_3            (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x2a)  // 0x16ca
+
+// bit 19:0 -- SB_START (sb_start << 12 == byte address);
+//#define SB_START                (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x2b)  // 0x162b
+//#define SB_START_2              (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x2b)  // 0x167b
+//#define SB_START_3              (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x2b)  // 0x16cb
+
+// bit 20:0 -- SB_SIZE (sb_size << 3 == byte size, 16M maximun)
+//#define SB_LAST_ADDR            (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x2c)  // 0x162c
+//#define SB_LAST_ADDR_2          (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x2c)  // 0x167c
+//#define SB_LAST_ADDR_3          (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x2c)  // 0x16cc
+
+// bit 31:0 -- sb_wr_ptr for sub PES
+//#define SB_PES_WRITE_PTR        (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x2d)  // 0x162d
+//#define SB_PES_WRITE_PTR_2      (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x2d)  // 0x167d
+//#define SB_PES_WRITE_PTR_3      (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x2d)  // 0x16cd
+
+// bit 31:16 -- ob_wr_ptr for other PES
+// bit 20:0 -- OB_WRITE_PTR (ob_wr_ptr << 3 == byte write position)
+//#define OTHER_WR_PTR            (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x2e)  // 0x162e
+//#define OTHER_WR_PTR_2          (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x2e)  // 0x167e
+//#define OTHER_WR_PTR_3          (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x2e)  // 0x16ce
+
+// bit 19:0 -- OB_START (ob_start << 12 == byte address);
+//#define OB_START                (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x2f)  // 0x162f
+//#define OB_START_2              (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x2f)  // 0x167f
+//#define OB_START_3              (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x2f)  // 0x16cf
+
+// bit 20:0 -- OB_SIZE (ob_size << 3 == byte size, 16M maximun)
+//#define OB_LAST_ADDR            (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x30)  // 0x1630
+//#define OB_LAST_ADDR_2          (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x30)  // 0x1680
+//#define OB_LAST_ADDR_3          (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x30)  // 0x16d0
+
+// bit 31:0 -- ob_wr_ptr for sub PES
+//#define OB_PES_WRITE_PTR        (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x31)  // 0x1631
+//#define OB_PES_WRITE_PTR_2      (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x31)  // 0x1681
+//#define OB_PES_WRITE_PTR_3      (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x31)  // 0x16d1
+
+// 15:0  DEMUX interrupt MASK
+// 11 -- PCR_READY
+// 10 -- audio_splicing_point
+// 9 -- video_splicing_point
+// 8 -- other_PES_int
+// 7 -- sub_PES_int
+// 6 -- discontinuity
+// 5 -- duplicated_pack_found
+// 4 -- New PDTS ready
+// 3 -- om_cmd_buffer ready for access
+// 2 -- section buffer ready
+// 1 -- transport_error_indicator
+// 0 -- TS ERROR PIN
+//#define STB_INT_MASK            (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x32)  // 0x1632
+//#define STB_INT_MASK_2          (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x32)  // 0x1682
+//#define STB_INT_MASK_3          (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x32)  // 0x16d2
+
+// 31:16 VIDEO PID filter data
+//15 -- splicing VIDEO PID change enable
+//14:10 -- VIDEO PID FILTER ADDRESS
+// 9 -- PES splicing active (Read Only)
+// 8 -- splicing active (Read Only)
+// 7:0  splicing countdown (Read Only)
+//#define VIDEO_SPLICING_CTL      (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x33)  // 0x1633
+//#define VIDEO_SPLICING_CTL_2    (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x33)  // 0x1683
+//#define VIDEO_SPLICING_CTL_3    (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x33)  // 0x16d3
+/*----------- bit define -----------*/
+#define VIDEO_PID_FILTER_DATA      16
+#define VIDEO_SPLICING_PID_CHANGE_ENABLE       15
+#define VIDEO_PID_FILTER_ADDRESS   10
+#define VIDEO_PES_SPLICING_ACTIVE  9
+#define VIDEO_SPLICING_ACTIVE      8
+
+
+// 31:16 AUDIO PID filter data
+//15 -- splicing AUDIO PID change enable
+//14:10 -- AUDIO PID FILTER ADDRESS
+// 9 -- PES splicing active (Read Only)
+// 8 -- splicing active (Read Only)
+// 7:0  splicing countdown (Read Only)
+//#define AUDIO_SPLICING_CTL      (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x34)  // 0x1634
+//#define AUDIO_SPLICING_CTL_2    (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x34)  // 0x1684
+//#define AUDIO_SPLICING_CTL_3    (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x34)  // 0x16d4
+/*----------- bit define -----------*/
+#define AUDIO_PID_FILTER_DATA      16
+#define AUDIO_SPLICING_PID_CHANGE_ENABLE       15
+#define AUDIO_PID_FILTER_ADDRESS   10
+#define AUDIO_PES_SPLICING_ACTIVE  9
+#define AUDIO_SPLICING_ACTIVE      8
+
+// 23:16 M2TS_SKIP_BYTES
+// 15:8 LAST TS PACKAGE BYTE COUNT (Read Only)
+// 7:0  PACKAGE BYTE COUNT (Read Only)
+//#define TS_PACKAGE_BYTE_COUNT   (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x35)  // 0x1635
+//#define TS_PACKAGE_BYTE_COUNT_2 (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x35)  // 0x1685
+//#define TS_PACKAGE_BYTE_COUNT_3 (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x35)  // 0x16d5
+/*----------- bit define -----------*/
+#define M2TS_SKIP_BYTES            16
+#define LAST_TS_PACKAGE_BYTE_COUNT 8
+
+// 15:0 2 bytes strong sync add to PES
+//#define PES_STRONG_SYNC         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x36)  // 0x1636
+//#define PES_STRONG_SYNC_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x36)  // 0x1686
+//#define PES_STRONG_SYNC_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x36)  // 0x16d6
+
+// bit 15 -- stb_om_ren
+// bit 14:11 -- reserved
+// bit  10:0 -- OM_DATA_RD_ADDR
+//#define OM_DATA_RD_ADDR         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x37)  // 0x1637
+//#define OM_DATA_RD_ADDR_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x37)  // 0x1687
+//#define OM_DATA_RD_ADDR_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x37)  // 0x16d7
+/*----------- bit define -----------*/
+#define STB_OM_REN                 15
+
+// bit 15:0 -- OM_DATA_RD
+//#define OM_DATA_RD              (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x38)  // 0x1638
+//#define OM_DATA_RD_2            (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x38)  // 0x1688
+//#define OM_DATA_RD_3            (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x38)  // 0x16d8
+
+// AUTO STOP SETTING for 32 channels
+// 4-bits per channel
+// when write
+// bit 3 -- set section active
+// bit 2:0 -- auto stop after count (0 means never stop)
+// when read
+// bit 3 -- current active status (1 - active, 0 - stopped )
+// bit 2:0 -- count down to auto stop
+// section 31:24
+//#define SECTION_AUTO_STOP_3     (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x39)  // 0x1639
+//#define SECTION_AUTO_STOP_3_2   (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x39)  // 0x1689
+//#define SECTION_AUTO_STOP_3_3   (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x39)  // 0x16d9
+// section 23:16
+//#define SECTION_AUTO_STOP_2     (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x3a)  // 0x163a
+//#define SECTION_AUTO_STOP_2_2   (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x3a)  // 0x168a
+//#define SECTION_AUTO_STOP_2_3   (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x3a)  // 0x16da
+// section 15:8
+//#define SECTION_AUTO_STOP_1     (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x3b)  // 0x163b
+//#define SECTION_AUTO_STOP_1_2   (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x3b)  // 0x168b
+//#define SECTION_AUTO_STOP_1_3   (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x3b)  // 0x16db
+// section 7:0
+//#define SECTION_AUTO_STOP_0     (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x3c)  // 0x163c
+//#define SECTION_AUTO_STOP_0_2   (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x3c)  // 0x168c
+//#define SECTION_AUTO_STOP_0_3   (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x3c)  // 0x16dc
+
+// bit 31:0 reset channel status - each bit reset each channel
+// read -- 32 channel status
+//#define DEMUX_CHANNEL_RESET     (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x3d)  // 0x163d
+//#define DEMUX_CHANNEL_RESET_2   (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x3d)  // 0x168d
+//#define DEMUX_CHANNEL_RESET_3   (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x3d)  // 0x16dd
+
+//#define DEMUX_SCRAMBLING_STATE     (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x3e)  // 0x163e
+//#define DEMUX_SCRAMBLING_STATE_2   (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x3e)  // 0x168e
+//#define DEMUX_SCRAMBLING_STATE_3   (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x3e)  // 0x16de
+
+//#define DEMUX_CHANNEL_ACTIVITY     (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x3f)  // 0x163f
+//#define DEMUX_CHANNEL_ACTIVITY_2   (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x3f)  // 0x168f
+//#define DEMUX_CHANNEL_ACTIVITY_3   (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x3f)  // 0x16df
+
+// bit 4 -- video_stamp_use_dts
+// bit 3 -- audio_stamp_sync_1_en
+// bit 2 -- audio_stamp_insert_en
+// bit 1 -- video_stamp_sync_1_en
+// bit 0 -- video_stamp_insert_en
+//#define DEMUX_STAMP_CTL         (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x40)  // 0x1640
+//#define DEMUX_STAMP_CTL_2       (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x40)  // 0x1690
+//#define DEMUX_STAMP_CTL_3       (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x40)  // 0x16e0
+
+//#define DEMUX_VIDEO_STAMP_SYNC_0   (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x41)  // 0x1641
+//#define DEMUX_VIDEO_STAMP_SYNC_0_2 (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x41)  // 0x1691
+//#define DEMUX_VIDEO_STAMP_SYNC_0_3 (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x41)  // 0x16e1
+
+//#define DEMUX_VIDEO_STAMP_SYNC_1   (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x42)  // 0x1642
+//#define DEMUX_VIDEO_STAMP_SYNC_1_2 (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x42)  // 0x1692
+//#define DEMUX_VIDEO_STAMP_SYNC_1_3 (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x42)  // 0x16e2
+
+//#define DEMUX_AUDIO_STAMP_SYNC_0   (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x43)  // 0x1643
+//#define DEMUX_AUDIO_STAMP_SYNC_0_2 (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x43)  // 0x1693
+//#define DEMUX_AUDIO_STAMP_SYNC_0_3 (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x43)  // 0x16e3
+
+//#define DEMUX_AUDIO_STAMP_SYNC_1   (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x44)  // 0x1644
+//#define DEMUX_AUDIO_STAMP_SYNC_1_2 (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x44)  // 0x1694
+//#define DEMUX_AUDIO_STAMP_SYNC_1_3 (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x44)  // 0x16e4
+
+// Write : Bit[4:0] secter filter number for reset
+// Read  : select according to output_section_buffer_valid :
+//         per bit per section buffer valid status
+//         or section_buffer_ignore
+//#define DEMUX_SECTION_RESET     (STB_CBUS_BASE + DEMUX_1_OFFSET + 0x45)  // 0x1645
+//#define DEMUX_SECTION_RESET_2   (STB_CBUS_BASE + DEMUX_2_OFFSET + 0x45)  // 0x1695
+//#define DEMUX_SECTION_RESET_3   (STB_CBUS_BASE + DEMUX_3_OFFSET + 0x45)  // 0x16e5
+
+//========================================================================
+//  STB Registers End
+//========================================================================
+// ----------------------------
+// ASYNC FIFO (4)
+// ----------------------------
+//#define ASYNC_FIFO_REG0                            0x2310
+//#define ASYNC_FIFO_REG1                            0x2311
+    #define ASYNC_FIFO_FLUSH_STATUS     31
+    #define ASYNC_FIFO_ERR              30
+    #define ASYNC_FIFO_FIFO_EMPTY       29
+    #define ASYNC_FIFO_TO_HIU           24
+    #define ASYNC_FIFO_FLUSH            23
+    #define ASYNC_FIFO_RESET            22
+    #define ASYNC_FIFO_WRAP_EN          21
+    #define ASYNC_FIFO_FLUSH_EN         20
+    #define ASYNC_FIFO_RESIDUAL_MSB     19
+    #define ASYNC_FIFO_RESIDUAL_LSB     15
+    #define ASYNC_FIFO_FLUSH_CNT_MSB    14
+    #define ASYNC_FIFO_FLUSH_CNT_LSB    0
+//#define ASYNC_FIFO_REG2                            0x2312
+    #define ASYNC_FIFO_FIFO_FULL        26
+    #define ASYNC_FIFO_FILL_STATUS      25
+    #define ASYNC_FIFO_SOURCE_MSB       24
+    #define ASYNC_FIFO_SOURCE_LSB       23
+    #define ASYNC_FIFO_ENDIAN_MSB       22
+    #define ASYNC_FIFO_ENDIAN_LSB       21
+    #define ASYNC_FIFO_FILL_EN          20
+    #define ASYNC_FIFO_FILL_CNT_MSB     19
+    #define ASYNC_FIFO_FILL_CNT_LSB     0
+//#define ASYNC_FIFO_REG3                            0x2313
+    #define ASYNC_FLUSH_SIZE_IRQ_MSB    15
+    #define ASYNC_FLUSH_SIZE_IRQ_LSB    0
+// ----------------------------
+// ASYNC FIFO (4)
+// ----------------------------
+//#define ASYNC_FIFO2_REG0                           0x2314
+//#define ASYNC_FIFO2_REG1                           0x2315
+//#define ASYNC_FIFO2_REG2                           0x2316
+//#define ASYNC_FIFO2_REG3                           0x2317
+
+#define RESET_DEMUXSTB      (1<<1)
+
+#endif // C_STB_DEFINE_H
+
diff --git a/arch/arm/mach-meson6tv/include/mach/canvas.h b/arch/arm/mach-meson6tv/include/mach/canvas.h
new file mode 100644
index 000000000000..ee84b75c14b3
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/canvas.h
@@ -0,0 +1,48 @@
+#ifndef __CANVAS_H__
+#define __CANVAS_H__
+
+#define CANVAS_ADDR_LMASK       0x1fffffff
+#define CANVAS_WIDTH_LMASK      0x7
+#define CANVAS_WIDTH_LWID       3
+#define CANVAS_WIDTH_LBIT       29
+
+#define CANVAS_WIDTH_HMASK      0x1ff
+#define CANVAS_WIDTH_HBIT       0
+#define CANVAS_HEIGHT_MASK      0x1fff
+#define CANVAS_HEIGHT_BIT       9
+#define CANVAS_YWRAP            (1<<23)
+#define CANVAS_XWRAP            (1<<22)
+#define CANVAS_ADDR_NOWRAP      0x00
+#define CANVAS_ADDR_WRAPX       0x01
+#define CANVAS_ADDR_WRAPY       0x02
+#define CANVAS_BLKMODE_MASK     3
+#define CANVAS_BLKMODE_BIT      24
+#define CANVAS_BLKMODE_LINEAR   0x00
+#define CANVAS_BLKMODE_32X32    0x01
+#define CANVAS_BLKMODE_64X32    0x02
+
+#define CANVAS_LUT_INDEX_BIT    0
+#define CANVAS_LUT_INDEX_MASK   0x7
+#define CANVAS_LUT_WR_EN        (0x2 << 8)
+#define CANVAS_LUT_RD_EN        (0x1 << 8)
+
+#define MMC_PHY_CTRL              0x1380
+
+/****************logo relative part *************************************************/
+#define ASSIST_MBOX1_CLR_REG VDEC_ASSIST_MBOX1_CLR_REG
+#define ASSIST_MBOX1_MASK VDEC_ASSIST_MBOX1_MASK
+#define RESET_PSCALE        (1<<4)
+#define RESET_IQIDCT        (1<<2)
+#define RESET_MC            (1<<3)
+#define MEM_BUFCTRL_MANUAL		(1<<1)
+#define MEM_BUFCTRL_INIT		(1<<0)
+#define MEM_LEVEL_CNT_BIT       18
+#define MEM_FIFO_CNT_BIT        16
+#define MEM_FILL_ON_LEVEL		(1<<10)
+#define MEM_CTRL_EMPTY_EN		(1<<2)
+#define MEM_CTRL_FILL_EN		(1<<1)
+#define MEM_CTRL_INIT			(1<<0)
+#define CANVAS_WRITE(x...)		   WRITE_APB_REG(x)
+#define CANVAS_READ(x...)                  READ_APB_REG(x)
+#endif
+
diff --git a/arch/arm/mach-meson6tv/include/mach/clk_set.h b/arch/arm/mach-meson6tv/include/mach/clk_set.h
new file mode 100755
index 000000000000..67cffb12a5d3
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/clk_set.h
@@ -0,0 +1,37 @@
+#ifndef __CLK_SET_HEADER_
+#define __CLK_SET_HEADER_
+/*
+    select clk:
+    7-SYS_PLL_DIV2_CLK
+    6-VID2_PLL_CLK
+    5-VID_PLL_CLK
+    4-AUDIO_PLL_CLK
+    3-DDR_PLL_CLK
+    2-MISC_PLL_CLK
+    1-SYS_PLL_CLK
+    0-XTAL (25Mhz)
+
+    clk_freq:50M=50000000
+    output_clk:50000000;
+    aways,maybe changed for others?
+
+*/
+#define ETH_CLKSRC_XTAL_CLK             (0)
+#define ETH_CLKSRC_SYS_CLK              (1)
+#define ETH_CLKSRC_MISC_CLK             (2)
+#define ETH_CLKSRC_DDR_CLK              (3)
+#define ETH_CLKSRC_AUDIO_CLK            (4)
+#define ETH_CLKSRC_VID_CLK              (5)
+#define ETH_CLKSRC_VID2_CLK             (6)
+#define ETH_CLKSRC_SYS_DIV2_CLK         (7)
+#define CLK_1M                          (1000000)
+#define ETH_VALIDE_CLKSRC(clk,out_clk)  ((clk%out_clk)==0)
+
+int eth_clk_set(int selectclk, unsigned long clk_freq, unsigned long out_clk, unsigned int clk_invert);
+int sys_clkpll_setting(unsigned crystal_freq, unsigned out_freq);
+unsigned long get_xtal_clock(void);
+int misc_pll_setting(unsigned crystal_freq, unsigned  out_freq);
+int audio_pll_setting(unsigned crystal_freq, unsigned  out_freq);
+int video_pll_setting(unsigned crystal_freq, unsigned  out_freq, int powerdown, int flags);
+
+#endif
diff --git a/arch/arm/mach-meson6tv/include/mach/clock.h b/arch/arm/mach-meson6tv/include/mach/clock.h
new file mode 100755
index 000000000000..eaf74c5ef5dc
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/clock.h
@@ -0,0 +1,148 @@
+/*
+*  arch/arm/mach-meson6tv/include/mach/clock.h
+*
+*  Copyright (C) 2010-2013 AMLOGIC, INC.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with this program; if not, write to the Free Software
+* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*/
+
+#ifndef __MACH_MESON6TV_CLOCK_H
+#define __MACH_MESON6TV_CLOCK_H
+
+#include <linux/types.h>
+#include <linux/list.h>
+
+struct clk_ops {
+	//return: 0:success  1:fail
+	int (*clk_ratechange_before)(unsigned long newrate,void* privdata);
+	//return: 0:success  1:fail
+	int (*clk_ratechange_after)(unsigned long newrate,void* privdata,int failed);
+	//return: 0:success  1:fail
+	int (*clk_enable_before)(void* privdata);
+	//return: 0:success  1:fail
+	int (*clk_enable_after)(void* privdata,int failed);
+	//return: 0:success  1:fail
+	int (*clk_disable_before)(void* privdata);
+	//return: 0:success  1:fail.
+	int (*clk_disable_after)(void* privdata,int failed);
+	void* privdata;
+	struct clk_ops* next;
+};
+
+struct clk {
+    #define CLK_RATE_UNKNOWN (-1)
+    unsigned long rate;///0xffffffff(-1) means unknown
+
+    unsigned long(*get_rate)(struct clk *);
+    int (*set_rate)(struct clk *, unsigned long);
+    int (*enable)(struct clk *);///disable my self
+    int (*disable)(struct clk *);///enable my self
+    bool (*status)(struct clk *);
+    int (*on_parent_changed)(struct clk *clk, int rate);
+    int (*need_parent_changed)(struct clk *clk, int rate);
+    int msr;
+    unsigned long msr_mul;
+    unsigned long msr_div;
+    unsigned long min;
+    unsigned long max;
+
+    unsigned clk_gate_reg_adr;
+    unsigned clk_gate_reg_mask;
+
+    int  open_irq;
+
+    struct list_head child;
+    struct list_head sibling;
+    struct clk * parent;
+    struct clk_ops*  clk_ops;
+    void * priv;
+
+    unsigned long old_rate;//Just for store old cpu freq for set_sys_pll()
+};
+int  clk_register(struct clk *clk,const char *parent);
+void clk_unregister(struct clk *clk);
+int  clk_measure(char  index );
+
+//return: 0:disabed. 1:enabled. 2:unknown
+int  clk_get_status(struct clk * clk);
+
+//return: 0:success  1: fail
+int clk_ops_register(struct clk *clk, struct clk_ops *ops);
+//return: 0:success  1: fail
+int clk_ops_unregister(struct clk *clk, struct clk_ops *ops);
+
+
+//M6 all pll controler use bit 29 as reset bit
+#define M6_PLL_RESET(pll) aml_set_reg32_mask(pll,(1<<29));
+
+//wait for pll lock
+//must wait first (100us+) then polling lock bit to check
+#define M6_PLL_WAIT_FOR_LOCK(pll) \
+	do{\
+		udelay(1000);\
+	}while((aml_read_reg32(pll)&0x80000000)==0);
+
+//M6 PLL control value
+#define M6_PLL_CNTL_CST2 (0x814d3928)
+#define M6_PLL_CNTL_CST3 (0x6b425012)
+#define M6_PLL_CNTL_CST4 (0x110)
+
+#define M6_PLL_CNTL_CST12 (0x04294000)
+#define M6_PLL_CNTL_CST13 (0x026b4250)
+#define M6_PLL_CNTL_CST14 (0x06278410)
+#define M6_PLL_CNTL_CST15 (0x1e1)
+#define M6_PLL_CNTL_CST16 (0xacac10ac)
+#define M6_PLL_CNTL_CST17 (0x0108e000)
+
+
+//DDR PLL
+#define M6_DDR_PLL_CNTL_2 (M6_PLL_CNTL_CST2)
+#define M6_DDR_PLL_CNTL_3 (M6_PLL_CNTL_CST3)
+#define M6_DDR_PLL_CNTL_4 (M6_PLL_CNTL_CST4)
+
+//SYS PLL
+#define M6_SYS_PLL_CNTL_2 (M6_PLL_CNTL_CST2)
+#define M6_SYS_PLL_CNTL_3 (M6_PLL_CNTL_CST3)
+#define M6_SYS_PLL_CNTL_4 (M6_PLL_CNTL_CST4)
+
+//VIID PLL
+#define M6_VIID_PLL_CNTL_2 (M6_PLL_CNTL_CST2)
+#define M6_VIID_PLL_CNTL_3 (M6_PLL_CNTL_CST3)
+#define M6_VIID_PLL_CNTL_4 (M6_PLL_CNTL_CST4)
+//Wr(HHI_VIID_PLL_CNTL,  0x20242 );	 //0x1047
+
+
+//VID PLL
+#define M6_VID_PLL_CNTL_2 (M6_PLL_CNTL_CST2)
+#define M6_VID_PLL_CNTL_3 (M6_PLL_CNTL_CST3)
+#define M6_VID_PLL_CNTL_4 (M6_PLL_CNTL_CST4)
+//Wr(HHI_VID_PLL_CNTL,  0xb0442 ); //0x109c
+
+//FIXED PLL/Multi-phase PLL
+#define M6_MPLL_CNTL_2 (M6_PLL_CNTL_CST12)
+#define M6_MPLL_CNTL_3 (M6_PLL_CNTL_CST13)
+#define M6_MPLL_CNTL_4 (M6_PLL_CNTL_CST14)
+#define M6_MPLL_CNTL_5 (M6_PLL_CNTL_CST15)
+#define M6_MPLL_CNTL_6 (M6_PLL_CNTL_CST16)
+#define M6_MPLL_CNTL_7 (M6_PLL_CNTL_CST17)
+#define M6_MPLL_CNTL_8 (M6_PLL_CNTL_CST17)
+#define M6_MPLL_CNTL_9 (M6_PLL_CNTL_CST17)
+#define M6_MPLL_CNTL_10 (0)
+
+extern unsigned long mali_clock_gating_lock(void);
+extern void mali_clock_gating_unlock(unsigned long flags);
+extern unsigned int clk_util_clk_msr(unsigned int clk_mux);
+
+#endif // __MACH_MESON6TV_CLOCK_H
diff --git a/arch/arm/mach-meson6tv/include/mach/cpu.h b/arch/arm/mach-meson6tv/include/mach/cpu.h
new file mode 100755
index 000000000000..ed282e812fd4
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/cpu.h
@@ -0,0 +1,35 @@
+/*
+* arch/arm/mach-meson6/include/mach/cpu.h
+*
+* Copyright (C) 2012-2013 Amlogic, Inc.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+#ifndef __MACH_MESON6TV_CPU_H
+#define __MACH_MESON6TV_CPU_H
+
+#include <plat/cpu.h>
+
+extern int (*get_cpu_temperature_celius)(void);
+int get_cpu_temperature(void);
+
+#define MESON_CPU_TYPE	MESON_CPU_TYPE_MESON6TV
+
+extern int meson6tv_cpu_kill(unsigned int cpu);
+extern void meson6tv_cpu_die(unsigned int cpu);
+extern int meson6tv_cpu_disable(unsigned int cpu);
+
+#endif /* __MACH_MESON6TV_CPU_H */
diff --git a/arch/arm/mach-meson6tv/include/mach/gpio.h b/arch/arm/mach-meson6tv/include/mach/gpio.h
new file mode 100755
index 000000000000..f9712772be73
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/gpio.h
@@ -0,0 +1,248 @@
+/*
+ * arch/arm/mach-meson6tv/include/mach/gpio.h
+ *
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __MACH_MESON6TV_GPIO_H
+#define __MACH_MESON6TV_GPIO_H
+
+/* Referrence GPIO IRQ definition describled in ISA document #P7.
+ */
+typedef enum {
+
+	GPIOZ_0 	=	0,
+	GPIOZ_1 	=	1,
+	GPIOZ_2 	=	2,
+	GPIOZ_3 	=	3,
+	GPIOZ_4 	=	4,
+	GPIOZ_5 	=	5,
+	GPIOZ_6 	=	6,
+	GPIOZ_7 	=	7,
+	GPIOZ_8 	=	8,
+	GPIOZ_9 	=	9,
+	GPIOZ_10	=	10,
+	GPIOZ_11	=	11,
+	GPIOZ_12	=	12,
+	GPIOZ_13	=	13,
+	GPIOZ_14	=	14,
+	GPIOZ_15	=	15,
+	GPIOZ_16	=	16,
+	GPIOZ_17	=	17,
+	GPIOZ_18	=	18,
+	GPIOZ_19	=	19,
+
+	GPIOY_0		=	20,
+	GPIOY_1		=	21,
+	GPIOY_2 	=	22,
+	GPIOY_3 	=	23,
+	GPIOY_4		=	24,
+	GPIOY_5		=	25,
+	GPIOY_6 	=	26,
+	GPIOY_7 	=	27,
+	GPIOY_8 	=	28,
+	GPIOY_9		=	29,
+	GPIOY_10	=	30,
+	GPIOY_11	=	31,
+	GPIOY_12	=	32,
+	GPIOY_13	=	33,
+	GPIOY_14	=	34,
+	GPIOY_15	=	35,
+	GPIOY_16	=	36,
+	GPIOY_17	=	37,
+	GPIOY_18	=	38,
+	GPIOY_19	=	39,
+	GPIOY_20	=	40,
+	GPIOY_21	=	41,
+	GPIOY_22	=	42,
+	GPIOY_23	=	43,
+	GPIOY_24	=	44,
+	GPIOY_25	=	45,
+	GPIOY_26	=	46,
+	GPIOY_27	=	47,
+
+	GPIOW_0 	=	48,
+	GPIOW_1 	=	49,
+	GPIOW_2 	=	50,
+	GPIOW_3 	=	51,
+	GPIOW_4 	=	52,
+	GPIOW_5 	=	53,
+	GPIOW_6 	=	54,
+	GPIOW_7 	=	55,
+	GPIOW_8 	=	56,
+	GPIOW_9 	=	57,
+	GPIOW_10	=	58,
+	GPIOW_11	=	59,
+	GPIOW_12	=	60,
+	GPIOW_13	=	61,
+	GPIOW_14	=	62,
+	GPIOW_15	=	63,
+	GPIOW_16	=	64,
+	GPIOW_17	=	65,
+	GPIOW_18	=	66,
+	GPIOW_19	=	67,
+
+	GPIOX_0		=	68,
+	GPIOX_1 	=	69,
+	GPIOX_2 	=	70,
+	GPIOX_3 	=	71,
+	GPIOX_4 	=	72,
+	GPIOX_5 	=	73,
+	GPIOX_6 	=	74,
+	GPIOX_7 	=	75,
+	GPIOX_8 	=	76,
+	GPIOX_9 	=	77,
+	GPIOX_10	=	78,
+	GPIOX_11	=	79,
+	GPIOX_12	=	80,
+
+	BOOT_0		=	81,
+	BOOT_1		=	82,
+	BOOT_2		=	83,
+	BOOT_3		=	84,
+	BOOT_4		=	85,
+	BOOT_5		=	86,
+	BOOT_6		=	87,
+	BOOT_7		=	88,
+	BOOT_8		=	89,
+	BOOT_9		=	90,
+	BOOT_10		=	91,
+	BOOT_11		=	92,
+	BOOT_12		=	93,
+	BOOT_13		=	94,
+	BOOT_14		=	95,
+	BOOT_15		=	96,
+	BOOT_16		=	97,
+	BOOT_17		=	98,
+
+	GPIOP_0 	=	99,
+	GPIOP_1 	=	100,
+	GPIOP_2 	=	101,
+	GPIOP_3 	=	102,
+	GPIOP_4 	=	103,
+	GPIOP_5 	=	104,
+	GPIOP_6 	=	105,
+	GPIOP_7 	=	106,
+
+	CARD_0		=	107,
+	CARD_1		=	108,
+	CARD_2		=	109,
+	CARD_3		=	110,
+	CARD_4		=	111,
+	CARD_5		=	112,
+	CARD_6		=	113,
+	CARD_7		=	114,
+	CARD_8		=	115,
+
+	GPIOB_0 	=	116,
+	GPIOB_1 	=	117,
+	GPIOB_2 	=	118,
+	GPIOB_3 	=	119,
+	GPIOB_4		=	120,
+	GPIOB_5 	=	121,
+	GPIOB_6 	=	122,
+	GPIOB_7 	=	123,
+	GPIOB_8 	=	124,
+	GPIOB_9		=	125,
+	GPIOB_10	=	126,
+	GPIOB_11	=	127,
+	GPIOB_12	=	128,
+	GPIOB_13	=	129,
+	GPIOB_14	=	130,
+	GPIOB_15	=	131,
+	GPIOB_16	=	132,
+	GPIOB_17	=	133,
+	GPIOB_18	=	134,
+	GPIOB_19	=	135,
+	GPIOB_20	=	136,
+	GPIOB_21	=	137,
+	GPIOB_22	=	138,
+	GPIOB_23	=	139,
+
+	GPIOA_0 	=	140,
+	GPIOA_1 	=	141,
+	GPIOA_2 	=	142,
+	GPIOA_3 	=	143,
+	GPIOA_4 	=	144,
+	GPIOA_5 	=	145,
+	GPIOA_6 	=	146,
+	GPIOA_7 	=	147,
+	GPIOA_8 	=	148,
+	GPIOA_9 	=	149,
+	GPIOA_10	=	150,
+	GPIOA_11	=	151,
+	GPIOA_12	=	152,
+	GPIOA_13	=	153,
+	GPIOA_14	=	154,
+	GPIOA_15	=	155,
+	GPIOA_16	=	156,
+	GPIOA_17	=	157,
+	GPIOA_18	=	158,
+	GPIOA_19	=	159,
+	GPIOA_20	=	160,
+	GPIOA_21	=	161,
+	GPIOA_22	=	162,
+	GPIOA_23	=	163,
+	GPIOA_24	=	164,
+	GPIOA_25	=	165,
+	GPIOA_26	=	166,
+	GPIOA_27	=	167,
+	GPIOA_28	=	168,
+	GPIOA_29	=	169,
+
+	GPIOAO_0 	=	170,
+	GPIOAO_1 	=	171,
+	GPIOAO_2 	=	172,
+	GPIOAO_3 	=	173,
+	GPIOAO_4 	=	174,
+	GPIOAO_5 	=	175,
+	GPIOAO_6 	=	176,
+	GPIOAO_7 	=	177,
+	GPIOAO_8 	=	178,
+	GPIOAO_9 	=	179,
+	GPIOAO_10	=	180,
+	GPIOAO_11	=	181,
+
+	GPIO_MAX,
+}gpio_t;
+
+enum {
+	GPIO_IRQ0 = 0,
+	GPIO_IRQ1 = 1,
+	GPIO_IRQ2 = 2,
+	GPIO_IRQ3 = 3,
+	GPIO_IRQ4 = 4,
+	GPIO_IRQ5 = 5,
+	GPIO_IRQ6 = 6,
+	GPIO_IRQ7 = 7,
+};
+
+enum {
+	GPIO_IRQ_HIGH = 0,
+	GPIO_IRQ_LOW,
+	GPIO_IRQ_RISING,
+	GPIO_IRQ_FALLING,
+};
+
+enum {
+	FILTER_NUM0 = 0,
+	FILTER_NUM1,
+	FILTER_NUM2,
+	FILTER_NUM3,
+	FILTER_NUM4,
+	FILTER_NUM5,
+	FILTER_NUM6,
+	FILTER_NUM7,
+};
+
+
+#endif // __MACH_MESON6TV_GPIO_H
diff --git a/arch/arm/mach-meson6tv/include/mach/hardware.h b/arch/arm/mach-meson6tv/include/mach/hardware.h
new file mode 100755
index 000000000000..9a3846f6a37e
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/hardware.h
@@ -0,0 +1,27 @@
+/*
+* arch/arm/mach-meson6tv/include/mach/hardware.h
+*
+* Copyright (C) 2011-2013 Amlogic, Inc.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+#ifndef __MACH_MESON6TV_HARDWARE_H
+#define __MACH_MESON6TV_HARDWARE_H
+
+#include <asm/sizes.h>
+#include <mach/io.h>
+
+#endif // __MACH_MESON6TV_HARDWARE_H
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/io.h b/arch/arm/mach-meson6tv/include/mach/io.h
new file mode 100755
index 000000000000..c302d66b11ae
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/io.h
@@ -0,0 +1,168 @@
+/*
+* arch/arm/mach-meson6tv/include/mach/io.h
+*
+* Copyright (C) 2011-2013 Amlogic, Inc.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+#ifndef __MACH_MESON6TV_IO_H
+#define __MACH_MESON6TV_IO_H
+
+///amlogic old style driver porting
+#if (defined CONFIG_MESON_LEGACY_REGISTER_API) && CONFIG_MESON_LEGACY_REGISTER_API
+#include "avosstyle_io.h"
+#else
+#warning "You should replace the register operation with \n" 	\
+	"writel/readl/setbits_le32/clrbits_le32/clrsetbits_le32.\n" \
+	"the register name must be replace with P_REG_NAME . \n"	\
+	"REG_NAME is the old stlye reg name . 	"
+#endif
+
+//#define IO_SPACE_LIMIT 0xffffffff
+
+//#define __io(a)     __typesafe_io(a)
+#define __mem_pci(a)    (a)
+
+
+/**
+ * U boot style operation
+ */
+
+
+#define clrbits_le32 aml_clr_reg32_mask
+#define setbits_le32 aml_set_reg32_mask
+#define clrsetbits_le32 aml_clrset_reg32_bits
+/**
+ * PHY IO MEMORY BASE
+ */
+#define IO_PHY_BASE             0xc0000000  ///value from vlsi team
+#define IO_CBUS_PHY_BASE        0xc1100000  ///2M
+#define IO_AXI_BUS_PHY_BASE     0xc1300000  ///1M
+#define IO_PL310_PHY_BASE       0xc4200000  ///4k
+#define IO_PERIPH_PHY_BASE      0xc4300000  ///4k
+#define IO_APB_BUS_PHY_BASE     0xc8000000  ///8k
+#define IO_DOS_BUS_PHY_BASE     0xc8010000  ///64k
+#define IO_HDEC_BUS_PHY_BASE    0xc8014000  ///64k
+#define IO_AOBUS_PHY_BASE       0xc8100000  ///1M
+#define IO_AHB_BUS_PHY_BASE		0xc9000000	///8M
+	#define IO_USB_A_PHY_BASE       0xc9040000  ///512k
+	#define IO_USB_B_PHY_BASE       0xc90C0000  ///256k
+	#define IO_WIFI_PHY_BASE        0xc9300000  ///1M
+	#define IO_SATA_PHY_BASE        0xc9400000  ///64k
+	#define IO_ETH_PHY_BASE         0xc9410000  ///64k
+#define IO_SPIMEM_PHY_BASE      0xcc000000  ///64M
+#define IO_A9_APB_PHY_BASE      0xd0000000  ///256k
+	#define IO_DEMOD_APB_PHY_BASE   0xd0044000  ///112k
+	#define IO_MALI_APB_PHY_BASE    0xd0060000  ///128k
+#define IO_APB2_BUS_PHY_BASE    0xd0000000
+#define IO_AHB_PHY_BASE         0xd9000000  ///128k
+#define IO_BOOTROM_PHY_BASE     0xd9040000  ///64k
+#define IO_SECBUS_PHY_BASE      0xda000000
+#define IO_EFUSE_PHY_BASE       0xda000000  ///4k
+#define IO_SECURE_PHY_BASE      (IO_SECBUS_PHY_BASE+0x2000)  ///16k
+
+#ifdef CONFIG_VMSPLIT_3G
+#define IO_CBUS_BASE        0xf1100000  ///2M
+#define IO_AXI_BUS_BASE     0xf1300000  ///1M
+#define IO_PL310_BASE       0xf2200000  ///4k
+#define IO_PERIPH_BASE      0xf2300000  ///4k
+#define IO_APB_BUS_BASE     0xf3000000  ///8k
+    #define IO_HDMI_BUS_BASE     0xf3002000  ///64k
+    #define IO_DOS_BUS_BASE     0xf3010000  ///64k
+    #define IO_HDEC_BUS_BASE 	0xf3014000  ///64k
+#define IO_AOBUS_BASE       0xf3100000  ///1M
+#define IO_AHB_BUS_BASE		0xf3200000
+	#define IO_USB_A_BASE       0xf3240000  ///256k
+	#define IO_USB_B_BASE       0xf32C0000  ///256k
+	#define IO_USB_C_BASE       0xf3300000  ///256k
+	#define IO_USB_D_BASE       0xf3340000  ///256k
+#define IO_ETH_BASE         (IO_AHB_BUS_BASE + IO_ETH_PHY_BASE -IO_AHB_BUS_PHY_BASE)  ///64k
+#define IO_SPIMEM_BASE      0xf4000000  ///64M
+#define IO_A9_APB_BASE      0xf8000000  ///256k
+	#define IO_DEMOD_APB_BASE   0xf8044000  ///112k
+	#define IO_MALI_APB_BASE    0xf8060000  ///128k
+#define IO_APB2_BUS_BASE    0xf8000000
+#define IO_AHB_BASE         0xf9000000  ///128k
+#define IO_BOOTROM_BASE     0xf9040000  ///64k
+#define IO_SECBUS_BASE      0xfa000000
+#define IO_EFUSE_BASE       0xfa000000  ///4k
+#define IO_SECURE_BASE      0xfa002000  ///16k
+#endif
+
+#ifdef CONFIG_VMSPLIT_2G
+#define IO_CBUS_BASE        IO_CBUS_PHY_BASE       ///2M
+#define IO_AXI_BUS_BASE     IO_AXI_BUS_PHY_BASE    ///1M
+#define IO_PL310_BASE       IO_PL310_PHY_BASE      ///4k
+#define IO_PERIPH_BASE      IO_PERIPH_PHY_BASE     ///4k
+#define IO_APB_BUS_BASE     IO_APB_BUS_PHY_BASE    ///8k
+#define IO_DOS_BUS_BASE     IO_DOS_BUS_PHY_BASE    ///64k
+#define IO_AOBUS_BASE       IO_AOBUS_PHY_BASE      ///1M
+#define IO_USB_A_BASE       IO_USB_A_PHY_BASE      ///512k
+#define IO_USB_B_BASE       IO_USB_B_PHY_BASE      ///256k
+#define IO_WIFI_BASE        IO_WIFI_PHY_BASE       ///1M
+#define IO_SATA_BASE        IO_SATA_PHY_BASE       ///64k
+#define IO_ETH_BASE         IO_ETH_PHY_BASE        ///64k
+#define IO_SPIMEM_BASE      IO_SPIMEM_PHY_BASE     ///64M
+#define IO_A9_APB_BASE      IO_A9_APB_PHY_BASE     ///256k
+#define IO_DEMOD_APB_BASE   IO_DEMOD_APB_PHY_BASE  ///112k
+#define IO_MALI_APB_BASE    IO_MALI_APB_PHY_BASE   ///128k
+#define IO_APB2_BUS_BASE    IO_APB2_BUS_PHY_BASE
+#define IO_AHB_BASE         IO_AHB_PHY_BASE        ///128k
+#define IO_AHB_BUS_BASE         IO_AHB_BUS_PHY_BASE        ///128k
+
+#define IO_BOOTROM_BASE     IO_BOOTROM_PHY_BASE    ///64k
+#define IO_SECBUS_BASE      IO_SECBUS_PHY_BASE
+#define IO_EFUSE_BASE       IO_EFUSE_PHY_BASE      ///4k
+#define IO_SECURE_BASE      IO_SECURE_PHY_BASE     ///16k
+#endif
+
+#ifdef CONFIG_VMSPLIT_1G
+#error Unsupported Memory Split Type
+#endif
+
+
+#define MESON_PERIPHS1_VIRT_BASE	(IO_AOBUS_BASE+0x4c0)
+#define MESON_PERIPHS1_PHYS_BASE	(IO_AOBUS_PHY_BASE+0x4c0)
+
+
+#define CBUS_REG_OFFSET(reg)		((reg) << 2)
+#define CBUS_REG_ADDR(reg)		(IO_CBUS_BASE + CBUS_REG_OFFSET(reg))
+
+#define CBUS_REG_OFFSET(reg)		((reg) << 2)
+#define DOS_REG_ADDR(reg)		(IO_DOS_BUS_BASE + CBUS_REG_OFFSET(reg))
+
+#define CBUS_REG_OFFSET(reg)		((reg) << 2)
+#define HDEC_REG_ADDR(reg)		(IO_HDEC_BUS_BASE + CBUS_REG_OFFSET(reg))
+#define AXI_REG_OFFSET(reg)		((reg) << 2)
+#define AXI_REG_ADDR(reg)		(IO_AXI_BUS_BASE + AXI_REG_OFFSET(reg))
+
+#define AHB_REG_OFFSET(reg)		((reg) << 2)
+#define AHB_REG_ADDR(reg)		(IO_AHB_BUS_BASE + AHB_REG_OFFSET(reg))
+
+#define APB_REG_OFFSET(reg)		(reg&0xfffff)
+#define APB_REG_ADDR(reg)		(IO_APB_BUS_BASE + APB_REG_OFFSET(reg))
+#define APB_REG_ADDR_VALID(reg)		(((unsigned long)(reg) & 3) == 0)
+
+#define AOBUS_REG_OFFSET(reg)		((reg) )
+#define AOBUS_REG_ADDR(reg)		(IO_AOBUS_BASE + AOBUS_REG_OFFSET(reg))
+
+#define SECBUS_REG_OFFSET(reg)		((reg) <<2)
+#define SECBUS_REG_ADDR(reg)		(IO_SECBUS_BASE+SECBUS_REG_OFFSET(reg))
+#define SECBUS2_REG_ADDR(reg)		(IO_SECURE_BASE+0x2000+SECBUS_REG_OFFSET(reg))
+
+void meson6tv_map_default_io(void);
+
+#endif //__MACH_MESON6TV_IO_H
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/irqs.h b/arch/arm/mach-meson6tv/include/mach/irqs.h
new file mode 100755
index 000000000000..f6ef48ab5963
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/irqs.h
@@ -0,0 +1,194 @@
+/*
+ *  arch/arm/mach-meson6tv/include/mach/irqs.h
+ *
+ *  Copyright (C) 2010-2013 AMLOGIC, INC.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#ifndef __MACH_MESON6TV_IRQS_H
+#define __MACH_MESON6TV_IRQS_H
+
+#define IRQ_BIT(irq)            ((irq) & 0x1f)
+#define IRQ_INDEX(irq)          ((irq) >> 5)
+#define IRQ_MASK_REG(irq)       (SYS_CPU_0_IRQ_IN0_INTR_MASK + (((irq) >> 5) << 2))
+#define IRQ_STATUS_REG(irq)     (SYS_CPU_0_IRQ_IN0_INTR_STAT + (((irq) >> 5) << 2))
+#define IRQ_CLR_REG(irq)        (SYS_CPU_0_IRQ_IN0_INTR_STAT_CLR + (((irq) >> 5) << 2))
+#define IRQ_FIQSEL_REG(irq)     (SYS_CPU_0_IRQ_IN0_INTR_FIRQ_SEL + (((irq) >> 5) << 2))
+#ifdef CONFIG_ARM_GIC
+#define BASE_IRQ 32
+#define NR_IRQS         256
+#else
+#define BASE_IRQ 0
+#define NR_IRQS         AM_IRQ3(32)
+#endif
+#define AM_IRQ(reg,v)   ((reg<<5)+(v) + BASE_IRQ)
+#define AM_IRQ0(v)      AM_IRQ(0,v)
+#define AM_IRQ1(v)      AM_IRQ(1,v)
+#define AM_IRQ2(v)      AM_IRQ(2,v)
+#define AM_IRQ3(v)      AM_IRQ(3,v)
+#define AM_IRQ4(v)      AM_IRQ(4,v)
+
+
+
+#define INT_WATCHDOG                AM_IRQ0(0)
+#define INT_MAILBOX                 AM_IRQ0(1)
+#define INT_VIU_HSYNC               AM_IRQ0(2)
+#define INT_VIU_VSYNC               AM_IRQ0(3)
+#define INT_DEMUX_1                 AM_IRQ0(5)
+#define INT_TIMER_C                 AM_IRQ0(6)
+#define INT_AUDIO_IN                AM_IRQ0(7)
+#define INT_ETHERNET                AM_IRQ0(8)
+#define INT_SYS_ARC_SLEEP_RATIO     AM_IRQ0(9)
+#define INT_TIMER_A                 AM_IRQ0(10)
+#define INT_TIMER_B                 AM_IRQ0(11)
+/* IRQ0: 12,13,14 Unused in M6TV
+#define INT_VIU2_HSYNC              AM_IRQ0(12)
+#define INT_VIU2_VSYNC              AM_IRQ0(13)
+#define INT_MIPI_PHY								AM_IRQ2(14)
+*/
+#define INT_REMOTE                  AM_IRQ0(15)
+#define INT_ABUF_WR                 AM_IRQ0(16)
+#define INT_ABUF_RD                 AM_IRQ0(17)
+#define INT_ASYNC_FIFO_FILL         AM_IRQ0(18)
+#define INT_ASYNC_FIFO_FLUSH        AM_IRQ0(19)
+#define INT_BT656                   AM_IRQ0(20)
+#define INT_I2C_MASTER              AM_IRQ0(21)
+#define INT_ENCODER                 AM_IRQ0(22)
+#define INT_DEMUX                   AM_IRQ0(23)
+#define INT_ASYNC_FIFO2_FILL        AM_IRQ0(24)
+#define INT_ASYNC_FIFO2_FLUSH       AM_IRQ0(25)
+#define INT_UART_0                  AM_IRQ0(26)
+#define INT_ETH_PMT									AM_IRQ0(27)
+#define INT_SDIO                    AM_IRQ0(28)
+#define INT_TIMER_D                 AM_IRQ0(29)
+#define INT_USB_A                   AM_IRQ0(30)
+#define INT_USB_B                   AM_IRQ0(31)
+
+#define INT_PARSER                  AM_IRQ1(0)
+#define INT_VIFF_EMPTY              AM_IRQ1(1)
+#define INT_NAND                    AM_IRQ1(2)
+#define INT_SPDIF                   AM_IRQ1(3)
+#define INT_NDMA                    AM_IRQ1(4)
+#define INT_SMART_CARD              AM_IRQ1(5)
+#define INT_MEASURE_CLK             AM_IRQ1(6)
+#define INT_I2C_SLAVE               AM_IRQ1(7)
+#define INT_MAILBOX_2B              AM_IRQ1(8)
+#define INT_MAILBOX_1B              AM_IRQ1(9)
+#define INT_MAILBOX_0B              AM_IRQ1(10)
+#define INT_MAILBOX_2A              AM_IRQ1(11)
+#define INT_MAILBOX_1A              AM_IRQ1(12)
+#define INT_MAILBOX_0A              AM_IRQ1(13)
+#define INT_DEINTERLACE             AM_IRQ1(14)
+#define INT_MMC                     AM_IRQ1(15)
+#define INT_MALI_GP                 AM_IRQ1(16)
+#define INT_MALI_GP_MMU             AM_IRQ1(17)
+#define INT_MALI_PP                 AM_IRQ1(18)
+#define INT_MALI_PP_MMU             AM_IRQ1(19)
+#define INT_MALI_PMU                AM_IRQ1(20)
+#define INT_DEMUX_2                 AM_IRQ1(21)
+#define INT_AUDIO_ARC_SLEEP_RATIO   AM_IRQ1(22)
+#define INT_HDMI_CEC                AM_IRQ1(23)
+#define INT_HDMI_RX									AM_IRQ1(24)
+#define INT_HDMI_TX                 AM_IRQ1(25)
+#define INT_MALI_PP1                AM_IRQ1(26)
+#define INT_MALI_PP_MMU1            AM_IRQ1(27)
+#define INT_MALI_PP2		            AM_IRQ1(28)
+#define INT_MALI_PP_MMU2            AM_IRQ1(29)
+#define INT_MALI_PP3		            AM_IRQ1(30)
+#define INT_MALI_PP_MMU3            AM_IRQ1(31)
+
+
+#define INT_GPIO_0                  AM_IRQ2(0)
+#define INT_GPIO_1                  AM_IRQ2(1)
+#define INT_GPIO_2                  AM_IRQ2(2)
+#define INT_GPIO_3                  AM_IRQ2(3)
+#define INT_GPIO_4                  AM_IRQ2(4)
+#define INT_GPIO_5                  AM_IRQ2(5)
+#define INT_GPIO_6                  AM_IRQ2(6)
+#define INT_GPIO_7                  AM_IRQ2(7)
+#define INT_RTC                     AM_IRQ2(8)
+#define INT_SAR_ADC                 AM_IRQ2(9)
+#define INT_UART_1                  AM_IRQ2(11)
+#define INT_WIFI_WATCHDOG           AM_IRQ2(14)
+#define INT_VIDEO_WR                AM_IRQ2(15)
+#define INT_SPI                     AM_IRQ2(16)
+#define INT_SPI_1                   AM_IRQ2(17)
+#define INT_VDIN0_HSYNC             AM_IRQ2(18)
+#define INT_VDIN0_VSYNC             AM_IRQ2(19)
+#define INT_VDIN1_HSYNC             AM_IRQ2(20)
+#define INT_VDIN1_VSYNC             AM_IRQ2(21)
+#define INT_VD1_WR									AM_IRQ2(22)
+#define INT_TVFE										AM_IRQ2(23)
+#define INT_I2C_CBUS_DDR            AM_IRQ2(24)
+#define INT_RDMA                    AM_IRQ2(25)
+#define INT_UART_AO                 AM_IRQ2(26)
+#define INT_I2C_SLAVE_AO            AM_IRQ2(27)
+#define INT_I2C_MASTER_AO           AM_IRQ2(28)
+#define INT_UART_2                  AM_IRQ2(29)
+#define INT_UART_3                  AM_IRQ2(30)
+
+
+#define INT_AMRISC_DC_PCMLAST       AM_IRQ3(0)
+#define INT_AMRISC_VIU_VSYNC        AM_IRQ3(1)
+#define INT_AMRISC_H2TMR            AM_IRQ3(3)
+#define INT_AMRISC_H2CPAR           AM_IRQ3(4)
+#define INT_AMRISC_HI_ABX           AM_IRQ3(5)
+#define INT_AMRISC_H2CMD            AM_IRQ3(6)
+#define INT_AMRISC_AI_IEC958        AM_IRQ3(7)
+#define INT_AMRISC_VL_CP            AM_IRQ3(8)
+#define INT_AMRISC_DC_MBDONE        AM_IRQ3(9)
+#define INT_AMRISC_VIU_HSYNC        AM_IRQ3(10)
+#define INT_AMRISC_R2C              AM_IRQ3(11)
+#define INT_AMRISC_AIFIFO           AM_IRQ3(13)
+#define INT_AMRISC_HST_INTP         AM_IRQ3(14)
+#define INT_AMRISC_CPU1_STOP        AM_IRQ3(16)
+#define INT_AMRISC_CPU2_STOP        AM_IRQ3(17)
+#define INT_AMRISC_VENC_INT         AM_IRQ3(19)
+#define INT_AMRISC_TIMER0           AM_IRQ3(26)
+#define INT_AMRISC_TIMER1           AM_IRQ3(27)
+
+#define INT_I2C_MASTER1							AM_IRQ4(0)
+#define INT_I2C_MASTER2							AM_IRQ4(1)
+#define INT_SECURE									AM_IRQ4(2)
+#define INT_USB_C										AM_IRQ4(3)
+#define INT_USB_D										AM_IRQ4(4)
+#define INT_D2D3										AM_IRQ4(5)
+#define INT_HDMI_RX_AUD_MEAS				AM_IRQ4(6)
+#define INT_IR_BLASTER							AM_IRQ4(7)
+#define INT_DEMOD										AM_IRQ4(8)
+#define INT_A9_PMU0									AM_IRQ4(9)
+#define INT_A9_PMU1									AM_IRQ4(10)
+#define INT_A9_DBG_COMTX0						AM_IRQ4(11)
+#define INT_A9_DBG_COMTX1						AM_IRQ4(12)
+#define INT_A9_DBG_COMRX0						AM_IRQ4(13)
+#define INT_A9_DBG_COMRX1						AM_IRQ4(14)
+#define INT_L2_CACHE								AM_IRQ4(15)
+#define INT_DET3D										AM_IRQ4(16)
+#define INT_ASSIST_MBOX0						AM_IRQ4(17)
+#define INT_ASSIST_MBOX1						AM_IRQ4(18)
+#define INT_ASSIST_MBOX2						AM_IRQ4(19)
+#define INT_ASSIST_MBOX3						AM_IRQ4(20)
+#define INT_CUSAD										AM_IRQ4(21)
+#define INT_GE2D										AM_IRQ4(22)
+#define INT_AO_CEC									AM_IRQ4(23)
+#define INT_VIU1_LINE_N							AM_IRQ4(24)
+
+/* All interrupts are FIQ capable */
+#define FIQ_START                   AM_IRQ0(0)
+extern void request_fiq(unsigned fiq, void (*isr)(void));
+extern void free_fiq(unsigned fiq, void (*isr)(void));
+
+#endif //__MACH_MESON6TV_IRQS_H
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/memory.h b/arch/arm/mach-meson6tv/include/mach/memory.h
new file mode 100755
index 000000000000..bd101b096a17
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/memory.h
@@ -0,0 +1,31 @@
+/*
+ *  arch/arm/mach-meson6tv/include/mach/memory.h
+ *
+ *  Copyright (C) 2010-2013 AMLOGIC, INC.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#ifndef __MACH_MESON6TV_MEMORY_H
+#define __MACH_MESON6TV_MEMORY_H
+
+/*
+ * Physical DRAM offset.
+ */
+#define PHYS_OFFSET     UL(0x80000000)
+
+#define BOOT_PARAMS_OFFSET  (PHYS_OFFSET + 0x100)
+
+#endif // __MACH_MESON6TV_MEMORY_H
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/mod_gate.h b/arch/arm/mach-meson6tv/include/mach/mod_gate.h
new file mode 100755
index 000000000000..7af65284cbfe
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/mod_gate.h
@@ -0,0 +1,85 @@
+/*
+* arch/arm/mach-meson6tv/include/mach/mod_gate.h
+*
+* Copyright (C) 2011-2013 Amlogic, Inc.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+#ifndef __MACH_MESON6TV_MOD_GATE_H
+#define __MACH_MESON6TV_MOD_GATE_H
+
+#include <mach/power_gate.h>
+
+typedef enum {
+	MOD_VDEC = 0,
+	MOD_AUDIO,
+	MOD_HDMI,
+	MOD_VENC,
+	MOD_TCON,
+	MOD_LVDS,
+	MOD_MIPI,
+	MOD_BT656,
+	MOD_SPI,
+	MOD_UART0,
+	MOD_UART1,
+	MOD_UART2,
+	MOD_UART3,
+	MOD_ROM,
+	MOD_EFUSE,
+	MOD_RANDOM_NUM_GEN,
+	MOD_ETHERNET,
+	MOD_MEDIA_CPU,
+	MOD_GE2D,
+	MOD_VIDEO_IN,
+	MOD_VIU2,
+	MOD_AUD_IN,
+	MOD_AUD_OUT,
+	MOD_AHB,
+	MOD_DEMUX,
+	MOD_SMART_CARD,
+	MOD_SDHC,
+	MOD_STREAM,
+	MOD_BLK_MOV,
+	MOD_MISC_DVIN,
+	MOD_MISC_RDMA,
+	MOD_USB0,
+	MOD_USB1,
+	MOD_USB2,
+	MOD_USB3,
+	MOD_SDIO,
+	MOD_VI_CORE,
+	MOD_LED_PWM,
+	MOD_MAX_NUM,
+}mod_type_t;
+
+#define GATE_ON(_MOD) \
+	do{ \
+		if (0) printk(KERN_INFO "gate on %s %x, %x\n", GCLK_NAME_##_MOD, GCLK_REG_##_MOD, GCLK_MASK_##_MOD); \
+		SET_CBUS_REG_MASK(GCLK_REG_##_MOD, GCLK_MASK_##_MOD); \
+	} while(0)
+
+
+#define GATE_OFF(_MOD) \
+	do{ \
+		if (0) printk(KERN_INFO "gate off %s %x, %x\n", GCLK_NAME_##_MOD, GCLK_REG_##_MOD, GCLK_MASK_##_MOD); \
+		CLEAR_CBUS_REG_MASK(GCLK_REG_##_MOD, GCLK_MASK_##_MOD); \
+	} while(0)
+
+extern void switch_mod_gate_by_type(mod_type_t type, int flag);
+extern void switch_mod_gate_by_name(const char* mod_name, int flag);
+extern void power_gate_init(void);
+
+#endif /* __MACH_MESON6TV_MOD_GATE_H */
diff --git a/arch/arm/mach-meson6tv/include/mach/nand.h b/arch/arm/mach-meson6tv/include/mach/nand.h
new file mode 100755
index 000000000000..fa514e66e6b1
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/nand.h
@@ -0,0 +1,49 @@
+/*
+ * arch/arm/mach-meson6tv/include/mach/nand.h
+ *
+ * Copyright (C) 2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __MACH_MESON_NAND_REGS_H
+#define __MACH_MESON_NAND_REGS_H
+
+
+#define IO_CBUS_BASE2		0xc1100000
+
+#define NAND_CMD		((0xc1108600-IO_CBUS_BASE2)>>2)
+#define NAND_CFG		((0xc1108604-IO_CBUS_BASE2)>>2)
+#define NAND_DADR		((0xc1108608-IO_CBUS_BASE2)>>2)
+#define NAND_IADR		((0xc110860c-IO_CBUS_BASE2)>>2)
+#define NAND_BUF		((0xc1108610-IO_CBUS_BASE2)>>2)
+#define NAND_INFO		((0xc1108614-IO_CBUS_BASE2)>>2)
+#define NAND_DC			((0xc1108618-IO_CBUS_BASE2)>>2)
+#define NAND_ADR		((0xc110861c-IO_CBUS_BASE2)>>2)
+#define NAND_DL			((0xc1108620-IO_CBUS_BASE2)>>2)
+#define NAND_DH			((0xc1108624-IO_CBUS_BASE2)>>2)
+#define NAND_CADR		((0xc1108628-IO_CBUS_BASE2)>>2)
+#define NAND_SADR		((0xc110862c-IO_CBUS_BASE2)>>2)
+
+#define P_NAND_CMD		CBUS_REG_ADDR(NAND_CMD)
+#define P_NAND_CFG		CBUS_REG_ADDR(NAND_CFG)
+#define P_NAND_DADR		CBUS_REG_ADDR(NAND_DADR)
+#define P_NAND_IADR		CBUS_REG_ADDR(NAND_IADR)
+#define P_NAND_BUF		CBUS_REG_ADDR(NAND_BUF)
+#define P_NAND_INFO		CBUS_REG_ADDR(NAND_INFO)
+#define P_NAND_DC		CBUS_REG_ADDR(NAND_DC)
+#define P_NAND_ADR		CBUS_REG_ADDR(NAND_ADR)
+#define P_NAND_DL		CBUS_REG_ADDR(NAND_DL)
+#define P_NAND_DH		CBUS_REG_ADDR(NAND_DH)
+#define P_NAND_CADR		CBUS_REG_ADDR(NAND_CADR)
+#define P_NAND_SADR		CBUS_REG_ADDR(NAND_SADR)
+
+
+#endif //__MACH_MESON_NAND_REGS_H
diff --git a/arch/arm/mach-meson6tv/include/mach/pctl.h b/arch/arm/mach-meson6tv/include/mach/pctl.h
new file mode 100755
index 000000000000..4b759ea5ee06
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/pctl.h
@@ -0,0 +1,127 @@
+#ifdef DDR_PCTL
+#else
+
+#define DDR_PCTL
+#define PCTL_SCFG_ADDR              0x000
+#define PCTL_SCTL_ADDR              0x004
+#define PCTL_STAT_ADDR              0x008
+#define PCTL_MCMD_ADDR              0x040
+#define PCTL_POWCTL_ADDR            0x044
+#define PCTL_POWSTAT_ADDR           0x048
+#define PCTL_MCFG_ADDR              0x080
+#define PCTL_PPCFG_ADDR             0x084
+#define PCTL_MSTAT_ADDR             0x088
+#define PCTL_ODTCFG_ADDR            0x08c
+#define PCTL_DQSECFG_ADDR           0x090
+#define PCTL_DTUPDES_ADDR           0x094
+#define PCTL_DTUNA_ADDR             0x098
+#define PCTL_DTUNE_ADDR             0x09c
+#define PCTL_DTUPRD0_ADDR           0x0a0
+#define PCTL_DTUPRD1_ADDR           0x0a4
+#define PCTL_DTUPRD2_ADDR           0x0a8
+#define PCTL_DTUPRD3_ADDR           0x0ac
+#define PCTL_DTUAWDT_ADDR           0x0b0
+#define PCTL_TOGCNT1U_ADDR          0x0c0
+#define PCTL_TINIT_ADDR             0x0c4
+#define PCTL_TRSTH_ADDR             0x0c8
+#define PCTL_TOGCNT100N_ADDR        0x0cc
+#define PCTL_TREFI_ADDR             0x0d0
+#define PCTL_TMRD_ADDR              0x0d4
+#define PCTL_TRFC_ADDR              0x0d8
+#define PCTL_TRP_ADDR               0x0dc
+#define PCTL_TRTW_ADDR              0x0e0
+#define PCTL_TAL_ADDR               0x0e4
+#define PCTL_TCL_ADDR               0x0e8
+#define PCTL_TCWL_ADDR              0x0ec
+#define PCTL_TRAS_ADDR              0x0f0
+#define PCTL_TRC_ADDR               0x0f4
+#define PCTL_TRCD_ADDR              0x0f8
+#define PCTL_TRRD_ADDR              0x0fc
+#define PCTL_TRTP_ADDR              0x100
+#define PCTL_TWR_ADDR               0x104
+#define PCTL_TWTR_ADDR              0x108
+#define PCTL_TEXSR_ADDR             0x10c
+#define PCTL_TXP_ADDR               0x110
+#define PCTL_TXPDLL_ADDR            0x114
+#define PCTL_TZQCS_ADDR             0x118
+#define PCTL_TZQCSI_ADDR            0x11c
+#define PCTL_TDQS_ADDR              0x120
+#define PCTL_TCKSRE_ADDR            0x124
+#define PCTL_TCKSRX_ADDR            0x128
+#define PCTL_TCKE_ADDR              0x12c
+#define PCTL_TMOD_ADDR              0x130
+#define PCTL_TRSTL_ADDR             0x134
+#define PCTL_TZQCL_ADDR             0x138
+#define PCTL_DWLCFG0_ADDR           0x170
+#define PCTL_DWLCFG1_ADDR           0x174
+#define PCTL_DWLCFG2_ADDR           0x178
+#define PCTL_DWLCFG3_ADDR           0x17c
+#define PCTL_ECCCFG_ADDR            0x180
+#define PCTL_ECCTST_ADDR            0x184
+#define PCTL_ECCCLR_ADDR            0x188
+#define PCTL_ECCLOG_ADDR            0x18c
+#define PCTL_ADDRMAP_ADDR           0x1c0
+#define PCTL_IDDEC0_ADDR            0x1c4
+#define PCTL_IDDEC1_ADDR            0x1c8
+#define PCTL_DTUWACTL_ADDR          0x200
+#define PCTL_DTURACTL_ADDR          0x204
+#define PCTL_DTUCFG_ADDR            0x208
+#define PCTL_DTUECTL_ADDR           0x20c
+#define PCTL_DTUWD0_ADDR            0x210
+#define PCTL_DTUWD1_ADDR            0x214
+#define PCTL_DTUWD2_ADDR            0x218
+#define PCTL_DTUWD3_ADDR            0x21c
+#define PCTL_DTUWDM_ADDR            0x220
+#define PCTL_DTURD0_ADDR            0x224
+#define PCTL_DTURD1_ADDR            0x228
+#define PCTL_DTURD2_ADDR            0x22c
+#define PCTL_DTURD3_ADDR            0x230
+#define PCTL_DTULFSRWD_ADDR         0x234
+#define PCTL_DTULFSRRD_ADDR         0x238
+#define PCTL_DTUEAF_ADDR            0x23c
+#define PCTL_PHYCR_ADDR             0x240
+#define PCTL_PHYSR_ADDR             0x244
+#define PCTL_IOCR_ADDR              0x248
+#define PCTL_RSLR0_ADDR             0x24c
+#define PCTL_RSLR1_ADDR             0x250
+#define PCTL_RSLR2_ADDR             0x254
+#define PCTL_RSLR3_ADDR             0x258
+#define PCTL_RDGR0_ADDR             0x25c
+#define PCTL_RDGR1_ADDR             0x260
+#define PCTL_RDGR2_ADDR             0x264
+#define PCTL_RDGR3_ADDR             0x268
+#define PCTL_ZQCR_ADDR              0x26c
+#define PCTL_ZQSR_ADDR              0x270
+#define PCTL_DLLCR_ADDR             0x280
+#define PCTL_DLLCR0_ADDR            0x284
+#define PCTL_DLLCR1_ADDR            0x288
+#define PCTL_DLLCR2_ADDR            0x28c
+#define PCTL_DLLCR3_ADDR            0x290
+#define PCTL_DLLCR4_ADDR            0x294
+#define PCTL_DLLCR5_ADDR            0x298
+#define PCTL_DLLCR6_ADDR            0x29c
+#define PCTL_DLLCR7_ADDR            0x2a0
+#define PCTL_DLLCR8_ADDR            0x2a4
+#define PCTL_DLLCR9_ADDR            0x2a8
+#define PCTL_DQTR0_ADDR             0x2c0
+#define PCTL_DQTR1_ADDR             0x2c4
+#define PCTL_DQTR2_ADDR             0x2c8
+#define PCTL_DQTR3_ADDR             0x2cc
+#define PCTL_DQTR4_ADDR             0x2d0
+#define PCTL_DQTR5_ADDR             0x2d4
+#define PCTL_DQTR6_ADDR             0x2d8
+#define PCTL_DQTR7_ADDR             0x2dc
+#define PCTL_DQTR8_ADDR             0x2e0
+#define PCTL_DQSTR_ADDR             0x2e4
+#define PCTL_DQSNTR_ADDR            0x2e8
+#define PCTL_PHYPVTCFG_ADDR         0x300
+#define PCTL_PHYPVTSTAT_ADDR        0x304
+#define PCTL_PHYTUPDON_ADDR         0x308
+#define PCTL_PHYTUPDDLY_ADDR        0x30c
+#define PCTL_PVTTUPDON_ADDR         0x310
+#define PCTL_PVTTUPDDLY_ADDR        0x314
+#define PCTL_PHYPVTUPDI_ADDR        0x318
+#define PCTL_SCHCFG_ADDR            0x380
+#define PCTL_IPVR_ADDR              0x3f8
+#define PCTL_IPTR_ADDR              0x3fc
+#endif
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/pinmux.h b/arch/arm/mach-meson6tv/include/mach/pinmux.h
new file mode 100755
index 000000000000..f9ed233332b5
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/pinmux.h
@@ -0,0 +1,76 @@
+//      pinmux.h
+//
+//      Copyright 2011 Unknown <jerry.yu@jerryyu-Lenovo>
+//
+//      This program is free software; you can redistribute it and/or modify
+//      it under the terms of the GNU General Public License as published by
+//      the Free Software Foundation; either version 2 of the License, or
+//      (at your option) any later version.
+//
+//      This program is distributed in the hope that it will be useful,
+//      but WITHOUT ANY WARRANTY; without even the implied warranty of
+//      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//      GNU General Public License for more details.
+//
+//      You should have received a copy of the GNU General Public License
+//      along with this program; if not, write to the Free Software
+//      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+//      MA 02110-1301, USA.
+//
+//
+#ifndef __INCLUDE_MACH_MESON3_H_
+#define __INCLUDE_MACH_MESON3_H_
+#include <linux/types.h>
+#define AO				10
+#define PINMUX_REG(n)	n
+#define PINMUX_END_ITEM {.reg=0xffffffff}
+
+
+
+/**
+ * structure and data type
+ */
+typedef struct __pinmux_item{
+	uint32_t reg;
+	uint32_t clrmask;
+	uint32_t setmask;
+}pinmux_item_t;
+struct __pinmux_set_s{
+	bool (* chip_select)(bool);///@todo implement it later .
+	pinmux_item_t * pinmux;
+};
+
+typedef struct __pinmux_set_s pinmux_set_t;
+
+/**
+ * UTIL interface
+ * these function can be implement in a tools
+ */
+ /**
+  * @return NULL is fail
+  * 		errno NOTAVAILABLE ,
+  * 			  SOMEPIN IS LOCKED
+  */
+pinmux_set_t* pinmux_cacl_str(char * pad,char * sig ,...);
+pinmux_set_t* pinmux_cacl_int(uint32_t pad,uint32_t sig ,...);
+pinmux_set_t* pinmux_cacl(char * str);///formate is "pad=sig pad=sig "
+char ** pin_get_list(void);
+char ** sig_get_list(void);
+char * pin_getname(uint32_t pin);
+char * sig_getname(uint32_t sig);
+uint32_t pins_num(void);
+/**
+ * Util Get status function
+ */
+uint32_t pin_sig(uint32_t pin);
+uint32_t sig_pin(uint32_t sig);
+/**
+ * pinmux set function
+ * @return 0, success ,
+ * 		   SOMEPIN IS LOCKED, some pin is locked to the specail feature . You can not change it
+ * 		   NOTAVAILABLE, not available .
+ */
+int32_t pinmux_set(pinmux_set_t *);
+int32_t pinmux_clr(pinmux_set_t *);
+int32_t pinmux_set_locktable(pinmux_set_t*);
+#endif
diff --git a/arch/arm/mach-meson6tv/include/mach/pm.h b/arch/arm/mach-meson6tv/include/mach/pm.h
new file mode 100755
index 000000000000..05823ff0b461
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/pm.h
@@ -0,0 +1,49 @@
+/*
+ * arch/arm/mach-meson6tv/include/mach/gpio.h
+ *
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __MACH_MESON6TV_PM_H
+#define __MACH_MESON6TV_PM_H
+
+/*
+ * Caution: Assembly code in sleep.S makes assumtion on the order
+ * of the members of this structure.
+ */
+struct meson_pm_config {
+	void __iomem *pctl_reg_base;
+	void __iomem *mmc_reg_base;
+	void __iomem *hiu_reg_base;
+	unsigned power_key;
+	unsigned ddr_clk;
+	void __iomem *ddr_reg_backup;
+	unsigned core_voltage_adjust;
+	int sleepcount;
+	void (*set_vccx2)(int power_on);
+	void (*set_exgpio_early_suspend)(int power_on);
+	void (*set_pinmux)(int power_on);
+};
+
+extern unsigned int meson_cpu_suspend_sz;
+extern void meson_cpu_suspend(struct meson_pm_config *);
+extern void power_gate_switch(int flag);
+extern void clk_switch(int flag);
+//extern void pll_switch(int flag);
+extern void early_power_gate_switch(int flag);
+extern void early_clk_switch(int flag);
+//extern void early_pll_switch(int flag);
+#ifdef CONFIG_MESON_SUSPEND
+extern int meson_power_suspend(void);
+#endif /*CONFIG_MESON_SUSPEND*/
+
+#endif // __MACH_MESON6TV_PM_H
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/power_gate.h b/arch/arm/mach-meson6tv/include/mach/power_gate.h
new file mode 100755
index 000000000000..1fc392a623cb
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/power_gate.h
@@ -0,0 +1,884 @@
+/*
+* arch/arm/mach-meson6tv/include/mach/power_gate.h
+*
+* Copyright (C) 2011-2013 Amlogic, Inc.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+
+#ifndef __MACH_MESON6TV_POWER_GATE_H
+#define __MACH_MESON6TV_POWER_GATE_H
+
+#include <mach/am_regs.h>
+#include <mach/clock.h>
+/* clock gate control */
+
+#define CLK_GATE_ON(_MOD) \
+    do{                     \
+        if(GCLK_ref[GCLK_IDX_##_MOD]++ == 0){ \
+            if (0) printk(KERN_INFO "gate on %s %x, %x\n", GCLK_NAME_##_MOD, GCLK_REG_##_MOD, GCLK_MASK_##_MOD); \
+            SET_CBUS_REG_MASK(GCLK_REG_##_MOD, GCLK_MASK_##_MOD); \
+        } \
+    }while(0)
+
+
+#define CLK_GATE_OFF(_MOD) \
+    do{                             \
+        if(GCLK_ref[GCLK_IDX_##_MOD] == 0)    \
+            break;                  \
+        if(--GCLK_ref[GCLK_IDX_##_MOD] == 0){ \
+            if (0) printk(KERN_INFO "gate off %s %x, %x\n", GCLK_NAME_##_MOD, GCLK_REG_##_MOD, GCLK_MASK_##_MOD); \
+            CLEAR_CBUS_REG_MASK(GCLK_REG_##_MOD, GCLK_MASK_##_MOD); \
+        } \
+    }while(0)
+
+#define IS_CLK_GATE_ON(_MOD) (READ_CBUS_REG(GCLK_REG_##_MOD) & (GCLK_MASK_##_MOD))
+#define GATE_INIT(_MOD) GCLK_ref[GCLK_IDX_##_MOD] = IS_CLK_GATE_ON(_MOD)?1:0
+
+#define GCLK_IDX_DDR         0
+#define GCLK_NAME_DDR      "DDR"
+#define GCLK_DEV_DDR      "CLKGATE_DDR"
+#define GCLK_REG_DDR      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_DDR      (1<<0)
+
+#define GCLK_IDX_DOS         1
+#define GCLK_NAME_DOS      "DOS"
+#define GCLK_DEV_DOS      "CLKGATE_DOS"
+#define GCLK_REG_DOS      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_DOS      (1<<1)
+
+#define GCLK_IDX_MIPI_APB_CLK         2   //deleted in m6tv
+#define GCLK_NAME_MIPI_APB_CLK      "MIPI_APB_CLK"
+#define GCLK_DEV_MIPI_APB_CLK      "CLKGATE_MIPI_APB_CLK"
+#define GCLK_REG_MIPI_APB_CLK      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_MIPI_APB_CLK      (1<<2)
+
+#define GCLK_IDX_MIPI_SYS_CLK         3  //deleted in m6tv
+#define GCLK_NAME_MIPI_SYS_CLK      "MIPI_SYS_CLK"
+#define GCLK_DEV_MIPI_SYS_CLK      "CLKGATE_MIPI_SYS_CLK"
+#define GCLK_REG_MIPI_SYS_CLK      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_MIPI_SYS_CLK      (1<<3)
+
+#define GCLK_IDX_AHB_BRIDGE         4
+#define GCLK_NAME_AHB_BRIDGE      "AHB_BRIDGE"
+#define GCLK_DEV_AHB_BRIDGE      "CLKGATE_AHB_BRIDGE"
+#define GCLK_REG_AHB_BRIDGE      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_AHB_BRIDGE      (1<<4)
+
+#define GCLK_IDX_ISA         5
+#define GCLK_NAME_ISA      "ISA"
+#define GCLK_DEV_ISA      "CLKGATE_ISA"
+#define GCLK_REG_ISA      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_ISA      (1<<5)
+
+#define GCLK_IDX_APB_CBUS         6
+#define GCLK_NAME_APB_CBUS      "APB_CBUS"
+#define GCLK_DEV_APB_CBUS      "CLKGATE_APB_CBUS"
+#define GCLK_REG_APB_CBUS      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_APB_CBUS      (1<<6)
+
+#define GCLK_IDX__1200XXX       7
+#define GCLK_NAME__1200XXX      "_1200XXX"
+#define GCLK_DEV__1200XXX      "CLKGATE__1200XXX"
+#define GCLK_REG__1200XXX      (HHI_GCLK_MPEG0)
+#define GCLK_MASK__1200XXX      (1<<7)
+
+#define GCLK_IDX_SPICC         8
+#define GCLK_NAME_SPICC      "SPICC"
+#define GCLK_DEV_SPICC      "CLKGATE_SPICC"
+#define GCLK_REG_SPICC      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_SPICC      (1<<8)
+
+#define GCLK_IDX_I2C         9
+#define GCLK_NAME_I2C      "I2C"
+#define GCLK_DEV_I2C      "CLKGATE_I2C"
+#define GCLK_REG_I2C      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_I2C      (1<<9)
+
+#define GCLK_IDX_SAR_ADC         10
+#define GCLK_NAME_SAR_ADC      "SAR_ADC"
+#define GCLK_DEV_SAR_ADC      "CLKGATE_SAR_ADC"
+#define GCLK_REG_SAR_ADC      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_SAR_ADC      (1<<10)
+
+#define GCLK_IDX_SMART_CARD_MPEG_DOMAIN         11
+#define GCLK_NAME_SMART_CARD_MPEG_DOMAIN      "SMART_CARD_MPEG_DOMAIN"
+#define GCLK_DEV_SMART_CARD_MPEG_DOMAIN      "CLKGATE_SMART_CARD_MPEG_DOMAIN"
+#define GCLK_REG_SMART_CARD_MPEG_DOMAIN      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_SMART_CARD_MPEG_DOMAIN      (1<<11)
+
+#define GCLK_IDX_RANDOM_NUM_GEN         12 // change to 1054 bit 21
+#define GCLK_NAME_RANDOM_NUM_GEN      "RANDOM_NUM_GEN"
+#define GCLK_DEV_RANDOM_NUM_GEN      "CLKGATE_RANDOM_NUM_GEN"
+#define GCLK_REG_RANDOM_NUM_GEN      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_RANDOM_NUM_GEN      (1<<12)
+
+#define GCLK_IDX_UART0         13
+#define GCLK_NAME_UART0      "UART0"
+#define GCLK_DEV_UART0      "CLKGATE_UART0"
+#define GCLK_REG_UART0      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_UART0      (1<<13)
+
+#define GCLK_IDX_SDHC         14
+#define GCLK_NAME_SDHC      "SDHC"
+#define GCLK_DEV_SDHC      "CLKGATE_SDHC"
+#define GCLK_REG_SDHC      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_SDHC      (1<<14)
+
+#define GCLK_IDX_STREAM         15
+#define GCLK_NAME_STREAM      "STREAM"
+#define GCLK_DEV_STREAM      "CLKGATE_STREAM"
+#define GCLK_REG_STREAM      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_STREAM      (1<<15)
+
+#define GCLK_IDX_ASYNC_FIFO         16
+#define GCLK_NAME_ASYNC_FIFO      "ASYNC_FIFO"
+#define GCLK_DEV_ASYNC_FIFO      "CLKGATE_ASYNC_FIFO"
+#define GCLK_REG_ASYNC_FIFO      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_ASYNC_FIFO      (1<<16)
+
+#define GCLK_IDX_SDIO         17
+#define GCLK_NAME_SDIO      "SDIO"
+#define GCLK_DEV_SDIO      "CLKGATE_SDIO"
+#define GCLK_REG_SDIO      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_SDIO      (1<<17)
+
+#define GCLK_IDX_AUD_BUF         18
+#define GCLK_NAME_AUD_BUF      "AUD_BUF"
+#define GCLK_DEV_AUD_BUF      "CLKGATE_AUD_BUF"
+#define GCLK_REG_AUD_BUF      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_AUD_BUF      (1<<18)
+
+#define GCLK_IDX_HIU_PARSER         19
+#define GCLK_NAME_HIU_PARSER      "HIU_PARSER"
+#define GCLK_DEV_HIU_PARSER      "CLKGATE_HIU_PARSER"
+#define GCLK_REG_HIU_PARSER      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_HIU_PARSER      (1<<19)
+
+#define GCLK_IDX_RESERVED0         20
+#define GCLK_NAME_RESERVED0      "RESERVED0"
+#define GCLK_DEV_RESERVED0      "CLKGATE_RESERVED0"
+#define GCLK_REG_RESERVED0      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_RESERVED0      (1<<20)
+
+#define GCLK_IDX_HDMI_RX         21
+#define GCLK_NAME_HDMI_RX       "HDMI_RX " //new
+#define GCLK_DEV_HDMI_RX       "CLKGATE_HDMI_RX "
+#define GCLK_REG_HDMI_RX       (HHI_GCLK_MPEG0)
+#define GCLK_MASK_HDMI_RX       (1<<21)
+
+#define GCLK_IDX_BT656_IN         22
+#define GCLK_NAME_BT656_IN      "BT656_IN"
+#define GCLK_DEV_BT656_IN      "CLKGATE_BT656_IN"
+#define GCLK_REG_BT656_IN      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_BT656_IN      (1<<22)
+
+#define GCLK_IDX_ASSIST_MISC         23
+#define GCLK_NAME_ASSIST_MISC      "ASSIST_MISC"
+#define GCLK_DEV_ASSIST_MISC      "CLKGATE_ASSIST_MISC"
+#define GCLK_REG_ASSIST_MISC      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_ASSIST_MISC      (1<<23)
+
+#define GCLK_IDX_VENC_I_TOP         24
+#define GCLK_NAME_VENC_I_TOP      "VENC_I_TOP"
+#define GCLK_DEV_VENC_I_TOP      "CLKGATE_VENC_I_TOP"
+#define GCLK_REG_VENC_I_TOP      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_VENC_I_TOP      (1<<24)
+
+#define GCLK_IDX_VENC_P_TOP         25
+#define GCLK_NAME_VENC_P_TOP      "VENC_P_TOP"
+#define GCLK_DEV_VENC_P_TOP      "CLKGATE_VENC_P_TOP"
+#define GCLK_REG_VENC_P_TOP      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_VENC_P_TOP      (1<<25)
+
+#define GCLK_IDX_VENC_T_TOP         26
+#define GCLK_NAME_VENC_T_TOP      "VENC_T_TOP"
+#define GCLK_DEV_VENC_T_TOP      "CLKGATE_VENC_T_TOP"
+#define GCLK_REG_VENC_T_TOP      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_VENC_T_TOP      (1<<26)
+
+#define GCLK_IDX_VENC_DAC         27
+#define GCLK_NAME_VENC_DAC      "VENC_DAC"
+#define GCLK_DEV_VENC_DAC      "CLKGATE_VENC_DAC"
+#define GCLK_REG_VENC_DAC      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_VENC_DAC      (1<<27)
+
+#define GCLK_IDX_VI_CORE         28
+#define GCLK_NAME_VI_CORE      "VI_CORE"
+#define GCLK_DEV_VI_CORE      "CLKGATE_VI_CORE"
+#define GCLK_REG_VI_CORE      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_VI_CORE      (1<<28)
+
+#define GCLK_IDX_RESERVED1         29
+#define GCLK_NAME_RESERVED1      "RESERVED1"
+#define GCLK_DEV_RESERVED1      "CLKGATE_RESERVED1"
+#define GCLK_REG_RESERVED1      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_RESERVED1      (1<<29)
+
+#define GCLK_IDX_SPI2         30
+#define GCLK_NAME_SPI2      "SPI2"
+#define GCLK_DEV_SPI2      "CLKGATE_SPI2"
+#define GCLK_REG_SPI2      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_SPI2      (1<<30)
+
+#define GCLK_IDX_ACODEC         31//new
+#define GCLK_NAME_ACODEC      "ACODEC "
+#define GCLK_DEV_ACODEC      "CLKGATE_ACODEC"
+#define GCLK_REG_ACODEC      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_ACODEC      (1<<31)
+/****************************************************************/
+#define GCLK_IDX_PCLK_TVFE         32
+#define GCLK_NAME_PCLK_TVFE      "PCLK_TVFE"
+#define GCLK_DEV_PCLK_TVFE      "CLKGATE_PCLK_TVFE"
+#define GCLK_REG_PCLK_TVFE      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_PCLK_TVFE      (1<<0)
+
+#define GCLK_IDX_SPI1         33
+#define GCLK_NAME_SPI1      "SPI1"
+#define GCLK_DEV_SPI1      "CLKGATE_SPI1"
+#define GCLK_REG_SPI1      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_SPI1      (1<<1)
+
+#define GCLK_IDX_AUD_IN         34
+#define GCLK_NAME_AUD_IN      "AUD_IN"
+#define GCLK_DEV_AUD_IN      "CLKGATE_AUD_IN"
+#define GCLK_REG_AUD_IN      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AUD_IN      (1<<2)
+
+#define GCLK_IDX_ETHERNET         35
+#define GCLK_NAME_ETHERNET      "ETHERNET"
+#define GCLK_DEV_ETHERNET      "CLKGATE_ETHERNET"
+#define GCLK_REG_ETHERNET      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_ETHERNET      (1<<3)
+
+#define GCLK_IDX_DEMUX         36
+#define GCLK_NAME_DEMUX      "DEMUX"
+#define GCLK_DEV_DEMUX      "CLKGATE_DEMUX"
+#define GCLK_REG_DEMUX      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_DEMUX      (1<<4)
+
+#define GCLK_IDX_RESERVED2         37
+#define GCLK_NAME_RESERVED2      "RESERVED2"
+#define GCLK_DEV_RESERVED2      "CLKGATE_RESERVED2"
+#define GCLK_REG_RESERVED2      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_RESERVED2      (1<<5)
+
+#define GCLK_IDX_AIU_AI_TOP_GLUE         38
+#define GCLK_NAME_AIU_AI_TOP_GLUE      "AIU_AI_TOP_GLUE"
+#define GCLK_DEV_AIU_AI_TOP_GLUE      "CLKGATE_AIU_AI_TOP_GLUE"
+#define GCLK_REG_AIU_AI_TOP_GLUE      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AIU_AI_TOP_GLUE      (1<<6)
+
+#define GCLK_IDX_AIU_IEC958         39
+#define GCLK_NAME_AIU_IEC958      "AIU_IEC958"
+#define GCLK_DEV_AIU_IEC958      "CLKGATE_AIU_IEC958"
+#define GCLK_REG_AIU_IEC958      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AIU_IEC958      (1<<7)
+
+#define GCLK_IDX_AIU_I2S_OUT         40
+#define GCLK_NAME_AIU_I2S_OUT      "AIU_I2S_OUT"
+#define GCLK_DEV_AIU_I2S_OUT      "CLKGATE_AIU_I2S_OUT"
+#define GCLK_REG_AIU_I2S_OUT      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AIU_I2S_OUT      (1<<8)
+
+#define GCLK_IDX_AIU_AMCLK_MEASURE         41
+#define GCLK_NAME_AIU_AMCLK_MEASURE      "AIU_AMCLK_MEASURE"
+#define GCLK_DEV_AIU_AMCLK_MEASURE      "CLKGATE_AIU_AMCLK_MEASURE"
+#define GCLK_REG_AIU_AMCLK_MEASURE      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AIU_AMCLK_MEASURE      (1<<9)
+
+#define GCLK_IDX_AIU_AIFIFO2         42
+#define GCLK_NAME_AIU_AIFIFO2      "AIU_AIFIFO2"
+#define GCLK_DEV_AIU_AIFIFO2      "CLKGATE_AIU_AIFIFO2"
+#define GCLK_REG_AIU_AIFIFO2      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AIU_AIFIFO2      (1<<10)
+
+#define GCLK_IDX_AIU_AUD_MIXER         43
+#define GCLK_NAME_AIU_AUD_MIXER      "AIU_AUD_MIXER"
+#define GCLK_DEV_AIU_AUD_MIXER      "CLKGATE_AIU_AUD_MIXER"
+#define GCLK_REG_AIU_AUD_MIXER      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AIU_AUD_MIXER      (1<<11)
+
+#define GCLK_IDX_AIU_MIXER_REG         44
+#define GCLK_NAME_AIU_MIXER_REG      "AIU_MIXER_REG"
+#define GCLK_DEV_AIU_MIXER_REG      "CLKGATE_AIU_MIXER_REG"
+#define GCLK_REG_AIU_MIXER_REG      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AIU_MIXER_REG      (1<<12)
+
+#define GCLK_IDX_AIU_ADC         45
+#define GCLK_NAME_AIU_ADC      "AIU_ADC"
+#define GCLK_DEV_AIU_ADC      "CLKGATE_AIU_ADC"
+#define GCLK_REG_AIU_ADC      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AIU_ADC      (1<<13)
+
+#define GCLK_IDX_BLK_MOV         46
+#define GCLK_NAME_BLK_MOV      "BLK_MOV"
+#define GCLK_DEV_BLK_MOV      "CLKGATE_BLK_MOV"
+#define GCLK_REG_BLK_MOV      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_BLK_MOV      (1<<14)
+
+#define GCLK_IDX_RESERVED3         47
+#define GCLK_NAME_RESERVED3      "RESERVED3"
+#define GCLK_DEV_RESERVED3      "CLKGATE_RESERVED3"
+#define GCLK_REG_RESERVED3      (HHI_GCLK_MPEG0)
+#define GCLK_MASK_RESERVED3      (1<<15)
+
+#define GCLK_IDX_UART1         48
+#define GCLK_NAME_UART1      "UART1"
+#define GCLK_DEV_UART1      "CLKGATE_UART1"
+#define GCLK_REG_UART1      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_UART1      (1<<16)
+
+#define GCLK_IDX_LED_PWM         49 //deleted
+#define GCLK_NAME_LED_PWM      "LED_PWM"
+#define GCLK_DEV_LED_PWM      "CLKGATE_LED_PWM"
+#define GCLK_REG_LED_PWM      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_LED_PWM      (1<<17)
+
+#define GCLK_IDX_VGHL_PWM         50 //deleted
+#define GCLK_NAME_VGHL_PWM      "VGHL_PWM"
+#define GCLK_DEV_VGHL_PWM      "CLKGATE_VGHL_PWM"
+#define GCLK_REG_VGHL_PWM      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_VGHL_PWM      (1<<18)
+
+#define GCLK_IDX_RESERVED4        51
+#define GCLK_NAME_RESERVED4      "RESERVED4"
+#define GCLK_DEV_RESERVED4      "CLKGATE_RESERVED4"
+#define GCLK_REG_RESERVED4      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_RESERVED4      (1<<19)
+
+#define GCLK_IDX_GE2D         52
+#define GCLK_NAME_GE2D      "GE2D"
+#define GCLK_DEV_GE2D      "CLKGATE_GE2D"
+#define GCLK_REG_GE2D      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_GE2D      (1<<20)
+
+#define GCLK_IDX_USB0         53
+#define GCLK_NAME_USB0      "USB0"
+#define GCLK_DEV_USB0      "CLKGATE_USB0"
+#define GCLK_REG_USB0      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_USB0      (1<<21)
+
+#define GCLK_IDX_USB1         54
+#define GCLK_NAME_USB1      "USB1"
+#define GCLK_DEV_USB1      "CLKGATE_USB1"
+#define GCLK_REG_USB1      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_USB1      (1<<22)
+
+#define GCLK_IDX_RESET         55
+#define GCLK_NAME_RESET      "RESET"
+#define GCLK_DEV_RESET      "CLKGATE_RESET"
+#define GCLK_REG_RESET      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_RESET      (1<<23)
+
+#define GCLK_IDX_NAND         56
+#define GCLK_NAME_NAND      "NAND"
+#define GCLK_DEV_NAND      "CLKGATE_NAND"
+#define GCLK_REG_NAND      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_NAND      (1<<24)
+
+#define GCLK_IDX_HIU_PARSER_TOP         57
+#define GCLK_NAME_HIU_PARSER_TOP      "HIU_PARSER_TOP"
+#define GCLK_DEV_HIU_PARSER_TOP      "CLKGATE_HIU_PARSER_TOP"
+#define GCLK_REG_HIU_PARSER_TOP      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_HIU_PARSER_TOP      (1<<25)
+
+#define GCLK_IDX_USB_GENERAL         58//new
+#define GCLK_NAME_USB_GENERAL       "USB_GENERAL "
+#define GCLK_DEV_USB_GENERAL       "CLKGATE_USB_GENERAL "
+#define GCLK_REG_USB_GENERAL       (HHI_GCLK_MPEG1)
+#define GCLK_MASK_USB_GENERAL       (1<<26)
+
+#define GCLK_IDX_MIPI_PHY         59 //deleted
+#define GCLK_NAME_MIPI_PHY      "MIPI_PHY"
+#define GCLK_DEV_MIPI_PHY      "CLKGATE_MIPI_PHY"
+#define GCLK_REG_MIPI_PHY      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_MIPI_PHY      (1<<27)
+
+#define GCLK_IDX_VIDEO_IN         60
+#define GCLK_NAME_VIDEO_IN      "VIDEO_IN"
+#define GCLK_DEV_VIDEO_IN      "CLKGATE_VIDEO_IN"
+#define GCLK_REG_VIDEO_IN      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_VIDEO_IN      (1<<28)
+
+#define GCLK_IDX_AHB_ARB0         61
+#define GCLK_NAME_AHB_ARB0      "AHB_ARB0"
+#define GCLK_DEV_AHB_ARB0      "CLKGATE_AHB_ARB0"
+#define GCLK_REG_AHB_ARB0      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_AHB_ARB0      (1<<29)
+
+#define GCLK_IDX_EFUSE         62
+#define GCLK_NAME_EFUSE      "EFUSE"
+#define GCLK_DEV_EFUSE      "CLKGATE_EFUSE"
+#define GCLK_REG_EFUSE      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_EFUSE      (1<<30)
+
+#define GCLK_IDX_ROM_CLK         63
+#define GCLK_NAME_ROM_CLK      "ROM_CLK"
+#define GCLK_DEV_ROM_CLK      "CLKGATE_ROM_CLK"
+#define GCLK_REG_ROM_CLK      (HHI_GCLK_MPEG1)
+#define GCLK_MASK_ROM_CLK      (1<<31)
+
+/**************************************************************/
+
+#define GCLK_IDX_RESERVED5         64
+#define GCLK_NAME_RESERVED5      "RESERVED5"
+#define GCLK_DEV_RESERVED5      "CLKGATE_RESERVED5"
+#define GCLK_REG_RESERVED5      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_RESERVED5      (1<<0)
+
+#define GCLK_IDX_AHB_DATA_BUS         65
+#define GCLK_NAME_AHB_DATA_BUS      "AHB_DATA_BUS"
+#define GCLK_DEV_AHB_DATA_BUS      "CLKGATE_AHB_DATA_BUS"
+#define GCLK_REG_AHB_DATA_BUS      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_AHB_DATA_BUS      (1<<1)
+
+#define GCLK_IDX_AHB_CONTROL_BUS         66
+#define GCLK_NAME_AHB_CONTROL_BUS      "AHB_CONTROL_BUS"
+#define GCLK_DEV_AHB_CONTROL_BUS      "CLKGATE_AHB_CONTROL_BUS"
+#define GCLK_REG_AHB_CONTROL_BUS      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_AHB_CONTROL_BUS      (1<<2)
+
+#define GCLK_IDX_HDMI_INTR_SYNC         67
+#define GCLK_NAME_HDMI_INTR_SYNC      "HDMI_INTR_SYNC"
+#define GCLK_DEV_HDMI_INTR_SYNC      "CLKGATE_HDMI_INTR_SYNC"
+#define GCLK_REG_HDMI_INTR_SYNC      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_HDMI_INTR_SYNC      (1<<3)
+
+#define GCLK_IDX_HDMI_PCLK         68
+#define GCLK_NAME_HDMI_PCLK      "HDMI_PCLK"
+#define GCLK_DEV_HDMI_PCLK      "CLKGATE_HDMI_PCLK"
+#define GCLK_REG_HDMI_PCLK      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_HDMI_PCLK      (1<<4)
+
+#define GCLK_IDX_RESERVED6         69
+#define GCLK_NAME_RESERVED6      "RESERVED6"
+#define GCLK_DEV_RESERVED6      "CLKGATE_RESERVED6"
+#define GCLK_REG_RESERVED6     (HHI_GCLK_MPEG2)
+#define GCLK_MASK_RESERVED6     (1<<5)
+
+#define GCLK_IDX_USB3_TO_DDR         70//new
+#define GCLK_NAME_USB3_TO_DDR      "USB3_TO_DDR"
+#define GCLK_DEV_USB3_TO_DDR      "CLKGATE_USB3_TO_DDR"
+#define GCLK_REG_USB3_TO_DDR      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_USB3_TO_DDR      (1<<6)
+
+#define GCLK_IDX_USB2_TO_DDR         71//new
+#define GCLK_NAME_USB2_TO_DDR      "USB2_TO_DDR"
+#define GCLK_DEV_USB2_TO_DDR      "CLKGATE_USB2_TO_DDR"
+#define GCLK_REG_USB2_TO_DDR      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_USB2_TO_DDR     (1<<7)
+
+#define GCLK_IDX_MISC_USB1_TO_DDR         72
+#define GCLK_NAME_MISC_USB1_TO_DDR      "MISC_USB1_TO_DDR"
+#define GCLK_DEV_MISC_USB1_TO_DDR      "CLKGATE_MISC_USB1_TO_DDR"
+#define GCLK_REG_MISC_USB1_TO_DDR      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_MISC_USB1_TO_DDR      (1<<8)
+
+#define GCLK_IDX_MISC_USB0_TO_DDR         73
+#define GCLK_NAME_MISC_USB0_TO_DDR      "MISC_USB0_TO_DDR"
+#define GCLK_DEV_MISC_USB0_TO_DDR      "CLKGATE_MISC_USB0_TO_DDR"
+#define GCLK_REG_MISC_USB0_TO_DDR      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_MISC_USB0_TO_DDR      (1<<9)
+
+#define GCLK_IDX_AIU_PCLK        74//new
+#define GCLK_NAME_AIU_PCLK      "AIU_PCLK"
+#define GCLK_DEV_AIU_PCLK      "CLKGATE_AIU_PCLK"
+#define GCLK_REG_AIU_PCLK      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_AIU_PCLK      (1<<10)
+
+#define GCLK_IDX_MMC_PCLK         75
+#define GCLK_NAME_MMC_PCLK      "MMC_PCLK"
+#define GCLK_DEV_MMC_PCLK      "CLKGATE_MMC_PCLK"
+#define GCLK_REG_MMC_PCLK      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_MMC_PCLK      (1<<11)
+
+#define GCLK_IDX_MISC_DVIN         76
+#define GCLK_NAME_MISC_DVIN      "MISC_DVIN"
+#define GCLK_DEV_MISC_DVIN      "CLKGATE_MISC_DVIN"
+#define GCLK_REG_MISC_DVIN      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_MISC_DVIN      (1<<12)
+
+#define GCLK_IDX_MISC_RDMA         77
+#define GCLK_NAME_MISC_RDMA      "MISC_RDMA"
+#define GCLK_DEV_MISC_RDMA      "CLKGATE_MISC_RDMA"
+#define GCLK_REG_MISC_RDMA      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_MISC_RDMA      (1<<13)
+
+#define GCLK_IDX_RESERVED7        78
+#define GCLK_NAME_RESERVED7      "RESERVED7"
+#define GCLK_DEV_RESERVED7      "CLKGATE_RESERVED7"
+#define GCLK_REG_RESERVED7      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_RESERVED7      (1<<14)
+
+#define GCLK_IDX_UART2         79
+#define GCLK_NAME_UART2      "UART2"
+#define GCLK_DEV_UART2      "CLKGATE_UART2"
+#define GCLK_REG_UART2      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_UART2      (1<<15)
+
+#define GCLK_IDX_VENCI_INT         80
+#define GCLK_NAME_VENCI_INT      "VENCI_INT"
+#define GCLK_DEV_VENCI_INT      "CLKGATE_VENCI_INT"
+#define GCLK_REG_VENCI_INT      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_VENCI_INT      (1<<16)
+
+#define GCLK_IDX_VIU2         81
+#define GCLK_NAME_VIU2      "VIU2"
+#define GCLK_DEV_VIU2      "CLKGATE_VIU2"
+#define GCLK_REG_VIU2      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_VIU2      (1<<17)
+
+#define GCLK_IDX_VENCP_INT         82
+#define GCLK_NAME_VENCP_INT      "VENCP_INT"
+#define GCLK_DEV_VENCP_INT      "CLKGATE_VENCP_INT"
+#define GCLK_REG_VENCP_INT      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_VENCP_INT      (1<<18)
+
+#define GCLK_IDX_VENCT_INT         83
+#define GCLK_NAME_VENCT_INT      "VENCT_INT"
+#define GCLK_DEV_VENCT_INT      "CLKGATE_VENCT_INT"
+#define GCLK_REG_VENCT_INT      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_VENCT_INT      (1<<19)
+
+#define GCLK_IDX_VENCL_INT         84
+#define GCLK_NAME_VENCL_INT      "VENCL_INT"
+#define GCLK_DEV_VENCL_INT      "CLKGATE_VENCL_INT"
+#define GCLK_REG_VENCL_INT      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_VENCL_INT      (1<<20)
+
+#define GCLK_IDX_VENC_L_TOP         85
+#define GCLK_NAME_VENC_L_TOP      "VENC_L_TOP"
+#define GCLK_DEV_VENC_L_TOP      "CLKGATE_VENC_L_TOP"
+#define GCLK_REG_VENC_L_TOP      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_VENC_L_TOP      (1<<21)
+
+#define GCLK_IDX_UART3        86
+#define GCLK_NAME_UART3      "UART3"
+#define GCLK_DEV_UART3      "CLKGATE_UART3"
+#define GCLK_REG_UART3      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_UART3      (1<<22)
+
+#define GCLK_IDX_USB2_OTG_CON        87 //new
+#define GCLK_NAME_USB2_OTG_CON      "USB2_OTG_CON"
+#define GCLK_DEV_USB2_OTG_CON      "CLKGATE_USB2_OTG_CON"
+#define GCLK_REG_USB2_OTG_CON      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_USB2_OTG_CON     (1<<23)
+
+#define GCLK_IDX_USB3_OTG_CON        88 //new
+#define GCLK_NAME_USB3_OTG_CON      "USB3_OTG_CON"
+#define GCLK_DEV_USB3_OTG_CON      "CLKGATE_USB3_OTG_CON"
+#define GCLK_REG_USB3_OTG_CON      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_USB3_OTG_CON      (1<<24)
+
+#define GCLK_IDX_VPU_MISC        89 //new
+#define GCLK_NAME_VPU_MISC      "VPU_MISC"
+#define GCLK_DEV_VPU_MISC      "CLKGATE_VPU_MISC"
+#define GCLK_REG_VPU_MISC      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_VPU_MISC      (1<<25)
+
+#define GCLK_IDX_APB_TO_APB3        90 //new
+#define GCLK_NAME_APB_TO_APB3      "APB_TO_APB3"
+#define GCLK_DEV_APB_TO_APB3      "CLKGATE_APB_TO_APB3"
+#define GCLK_REG_APB_TO_APB3      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_APB_TO_APB3      (1<<26)
+
+#define GCLK_IDX_APB3_ON        91
+#define GCLK_NAME_APB3_ON      "APB3_ON" //new
+#define GCLK_DEV_APB3_ON      "CLKGATE_APB3_ON"
+#define GCLK_REG_APB3_ON      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_APB3_ON      (1<<27)
+
+#define GCLK_IDX_DEMOD_PCLK        92 //new
+#define GCLK_NAME_DEMOD_PCLK      "DEMOD_PCLK"
+#define GCLK_DEV_DEMOD_PCLK      "CLKGATE_DEMOD_PCLK"
+#define GCLK_REG_DEMOD_PCLK      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_DEMOD_PCLK      (1<<28)
+
+#define GCLK_IDX_RESERVED8        93
+#define GCLK_NAME_RESERVED8      "RESERVED8"
+#define GCLK_DEV_RESERVED8      "CLKGATE_RESERVED8"
+#define GCLK_REG_RESERVED8      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_RESERVED8      (1<<29)
+
+#define GCLK_IDX_RESERVED9        94
+#define GCLK_NAME_RESERVED9      "RESERVED9"
+#define GCLK_DEV_RESERVED9      "CLKGATE_RESERVED9"
+#define GCLK_REG_RESERVED9      (HHI_GCLK_MPEG2)
+#define GCLK_MASK_RESERVED9      (1<<30)
+
+#define GCLK_IDX_RESERVED10        95
+#define GCLK_NAME_RESERVED10      "RESERVED10"
+#define GCLK_DEV_RESERVED10      "CLKGATE_RESERVED10"
+#define GCLK_REG_RESERVED10     (HHI_GCLK_MPEG2)
+#define GCLK_MASK_RESERVED10      (1<<31)
+
+
+/**************************************************************/
+#define GCLK_IDX_RESERVED11         96
+#define GCLK_NAME_RESERVED11      "RESERVED11"
+#define GCLK_DEV_RESERVED11      "CLKGATE_RESERVED11"
+#define GCLK_REG_RESERVED11      (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED11      (1<<0)
+
+#define GCLK_IDX_VCLK2_VENCI         97
+#define GCLK_NAME_VCLK2_VENCI      "VCLK2_VENCI"
+#define GCLK_DEV_VCLK2_VENCI      "CLKGATE_VCLK2_VENCI"
+#define GCLK_REG_VCLK2_VENCI      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_VENCI      (1<<1)
+
+#define GCLK_IDX_VCLK2_VENCI1        98
+#define GCLK_NAME_VCLK2_VENCI1      "VCLK2_VENCI1"
+#define GCLK_DEV_VCLK2_VENCI1      "CLKGATE_VCLK2_VENCI1"
+#define GCLK_REG_VCLK2_VENCI1      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_VENCI1      (1<<2)
+
+#define GCLK_IDX_VCLK2_VENCP         99
+#define GCLK_NAME_VCLK2_VENCP      "VCLK2_VENCP"
+#define GCLK_DEV_VCLK2_VENCP      "CLKGATE_VCLK2_VENCP"
+#define GCLK_REG_VCLK2_VENCP      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_VENCP      (1<<3)
+
+#define GCLK_IDX_VCLK2_VENCP1         100
+#define GCLK_NAME_VCLK2_VENCP1      "VCLK2_VENCP1"
+#define GCLK_DEV_VCLK2_VENCP1      "CLKGATE_VCLK2_VENCP1"
+#define GCLK_REG_VCLK2_VENCP1      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_VENCP1      (1<<4)
+
+#define GCLK_IDX_VCLK2_VENCT         101
+#define GCLK_NAME_VCLK2_VENCT      "VCLK2_VENCT"
+#define GCLK_DEV_VCLK2_VENCT      "CLKGATE_VCLK2_VENCT"
+#define GCLK_REG_VCLK2_VENCT      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_VENCT      (1<<5)
+
+#define GCLK_IDX_VCLK2_VENCT1         102
+#define GCLK_NAME_VCLK2_VENCT1      "VCLK2_VENCT1"
+#define GCLK_DEV_VCLK2_VENCT1      "CLKGATE_VCLK2_VENCT1"
+#define GCLK_REG_VCLK2_VENCT1      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_VENCT1      (1<<6)
+
+#define GCLK_IDX_VCLK2_OTHER         103
+#define GCLK_NAME_VCLK2_OTHER      "VCLK2_OTHER"
+#define GCLK_DEV_VCLK2_OTHER      "CLKGATE_VCLK2_OTHER"
+#define GCLK_REG_VCLK2_OTHER      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_OTHER      (1<<7)
+
+#define GCLK_IDX_VCLK2_ENCI         104
+#define GCLK_NAME_VCLK2_ENCI      "VCLK2_ENCI"
+#define GCLK_DEV_VCLK2_ENCI      "CLKGATE_VCLK2_ENCI"
+#define GCLK_REG_VCLK2_ENCI      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_ENCI      (1<<8)
+
+#define GCLK_IDX_VCLK2_ENCP         105
+#define GCLK_NAME_VCLK2_ENCP      "VCLK2_ENCP"
+#define GCLK_DEV_VCLK2_ENCP      "CLKGATE_VCLK2_ENCP"
+#define GCLK_REG_VCLK2_ENCP      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_ENCP      (1<<9)
+
+#define GCLK_IDX_DAC_CLK         106
+#define GCLK_NAME_DAC_CLK      "DAC_CLK"
+#define GCLK_DEV_DAC_CLK      "CLKGATE_DAC_CLK"
+#define GCLK_REG_DAC_CLK      (HHI_GCLK_OTHER)
+#define GCLK_MASK_DAC_CLK      (1<<10)
+
+#define GCLK_IDX_RESERVED12        107
+#define GCLK_NAME_RESERVED12      "RESERVED12"
+#define GCLK_DEV_RESERVED12     "CLKGATE_RESERVED12"
+#define GCLK_REG_RESERVED12      (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED12     (1<<11)
+
+#define GCLK_IDX_RESERVED13         108
+#define GCLK_NAME_RESERVED13      "RESERVED13"
+#define GCLK_DEV_RESERVED13      "CLKGATE_RESERVED13"
+#define GCLK_REG_RESERVED13      (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED13      (1<<12)
+
+#define GCLK_IDX_RESERVED14         109
+#define GCLK_NAME_RESERVED14       "RESERVED14 "
+#define GCLK_DEV_RESERVED14       "CLKGATE_RESERVED14 "
+#define GCLK_REG_RESERVED14       (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED14       (1<<13)
+
+#define GCLK_IDX_AIU_AOCLK         110
+#define GCLK_NAME_AIU_AOCLK      "AIU_AOCLK"
+#define GCLK_DEV_AIU_AOCLK      "CLKGATE_AIU_AOCLK"
+#define GCLK_REG_AIU_AOCLK      (HHI_GCLK_OTHER)
+#define GCLK_MASK_AIU_AOCLK      (1<<14)
+
+#define GCLK_IDX_AIU_AMCLK         111//deleted
+#define GCLK_NAME_AIU_AMCLK      "AIU_AMCLK"
+#define GCLK_DEV_AIU_AMCLK      "CLKGATE_AIU_AMCLK"
+#define GCLK_REG_AIU_AMCLK      (HHI_GCLK_OTHER)
+#define GCLK_MASK_AIU_AMCLK      (1<<15)
+
+#define GCLK_IDX_AIU_ICE958_AMCLK        112
+#define GCLK_NAME_AIU_ICE958_AMCLK      "AIU_ICE958_AMCLK"
+#define GCLK_DEV_AIU_ICE958_AMCLK      "CLKGATE_AIU_ICE958_AMCLK"
+#define GCLK_REG_AIU_ICE958_AMCLK      (HHI_GCLK_OTHER)
+#define GCLK_MASK_AIU_ICE958_AMCLK      (1<<16)
+
+#define GCLK_IDX_VCLK1_HDMI         113//deleted
+#define GCLK_NAME_VCLK1_HDMI      "VCLK1_HDMI"
+#define GCLK_DEV_VCLK1_HDMI      "CLKGATE_VCLK1_HDMI"
+#define GCLK_REG_VCLK1_HDMI      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK1_HDMI      (1<<17)
+
+#define GCLK_IDX_AIU_AUDIN_SCLK         114//deleted
+#define GCLK_NAME_AIU_AUDIN_SCLK      "AIU_AUDIN_SCLK"
+#define GCLK_DEV_AIU_AUDIN_SCLK      "CLKGATE_AIU_AUDIN_SCLK"
+#define GCLK_REG_AIU_AUDIN_SCLK      (HHI_GCLK_OTHER)
+#define GCLK_MASK_AIU_AUDIN_SCLK      (1<<18)
+
+#define GCLK_IDX_RESERVED15         115
+#define GCLK_NAME_RESERVED15      "RESERVED15"
+#define GCLK_DEV_RESERVED15     "CLKGATE_RESERVED15"
+#define GCLK_REG_RESERVED15      (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED15     (1<<19)
+
+#define GCLK_IDX_ENC480P         116
+#define GCLK_NAME_ENC480P      "ENC480P"
+#define GCLK_DEV_ENC480P      "CLKGATE_ENC480P"
+#define GCLK_REG_ENC480P      (HHI_GCLK_OTHER)
+#define GCLK_MASK_ENC480P      (1<<20)
+
+#define GCLK_IDX_RAND_NUM_GEN         117//new
+#define GCLK_NAME_RAND_NUM_GEN      "RAND_NUM_GEN"
+#define GCLK_DEV_RAND_NUM_GEN      "CLKGATE_RAND_NUM_GEN"
+#define GCLK_REG_RAND_NUM_GEN      (HHI_GCLK_OTHER)
+#define GCLK_MASK_RAND_NUM_GEN      (1<<21)
+
+#define GCLK_IDX_VCLK2_ENCT         118
+#define GCLK_NAME_VCLK2_ENCT      "VCLK2_ENCT"
+#define GCLK_DEV_VCLK2_ENCT      "CLKGATE_VCLK2_ENCT"
+#define GCLK_REG_VCLK2_ENCT      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_ENCT      (1<<22)
+
+#define GCLK_IDX_VCLK2_ENCL         119
+#define GCLK_NAME_VCLK2_ENCL      "VCLK2_ENCL"
+#define GCLK_DEV_VCLK2_ENCL      "CLKGATE_VCLK2_ENCL"
+#define GCLK_REG_VCLK2_ENCL      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_ENCL      (1<<23)
+
+#define GCLK_IDX_MMC_CLK         120
+#define GCLK_NAME_MMC_CLK      "MMC_CLK"
+#define GCLK_DEV_MMC_CLK      "CLKGATE_MMC_CLK"
+#define GCLK_REG_MMC_CLK      (HHI_GCLK_OTHER)
+#define GCLK_MASK_MMC_CLK      (1<<24)
+
+#define GCLK_IDX_VCLK2_VENCL         121
+#define GCLK_NAME_VCLK2_VENCL      "VCLK2_VENCL"
+#define GCLK_DEV_VCLK2_VENCL      "CLKGATE_VCLK2_VENCL"
+#define GCLK_REG_VCLK2_VENCL      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_VENCL      (1<<25)
+
+#define GCLK_IDX_VCLK2_OTHER1         122
+#define GCLK_NAME_VCLK2_OTHER1      "VCLK2_OTHER1"
+#define GCLK_DEV_VCLK2_OTHER1      "CLKGATE_VCLK2_OTHER1"
+#define GCLK_REG_VCLK2_OTHER1      (HHI_GCLK_OTHER)
+#define GCLK_MASK_VCLK2_OTHER1      (1<<26)
+
+#define GCLK_IDX_RESERVED16         123
+#define GCLK_NAME_RESERVED16      "RESERVED16"
+#define GCLK_DEV_RESERVED16      "CLKGATE_RESERVED16"
+#define GCLK_REG_RESERVED16      (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED16      (1<<27)
+
+#define GCLK_IDX_RESERVED17         124
+#define GCLK_NAME_RESERVED17     "RESERVED17"
+#define GCLK_DEV_RESERVED17     "CLKGATE_RESERVED17"
+#define GCLK_REG_RESERVED17      (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED17      (1<<28)
+
+#define GCLK_IDX_RESERVED18         125
+#define GCLK_NAME_RESERVED18      "RESERVED18"
+#define GCLK_DEV_RESERVED18      "CLKGATE_RESERVED18"
+#define GCLK_REG_RESERVED18     (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED18     (1<<29)
+
+#define GCLK_IDX_RESERVED19         126
+#define GCLK_NAME_RESERVED19      "RESERVED19"
+#define GCLK_DEV_RESERVED19      "CLKGATE_RESERVED19"
+#define GCLK_REG_RESERVED19     (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED19     (1<<30)
+
+#define GCLK_IDX_RESERVED20        127
+#define GCLK_NAME_RESERVED20     "RESERVED20"
+#define GCLK_DEV_RESERVED20      "CLKGATE_RESERVED20"
+#define GCLK_REG_RESERVED20      (HHI_GCLK_OTHER)
+#define GCLK_MASK_RESERVED20      (1<<31)
+
+/**************************************************************/
+
+#define GCLK_IDX_MEDIA_CPU         128
+#define GCLK_NAME_MEDIA_CPU      "MEDIA_CPU"
+#define GCLK_DEV_MEDIA_CPU      "CLKGATE_MEDIA_CPU"
+#define GCLK_REG_MEDIA_CPU      (HHI_GCLK_AO)
+#define GCLK_MASK_MEDIA_CPU      (1<<0)
+
+#define GCLK_IDX_AHB_SRAM         129
+#define GCLK_NAME_AHB_SRAM      "AHB_SRAM"
+#define GCLK_DEV_AHB_SRAM      "CLKGATE_AHB_SRAM"
+#define GCLK_REG_AHB_SRAM      (HHI_GCLK_AO)
+#define GCLK_MASK_AHB_SRAM      (1<<1)
+
+#define GCLK_IDX_AHB_BUS         130
+#define GCLK_NAME_AHB_BUS      "AHB_BUS"
+#define GCLK_DEV_AHB_BUS      "CLKGATE_AHB_BUS"
+#define GCLK_REG_AHB_BUS      (HHI_GCLK_AO)
+#define GCLK_MASK_AHB_BUS      (1<<2)
+
+#define GCLK_IDX_AO_REGS         131
+#define GCLK_NAME_AO_REGS      "AO_REGS"
+#define GCLK_DEV_AO_REGS      "CLKGATE_AO_REGS"
+#define GCLK_REG_AO_REGS      (HHI_GCLK_AO)
+#define GCLK_MASK_AO_REGS      (1<<3)
+
+#define GCLK_IDX_MAX 131
+extern unsigned char GCLK_ref[GCLK_IDX_MAX];
+
+#define REGISTER_CLK(_MOD) \
+static struct clk CLK_##_MOD = {            \
+    .name       = GCLK_NAME_##_MOD,             \
+    .clock_index = GCLK_IDX_##_MOD,          \
+    .clock_gate_reg_adr = GCLK_REG_##_MOD,  \
+    .clock_gate_reg_mask = GCLK_MASK_##_MOD,    \
+}
+
+#define CLK_LOOKUP_ITEM(_MOD) \
+    {           \
+            .dev_id = GCLK_DEV_##_MOD, \
+            .con_id = GCLK_NAME_##_MOD, \
+            .clk    = &CLK_##_MOD,   \
+    }
+
+
+
+/**********************/
+/* internal audio dac control */
+#define ADAC_RESET                      (0x5000+0x00*4)
+#define ADAC_LATCH                      (0x5000+0x01*4)
+#define ADAC_POWER_CTRL_REG1            (0x5000+0x10*4)
+#define ADAC_POWER_CTRL_REG2            (0x5000+0x11*4)
+
+extern int audio_internal_dac_disable(void);
+
+/* video dac control */
+extern int  video_dac_enable(unsigned char enable_mask);
+
+extern int  video_dac_disable(void);
+
+
+#endif // __MACH_MESON6TV_POWER_GATE_H
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/register.h b/arch/arm/mach-meson6tv/include/mach/register.h
new file mode 100755
index 000000000000..219a950f7e73
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/register.h
@@ -0,0 +1,8036 @@
+/**
+ * this file is automatic generate by genregs.awk , Please do not edit it
+ * base files are ../ucode/register.h ../ucode/c_always_on_pointer.h ../ucode/pctl.h
+ * ../ucode/c_stb_define.h ../ucode/secure_apb.h from VLSI team
+ */
+#ifndef __MACH_MESON6TV_REG_ADDR_H_
+#define __MACH_MESON6TV_REG_ADDR_H_
+
+#include "io.h"
+
+#define SECOND_DEMUX_OFFSET_0 0x50 	///../ucode/register.h
+#define P_SECOND_DEMUX_OFFSET_0 		CBUS_REG_ADDR(SECOND_DEMUX_OFFSET_0) 	///../ucode/register.h
+#define THIRD_DEMUX_OFFSET_0 0xa0 	///../ucode/register.h
+#define P_THIRD_DEMUX_OFFSET_0 		CBUS_REG_ADDR(THIRD_DEMUX_OFFSET_0) 	///../ucode/register.h
+#define STB_TOP_CONFIG 0x16f0 	///../ucode/register.h
+#define P_STB_TOP_CONFIG 		CBUS_REG_ADDR(STB_TOP_CONFIG) 	///../ucode/register.h
+#define TS_TOP_CONFIG 0x16f1 	///../ucode/register.h
+#define P_TS_TOP_CONFIG 		CBUS_REG_ADDR(TS_TOP_CONFIG) 	///../ucode/register.h
+#define TS_FILE_CONFIG 0x16f2 	///../ucode/register.h
+#define P_TS_FILE_CONFIG 		CBUS_REG_ADDR(TS_FILE_CONFIG) 	///../ucode/register.h
+#define TS_PL_PID_INDEX 0x16f3 	///../ucode/register.h
+#define P_TS_PL_PID_INDEX 		CBUS_REG_ADDR(TS_PL_PID_INDEX) 	///../ucode/register.h
+#define TS_PL_PID_DATA 0x16f4 	///../ucode/register.h
+#define P_TS_PL_PID_DATA 		CBUS_REG_ADDR(TS_PL_PID_DATA) 	///../ucode/register.h
+#define COMM_DESC_KEY0 0x16f5 	///../ucode/register.h
+#define P_COMM_DESC_KEY0 		CBUS_REG_ADDR(COMM_DESC_KEY0) 	///../ucode/register.h
+#define COMM_DESC_KEY1 0x16f6 	///../ucode/register.h
+#define P_COMM_DESC_KEY1 		CBUS_REG_ADDR(COMM_DESC_KEY1) 	///../ucode/register.h
+#define COMM_DESC_KEY_RW 0x16f7 	///../ucode/register.h
+#define P_COMM_DESC_KEY_RW 		CBUS_REG_ADDR(COMM_DESC_KEY_RW) 	///../ucode/register.h
+#define CIPLUS_KEY0 0x16f8 	///../ucode/register.h
+#define P_CIPLUS_KEY0 		CBUS_REG_ADDR(CIPLUS_KEY0) 	///../ucode/register.h
+#define CIPLUS_KEY1 0x16f9 	///../ucode/register.h
+#define P_CIPLUS_KEY1 		CBUS_REG_ADDR(CIPLUS_KEY1) 	///../ucode/register.h
+#define CIPLUS_KEY2 0x16fa 	///../ucode/register.h
+#define P_CIPLUS_KEY2 		CBUS_REG_ADDR(CIPLUS_KEY2) 	///../ucode/register.h
+#define CIPLUS_KEY3 0x16fb 	///../ucode/register.h
+#define P_CIPLUS_KEY3 		CBUS_REG_ADDR(CIPLUS_KEY3) 	///../ucode/register.h
+#define CIPLUS_KEY_WR 0x16fc 	///../ucode/register.h
+#define P_CIPLUS_KEY_WR 		CBUS_REG_ADDR(CIPLUS_KEY_WR) 	///../ucode/register.h
+#define CIPLUS_CONFIG 0x16fd 	///../ucode/register.h
+#define P_CIPLUS_CONFIG 		CBUS_REG_ADDR(CIPLUS_CONFIG) 	///../ucode/register.h
+#define CIPLUS_ENDIAN 0x16fe 	///../ucode/register.h
+#define P_CIPLUS_ENDIAN 		CBUS_REG_ADDR(CIPLUS_ENDIAN) 	///../ucode/register.h
+#define PREG_CTLREG0_ADDR 0x2000 	///../ucode/register.h
+#define P_PREG_CTLREG0_ADDR 		CBUS_REG_ADDR(PREG_CTLREG0_ADDR) 	///../ucode/register.h
+#define PREG_PAD_GPIO6_EN_N 0x2008 	///../ucode/register.h
+#define P_PREG_PAD_GPIO6_EN_N 		CBUS_REG_ADDR(PREG_PAD_GPIO6_EN_N) 	///../ucode/register.h
+#define PREG_PAD_GPIO6_O 0x2009 	///../ucode/register.h
+#define P_PREG_PAD_GPIO6_O 		CBUS_REG_ADDR(PREG_PAD_GPIO6_O) 	///../ucode/register.h
+#define PREG_PAD_GPIO6_I 0x200a 	///../ucode/register.h
+#define P_PREG_PAD_GPIO6_I 		CBUS_REG_ADDR(PREG_PAD_GPIO6_I) 	///../ucode/register.h
+#define PREG_JTAG_GPIO_ADDR 0x200b 	///../ucode/register.h
+#define P_PREG_JTAG_GPIO_ADDR 		CBUS_REG_ADDR(PREG_JTAG_GPIO_ADDR) 	///../ucode/register.h
+#define PREG_PAD_GPIO0_EN_N 0x200c 	///../ucode/register.h
+#define P_PREG_PAD_GPIO0_EN_N 		CBUS_REG_ADDR(PREG_PAD_GPIO0_EN_N) 	///../ucode/register.h
+#define PREG_PAD_GPIO0_O 0x200d 	///../ucode/register.h
+#define P_PREG_PAD_GPIO0_O 		CBUS_REG_ADDR(PREG_PAD_GPIO0_O) 	///../ucode/register.h
+#define PREG_PAD_GPIO0_I 0x200e 	///../ucode/register.h
+#define P_PREG_PAD_GPIO0_I 		CBUS_REG_ADDR(PREG_PAD_GPIO0_I) 	///../ucode/register.h
+#define PREG_PAD_GPIO1_EN_N 0x200f 	///../ucode/register.h
+#define P_PREG_PAD_GPIO1_EN_N 		CBUS_REG_ADDR(PREG_PAD_GPIO1_EN_N) 	///../ucode/register.h
+#define PREG_PAD_GPIO1_O 0x2010 	///../ucode/register.h
+#define P_PREG_PAD_GPIO1_O 		CBUS_REG_ADDR(PREG_PAD_GPIO1_O) 	///../ucode/register.h
+#define PREG_PAD_GPIO1_I 0x2011 	///../ucode/register.h
+#define P_PREG_PAD_GPIO1_I 		CBUS_REG_ADDR(PREG_PAD_GPIO1_I) 	///../ucode/register.h
+#define PREG_PAD_GPIO2_EN_N 0x2012 	///../ucode/register.h
+#define P_PREG_PAD_GPIO2_EN_N 		CBUS_REG_ADDR(PREG_PAD_GPIO2_EN_N) 	///../ucode/register.h
+#define PREG_PAD_GPIO2_O 0x2013 	///../ucode/register.h
+#define P_PREG_PAD_GPIO2_O 		CBUS_REG_ADDR(PREG_PAD_GPIO2_O) 	///../ucode/register.h
+#define PREG_PAD_GPIO2_I 0x2014 	///../ucode/register.h
+#define P_PREG_PAD_GPIO2_I 		CBUS_REG_ADDR(PREG_PAD_GPIO2_I) 	///../ucode/register.h
+#define PREG_PAD_GPIO3_EN_N 0x2015 	///../ucode/register.h
+#define P_PREG_PAD_GPIO3_EN_N 		CBUS_REG_ADDR(PREG_PAD_GPIO3_EN_N) 	///../ucode/register.h
+#define PREG_PAD_GPIO3_O 0x2016 	///../ucode/register.h
+#define P_PREG_PAD_GPIO3_O 		CBUS_REG_ADDR(PREG_PAD_GPIO3_O) 	///../ucode/register.h
+#define PREG_PAD_GPIO3_I 0x2017 	///../ucode/register.h
+#define P_PREG_PAD_GPIO3_I 		CBUS_REG_ADDR(PREG_PAD_GPIO3_I) 	///../ucode/register.h
+#define PREG_PAD_GPIO4_EN_N 0x2018 	///../ucode/register.h
+#define P_PREG_PAD_GPIO4_EN_N 		CBUS_REG_ADDR(PREG_PAD_GPIO4_EN_N) 	///../ucode/register.h
+#define PREG_PAD_GPIO4_O 0x2019 	///../ucode/register.h
+#define P_PREG_PAD_GPIO4_O 		CBUS_REG_ADDR(PREG_PAD_GPIO4_O) 	///../ucode/register.h
+#define PREG_PAD_GPIO4_I 0x201a 	///../ucode/register.h
+#define P_PREG_PAD_GPIO4_I 		CBUS_REG_ADDR(PREG_PAD_GPIO4_I) 	///../ucode/register.h
+#define PREG_PAD_GPIO5_EN_N 0x201b 	///../ucode/register.h
+#define P_PREG_PAD_GPIO5_EN_N 		CBUS_REG_ADDR(PREG_PAD_GPIO5_EN_N) 	///../ucode/register.h
+#define PREG_PAD_GPIO5_O 0x201c 	///../ucode/register.h
+#define P_PREG_PAD_GPIO5_O 		CBUS_REG_ADDR(PREG_PAD_GPIO5_O) 	///../ucode/register.h
+#define PREG_PAD_GPIO5_I 0x201d 	///../ucode/register.h
+#define P_PREG_PAD_GPIO5_I 		CBUS_REG_ADDR(PREG_PAD_GPIO5_I) 	///../ucode/register.h
+#define A9_CFG0 0x2020 	///../ucode/register.h
+#define P_A9_CFG0 		CBUS_REG_ADDR(A9_CFG0) 	///../ucode/register.h
+#define A9_CFG1 0x2021 	///../ucode/register.h
+#define P_A9_CFG1 		CBUS_REG_ADDR(A9_CFG1) 	///../ucode/register.h
+#define A9_CFG2 0x2022 	///../ucode/register.h
+#define P_A9_CFG2 		CBUS_REG_ADDR(A9_CFG2) 	///../ucode/register.h
+#define A9_PERIPH_BASE 0x2023 	///../ucode/register.h
+#define P_A9_PERIPH_BASE 		CBUS_REG_ADDR(A9_PERIPH_BASE) 	///../ucode/register.h
+#define A9_L2_REG_BASE 0x2024 	///../ucode/register.h
+#define P_A9_L2_REG_BASE 		CBUS_REG_ADDR(A9_L2_REG_BASE) 	///../ucode/register.h
+#define A9_L2_STATUS 0x2025 	///../ucode/register.h
+#define P_A9_L2_STATUS 		CBUS_REG_ADDR(A9_L2_STATUS) 	///../ucode/register.h
+#define A9_POR_CFG 0x2026 	///../ucode/register.h
+#define P_A9_POR_CFG 		CBUS_REG_ADDR(A9_POR_CFG) 	///../ucode/register.h
+#define MALI_IDLE_STAT 0x2027 	///../ucode/register.h
+#define P_MALI_IDLE_STAT 		CBUS_REG_ADDR(MALI_IDLE_STAT) 	///../ucode/register.h
+#define AXI_REG_EN 0x2028 	///../ucode/register.h
+#define P_AXI_REG_EN 		CBUS_REG_ADDR(AXI_REG_EN) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_0 0x202c 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_0 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_0) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_1 0x202d 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_1 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_1) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_2 0x202e 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_2 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_2) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_3 0x202f 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_3 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_3) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_4 0x2030 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_4 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_4) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_5 0x2031 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_5 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_5) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_6 0x2032 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_6 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_6) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_7 0x2033 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_7 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_7) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_8 0x2034 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_8 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_8) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_9 0x2035 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_9 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_9) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_10 0x2036 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_10 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_10) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_11 0x2037 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_11 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_11) 	///../ucode/register.h
+#define PERIPHS_PIN_MUX_12 0x2038 	///../ucode/register.h
+#define P_PERIPHS_PIN_MUX_12 		CBUS_REG_ADDR(PERIPHS_PIN_MUX_12) 	///../ucode/register.h
+#define PAD_PULL_UP_REG6 0x2039 	///../ucode/register.h
+#define P_PAD_PULL_UP_REG6 		CBUS_REG_ADDR(PAD_PULL_UP_REG6) 	///../ucode/register.h
+#define PAD_PULL_UP_REG0 0x203a 	///../ucode/register.h
+#define P_PAD_PULL_UP_REG0 		CBUS_REG_ADDR(PAD_PULL_UP_REG0) 	///../ucode/register.h
+#define PAD_PULL_UP_REG1 0x203b 	///../ucode/register.h
+#define P_PAD_PULL_UP_REG1 		CBUS_REG_ADDR(PAD_PULL_UP_REG1) 	///../ucode/register.h
+#define PAD_PULL_UP_REG2 0x203c 	///../ucode/register.h
+#define P_PAD_PULL_UP_REG2 		CBUS_REG_ADDR(PAD_PULL_UP_REG2) 	///../ucode/register.h
+#define PAD_PULL_UP_REG3 0x203d 	///../ucode/register.h
+#define P_PAD_PULL_UP_REG3 		CBUS_REG_ADDR(PAD_PULL_UP_REG3) 	///../ucode/register.h
+#define PAD_PULL_UP_REG4 0x203e 	///../ucode/register.h
+#define P_PAD_PULL_UP_REG4 		CBUS_REG_ADDR(PAD_PULL_UP_REG4) 	///../ucode/register.h
+#define PAD_PULL_UP_REG5 0x203f 	///../ucode/register.h
+#define P_PAD_PULL_UP_REG5 		CBUS_REG_ADDR(PAD_PULL_UP_REG5) 	///../ucode/register.h
+#define RAND64_ADDR0 0x2040 	///../ucode/register.h
+#define P_RAND64_ADDR0 		CBUS_REG_ADDR(RAND64_ADDR0) 	///../ucode/register.h
+#define RAND64_ADDR1 0x2041 	///../ucode/register.h
+#define P_RAND64_ADDR1 		CBUS_REG_ADDR(RAND64_ADDR1) 	///../ucode/register.h
+#define PREG_ETHERNET_ADDR0 0x2042 	///../ucode/register.h
+#define P_PREG_ETHERNET_ADDR0 		CBUS_REG_ADDR(PREG_ETHERNET_ADDR0) 	///../ucode/register.h
+#define PREG_AM_ANALOG_ADDR 0x2043 	///../ucode/register.h
+#define P_PREG_AM_ANALOG_ADDR 		CBUS_REG_ADDR(PREG_AM_ANALOG_ADDR) 	///../ucode/register.h
+#define PREG_MALI_BYTE_CNTL 0x2044 	///../ucode/register.h
+#define P_PREG_MALI_BYTE_CNTL 		CBUS_REG_ADDR(PREG_MALI_BYTE_CNTL) 	///../ucode/register.h
+#define PREG_WIFI_CNTL 0x2045 	///../ucode/register.h
+#define P_PREG_WIFI_CNTL 		CBUS_REG_ADDR(PREG_WIFI_CNTL) 	///../ucode/register.h
+#define PROD_TEST_REG0 0x2068 	///../ucode/register.h
+#define P_PROD_TEST_REG0 		CBUS_REG_ADDR(PROD_TEST_REG0) 	///../ucode/register.h
+#define PROD_TEST_REG1 0x2067 	///../ucode/register.h
+#define P_PROD_TEST_REG1 		CBUS_REG_ADDR(PROD_TEST_REG1) 	///../ucode/register.h
+#define METAL_REVISION 0x206a 	///../ucode/register.h
+#define P_METAL_REVISION 		CBUS_REG_ADDR(METAL_REVISION) 	///../ucode/register.h
+#define ADC_TOP_MISC 0x206b 	///../ucode/register.h
+#define P_ADC_TOP_MISC 		CBUS_REG_ADDR(ADC_TOP_MISC) 	///../ucode/register.h
+#define DPLL_TOP_MISC 0x206c 	///../ucode/register.h
+#define P_DPLL_TOP_MISC 		CBUS_REG_ADDR(DPLL_TOP_MISC) 	///../ucode/register.h
+#define ANALOG_TOP_MISC 0x206d 	///../ucode/register.h
+#define P_ANALOG_TOP_MISC 		CBUS_REG_ADDR(ANALOG_TOP_MISC) 	///../ucode/register.h
+#define AM_ANALOG_TOP_REG0 0x206e 	///../ucode/register.h
+#define P_AM_ANALOG_TOP_REG0 		CBUS_REG_ADDR(AM_ANALOG_TOP_REG0) 	///../ucode/register.h
+#define AM_ANALOG_TOP_REG1 0x206f 	///../ucode/register.h
+#define P_AM_ANALOG_TOP_REG1 		CBUS_REG_ADDR(AM_ANALOG_TOP_REG1) 	///../ucode/register.h
+#define PREG_STICKY_REG0 0x207c 	///../ucode/register.h
+#define P_PREG_STICKY_REG0 		CBUS_REG_ADDR(PREG_STICKY_REG0) 	///../ucode/register.h
+#define PREG_STICKY_REG1 0x207d 	///../ucode/register.h
+#define P_PREG_STICKY_REG1 		CBUS_REG_ADDR(PREG_STICKY_REG1) 	///../ucode/register.h
+#define PREG_MV_REG 0x207e 	///../ucode/register.h
+#define P_PREG_MV_REG 		CBUS_REG_ADDR(PREG_MV_REG) 	///../ucode/register.h
+#define AM_RING_OSC_REG0 0x207f 	///../ucode/register.h
+#define P_AM_RING_OSC_REG0 		CBUS_REG_ADDR(AM_RING_OSC_REG0) 	///../ucode/register.h
+#define SMARTCARD_REG0 0x2110 	///../ucode/register.h
+#define P_SMARTCARD_REG0 		CBUS_REG_ADDR(SMARTCARD_REG0) 	///../ucode/register.h
+#define SMARTCARD_REG1 0x2111 	///../ucode/register.h
+#define P_SMARTCARD_REG1 		CBUS_REG_ADDR(SMARTCARD_REG1) 	///../ucode/register.h
+#define SMARTCARD_REG2 0x2112 	///../ucode/register.h
+#define P_SMARTCARD_REG2 		CBUS_REG_ADDR(SMARTCARD_REG2) 	///../ucode/register.h
+#define SMARTCARD_STATUS 0x2113 	///../ucode/register.h
+#define P_SMARTCARD_STATUS 		CBUS_REG_ADDR(SMARTCARD_STATUS) 	///../ucode/register.h
+#define SMARTCARD_INTR 0x2114 	///../ucode/register.h
+#define P_SMARTCARD_INTR 		CBUS_REG_ADDR(SMARTCARD_INTR) 	///../ucode/register.h
+#define SMARTCARD_REG5 0x2115 	///../ucode/register.h
+#define P_SMARTCARD_REG5 		CBUS_REG_ADDR(SMARTCARD_REG5) 	///../ucode/register.h
+#define SMARTCARD_REG6 0x2116 	///../ucode/register.h
+#define P_SMARTCARD_REG6 		CBUS_REG_ADDR(SMARTCARD_REG6) 	///../ucode/register.h
+#define SMARTCARD_FIFO 0x2117 	///../ucode/register.h
+#define P_SMARTCARD_FIFO 		CBUS_REG_ADDR(SMARTCARD_FIFO) 	///../ucode/register.h
+#define IR_DEC_LDR_ACTIVE 0x2120 	///../ucode/register.h
+#define P_IR_DEC_LDR_ACTIVE 		CBUS_REG_ADDR(IR_DEC_LDR_ACTIVE) 	///../ucode/register.h
+#define IR_DEC_LDR_IDLE 0x2121 	///../ucode/register.h
+#define P_IR_DEC_LDR_IDLE 		CBUS_REG_ADDR(IR_DEC_LDR_IDLE) 	///../ucode/register.h
+#define IR_DEC_LDR_REPEAT 0x2122 	///../ucode/register.h
+#define P_IR_DEC_LDR_REPEAT 		CBUS_REG_ADDR(IR_DEC_LDR_REPEAT) 	///../ucode/register.h
+#define IR_DEC_BIT_0 0x2123 	///../ucode/register.h
+#define P_IR_DEC_BIT_0 		CBUS_REG_ADDR(IR_DEC_BIT_0) 	///../ucode/register.h
+#define IR_DEC_REG0 0x2124 	///../ucode/register.h
+#define P_IR_DEC_REG0 		CBUS_REG_ADDR(IR_DEC_REG0) 	///../ucode/register.h
+#define IR_DEC_FRAME 0x2125 	///../ucode/register.h
+#define P_IR_DEC_FRAME 		CBUS_REG_ADDR(IR_DEC_FRAME) 	///../ucode/register.h
+#define IR_DEC_STATUS 0x2126 	///../ucode/register.h
+#define P_IR_DEC_STATUS 		CBUS_REG_ADDR(IR_DEC_STATUS) 	///../ucode/register.h
+#define IR_DEC_REG1 0x2127 	///../ucode/register.h
+#define P_IR_DEC_REG1 		CBUS_REG_ADDR(IR_DEC_REG1) 	///../ucode/register.h
+#define DEMOD_ADC_SAMPLING 0x212d 	///../ucode/register.h
+#define P_DEMOD_ADC_SAMPLING 		CBUS_REG_ADDR(DEMOD_ADC_SAMPLING) 	///../ucode/register.h
+#define UART0_WFIFO 0x2130 	///../ucode/register.h
+#define P_UART0_WFIFO 		CBUS_REG_ADDR(UART0_WFIFO) 	///../ucode/register.h
+#define UART0_RFIFO 0x2131 	///../ucode/register.h
+#define P_UART0_RFIFO 		CBUS_REG_ADDR(UART0_RFIFO) 	///../ucode/register.h
+#define UART0_CONTROL 0x2132 	///../ucode/register.h
+#define P_UART0_CONTROL 		CBUS_REG_ADDR(UART0_CONTROL) 	///../ucode/register.h
+#define UART0_STATUS 0x2133 	///../ucode/register.h
+#define P_UART0_STATUS 		CBUS_REG_ADDR(UART0_STATUS) 	///../ucode/register.h
+#define UART0_MISC 0x2134 	///../ucode/register.h
+#define P_UART0_MISC 		CBUS_REG_ADDR(UART0_MISC) 	///../ucode/register.h
+#define UART0_REG5 0x2135 	///../ucode/register.h
+#define P_UART0_REG5 		CBUS_REG_ADDR(UART0_REG5) 	///../ucode/register.h
+#define UART1_WFIFO 0x2137 	///../ucode/register.h
+#define P_UART1_WFIFO 		CBUS_REG_ADDR(UART1_WFIFO) 	///../ucode/register.h
+#define UART1_RFIFO 0x2138 	///../ucode/register.h
+#define P_UART1_RFIFO 		CBUS_REG_ADDR(UART1_RFIFO) 	///../ucode/register.h
+#define UART1_CONTROL 0x2139 	///../ucode/register.h
+#define P_UART1_CONTROL 		CBUS_REG_ADDR(UART1_CONTROL) 	///../ucode/register.h
+#define UART1_STATUS 0x213a 	///../ucode/register.h
+#define P_UART1_STATUS 		CBUS_REG_ADDR(UART1_STATUS) 	///../ucode/register.h
+#define UART1_MISC 0x213b 	///../ucode/register.h
+#define P_UART1_MISC 		CBUS_REG_ADDR(UART1_MISC) 	///../ucode/register.h
+#define UART1_REG5 0x213c 	///../ucode/register.h
+#define P_UART1_REG5 		CBUS_REG_ADDR(UART1_REG5) 	///../ucode/register.h
+#define I2C_M_0_CONTROL_REG 0x2140 	///../ucode/register.h
+#define P_I2C_M_0_CONTROL_REG 		CBUS_REG_ADDR(I2C_M_0_CONTROL_REG) 	///../ucode/register.h
+#define I2C_M_0_SLAVE_ADDR 0x2141 	///../ucode/register.h
+#define P_I2C_M_0_SLAVE_ADDR 		CBUS_REG_ADDR(I2C_M_0_SLAVE_ADDR) 	///../ucode/register.h
+#define I2C_M_0_TOKEN_LIST0 0x2142 	///../ucode/register.h
+#define P_I2C_M_0_TOKEN_LIST0 		CBUS_REG_ADDR(I2C_M_0_TOKEN_LIST0) 	///../ucode/register.h
+#define I2C_M_0_TOKEN_LIST1 0x2143 	///../ucode/register.h
+#define P_I2C_M_0_TOKEN_LIST1 		CBUS_REG_ADDR(I2C_M_0_TOKEN_LIST1) 	///../ucode/register.h
+#define I2C_M_0_WDATA_REG0 0x2144 	///../ucode/register.h
+#define P_I2C_M_0_WDATA_REG0 		CBUS_REG_ADDR(I2C_M_0_WDATA_REG0) 	///../ucode/register.h
+#define I2C_M_0_WDATA_REG1 0x2145 	///../ucode/register.h
+#define P_I2C_M_0_WDATA_REG1 		CBUS_REG_ADDR(I2C_M_0_WDATA_REG1) 	///../ucode/register.h
+#define I2C_M_0_RDATA_REG0 0x2146 	///../ucode/register.h
+#define P_I2C_M_0_RDATA_REG0 		CBUS_REG_ADDR(I2C_M_0_RDATA_REG0) 	///../ucode/register.h
+#define I2C_M_0_RDATA_REG1 0x2147 	///../ucode/register.h
+#define P_I2C_M_0_RDATA_REG1 		CBUS_REG_ADDR(I2C_M_0_RDATA_REG1) 	///../ucode/register.h
+#define I2C_S_CONTROL_REG 0x2150 	///../ucode/register.h
+#define P_I2C_S_CONTROL_REG 		CBUS_REG_ADDR(I2C_S_CONTROL_REG) 	///../ucode/register.h
+#define I2C_S_SEND_REG 0x2151 	///../ucode/register.h
+#define P_I2C_S_SEND_REG 		CBUS_REG_ADDR(I2C_S_SEND_REG) 	///../ucode/register.h
+#define I2C_S_RECV_REG 0x2152 	///../ucode/register.h
+#define P_I2C_S_RECV_REG 		CBUS_REG_ADDR(I2C_S_RECV_REG) 	///../ucode/register.h
+#define I2C_S_CNTL1_REG 0x2153 	///../ucode/register.h
+#define P_I2C_S_CNTL1_REG 		CBUS_REG_ADDR(I2C_S_CNTL1_REG) 	///../ucode/register.h
+#define PWM_PWM_A 0x2154 	///../ucode/register.h
+#define P_PWM_PWM_A 		CBUS_REG_ADDR(PWM_PWM_A) 	///../ucode/register.h
+#define PWM_PWM_B 0x2155 	///../ucode/register.h
+#define P_PWM_PWM_B 		CBUS_REG_ADDR(PWM_PWM_B) 	///../ucode/register.h
+#define PWM_MISC_REG_AB 0x2156 	///../ucode/register.h
+#define P_PWM_MISC_REG_AB 		CBUS_REG_ADDR(PWM_MISC_REG_AB) 	///../ucode/register.h
+#define PWM_DELTA_SIGMA_AB 0x2157 	///../ucode/register.h
+#define P_PWM_DELTA_SIGMA_AB 		CBUS_REG_ADDR(PWM_DELTA_SIGMA_AB) 	///../ucode/register.h
+#define ATAPI_IDEREG0 0x2160 	///../ucode/register.h
+#define P_ATAPI_IDEREG0 		CBUS_REG_ADDR(ATAPI_IDEREG0) 	///../ucode/register.h
+#define ATAPI_IDEREG1 0x2161 	///../ucode/register.h
+#define P_ATAPI_IDEREG1 		CBUS_REG_ADDR(ATAPI_IDEREG1) 	///../ucode/register.h
+#define ATAPI_IDEREG2 0x2162 	///../ucode/register.h
+#define P_ATAPI_IDEREG2 		CBUS_REG_ADDR(ATAPI_IDEREG2) 	///../ucode/register.h
+#define ATAPI_CYCTIME 0x2163 	///../ucode/register.h
+#define P_ATAPI_CYCTIME 		CBUS_REG_ADDR(ATAPI_CYCTIME) 	///../ucode/register.h
+#define ATAPI_IDETIME 0x2164 	///../ucode/register.h
+#define P_ATAPI_IDETIME 		CBUS_REG_ADDR(ATAPI_IDETIME) 	///../ucode/register.h
+#define ATAPI_PIO_TIMING 0x2165 	///../ucode/register.h
+#define P_ATAPI_PIO_TIMING 		CBUS_REG_ADDR(ATAPI_PIO_TIMING) 	///../ucode/register.h
+#define ATAPI_TABLE_ADD_REG 0x2166 	///../ucode/register.h
+#define P_ATAPI_TABLE_ADD_REG 		CBUS_REG_ADDR(ATAPI_TABLE_ADD_REG) 	///../ucode/register.h
+#define ATAPI_IDEREG3 0x2167 	///../ucode/register.h
+#define P_ATAPI_IDEREG3 		CBUS_REG_ADDR(ATAPI_IDEREG3) 	///../ucode/register.h
+#define ATAPI_UDMA_REG0 0x2168 	///../ucode/register.h
+#define P_ATAPI_UDMA_REG0 		CBUS_REG_ADDR(ATAPI_UDMA_REG0) 	///../ucode/register.h
+#define ATAPI_UDMA_REG1 0x2169 	///../ucode/register.h
+#define P_ATAPI_UDMA_REG1 		CBUS_REG_ADDR(ATAPI_UDMA_REG1) 	///../ucode/register.h
+#define TRANS_PWMA_REG0 0x2170 	///../ucode/register.h
+#define P_TRANS_PWMA_REG0 		CBUS_REG_ADDR(TRANS_PWMA_REG0) 	///../ucode/register.h
+#define TRANS_PWMA_REG1 0x2171 	///../ucode/register.h
+#define P_TRANS_PWMA_REG1 		CBUS_REG_ADDR(TRANS_PWMA_REG1) 	///../ucode/register.h
+#define TRANS_PWMA_MUX0 0x2172 	///../ucode/register.h
+#define P_TRANS_PWMA_MUX0 		CBUS_REG_ADDR(TRANS_PWMA_MUX0) 	///../ucode/register.h
+#define TRANS_PWMA_MUX1 0x2173 	///../ucode/register.h
+#define P_TRANS_PWMA_MUX1 		CBUS_REG_ADDR(TRANS_PWMA_MUX1) 	///../ucode/register.h
+#define TRANS_PWMA_MUX2 0x2174 	///../ucode/register.h
+#define P_TRANS_PWMA_MUX2 		CBUS_REG_ADDR(TRANS_PWMA_MUX2) 	///../ucode/register.h
+#define TRANS_PWMA_MUX3 0x2175 	///../ucode/register.h
+#define P_TRANS_PWMA_MUX3 		CBUS_REG_ADDR(TRANS_PWMA_MUX3) 	///../ucode/register.h
+#define TRANS_PWMA_MUX4 0x2176 	///../ucode/register.h
+#define P_TRANS_PWMA_MUX4 		CBUS_REG_ADDR(TRANS_PWMA_MUX4) 	///../ucode/register.h
+#define TRANS_PWMA_MUX5 0x2177 	///../ucode/register.h
+#define P_TRANS_PWMA_MUX5 		CBUS_REG_ADDR(TRANS_PWMA_MUX5) 	///../ucode/register.h
+#define TRANS_PWMB_REG0 0x2178 	///../ucode/register.h
+#define P_TRANS_PWMB_REG0 		CBUS_REG_ADDR(TRANS_PWMB_REG0) 	///../ucode/register.h
+#define TRANS_PWMB_REG1 0x2179 	///../ucode/register.h
+#define P_TRANS_PWMB_REG1 		CBUS_REG_ADDR(TRANS_PWMB_REG1) 	///../ucode/register.h
+#define TRANS_PWMB_MUX0 0x217a 	///../ucode/register.h
+#define P_TRANS_PWMB_MUX0 		CBUS_REG_ADDR(TRANS_PWMB_MUX0) 	///../ucode/register.h
+#define TRANS_PWMB_MUX1 0x217b 	///../ucode/register.h
+#define P_TRANS_PWMB_MUX1 		CBUS_REG_ADDR(TRANS_PWMB_MUX1) 	///../ucode/register.h
+#define TRANS_PWMB_MUX2 0x217c 	///../ucode/register.h
+#define P_TRANS_PWMB_MUX2 		CBUS_REG_ADDR(TRANS_PWMB_MUX2) 	///../ucode/register.h
+#define TRANS_PWMB_MUX3 0x217d 	///../ucode/register.h
+#define P_TRANS_PWMB_MUX3 		CBUS_REG_ADDR(TRANS_PWMB_MUX3) 	///../ucode/register.h
+#define TRANS_PWMB_MUX4 0x217e 	///../ucode/register.h
+#define P_TRANS_PWMB_MUX4 		CBUS_REG_ADDR(TRANS_PWMB_MUX4) 	///../ucode/register.h
+#define TRANS_PWMB_MUX5 0x217f 	///../ucode/register.h
+#define P_TRANS_PWMB_MUX5 		CBUS_REG_ADDR(TRANS_PWMB_MUX5) 	///../ucode/register.h
+#define NAND_START 0x2180 	///../ucode/register.h
+#define P_NAND_START 		CBUS_REG_ADDR(NAND_START) 	///../ucode/register.h
+#define NAND_ADR_CMD 0x218a 	///../ucode/register.h
+#define P_NAND_ADR_CMD 		CBUS_REG_ADDR(NAND_ADR_CMD) 	///../ucode/register.h
+#define NAND_ADR_STS 0x218b 	///../ucode/register.h
+#define P_NAND_ADR_STS 		CBUS_REG_ADDR(NAND_ADR_STS) 	///../ucode/register.h
+#define NAND_END 0x218f 	///../ucode/register.h
+#define P_NAND_END 		CBUS_REG_ADDR(NAND_END) 	///../ucode/register.h
+#define PWM_PWM_C 0x2194 	///../ucode/register.h
+#define P_PWM_PWM_C 		CBUS_REG_ADDR(PWM_PWM_C) 	///../ucode/register.h
+#define PWM_PWM_D 0x2195 	///../ucode/register.h
+#define P_PWM_PWM_D 		CBUS_REG_ADDR(PWM_PWM_D) 	///../ucode/register.h
+#define PWM_MISC_REG_CD 0x2196 	///../ucode/register.h
+#define P_PWM_MISC_REG_CD 		CBUS_REG_ADDR(PWM_MISC_REG_CD) 	///../ucode/register.h
+#define PWM_DELTA_SIGMA_CD 0x2197 	///../ucode/register.h
+#define P_PWM_DELTA_SIGMA_CD 		CBUS_REG_ADDR(PWM_DELTA_SIGMA_CD) 	///../ucode/register.h
+#define SAR_ADC_REG0 0x21a0 	///../ucode/register.h
+#define P_SAR_ADC_REG0 		CBUS_REG_ADDR(SAR_ADC_REG0) 	///../ucode/register.h
+#define SAR_ADC_CHAN_LIST 0x21a1 	///../ucode/register.h
+#define P_SAR_ADC_CHAN_LIST 		CBUS_REG_ADDR(SAR_ADC_CHAN_LIST) 	///../ucode/register.h
+#define SAR_ADC_AVG_CNTL 0x21a2 	///../ucode/register.h
+#define P_SAR_ADC_AVG_CNTL 		CBUS_REG_ADDR(SAR_ADC_AVG_CNTL) 	///../ucode/register.h
+#define SAR_ADC_REG3 0x21a3 	///../ucode/register.h
+#define P_SAR_ADC_REG3 		CBUS_REG_ADDR(SAR_ADC_REG3) 	///../ucode/register.h
+#define SAR_ADC_DELAY 0x21a4 	///../ucode/register.h
+#define P_SAR_ADC_DELAY 		CBUS_REG_ADDR(SAR_ADC_DELAY) 	///../ucode/register.h
+#define SAR_ADC_LAST_RD 0x21a5 	///../ucode/register.h
+#define P_SAR_ADC_LAST_RD 		CBUS_REG_ADDR(SAR_ADC_LAST_RD) 	///../ucode/register.h
+#define SAR_ADC_FIFO_RD 0x21a6 	///../ucode/register.h
+#define P_SAR_ADC_FIFO_RD 		CBUS_REG_ADDR(SAR_ADC_FIFO_RD) 	///../ucode/register.h
+#define SAR_ADC_AUX_SW 0x21a7 	///../ucode/register.h
+#define P_SAR_ADC_AUX_SW 		CBUS_REG_ADDR(SAR_ADC_AUX_SW) 	///../ucode/register.h
+#define SAR_ADC_CHAN_10_SW 0x21a8 	///../ucode/register.h
+#define P_SAR_ADC_CHAN_10_SW 		CBUS_REG_ADDR(SAR_ADC_CHAN_10_SW) 	///../ucode/register.h
+#define SAR_ADC_DETECT_IDLE_SW 0x21a9 	///../ucode/register.h
+#define P_SAR_ADC_DETECT_IDLE_SW 		CBUS_REG_ADDR(SAR_ADC_DETECT_IDLE_SW) 	///../ucode/register.h
+#define SAR_ADC_DELTA_10 0x21aa 	///../ucode/register.h
+#define P_SAR_ADC_DELTA_10 		CBUS_REG_ADDR(SAR_ADC_DELTA_10) 	///../ucode/register.h
+#define CTOUCH_REG0 0x21b0 	///../ucode/register.h
+#define P_CTOUCH_REG0 		CBUS_REG_ADDR(CTOUCH_REG0) 	///../ucode/register.h
+#define CTOUCH_REG1 0x21b1 	///../ucode/register.h
+#define P_CTOUCH_REG1 		CBUS_REG_ADDR(CTOUCH_REG1) 	///../ucode/register.h
+#define CTOUCH_FIFO 0x21b2 	///../ucode/register.h
+#define P_CTOUCH_FIFO 		CBUS_REG_ADDR(CTOUCH_FIFO) 	///../ucode/register.h
+#define CTOUCH_REG3 0x21b3 	///../ucode/register.h
+#define P_CTOUCH_REG3 		CBUS_REG_ADDR(CTOUCH_REG3) 	///../ucode/register.h
+#define CTOUCH_INIT_CLK0 0x21b4 	///../ucode/register.h
+#define P_CTOUCH_INIT_CLK0 		CBUS_REG_ADDR(CTOUCH_INIT_CLK0) 	///../ucode/register.h
+#define CTOUCH_INIT_CLK1 0x21b5 	///../ucode/register.h
+#define P_CTOUCH_INIT_CLK1 		CBUS_REG_ADDR(CTOUCH_INIT_CLK1) 	///../ucode/register.h
+#define CTOUCH_REG6 0x21b6 	///../ucode/register.h
+#define P_CTOUCH_REG6 		CBUS_REG_ADDR(CTOUCH_REG6) 	///../ucode/register.h
+#define CTOUCH_GND_SW_MASK 0x21b7 	///../ucode/register.h
+#define P_CTOUCH_GND_SW_MASK 		CBUS_REG_ADDR(CTOUCH_GND_SW_MASK) 	///../ucode/register.h
+#define CTOUCH_MSR_TB_SEL 0x21b8 	///../ucode/register.h
+#define P_CTOUCH_MSR_TB_SEL 		CBUS_REG_ADDR(CTOUCH_MSR_TB_SEL) 	///../ucode/register.h
+#define CTOUCH_CAP_THRESH0 0x21b9 	///../ucode/register.h
+#define P_CTOUCH_CAP_THRESH0 		CBUS_REG_ADDR(CTOUCH_CAP_THRESH0) 	///../ucode/register.h
+#define CTOUCH_CAP_THRESH1 0x21ba 	///../ucode/register.h
+#define P_CTOUCH_CAP_THRESH1 		CBUS_REG_ADDR(CTOUCH_CAP_THRESH1) 	///../ucode/register.h
+#define CTOUCH_CHAN_LIST0 0x21bb 	///../ucode/register.h
+#define P_CTOUCH_CHAN_LIST0 		CBUS_REG_ADDR(CTOUCH_CHAN_LIST0) 	///../ucode/register.h
+#define CTOUCH_CHAN_LIST1 0x21bc 	///../ucode/register.h
+#define P_CTOUCH_CHAN_LIST1 		CBUS_REG_ADDR(CTOUCH_CHAN_LIST1) 	///../ucode/register.h
+#define CTOUCH_MSR_TB0 0x21bd 	///../ucode/register.h
+#define P_CTOUCH_MSR_TB0 		CBUS_REG_ADDR(CTOUCH_MSR_TB0) 	///../ucode/register.h
+#define CTOUCH_MSR_TB1 0x21be 	///../ucode/register.h
+#define P_CTOUCH_MSR_TB1 		CBUS_REG_ADDR(CTOUCH_MSR_TB1) 	///../ucode/register.h
+#define CTOUCH_REG15 0x21bf 	///../ucode/register.h
+#define P_CTOUCH_REG15 		CBUS_REG_ADDR(CTOUCH_REG15) 	///../ucode/register.h
+#define UART2_WFIFO 0x21c0 	///../ucode/register.h
+#define P_UART2_WFIFO 		CBUS_REG_ADDR(UART2_WFIFO) 	///../ucode/register.h
+#define UART2_RFIFO 0x21c1 	///../ucode/register.h
+#define P_UART2_RFIFO 		CBUS_REG_ADDR(UART2_RFIFO) 	///../ucode/register.h
+#define UART2_CONTROL 0x21c2 	///../ucode/register.h
+#define P_UART2_CONTROL 		CBUS_REG_ADDR(UART2_CONTROL) 	///../ucode/register.h
+#define UART2_STATUS 0x21c3 	///../ucode/register.h
+#define P_UART2_STATUS 		CBUS_REG_ADDR(UART2_STATUS) 	///../ucode/register.h
+#define UART2_MISC 0x21c4 	///../ucode/register.h
+#define P_UART2_MISC 		CBUS_REG_ADDR(UART2_MISC) 	///../ucode/register.h
+#define UART2_REG5 0x21c5 	///../ucode/register.h
+#define P_UART2_REG5 		CBUS_REG_ADDR(UART2_REG5) 	///../ucode/register.h
+#define UART3_WFIFO 0x21c8 	///../ucode/register.h
+#define P_UART3_WFIFO 		CBUS_REG_ADDR(UART3_WFIFO) 	///../ucode/register.h
+#define UART3_RFIFO 0x21c9 	///../ucode/register.h
+#define P_UART3_RFIFO 		CBUS_REG_ADDR(UART3_RFIFO) 	///../ucode/register.h
+#define UART3_CONTROL 0x21ca 	///../ucode/register.h
+#define P_UART3_CONTROL 		CBUS_REG_ADDR(UART3_CONTROL) 	///../ucode/register.h
+#define UART3_STATUS 0x21cb 	///../ucode/register.h
+#define P_UART3_STATUS 		CBUS_REG_ADDR(UART3_STATUS) 	///../ucode/register.h
+#define UART3_MISC 0x21cc 	///../ucode/register.h
+#define P_UART3_MISC 		CBUS_REG_ADDR(UART3_MISC) 	///../ucode/register.h
+#define UART3_REG5 0x21cd 	///../ucode/register.h
+#define P_UART3_REG5 		CBUS_REG_ADDR(UART3_REG5) 	///../ucode/register.h
+#define RTC_ADDR0 0x21d0 	///../ucode/register.h
+#define P_RTC_ADDR0 		CBUS_REG_ADDR(RTC_ADDR0) 	///../ucode/register.h
+#define RTC_ADDR1 0x21d1 	///../ucode/register.h
+#define P_RTC_ADDR1 		CBUS_REG_ADDR(RTC_ADDR1) 	///../ucode/register.h
+#define RTC_ADDR2 0x21d2 	///../ucode/register.h
+#define P_RTC_ADDR2 		CBUS_REG_ADDR(RTC_ADDR2) 	///../ucode/register.h
+#define RTC_ADDR3 0x21d3 	///../ucode/register.h
+#define P_RTC_ADDR3 		CBUS_REG_ADDR(RTC_ADDR3) 	///../ucode/register.h
+#define RTC_ADDR4 0x21d4 	///../ucode/register.h
+#define P_RTC_ADDR4 		CBUS_REG_ADDR(RTC_ADDR4) 	///../ucode/register.h
+#define MSR_CLK_DUTY 0x21d6 	///../ucode/register.h
+#define P_MSR_CLK_DUTY 		CBUS_REG_ADDR(MSR_CLK_DUTY) 	///../ucode/register.h
+#define MSR_CLK_REG0 0x21d7 	///../ucode/register.h
+#define P_MSR_CLK_REG0 		CBUS_REG_ADDR(MSR_CLK_REG0) 	///../ucode/register.h
+#define MSR_CLK_REG1 0x21d8 	///../ucode/register.h
+#define P_MSR_CLK_REG1 		CBUS_REG_ADDR(MSR_CLK_REG1) 	///../ucode/register.h
+#define MSR_CLK_REG2 0x21d9 	///../ucode/register.h
+#define P_MSR_CLK_REG2 		CBUS_REG_ADDR(MSR_CLK_REG2) 	///../ucode/register.h
+#define LED_PWM_REG0 0x21da 	///../ucode/register.h
+#define P_LED_PWM_REG0 		CBUS_REG_ADDR(LED_PWM_REG0) 	///../ucode/register.h
+#define LED_PWM_REG1 0x21db 	///../ucode/register.h
+#define P_LED_PWM_REG1 		CBUS_REG_ADDR(LED_PWM_REG1) 	///../ucode/register.h
+#define LED_PWM_REG2 0x21dc 	///../ucode/register.h
+#define P_LED_PWM_REG2 		CBUS_REG_ADDR(LED_PWM_REG2) 	///../ucode/register.h
+#define LED_PWM_REG3 0x21dd 	///../ucode/register.h
+#define P_LED_PWM_REG3 		CBUS_REG_ADDR(LED_PWM_REG3) 	///../ucode/register.h
+#define LED_PWM_REG4 0x21de 	///../ucode/register.h
+#define P_LED_PWM_REG4 		CBUS_REG_ADDR(LED_PWM_REG4) 	///../ucode/register.h
+#define LED_PWM_REG5 0x21df 	///../ucode/register.h
+#define P_LED_PWM_REG5 		CBUS_REG_ADDR(LED_PWM_REG5) 	///../ucode/register.h
+#define LED_PWM_REG6 0x21e0 	///../ucode/register.h
+#define P_LED_PWM_REG6 		CBUS_REG_ADDR(LED_PWM_REG6) 	///../ucode/register.h
+#define VGHL_PWM_REG0 0x21e1 	///../ucode/register.h
+#define P_VGHL_PWM_REG0 		CBUS_REG_ADDR(VGHL_PWM_REG0) 	///../ucode/register.h
+#define VGHL_PWM_REG1 0x21e2 	///../ucode/register.h
+#define P_VGHL_PWM_REG1 		CBUS_REG_ADDR(VGHL_PWM_REG1) 	///../ucode/register.h
+#define VGHL_PWM_REG2 0x21e3 	///../ucode/register.h
+#define P_VGHL_PWM_REG2 		CBUS_REG_ADDR(VGHL_PWM_REG2) 	///../ucode/register.h
+#define VGHL_PWM_REG3 0x21e4 	///../ucode/register.h
+#define P_VGHL_PWM_REG3 		CBUS_REG_ADDR(VGHL_PWM_REG3) 	///../ucode/register.h
+#define VGHL_PWM_REG4 0x21e5 	///../ucode/register.h
+#define P_VGHL_PWM_REG4 		CBUS_REG_ADDR(VGHL_PWM_REG4) 	///../ucode/register.h
+#define VGHL_PWM_REG5 0x21e6 	///../ucode/register.h
+#define P_VGHL_PWM_REG5 		CBUS_REG_ADDR(VGHL_PWM_REG5) 	///../ucode/register.h
+#define VGHL_PWM_REG6 0x21e7 	///../ucode/register.h
+#define P_VGHL_PWM_REG6 		CBUS_REG_ADDR(VGHL_PWM_REG6) 	///../ucode/register.h
+#define I2C_M_1_CONTROL_REG 0x21f0 	///../ucode/register.h
+#define P_I2C_M_1_CONTROL_REG 		CBUS_REG_ADDR(I2C_M_1_CONTROL_REG) 	///../ucode/register.h
+#define I2C_M_1_SLAVE_ADDR 0x21f1 	///../ucode/register.h
+#define P_I2C_M_1_SLAVE_ADDR 		CBUS_REG_ADDR(I2C_M_1_SLAVE_ADDR) 	///../ucode/register.h
+#define I2C_M_1_TOKEN_LIST0 0x21f2 	///../ucode/register.h
+#define P_I2C_M_1_TOKEN_LIST0 		CBUS_REG_ADDR(I2C_M_1_TOKEN_LIST0) 	///../ucode/register.h
+#define I2C_M_1_TOKEN_LIST1 0x21f3 	///../ucode/register.h
+#define P_I2C_M_1_TOKEN_LIST1 		CBUS_REG_ADDR(I2C_M_1_TOKEN_LIST1) 	///../ucode/register.h
+#define I2C_M_1_WDATA_REG0 0x21f4 	///../ucode/register.h
+#define P_I2C_M_1_WDATA_REG0 		CBUS_REG_ADDR(I2C_M_1_WDATA_REG0) 	///../ucode/register.h
+#define I2C_M_1_WDATA_REG1 0x21f5 	///../ucode/register.h
+#define P_I2C_M_1_WDATA_REG1 		CBUS_REG_ADDR(I2C_M_1_WDATA_REG1) 	///../ucode/register.h
+#define I2C_M_1_RDATA_REG0 0x21f6 	///../ucode/register.h
+#define P_I2C_M_1_RDATA_REG0 		CBUS_REG_ADDR(I2C_M_1_RDATA_REG0) 	///../ucode/register.h
+#define I2C_M_1_RDATA_REG1 0x21f7 	///../ucode/register.h
+#define P_I2C_M_1_RDATA_REG1 		CBUS_REG_ADDR(I2C_M_1_RDATA_REG1) 	///../ucode/register.h
+#define I2C_M_2_CONTROL_REG 0x21f8 	///../ucode/register.h
+#define P_I2C_M_2_CONTROL_REG 		CBUS_REG_ADDR(I2C_M_2_CONTROL_REG) 	///../ucode/register.h
+#define I2C_M_2_SLAVE_ADDR 0x21f9 	///../ucode/register.h
+#define P_I2C_M_2_SLAVE_ADDR 		CBUS_REG_ADDR(I2C_M_2_SLAVE_ADDR) 	///../ucode/register.h
+#define I2C_M_2_TOKEN_LIST0 0x21fa 	///../ucode/register.h
+#define P_I2C_M_2_TOKEN_LIST0 		CBUS_REG_ADDR(I2C_M_2_TOKEN_LIST0) 	///../ucode/register.h
+#define I2C_M_2_TOKEN_LIST1 0x21fb 	///../ucode/register.h
+#define P_I2C_M_2_TOKEN_LIST1 		CBUS_REG_ADDR(I2C_M_2_TOKEN_LIST1) 	///../ucode/register.h
+#define I2C_M_2_WDATA_REG0 0x21fc 	///../ucode/register.h
+#define P_I2C_M_2_WDATA_REG0 		CBUS_REG_ADDR(I2C_M_2_WDATA_REG0) 	///../ucode/register.h
+#define I2C_M_2_WDATA_REG1 0x21fd 	///../ucode/register.h
+#define P_I2C_M_2_WDATA_REG1 		CBUS_REG_ADDR(I2C_M_2_WDATA_REG1) 	///../ucode/register.h
+#define I2C_M_2_RDATA_REG0 0x21fe 	///../ucode/register.h
+#define P_I2C_M_2_RDATA_REG0 		CBUS_REG_ADDR(I2C_M_2_RDATA_REG0) 	///../ucode/register.h
+#define I2C_M_2_RDATA_REG1 0x21ff 	///../ucode/register.h
+#define P_I2C_M_2_RDATA_REG1 		CBUS_REG_ADDR(I2C_M_2_RDATA_REG1) 	///../ucode/register.h
+#define USB_ADDR0 0x2200 	///../ucode/register.h
+#define P_USB_ADDR0 		CBUS_REG_ADDR(USB_ADDR0) 	///../ucode/register.h
+#define USB_ADDR1 0x2201 	///../ucode/register.h
+#define P_USB_ADDR1 		CBUS_REG_ADDR(USB_ADDR1) 	///../ucode/register.h
+#define USB_ADDR2 0x2202 	///../ucode/register.h
+#define P_USB_ADDR2 		CBUS_REG_ADDR(USB_ADDR2) 	///../ucode/register.h
+#define USB_ADDR3 0x2203 	///../ucode/register.h
+#define P_USB_ADDR3 		CBUS_REG_ADDR(USB_ADDR3) 	///../ucode/register.h
+#define USB_ADDR4 0x2204 	///../ucode/register.h
+#define P_USB_ADDR4 		CBUS_REG_ADDR(USB_ADDR4) 	///../ucode/register.h
+#define USB_ADDR5 0x2205 	///../ucode/register.h
+#define P_USB_ADDR5 		CBUS_REG_ADDR(USB_ADDR5) 	///../ucode/register.h
+#define USB_ADDR6 0x2206 	///../ucode/register.h
+#define P_USB_ADDR6 		CBUS_REG_ADDR(USB_ADDR6) 	///../ucode/register.h
+#define USB_ADDR7 0x2207 	///../ucode/register.h
+#define P_USB_ADDR7 		CBUS_REG_ADDR(USB_ADDR7) 	///../ucode/register.h
+#define USB_ADDR8 0x2208 	///../ucode/register.h
+#define P_USB_ADDR8 		CBUS_REG_ADDR(USB_ADDR8) 	///../ucode/register.h
+#define USB_ADDR9 0x2209 	///../ucode/register.h
+#define P_USB_ADDR9 		CBUS_REG_ADDR(USB_ADDR9) 	///../ucode/register.h
+#define USB_ADDR10 0x220a 	///../ucode/register.h
+#define P_USB_ADDR10 		CBUS_REG_ADDR(USB_ADDR10) 	///../ucode/register.h
+#define USB_ADDR11 0x220b 	///../ucode/register.h
+#define P_USB_ADDR11 		CBUS_REG_ADDR(USB_ADDR11) 	///../ucode/register.h
+#define USB_ADDR12 0x220c 	///../ucode/register.h
+#define P_USB_ADDR12 		CBUS_REG_ADDR(USB_ADDR12) 	///../ucode/register.h
+#define USB_ADDR13 0x220d 	///../ucode/register.h
+#define P_USB_ADDR13 		CBUS_REG_ADDR(USB_ADDR13) 	///../ucode/register.h
+#define USB_ADDR14 0x220e 	///../ucode/register.h
+#define P_USB_ADDR14 		CBUS_REG_ADDR(USB_ADDR14) 	///../ucode/register.h
+#define USB_ADDR15 0x220f 	///../ucode/register.h
+#define P_USB_ADDR15 		CBUS_REG_ADDR(USB_ADDR15) 	///../ucode/register.h
+#define USB_ADDR16 0x2210 	///../ucode/register.h
+#define P_USB_ADDR16 		CBUS_REG_ADDR(USB_ADDR16) 	///../ucode/register.h
+#define USB_ADDR17 0x2211 	///../ucode/register.h
+#define P_USB_ADDR17 		CBUS_REG_ADDR(USB_ADDR17) 	///../ucode/register.h
+#define USB_ADDR18 0x2212 	///../ucode/register.h
+#define P_USB_ADDR18 		CBUS_REG_ADDR(USB_ADDR18) 	///../ucode/register.h
+#define USB_ADDR19 0x2213 	///../ucode/register.h
+#define P_USB_ADDR19 		CBUS_REG_ADDR(USB_ADDR19) 	///../ucode/register.h
+#define USB_ADDR20 0x2214 	///../ucode/register.h
+#define P_USB_ADDR20 		CBUS_REG_ADDR(USB_ADDR20) 	///../ucode/register.h
+#define USB_ADDR21 0x2215 	///../ucode/register.h
+#define P_USB_ADDR21 		CBUS_REG_ADDR(USB_ADDR21) 	///../ucode/register.h
+#define USB_ADDR22 0x2216 	///../ucode/register.h
+#define P_USB_ADDR22 		CBUS_REG_ADDR(USB_ADDR22) 	///../ucode/register.h
+#define USB_ADDR23 0x2217 	///../ucode/register.h
+#define P_USB_ADDR23 		CBUS_REG_ADDR(USB_ADDR23) 	///../ucode/register.h
+#define USB_ADDR24 0x2218 	///../ucode/register.h
+#define P_USB_ADDR24 		CBUS_REG_ADDR(USB_ADDR24) 	///../ucode/register.h
+#define USB_ADDR25 0x2219 	///../ucode/register.h
+#define P_USB_ADDR25 		CBUS_REG_ADDR(USB_ADDR25) 	///../ucode/register.h
+#define USB_ADDR26 0x221a 	///../ucode/register.h
+#define P_USB_ADDR26 		CBUS_REG_ADDR(USB_ADDR26) 	///../ucode/register.h
+#define USB_ADDR27 0x221b 	///../ucode/register.h
+#define P_USB_ADDR27 		CBUS_REG_ADDR(USB_ADDR27) 	///../ucode/register.h
+#define USB_ADDR28 0x221c 	///../ucode/register.h
+#define P_USB_ADDR28 		CBUS_REG_ADDR(USB_ADDR28) 	///../ucode/register.h
+#define USB_ADDR29 0x221d 	///../ucode/register.h
+#define P_USB_ADDR29 		CBUS_REG_ADDR(USB_ADDR29) 	///../ucode/register.h
+#define USB_ADDR30 0x221e 	///../ucode/register.h
+#define P_USB_ADDR30 		CBUS_REG_ADDR(USB_ADDR30) 	///../ucode/register.h
+#define USB_ADDR31 0x221f 	///../ucode/register.h
+#define P_USB_ADDR31 		CBUS_REG_ADDR(USB_ADDR31) 	///../ucode/register.h
+#define BT_CTRL 0x2240 	///../ucode/register.h
+#define P_BT_CTRL 		CBUS_REG_ADDR(BT_CTRL) 	///../ucode/register.h
+#define BT_VBISTART 0x2241 	///../ucode/register.h
+#define P_BT_VBISTART 		CBUS_REG_ADDR(BT_VBISTART) 	///../ucode/register.h
+#define BT_VBIEND 0x2242 	///../ucode/register.h
+#define P_BT_VBIEND 		CBUS_REG_ADDR(BT_VBIEND) 	///../ucode/register.h
+#define BT_FIELDSADR 0x2243 	///../ucode/register.h
+#define P_BT_FIELDSADR 		CBUS_REG_ADDR(BT_FIELDSADR) 	///../ucode/register.h
+#define BT_LINECTRL 0x2244 	///../ucode/register.h
+#define P_BT_LINECTRL 		CBUS_REG_ADDR(BT_LINECTRL) 	///../ucode/register.h
+#define BT_VIDEOSTART 0x2245 	///../ucode/register.h
+#define P_BT_VIDEOSTART 		CBUS_REG_ADDR(BT_VIDEOSTART) 	///../ucode/register.h
+#define BT_VIDEOEND 0x2246 	///../ucode/register.h
+#define P_BT_VIDEOEND 		CBUS_REG_ADDR(BT_VIDEOEND) 	///../ucode/register.h
+#define BT_SLICELINE0 0x2247 	///../ucode/register.h
+#define P_BT_SLICELINE0 		CBUS_REG_ADDR(BT_SLICELINE0) 	///../ucode/register.h
+#define BT_SLICELINE1 0x2248 	///../ucode/register.h
+#define P_BT_SLICELINE1 		CBUS_REG_ADDR(BT_SLICELINE1) 	///../ucode/register.h
+#define BT_PORT_CTRL 0x2249 	///../ucode/register.h
+#define P_BT_PORT_CTRL 		CBUS_REG_ADDR(BT_PORT_CTRL) 	///../ucode/register.h
+#define BT_SWAP_CTRL 0x224a 	///../ucode/register.h
+#define P_BT_SWAP_CTRL 		CBUS_REG_ADDR(BT_SWAP_CTRL) 	///../ucode/register.h
+#define BT_ANCISADR 0x224b 	///../ucode/register.h
+#define P_BT_ANCISADR 		CBUS_REG_ADDR(BT_ANCISADR) 	///../ucode/register.h
+#define BT_ANCIEADR 0x224c 	///../ucode/register.h
+#define P_BT_ANCIEADR 		CBUS_REG_ADDR(BT_ANCIEADR) 	///../ucode/register.h
+#define BT_AFIFO_CTRL 0x224d 	///../ucode/register.h
+#define P_BT_AFIFO_CTRL 		CBUS_REG_ADDR(BT_AFIFO_CTRL) 	///../ucode/register.h
+#define BT_601_CTRL0 0x224e 	///../ucode/register.h
+#define P_BT_601_CTRL0 		CBUS_REG_ADDR(BT_601_CTRL0) 	///../ucode/register.h
+#define BT_601_CTRL1 0x224f 	///../ucode/register.h
+#define P_BT_601_CTRL1 		CBUS_REG_ADDR(BT_601_CTRL1) 	///../ucode/register.h
+#define BT_601_CTRL2 0x2250 	///../ucode/register.h
+#define P_BT_601_CTRL2 		CBUS_REG_ADDR(BT_601_CTRL2) 	///../ucode/register.h
+#define BT_601_CTRL3 0x2251 	///../ucode/register.h
+#define P_BT_601_CTRL3 		CBUS_REG_ADDR(BT_601_CTRL3) 	///../ucode/register.h
+#define BT_FIELD_LUMA 0x2252 	///../ucode/register.h
+#define P_BT_FIELD_LUMA 		CBUS_REG_ADDR(BT_FIELD_LUMA) 	///../ucode/register.h
+#define BT_RAW_CTRL 0x2253 	///../ucode/register.h
+#define P_BT_RAW_CTRL 		CBUS_REG_ADDR(BT_RAW_CTRL) 	///../ucode/register.h
+#define BT_STATUS 0x2254 	///../ucode/register.h
+#define P_BT_STATUS 		CBUS_REG_ADDR(BT_STATUS) 	///../ucode/register.h
+#define BT_INT_CTRL 0x2255 	///../ucode/register.h
+#define P_BT_INT_CTRL 		CBUS_REG_ADDR(BT_INT_CTRL) 	///../ucode/register.h
+#define BT_ANCI_STATUS 0x2256 	///../ucode/register.h
+#define P_BT_ANCI_STATUS 		CBUS_REG_ADDR(BT_ANCI_STATUS) 	///../ucode/register.h
+#define BT_VLINE_STATUS 0x2257 	///../ucode/register.h
+#define P_BT_VLINE_STATUS 		CBUS_REG_ADDR(BT_VLINE_STATUS) 	///../ucode/register.h
+#define BT_AFIFO_PTR 0x2258 	///../ucode/register.h
+#define P_BT_AFIFO_PTR 		CBUS_REG_ADDR(BT_AFIFO_PTR) 	///../ucode/register.h
+#define BT_JPEGBYTENUM 0x2259 	///../ucode/register.h
+#define P_BT_JPEGBYTENUM 		CBUS_REG_ADDR(BT_JPEGBYTENUM) 	///../ucode/register.h
+#define BT_ERR_CNT 0x225a 	///../ucode/register.h
+#define P_BT_ERR_CNT 		CBUS_REG_ADDR(BT_ERR_CNT) 	///../ucode/register.h
+#define BT_JPEG_STATUS0 0x225b 	///../ucode/register.h
+#define P_BT_JPEG_STATUS0 		CBUS_REG_ADDR(BT_JPEG_STATUS0) 	///../ucode/register.h
+#define BT_JPEG_STATUS1 0x225c 	///../ucode/register.h
+#define P_BT_JPEG_STATUS1 		CBUS_REG_ADDR(BT_JPEG_STATUS1) 	///../ucode/register.h
+#define BT_LCNT_STATUS 0x225d 	///../ucode/register.h
+#define P_BT_LCNT_STATUS 		CBUS_REG_ADDR(BT_LCNT_STATUS) 	///../ucode/register.h
+#define BT_PCNT_STATUS 0x225e 	///../ucode/register.h
+#define P_BT_PCNT_STATUS 		CBUS_REG_ADDR(BT_PCNT_STATUS) 	///../ucode/register.h
+#define BT656_ADDR_END 0x225f 	///../ucode/register.h
+#define P_BT656_ADDR_END 		CBUS_REG_ADDR(BT656_ADDR_END) 	///../ucode/register.h
+#define NDMA_CNTL_REG0 0x2270 	///../ucode/register.h
+#define P_NDMA_CNTL_REG0 		CBUS_REG_ADDR(NDMA_CNTL_REG0) 	///../ucode/register.h
+#define NDMA_TABLE_ADD_REG 0x2272 	///../ucode/register.h
+#define P_NDMA_TABLE_ADD_REG 		CBUS_REG_ADDR(NDMA_TABLE_ADD_REG) 	///../ucode/register.h
+#define NDMA_TDES_KEY_LO 0x2273 	///../ucode/register.h
+#define P_NDMA_TDES_KEY_LO 		CBUS_REG_ADDR(NDMA_TDES_KEY_LO) 	///../ucode/register.h
+#define NDMA_TDES_KEY_HI 0x2274 	///../ucode/register.h
+#define P_NDMA_TDES_KEY_HI 		CBUS_REG_ADDR(NDMA_TDES_KEY_HI) 	///../ucode/register.h
+#define NDMA_TDES_CONTROL 0x2275 	///../ucode/register.h
+#define P_NDMA_TDES_CONTROL 		CBUS_REG_ADDR(NDMA_TDES_CONTROL) 	///../ucode/register.h
+#define NDMA_RIJNDAEL_CONTROL 0x2276 	///../ucode/register.h
+#define P_NDMA_RIJNDAEL_CONTROL 		CBUS_REG_ADDR(NDMA_RIJNDAEL_CONTROL) 	///../ucode/register.h
+#define NDMA_RIJNDAEL_RK_FIFO 0x2277 	///../ucode/register.h
+#define P_NDMA_RIJNDAEL_RK_FIFO 		CBUS_REG_ADDR(NDMA_RIJNDAEL_RK_FIFO) 	///../ucode/register.h
+#define NDMA_CRC_OUT 0x2278 	///../ucode/register.h
+#define P_NDMA_CRC_OUT 		CBUS_REG_ADDR(NDMA_CRC_OUT) 	///../ucode/register.h
+#define NDMA_THREAD_REG 0x2279 	///../ucode/register.h
+#define P_NDMA_THREAD_REG 		CBUS_REG_ADDR(NDMA_THREAD_REG) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_START0 0x2280 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_START0 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_START0) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_CURR0 0x2281 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_CURR0 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_CURR0) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_END0 0x2282 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_END0 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_END0) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_START1 0x2283 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_START1 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_START1) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_CURR1 0x2284 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_CURR1 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_CURR1) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_END1 0x2285 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_END1 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_END1) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_START2 0x2286 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_START2 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_START2) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_CURR2 0x2287 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_CURR2 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_CURR2) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_END2 0x2288 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_END2 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_END2) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_START3 0x2289 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_START3 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_START3) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_CURR3 0x228a 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_CURR3 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_CURR3) 	///../ucode/register.h
+#define NDMA_THREAD_TABLE_END3 0x228b 	///../ucode/register.h
+#define P_NDMA_THREAD_TABLE_END3 		CBUS_REG_ADDR(NDMA_THREAD_TABLE_END3) 	///../ucode/register.h
+#define NDMA_CNTL_REG1 0x228c 	///../ucode/register.h
+#define P_NDMA_CNTL_REG1 		CBUS_REG_ADDR(NDMA_CNTL_REG1) 	///../ucode/register.h
+#define NDMA_AES_KEY_0 0x2290 	///../ucode/register.h
+#define P_NDMA_AES_KEY_0 		CBUS_REG_ADDR(NDMA_AES_KEY_0) 	///../ucode/register.h
+#define NDMA_AES_KEY_1 0x2291 	///../ucode/register.h
+#define P_NDMA_AES_KEY_1 		CBUS_REG_ADDR(NDMA_AES_KEY_1) 	///../ucode/register.h
+#define NDMA_AES_KEY_2 0x2292 	///../ucode/register.h
+#define P_NDMA_AES_KEY_2 		CBUS_REG_ADDR(NDMA_AES_KEY_2) 	///../ucode/register.h
+#define NDMA_AES_KEY_3 0x2293 	///../ucode/register.h
+#define P_NDMA_AES_KEY_3 		CBUS_REG_ADDR(NDMA_AES_KEY_3) 	///../ucode/register.h
+#define NDMA_AES_KEY_4 0x2294 	///../ucode/register.h
+#define P_NDMA_AES_KEY_4 		CBUS_REG_ADDR(NDMA_AES_KEY_4) 	///../ucode/register.h
+#define NDMA_AES_KEY_5 0x2295 	///../ucode/register.h
+#define P_NDMA_AES_KEY_5 		CBUS_REG_ADDR(NDMA_AES_KEY_5) 	///../ucode/register.h
+#define NDMA_AES_KEY_6 0x2296 	///../ucode/register.h
+#define P_NDMA_AES_KEY_6 		CBUS_REG_ADDR(NDMA_AES_KEY_6) 	///../ucode/register.h
+#define NDMA_AES_KEY_7 0x2297 	///../ucode/register.h
+#define P_NDMA_AES_KEY_7 		CBUS_REG_ADDR(NDMA_AES_KEY_7) 	///../ucode/register.h
+#define NDMA_AES_IV_0 0x2298 	///../ucode/register.h
+#define P_NDMA_AES_IV_0 		CBUS_REG_ADDR(NDMA_AES_IV_0) 	///../ucode/register.h
+#define NDMA_AES_IV_1 0x2299 	///../ucode/register.h
+#define P_NDMA_AES_IV_1 		CBUS_REG_ADDR(NDMA_AES_IV_1) 	///../ucode/register.h
+#define NDMA_AES_IV_2 0x229a 	///../ucode/register.h
+#define P_NDMA_AES_IV_2 		CBUS_REG_ADDR(NDMA_AES_IV_2) 	///../ucode/register.h
+#define NDMA_AES_IV_3 0x229b 	///../ucode/register.h
+#define P_NDMA_AES_IV_3 		CBUS_REG_ADDR(NDMA_AES_IV_3) 	///../ucode/register.h
+#define STREAM_EVENT_INFO 0x2300 	///../ucode/register.h
+#define P_STREAM_EVENT_INFO 		CBUS_REG_ADDR(STREAM_EVENT_INFO) 	///../ucode/register.h
+#define STREAM_OUTPUT_CONFIG 0x2301 	///../ucode/register.h
+#define P_STREAM_OUTPUT_CONFIG 		CBUS_REG_ADDR(STREAM_OUTPUT_CONFIG) 	///../ucode/register.h
+#define C_D_BUS_CONTROL 0x2302 	///../ucode/register.h
+#define P_C_D_BUS_CONTROL 		CBUS_REG_ADDR(C_D_BUS_CONTROL) 	///../ucode/register.h
+#define C_DATA 0x2303 	///../ucode/register.h
+#define P_C_DATA 		CBUS_REG_ADDR(C_DATA) 	///../ucode/register.h
+#define STREAM_BUS_CONFIG 0x2304 	///../ucode/register.h
+#define P_STREAM_BUS_CONFIG 		CBUS_REG_ADDR(STREAM_BUS_CONFIG) 	///../ucode/register.h
+#define STREAM_DATA_IN_CONFIG 0x2305 	///../ucode/register.h
+#define P_STREAM_DATA_IN_CONFIG 		CBUS_REG_ADDR(STREAM_DATA_IN_CONFIG) 	///../ucode/register.h
+#define STREAM_WAIT_IRQ_CONFIG 0x2306 	///../ucode/register.h
+#define P_STREAM_WAIT_IRQ_CONFIG 		CBUS_REG_ADDR(STREAM_WAIT_IRQ_CONFIG) 	///../ucode/register.h
+#define STREAM_EVENT_CTL 0x2307 	///../ucode/register.h
+#define P_STREAM_EVENT_CTL 		CBUS_REG_ADDR(STREAM_EVENT_CTL) 	///../ucode/register.h
+#define CMD_ARGUMENT 0x2308 	///../ucode/register.h
+#define P_CMD_ARGUMENT 		CBUS_REG_ADDR(CMD_ARGUMENT) 	///../ucode/register.h
+#define CMD_SEND 0x2309 	///../ucode/register.h
+#define P_CMD_SEND 		CBUS_REG_ADDR(CMD_SEND) 	///../ucode/register.h
+#define SDIO_CONFIG 0x230a 	///../ucode/register.h
+#define P_SDIO_CONFIG 		CBUS_REG_ADDR(SDIO_CONFIG) 	///../ucode/register.h
+#define SDIO_STATUS_IRQ 0x230b 	///../ucode/register.h
+#define P_SDIO_STATUS_IRQ 		CBUS_REG_ADDR(SDIO_STATUS_IRQ) 	///../ucode/register.h
+#define SDIO_IRQ_CONFIG 0x230c 	///../ucode/register.h
+#define P_SDIO_IRQ_CONFIG 		CBUS_REG_ADDR(SDIO_IRQ_CONFIG) 	///../ucode/register.h
+#define SDIO_MULT_CONFIG 0x230d 	///../ucode/register.h
+#define P_SDIO_MULT_CONFIG 		CBUS_REG_ADDR(SDIO_MULT_CONFIG) 	///../ucode/register.h
+#define SDIO_M_ADDR 0x230e 	///../ucode/register.h
+#define P_SDIO_M_ADDR 		CBUS_REG_ADDR(SDIO_M_ADDR) 	///../ucode/register.h
+#define SDIO_EXTENSION 0x230f 	///../ucode/register.h
+#define P_SDIO_EXTENSION 		CBUS_REG_ADDR(SDIO_EXTENSION) 	///../ucode/register.h
+#define ASYNC_FIFO_REG0 0x2310 	///../ucode/register.h
+#define P_ASYNC_FIFO_REG0 		CBUS_REG_ADDR(ASYNC_FIFO_REG0) 	///../ucode/register.h
+#define ASYNC_FIFO_REG1 0x2311 	///../ucode/register.h
+#define P_ASYNC_FIFO_REG1 		CBUS_REG_ADDR(ASYNC_FIFO_REG1) 	///../ucode/register.h
+#define ASYNC_FIFO_REG2 0x2312 	///../ucode/register.h
+#define P_ASYNC_FIFO_REG2 		CBUS_REG_ADDR(ASYNC_FIFO_REG2) 	///../ucode/register.h
+#define ASYNC_FIFO_REG3 0x2313 	///../ucode/register.h
+#define P_ASYNC_FIFO_REG3 		CBUS_REG_ADDR(ASYNC_FIFO_REG3) 	///../ucode/register.h
+#define ASYNC_FIFO2_REG0 0x2314 	///../ucode/register.h
+#define P_ASYNC_FIFO2_REG0 		CBUS_REG_ADDR(ASYNC_FIFO2_REG0) 	///../ucode/register.h
+#define ASYNC_FIFO2_REG1 0x2315 	///../ucode/register.h
+#define P_ASYNC_FIFO2_REG1 		CBUS_REG_ADDR(ASYNC_FIFO2_REG1) 	///../ucode/register.h
+#define ASYNC_FIFO2_REG2 0x2316 	///../ucode/register.h
+#define P_ASYNC_FIFO2_REG2 		CBUS_REG_ADDR(ASYNC_FIFO2_REG2) 	///../ucode/register.h
+#define ASYNC_FIFO2_REG3 0x2317 	///../ucode/register.h
+#define P_ASYNC_FIFO2_REG3 		CBUS_REG_ADDR(ASYNC_FIFO2_REG3) 	///../ucode/register.h
+#define SDIO_AHB_CBUS_CTRL 0x2318 	///../ucode/register.h
+#define P_SDIO_AHB_CBUS_CTRL 		CBUS_REG_ADDR(SDIO_AHB_CBUS_CTRL) 	///../ucode/register.h
+#define SDIO_AHB_CBUS_M_DATA 0x2319 	///../ucode/register.h
+#define P_SDIO_AHB_CBUS_M_DATA 		CBUS_REG_ADDR(SDIO_AHB_CBUS_M_DATA) 	///../ucode/register.h
+#define SPI_FLASH_CMD 0x2320 	///../ucode/register.h
+#define P_SPI_FLASH_CMD 		CBUS_REG_ADDR(SPI_FLASH_CMD) 	///../ucode/register.h
+#define SPI_FLASH_ADDR 0x2321 	///../ucode/register.h
+#define P_SPI_FLASH_ADDR 		CBUS_REG_ADDR(SPI_FLASH_ADDR) 	///../ucode/register.h
+#define SPI_FLASH_CTRL 0x2322 	///../ucode/register.h
+#define P_SPI_FLASH_CTRL 		CBUS_REG_ADDR(SPI_FLASH_CTRL) 	///../ucode/register.h
+#define SPI_FLASH_CTRL1 0x2323 	///../ucode/register.h
+#define P_SPI_FLASH_CTRL1 		CBUS_REG_ADDR(SPI_FLASH_CTRL1) 	///../ucode/register.h
+#define SPI_FLASH_STATUS 0x2324 	///../ucode/register.h
+#define P_SPI_FLASH_STATUS 		CBUS_REG_ADDR(SPI_FLASH_STATUS) 	///../ucode/register.h
+#define SPI_FLASH_CTRL2 0x2325 	///../ucode/register.h
+#define P_SPI_FLASH_CTRL2 		CBUS_REG_ADDR(SPI_FLASH_CTRL2) 	///../ucode/register.h
+#define SPI_FLASH_CLOCK 0x2326 	///../ucode/register.h
+#define P_SPI_FLASH_CLOCK 		CBUS_REG_ADDR(SPI_FLASH_CLOCK) 	///../ucode/register.h
+#define SPI_FLASH_USER 0x2327 	///../ucode/register.h
+#define P_SPI_FLASH_USER 		CBUS_REG_ADDR(SPI_FLASH_USER) 	///../ucode/register.h
+#define SPI_FLASH_USER1 0x2328 	///../ucode/register.h
+#define P_SPI_FLASH_USER1 		CBUS_REG_ADDR(SPI_FLASH_USER1) 	///../ucode/register.h
+#define SPI_FLASH_USER2 0x2329 	///../ucode/register.h
+#define P_SPI_FLASH_USER2 		CBUS_REG_ADDR(SPI_FLASH_USER2) 	///../ucode/register.h
+#define SPI_FLASH_USER3 0x232a 	///../ucode/register.h
+#define P_SPI_FLASH_USER3 		CBUS_REG_ADDR(SPI_FLASH_USER3) 	///../ucode/register.h
+#define SPI_FLASH_USER4 0x232b 	///../ucode/register.h
+#define P_SPI_FLASH_USER4 		CBUS_REG_ADDR(SPI_FLASH_USER4) 	///../ucode/register.h
+#define SPI_FLASH_SLAVE 0x232c 	///../ucode/register.h
+#define P_SPI_FLASH_SLAVE 		CBUS_REG_ADDR(SPI_FLASH_SLAVE) 	///../ucode/register.h
+#define SPI_FLASH_SLAVE1 0x232d 	///../ucode/register.h
+#define P_SPI_FLASH_SLAVE1 		CBUS_REG_ADDR(SPI_FLASH_SLAVE1) 	///../ucode/register.h
+#define SPI_FLASH_SLAVE2 0x232e 	///../ucode/register.h
+#define P_SPI_FLASH_SLAVE2 		CBUS_REG_ADDR(SPI_FLASH_SLAVE2) 	///../ucode/register.h
+#define SPI_FLASH_SLAVE3 0x232f 	///../ucode/register.h
+#define P_SPI_FLASH_SLAVE3 		CBUS_REG_ADDR(SPI_FLASH_SLAVE3) 	///../ucode/register.h
+#define SPI_FLASH_C0 0x2330 	///../ucode/register.h
+#define P_SPI_FLASH_C0 		CBUS_REG_ADDR(SPI_FLASH_C0) 	///../ucode/register.h
+#define SPI_FLASH_C1 0x2331 	///../ucode/register.h
+#define P_SPI_FLASH_C1 		CBUS_REG_ADDR(SPI_FLASH_C1) 	///../ucode/register.h
+#define SPI_FLASH_C2 0x2332 	///../ucode/register.h
+#define P_SPI_FLASH_C2 		CBUS_REG_ADDR(SPI_FLASH_C2) 	///../ucode/register.h
+#define SPI_FLASH_C3 0x2333 	///../ucode/register.h
+#define P_SPI_FLASH_C3 		CBUS_REG_ADDR(SPI_FLASH_C3) 	///../ucode/register.h
+#define SPI_FLASH_C4 0x2334 	///../ucode/register.h
+#define P_SPI_FLASH_C4 		CBUS_REG_ADDR(SPI_FLASH_C4) 	///../ucode/register.h
+#define SPI_FLASH_C5 0x2335 	///../ucode/register.h
+#define P_SPI_FLASH_C5 		CBUS_REG_ADDR(SPI_FLASH_C5) 	///../ucode/register.h
+#define SPI_FLASH_C6 0x2336 	///../ucode/register.h
+#define P_SPI_FLASH_C6 		CBUS_REG_ADDR(SPI_FLASH_C6) 	///../ucode/register.h
+#define SPI_FLASH_C7 0x2337 	///../ucode/register.h
+#define P_SPI_FLASH_C7 		CBUS_REG_ADDR(SPI_FLASH_C7) 	///../ucode/register.h
+#define SPI_FLASH_B8 0x2338 	///../ucode/register.h
+#define P_SPI_FLASH_B8 		CBUS_REG_ADDR(SPI_FLASH_B8) 	///../ucode/register.h
+#define SPI_FLASH_B9 0x2339 	///../ucode/register.h
+#define P_SPI_FLASH_B9 		CBUS_REG_ADDR(SPI_FLASH_B9) 	///../ucode/register.h
+#define SPI_FLASH_B10 0x233a 	///../ucode/register.h
+#define P_SPI_FLASH_B10 		CBUS_REG_ADDR(SPI_FLASH_B10) 	///../ucode/register.h
+#define SPI_FLASH_B11 0x233b 	///../ucode/register.h
+#define P_SPI_FLASH_B11 		CBUS_REG_ADDR(SPI_FLASH_B11) 	///../ucode/register.h
+#define SPI_FLASH_B12 0x233c 	///../ucode/register.h
+#define P_SPI_FLASH_B12 		CBUS_REG_ADDR(SPI_FLASH_B12) 	///../ucode/register.h
+#define SPI_FLASH_B13 0x233d 	///../ucode/register.h
+#define P_SPI_FLASH_B13 		CBUS_REG_ADDR(SPI_FLASH_B13) 	///../ucode/register.h
+#define SPI_FLASH_B14 0x233e 	///../ucode/register.h
+#define P_SPI_FLASH_B14 		CBUS_REG_ADDR(SPI_FLASH_B14) 	///../ucode/register.h
+#define SPI_FLASH_B15 0x233f 	///../ucode/register.h
+#define P_SPI_FLASH_B15 		CBUS_REG_ADDR(SPI_FLASH_B15) 	///../ucode/register.h
+#define SPICC_RXDATA 0x2360 	///../ucode/register.h
+#define P_SPICC_RXDATA 		CBUS_REG_ADDR(SPICC_RXDATA) 	///../ucode/register.h
+#define SPICC_TXDATA 0x2361 	///../ucode/register.h
+#define P_SPICC_TXDATA 		CBUS_REG_ADDR(SPICC_TXDATA) 	///../ucode/register.h
+#define SPICC_CONREG 0x2362 	///../ucode/register.h
+#define P_SPICC_CONREG 		CBUS_REG_ADDR(SPICC_CONREG) 	///../ucode/register.h
+#define SPICC_INTREG 0x2363 	///../ucode/register.h
+#define P_SPICC_INTREG 		CBUS_REG_ADDR(SPICC_INTREG) 	///../ucode/register.h
+#define SPICC_DMAREG 0x2364 	///../ucode/register.h
+#define P_SPICC_DMAREG 		CBUS_REG_ADDR(SPICC_DMAREG) 	///../ucode/register.h
+#define SPICC_STATREG 0x2365 	///../ucode/register.h
+#define P_SPICC_STATREG 		CBUS_REG_ADDR(SPICC_STATREG) 	///../ucode/register.h
+#define SPICC_PERIODREG 0x2366 	///../ucode/register.h
+#define P_SPICC_PERIODREG 		CBUS_REG_ADDR(SPICC_PERIODREG) 	///../ucode/register.h
+#define SPICC_TESTREG 0x2367 	///../ucode/register.h
+#define P_SPICC_TESTREG 		CBUS_REG_ADDR(SPICC_TESTREG) 	///../ucode/register.h
+#define SPICC_DRADDR 0x2368 	///../ucode/register.h
+#define P_SPICC_DRADDR 		CBUS_REG_ADDR(SPICC_DRADDR) 	///../ucode/register.h
+#define SPICC_DWADDR 0x2369 	///../ucode/register.h
+#define P_SPICC_DWADDR 		CBUS_REG_ADDR(SPICC_DWADDR) 	///../ucode/register.h
+#define SD_REG0_ARGU 0x2380 	///../ucode/register.h
+#define P_SD_REG0_ARGU 		CBUS_REG_ADDR(SD_REG0_ARGU) 	///../ucode/register.h
+#define SD_REG1_SEND 0x2381 	///../ucode/register.h
+#define P_SD_REG1_SEND 		CBUS_REG_ADDR(SD_REG1_SEND) 	///../ucode/register.h
+#define SD_REG2_CNTL 0x2382 	///../ucode/register.h
+#define P_SD_REG2_CNTL 		CBUS_REG_ADDR(SD_REG2_CNTL) 	///../ucode/register.h
+#define SD_REG3_STAT 0x2383 	///../ucode/register.h
+#define P_SD_REG3_STAT 		CBUS_REG_ADDR(SD_REG3_STAT) 	///../ucode/register.h
+#define SD_REG4_CLKC 0x2384 	///../ucode/register.h
+#define P_SD_REG4_CLKC 		CBUS_REG_ADDR(SD_REG4_CLKC) 	///../ucode/register.h
+#define SD_REG5_ADDR 0x2385 	///../ucode/register.h
+#define P_SD_REG5_ADDR 		CBUS_REG_ADDR(SD_REG5_ADDR) 	///../ucode/register.h
+#define SD_REG6_PDMA 0x2386 	///../ucode/register.h
+#define P_SD_REG6_PDMA 		CBUS_REG_ADDR(SD_REG6_PDMA) 	///../ucode/register.h
+#define SD_REG7_MISC 0x2387 	///../ucode/register.h
+#define P_SD_REG7_MISC 		CBUS_REG_ADDR(SD_REG7_MISC) 	///../ucode/register.h
+#define SD_REG8_DATA 0x2388 	///../ucode/register.h
+#define P_SD_REG8_DATA 		CBUS_REG_ADDR(SD_REG8_DATA) 	///../ucode/register.h
+#define SD_REG9_ICTL 0x2389 	///../ucode/register.h
+#define P_SD_REG9_ICTL 		CBUS_REG_ADDR(SD_REG9_ICTL) 	///../ucode/register.h
+#define SD_REGA_ISTA 0x238a 	///../ucode/register.h
+#define P_SD_REGA_ISTA 		CBUS_REG_ADDR(SD_REGA_ISTA) 	///../ucode/register.h
+#define SD_REGB_SRST 0x238b 	///../ucode/register.h
+#define P_SD_REGB_SRST 		CBUS_REG_ADDR(SD_REGB_SRST) 	///../ucode/register.h
+#define SD_REGC_ESTA 0x238c 	///../ucode/register.h
+#define P_SD_REGC_ESTA 		CBUS_REG_ADDR(SD_REGC_ESTA) 	///../ucode/register.h
+#define ISA_DEBUG_REG0 0x2600 	///../ucode/register.h
+#define P_ISA_DEBUG_REG0 		CBUS_REG_ADDR(ISA_DEBUG_REG0) 	///../ucode/register.h
+#define ISA_DEBUG_REG1 0x2601 	///../ucode/register.h
+#define P_ISA_DEBUG_REG1 		CBUS_REG_ADDR(ISA_DEBUG_REG1) 	///../ucode/register.h
+#define ISA_DEBUG_REG2 0x2602 	///../ucode/register.h
+#define P_ISA_DEBUG_REG2 		CBUS_REG_ADDR(ISA_DEBUG_REG2) 	///../ucode/register.h
+#define ISA_PLL_CLK_SIM0 0x2608 	///../ucode/register.h
+#define P_ISA_PLL_CLK_SIM0 		CBUS_REG_ADDR(ISA_PLL_CLK_SIM0) 	///../ucode/register.h
+#define ISA_CNTL_REG0 0x2609 	///../ucode/register.h
+#define P_ISA_CNTL_REG0 		CBUS_REG_ADDR(ISA_CNTL_REG0) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN0_INTR_STAT 0x2610 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN0_INTR_STAT 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN0_INTR_STAT) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN0_INTR_STAT_CLR 0x2611 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN0_INTR_STAT_CLR 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN0_INTR_STAT_CLR) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN0_INTR_MASK 0x2612 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN0_INTR_MASK 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN0_INTR_MASK) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN0_INTR_FIRQ_SEL 0x2613 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN0_INTR_FIRQ_SEL 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN0_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN1_INTR_STAT 0x2614 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN1_INTR_STAT 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN1_INTR_STAT) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN1_INTR_STAT_CLR 0x2615 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN1_INTR_STAT_CLR 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN1_INTR_STAT_CLR) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN1_INTR_MASK 0x2616 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN1_INTR_MASK 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN1_INTR_MASK) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN1_INTR_FIRQ_SEL 0x2617 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN1_INTR_FIRQ_SEL 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN1_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN2_INTR_STAT 0x2618 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN2_INTR_STAT 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN2_INTR_STAT) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN2_INTR_STAT_CLR 0x2619 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN2_INTR_STAT_CLR 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN2_INTR_STAT_CLR) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN2_INTR_MASK 0x261a 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN2_INTR_MASK 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN2_INTR_MASK) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN2_INTR_FIRQ_SEL 0x261b 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN2_INTR_FIRQ_SEL 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN2_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN3_INTR_STAT 0x261c 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN3_INTR_STAT 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN3_INTR_STAT) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN3_INTR_STAT_CLR 0x261d 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN3_INTR_STAT_CLR 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN3_INTR_STAT_CLR) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN3_INTR_MASK 0x261e 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN3_INTR_MASK 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN3_INTR_MASK) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN3_INTR_FIRQ_SEL 0x261f 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN3_INTR_FIRQ_SEL 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN3_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define GPIO_INTR_EDGE_POL 0x2620 	///../ucode/register.h
+#define P_GPIO_INTR_EDGE_POL 		CBUS_REG_ADDR(GPIO_INTR_EDGE_POL) 	///../ucode/register.h
+#define GPIO_INTR_GPIO_SEL0 0x2621 	///../ucode/register.h
+#define P_GPIO_INTR_GPIO_SEL0 		CBUS_REG_ADDR(GPIO_INTR_GPIO_SEL0) 	///../ucode/register.h
+#define GPIO_INTR_GPIO_SEL1 0x2622 	///../ucode/register.h
+#define P_GPIO_INTR_GPIO_SEL1 		CBUS_REG_ADDR(GPIO_INTR_GPIO_SEL1) 	///../ucode/register.h
+#define GPIO_INTR_FILTER_SEL0 0x2623 	///../ucode/register.h
+#define P_GPIO_INTR_FILTER_SEL0 		CBUS_REG_ADDR(GPIO_INTR_FILTER_SEL0) 	///../ucode/register.h
+#define GLOBAL_INTR_DISABLE 0x2624 	///../ucode/register.h
+#define P_GLOBAL_INTR_DISABLE 		CBUS_REG_ADDR(GLOBAL_INTR_DISABLE) 	///../ucode/register.h
+#define ISA_BIST_REG0 0x2630 	///../ucode/register.h
+#define P_ISA_BIST_REG0 		CBUS_REG_ADDR(ISA_BIST_REG0) 	///../ucode/register.h
+#define ISA_BIST_REG1 0x2631 	///../ucode/register.h
+#define P_ISA_BIST_REG1 		CBUS_REG_ADDR(ISA_BIST_REG1) 	///../ucode/register.h
+#define ISA_BIST_REG2 0x2632 	///../ucode/register.h
+#define P_ISA_BIST_REG2 		CBUS_REG_ADDR(ISA_BIST_REG2) 	///../ucode/register.h
+#define ISA_BIST_REG3 0x2633 	///../ucode/register.h
+#define P_ISA_BIST_REG3 		CBUS_REG_ADDR(ISA_BIST_REG3) 	///../ucode/register.h
+#define ISA_BIST_REG4 0x2634 	///../ucode/register.h
+#define P_ISA_BIST_REG4 		CBUS_REG_ADDR(ISA_BIST_REG4) 	///../ucode/register.h
+#define ISA_BIST_REG5 0x2635 	///../ucode/register.h
+#define P_ISA_BIST_REG5 		CBUS_REG_ADDR(ISA_BIST_REG5) 	///../ucode/register.h
+#define ISA_BIST_REG6 0x2636 	///../ucode/register.h
+#define P_ISA_BIST_REG6 		CBUS_REG_ADDR(ISA_BIST_REG6) 	///../ucode/register.h
+#define ISA_BIST_REG7 0x2637 	///../ucode/register.h
+#define P_ISA_BIST_REG7 		CBUS_REG_ADDR(ISA_BIST_REG7) 	///../ucode/register.h
+#define ISA_BIST_REG8 0x2638 	///../ucode/register.h
+#define P_ISA_BIST_REG8 		CBUS_REG_ADDR(ISA_BIST_REG8) 	///../ucode/register.h
+#define ISA_BIST_REGA 0x2639 	///../ucode/register.h
+#define P_ISA_BIST_REGA 		CBUS_REG_ADDR(ISA_BIST_REGA) 	///../ucode/register.h
+#define WATCHDOG_TC 0x2640 	///../ucode/register.h
+#define P_WATCHDOG_TC 		CBUS_REG_ADDR(WATCHDOG_TC) 	///../ucode/register.h
+#define WATCHDOG_RESET 0x2641 	///../ucode/register.h
+#define P_WATCHDOG_RESET 		CBUS_REG_ADDR(WATCHDOG_RESET) 	///../ucode/register.h
+#define AHB_ARBITER_REG 0x2642 	///../ucode/register.h
+#define P_AHB_ARBITER_REG 		CBUS_REG_ADDR(AHB_ARBITER_REG) 	///../ucode/register.h
+#define AHB_ARBDEC_REG 0x2643 	///../ucode/register.h
+#define P_AHB_ARBDEC_REG 		CBUS_REG_ADDR(AHB_ARBDEC_REG) 	///../ucode/register.h
+#define AHB_ARBITER2_REG 0x264a 	///../ucode/register.h
+#define P_AHB_ARBITER2_REG 		CBUS_REG_ADDR(AHB_ARBITER2_REG) 	///../ucode/register.h
+#define DEVICE_MMCP_CNTL 0x264b 	///../ucode/register.h
+#define P_DEVICE_MMCP_CNTL 		CBUS_REG_ADDR(DEVICE_MMCP_CNTL) 	///../ucode/register.h
+#define AUDIO_MMCP_CNTL 0x264c 	///../ucode/register.h
+#define P_AUDIO_MMCP_CNTL 		CBUS_REG_ADDR(AUDIO_MMCP_CNTL) 	///../ucode/register.h
+#define ISA_TIMER_MUX 0x2650 	///../ucode/register.h
+#define P_ISA_TIMER_MUX 		CBUS_REG_ADDR(ISA_TIMER_MUX) 	///../ucode/register.h
+#define ISA_TIMERA 0x2651 	///../ucode/register.h
+#define P_ISA_TIMERA 		CBUS_REG_ADDR(ISA_TIMERA) 	///../ucode/register.h
+#define ISA_TIMERB 0x2652 	///../ucode/register.h
+#define P_ISA_TIMERB 		CBUS_REG_ADDR(ISA_TIMERB) 	///../ucode/register.h
+#define ISA_TIMERC 0x2653 	///../ucode/register.h
+#define P_ISA_TIMERC 		CBUS_REG_ADDR(ISA_TIMERC) 	///../ucode/register.h
+#define ISA_TIMERD 0x2654 	///../ucode/register.h
+#define P_ISA_TIMERD 		CBUS_REG_ADDR(ISA_TIMERD) 	///../ucode/register.h
+#define ISA_TIMERE 0x2655 	///../ucode/register.h
+#define P_ISA_TIMERE 		CBUS_REG_ADDR(ISA_TIMERE) 	///../ucode/register.h
+#define FBUF_ADDR 0x2656 	///../ucode/register.h
+#define P_FBUF_ADDR 		CBUS_REG_ADDR(FBUF_ADDR) 	///../ucode/register.h
+#define SDRAM_CTL0 0x2657 	///../ucode/register.h
+#define P_SDRAM_CTL0 		CBUS_REG_ADDR(SDRAM_CTL0) 	///../ucode/register.h
+#define SDRAM_CTL2 0x2658 	///../ucode/register.h
+#define P_SDRAM_CTL2 		CBUS_REG_ADDR(SDRAM_CTL2) 	///../ucode/register.h
+#define MEDIA_CPU_CTL 0x2659 	///../ucode/register.h
+#define P_MEDIA_CPU_CTL 		CBUS_REG_ADDR(MEDIA_CPU_CTL) 	///../ucode/register.h
+#define SDRAM_CTL4 0x265a 	///../ucode/register.h
+#define P_SDRAM_CTL4 		CBUS_REG_ADDR(SDRAM_CTL4) 	///../ucode/register.h
+#define SDRAM_CTL5 0x265b 	///../ucode/register.h
+#define P_SDRAM_CTL5 		CBUS_REG_ADDR(SDRAM_CTL5) 	///../ucode/register.h
+#define SDRAM_CTL6 0x265c 	///../ucode/register.h
+#define P_SDRAM_CTL6 		CBUS_REG_ADDR(SDRAM_CTL6) 	///../ucode/register.h
+#define SDRAM_CTL7 0x265d 	///../ucode/register.h
+#define P_SDRAM_CTL7 		CBUS_REG_ADDR(SDRAM_CTL7) 	///../ucode/register.h
+#define SDRAM_CTL8 0x265e 	///../ucode/register.h
+#define P_SDRAM_CTL8 		CBUS_REG_ADDR(SDRAM_CTL8) 	///../ucode/register.h
+#define AHB_MP4_MC_CTL 0x265f 	///../ucode/register.h
+#define P_AHB_MP4_MC_CTL 		CBUS_REG_ADDR(AHB_MP4_MC_CTL) 	///../ucode/register.h
+#define MEDIA_CPU_PCR 0x2660 	///../ucode/register.h
+#define P_MEDIA_CPU_PCR 		CBUS_REG_ADDR(MEDIA_CPU_PCR) 	///../ucode/register.h
+#define ABUF_WR_CTL0 0x2670 	///../ucode/register.h
+#define P_ABUF_WR_CTL0 		CBUS_REG_ADDR(ABUF_WR_CTL0) 	///../ucode/register.h
+#define ABUF_WR_CTL1 0x2671 	///../ucode/register.h
+#define P_ABUF_WR_CTL1 		CBUS_REG_ADDR(ABUF_WR_CTL1) 	///../ucode/register.h
+#define ABUF_WR_CTL2 0x2672 	///../ucode/register.h
+#define P_ABUF_WR_CTL2 		CBUS_REG_ADDR(ABUF_WR_CTL2) 	///../ucode/register.h
+#define ABUF_WR_CTL3 0x2673 	///../ucode/register.h
+#define P_ABUF_WR_CTL3 		CBUS_REG_ADDR(ABUF_WR_CTL3) 	///../ucode/register.h
+#define ABUF_RD_CTL0 0x2674 	///../ucode/register.h
+#define P_ABUF_RD_CTL0 		CBUS_REG_ADDR(ABUF_RD_CTL0) 	///../ucode/register.h
+#define ABUF_RD_CTL1 0x2675 	///../ucode/register.h
+#define P_ABUF_RD_CTL1 		CBUS_REG_ADDR(ABUF_RD_CTL1) 	///../ucode/register.h
+#define ABUF_RD_CTL2 0x2676 	///../ucode/register.h
+#define P_ABUF_RD_CTL2 		CBUS_REG_ADDR(ABUF_RD_CTL2) 	///../ucode/register.h
+#define ABUF_RD_CTL3 0x2677 	///../ucode/register.h
+#define P_ABUF_RD_CTL3 		CBUS_REG_ADDR(ABUF_RD_CTL3) 	///../ucode/register.h
+#define ABUF_ARB_CTL0 0x2678 	///../ucode/register.h
+#define P_ABUF_ARB_CTL0 		CBUS_REG_ADDR(ABUF_ARB_CTL0) 	///../ucode/register.h
+#define ABUF_FIFO_CTL0 0x2679 	///../ucode/register.h
+#define P_ABUF_FIFO_CTL0 		CBUS_REG_ADDR(ABUF_FIFO_CTL0) 	///../ucode/register.h
+#define AHB_BRIDGE_CNTL_WR 0x2680 	///../ucode/register.h
+#define P_AHB_BRIDGE_CNTL_WR 		CBUS_REG_ADDR(AHB_BRIDGE_CNTL_WR) 	///../ucode/register.h
+#define AHB_BRIDGE_REMAP0 0x2681 	///../ucode/register.h
+#define P_AHB_BRIDGE_REMAP0 		CBUS_REG_ADDR(AHB_BRIDGE_REMAP0) 	///../ucode/register.h
+#define AHB_BRIDGE_REMAP1 0x2682 	///../ucode/register.h
+#define P_AHB_BRIDGE_REMAP1 		CBUS_REG_ADDR(AHB_BRIDGE_REMAP1) 	///../ucode/register.h
+#define AHB_BRIDGE_REMAP2 0x2683 	///../ucode/register.h
+#define P_AHB_BRIDGE_REMAP2 		CBUS_REG_ADDR(AHB_BRIDGE_REMAP2) 	///../ucode/register.h
+#define AHB_BRIDGE_REMAP3 0x2684 	///../ucode/register.h
+#define P_AHB_BRIDGE_REMAP3 		CBUS_REG_ADDR(AHB_BRIDGE_REMAP3) 	///../ucode/register.h
+#define AHB_BRIDGE_CNTL_REG1 0x2685 	///../ucode/register.h
+#define P_AHB_BRIDGE_CNTL_REG1 		CBUS_REG_ADDR(AHB_BRIDGE_CNTL_REG1) 	///../ucode/register.h
+#define AHB_BRIDGE_CNTL_REG2 0x2686 	///../ucode/register.h
+#define P_AHB_BRIDGE_CNTL_REG2 		CBUS_REG_ADDR(AHB_BRIDGE_CNTL_REG2) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN0_INTR_STAT 0x2690 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN0_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN0_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN0_INTR_STAT_CLR 0x2691 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN0_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN0_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN0_INTR_MASK 0x2692 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN0_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN0_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN0_INTR_FIRQ_SEL 0x2693 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN0_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN0_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN1_INTR_STAT 0x2694 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN1_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN1_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN1_INTR_STAT_CLR 0x2695 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN1_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN1_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN1_INTR_MASK 0x2696 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN1_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN1_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN1_INTR_FIRQ_SEL 0x2697 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN1_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN1_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN2_INTR_STAT 0x2698 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN2_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN2_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN2_INTR_STAT_CLR 0x2699 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN2_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN2_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN2_INTR_MASK 0x269a 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN2_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN2_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN2_INTR_FIRQ_SEL 0x269b 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN2_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN2_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN3_INTR_STAT 0x269c 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN3_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN3_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN3_INTR_STAT_CLR 0x269d 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN3_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN3_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN3_INTR_MASK 0x269e 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN3_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN3_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN3_INTR_FIRQ_SEL 0x269f 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN3_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN3_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN0_INTR_STAT 0x26a0 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN0_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN0_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN0_INTR_STAT_CLR 0x26a1 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN0_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN0_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN0_INTR_MASK 0x26a2 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN0_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN0_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN0_INTR_FIRQ_SEL 0x26a3 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN0_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN0_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN1_INTR_STAT 0x26a4 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN1_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN1_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN1_INTR_STAT_CLR 0x26a5 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN1_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN1_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN1_INTR_MASK 0x26a6 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN1_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN1_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN1_INTR_FIRQ_SEL 0x26a7 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN1_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN1_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN2_INTR_STAT 0x26a8 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN2_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN2_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN2_INTR_STAT_CLR 0x26a9 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN2_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN2_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN2_INTR_MASK 0x26aa 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN2_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN2_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN2_INTR_FIRQ_SEL 0x26ab 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN2_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN2_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN3_INTR_STAT 0x26ac 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN3_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN3_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN3_INTR_STAT_CLR 0x26ad 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN3_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN3_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN3_INTR_MASK 0x26ae 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN3_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN3_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN3_INTR_FIRQ_SEL 0x26af 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN3_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN3_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN4_INTR_STAT 0x26b0 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN4_INTR_STAT 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN4_INTR_STAT) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN4_INTR_STAT_CLR 0x26b1 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN4_INTR_STAT_CLR 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN4_INTR_STAT_CLR) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN4_INTR_MASK 0x26b2 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN4_INTR_MASK 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN4_INTR_MASK) 	///../ucode/register.h
+#define MEDIA_CPU_IRQ_IN4_INTR_FIRQ_SEL 0x26b3 	///../ucode/register.h
+#define P_MEDIA_CPU_IRQ_IN4_INTR_FIRQ_SEL 		CBUS_REG_ADDR(MEDIA_CPU_IRQ_IN4_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN4_INTR_STAT 0x26b4 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN4_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN4_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN4_INTR_STAT_CLR 0x26b5 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN4_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN4_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN4_INTR_MASK 0x26b6 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN4_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN4_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_0_IRQ_IN4_INTR_FIRQ_SEL 0x26b7 	///../ucode/register.h
+#define P_SYS_CPU_0_IRQ_IN4_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_0_IRQ_IN4_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN4_INTR_STAT 0x26b8 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN4_INTR_STAT 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN4_INTR_STAT) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN4_INTR_STAT_CLR 0x26b9 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN4_INTR_STAT_CLR 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN4_INTR_STAT_CLR) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN4_INTR_MASK 0x26ba 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN4_INTR_MASK 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN4_INTR_MASK) 	///../ucode/register.h
+#define SYS_CPU_1_IRQ_IN4_INTR_FIRQ_SEL 0x26bb 	///../ucode/register.h
+#define P_SYS_CPU_1_IRQ_IN4_INTR_FIRQ_SEL 		CBUS_REG_ADDR(SYS_CPU_1_IRQ_IN4_INTR_FIRQ_SEL) 	///../ucode/register.h
+#define IQ_OM_WIDTH 0x2510 	///../ucode/register.h
+#define P_IQ_OM_WIDTH 		CBUS_REG_ADDR(IQ_OM_WIDTH) 	///../ucode/register.h
+#define DBG_ADDR_START 0x2ff0 	///../ucode/register.h
+#define P_DBG_ADDR_START 		CBUS_REG_ADDR(DBG_ADDR_START) 	///../ucode/register.h
+#define DBG_ADDR_END 0x2fff 	///../ucode/register.h
+#define P_DBG_ADDR_END 		CBUS_REG_ADDR(DBG_ADDR_END) 	///../ucode/register.h
+#define DBG_CTRL 0x2ff1 	///../ucode/register.h
+#define P_DBG_CTRL 		CBUS_REG_ADDR(DBG_CTRL) 	///../ucode/register.h
+#define DBG_LED 0x2ff2 	///../ucode/register.h
+#define P_DBG_LED 		CBUS_REG_ADDR(DBG_LED) 	///../ucode/register.h
+#define DBG_SWITCH 0x2ff3 	///../ucode/register.h
+#define P_DBG_SWITCH 		CBUS_REG_ADDR(DBG_SWITCH) 	///../ucode/register.h
+#define DBG_VERSION 0x2ff4 	///../ucode/register.h
+#define P_DBG_VERSION 		CBUS_REG_ADDR(DBG_VERSION) 	///../ucode/register.h
+#define VERSION_CTRL 0x1100 	///../ucode/register.h
+#define P_VERSION_CTRL 		CBUS_REG_ADDR(VERSION_CTRL) 	///../ucode/register.h
+#define RESET0_REGISTER 0x1101 	///../ucode/register.h
+#define P_RESET0_REGISTER 		CBUS_REG_ADDR(RESET0_REGISTER) 	///../ucode/register.h
+#define RESET1_REGISTER 0x1102 	///../ucode/register.h
+#define P_RESET1_REGISTER 		CBUS_REG_ADDR(RESET1_REGISTER) 	///../ucode/register.h
+#define RESET2_REGISTER 0x1103 	///../ucode/register.h
+#define P_RESET2_REGISTER 		CBUS_REG_ADDR(RESET2_REGISTER) 	///../ucode/register.h
+#define RESET3_REGISTER 0x1104 	///../ucode/register.h
+#define P_RESET3_REGISTER 		CBUS_REG_ADDR(RESET3_REGISTER) 	///../ucode/register.h
+#define RESET4_REGISTER 0x1105 	///../ucode/register.h
+#define P_RESET4_REGISTER 		CBUS_REG_ADDR(RESET4_REGISTER) 	///../ucode/register.h
+#define RESET5_REGISTER 0x1106 	///../ucode/register.h
+#define P_RESET5_REGISTER 		CBUS_REG_ADDR(RESET5_REGISTER) 	///../ucode/register.h
+#define RESET6_REGISTER 0x1107 	///../ucode/register.h
+#define P_RESET6_REGISTER 		CBUS_REG_ADDR(RESET6_REGISTER) 	///../ucode/register.h
+#define RESET7_REGISTER 0x1108 	///../ucode/register.h
+#define P_RESET7_REGISTER 		CBUS_REG_ADDR(RESET7_REGISTER) 	///../ucode/register.h
+#define RESET0_MASK 0x1110 	///../ucode/register.h
+#define P_RESET0_MASK 		CBUS_REG_ADDR(RESET0_MASK) 	///../ucode/register.h
+#define RESET1_MASK 0x1111 	///../ucode/register.h
+#define P_RESET1_MASK 		CBUS_REG_ADDR(RESET1_MASK) 	///../ucode/register.h
+#define RESET2_MASK 0x1112 	///../ucode/register.h
+#define P_RESET2_MASK 		CBUS_REG_ADDR(RESET2_MASK) 	///../ucode/register.h
+#define RESET3_MASK 0x1113 	///../ucode/register.h
+#define P_RESET3_MASK 		CBUS_REG_ADDR(RESET3_MASK) 	///../ucode/register.h
+#define RESET4_MASK 0x1114 	///../ucode/register.h
+#define P_RESET4_MASK 		CBUS_REG_ADDR(RESET4_MASK) 	///../ucode/register.h
+#define RESET5_MASK 0x1115 	///../ucode/register.h
+#define P_RESET5_MASK 		CBUS_REG_ADDR(RESET5_MASK) 	///../ucode/register.h
+#define RESET6_MASK 0x1116 	///../ucode/register.h
+#define P_RESET6_MASK 		CBUS_REG_ADDR(RESET6_MASK) 	///../ucode/register.h
+#define CRT_MASK 0x1117 	///../ucode/register.h
+#define P_CRT_MASK 		CBUS_REG_ADDR(CRT_MASK) 	///../ucode/register.h
+#define RESET7_MASK 0x1118 	///../ucode/register.h
+#define P_RESET7_MASK 		CBUS_REG_ADDR(RESET7_MASK) 	///../ucode/register.h
+#define SCR_HIU 0x100b 	///../ucode/register.h
+#define P_SCR_HIU 		CBUS_REG_ADDR(SCR_HIU) 	///../ucode/register.h
+#define HPG_TIMER 0x100f 	///../ucode/register.h
+#define P_HPG_TIMER 		CBUS_REG_ADDR(HPG_TIMER) 	///../ucode/register.h
+#define HARM_ASB_MB0 0x1030 	///../ucode/register.h
+#define P_HARM_ASB_MB0 		CBUS_REG_ADDR(HARM_ASB_MB0) 	///../ucode/register.h
+#define HARM_ASB_MB1 0x1031 	///../ucode/register.h
+#define P_HARM_ASB_MB1 		CBUS_REG_ADDR(HARM_ASB_MB1) 	///../ucode/register.h
+#define HARM_ASB_MB2 0x1032 	///../ucode/register.h
+#define P_HARM_ASB_MB2 		CBUS_REG_ADDR(HARM_ASB_MB2) 	///../ucode/register.h
+#define HARM_ASB_MB3 0x1033 	///../ucode/register.h
+#define P_HARM_ASB_MB3 		CBUS_REG_ADDR(HARM_ASB_MB3) 	///../ucode/register.h
+#define HASB_ARM_MB0 0x1034 	///../ucode/register.h
+#define P_HASB_ARM_MB0 		CBUS_REG_ADDR(HASB_ARM_MB0) 	///../ucode/register.h
+#define HASB_ARM_MB1 0x1035 	///../ucode/register.h
+#define P_HASB_ARM_MB1 		CBUS_REG_ADDR(HASB_ARM_MB1) 	///../ucode/register.h
+#define HASB_ARM_MB2 0x1036 	///../ucode/register.h
+#define P_HASB_ARM_MB2 		CBUS_REG_ADDR(HASB_ARM_MB2) 	///../ucode/register.h
+#define HASB_ARM_MB3 0x1037 	///../ucode/register.h
+#define P_HASB_ARM_MB3 		CBUS_REG_ADDR(HASB_ARM_MB3) 	///../ucode/register.h
+#define HHI_TIMER90K 0x103b 	///../ucode/register.h
+#define P_HHI_TIMER90K 		CBUS_REG_ADDR(HHI_TIMER90K) 	///../ucode/register.h
+#define HHI_AUD_DAC_CTRL 0x1044 	///../ucode/register.h
+#define P_HHI_AUD_DAC_CTRL 		CBUS_REG_ADDR(HHI_AUD_DAC_CTRL) 	///../ucode/register.h
+#define HHI_VIID_PLL_CNTL4 0x1046 	///../ucode/register.h
+#define P_HHI_VIID_PLL_CNTL4 		CBUS_REG_ADDR(HHI_VIID_PLL_CNTL4) 	///../ucode/register.h
+#define HHI_VIID_PLL_CNTL 0x1047 	///../ucode/register.h
+#define P_HHI_VIID_PLL_CNTL 		CBUS_REG_ADDR(HHI_VIID_PLL_CNTL) 	///../ucode/register.h
+#define HHI_VIID_PLL_CNTL2 0x1048 	///../ucode/register.h
+#define P_HHI_VIID_PLL_CNTL2 		CBUS_REG_ADDR(HHI_VIID_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_VIID_PLL_CNTL3 0x1049 	///../ucode/register.h
+#define P_HHI_VIID_PLL_CNTL3 		CBUS_REG_ADDR(HHI_VIID_PLL_CNTL3) 	///../ucode/register.h
+#define HHI_VIID_CLK_DIV 0x104a 	///../ucode/register.h
+#define P_HHI_VIID_CLK_DIV 		CBUS_REG_ADDR(HHI_VIID_CLK_DIV) 	///../ucode/register.h
+#define HHI_VIID_CLK_CNTL 0x104b 	///../ucode/register.h
+#define P_HHI_VIID_CLK_CNTL 		CBUS_REG_ADDR(HHI_VIID_CLK_CNTL) 	///../ucode/register.h
+#define HHI_VIID_DIVIDER_CNTL 0x104c 	///../ucode/register.h
+#define P_HHI_VIID_DIVIDER_CNTL 		CBUS_REG_ADDR(HHI_VIID_DIVIDER_CNTL) 	///../ucode/register.h
+#define HHI_GCLK_MPEG0 0x1050 	///../ucode/register.h
+#define P_HHI_GCLK_MPEG0 		CBUS_REG_ADDR(HHI_GCLK_MPEG0) 	///../ucode/register.h
+#define HHI_GCLK_MPEG1 0x1051 	///../ucode/register.h
+#define P_HHI_GCLK_MPEG1 		CBUS_REG_ADDR(HHI_GCLK_MPEG1) 	///../ucode/register.h
+#define HHI_GCLK_MPEG2 0x1052 	///../ucode/register.h
+#define P_HHI_GCLK_MPEG2 		CBUS_REG_ADDR(HHI_GCLK_MPEG2) 	///../ucode/register.h
+#define HHI_GCLK_OTHER 0x1054 	///../ucode/register.h
+#define P_HHI_GCLK_OTHER 		CBUS_REG_ADDR(HHI_GCLK_OTHER) 	///../ucode/register.h
+#define HHI_GCLK_AO 0x1055 	///../ucode/register.h
+#define P_HHI_GCLK_AO 		CBUS_REG_ADDR(HHI_GCLK_AO) 	///../ucode/register.h
+#define HHI_VID_CLK_DIV 0x1059 	///../ucode/register.h
+#define P_HHI_VID_CLK_DIV 		CBUS_REG_ADDR(HHI_VID_CLK_DIV) 	///../ucode/register.h
+#define HHI_MPEG_CLK_CNTL 0x105d 	///../ucode/register.h
+#define P_HHI_MPEG_CLK_CNTL 		CBUS_REG_ADDR(HHI_MPEG_CLK_CNTL) 	///../ucode/register.h
+#define HHI_AUD_CLK_CNTL 0x105e 	///../ucode/register.h
+#define P_HHI_AUD_CLK_CNTL 		CBUS_REG_ADDR(HHI_AUD_CLK_CNTL) 	///../ucode/register.h
+#define HHI_VID_CLK_CNTL 0x105f 	///../ucode/register.h
+#define P_HHI_VID_CLK_CNTL 		CBUS_REG_ADDR(HHI_VID_CLK_CNTL) 	///../ucode/register.h
+#define HHI_WIFI_CLK_CNTL 0x1060 	///../ucode/register.h
+#define P_HHI_WIFI_CLK_CNTL 		CBUS_REG_ADDR(HHI_WIFI_CLK_CNTL) 	///../ucode/register.h
+#define HHI_WIFI_PLL_CNTL 0x1061 	///../ucode/register.h
+#define P_HHI_WIFI_PLL_CNTL 		CBUS_REG_ADDR(HHI_WIFI_PLL_CNTL) 	///../ucode/register.h
+#define HHI_WIFI_PLL_CNTL2 0x1062 	///../ucode/register.h
+#define P_HHI_WIFI_PLL_CNTL2 		CBUS_REG_ADDR(HHI_WIFI_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_WIFI_PLL_CNTL3 0x1063 	///../ucode/register.h
+#define P_HHI_WIFI_PLL_CNTL3 		CBUS_REG_ADDR(HHI_WIFI_PLL_CNTL3) 	///../ucode/register.h
+#define HHI_AUD_CLK_CNTL2 0x1064 	///../ucode/register.h
+#define P_HHI_AUD_CLK_CNTL2 		CBUS_REG_ADDR(HHI_AUD_CLK_CNTL2) 	///../ucode/register.h
+#define HHI_VID_DIVIDER_CNTL 0x1066 	///../ucode/register.h
+#define P_HHI_VID_DIVIDER_CNTL 		CBUS_REG_ADDR(HHI_VID_DIVIDER_CNTL) 	///../ucode/register.h
+#define HHI_SYS_CPU_CLK_CNTL 0x1067 	///../ucode/register.h
+#define P_HHI_SYS_CPU_CLK_CNTL 		CBUS_REG_ADDR(HHI_SYS_CPU_CLK_CNTL) 	///../ucode/register.h
+#define HHI_DDR_PLL_CNTL 0x1068 	///../ucode/register.h
+#define P_HHI_DDR_PLL_CNTL 		CBUS_REG_ADDR(HHI_DDR_PLL_CNTL) 	///../ucode/register.h
+#define HHI_DDR_PLL_CNTL2 0x1069 	///../ucode/register.h
+#define P_HHI_DDR_PLL_CNTL2 		CBUS_REG_ADDR(HHI_DDR_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_DDR_PLL_CNTL3 0x106a 	///../ucode/register.h
+#define P_HHI_DDR_PLL_CNTL3 		CBUS_REG_ADDR(HHI_DDR_PLL_CNTL3) 	///../ucode/register.h
+#define HHI_DDR_PLL_CNTL4 0x106b 	///../ucode/register.h
+#define P_HHI_DDR_PLL_CNTL4 		CBUS_REG_ADDR(HHI_DDR_PLL_CNTL4) 	///../ucode/register.h
+#define HHI_MALI_CLK_CNTL 0x106c 	///../ucode/register.h
+#define P_HHI_MALI_CLK_CNTL 		CBUS_REG_ADDR(HHI_MALI_CLK_CNTL) 	///../ucode/register.h
+#define HHI_VDEC_CLK_CNTL 0x106d 	///../ucode/register.h
+#define P_HHI_VDEC_CLK_CNTL 		CBUS_REG_ADDR(HHI_VDEC_CLK_CNTL) 	///../ucode/register.h
+#define HHI_MIPI_PHY_CLK_CNTL 0x106e 	///../ucode/register.h
+#define P_HHI_MIPI_PHY_CLK_CNTL 		CBUS_REG_ADDR(HHI_MIPI_PHY_CLK_CNTL) 	///../ucode/register.h
+#define HHI_OTHER_PLL_CNTL 0x1070 	///../ucode/register.h
+#define P_HHI_OTHER_PLL_CNTL 		CBUS_REG_ADDR(HHI_OTHER_PLL_CNTL) 	///../ucode/register.h
+#define HHI_OTHER_PLL_CNTL2 0x1071 	///../ucode/register.h
+#define P_HHI_OTHER_PLL_CNTL2 		CBUS_REG_ADDR(HHI_OTHER_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_OTHER_PLL_CNTL3 0x1072 	///../ucode/register.h
+#define P_HHI_OTHER_PLL_CNTL3 		CBUS_REG_ADDR(HHI_OTHER_PLL_CNTL3) 	///../ucode/register.h
+#define HHI_HDMI_CLK_CNTL 0x1073 	///../ucode/register.h
+#define P_HHI_HDMI_CLK_CNTL 		CBUS_REG_ADDR(HHI_HDMI_CLK_CNTL) 	///../ucode/register.h
+#define HHI_DEMOD_CLK_CNTL 0x1074 	///../ucode/register.h
+#define P_HHI_DEMOD_CLK_CNTL 		CBUS_REG_ADDR(HHI_DEMOD_CLK_CNTL) 	///../ucode/register.h
+#define HHI_SATA_CLK_CNTL 0x1075 	///../ucode/register.h
+#define P_HHI_SATA_CLK_CNTL 		CBUS_REG_ADDR(HHI_SATA_CLK_CNTL) 	///../ucode/register.h
+#define HHI_ETH_CLK_CNTL 0x1076 	///../ucode/register.h
+#define P_HHI_ETH_CLK_CNTL 		CBUS_REG_ADDR(HHI_ETH_CLK_CNTL) 	///../ucode/register.h
+#define HHI_CLK_DOUBLE_CNTL 0x1077 	///../ucode/register.h
+#define P_HHI_CLK_DOUBLE_CNTL 		CBUS_REG_ADDR(HHI_CLK_DOUBLE_CNTL) 	///../ucode/register.h
+#define HHI_SYS_CPU_AUTO_CLK0 0x1078 	///../ucode/register.h
+#define P_HHI_SYS_CPU_AUTO_CLK0 		CBUS_REG_ADDR(HHI_SYS_CPU_AUTO_CLK0) 	///../ucode/register.h
+#define HHI_SYS_CPU_AUTO_CLK1 0x1079 	///../ucode/register.h
+#define P_HHI_SYS_CPU_AUTO_CLK1 		CBUS_REG_ADDR(HHI_SYS_CPU_AUTO_CLK1) 	///../ucode/register.h
+#define HHI_MEDIA_CPU_AUTO_CLK0 0x107a 	///../ucode/register.h
+#define P_HHI_MEDIA_CPU_AUTO_CLK0 		CBUS_REG_ADDR(HHI_MEDIA_CPU_AUTO_CLK0) 	///../ucode/register.h
+#define HHI_MEDIA_CPU_AUTO_CLK1 0x107b 	///../ucode/register.h
+#define P_HHI_MEDIA_CPU_AUTO_CLK1 		CBUS_REG_ADDR(HHI_MEDIA_CPU_AUTO_CLK1) 	///../ucode/register.h
+#define HHI_HDMI_PLL_CNTL 0x107c 	///../ucode/register.h
+#define P_HHI_HDMI_PLL_CNTL 		CBUS_REG_ADDR(HHI_HDMI_PLL_CNTL) 	///../ucode/register.h
+#define HHI_HDMI_PLL_CNTL1 0x107d 	///../ucode/register.h
+#define P_HHI_HDMI_PLL_CNTL1 		CBUS_REG_ADDR(HHI_HDMI_PLL_CNTL1) 	///../ucode/register.h
+#define HHI_HDMI_PLL_CNTL2 0x107e 	///../ucode/register.h
+#define P_HHI_HDMI_PLL_CNTL2 		CBUS_REG_ADDR(HHI_HDMI_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_HDMI_AFC_CNTL 0x107f 	///../ucode/register.h
+#define P_HHI_HDMI_AFC_CNTL 		CBUS_REG_ADDR(HHI_HDMI_AFC_CNTL) 	///../ucode/register.h
+#define HHI_HDMIRX_CLK_CNTL 0x1080 	///../ucode/register.h
+#define P_HHI_HDMIRX_CLK_CNTL 		CBUS_REG_ADDR(HHI_HDMIRX_CLK_CNTL) 	///../ucode/register.h
+#define HHI_HDMIRX_AUD_CLK_CNTL 0x1081 	///../ucode/register.h
+#define P_HHI_HDMIRX_AUD_CLK_CNTL 		CBUS_REG_ADDR(HHI_HDMIRX_AUD_CLK_CNTL) 	///../ucode/register.h
+#define HHI_VID_PLL_MOD_CNTL0 0x1084 	///../ucode/register.h
+#define P_HHI_VID_PLL_MOD_CNTL0 		CBUS_REG_ADDR(HHI_VID_PLL_MOD_CNTL0) 	///../ucode/register.h
+#define HHI_VID_PLL_MOD_LOW_TCNT 0x1085 	///../ucode/register.h
+#define P_HHI_VID_PLL_MOD_LOW_TCNT 		CBUS_REG_ADDR(HHI_VID_PLL_MOD_LOW_TCNT) 	///../ucode/register.h
+#define HHI_VID_PLL_MOD_HIGH_TCNT 0x1086 	///../ucode/register.h
+#define P_HHI_VID_PLL_MOD_HIGH_TCNT 		CBUS_REG_ADDR(HHI_VID_PLL_MOD_HIGH_TCNT) 	///../ucode/register.h
+#define HHI_VID_PLL_MOD_NOM_TCNT 0x1087 	///../ucode/register.h
+#define P_HHI_VID_PLL_MOD_NOM_TCNT 		CBUS_REG_ADDR(HHI_VID_PLL_MOD_NOM_TCNT) 	///../ucode/register.h
+#define HHI_DDR_CLK_CNTL 0x1088 	///../ucode/register.h
+#define P_HHI_DDR_CLK_CNTL 		CBUS_REG_ADDR(HHI_DDR_CLK_CNTL) 	///../ucode/register.h
+#define HHI_USB_CLK_CNTL 0x1089 	///../ucode/register.h
+#define P_HHI_USB_CLK_CNTL 		CBUS_REG_ADDR(HHI_USB_CLK_CNTL) 	///../ucode/register.h
+#define HHI_GEN_CLK_CNTL 0x108a 	///../ucode/register.h
+#define P_HHI_GEN_CLK_CNTL 		CBUS_REG_ADDR(HHI_GEN_CLK_CNTL) 	///../ucode/register.h
+#define HHI_GEN_CLK_CNTL2 0x108b 	///../ucode/register.h
+#define P_HHI_GEN_CLK_CNTL2 		CBUS_REG_ADDR(HHI_GEN_CLK_CNTL2) 	///../ucode/register.h
+#define HHI_JTAG_CONFIG 0x108e 	///../ucode/register.h
+#define P_HHI_JTAG_CONFIG 		CBUS_REG_ADDR(HHI_JTAG_CONFIG) 	///../ucode/register.h
+#define HHI_VAFE_CLKXTALIN_CNTL 0x108f 	///../ucode/register.h
+#define P_HHI_VAFE_CLKXTALIN_CNTL 		CBUS_REG_ADDR(HHI_VAFE_CLKXTALIN_CNTL) 	///../ucode/register.h
+#define HHI_VAFE_CLKOSCIN_CNTL 0x1090 	///../ucode/register.h
+#define P_HHI_VAFE_CLKOSCIN_CNTL 		CBUS_REG_ADDR(HHI_VAFE_CLKOSCIN_CNTL) 	///../ucode/register.h
+#define HHI_VAFE_CLKIN_CNTL 0x1091 	///../ucode/register.h
+#define P_HHI_VAFE_CLKIN_CNTL 		CBUS_REG_ADDR(HHI_VAFE_CLKIN_CNTL) 	///../ucode/register.h
+#define HHI_TVFE_AUTOMODE_CLK_CNTL 0x1092 	///../ucode/register.h
+#define P_HHI_TVFE_AUTOMODE_CLK_CNTL 		CBUS_REG_ADDR(HHI_TVFE_AUTOMODE_CLK_CNTL) 	///../ucode/register.h
+#define HHI_VAFE_CLKPI_CNTL 0x1093 	///../ucode/register.h
+#define P_HHI_VAFE_CLKPI_CNTL 		CBUS_REG_ADDR(HHI_VAFE_CLKPI_CNTL) 	///../ucode/register.h
+#define HHI_VDIN_MEAS_CLK_CNTL 0x1094 	///../ucode/register.h
+#define P_HHI_VDIN_MEAS_CLK_CNTL 		CBUS_REG_ADDR(HHI_VDIN_MEAS_CLK_CNTL) 	///../ucode/register.h
+#define HHI_PCM_CLK_CNTL 0x1096 	///../ucode/register.h
+#define P_HHI_PCM_CLK_CNTL 		CBUS_REG_ADDR(HHI_PCM_CLK_CNTL) 	///../ucode/register.h
+#define HHI_SYS_PLL_CNTL 0x1098 	///../ucode/register.h
+#define P_HHI_SYS_PLL_CNTL 		CBUS_REG_ADDR(HHI_SYS_PLL_CNTL) 	///../ucode/register.h
+#define HHI_SYS_PLL_CNTL2 0x1099 	///../ucode/register.h
+#define P_HHI_SYS_PLL_CNTL2 		CBUS_REG_ADDR(HHI_SYS_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_SYS_PLL_CNTL3 0x109a 	///../ucode/register.h
+#define P_HHI_SYS_PLL_CNTL3 		CBUS_REG_ADDR(HHI_SYS_PLL_CNTL3) 	///../ucode/register.h
+#define HHI_SYS_PLL_CNTL4 0x109b 	///../ucode/register.h
+#define P_HHI_SYS_PLL_CNTL4 		CBUS_REG_ADDR(HHI_SYS_PLL_CNTL4) 	///../ucode/register.h
+#define HHI_VID_PLL_CNTL 0x109c 	///../ucode/register.h
+#define P_HHI_VID_PLL_CNTL 		CBUS_REG_ADDR(HHI_VID_PLL_CNTL) 	///../ucode/register.h
+#define HHI_VID_PLL_CNTL2 0x109d 	///../ucode/register.h
+#define P_HHI_VID_PLL_CNTL2 		CBUS_REG_ADDR(HHI_VID_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_VID_PLL_CNTL3 0x109e 	///../ucode/register.h
+#define P_HHI_VID_PLL_CNTL3 		CBUS_REG_ADDR(HHI_VID_PLL_CNTL3) 	///../ucode/register.h
+#define HHI_VID_PLL_CNTL4 0x109f 	///../ucode/register.h
+#define P_HHI_VID_PLL_CNTL4 		CBUS_REG_ADDR(HHI_VID_PLL_CNTL4) 	///../ucode/register.h
+#define HHI_MPLL_CNTL 0x10a0 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL 		CBUS_REG_ADDR(HHI_MPLL_CNTL) 	///../ucode/register.h
+#define HHI_MPLL_CNTL2 0x10a1 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL2 		CBUS_REG_ADDR(HHI_MPLL_CNTL2) 	///../ucode/register.h
+#define HHI_MPLL_CNTL3 0x10a2 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL3 		CBUS_REG_ADDR(HHI_MPLL_CNTL3) 	///../ucode/register.h
+#define HHI_MPLL_CNTL4 0x10a3 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL4 		CBUS_REG_ADDR(HHI_MPLL_CNTL4) 	///../ucode/register.h
+#define HHI_MPLL_CNTL5 0x10a4 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL5 		CBUS_REG_ADDR(HHI_MPLL_CNTL5) 	///../ucode/register.h
+#define HHI_MPLL_CNTL6 0x10a5 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL6 		CBUS_REG_ADDR(HHI_MPLL_CNTL6) 	///../ucode/register.h
+#define HHI_MPLL_CNTL7 0x10a6 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL7 		CBUS_REG_ADDR(HHI_MPLL_CNTL7) 	///../ucode/register.h
+#define HHI_MPLL_CNTL8 0x10a7 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL8 		CBUS_REG_ADDR(HHI_MPLL_CNTL8) 	///../ucode/register.h
+#define HHI_MPLL_CNTL9 0x10a8 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL9 		CBUS_REG_ADDR(HHI_MPLL_CNTL9) 	///../ucode/register.h
+#define HHI_MPLL_CNTL10 0x10a9 	///../ucode/register.h
+#define P_HHI_MPLL_CNTL10 		CBUS_REG_ADDR(HHI_MPLL_CNTL10) 	///../ucode/register.h
+#define HHI_ADC_PLL_CNTL 0x10aa 	///../ucode/register.h
+#define P_HHI_ADC_PLL_CNTL 		CBUS_REG_ADDR(HHI_ADC_PLL_CNTL) 	///../ucode/register.h
+#define HHI_ADC_PLL_CNTL2 0x10ab 	///../ucode/register.h
+#define P_HHI_ADC_PLL_CNTL2 		CBUS_REG_ADDR(HHI_ADC_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_ADC_PLL_CNTL3 0x10ac 	///../ucode/register.h
+#define P_HHI_ADC_PLL_CNTL3 		CBUS_REG_ADDR(HHI_ADC_PLL_CNTL3) 	///../ucode/register.h
+#define HHI_ADC_PLL_CNTL4 0x10ad 	///../ucode/register.h
+#define P_HHI_ADC_PLL_CNTL4 		CBUS_REG_ADDR(HHI_ADC_PLL_CNTL4) 	///../ucode/register.h
+#define HHI_AUDCLK_PLL_CNTL 0x10b0 	///../ucode/register.h
+#define P_HHI_AUDCLK_PLL_CNTL 		CBUS_REG_ADDR(HHI_AUDCLK_PLL_CNTL) 	///../ucode/register.h
+#define HHI_AUDCLK_PLL_CNTL2 0x10b1 	///../ucode/register.h
+#define P_HHI_AUDCLK_PLL_CNTL2 		CBUS_REG_ADDR(HHI_AUDCLK_PLL_CNTL2) 	///../ucode/register.h
+#define HHI_AUDCLK_PLL_CNTL3 0x10b2 	///../ucode/register.h
+#define P_HHI_AUDCLK_PLL_CNTL3 		CBUS_REG_ADDR(HHI_AUDCLK_PLL_CNTL3) 	///../ucode/register.h
+#define HHI_AUDCLK_PLL_CNTL4 0x10b3 	///../ucode/register.h
+#define P_HHI_AUDCLK_PLL_CNTL4 		CBUS_REG_ADDR(HHI_AUDCLK_PLL_CNTL4) 	///../ucode/register.h
+#define HHI_AUDCLK_PLL_CNTL5 0x10b4 	///../ucode/register.h
+#define P_HHI_AUDCLK_PLL_CNTL5 		CBUS_REG_ADDR(HHI_AUDCLK_PLL_CNTL5) 	///../ucode/register.h
+#define HHI_AUDCLK_PLL_CNTL6 0x10b5 	///../ucode/register.h
+#define P_HHI_AUDCLK_PLL_CNTL6 		CBUS_REG_ADDR(HHI_AUDCLK_PLL_CNTL6) 	///../ucode/register.h
+#define PARSER_CONTROL 0x2960 	///../ucode/register.h
+#define P_PARSER_CONTROL 		CBUS_REG_ADDR(PARSER_CONTROL) 	///../ucode/register.h
+#define PARSER_FETCH_ADDR 0x2961 	///../ucode/register.h
+#define P_PARSER_FETCH_ADDR 		CBUS_REG_ADDR(PARSER_FETCH_ADDR) 	///../ucode/register.h
+#define PARSER_FETCH_CMD 0x2962 	///../ucode/register.h
+#define P_PARSER_FETCH_CMD 		CBUS_REG_ADDR(PARSER_FETCH_CMD) 	///../ucode/register.h
+#define PARSER_FETCH_STOP_ADDR 0x2963 	///../ucode/register.h
+#define P_PARSER_FETCH_STOP_ADDR 		CBUS_REG_ADDR(PARSER_FETCH_STOP_ADDR) 	///../ucode/register.h
+#define PARSER_FETCH_LEVEL 0x2964 	///../ucode/register.h
+#define P_PARSER_FETCH_LEVEL 		CBUS_REG_ADDR(PARSER_FETCH_LEVEL) 	///../ucode/register.h
+#define PARSER_CONFIG 0x2965 	///../ucode/register.h
+#define P_PARSER_CONFIG 		CBUS_REG_ADDR(PARSER_CONFIG) 	///../ucode/register.h
+#define PFIFO_WR_PTR 0x2966 	///../ucode/register.h
+#define P_PFIFO_WR_PTR 		CBUS_REG_ADDR(PFIFO_WR_PTR) 	///../ucode/register.h
+#define PFIFO_RD_PTR 0x2967 	///../ucode/register.h
+#define P_PFIFO_RD_PTR 		CBUS_REG_ADDR(PFIFO_RD_PTR) 	///../ucode/register.h
+#define PFIFO_DATA 0x2968 	///../ucode/register.h
+#define P_PFIFO_DATA 		CBUS_REG_ADDR(PFIFO_DATA) 	///../ucode/register.h
+#define PARSER_SEARCH_PATTERN 0x2969 	///../ucode/register.h
+#define P_PARSER_SEARCH_PATTERN 		CBUS_REG_ADDR(PARSER_SEARCH_PATTERN) 	///../ucode/register.h
+#define PARSER_SEARCH_MASK 0x296a 	///../ucode/register.h
+#define P_PARSER_SEARCH_MASK 		CBUS_REG_ADDR(PARSER_SEARCH_MASK) 	///../ucode/register.h
+#define PARSER_INT_ENABLE 0x296b 	///../ucode/register.h
+#define P_PARSER_INT_ENABLE 		CBUS_REG_ADDR(PARSER_INT_ENABLE) 	///../ucode/register.h
+#define PARSER_INT_STATUS 0x296c 	///../ucode/register.h
+#define P_PARSER_INT_STATUS 		CBUS_REG_ADDR(PARSER_INT_STATUS) 	///../ucode/register.h
+#define PARSER_SCR_CTL 0x296d 	///../ucode/register.h
+#define P_PARSER_SCR_CTL 		CBUS_REG_ADDR(PARSER_SCR_CTL) 	///../ucode/register.h
+#define PARSER_SCR 0x296e 	///../ucode/register.h
+#define P_PARSER_SCR 		CBUS_REG_ADDR(PARSER_SCR) 	///../ucode/register.h
+#define PARSER_PARAMETER 0x296f 	///../ucode/register.h
+#define P_PARSER_PARAMETER 		CBUS_REG_ADDR(PARSER_PARAMETER) 	///../ucode/register.h
+#define PARSER_INSERT_DATA 0x2970 	///../ucode/register.h
+#define P_PARSER_INSERT_DATA 		CBUS_REG_ADDR(PARSER_INSERT_DATA) 	///../ucode/register.h
+#define VAS_STREAM_ID 0x2971 	///../ucode/register.h
+#define P_VAS_STREAM_ID 		CBUS_REG_ADDR(VAS_STREAM_ID) 	///../ucode/register.h
+#define VIDEO_DTS 0x2972 	///../ucode/register.h
+#define P_VIDEO_DTS 		CBUS_REG_ADDR(VIDEO_DTS) 	///../ucode/register.h
+#define VIDEO_PTS 0x2973 	///../ucode/register.h
+#define P_VIDEO_PTS 		CBUS_REG_ADDR(VIDEO_PTS) 	///../ucode/register.h
+#define VIDEO_PTS_DTS_WR_PTR 0x2974 	///../ucode/register.h
+#define P_VIDEO_PTS_DTS_WR_PTR 		CBUS_REG_ADDR(VIDEO_PTS_DTS_WR_PTR) 	///../ucode/register.h
+#define AUDIO_PTS 0x2975 	///../ucode/register.h
+#define P_AUDIO_PTS 		CBUS_REG_ADDR(AUDIO_PTS) 	///../ucode/register.h
+#define AUDIO_PTS_WR_PTR 0x2976 	///../ucode/register.h
+#define P_AUDIO_PTS_WR_PTR 		CBUS_REG_ADDR(AUDIO_PTS_WR_PTR) 	///../ucode/register.h
+#define PARSER_ES_CONTROL 0x2977 	///../ucode/register.h
+#define P_PARSER_ES_CONTROL 		CBUS_REG_ADDR(PARSER_ES_CONTROL) 	///../ucode/register.h
+#define PFIFO_MONITOR 0x2978 	///../ucode/register.h
+#define P_PFIFO_MONITOR 		CBUS_REG_ADDR(PFIFO_MONITOR) 	///../ucode/register.h
+#define PARSER_VIDEO_START_PTR 0x2980 	///../ucode/register.h
+#define P_PARSER_VIDEO_START_PTR 		CBUS_REG_ADDR(PARSER_VIDEO_START_PTR) 	///../ucode/register.h
+#define PARSER_VIDEO_END_PTR 0x2981 	///../ucode/register.h
+#define P_PARSER_VIDEO_END_PTR 		CBUS_REG_ADDR(PARSER_VIDEO_END_PTR) 	///../ucode/register.h
+#define PARSER_VIDEO_WP 0x2982 	///../ucode/register.h
+#define P_PARSER_VIDEO_WP 		CBUS_REG_ADDR(PARSER_VIDEO_WP) 	///../ucode/register.h
+#define PARSER_VIDEO_RP 0x2983 	///../ucode/register.h
+#define P_PARSER_VIDEO_RP 		CBUS_REG_ADDR(PARSER_VIDEO_RP) 	///../ucode/register.h
+#define PARSER_VIDEO_HOLE 0x2984 	///../ucode/register.h
+#define P_PARSER_VIDEO_HOLE 		CBUS_REG_ADDR(PARSER_VIDEO_HOLE) 	///../ucode/register.h
+#define PARSER_AUDIO_START_PTR 0x2985 	///../ucode/register.h
+#define P_PARSER_AUDIO_START_PTR 		CBUS_REG_ADDR(PARSER_AUDIO_START_PTR) 	///../ucode/register.h
+#define PARSER_AUDIO_END_PTR 0x2986 	///../ucode/register.h
+#define P_PARSER_AUDIO_END_PTR 		CBUS_REG_ADDR(PARSER_AUDIO_END_PTR) 	///../ucode/register.h
+#define PARSER_AUDIO_WP 0x2987 	///../ucode/register.h
+#define P_PARSER_AUDIO_WP 		CBUS_REG_ADDR(PARSER_AUDIO_WP) 	///../ucode/register.h
+#define PARSER_AUDIO_RP 0x2988 	///../ucode/register.h
+#define P_PARSER_AUDIO_RP 		CBUS_REG_ADDR(PARSER_AUDIO_RP) 	///../ucode/register.h
+#define PARSER_AUDIO_HOLE 0x2989 	///../ucode/register.h
+#define P_PARSER_AUDIO_HOLE 		CBUS_REG_ADDR(PARSER_AUDIO_HOLE) 	///../ucode/register.h
+#define PARSER_SUB_START_PTR 0x298a 	///../ucode/register.h
+#define P_PARSER_SUB_START_PTR 		CBUS_REG_ADDR(PARSER_SUB_START_PTR) 	///../ucode/register.h
+#define PARSER_SUB_END_PTR 0x298b 	///../ucode/register.h
+#define P_PARSER_SUB_END_PTR 		CBUS_REG_ADDR(PARSER_SUB_END_PTR) 	///../ucode/register.h
+#define PARSER_SUB_WP 0x298c 	///../ucode/register.h
+#define P_PARSER_SUB_WP 		CBUS_REG_ADDR(PARSER_SUB_WP) 	///../ucode/register.h
+#define PARSER_SUB_RP 0x298d 	///../ucode/register.h
+#define P_PARSER_SUB_RP 		CBUS_REG_ADDR(PARSER_SUB_RP) 	///../ucode/register.h
+#define PARSER_SUB_HOLE 0x298e 	///../ucode/register.h
+#define P_PARSER_SUB_HOLE 		CBUS_REG_ADDR(PARSER_SUB_HOLE) 	///../ucode/register.h
+#define PARSER_FETCH_INFO 0x298f 	///../ucode/register.h
+#define P_PARSER_FETCH_INFO 		CBUS_REG_ADDR(PARSER_FETCH_INFO) 	///../ucode/register.h
+#define PARSER_STATUS 0x2990 	///../ucode/register.h
+#define P_PARSER_STATUS 		CBUS_REG_ADDR(PARSER_STATUS) 	///../ucode/register.h
+#define PARSER_AV_WRAP_COUNT 0x2991 	///../ucode/register.h
+#define P_PARSER_AV_WRAP_COUNT 		CBUS_REG_ADDR(PARSER_AV_WRAP_COUNT) 	///../ucode/register.h
+#define WRRSP_PARSER 0x2992 	///../ucode/register.h
+#define P_WRRSP_PARSER 		CBUS_REG_ADDR(WRRSP_PARSER) 	///../ucode/register.h
+#define PARSER_VIDEO2_START_PTR 0x2993 	///../ucode/register.h
+#define P_PARSER_VIDEO2_START_PTR 		CBUS_REG_ADDR(PARSER_VIDEO2_START_PTR) 	///../ucode/register.h
+#define PARSER_VIDEO2_END_PTR 0x2994 	///../ucode/register.h
+#define P_PARSER_VIDEO2_END_PTR 		CBUS_REG_ADDR(PARSER_VIDEO2_END_PTR) 	///../ucode/register.h
+#define PARSER_VIDEO2_WP 0x2995 	///../ucode/register.h
+#define P_PARSER_VIDEO2_WP 		CBUS_REG_ADDR(PARSER_VIDEO2_WP) 	///../ucode/register.h
+#define PARSER_VIDEO2_RP 0x2996 	///../ucode/register.h
+#define P_PARSER_VIDEO2_RP 		CBUS_REG_ADDR(PARSER_VIDEO2_RP) 	///../ucode/register.h
+#define PARSER_VIDEO2_HOLE 0x2997 	///../ucode/register.h
+#define P_PARSER_VIDEO2_HOLE 		CBUS_REG_ADDR(PARSER_VIDEO2_HOLE) 	///../ucode/register.h
+#define PARSER_AV2_WRAP_COUNT 0x2998 	///../ucode/register.h
+#define P_PARSER_AV2_WRAP_COUNT 		CBUS_REG_ADDR(PARSER_AV2_WRAP_COUNT) 	///../ucode/register.h
+#define VDIN0_OFFSET 0x00 	///../ucode/register.h
+#define P_VDIN0_OFFSET 		CBUS_REG_ADDR(VDIN0_OFFSET) 	///../ucode/register.h
+#define VDIN1_OFFSET 0x70 	///../ucode/register.h
+#define P_VDIN1_OFFSET 		CBUS_REG_ADDR(VDIN1_OFFSET) 	///../ucode/register.h
+#define VDIN_SCALE_COEF_IDX 0x1200 	///../ucode/register.h
+#define P_VDIN_SCALE_COEF_IDX 		CBUS_REG_ADDR(VDIN_SCALE_COEF_IDX) 	///../ucode/register.h
+#define VDIN_SCALE_COEF 0x1201 	///../ucode/register.h
+#define P_VDIN_SCALE_COEF 		CBUS_REG_ADDR(VDIN_SCALE_COEF) 	///../ucode/register.h
+#define VDIN_COM_CTRL0 0x1202 	///../ucode/register.h
+#define P_VDIN_COM_CTRL0 		CBUS_REG_ADDR(VDIN_COM_CTRL0) 	///../ucode/register.h
+#define VDIN_ACTIVE_MAX_PIX_CNT_STATUS 0x1203 	///../ucode/register.h
+#define P_VDIN_ACTIVE_MAX_PIX_CNT_STATUS 		CBUS_REG_ADDR(VDIN_ACTIVE_MAX_PIX_CNT_STATUS) 	///../ucode/register.h
+#define VDIN_LCNT_STATUS 0x1204 	///../ucode/register.h
+#define P_VDIN_LCNT_STATUS 		CBUS_REG_ADDR(VDIN_LCNT_STATUS) 	///../ucode/register.h
+#define VDIN_COM_STATUS0 0x1205 	///../ucode/register.h
+#define P_VDIN_COM_STATUS0 		CBUS_REG_ADDR(VDIN_COM_STATUS0) 	///../ucode/register.h
+#define VDIN_COM_STATUS1 0x1206 	///../ucode/register.h
+#define P_VDIN_COM_STATUS1 		CBUS_REG_ADDR(VDIN_COM_STATUS1) 	///../ucode/register.h
+#define VDIN_LCNT_SHADOW_STATUS 0x1207 	///../ucode/register.h
+#define P_VDIN_LCNT_SHADOW_STATUS 		CBUS_REG_ADDR(VDIN_LCNT_SHADOW_STATUS) 	///../ucode/register.h
+#define VDIN_ASFIFO_CTRL0 0x1208 	///../ucode/register.h
+#define P_VDIN_ASFIFO_CTRL0 		CBUS_REG_ADDR(VDIN_ASFIFO_CTRL0) 	///../ucode/register.h
+#define VDIN_ASFIFO_CTRL1 0x1209 	///../ucode/register.h
+#define P_VDIN_ASFIFO_CTRL1 		CBUS_REG_ADDR(VDIN_ASFIFO_CTRL1) 	///../ucode/register.h
+#define VDIN_WIDTHM1I_WIDTHM1O 0x120a 	///../ucode/register.h
+#define P_VDIN_WIDTHM1I_WIDTHM1O 		CBUS_REG_ADDR(VDIN_WIDTHM1I_WIDTHM1O) 	///../ucode/register.h
+#define VDIN_SC_MISC_CTRL 0x120b 	///../ucode/register.h
+#define P_VDIN_SC_MISC_CTRL 		CBUS_REG_ADDR(VDIN_SC_MISC_CTRL) 	///../ucode/register.h
+#define VDIN_HSC_PHASE_STEP 0x120c 	///../ucode/register.h
+#define P_VDIN_HSC_PHASE_STEP 		CBUS_REG_ADDR(VDIN_HSC_PHASE_STEP) 	///../ucode/register.h
+#define VDIN_HSC_INI_CTRL 0x120d 	///../ucode/register.h
+#define P_VDIN_HSC_INI_CTRL 		CBUS_REG_ADDR(VDIN_HSC_INI_CTRL) 	///../ucode/register.h
+#define VDIN_COM_STATUS2 0x120e 	///../ucode/register.h
+#define P_VDIN_COM_STATUS2 		CBUS_REG_ADDR(VDIN_COM_STATUS2) 	///../ucode/register.h
+#define VDIN_ASFIFO_CTRL2 0x120f 	///../ucode/register.h
+#define P_VDIN_ASFIFO_CTRL2 		CBUS_REG_ADDR(VDIN_ASFIFO_CTRL2) 	///../ucode/register.h
+#define VDIN_MATRIX_CTRL 0x1210 	///../ucode/register.h
+#define P_VDIN_MATRIX_CTRL 		CBUS_REG_ADDR(VDIN_MATRIX_CTRL) 	///../ucode/register.h
+#define VDIN_MATRIX_COEF00_01 0x1211 	///../ucode/register.h
+#define P_VDIN_MATRIX_COEF00_01 		CBUS_REG_ADDR(VDIN_MATRIX_COEF00_01) 	///../ucode/register.h
+#define VDIN_MATRIX_COEF02_10 0x1212 	///../ucode/register.h
+#define P_VDIN_MATRIX_COEF02_10 		CBUS_REG_ADDR(VDIN_MATRIX_COEF02_10) 	///../ucode/register.h
+#define VDIN_MATRIX_COEF11_12 0x1213 	///../ucode/register.h
+#define P_VDIN_MATRIX_COEF11_12 		CBUS_REG_ADDR(VDIN_MATRIX_COEF11_12) 	///../ucode/register.h
+#define VDIN_MATRIX_COEF20_21 0x1214 	///../ucode/register.h
+#define P_VDIN_MATRIX_COEF20_21 		CBUS_REG_ADDR(VDIN_MATRIX_COEF20_21) 	///../ucode/register.h
+#define VDIN_MATRIX_COEF22 0x1215 	///../ucode/register.h
+#define P_VDIN_MATRIX_COEF22 		CBUS_REG_ADDR(VDIN_MATRIX_COEF22) 	///../ucode/register.h
+#define VDIN_MATRIX_OFFSET0_1 0x1216 	///../ucode/register.h
+#define P_VDIN_MATRIX_OFFSET0_1 		CBUS_REG_ADDR(VDIN_MATRIX_OFFSET0_1) 	///../ucode/register.h
+#define VDIN_MATRIX_OFFSET2 0x1217 	///../ucode/register.h
+#define P_VDIN_MATRIX_OFFSET2 		CBUS_REG_ADDR(VDIN_MATRIX_OFFSET2) 	///../ucode/register.h
+#define VDIN_MATRIX_PRE_OFFSET0_1 0x1218 	///../ucode/register.h
+#define P_VDIN_MATRIX_PRE_OFFSET0_1 		CBUS_REG_ADDR(VDIN_MATRIX_PRE_OFFSET0_1) 	///../ucode/register.h
+#define VDIN_MATRIX_PRE_OFFSET2 0x1219 	///../ucode/register.h
+#define P_VDIN_MATRIX_PRE_OFFSET2 		CBUS_REG_ADDR(VDIN_MATRIX_PRE_OFFSET2) 	///../ucode/register.h
+#define VDIN_LFIFO_CTRL 0x121a 	///../ucode/register.h
+#define P_VDIN_LFIFO_CTRL 		CBUS_REG_ADDR(VDIN_LFIFO_CTRL) 	///../ucode/register.h
+#define VDIN_COM_GCLK_CTRL 0x121b 	///../ucode/register.h
+#define P_VDIN_COM_GCLK_CTRL 		CBUS_REG_ADDR(VDIN_COM_GCLK_CTRL) 	///../ucode/register.h
+#define VDIN_INTF_WIDTHM1 0x121c 	///../ucode/register.h
+#define P_VDIN_INTF_WIDTHM1 		CBUS_REG_ADDR(VDIN_INTF_WIDTHM1) 	///../ucode/register.h
+#define VDIN_WR_CTRL2 0x121f 	///../ucode/register.h
+#define P_VDIN_WR_CTRL2 		CBUS_REG_ADDR(VDIN_WR_CTRL2) 	///../ucode/register.h
+#define VDIN_WR_CTRL 0x1220 	///../ucode/register.h
+#define P_VDIN_WR_CTRL 		CBUS_REG_ADDR(VDIN_WR_CTRL) 	///../ucode/register.h
+#define VDIN_WR_H_START_END 0x1221 	///../ucode/register.h
+#define P_VDIN_WR_H_START_END 		CBUS_REG_ADDR(VDIN_WR_H_START_END) 	///../ucode/register.h
+#define VDIN_WR_V_START_END 0x1222 	///../ucode/register.h
+#define P_VDIN_WR_V_START_END 		CBUS_REG_ADDR(VDIN_WR_V_START_END) 	///../ucode/register.h
+#define VDIN_VSC_PHASE_STEP 0x1223 	///../ucode/register.h
+#define P_VDIN_VSC_PHASE_STEP 		CBUS_REG_ADDR(VDIN_VSC_PHASE_STEP) 	///../ucode/register.h
+#define VDIN_VSC_INI_CTRL 0x1224 	///../ucode/register.h
+#define P_VDIN_VSC_INI_CTRL 		CBUS_REG_ADDR(VDIN_VSC_INI_CTRL) 	///../ucode/register.h
+#define VDIN_SCIN_HEIGHTM1 0x1225 	///../ucode/register.h
+#define P_VDIN_SCIN_HEIGHTM1 		CBUS_REG_ADDR(VDIN_SCIN_HEIGHTM1) 	///../ucode/register.h
+#define VDIN_DUMMY_DATA 0x1226 	///../ucode/register.h
+#define P_VDIN_DUMMY_DATA 		CBUS_REG_ADDR(VDIN_DUMMY_DATA) 	///../ucode/register.h
+#define VDIN_MATRIX_PROBE_COLOR 0x1228 	///../ucode/register.h
+#define P_VDIN_MATRIX_PROBE_COLOR 		CBUS_REG_ADDR(VDIN_MATRIX_PROBE_COLOR) 	///../ucode/register.h
+#define VDIN_MATRIX_HL_COLOR 0x1229 	///../ucode/register.h
+#define P_VDIN_MATRIX_HL_COLOR 		CBUS_REG_ADDR(VDIN_MATRIX_HL_COLOR) 	///../ucode/register.h
+#define VDIN_MATRIX_PROBE_POS 0x122a 	///../ucode/register.h
+#define P_VDIN_MATRIX_PROBE_POS 		CBUS_REG_ADDR(VDIN_MATRIX_PROBE_POS) 	///../ucode/register.h
+#define VDIN_HIST_CTRL 0x1230 	///../ucode/register.h
+#define P_VDIN_HIST_CTRL 		CBUS_REG_ADDR(VDIN_HIST_CTRL) 	///../ucode/register.h
+#define VDIN_HIST_H_START_END 0x1231 	///../ucode/register.h
+#define P_VDIN_HIST_H_START_END 		CBUS_REG_ADDR(VDIN_HIST_H_START_END) 	///../ucode/register.h
+#define VDIN_HIST_V_START_END 0x1232 	///../ucode/register.h
+#define P_VDIN_HIST_V_START_END 		CBUS_REG_ADDR(VDIN_HIST_V_START_END) 	///../ucode/register.h
+#define VDIN_HIST_MAX_MIN 0x1233 	///../ucode/register.h
+#define P_VDIN_HIST_MAX_MIN 		CBUS_REG_ADDR(VDIN_HIST_MAX_MIN) 	///../ucode/register.h
+#define VDIN_HIST_SPL_VAL 0x1234 	///../ucode/register.h
+#define P_VDIN_HIST_SPL_VAL 		CBUS_REG_ADDR(VDIN_HIST_SPL_VAL) 	///../ucode/register.h
+#define VDIN_HIST_SPL_PIX_CNT 0x1235 	///../ucode/register.h
+#define P_VDIN_HIST_SPL_PIX_CNT 		CBUS_REG_ADDR(VDIN_HIST_SPL_PIX_CNT) 	///../ucode/register.h
+#define VDIN_HIST_CHROMA_SUM 0x1236 	///../ucode/register.h
+#define P_VDIN_HIST_CHROMA_SUM 		CBUS_REG_ADDR(VDIN_HIST_CHROMA_SUM) 	///../ucode/register.h
+#define VDIN_DNLP_HIST00 0x1237 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST00 		CBUS_REG_ADDR(VDIN_DNLP_HIST00) 	///../ucode/register.h
+#define VDIN_DNLP_HIST01 0x1238 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST01 		CBUS_REG_ADDR(VDIN_DNLP_HIST01) 	///../ucode/register.h
+#define VDIN_DNLP_HIST02 0x1239 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST02 		CBUS_REG_ADDR(VDIN_DNLP_HIST02) 	///../ucode/register.h
+#define VDIN_DNLP_HIST03 0x123a 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST03 		CBUS_REG_ADDR(VDIN_DNLP_HIST03) 	///../ucode/register.h
+#define VDIN_DNLP_HIST04 0x123b 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST04 		CBUS_REG_ADDR(VDIN_DNLP_HIST04) 	///../ucode/register.h
+#define VDIN_DNLP_HIST05 0x123c 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST05 		CBUS_REG_ADDR(VDIN_DNLP_HIST05) 	///../ucode/register.h
+#define VDIN_DNLP_HIST06 0x123d 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST06 		CBUS_REG_ADDR(VDIN_DNLP_HIST06) 	///../ucode/register.h
+#define VDIN_DNLP_HIST07 0x123e 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST07 		CBUS_REG_ADDR(VDIN_DNLP_HIST07) 	///../ucode/register.h
+#define VDIN_DNLP_HIST08 0x123f 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST08 		CBUS_REG_ADDR(VDIN_DNLP_HIST08) 	///../ucode/register.h
+#define VDIN_DNLP_HIST09 0x1240 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST09 		CBUS_REG_ADDR(VDIN_DNLP_HIST09) 	///../ucode/register.h
+#define VDIN_DNLP_HIST10 0x1241 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST10 		CBUS_REG_ADDR(VDIN_DNLP_HIST10) 	///../ucode/register.h
+#define VDIN_DNLP_HIST11 0x1242 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST11 		CBUS_REG_ADDR(VDIN_DNLP_HIST11) 	///../ucode/register.h
+#define VDIN_DNLP_HIST12 0x1243 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST12 		CBUS_REG_ADDR(VDIN_DNLP_HIST12) 	///../ucode/register.h
+#define VDIN_DNLP_HIST13 0x1244 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST13 		CBUS_REG_ADDR(VDIN_DNLP_HIST13) 	///../ucode/register.h
+#define VDIN_DNLP_HIST14 0x1245 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST14 		CBUS_REG_ADDR(VDIN_DNLP_HIST14) 	///../ucode/register.h
+#define VDIN_DNLP_HIST15 0x1246 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST15 		CBUS_REG_ADDR(VDIN_DNLP_HIST15) 	///../ucode/register.h
+#define VDIN_DNLP_HIST16 0x1247 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST16 		CBUS_REG_ADDR(VDIN_DNLP_HIST16) 	///../ucode/register.h
+#define VDIN_DNLP_HIST17 0x1248 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST17 		CBUS_REG_ADDR(VDIN_DNLP_HIST17) 	///../ucode/register.h
+#define VDIN_DNLP_HIST18 0x1249 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST18 		CBUS_REG_ADDR(VDIN_DNLP_HIST18) 	///../ucode/register.h
+#define VDIN_DNLP_HIST19 0x124a 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST19 		CBUS_REG_ADDR(VDIN_DNLP_HIST19) 	///../ucode/register.h
+#define VDIN_DNLP_HIST20 0x124b 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST20 		CBUS_REG_ADDR(VDIN_DNLP_HIST20) 	///../ucode/register.h
+#define VDIN_DNLP_HIST21 0x124c 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST21 		CBUS_REG_ADDR(VDIN_DNLP_HIST21) 	///../ucode/register.h
+#define VDIN_DNLP_HIST22 0x124d 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST22 		CBUS_REG_ADDR(VDIN_DNLP_HIST22) 	///../ucode/register.h
+#define VDIN_DNLP_HIST23 0x124e 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST23 		CBUS_REG_ADDR(VDIN_DNLP_HIST23) 	///../ucode/register.h
+#define VDIN_DNLP_HIST24 0x124f 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST24 		CBUS_REG_ADDR(VDIN_DNLP_HIST24) 	///../ucode/register.h
+#define VDIN_DNLP_HIST25 0x1250 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST25 		CBUS_REG_ADDR(VDIN_DNLP_HIST25) 	///../ucode/register.h
+#define VDIN_DNLP_HIST26 0x1251 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST26 		CBUS_REG_ADDR(VDIN_DNLP_HIST26) 	///../ucode/register.h
+#define VDIN_DNLP_HIST27 0x1252 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST27 		CBUS_REG_ADDR(VDIN_DNLP_HIST27) 	///../ucode/register.h
+#define VDIN_DNLP_HIST28 0x1253 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST28 		CBUS_REG_ADDR(VDIN_DNLP_HIST28) 	///../ucode/register.h
+#define VDIN_DNLP_HIST29 0x1254 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST29 		CBUS_REG_ADDR(VDIN_DNLP_HIST29) 	///../ucode/register.h
+#define VDIN_DNLP_HIST30 0x1255 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST30 		CBUS_REG_ADDR(VDIN_DNLP_HIST30) 	///../ucode/register.h
+#define VDIN_DNLP_HIST31 0x1256 	///../ucode/register.h
+#define P_VDIN_DNLP_HIST31 		CBUS_REG_ADDR(VDIN_DNLP_HIST31) 	///../ucode/register.h
+#define VDIN_LDIM_STTS_HIST_REGION_IDX 0x1257 	///../ucode/register.h
+#define P_VDIN_LDIM_STTS_HIST_REGION_IDX 		CBUS_REG_ADDR(VDIN_LDIM_STTS_HIST_REGION_IDX) 	///../ucode/register.h
+#define VDIN_LDIM_STTS_HIST_SET_REGION 0x1258 	///../ucode/register.h
+#define P_VDIN_LDIM_STTS_HIST_SET_REGION 		CBUS_REG_ADDR(VDIN_LDIM_STTS_HIST_SET_REGION) 	///../ucode/register.h
+#define VDIN_LDIM_STTS_HIST_READ_REGION 0x1259 	///../ucode/register.h
+#define P_VDIN_LDIM_STTS_HIST_READ_REGION 		CBUS_REG_ADDR(VDIN_LDIM_STTS_HIST_READ_REGION) 	///../ucode/register.h
+#define VDIN_MEAS_CTRL0 0x125a 	///../ucode/register.h
+#define P_VDIN_MEAS_CTRL0 		CBUS_REG_ADDR(VDIN_MEAS_CTRL0) 	///../ucode/register.h
+#define VDIN_MEAS_VS_COUNT_HI 0x125b 	///../ucode/register.h
+#define P_VDIN_MEAS_VS_COUNT_HI 		CBUS_REG_ADDR(VDIN_MEAS_VS_COUNT_HI) 	///../ucode/register.h
+#define VDIN_MEAS_VS_COUNT_LO 0x125c 	///../ucode/register.h
+#define P_VDIN_MEAS_VS_COUNT_LO 		CBUS_REG_ADDR(VDIN_MEAS_VS_COUNT_LO) 	///../ucode/register.h
+#define VDIN_MEAS_HS_RANGE 0x125d 	///../ucode/register.h
+#define P_VDIN_MEAS_HS_RANGE 		CBUS_REG_ADDR(VDIN_MEAS_HS_RANGE) 	///../ucode/register.h
+#define VDIN_MEAS_HS_COUNT 0x125e 	///../ucode/register.h
+#define P_VDIN_MEAS_HS_COUNT 		CBUS_REG_ADDR(VDIN_MEAS_HS_COUNT) 	///../ucode/register.h
+#define VDIN_BLKBAR_CTRL1 0x125f 	///../ucode/register.h
+#define P_VDIN_BLKBAR_CTRL1 		CBUS_REG_ADDR(VDIN_BLKBAR_CTRL1) 	///../ucode/register.h
+#define VDIN_BLKBAR_CTRL0 0x1260 	///../ucode/register.h
+#define P_VDIN_BLKBAR_CTRL0 		CBUS_REG_ADDR(VDIN_BLKBAR_CTRL0) 	///../ucode/register.h
+#define VDIN_BLKBAR_H_START_END 0x1261 	///../ucode/register.h
+#define P_VDIN_BLKBAR_H_START_END 		CBUS_REG_ADDR(VDIN_BLKBAR_H_START_END) 	///../ucode/register.h
+#define VDIN_BLKBAR_V_START_END 0x1262 	///../ucode/register.h
+#define P_VDIN_BLKBAR_V_START_END 		CBUS_REG_ADDR(VDIN_BLKBAR_V_START_END) 	///../ucode/register.h
+#define VDIN_BLKBAR_CNT_THRESHOLD 0x1263 	///../ucode/register.h
+#define P_VDIN_BLKBAR_CNT_THRESHOLD 		CBUS_REG_ADDR(VDIN_BLKBAR_CNT_THRESHOLD) 	///../ucode/register.h
+#define VDIN_BLKBAR_ROW_TH1_TH2 0x1264 	///../ucode/register.h
+#define P_VDIN_BLKBAR_ROW_TH1_TH2 		CBUS_REG_ADDR(VDIN_BLKBAR_ROW_TH1_TH2) 	///../ucode/register.h
+#define VDIN_BLKBAR_IND_LEFT_START_END 0x1265 	///../ucode/register.h
+#define P_VDIN_BLKBAR_IND_LEFT_START_END 		CBUS_REG_ADDR(VDIN_BLKBAR_IND_LEFT_START_END) 	///../ucode/register.h
+#define VDIN_BLKBAR_IND_RIGHT_START_END 0x1266 	///../ucode/register.h
+#define P_VDIN_BLKBAR_IND_RIGHT_START_END 		CBUS_REG_ADDR(VDIN_BLKBAR_IND_RIGHT_START_END) 	///../ucode/register.h
+#define VDIN_BLKBAR_IND_LEFT1_CNT 0x1267 	///../ucode/register.h
+#define P_VDIN_BLKBAR_IND_LEFT1_CNT 		CBUS_REG_ADDR(VDIN_BLKBAR_IND_LEFT1_CNT) 	///../ucode/register.h
+#define VDIN_BLKBAR_IND_LEFT2_CNT 0x1268 	///../ucode/register.h
+#define P_VDIN_BLKBAR_IND_LEFT2_CNT 		CBUS_REG_ADDR(VDIN_BLKBAR_IND_LEFT2_CNT) 	///../ucode/register.h
+#define VDIN_BLKBAR_IND_RIGHT1_CNT 0x1269 	///../ucode/register.h
+#define P_VDIN_BLKBAR_IND_RIGHT1_CNT 		CBUS_REG_ADDR(VDIN_BLKBAR_IND_RIGHT1_CNT) 	///../ucode/register.h
+#define VDIN_BLKBAR_IND_RIGHT2_CNT 0x126a 	///../ucode/register.h
+#define P_VDIN_BLKBAR_IND_RIGHT2_CNT 		CBUS_REG_ADDR(VDIN_BLKBAR_IND_RIGHT2_CNT) 	///../ucode/register.h
+#define VDIN_BLKBAR_STATUS0 0x126b 	///../ucode/register.h
+#define P_VDIN_BLKBAR_STATUS0 		CBUS_REG_ADDR(VDIN_BLKBAR_STATUS0) 	///../ucode/register.h
+#define VDIN_BLKBAR_STATUS1 0x126c 	///../ucode/register.h
+#define P_VDIN_BLKBAR_STATUS1 		CBUS_REG_ADDR(VDIN_BLKBAR_STATUS1) 	///../ucode/register.h
+#define VDIN_WIN_H_START_END 0x126d 	///../ucode/register.h
+#define P_VDIN_WIN_H_START_END 		CBUS_REG_ADDR(VDIN_WIN_H_START_END) 	///../ucode/register.h
+#define VDIN_WIN_V_START_END 0x126e 	///../ucode/register.h
+#define P_VDIN_WIN_V_START_END 		CBUS_REG_ADDR(VDIN_WIN_V_START_END) 	///../ucode/register.h
+#define VDIN_ASFIFO_CTRL3 0x126f 	///../ucode/register.h
+#define P_VDIN_ASFIFO_CTRL3 		CBUS_REG_ADDR(VDIN_ASFIFO_CTRL3) 	///../ucode/register.h
+#define DVIN_FRONT_END_CTRL 0x12e0 	///../ucode/register.h
+#define P_DVIN_FRONT_END_CTRL 		CBUS_REG_ADDR(DVIN_FRONT_END_CTRL) 	///../ucode/register.h
+#define DVIN_HS_LEAD_VS_ODD 0x12e1 	///../ucode/register.h
+#define P_DVIN_HS_LEAD_VS_ODD 		CBUS_REG_ADDR(DVIN_HS_LEAD_VS_ODD) 	///../ucode/register.h
+#define DVIN_ACTIVE_START_PIX 0x12e2 	///../ucode/register.h
+#define P_DVIN_ACTIVE_START_PIX 		CBUS_REG_ADDR(DVIN_ACTIVE_START_PIX) 	///../ucode/register.h
+#define DVIN_ACTIVE_START_LINE 0x12e3 	///../ucode/register.h
+#define P_DVIN_ACTIVE_START_LINE 		CBUS_REG_ADDR(DVIN_ACTIVE_START_LINE) 	///../ucode/register.h
+#define DVIN_DISPLAY_SIZE 0x12e4 	///../ucode/register.h
+#define P_DVIN_DISPLAY_SIZE 		CBUS_REG_ADDR(DVIN_DISPLAY_SIZE) 	///../ucode/register.h
+#define DVIN_CTRL_STAT 0x12e5 	///../ucode/register.h
+#define P_DVIN_CTRL_STAT 		CBUS_REG_ADDR(DVIN_CTRL_STAT) 	///../ucode/register.h
+#define VDEC_ASSIST_MMC_CTRL0 0x0001 	///../ucode/register.h
+#define P_VDEC_ASSIST_MMC_CTRL0 		DOS_REG_ADDR(VDEC_ASSIST_MMC_CTRL0) 	///../ucode/register.h
+#define VDEC_ASSIST_MMC_CTRL1 0x0002 	///../ucode/register.h
+#define P_VDEC_ASSIST_MMC_CTRL1 		DOS_REG_ADDR(VDEC_ASSIST_MMC_CTRL1) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT0 0x0025 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT0 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT0) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT1 0x0026 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT1 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT1) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT2 0x0027 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT2 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT2) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT3 0x0028 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT3 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT3) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT4 0x0029 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT4 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT4) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT5 0x002a 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT5 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT5) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT6 0x002b 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT6 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT6) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT7 0x002c 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT7 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT7) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT8 0x002d 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT8 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT8) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INT9 0x002e 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INT9 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INT9) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INTA 0x002f 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INTA 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INTA) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INTB 0x0030 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INTB 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INTB) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INTC 0x0031 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INTC 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INTC) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INTD 0x0032 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INTD 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INTD) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INTE 0x0033 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INTE 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INTE) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR1_INTF 0x0034 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR1_INTF 		DOS_REG_ADDR(VDEC_ASSIST_AMR1_INTF) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT0 0x0035 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT0 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT0) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT1 0x0036 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT1 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT1) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT2 0x0037 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT2 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT2) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT3 0x0038 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT3 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT3) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT4 0x0039 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT4 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT4) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT5 0x003a 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT5 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT5) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT6 0x003b 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT6 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT6) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT7 0x003c 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT7 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT7) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT8 0x003d 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT8 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT8) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INT9 0x003e 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INT9 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INT9) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INTA 0x003f 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INTA 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INTA) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INTB 0x0040 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INTB 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INTB) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INTC 0x0041 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INTC 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INTC) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INTD 0x0042 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INTD 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INTD) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INTE 0x0043 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INTE 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INTE) 	///../ucode/register.h
+#define VDEC_ASSIST_AMR2_INTF 0x0044 	///../ucode/register.h
+#define P_VDEC_ASSIST_AMR2_INTF 		DOS_REG_ADDR(VDEC_ASSIST_AMR2_INTF) 	///../ucode/register.h
+#define VDEC_ASSIST_MBX_SSEL 0x0045 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBX_SSEL 		DOS_REG_ADDR(VDEC_ASSIST_MBX_SSEL) 	///../ucode/register.h
+#define VDEC_ASSIST_TIMER0_LO 0x0060 	///../ucode/register.h
+#define P_VDEC_ASSIST_TIMER0_LO 		DOS_REG_ADDR(VDEC_ASSIST_TIMER0_LO) 	///../ucode/register.h
+#define VDEC_ASSIST_TIMER0_HI 0x0061 	///../ucode/register.h
+#define P_VDEC_ASSIST_TIMER0_HI 		DOS_REG_ADDR(VDEC_ASSIST_TIMER0_HI) 	///../ucode/register.h
+#define VDEC_ASSIST_TIMER1_LO 0x0062 	///../ucode/register.h
+#define P_VDEC_ASSIST_TIMER1_LO 		DOS_REG_ADDR(VDEC_ASSIST_TIMER1_LO) 	///../ucode/register.h
+#define VDEC_ASSIST_TIMER1_HI 0x0063 	///../ucode/register.h
+#define P_VDEC_ASSIST_TIMER1_HI 		DOS_REG_ADDR(VDEC_ASSIST_TIMER1_HI) 	///../ucode/register.h
+#define VDEC_ASSIST_DMA_INT 0x0064 	///../ucode/register.h
+#define P_VDEC_ASSIST_DMA_INT 		DOS_REG_ADDR(VDEC_ASSIST_DMA_INT) 	///../ucode/register.h
+#define VDEC_ASSIST_DMA_INT_MSK 0x0065 	///../ucode/register.h
+#define P_VDEC_ASSIST_DMA_INT_MSK 		DOS_REG_ADDR(VDEC_ASSIST_DMA_INT_MSK) 	///../ucode/register.h
+#define VDEC_ASSIST_DMA_INT2 0x0066 	///../ucode/register.h
+#define P_VDEC_ASSIST_DMA_INT2 		DOS_REG_ADDR(VDEC_ASSIST_DMA_INT2) 	///../ucode/register.h
+#define VDEC_ASSIST_DMA_INT_MSK2 0x0067 	///../ucode/register.h
+#define P_VDEC_ASSIST_DMA_INT_MSK2 		DOS_REG_ADDR(VDEC_ASSIST_DMA_INT_MSK2) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX0_IRQ_REG 0x0070 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX0_IRQ_REG 		DOS_REG_ADDR(VDEC_ASSIST_MBOX0_IRQ_REG) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX0_CLR_REG 0x0071 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX0_CLR_REG 		DOS_REG_ADDR(VDEC_ASSIST_MBOX0_CLR_REG) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX0_MASK 0x0072 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX0_MASK 		DOS_REG_ADDR(VDEC_ASSIST_MBOX0_MASK) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX0_FIQ_SEL 0x0073 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX0_FIQ_SEL 		DOS_REG_ADDR(VDEC_ASSIST_MBOX0_FIQ_SEL) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX1_IRQ_REG 0x0074 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX1_IRQ_REG 		DOS_REG_ADDR(VDEC_ASSIST_MBOX1_IRQ_REG) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX1_CLR_REG 0x0075 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX1_CLR_REG 		DOS_REG_ADDR(VDEC_ASSIST_MBOX1_CLR_REG) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX1_MASK 0x0076 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX1_MASK 		DOS_REG_ADDR(VDEC_ASSIST_MBOX1_MASK) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX1_FIQ_SEL 0x0077 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX1_FIQ_SEL 		DOS_REG_ADDR(VDEC_ASSIST_MBOX1_FIQ_SEL) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX2_IRQ_REG 0x0078 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX2_IRQ_REG 		DOS_REG_ADDR(VDEC_ASSIST_MBOX2_IRQ_REG) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX2_CLR_REG 0x0079 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX2_CLR_REG 		DOS_REG_ADDR(VDEC_ASSIST_MBOX2_CLR_REG) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX2_MASK 0x007a 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX2_MASK 		DOS_REG_ADDR(VDEC_ASSIST_MBOX2_MASK) 	///../ucode/register.h
+#define VDEC_ASSIST_MBOX2_FIQ_SEL 0x007b 	///../ucode/register.h
+#define P_VDEC_ASSIST_MBOX2_FIQ_SEL 		DOS_REG_ADDR(VDEC_ASSIST_MBOX2_FIQ_SEL) 	///../ucode/register.h
+#define HCODEC_ASSIST_MMC_CTRL0 0x0001 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MMC_CTRL0 		CBUS_REG_ADDR(HCODEC_ASSIST_MMC_CTRL0) 	///../ucode/register.h
+#define HCODEC_ASSIST_MMC_CTRL1 0x0002 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MMC_CTRL1 		CBUS_REG_ADDR(HCODEC_ASSIST_MMC_CTRL1) 	///../ucode/register.h
+#define HCODEC_CUSAD_REG0_CRST 0x0010 	///../ucode/register.h
+#define P_HCODEC_CUSAD_REG0_CRST 		CBUS_REG_ADDR(HCODEC_CUSAD_REG0_CRST) 	///../ucode/register.h
+#define HCODEC_CUSAD_REG1_CTRL 0x0011 	///../ucode/register.h
+#define P_HCODEC_CUSAD_REG1_CTRL 		CBUS_REG_ADDR(HCODEC_CUSAD_REG1_CTRL) 	///../ucode/register.h
+#define HCODEC_CUSAD_REG2_STAT 0x0012 	///../ucode/register.h
+#define P_HCODEC_CUSAD_REG2_STAT 		CBUS_REG_ADDR(HCODEC_CUSAD_REG2_STAT) 	///../ucode/register.h
+#define HCODEC_CUSAD_REG3_SCMD 0x0013 	///../ucode/register.h
+#define P_HCODEC_CUSAD_REG3_SCMD 		CBUS_REG_ADDR(HCODEC_CUSAD_REG3_SCMD) 	///../ucode/register.h
+#define HCODEC_CUSAD_REG4_DCFG 0x0014 	///../ucode/register.h
+#define P_HCODEC_CUSAD_REG4_DCFG 		CBUS_REG_ADDR(HCODEC_CUSAD_REG4_DCFG) 	///../ucode/register.h
+#define HCODEC_CUSAD_REG5_ADDR 0x0015 	///../ucode/register.h
+#define P_HCODEC_CUSAD_REG5_ADDR 		CBUS_REG_ADDR(HCODEC_CUSAD_REG5_ADDR) 	///../ucode/register.h
+#define HCODEC_CUSAD_REG6_ISAD 0x0016 	///../ucode/register.h
+#define P_HCODEC_CUSAD_REG6_ISAD 		CBUS_REG_ADDR(HCODEC_CUSAD_REG6_ISAD) 	///../ucode/register.h
+#define HCODEC_CUSAD_REG7_MSAD 0x0017 	///../ucode/register.h
+#define P_HCODEC_CUSAD_REG7_MSAD 		CBUS_REG_ADDR(HCODEC_CUSAD_REG7_MSAD) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT0 0x0025 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT0 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT0) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT1 0x0026 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT1 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT1) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT2 0x0027 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT2 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT2) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT3 0x0028 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT3 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT3) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT4 0x0029 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT4 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT4) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT5 0x002a 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT5 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT5) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT6 0x002b 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT6 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT6) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT7 0x002c 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT7 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT7) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT8 0x002d 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT8 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT8) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INT9 0x002e 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INT9 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INT9) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INTA 0x002f 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INTA 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INTA) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INTB 0x0030 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INTB 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INTB) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INTC 0x0031 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INTC 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INTC) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INTD 0x0032 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INTD 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INTD) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INTE 0x0033 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INTE 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INTE) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR1_INTF 0x0034 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR1_INTF 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR1_INTF) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT0 0x0035 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT0 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT0) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT1 0x0036 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT1 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT1) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT2 0x0037 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT2 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT2) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT3 0x0038 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT3 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT3) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT4 0x0039 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT4 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT4) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT5 0x003a 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT5 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT5) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT6 0x003b 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT6 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT6) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT7 0x003c 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT7 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT7) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT8 0x003d 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT8 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT8) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INT9 0x003e 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INT9 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INT9) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INTA 0x003f 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INTA 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INTA) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INTB 0x0040 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INTB 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INTB) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INTC 0x0041 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INTC 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INTC) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INTD 0x0042 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INTD 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INTD) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INTE 0x0043 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INTE 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INTE) 	///../ucode/register.h
+#define HCODEC_ASSIST_AMR2_INTF 0x0044 	///../ucode/register.h
+#define P_HCODEC_ASSIST_AMR2_INTF 		CBUS_REG_ADDR(HCODEC_ASSIST_AMR2_INTF) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBX_SSEL 0x0045 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBX_SSEL 		CBUS_REG_ADDR(HCODEC_ASSIST_MBX_SSEL) 	///../ucode/register.h
+#define HCODEC_ASSIST_TIMER0_LO 0x0060 	///../ucode/register.h
+#define P_HCODEC_ASSIST_TIMER0_LO 		CBUS_REG_ADDR(HCODEC_ASSIST_TIMER0_LO) 	///../ucode/register.h
+#define HCODEC_ASSIST_TIMER0_HI 0x0061 	///../ucode/register.h
+#define P_HCODEC_ASSIST_TIMER0_HI 		CBUS_REG_ADDR(HCODEC_ASSIST_TIMER0_HI) 	///../ucode/register.h
+#define HCODEC_ASSIST_TIMER1_LO 0x0062 	///../ucode/register.h
+#define P_HCODEC_ASSIST_TIMER1_LO 		CBUS_REG_ADDR(HCODEC_ASSIST_TIMER1_LO) 	///../ucode/register.h
+#define HCODEC_ASSIST_TIMER1_HI 0x0063 	///../ucode/register.h
+#define P_HCODEC_ASSIST_TIMER1_HI 		CBUS_REG_ADDR(HCODEC_ASSIST_TIMER1_HI) 	///../ucode/register.h
+#define HCODEC_ASSIST_DMA_INT 0x0064 	///../ucode/register.h
+#define P_HCODEC_ASSIST_DMA_INT 		CBUS_REG_ADDR(HCODEC_ASSIST_DMA_INT) 	///../ucode/register.h
+#define HCODEC_ASSIST_DMA_INT_MSK 0x0065 	///../ucode/register.h
+#define P_HCODEC_ASSIST_DMA_INT_MSK 		CBUS_REG_ADDR(HCODEC_ASSIST_DMA_INT_MSK) 	///../ucode/register.h
+#define HCODEC_ASSIST_DMA_INT2 0x0066 	///../ucode/register.h
+#define P_HCODEC_ASSIST_DMA_INT2 		CBUS_REG_ADDR(HCODEC_ASSIST_DMA_INT2) 	///../ucode/register.h
+#define HCODEC_ASSIST_DMA_INT_MSK2 0x0067 	///../ucode/register.h
+#define P_HCODEC_ASSIST_DMA_INT_MSK2 		CBUS_REG_ADDR(HCODEC_ASSIST_DMA_INT_MSK2) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX0_IRQ_REG 0x0070 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX0_IRQ_REG 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX0_IRQ_REG) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX0_CLR_REG 0x0071 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX0_CLR_REG 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX0_CLR_REG) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX0_MASK 0x0072 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX0_MASK 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX0_MASK) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX0_FIQ_SEL 0x0073 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX0_FIQ_SEL 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX0_FIQ_SEL) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX1_IRQ_REG 0x0074 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX1_IRQ_REG 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX1_IRQ_REG) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX1_CLR_REG 0x0075 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX1_CLR_REG 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX1_CLR_REG) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX1_MASK 0x0076 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX1_MASK 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX1_MASK) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX1_FIQ_SEL 0x0077 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX1_FIQ_SEL 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX1_FIQ_SEL) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX2_IRQ_REG 0x0078 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX2_IRQ_REG 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX2_IRQ_REG) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX2_CLR_REG 0x0079 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX2_CLR_REG 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX2_CLR_REG) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX2_MASK 0x007a 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX2_MASK 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX2_MASK) 	///../ucode/register.h
+#define HCODEC_ASSIST_MBOX2_FIQ_SEL 0x007b 	///../ucode/register.h
+#define P_HCODEC_ASSIST_MBOX2_FIQ_SEL 		CBUS_REG_ADDR(HCODEC_ASSIST_MBOX2_FIQ_SEL) 	///../ucode/register.h
+#define MC_CTRL_REG 0x0900 	///../ucode/register.h
+#define P_MC_CTRL_REG 		DOS_REG_ADDR(MC_CTRL_REG) 	///../ucode/register.h
+#define MC_MB_INFO 0x0901 	///../ucode/register.h
+#define P_MC_MB_INFO 		DOS_REG_ADDR(MC_MB_INFO) 	///../ucode/register.h
+#define MC_PIC_INFO 0x0902 	///../ucode/register.h
+#define P_MC_PIC_INFO 		DOS_REG_ADDR(MC_PIC_INFO) 	///../ucode/register.h
+#define MC_HALF_PEL_ONE 0x0903 	///../ucode/register.h
+#define P_MC_HALF_PEL_ONE 		DOS_REG_ADDR(MC_HALF_PEL_ONE) 	///../ucode/register.h
+#define MC_HALF_PEL_TWO 0x0904 	///../ucode/register.h
+#define P_MC_HALF_PEL_TWO 		DOS_REG_ADDR(MC_HALF_PEL_TWO) 	///../ucode/register.h
+#define POWER_CTL_MC 0x0905 	///../ucode/register.h
+#define P_POWER_CTL_MC 		DOS_REG_ADDR(POWER_CTL_MC) 	///../ucode/register.h
+#define MC_CMD 0x0906 	///../ucode/register.h
+#define P_MC_CMD 		DOS_REG_ADDR(MC_CMD) 	///../ucode/register.h
+#define MC_CTRL0 0x0907 	///../ucode/register.h
+#define P_MC_CTRL0 		DOS_REG_ADDR(MC_CTRL0) 	///../ucode/register.h
+#define MC_PIC_W_H 0x0908 	///../ucode/register.h
+#define P_MC_PIC_W_H 		DOS_REG_ADDR(MC_PIC_W_H) 	///../ucode/register.h
+#define MC_STATUS0 0x0909 	///../ucode/register.h
+#define P_MC_STATUS0 		DOS_REG_ADDR(MC_STATUS0) 	///../ucode/register.h
+#define MC_STATUS1 0x090a 	///../ucode/register.h
+#define P_MC_STATUS1 		DOS_REG_ADDR(MC_STATUS1) 	///../ucode/register.h
+#define MC_CTRL1 0x090b 	///../ucode/register.h
+#define P_MC_CTRL1 		DOS_REG_ADDR(MC_CTRL1) 	///../ucode/register.h
+#define MC_MIX_RATIO0 0x090c 	///../ucode/register.h
+#define P_MC_MIX_RATIO0 		DOS_REG_ADDR(MC_MIX_RATIO0) 	///../ucode/register.h
+#define MC_MIX_RATIO1 0x090d 	///../ucode/register.h
+#define P_MC_MIX_RATIO1 		DOS_REG_ADDR(MC_MIX_RATIO1) 	///../ucode/register.h
+#define MC_DP_MB_XY 0x090e 	///../ucode/register.h
+#define P_MC_DP_MB_XY 		DOS_REG_ADDR(MC_DP_MB_XY) 	///../ucode/register.h
+#define MC_OM_MB_XY 0x090f 	///../ucode/register.h
+#define P_MC_OM_MB_XY 		DOS_REG_ADDR(MC_OM_MB_XY) 	///../ucode/register.h
+#define PSCALE_RST 0x0910 	///../ucode/register.h
+#define P_PSCALE_RST 		DOS_REG_ADDR(PSCALE_RST) 	///../ucode/register.h
+#define PSCALE_CTRL 0x0911 	///../ucode/register.h
+#define P_PSCALE_CTRL 		DOS_REG_ADDR(PSCALE_CTRL) 	///../ucode/register.h
+#define PSCALE_PICI_W 0x0912 	///../ucode/register.h
+#define P_PSCALE_PICI_W 		DOS_REG_ADDR(PSCALE_PICI_W) 	///../ucode/register.h
+#define PSCALE_PICI_H 0x0913 	///../ucode/register.h
+#define P_PSCALE_PICI_H 		DOS_REG_ADDR(PSCALE_PICI_H) 	///../ucode/register.h
+#define PSCALE_PICO_W 0x0914 	///../ucode/register.h
+#define P_PSCALE_PICO_W 		DOS_REG_ADDR(PSCALE_PICO_W) 	///../ucode/register.h
+#define PSCALE_PICO_H 0x0915 	///../ucode/register.h
+#define P_PSCALE_PICO_H 		DOS_REG_ADDR(PSCALE_PICO_H) 	///../ucode/register.h
+#define PSCALE_PICO_START_X 0x0916 	///../ucode/register.h
+#define P_PSCALE_PICO_START_X 		DOS_REG_ADDR(PSCALE_PICO_START_X) 	///../ucode/register.h
+#define PSCALE_PICO_START_Y 0x0917 	///../ucode/register.h
+#define P_PSCALE_PICO_START_Y 		DOS_REG_ADDR(PSCALE_PICO_START_Y) 	///../ucode/register.h
+#define PSCALE_DUMMY 0x0918 	///../ucode/register.h
+#define P_PSCALE_DUMMY 		DOS_REG_ADDR(PSCALE_DUMMY) 	///../ucode/register.h
+#define PSCALE_FILT0_COEF0 0x0919 	///../ucode/register.h
+#define P_PSCALE_FILT0_COEF0 		DOS_REG_ADDR(PSCALE_FILT0_COEF0) 	///../ucode/register.h
+#define PSCALE_FILT0_COEF1 0x091a 	///../ucode/register.h
+#define P_PSCALE_FILT0_COEF1 		DOS_REG_ADDR(PSCALE_FILT0_COEF1) 	///../ucode/register.h
+#define PSCALE_CMD_CTRL 0x091b 	///../ucode/register.h
+#define P_PSCALE_CMD_CTRL 		DOS_REG_ADDR(PSCALE_CMD_CTRL) 	///../ucode/register.h
+#define PSCALE_CMD_BLK_X 0x091c 	///../ucode/register.h
+#define P_PSCALE_CMD_BLK_X 		DOS_REG_ADDR(PSCALE_CMD_BLK_X) 	///../ucode/register.h
+#define PSCALE_CMD_BLK_Y 0x091d 	///../ucode/register.h
+#define P_PSCALE_CMD_BLK_Y 		DOS_REG_ADDR(PSCALE_CMD_BLK_Y) 	///../ucode/register.h
+#define PSCALE_STATUS 0x091e 	///../ucode/register.h
+#define P_PSCALE_STATUS 		DOS_REG_ADDR(PSCALE_STATUS) 	///../ucode/register.h
+#define PSCALE_BMEM_ADDR 0x091f 	///../ucode/register.h
+#define P_PSCALE_BMEM_ADDR 		DOS_REG_ADDR(PSCALE_BMEM_ADDR) 	///../ucode/register.h
+#define PSCALE_BMEM_DAT 0x0920 	///../ucode/register.h
+#define P_PSCALE_BMEM_DAT 		DOS_REG_ADDR(PSCALE_BMEM_DAT) 	///../ucode/register.h
+#define PSCALE_DRAM_BUF_CTRL 0x0921 	///../ucode/register.h
+#define P_PSCALE_DRAM_BUF_CTRL 		DOS_REG_ADDR(PSCALE_DRAM_BUF_CTRL) 	///../ucode/register.h
+#define PSCALE_MCMD_CTRL 0x0922 	///../ucode/register.h
+#define P_PSCALE_MCMD_CTRL 		DOS_REG_ADDR(PSCALE_MCMD_CTRL) 	///../ucode/register.h
+#define PSCALE_MCMD_XSIZE 0x0923 	///../ucode/register.h
+#define P_PSCALE_MCMD_XSIZE 		DOS_REG_ADDR(PSCALE_MCMD_XSIZE) 	///../ucode/register.h
+#define PSCALE_MCMD_YSIZE 0x0924 	///../ucode/register.h
+#define P_PSCALE_MCMD_YSIZE 		DOS_REG_ADDR(PSCALE_MCMD_YSIZE) 	///../ucode/register.h
+#define PSCALE_RBUF_START_BLKX 0x0925 	///../ucode/register.h
+#define P_PSCALE_RBUF_START_BLKX 		DOS_REG_ADDR(PSCALE_RBUF_START_BLKX) 	///../ucode/register.h
+#define PSCALE_RBUF_START_BLKY 0x0926 	///../ucode/register.h
+#define P_PSCALE_RBUF_START_BLKY 		DOS_REG_ADDR(PSCALE_RBUF_START_BLKY) 	///../ucode/register.h
+#define PSCALE_PICO_SHIFT_XY 0x0928 	///../ucode/register.h
+#define P_PSCALE_PICO_SHIFT_XY 		DOS_REG_ADDR(PSCALE_PICO_SHIFT_XY) 	///../ucode/register.h
+#define PSCALE_CTRL1 0x0929 	///../ucode/register.h
+#define P_PSCALE_CTRL1 		DOS_REG_ADDR(PSCALE_CTRL1) 	///../ucode/register.h
+#define PSCALE_SRCKEY_CTRL0 0x092a 	///../ucode/register.h
+#define P_PSCALE_SRCKEY_CTRL0 		DOS_REG_ADDR(PSCALE_SRCKEY_CTRL0) 	///../ucode/register.h
+#define PSCALE_SRCKEY_CTRL1 0x092b 	///../ucode/register.h
+#define P_PSCALE_SRCKEY_CTRL1 		DOS_REG_ADDR(PSCALE_SRCKEY_CTRL1) 	///../ucode/register.h
+#define PSCALE_CANVAS_RD_ADDR 0x092c 	///../ucode/register.h
+#define P_PSCALE_CANVAS_RD_ADDR 		DOS_REG_ADDR(PSCALE_CANVAS_RD_ADDR) 	///../ucode/register.h
+#define PSCALE_CANVAS_WR_ADDR 0x092d 	///../ucode/register.h
+#define P_PSCALE_CANVAS_WR_ADDR 		DOS_REG_ADDR(PSCALE_CANVAS_WR_ADDR) 	///../ucode/register.h
+#define PSCALE_CTRL2 0x092e 	///../ucode/register.h
+#define P_PSCALE_CTRL2 		DOS_REG_ADDR(PSCALE_CTRL2) 	///../ucode/register.h
+#define MC_MPORT_CTRL 0x0940 	///../ucode/register.h
+#define P_MC_MPORT_CTRL 		DOS_REG_ADDR(MC_MPORT_CTRL) 	///../ucode/register.h
+#define MC_MPORT_DAT 0x0941 	///../ucode/register.h
+#define P_MC_MPORT_DAT 		DOS_REG_ADDR(MC_MPORT_DAT) 	///../ucode/register.h
+#define MC_WT_PRED_CTRL 0x0942 	///../ucode/register.h
+#define P_MC_WT_PRED_CTRL 		DOS_REG_ADDR(MC_WT_PRED_CTRL) 	///../ucode/register.h
+#define MC_MBBOT_ST_EVEN_ADDR 0x0944 	///../ucode/register.h
+#define P_MC_MBBOT_ST_EVEN_ADDR 		DOS_REG_ADDR(MC_MBBOT_ST_EVEN_ADDR) 	///../ucode/register.h
+#define MC_MBBOT_ST_ODD_ADDR 0x0945 	///../ucode/register.h
+#define P_MC_MBBOT_ST_ODD_ADDR 		DOS_REG_ADDR(MC_MBBOT_ST_ODD_ADDR) 	///../ucode/register.h
+#define MC_DPDN_MB_XY 0x0946 	///../ucode/register.h
+#define P_MC_DPDN_MB_XY 		DOS_REG_ADDR(MC_DPDN_MB_XY) 	///../ucode/register.h
+#define MC_OMDN_MB_XY 0x0947 	///../ucode/register.h
+#define P_MC_OMDN_MB_XY 		DOS_REG_ADDR(MC_OMDN_MB_XY) 	///../ucode/register.h
+#define MC_HCMDBUF_H 0x0948 	///../ucode/register.h
+#define P_MC_HCMDBUF_H 		DOS_REG_ADDR(MC_HCMDBUF_H) 	///../ucode/register.h
+#define MC_HCMDBUF_L 0x0949 	///../ucode/register.h
+#define P_MC_HCMDBUF_L 		DOS_REG_ADDR(MC_HCMDBUF_L) 	///../ucode/register.h
+#define MC_HCMD_H 0x094a 	///../ucode/register.h
+#define P_MC_HCMD_H 		DOS_REG_ADDR(MC_HCMD_H) 	///../ucode/register.h
+#define MC_HCMD_L 0x094b 	///../ucode/register.h
+#define P_MC_HCMD_L 		DOS_REG_ADDR(MC_HCMD_L) 	///../ucode/register.h
+#define MC_IDCT_DAT 0x094c 	///../ucode/register.h
+#define P_MC_IDCT_DAT 		DOS_REG_ADDR(MC_IDCT_DAT) 	///../ucode/register.h
+#define MC_CTRL_GCLK_CTRL 0x094d 	///../ucode/register.h
+#define P_MC_CTRL_GCLK_CTRL 		DOS_REG_ADDR(MC_CTRL_GCLK_CTRL) 	///../ucode/register.h
+#define MC_OTHER_GCLK_CTRL 0x094e 	///../ucode/register.h
+#define P_MC_OTHER_GCLK_CTRL 		DOS_REG_ADDR(MC_OTHER_GCLK_CTRL) 	///../ucode/register.h
+#define MC_CTRL2 0x094f 	///../ucode/register.h
+#define P_MC_CTRL2 		DOS_REG_ADDR(MC_CTRL2) 	///../ucode/register.h
+#define MDEC_PIC_DC_CTRL 0x098e 	///../ucode/register.h
+#define P_MDEC_PIC_DC_CTRL 		DOS_REG_ADDR(MDEC_PIC_DC_CTRL) 	///../ucode/register.h
+#define MDEC_PIC_DC_STATUS 0x098f 	///../ucode/register.h
+#define P_MDEC_PIC_DC_STATUS 		DOS_REG_ADDR(MDEC_PIC_DC_STATUS) 	///../ucode/register.h
+#define ANC0_CANVAS_ADDR 0x0990 	///../ucode/register.h
+#define P_ANC0_CANVAS_ADDR 		DOS_REG_ADDR(ANC0_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC1_CANVAS_ADDR 0x0991 	///../ucode/register.h
+#define P_ANC1_CANVAS_ADDR 		DOS_REG_ADDR(ANC1_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC2_CANVAS_ADDR 0x0992 	///../ucode/register.h
+#define P_ANC2_CANVAS_ADDR 		DOS_REG_ADDR(ANC2_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC3_CANVAS_ADDR 0x0993 	///../ucode/register.h
+#define P_ANC3_CANVAS_ADDR 		DOS_REG_ADDR(ANC3_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC4_CANVAS_ADDR 0x0994 	///../ucode/register.h
+#define P_ANC4_CANVAS_ADDR 		DOS_REG_ADDR(ANC4_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC5_CANVAS_ADDR 0x0995 	///../ucode/register.h
+#define P_ANC5_CANVAS_ADDR 		DOS_REG_ADDR(ANC5_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC6_CANVAS_ADDR 0x0996 	///../ucode/register.h
+#define P_ANC6_CANVAS_ADDR 		DOS_REG_ADDR(ANC6_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC7_CANVAS_ADDR 0x0997 	///../ucode/register.h
+#define P_ANC7_CANVAS_ADDR 		DOS_REG_ADDR(ANC7_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC8_CANVAS_ADDR 0x0998 	///../ucode/register.h
+#define P_ANC8_CANVAS_ADDR 		DOS_REG_ADDR(ANC8_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC9_CANVAS_ADDR 0x0999 	///../ucode/register.h
+#define P_ANC9_CANVAS_ADDR 		DOS_REG_ADDR(ANC9_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC10_CANVAS_ADDR 0x099a 	///../ucode/register.h
+#define P_ANC10_CANVAS_ADDR 		DOS_REG_ADDR(ANC10_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC11_CANVAS_ADDR 0x099b 	///../ucode/register.h
+#define P_ANC11_CANVAS_ADDR 		DOS_REG_ADDR(ANC11_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC12_CANVAS_ADDR 0x099c 	///../ucode/register.h
+#define P_ANC12_CANVAS_ADDR 		DOS_REG_ADDR(ANC12_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC13_CANVAS_ADDR 0x099d 	///../ucode/register.h
+#define P_ANC13_CANVAS_ADDR 		DOS_REG_ADDR(ANC13_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC14_CANVAS_ADDR 0x099e 	///../ucode/register.h
+#define P_ANC14_CANVAS_ADDR 		DOS_REG_ADDR(ANC14_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC15_CANVAS_ADDR 0x099f 	///../ucode/register.h
+#define P_ANC15_CANVAS_ADDR 		DOS_REG_ADDR(ANC15_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC16_CANVAS_ADDR 0x09a0 	///../ucode/register.h
+#define P_ANC16_CANVAS_ADDR 		DOS_REG_ADDR(ANC16_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC17_CANVAS_ADDR 0x09a1 	///../ucode/register.h
+#define P_ANC17_CANVAS_ADDR 		DOS_REG_ADDR(ANC17_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC18_CANVAS_ADDR 0x09a2 	///../ucode/register.h
+#define P_ANC18_CANVAS_ADDR 		DOS_REG_ADDR(ANC18_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC19_CANVAS_ADDR 0x09a3 	///../ucode/register.h
+#define P_ANC19_CANVAS_ADDR 		DOS_REG_ADDR(ANC19_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC20_CANVAS_ADDR 0x09a4 	///../ucode/register.h
+#define P_ANC20_CANVAS_ADDR 		DOS_REG_ADDR(ANC20_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC21_CANVAS_ADDR 0x09a5 	///../ucode/register.h
+#define P_ANC21_CANVAS_ADDR 		DOS_REG_ADDR(ANC21_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC22_CANVAS_ADDR 0x09a6 	///../ucode/register.h
+#define P_ANC22_CANVAS_ADDR 		DOS_REG_ADDR(ANC22_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC23_CANVAS_ADDR 0x09a7 	///../ucode/register.h
+#define P_ANC23_CANVAS_ADDR 		DOS_REG_ADDR(ANC23_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC24_CANVAS_ADDR 0x09a8 	///../ucode/register.h
+#define P_ANC24_CANVAS_ADDR 		DOS_REG_ADDR(ANC24_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC25_CANVAS_ADDR 0x09a9 	///../ucode/register.h
+#define P_ANC25_CANVAS_ADDR 		DOS_REG_ADDR(ANC25_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC26_CANVAS_ADDR 0x09aa 	///../ucode/register.h
+#define P_ANC26_CANVAS_ADDR 		DOS_REG_ADDR(ANC26_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC27_CANVAS_ADDR 0x09ab 	///../ucode/register.h
+#define P_ANC27_CANVAS_ADDR 		DOS_REG_ADDR(ANC27_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC28_CANVAS_ADDR 0x09ac 	///../ucode/register.h
+#define P_ANC28_CANVAS_ADDR 		DOS_REG_ADDR(ANC28_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC29_CANVAS_ADDR 0x09ad 	///../ucode/register.h
+#define P_ANC29_CANVAS_ADDR 		DOS_REG_ADDR(ANC29_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC30_CANVAS_ADDR 0x09ae 	///../ucode/register.h
+#define P_ANC30_CANVAS_ADDR 		DOS_REG_ADDR(ANC30_CANVAS_ADDR) 	///../ucode/register.h
+#define ANC31_CANVAS_ADDR 0x09af 	///../ucode/register.h
+#define P_ANC31_CANVAS_ADDR 		DOS_REG_ADDR(ANC31_CANVAS_ADDR) 	///../ucode/register.h
+#define DBKR_CANVAS_ADDR 0x09b0 	///../ucode/register.h
+#define P_DBKR_CANVAS_ADDR 		DOS_REG_ADDR(DBKR_CANVAS_ADDR) 	///../ucode/register.h
+#define DBKW_CANVAS_ADDR 0x09b1 	///../ucode/register.h
+#define P_DBKW_CANVAS_ADDR 		DOS_REG_ADDR(DBKW_CANVAS_ADDR) 	///../ucode/register.h
+#define REC_CANVAS_ADDR 0x09b2 	///../ucode/register.h
+#define P_REC_CANVAS_ADDR 		DOS_REG_ADDR(REC_CANVAS_ADDR) 	///../ucode/register.h
+#define CURR_CANVAS_CTRL 0x09b3 	///../ucode/register.h
+#define P_CURR_CANVAS_CTRL 		DOS_REG_ADDR(CURR_CANVAS_CTRL) 	///../ucode/register.h
+#define MDEC_PIC_DC_THRESH 0x09b8 	///../ucode/register.h
+#define P_MDEC_PIC_DC_THRESH 		DOS_REG_ADDR(MDEC_PIC_DC_THRESH) 	///../ucode/register.h
+#define MDEC_PICR_BUF_STATUS 0x09b9 	///../ucode/register.h
+#define P_MDEC_PICR_BUF_STATUS 		DOS_REG_ADDR(MDEC_PICR_BUF_STATUS) 	///../ucode/register.h
+#define MDEC_PICW_BUF_STATUS 0x09ba 	///../ucode/register.h
+#define P_MDEC_PICW_BUF_STATUS 		DOS_REG_ADDR(MDEC_PICW_BUF_STATUS) 	///../ucode/register.h
+#define MCW_DBLK_WRRSP_CNT 0x09bb 	///../ucode/register.h
+#define P_MCW_DBLK_WRRSP_CNT 		DOS_REG_ADDR(MCW_DBLK_WRRSP_CNT) 	///../ucode/register.h
+#define MC_MBBOT_WRRSP_CNT 0x09bc 	///../ucode/register.h
+#define P_MC_MBBOT_WRRSP_CNT 		DOS_REG_ADDR(MC_MBBOT_WRRSP_CNT) 	///../ucode/register.h
+#define MDEC_PICW_BUF2_STATUS 0x09bd 	///../ucode/register.h
+#define P_MDEC_PICW_BUF2_STATUS 		DOS_REG_ADDR(MDEC_PICW_BUF2_STATUS) 	///../ucode/register.h
+#define WRRSP_FIFO_PICW_DBK 0x09be 	///../ucode/register.h
+#define P_WRRSP_FIFO_PICW_DBK 		DOS_REG_ADDR(WRRSP_FIFO_PICW_DBK) 	///../ucode/register.h
+#define WRRSP_FIFO_PICW_MC 0x09bf 	///../ucode/register.h
+#define P_WRRSP_FIFO_PICW_MC 		DOS_REG_ADDR(WRRSP_FIFO_PICW_MC) 	///../ucode/register.h
+#define AV_SCRATCH_0 0x09c0 	///../ucode/register.h
+#define P_AV_SCRATCH_0 		DOS_REG_ADDR(AV_SCRATCH_0) 	///../ucode/register.h
+#define AV_SCRATCH_1 0x09c1 	///../ucode/register.h
+#define P_AV_SCRATCH_1 		DOS_REG_ADDR(AV_SCRATCH_1) 	///../ucode/register.h
+#define AV_SCRATCH_2 0x09c2 	///../ucode/register.h
+#define P_AV_SCRATCH_2 		DOS_REG_ADDR(AV_SCRATCH_2) 	///../ucode/register.h
+#define AV_SCRATCH_3 0x09c3 	///../ucode/register.h
+#define P_AV_SCRATCH_3 		DOS_REG_ADDR(AV_SCRATCH_3) 	///../ucode/register.h
+#define AV_SCRATCH_4 0x09c4 	///../ucode/register.h
+#define P_AV_SCRATCH_4 		DOS_REG_ADDR(AV_SCRATCH_4) 	///../ucode/register.h
+#define AV_SCRATCH_5 0x09c5 	///../ucode/register.h
+#define P_AV_SCRATCH_5 		DOS_REG_ADDR(AV_SCRATCH_5) 	///../ucode/register.h
+#define AV_SCRATCH_6 0x09c6 	///../ucode/register.h
+#define P_AV_SCRATCH_6 		DOS_REG_ADDR(AV_SCRATCH_6) 	///../ucode/register.h
+#define AV_SCRATCH_7 0x09c7 	///../ucode/register.h
+#define P_AV_SCRATCH_7 		DOS_REG_ADDR(AV_SCRATCH_7) 	///../ucode/register.h
+#define AV_SCRATCH_8 0x09c8 	///../ucode/register.h
+#define P_AV_SCRATCH_8 		DOS_REG_ADDR(AV_SCRATCH_8) 	///../ucode/register.h
+#define AV_SCRATCH_9 0x09c9 	///../ucode/register.h
+#define P_AV_SCRATCH_9 		DOS_REG_ADDR(AV_SCRATCH_9) 	///../ucode/register.h
+#define AV_SCRATCH_A 0x09ca 	///../ucode/register.h
+#define P_AV_SCRATCH_A 		DOS_REG_ADDR(AV_SCRATCH_A) 	///../ucode/register.h
+#define AV_SCRATCH_B 0x09cb 	///../ucode/register.h
+#define P_AV_SCRATCH_B 		DOS_REG_ADDR(AV_SCRATCH_B) 	///../ucode/register.h
+#define AV_SCRATCH_C 0x09cc 	///../ucode/register.h
+#define P_AV_SCRATCH_C 		DOS_REG_ADDR(AV_SCRATCH_C) 	///../ucode/register.h
+#define AV_SCRATCH_D 0x09cd 	///../ucode/register.h
+#define P_AV_SCRATCH_D 		DOS_REG_ADDR(AV_SCRATCH_D) 	///../ucode/register.h
+#define AV_SCRATCH_E 0x09ce 	///../ucode/register.h
+#define P_AV_SCRATCH_E 		DOS_REG_ADDR(AV_SCRATCH_E) 	///../ucode/register.h
+#define AV_SCRATCH_F 0x09cf 	///../ucode/register.h
+#define P_AV_SCRATCH_F 		DOS_REG_ADDR(AV_SCRATCH_F) 	///../ucode/register.h
+#define AV_SCRATCH_G 0x09d0 	///../ucode/register.h
+#define P_AV_SCRATCH_G 		DOS_REG_ADDR(AV_SCRATCH_G) 	///../ucode/register.h
+#define AV_SCRATCH_H 0x09d1 	///../ucode/register.h
+#define P_AV_SCRATCH_H 		DOS_REG_ADDR(AV_SCRATCH_H) 	///../ucode/register.h
+#define AV_SCRATCH_I 0x09d2 	///../ucode/register.h
+#define P_AV_SCRATCH_I 		DOS_REG_ADDR(AV_SCRATCH_I) 	///../ucode/register.h
+#define AV_SCRATCH_J 0x09d3 	///../ucode/register.h
+#define P_AV_SCRATCH_J 		DOS_REG_ADDR(AV_SCRATCH_J) 	///../ucode/register.h
+#define AV_SCRATCH_K 0x09d4 	///../ucode/register.h
+#define P_AV_SCRATCH_K 		DOS_REG_ADDR(AV_SCRATCH_K) 	///../ucode/register.h
+#define AV_SCRATCH_L 0x09d5 	///../ucode/register.h
+#define P_AV_SCRATCH_L 		DOS_REG_ADDR(AV_SCRATCH_L) 	///../ucode/register.h
+#define AV_SCRATCH_M 0x09d6 	///../ucode/register.h
+#define P_AV_SCRATCH_M 		DOS_REG_ADDR(AV_SCRATCH_M) 	///../ucode/register.h
+#define AV_SCRATCH_N 0x09d7 	///../ucode/register.h
+#define P_AV_SCRATCH_N 		DOS_REG_ADDR(AV_SCRATCH_N) 	///../ucode/register.h
+#define WRRSP_CO_MB 0x09d8 	///../ucode/register.h
+#define P_WRRSP_CO_MB 		DOS_REG_ADDR(WRRSP_CO_MB) 	///../ucode/register.h
+#define WRRSP_DCAC 0x09d9 	///../ucode/register.h
+#define P_WRRSP_DCAC 		DOS_REG_ADDR(WRRSP_DCAC) 	///../ucode/register.h
+#define DBLK_RST 0x0950 	///../ucode/register.h
+#define P_DBLK_RST 		DOS_REG_ADDR(DBLK_RST) 	///../ucode/register.h
+#define DBLK_CTRL 0x0951 	///../ucode/register.h
+#define P_DBLK_CTRL 		DOS_REG_ADDR(DBLK_CTRL) 	///../ucode/register.h
+#define DBLK_MB_WID_HEIGHT 0x0952 	///../ucode/register.h
+#define P_DBLK_MB_WID_HEIGHT 		DOS_REG_ADDR(DBLK_MB_WID_HEIGHT) 	///../ucode/register.h
+#define DBLK_STATUS 0x0953 	///../ucode/register.h
+#define P_DBLK_STATUS 		DOS_REG_ADDR(DBLK_STATUS) 	///../ucode/register.h
+#define DBLK_CMD_CTRL 0x0954 	///../ucode/register.h
+#define P_DBLK_CMD_CTRL 		DOS_REG_ADDR(DBLK_CMD_CTRL) 	///../ucode/register.h
+#define DBLK_MB_XY 0x0955 	///../ucode/register.h
+#define P_DBLK_MB_XY 		DOS_REG_ADDR(DBLK_MB_XY) 	///../ucode/register.h
+#define DBLK_QP 0x0956 	///../ucode/register.h
+#define P_DBLK_QP 		DOS_REG_ADDR(DBLK_QP) 	///../ucode/register.h
+#define DBLK_Y_BHFILT 0x0957 	///../ucode/register.h
+#define P_DBLK_Y_BHFILT 		DOS_REG_ADDR(DBLK_Y_BHFILT) 	///../ucode/register.h
+#define DBLK_Y_BHFILT_HIGH 0x0958 	///../ucode/register.h
+#define P_DBLK_Y_BHFILT_HIGH 		DOS_REG_ADDR(DBLK_Y_BHFILT_HIGH) 	///../ucode/register.h
+#define DBLK_Y_BVFILT 0x0959 	///../ucode/register.h
+#define P_DBLK_Y_BVFILT 		DOS_REG_ADDR(DBLK_Y_BVFILT) 	///../ucode/register.h
+#define DBLK_CB_BFILT 0x095a 	///../ucode/register.h
+#define P_DBLK_CB_BFILT 		DOS_REG_ADDR(DBLK_CB_BFILT) 	///../ucode/register.h
+#define DBLK_CR_BFILT 0x095b 	///../ucode/register.h
+#define P_DBLK_CR_BFILT 		DOS_REG_ADDR(DBLK_CR_BFILT) 	///../ucode/register.h
+#define DBLK_Y_HFILT 0x095c 	///../ucode/register.h
+#define P_DBLK_Y_HFILT 		DOS_REG_ADDR(DBLK_Y_HFILT) 	///../ucode/register.h
+#define DBLK_Y_HFILT_HIGH 0x095d 	///../ucode/register.h
+#define P_DBLK_Y_HFILT_HIGH 		DOS_REG_ADDR(DBLK_Y_HFILT_HIGH) 	///../ucode/register.h
+#define DBLK_Y_VFILT 0x095e 	///../ucode/register.h
+#define P_DBLK_Y_VFILT 		DOS_REG_ADDR(DBLK_Y_VFILT) 	///../ucode/register.h
+#define DBLK_CB_FILT 0x095f 	///../ucode/register.h
+#define P_DBLK_CB_FILT 		DOS_REG_ADDR(DBLK_CB_FILT) 	///../ucode/register.h
+#define DBLK_CR_FILT 0x0960 	///../ucode/register.h
+#define P_DBLK_CR_FILT 		DOS_REG_ADDR(DBLK_CR_FILT) 	///../ucode/register.h
+#define DBLK_BETAX_QP_SEL 0x0961 	///../ucode/register.h
+#define P_DBLK_BETAX_QP_SEL 		DOS_REG_ADDR(DBLK_BETAX_QP_SEL) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL0 0x0962 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL0 		DOS_REG_ADDR(DBLK_CLIP_CTRL0) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL1 0x0963 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL1 		DOS_REG_ADDR(DBLK_CLIP_CTRL1) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL2 0x0964 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL2 		DOS_REG_ADDR(DBLK_CLIP_CTRL2) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL3 0x0965 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL3 		DOS_REG_ADDR(DBLK_CLIP_CTRL3) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL4 0x0966 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL4 		DOS_REG_ADDR(DBLK_CLIP_CTRL4) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL5 0x0967 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL5 		DOS_REG_ADDR(DBLK_CLIP_CTRL5) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL6 0x0968 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL6 		DOS_REG_ADDR(DBLK_CLIP_CTRL6) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL7 0x0969 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL7 		DOS_REG_ADDR(DBLK_CLIP_CTRL7) 	///../ucode/register.h
+#define DBLK_CLIP_CTRL8 0x096a 	///../ucode/register.h
+#define P_DBLK_CLIP_CTRL8 		DOS_REG_ADDR(DBLK_CLIP_CTRL8) 	///../ucode/register.h
+#define DBLK_STATUS1 0x096b 	///../ucode/register.h
+#define P_DBLK_STATUS1 		DOS_REG_ADDR(DBLK_STATUS1) 	///../ucode/register.h
+#define DBLK_GCLK_FREE 0x096c 	///../ucode/register.h
+#define P_DBLK_GCLK_FREE 		DOS_REG_ADDR(DBLK_GCLK_FREE) 	///../ucode/register.h
+#define DBLK_GCLK_OFF 0x096d 	///../ucode/register.h
+#define P_DBLK_GCLK_OFF 		DOS_REG_ADDR(DBLK_GCLK_OFF) 	///../ucode/register.h
+#define DBLK_AVSFLAGS 0x096e 	///../ucode/register.h
+#define P_DBLK_AVSFLAGS 		DOS_REG_ADDR(DBLK_AVSFLAGS) 	///../ucode/register.h
+#define DBLK_CBPY 0x0970 	///../ucode/register.h
+#define P_DBLK_CBPY 		DOS_REG_ADDR(DBLK_CBPY) 	///../ucode/register.h
+#define DBLK_CBPY_ADJ 0x0971 	///../ucode/register.h
+#define P_DBLK_CBPY_ADJ 		DOS_REG_ADDR(DBLK_CBPY_ADJ) 	///../ucode/register.h
+#define DBLK_CBPC 0x0972 	///../ucode/register.h
+#define P_DBLK_CBPC 		DOS_REG_ADDR(DBLK_CBPC) 	///../ucode/register.h
+#define DBLK_CBPC_ADJ 0x0973 	///../ucode/register.h
+#define P_DBLK_CBPC_ADJ 		DOS_REG_ADDR(DBLK_CBPC_ADJ) 	///../ucode/register.h
+#define DBLK_VHMVD 0x0974 	///../ucode/register.h
+#define P_DBLK_VHMVD 		DOS_REG_ADDR(DBLK_VHMVD) 	///../ucode/register.h
+#define DBLK_STRONG 0x0975 	///../ucode/register.h
+#define P_DBLK_STRONG 		DOS_REG_ADDR(DBLK_STRONG) 	///../ucode/register.h
+#define DBLK_RV8_QUANT 0x0976 	///../ucode/register.h
+#define P_DBLK_RV8_QUANT 		DOS_REG_ADDR(DBLK_RV8_QUANT) 	///../ucode/register.h
+#define DBLK_CBUS_HCMD2 0x0977 	///../ucode/register.h
+#define P_DBLK_CBUS_HCMD2 		DOS_REG_ADDR(DBLK_CBUS_HCMD2) 	///../ucode/register.h
+#define DBLK_CBUS_HCMD1 0x0978 	///../ucode/register.h
+#define P_DBLK_CBUS_HCMD1 		DOS_REG_ADDR(DBLK_CBUS_HCMD1) 	///../ucode/register.h
+#define DBLK_CBUS_HCMD0 0x0979 	///../ucode/register.h
+#define P_DBLK_CBUS_HCMD0 		DOS_REG_ADDR(DBLK_CBUS_HCMD0) 	///../ucode/register.h
+#define DBLK_VLD_HCMD2 0x097a 	///../ucode/register.h
+#define P_DBLK_VLD_HCMD2 		DOS_REG_ADDR(DBLK_VLD_HCMD2) 	///../ucode/register.h
+#define DBLK_VLD_HCMD1 0x097b 	///../ucode/register.h
+#define P_DBLK_VLD_HCMD1 		DOS_REG_ADDR(DBLK_VLD_HCMD1) 	///../ucode/register.h
+#define DBLK_VLD_HCMD0 0x097c 	///../ucode/register.h
+#define P_DBLK_VLD_HCMD0 		DOS_REG_ADDR(DBLK_VLD_HCMD0) 	///../ucode/register.h
+#define DBLK_OST_YBASE 0x097d 	///../ucode/register.h
+#define P_DBLK_OST_YBASE 		DOS_REG_ADDR(DBLK_OST_YBASE) 	///../ucode/register.h
+#define DBLK_OST_CBCRDIFF 0x097e 	///../ucode/register.h
+#define P_DBLK_OST_CBCRDIFF 		DOS_REG_ADDR(DBLK_OST_CBCRDIFF) 	///../ucode/register.h
+#define DBLK_CTRL1 0x097f 	///../ucode/register.h
+#define P_DBLK_CTRL1 		DOS_REG_ADDR(DBLK_CTRL1) 	///../ucode/register.h
+#define VLD_STATUS_CTRL 0x0c00 	///../ucode/register.h
+#define P_VLD_STATUS_CTRL 		DOS_REG_ADDR(VLD_STATUS_CTRL) 	///../ucode/register.h
+#define MPEG1_2_REG 0x0c01 	///../ucode/register.h
+#define P_MPEG1_2_REG 		DOS_REG_ADDR(MPEG1_2_REG) 	///../ucode/register.h
+#define F_CODE_REG 0x0c02 	///../ucode/register.h
+#define P_F_CODE_REG 		DOS_REG_ADDR(F_CODE_REG) 	///../ucode/register.h
+#define PIC_HEAD_INFO 0x0c03 	///../ucode/register.h
+#define P_PIC_HEAD_INFO 		DOS_REG_ADDR(PIC_HEAD_INFO) 	///../ucode/register.h
+#define SLICE_VER_POS_PIC_TYPE 0x0c04 	///../ucode/register.h
+#define P_SLICE_VER_POS_PIC_TYPE 		DOS_REG_ADDR(SLICE_VER_POS_PIC_TYPE) 	///../ucode/register.h
+#define QP_VALUE_REG 0x0c05 	///../ucode/register.h
+#define P_QP_VALUE_REG 		DOS_REG_ADDR(QP_VALUE_REG) 	///../ucode/register.h
+#define MBA_INC 0x0c06 	///../ucode/register.h
+#define P_MBA_INC 		DOS_REG_ADDR(MBA_INC) 	///../ucode/register.h
+#define MB_MOTION_MODE 0x0c07 	///../ucode/register.h
+#define P_MB_MOTION_MODE 		DOS_REG_ADDR(MB_MOTION_MODE) 	///../ucode/register.h
+#define POWER_CTL_VLD 0x0c08 	///../ucode/register.h
+#define P_POWER_CTL_VLD 		DOS_REG_ADDR(POWER_CTL_VLD) 	///../ucode/register.h
+#define MB_WIDTH 0x0c09 	///../ucode/register.h
+#define P_MB_WIDTH 		DOS_REG_ADDR(MB_WIDTH) 	///../ucode/register.h
+#define SLICE_QP 0x0c0a 	///../ucode/register.h
+#define P_SLICE_QP 		DOS_REG_ADDR(SLICE_QP) 	///../ucode/register.h
+#define PRE_START_CODE 0x0c0b 	///../ucode/register.h
+#define P_PRE_START_CODE 		DOS_REG_ADDR(PRE_START_CODE) 	///../ucode/register.h
+#define SLICE_START_BYTE_01 0x0c0c 	///../ucode/register.h
+#define P_SLICE_START_BYTE_01 		DOS_REG_ADDR(SLICE_START_BYTE_01) 	///../ucode/register.h
+#define SLICE_START_BYTE_23 0x0c0d 	///../ucode/register.h
+#define P_SLICE_START_BYTE_23 		DOS_REG_ADDR(SLICE_START_BYTE_23) 	///../ucode/register.h
+#define RESYNC_MARKER_LENGTH 0x0c0e 	///../ucode/register.h
+#define P_RESYNC_MARKER_LENGTH 		DOS_REG_ADDR(RESYNC_MARKER_LENGTH) 	///../ucode/register.h
+#define DECODER_BUFFER_INFO 0x0c0f 	///../ucode/register.h
+#define P_DECODER_BUFFER_INFO 		DOS_REG_ADDR(DECODER_BUFFER_INFO) 	///../ucode/register.h
+#define FST_FOR_MV_X 0x0c10 	///../ucode/register.h
+#define P_FST_FOR_MV_X 		DOS_REG_ADDR(FST_FOR_MV_X) 	///../ucode/register.h
+#define FST_FOR_MV_Y 0x0c11 	///../ucode/register.h
+#define P_FST_FOR_MV_Y 		DOS_REG_ADDR(FST_FOR_MV_Y) 	///../ucode/register.h
+#define SCD_FOR_MV_X 0x0c12 	///../ucode/register.h
+#define P_SCD_FOR_MV_X 		DOS_REG_ADDR(SCD_FOR_MV_X) 	///../ucode/register.h
+#define SCD_FOR_MV_Y 0x0c13 	///../ucode/register.h
+#define P_SCD_FOR_MV_Y 		DOS_REG_ADDR(SCD_FOR_MV_Y) 	///../ucode/register.h
+#define FST_BAK_MV_X 0x0c14 	///../ucode/register.h
+#define P_FST_BAK_MV_X 		DOS_REG_ADDR(FST_BAK_MV_X) 	///../ucode/register.h
+#define FST_BAK_MV_Y 0x0c15 	///../ucode/register.h
+#define P_FST_BAK_MV_Y 		DOS_REG_ADDR(FST_BAK_MV_Y) 	///../ucode/register.h
+#define SCD_BAK_MV_X 0x0c16 	///../ucode/register.h
+#define P_SCD_BAK_MV_X 		DOS_REG_ADDR(SCD_BAK_MV_X) 	///../ucode/register.h
+#define SCD_BAK_MV_Y 0x0c17 	///../ucode/register.h
+#define P_SCD_BAK_MV_Y 		DOS_REG_ADDR(SCD_BAK_MV_Y) 	///../ucode/register.h
+#define VLD_DECODE_CONTROL 0x0c18 	///../ucode/register.h
+#define P_VLD_DECODE_CONTROL 		DOS_REG_ADDR(VLD_DECODE_CONTROL) 	///../ucode/register.h
+#define VLD_REVERVED_19 0x0c19 	///../ucode/register.h
+#define P_VLD_REVERVED_19 		DOS_REG_ADDR(VLD_REVERVED_19) 	///../ucode/register.h
+#define VIFF_BIT_CNT 0x0c1a 	///../ucode/register.h
+#define P_VIFF_BIT_CNT 		DOS_REG_ADDR(VIFF_BIT_CNT) 	///../ucode/register.h
+#define BYTE_ALIGN_PEAK_HI 0x0c1b 	///../ucode/register.h
+#define P_BYTE_ALIGN_PEAK_HI 		DOS_REG_ADDR(BYTE_ALIGN_PEAK_HI) 	///../ucode/register.h
+#define BYTE_ALIGN_PEAK_LO 0x0c1c 	///../ucode/register.h
+#define P_BYTE_ALIGN_PEAK_LO 		DOS_REG_ADDR(BYTE_ALIGN_PEAK_LO) 	///../ucode/register.h
+#define NEXT_ALIGN_PEAK 0x0c1d 	///../ucode/register.h
+#define P_NEXT_ALIGN_PEAK 		DOS_REG_ADDR(NEXT_ALIGN_PEAK) 	///../ucode/register.h
+#define VC1_CONTROL_REG 0x0c1e 	///../ucode/register.h
+#define P_VC1_CONTROL_REG 		DOS_REG_ADDR(VC1_CONTROL_REG) 	///../ucode/register.h
+#define PMV1_X 0x0c20 	///../ucode/register.h
+#define P_PMV1_X 		DOS_REG_ADDR(PMV1_X) 	///../ucode/register.h
+#define PMV1_Y 0x0c21 	///../ucode/register.h
+#define P_PMV1_Y 		DOS_REG_ADDR(PMV1_Y) 	///../ucode/register.h
+#define PMV2_X 0x0c22 	///../ucode/register.h
+#define P_PMV2_X 		DOS_REG_ADDR(PMV2_X) 	///../ucode/register.h
+#define PMV2_Y 0x0c23 	///../ucode/register.h
+#define P_PMV2_Y 		DOS_REG_ADDR(PMV2_Y) 	///../ucode/register.h
+#define PMV3_X 0x0c24 	///../ucode/register.h
+#define P_PMV3_X 		DOS_REG_ADDR(PMV3_X) 	///../ucode/register.h
+#define PMV3_Y 0x0c25 	///../ucode/register.h
+#define P_PMV3_Y 		DOS_REG_ADDR(PMV3_Y) 	///../ucode/register.h
+#define PMV4_X 0x0c26 	///../ucode/register.h
+#define P_PMV4_X 		DOS_REG_ADDR(PMV4_X) 	///../ucode/register.h
+#define PMV4_Y 0x0c27 	///../ucode/register.h
+#define P_PMV4_Y 		DOS_REG_ADDR(PMV4_Y) 	///../ucode/register.h
+#define M4_TABLE_SELECT 0x0c28 	///../ucode/register.h
+#define P_M4_TABLE_SELECT 		DOS_REG_ADDR(M4_TABLE_SELECT) 	///../ucode/register.h
+#define M4_CONTROL_REG 0x0c29 	///../ucode/register.h
+#define P_M4_CONTROL_REG 		DOS_REG_ADDR(M4_CONTROL_REG) 	///../ucode/register.h
+#define BLOCK_NUM 0x0c2a 	///../ucode/register.h
+#define P_BLOCK_NUM 		DOS_REG_ADDR(BLOCK_NUM) 	///../ucode/register.h
+#define PATTERN_CODE 0x0c2b 	///../ucode/register.h
+#define P_PATTERN_CODE 		DOS_REG_ADDR(PATTERN_CODE) 	///../ucode/register.h
+#define MB_INFO 0x0c2c 	///../ucode/register.h
+#define P_MB_INFO 		DOS_REG_ADDR(MB_INFO) 	///../ucode/register.h
+#define VLD_DC_PRED 0x0c2d 	///../ucode/register.h
+#define P_VLD_DC_PRED 		DOS_REG_ADDR(VLD_DC_PRED) 	///../ucode/register.h
+#define VLD_ERROR_MASK 0x0c2e 	///../ucode/register.h
+#define P_VLD_ERROR_MASK 		DOS_REG_ADDR(VLD_ERROR_MASK) 	///../ucode/register.h
+#define VLD_DC_PRED_C 0x0c2f 	///../ucode/register.h
+#define P_VLD_DC_PRED_C 		DOS_REG_ADDR(VLD_DC_PRED_C) 	///../ucode/register.h
+#define LAST_SLICE_MV_ADDR 0x0c30 	///../ucode/register.h
+#define P_LAST_SLICE_MV_ADDR 		DOS_REG_ADDR(LAST_SLICE_MV_ADDR) 	///../ucode/register.h
+#define LAST_MVX 0x0c31 	///../ucode/register.h
+#define P_LAST_MVX 		DOS_REG_ADDR(LAST_MVX) 	///../ucode/register.h
+#define LAST_MVY 0x0c32 	///../ucode/register.h
+#define P_LAST_MVY 		DOS_REG_ADDR(LAST_MVY) 	///../ucode/register.h
+#define VLD_C38 0x0c38 	///../ucode/register.h
+#define P_VLD_C38 		DOS_REG_ADDR(VLD_C38) 	///../ucode/register.h
+#define VLD_C39 0x0c39 	///../ucode/register.h
+#define P_VLD_C39 		DOS_REG_ADDR(VLD_C39) 	///../ucode/register.h
+#define VLD_STATUS 0x0c3a 	///../ucode/register.h
+#define P_VLD_STATUS 		DOS_REG_ADDR(VLD_STATUS) 	///../ucode/register.h
+#define VLD_SHIFT_STATUS 0x0c3b 	///../ucode/register.h
+#define P_VLD_SHIFT_STATUS 		DOS_REG_ADDR(VLD_SHIFT_STATUS) 	///../ucode/register.h
+#define VOFF_STATUS 0x0c3c 	///../ucode/register.h
+#define P_VOFF_STATUS 		DOS_REG_ADDR(VOFF_STATUS) 	///../ucode/register.h
+#define VLD_C3D 0x0c3d 	///../ucode/register.h
+#define P_VLD_C3D 		DOS_REG_ADDR(VLD_C3D) 	///../ucode/register.h
+#define VLD_DBG_INDEX 0x0c3e 	///../ucode/register.h
+#define P_VLD_DBG_INDEX 		DOS_REG_ADDR(VLD_DBG_INDEX) 	///../ucode/register.h
+#define VLD_DBG_DATA 0x0c3f 	///../ucode/register.h
+#define P_VLD_DBG_DATA 		DOS_REG_ADDR(VLD_DBG_DATA) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_START_PTR 0x0c40 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_START_PTR 		DOS_REG_ADDR(VLD_MEM_VIFIFO_START_PTR) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_CURR_PTR 0x0c41 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_CURR_PTR 		DOS_REG_ADDR(VLD_MEM_VIFIFO_CURR_PTR) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_END_PTR 0x0c42 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_END_PTR 		DOS_REG_ADDR(VLD_MEM_VIFIFO_END_PTR) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_BYTES_AVAIL 0x0c43 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_BYTES_AVAIL 		DOS_REG_ADDR(VLD_MEM_VIFIFO_BYTES_AVAIL) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_CONTROL 0x0c44 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_CONTROL 		DOS_REG_ADDR(VLD_MEM_VIFIFO_CONTROL) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_WP 0x0c45 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_WP 		DOS_REG_ADDR(VLD_MEM_VIFIFO_WP) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_RP 0x0c46 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_RP 		DOS_REG_ADDR(VLD_MEM_VIFIFO_RP) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_LEVEL 0x0c47 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_LEVEL 		DOS_REG_ADDR(VLD_MEM_VIFIFO_LEVEL) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_BUF_CNTL 0x0c48 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_BUF_CNTL 		DOS_REG_ADDR(VLD_MEM_VIFIFO_BUF_CNTL) 	///../ucode/register.h
+#define VLD_TIME_STAMP_CNTL 0x0c49 	///../ucode/register.h
+#define P_VLD_TIME_STAMP_CNTL 		DOS_REG_ADDR(VLD_TIME_STAMP_CNTL) 	///../ucode/register.h
+#define VLD_TIME_STAMP_SYNC_0 0x0c4a 	///../ucode/register.h
+#define P_VLD_TIME_STAMP_SYNC_0 		DOS_REG_ADDR(VLD_TIME_STAMP_SYNC_0) 	///../ucode/register.h
+#define VLD_TIME_STAMP_SYNC_1 0x0c4b 	///../ucode/register.h
+#define P_VLD_TIME_STAMP_SYNC_1 		DOS_REG_ADDR(VLD_TIME_STAMP_SYNC_1) 	///../ucode/register.h
+#define VLD_TIME_STAMP_0 0x0c4c 	///../ucode/register.h
+#define P_VLD_TIME_STAMP_0 		DOS_REG_ADDR(VLD_TIME_STAMP_0) 	///../ucode/register.h
+#define VLD_TIME_STAMP_1 0x0c4d 	///../ucode/register.h
+#define P_VLD_TIME_STAMP_1 		DOS_REG_ADDR(VLD_TIME_STAMP_1) 	///../ucode/register.h
+#define VLD_TIME_STAMP_2 0x0c4e 	///../ucode/register.h
+#define P_VLD_TIME_STAMP_2 		DOS_REG_ADDR(VLD_TIME_STAMP_2) 	///../ucode/register.h
+#define VLD_TIME_STAMP_3 0x0c4f 	///../ucode/register.h
+#define P_VLD_TIME_STAMP_3 		DOS_REG_ADDR(VLD_TIME_STAMP_3) 	///../ucode/register.h
+#define VLD_TIME_STAMP_LENGTH 0x0c50 	///../ucode/register.h
+#define P_VLD_TIME_STAMP_LENGTH 		DOS_REG_ADDR(VLD_TIME_STAMP_LENGTH) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_WRAP_COUNT 0x0c51 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_WRAP_COUNT 		DOS_REG_ADDR(VLD_MEM_VIFIFO_WRAP_COUNT) 	///../ucode/register.h
+#define VLD_MEM_VIFIFO_MEM_CTL 0x0c52 	///../ucode/register.h
+#define P_VLD_MEM_VIFIFO_MEM_CTL 		DOS_REG_ADDR(VLD_MEM_VIFIFO_MEM_CTL) 	///../ucode/register.h
+#define VLD_MEM_VBUF_RD_PTR 0x0c53 	///../ucode/register.h
+#define P_VLD_MEM_VBUF_RD_PTR 		DOS_REG_ADDR(VLD_MEM_VBUF_RD_PTR) 	///../ucode/register.h
+#define VLD_MEM_VBUF2_RD_PTR 0x0c54 	///../ucode/register.h
+#define P_VLD_MEM_VBUF2_RD_PTR 		DOS_REG_ADDR(VLD_MEM_VBUF2_RD_PTR) 	///../ucode/register.h
+#define VLD_MEM_SWAP_ADDR 0x0c55 	///../ucode/register.h
+#define P_VLD_MEM_SWAP_ADDR 		DOS_REG_ADDR(VLD_MEM_SWAP_ADDR) 	///../ucode/register.h
+#define VLD_MEM_SWAP_CTL 0x0c56 	///../ucode/register.h
+#define P_VLD_MEM_SWAP_CTL 		DOS_REG_ADDR(VLD_MEM_SWAP_CTL) 	///../ucode/register.h
+#define VCOP_CTRL_REG 0x0e00 	///../ucode/register.h
+#define P_VCOP_CTRL_REG 		DOS_REG_ADDR(VCOP_CTRL_REG) 	///../ucode/register.h
+#define QP_CTRL_REG 0x0e01 	///../ucode/register.h
+#define P_QP_CTRL_REG 		DOS_REG_ADDR(QP_CTRL_REG) 	///../ucode/register.h
+#define INTRA_QUANT_MATRIX 0x0e02 	///../ucode/register.h
+#define P_INTRA_QUANT_MATRIX 		DOS_REG_ADDR(INTRA_QUANT_MATRIX) 	///../ucode/register.h
+#define NON_I_QUANT_MATRIX 0x0e03 	///../ucode/register.h
+#define P_NON_I_QUANT_MATRIX 		DOS_REG_ADDR(NON_I_QUANT_MATRIX) 	///../ucode/register.h
+#define DC_SCALER 0x0e04 	///../ucode/register.h
+#define P_DC_SCALER 		DOS_REG_ADDR(DC_SCALER) 	///../ucode/register.h
+#define DC_AC_CTRL 0x0e05 	///../ucode/register.h
+#define P_DC_AC_CTRL 		DOS_REG_ADDR(DC_AC_CTRL) 	///../ucode/register.h
+#define DC_AC_SCALE_MUL 0x0e06 	///../ucode/register.h
+#define P_DC_AC_SCALE_MUL 		DOS_REG_ADDR(DC_AC_SCALE_MUL) 	///../ucode/register.h
+#define DC_AC_SCALE_DIV 0x0e07 	///../ucode/register.h
+#define P_DC_AC_SCALE_DIV 		DOS_REG_ADDR(DC_AC_SCALE_DIV) 	///../ucode/register.h
+#define POWER_CTL_IQIDCT 0x0e08 	///../ucode/register.h
+#define P_POWER_CTL_IQIDCT 		DOS_REG_ADDR(POWER_CTL_IQIDCT) 	///../ucode/register.h
+#define RV_AI_Y_X 0x0e09 	///../ucode/register.h
+#define P_RV_AI_Y_X 		DOS_REG_ADDR(RV_AI_Y_X) 	///../ucode/register.h
+#define RV_AI_U_X 0x0e0a 	///../ucode/register.h
+#define P_RV_AI_U_X 		DOS_REG_ADDR(RV_AI_U_X) 	///../ucode/register.h
+#define RV_AI_V_X 0x0e0b 	///../ucode/register.h
+#define P_RV_AI_V_X 		DOS_REG_ADDR(RV_AI_V_X) 	///../ucode/register.h
+#define RV_AI_MB_COUNT 0x0e0c 	///../ucode/register.h
+#define P_RV_AI_MB_COUNT 		DOS_REG_ADDR(RV_AI_MB_COUNT) 	///../ucode/register.h
+#define NEXT_INTRA_DMA_ADDRESS 0x0e0d 	///../ucode/register.h
+#define P_NEXT_INTRA_DMA_ADDRESS 		DOS_REG_ADDR(NEXT_INTRA_DMA_ADDRESS) 	///../ucode/register.h
+#define IQIDCT_CONTROL 0x0e0e 	///../ucode/register.h
+#define P_IQIDCT_CONTROL 		DOS_REG_ADDR(IQIDCT_CONTROL) 	///../ucode/register.h
+#define IQIDCT_DEBUG_INFO_0 0x0e0f 	///../ucode/register.h
+#define P_IQIDCT_DEBUG_INFO_0 		DOS_REG_ADDR(IQIDCT_DEBUG_INFO_0) 	///../ucode/register.h
+#define DEBLK_CMD 0x0e10 	///../ucode/register.h
+#define P_DEBLK_CMD 		DOS_REG_ADDR(DEBLK_CMD) 	///../ucode/register.h
+#define IQIDCT_DEBUG_IDCT 0x0e11 	///../ucode/register.h
+#define P_IQIDCT_DEBUG_IDCT 		DOS_REG_ADDR(IQIDCT_DEBUG_IDCT) 	///../ucode/register.h
+#define DCAC_DMA_CTRL 0x0e12 	///../ucode/register.h
+#define P_DCAC_DMA_CTRL 		DOS_REG_ADDR(DCAC_DMA_CTRL) 	///../ucode/register.h
+#define DCAC_DMA_ADDRESS 0x0e13 	///../ucode/register.h
+#define P_DCAC_DMA_ADDRESS 		DOS_REG_ADDR(DCAC_DMA_ADDRESS) 	///../ucode/register.h
+#define DCAC_CPU_ADDRESS 0x0e14 	///../ucode/register.h
+#define P_DCAC_CPU_ADDRESS 		DOS_REG_ADDR(DCAC_CPU_ADDRESS) 	///../ucode/register.h
+#define DCAC_CPU_DATA 0x0e15 	///../ucode/register.h
+#define P_DCAC_CPU_DATA 		DOS_REG_ADDR(DCAC_CPU_DATA) 	///../ucode/register.h
+#define DCAC_MB_COUNT 0x0e16 	///../ucode/register.h
+#define P_DCAC_MB_COUNT 		DOS_REG_ADDR(DCAC_MB_COUNT) 	///../ucode/register.h
+#define IQ_QUANT 0x0e17 	///../ucode/register.h
+#define P_IQ_QUANT 		DOS_REG_ADDR(IQ_QUANT) 	///../ucode/register.h
+#define VC1_BITPLANE_CTL 0x0e18 	///../ucode/register.h
+#define P_VC1_BITPLANE_CTL 		DOS_REG_ADDR(VC1_BITPLANE_CTL) 	///../ucode/register.h
+#define MSP 0x0300 	///../ucode/register.h
+#define P_MSP 		DOS_REG_ADDR(MSP) 	///../ucode/register.h
+#define MPSR 0x0301 	///../ucode/register.h
+#define P_MPSR 		DOS_REG_ADDR(MPSR) 	///../ucode/register.h
+#define MINT_VEC_BASE 0x0302 	///../ucode/register.h
+#define P_MINT_VEC_BASE 		DOS_REG_ADDR(MINT_VEC_BASE) 	///../ucode/register.h
+#define MCPU_INTR_GRP 0x0303 	///../ucode/register.h
+#define P_MCPU_INTR_GRP 		DOS_REG_ADDR(MCPU_INTR_GRP) 	///../ucode/register.h
+#define MCPU_INTR_MSK 0x0304 	///../ucode/register.h
+#define P_MCPU_INTR_MSK 		DOS_REG_ADDR(MCPU_INTR_MSK) 	///../ucode/register.h
+#define MCPU_INTR_REQ 0x0305 	///../ucode/register.h
+#define P_MCPU_INTR_REQ 		DOS_REG_ADDR(MCPU_INTR_REQ) 	///../ucode/register.h
+#define MPC_P 0x0306 	///../ucode/register.h
+#define P_MPC_P 		DOS_REG_ADDR(MPC_P) 	///../ucode/register.h
+#define MPC_D 0x0307 	///../ucode/register.h
+#define P_MPC_D 		DOS_REG_ADDR(MPC_D) 	///../ucode/register.h
+#define MPC_E 0x0308 	///../ucode/register.h
+#define P_MPC_E 		DOS_REG_ADDR(MPC_E) 	///../ucode/register.h
+#define MPC_W 0x0309 	///../ucode/register.h
+#define P_MPC_W 		DOS_REG_ADDR(MPC_W) 	///../ucode/register.h
+#define MINDEX0_REG 0x030a 	///../ucode/register.h
+#define P_MINDEX0_REG 		DOS_REG_ADDR(MINDEX0_REG) 	///../ucode/register.h
+#define MINDEX1_REG 0x030b 	///../ucode/register.h
+#define P_MINDEX1_REG 		DOS_REG_ADDR(MINDEX1_REG) 	///../ucode/register.h
+#define MINDEX2_REG 0x030c 	///../ucode/register.h
+#define P_MINDEX2_REG 		DOS_REG_ADDR(MINDEX2_REG) 	///../ucode/register.h
+#define MINDEX3_REG 0x030d 	///../ucode/register.h
+#define P_MINDEX3_REG 		DOS_REG_ADDR(MINDEX3_REG) 	///../ucode/register.h
+#define MINDEX4_REG 0x030e 	///../ucode/register.h
+#define P_MINDEX4_REG 		DOS_REG_ADDR(MINDEX4_REG) 	///../ucode/register.h
+#define MINDEX5_REG 0x030f 	///../ucode/register.h
+#define P_MINDEX5_REG 		DOS_REG_ADDR(MINDEX5_REG) 	///../ucode/register.h
+#define MINDEX6_REG 0x0310 	///../ucode/register.h
+#define P_MINDEX6_REG 		DOS_REG_ADDR(MINDEX6_REG) 	///../ucode/register.h
+#define MINDEX7_REG 0x0311 	///../ucode/register.h
+#define P_MINDEX7_REG 		DOS_REG_ADDR(MINDEX7_REG) 	///../ucode/register.h
+#define MMIN_REG 0x0312 	///../ucode/register.h
+#define P_MMIN_REG 		DOS_REG_ADDR(MMIN_REG) 	///../ucode/register.h
+#define MMAX_REG 0x0313 	///../ucode/register.h
+#define P_MMAX_REG 		DOS_REG_ADDR(MMAX_REG) 	///../ucode/register.h
+#define MBREAK0_REG 0x0314 	///../ucode/register.h
+#define P_MBREAK0_REG 		DOS_REG_ADDR(MBREAK0_REG) 	///../ucode/register.h
+#define MBREAK1_REG 0x0315 	///../ucode/register.h
+#define P_MBREAK1_REG 		DOS_REG_ADDR(MBREAK1_REG) 	///../ucode/register.h
+#define MBREAK2_REG 0x0316 	///../ucode/register.h
+#define P_MBREAK2_REG 		DOS_REG_ADDR(MBREAK2_REG) 	///../ucode/register.h
+#define MBREAK3_REG 0x0317 	///../ucode/register.h
+#define P_MBREAK3_REG 		DOS_REG_ADDR(MBREAK3_REG) 	///../ucode/register.h
+#define MBREAK_TYPE 0x0318 	///../ucode/register.h
+#define P_MBREAK_TYPE 		DOS_REG_ADDR(MBREAK_TYPE) 	///../ucode/register.h
+#define MBREAK_CTRL 0x0319 	///../ucode/register.h
+#define P_MBREAK_CTRL 		DOS_REG_ADDR(MBREAK_CTRL) 	///../ucode/register.h
+#define MBREAK_STAUTS 0x031a 	///../ucode/register.h
+#define P_MBREAK_STAUTS 		DOS_REG_ADDR(MBREAK_STAUTS) 	///../ucode/register.h
+#define MDB_ADDR_REG 0x031b 	///../ucode/register.h
+#define P_MDB_ADDR_REG 		DOS_REG_ADDR(MDB_ADDR_REG) 	///../ucode/register.h
+#define MDB_DATA_REG 0x031c 	///../ucode/register.h
+#define P_MDB_DATA_REG 		DOS_REG_ADDR(MDB_DATA_REG) 	///../ucode/register.h
+#define MDB_CTRL 0x031d 	///../ucode/register.h
+#define P_MDB_CTRL 		DOS_REG_ADDR(MDB_CTRL) 	///../ucode/register.h
+#define MSFTINT0 0x031e 	///../ucode/register.h
+#define P_MSFTINT0 		DOS_REG_ADDR(MSFTINT0) 	///../ucode/register.h
+#define MSFTINT1 0x031f 	///../ucode/register.h
+#define P_MSFTINT1 		DOS_REG_ADDR(MSFTINT1) 	///../ucode/register.h
+#define CSP 0x0320 	///../ucode/register.h
+#define P_CSP 		DOS_REG_ADDR(CSP) 	///../ucode/register.h
+#define CPSR 0x0321 	///../ucode/register.h
+#define P_CPSR 		DOS_REG_ADDR(CPSR) 	///../ucode/register.h
+#define CINT_VEC_BASE 0x0322 	///../ucode/register.h
+#define P_CINT_VEC_BASE 		DOS_REG_ADDR(CINT_VEC_BASE) 	///../ucode/register.h
+#define CCPU_INTR_GRP 0x0323 	///../ucode/register.h
+#define P_CCPU_INTR_GRP 		DOS_REG_ADDR(CCPU_INTR_GRP) 	///../ucode/register.h
+#define CCPU_INTR_MSK 0x0324 	///../ucode/register.h
+#define P_CCPU_INTR_MSK 		DOS_REG_ADDR(CCPU_INTR_MSK) 	///../ucode/register.h
+#define CCPU_INTR_REQ 0x0325 	///../ucode/register.h
+#define P_CCPU_INTR_REQ 		DOS_REG_ADDR(CCPU_INTR_REQ) 	///../ucode/register.h
+#define CPC_P 0x0326 	///../ucode/register.h
+#define P_CPC_P 		DOS_REG_ADDR(CPC_P) 	///../ucode/register.h
+#define CPC_D 0x0327 	///../ucode/register.h
+#define P_CPC_D 		DOS_REG_ADDR(CPC_D) 	///../ucode/register.h
+#define CPC_E 0x0328 	///../ucode/register.h
+#define P_CPC_E 		DOS_REG_ADDR(CPC_E) 	///../ucode/register.h
+#define CPC_W 0x0329 	///../ucode/register.h
+#define P_CPC_W 		DOS_REG_ADDR(CPC_W) 	///../ucode/register.h
+#define CINDEX0_REG 0x032a 	///../ucode/register.h
+#define P_CINDEX0_REG 		DOS_REG_ADDR(CINDEX0_REG) 	///../ucode/register.h
+#define CINDEX1_REG 0x032b 	///../ucode/register.h
+#define P_CINDEX1_REG 		DOS_REG_ADDR(CINDEX1_REG) 	///../ucode/register.h
+#define CINDEX2_REG 0x032c 	///../ucode/register.h
+#define P_CINDEX2_REG 		DOS_REG_ADDR(CINDEX2_REG) 	///../ucode/register.h
+#define CINDEX3_REG 0x032d 	///../ucode/register.h
+#define P_CINDEX3_REG 		DOS_REG_ADDR(CINDEX3_REG) 	///../ucode/register.h
+#define CINDEX4_REG 0x032e 	///../ucode/register.h
+#define P_CINDEX4_REG 		DOS_REG_ADDR(CINDEX4_REG) 	///../ucode/register.h
+#define CINDEX5_REG 0x032f 	///../ucode/register.h
+#define P_CINDEX5_REG 		DOS_REG_ADDR(CINDEX5_REG) 	///../ucode/register.h
+#define CINDEX6_REG 0x0330 	///../ucode/register.h
+#define P_CINDEX6_REG 		DOS_REG_ADDR(CINDEX6_REG) 	///../ucode/register.h
+#define CINDEX7_REG 0x0331 	///../ucode/register.h
+#define P_CINDEX7_REG 		DOS_REG_ADDR(CINDEX7_REG) 	///../ucode/register.h
+#define CMIN_REG 0x0332 	///../ucode/register.h
+#define P_CMIN_REG 		DOS_REG_ADDR(CMIN_REG) 	///../ucode/register.h
+#define CMAX_REG 0x0333 	///../ucode/register.h
+#define P_CMAX_REG 		DOS_REG_ADDR(CMAX_REG) 	///../ucode/register.h
+#define CBREAK0_REG 0x0334 	///../ucode/register.h
+#define P_CBREAK0_REG 		DOS_REG_ADDR(CBREAK0_REG) 	///../ucode/register.h
+#define CBREAK1_REG 0x0335 	///../ucode/register.h
+#define P_CBREAK1_REG 		DOS_REG_ADDR(CBREAK1_REG) 	///../ucode/register.h
+#define CBREAK2_REG 0x0336 	///../ucode/register.h
+#define P_CBREAK2_REG 		DOS_REG_ADDR(CBREAK2_REG) 	///../ucode/register.h
+#define CBREAK3_REG 0x0337 	///../ucode/register.h
+#define P_CBREAK3_REG 		DOS_REG_ADDR(CBREAK3_REG) 	///../ucode/register.h
+#define CBREAK_TYPE 0x0338 	///../ucode/register.h
+#define P_CBREAK_TYPE 		DOS_REG_ADDR(CBREAK_TYPE) 	///../ucode/register.h
+#define CBREAK_CTRL 0x0339 	///../ucode/register.h
+#define P_CBREAK_CTRL 		DOS_REG_ADDR(CBREAK_CTRL) 	///../ucode/register.h
+#define CBREAK_STAUTS 0x033a 	///../ucode/register.h
+#define P_CBREAK_STAUTS 		DOS_REG_ADDR(CBREAK_STAUTS) 	///../ucode/register.h
+#define CDB_ADDR_REG 0x033b 	///../ucode/register.h
+#define P_CDB_ADDR_REG 		DOS_REG_ADDR(CDB_ADDR_REG) 	///../ucode/register.h
+#define CDB_DATA_REG 0x033c 	///../ucode/register.h
+#define P_CDB_DATA_REG 		DOS_REG_ADDR(CDB_DATA_REG) 	///../ucode/register.h
+#define CDB_CTRL 0x033d 	///../ucode/register.h
+#define P_CDB_CTRL 		DOS_REG_ADDR(CDB_CTRL) 	///../ucode/register.h
+#define CSFTINT0 0x033e 	///../ucode/register.h
+#define P_CSFTINT0 		DOS_REG_ADDR(CSFTINT0) 	///../ucode/register.h
+#define CSFTINT1 0x033f 	///../ucode/register.h
+#define P_CSFTINT1 		DOS_REG_ADDR(CSFTINT1) 	///../ucode/register.h
+#define IMEM_DMA_CTRL 0x0340 	///../ucode/register.h
+#define P_IMEM_DMA_CTRL 		DOS_REG_ADDR(IMEM_DMA_CTRL) 	///../ucode/register.h
+#define IMEM_DMA_ADR 0x0341 	///../ucode/register.h
+#define P_IMEM_DMA_ADR 		DOS_REG_ADDR(IMEM_DMA_ADR) 	///../ucode/register.h
+#define IMEM_DMA_COUNT 0x0342 	///../ucode/register.h
+#define P_IMEM_DMA_COUNT 		DOS_REG_ADDR(IMEM_DMA_COUNT) 	///../ucode/register.h
+#define WRRSP_IMEM 0x0343 	///../ucode/register.h
+#define P_WRRSP_IMEM 		DOS_REG_ADDR(WRRSP_IMEM) 	///../ucode/register.h
+#define LMEM_DMA_CTRL 0x0350 	///../ucode/register.h
+#define P_LMEM_DMA_CTRL 		DOS_REG_ADDR(LMEM_DMA_CTRL) 	///../ucode/register.h
+#define LMEM_DMA_ADR 0x0351 	///../ucode/register.h
+#define P_LMEM_DMA_ADR 		DOS_REG_ADDR(LMEM_DMA_ADR) 	///../ucode/register.h
+#define LMEM_DMA_COUNT 0x0352 	///../ucode/register.h
+#define P_LMEM_DMA_COUNT 		DOS_REG_ADDR(LMEM_DMA_COUNT) 	///../ucode/register.h
+#define WRRSP_LMEM 0x0353 	///../ucode/register.h
+#define P_WRRSP_LMEM 		DOS_REG_ADDR(WRRSP_LMEM) 	///../ucode/register.h
+#define MAC_CTRL1 0x0360 	///../ucode/register.h
+#define P_MAC_CTRL1 		DOS_REG_ADDR(MAC_CTRL1) 	///../ucode/register.h
+#define ACC0REG1 0x0361 	///../ucode/register.h
+#define P_ACC0REG1 		DOS_REG_ADDR(ACC0REG1) 	///../ucode/register.h
+#define ACC1REG1 0x0362 	///../ucode/register.h
+#define P_ACC1REG1 		DOS_REG_ADDR(ACC1REG1) 	///../ucode/register.h
+#define MAC_CTRL2 0x0370 	///../ucode/register.h
+#define P_MAC_CTRL2 		DOS_REG_ADDR(MAC_CTRL2) 	///../ucode/register.h
+#define ACC0REG2 0x0371 	///../ucode/register.h
+#define P_ACC0REG2 		DOS_REG_ADDR(ACC0REG2) 	///../ucode/register.h
+#define ACC1REG2 0x0372 	///../ucode/register.h
+#define P_ACC1REG2 		DOS_REG_ADDR(ACC1REG2) 	///../ucode/register.h
+#define CPU_TRACE 0x0380 	///../ucode/register.h
+#define P_CPU_TRACE 		DOS_REG_ADDR(CPU_TRACE) 	///../ucode/register.h
+#define HENC_SCRATCH_0 0x0ac0 	///../ucode/register.h
+#define P_HENC_SCRATCH_0 		CBUS_REG_ADDR(HENC_SCRATCH_0) 	///../ucode/register.h
+#define HENC_SCRATCH_1 0x0ac1 	///../ucode/register.h
+#define P_HENC_SCRATCH_1 		CBUS_REG_ADDR(HENC_SCRATCH_1) 	///../ucode/register.h
+#define HENC_SCRATCH_2 0x0ac2 	///../ucode/register.h
+#define P_HENC_SCRATCH_2 		CBUS_REG_ADDR(HENC_SCRATCH_2) 	///../ucode/register.h
+#define HENC_SCRATCH_3 0x0ac3 	///../ucode/register.h
+#define P_HENC_SCRATCH_3 		CBUS_REG_ADDR(HENC_SCRATCH_3) 	///../ucode/register.h
+#define HENC_SCRATCH_4 0x0ac4 	///../ucode/register.h
+#define P_HENC_SCRATCH_4 		CBUS_REG_ADDR(HENC_SCRATCH_4) 	///../ucode/register.h
+#define HENC_SCRATCH_5 0x0ac5 	///../ucode/register.h
+#define P_HENC_SCRATCH_5 		CBUS_REG_ADDR(HENC_SCRATCH_5) 	///../ucode/register.h
+#define HENC_SCRATCH_6 0x0ac6 	///../ucode/register.h
+#define P_HENC_SCRATCH_6 		CBUS_REG_ADDR(HENC_SCRATCH_6) 	///../ucode/register.h
+#define HENC_SCRATCH_7 0x0ac7 	///../ucode/register.h
+#define P_HENC_SCRATCH_7 		CBUS_REG_ADDR(HENC_SCRATCH_7) 	///../ucode/register.h
+#define HENC_SCRATCH_8 0x0ac8 	///../ucode/register.h
+#define P_HENC_SCRATCH_8 		CBUS_REG_ADDR(HENC_SCRATCH_8) 	///../ucode/register.h
+#define HENC_SCRATCH_9 0x0ac9 	///../ucode/register.h
+#define P_HENC_SCRATCH_9 		CBUS_REG_ADDR(HENC_SCRATCH_9) 	///../ucode/register.h
+#define HENC_SCRATCH_A 0x0aca 	///../ucode/register.h
+#define P_HENC_SCRATCH_A 		CBUS_REG_ADDR(HENC_SCRATCH_A) 	///../ucode/register.h
+#define HENC_SCRATCH_B 0x0acb 	///../ucode/register.h
+#define P_HENC_SCRATCH_B 		CBUS_REG_ADDR(HENC_SCRATCH_B) 	///../ucode/register.h
+#define HENC_SCRATCH_C 0x0acc 	///../ucode/register.h
+#define P_HENC_SCRATCH_C 		CBUS_REG_ADDR(HENC_SCRATCH_C) 	///../ucode/register.h
+#define HENC_SCRATCH_D 0x0acd 	///../ucode/register.h
+#define P_HENC_SCRATCH_D 		CBUS_REG_ADDR(HENC_SCRATCH_D) 	///../ucode/register.h
+#define HENC_SCRATCH_E 0x0ace 	///../ucode/register.h
+#define P_HENC_SCRATCH_E 		CBUS_REG_ADDR(HENC_SCRATCH_E) 	///../ucode/register.h
+#define HENC_SCRATCH_F 0x0acf 	///../ucode/register.h
+#define P_HENC_SCRATCH_F 		CBUS_REG_ADDR(HENC_SCRATCH_F) 	///../ucode/register.h
+#define HENC_SCRATCH_G 0x0ad0 	///../ucode/register.h
+#define P_HENC_SCRATCH_G 		CBUS_REG_ADDR(HENC_SCRATCH_G) 	///../ucode/register.h
+#define HENC_SCRATCH_H 0x0ad1 	///../ucode/register.h
+#define P_HENC_SCRATCH_H 		CBUS_REG_ADDR(HENC_SCRATCH_H) 	///../ucode/register.h
+#define HENC_SCRATCH_I 0x0ad2 	///../ucode/register.h
+#define P_HENC_SCRATCH_I 		CBUS_REG_ADDR(HENC_SCRATCH_I) 	///../ucode/register.h
+#define HENC_SCRATCH_J 0x0ad3 	///../ucode/register.h
+#define P_HENC_SCRATCH_J 		CBUS_REG_ADDR(HENC_SCRATCH_J) 	///../ucode/register.h
+#define HENC_SCRATCH_K 0x0ad4 	///../ucode/register.h
+#define P_HENC_SCRATCH_K 		CBUS_REG_ADDR(HENC_SCRATCH_K) 	///../ucode/register.h
+#define HENC_SCRATCH_L 0x0ad5 	///../ucode/register.h
+#define P_HENC_SCRATCH_L 		CBUS_REG_ADDR(HENC_SCRATCH_L) 	///../ucode/register.h
+#define HENC_SCRATCH_M 0x0ad6 	///../ucode/register.h
+#define P_HENC_SCRATCH_M 		CBUS_REG_ADDR(HENC_SCRATCH_M) 	///../ucode/register.h
+#define HENC_SCRATCH_N 0x0ad7 	///../ucode/register.h
+#define P_HENC_SCRATCH_N 		CBUS_REG_ADDR(HENC_SCRATCH_N) 	///../ucode/register.h
+#define VLC_STATUS_CTRL 0x0d00 	///../ucode/register.h
+#define P_VLC_STATUS_CTRL 		CBUS_REG_ADDR(VLC_STATUS_CTRL) 	///../ucode/register.h
+#define VLC_CONFIG 0x0d01 	///../ucode/register.h
+#define P_VLC_CONFIG 		CBUS_REG_ADDR(VLC_CONFIG) 	///../ucode/register.h
+#define VLC_VB_START_PTR 0x0d10 	///../ucode/register.h
+#define P_VLC_VB_START_PTR 		CBUS_REG_ADDR(VLC_VB_START_PTR) 	///../ucode/register.h
+#define VLC_VB_END_PTR 0x0d11 	///../ucode/register.h
+#define P_VLC_VB_END_PTR 		CBUS_REG_ADDR(VLC_VB_END_PTR) 	///../ucode/register.h
+#define VLC_VB_WR_PTR 0x0d12 	///../ucode/register.h
+#define P_VLC_VB_WR_PTR 		CBUS_REG_ADDR(VLC_VB_WR_PTR) 	///../ucode/register.h
+#define VLC_VB_RD_PTR 0x0d13 	///../ucode/register.h
+#define P_VLC_VB_RD_PTR 		CBUS_REG_ADDR(VLC_VB_RD_PTR) 	///../ucode/register.h
+#define VLC_VB_SW_RD_PTR 0x0d14 	///../ucode/register.h
+#define P_VLC_VB_SW_RD_PTR 		CBUS_REG_ADDR(VLC_VB_SW_RD_PTR) 	///../ucode/register.h
+#define VLC_VB_LEFT 0x0d15 	///../ucode/register.h
+#define P_VLC_VB_LEFT 		CBUS_REG_ADDR(VLC_VB_LEFT) 	///../ucode/register.h
+#define VLC_VB_CONTROL 0x0d16 	///../ucode/register.h
+#define P_VLC_VB_CONTROL 		CBUS_REG_ADDR(VLC_VB_CONTROL) 	///../ucode/register.h
+#define VLC_VB_MEM_CTL 0x0d17 	///../ucode/register.h
+#define P_VLC_VB_MEM_CTL 		CBUS_REG_ADDR(VLC_VB_MEM_CTL) 	///../ucode/register.h
+#define VLC_VB_INT_PTR 0x0d18 	///../ucode/register.h
+#define P_VLC_VB_INT_PTR 		CBUS_REG_ADDR(VLC_VB_INT_PTR) 	///../ucode/register.h
+#define VLC_WRRSP 0x0d19 	///../ucode/register.h
+#define P_VLC_WRRSP 		CBUS_REG_ADDR(VLC_WRRSP) 	///../ucode/register.h
+#define VLC_TOTAL_BYTES 0x0d1a 	///../ucode/register.h
+#define P_VLC_TOTAL_BYTES 		CBUS_REG_ADDR(VLC_TOTAL_BYTES) 	///../ucode/register.h
+#define VLC_VB_BUFF 0x0d1b 	///../ucode/register.h
+#define P_VLC_VB_BUFF 		CBUS_REG_ADDR(VLC_VB_BUFF) 	///../ucode/register.h
+#define VLC_VB_PRE_BUFF_HI 0x0d1c 	///../ucode/register.h
+#define P_VLC_VB_PRE_BUFF_HI 		CBUS_REG_ADDR(VLC_VB_PRE_BUFF_HI) 	///../ucode/register.h
+#define VLC_VB_PRE_BUFF_LOW 0x0d1d 	///../ucode/register.h
+#define P_VLC_VB_PRE_BUFF_LOW 		CBUS_REG_ADDR(VLC_VB_PRE_BUFF_LOW) 	///../ucode/register.h
+#define VLC_STREAM_BUFF 0x0d1e 	///../ucode/register.h
+#define P_VLC_STREAM_BUFF 		CBUS_REG_ADDR(VLC_STREAM_BUFF) 	///../ucode/register.h
+#define VLC_PUSH_STREAM 0x0d1f 	///../ucode/register.h
+#define P_VLC_PUSH_STREAM 		CBUS_REG_ADDR(VLC_PUSH_STREAM) 	///../ucode/register.h
+#define VLC_PUSH_ELEMENT 0x0d20 	///../ucode/register.h
+#define P_VLC_PUSH_ELEMENT 		CBUS_REG_ADDR(VLC_PUSH_ELEMENT) 	///../ucode/register.h
+#define VLC_ELEMENT_DATA 0x0d21 	///../ucode/register.h
+#define P_VLC_ELEMENT_DATA 		CBUS_REG_ADDR(VLC_ELEMENT_DATA) 	///../ucode/register.h
+#define VLC_INT_CONTROL 0x0d30 	///../ucode/register.h
+#define P_VLC_INT_CONTROL 		CBUS_REG_ADDR(VLC_INT_CONTROL) 	///../ucode/register.h
+#define VLC_PIC_SIZE 0x0d31 	///../ucode/register.h
+#define P_VLC_PIC_SIZE 		CBUS_REG_ADDR(VLC_PIC_SIZE) 	///../ucode/register.h
+#define VLC_PIC_INFO 0x0d32 	///../ucode/register.h
+#define P_VLC_PIC_INFO 		CBUS_REG_ADDR(VLC_PIC_INFO) 	///../ucode/register.h
+#define VLC_PIC_POSITION 0x0d33 	///../ucode/register.h
+#define P_VLC_PIC_POSITION 		CBUS_REG_ADDR(VLC_PIC_POSITION) 	///../ucode/register.h
+#define VLC_INPUT_STATUS 0x0d34 	///../ucode/register.h
+#define P_VLC_INPUT_STATUS 		CBUS_REG_ADDR(VLC_INPUT_STATUS) 	///../ucode/register.h
+#define VLC_MB_INFO 0x0d35 	///../ucode/register.h
+#define P_VLC_MB_INFO 		CBUS_REG_ADDR(VLC_MB_INFO) 	///../ucode/register.h
+#define VLC_ENC_PEND_CMD 0x0d36 	///../ucode/register.h
+#define P_VLC_ENC_PEND_CMD 		CBUS_REG_ADDR(VLC_ENC_PEND_CMD) 	///../ucode/register.h
+#define HENC_TOP_INFO_0 0x0d37 	///../ucode/register.h
+#define P_HENC_TOP_INFO_0 		CBUS_REG_ADDR(HENC_TOP_INFO_0) 	///../ucode/register.h
+#define HENC_LEFT_INFO_0 0x0d38 	///../ucode/register.h
+#define P_HENC_LEFT_INFO_0 		CBUS_REG_ADDR(HENC_LEFT_INFO_0) 	///../ucode/register.h
+#define HENC_TOP_INFO_1 0x0d39 	///../ucode/register.h
+#define P_HENC_TOP_INFO_1 		CBUS_REG_ADDR(HENC_TOP_INFO_1) 	///../ucode/register.h
+#define HENC_LEFT_INFO_1 0x0d3a 	///../ucode/register.h
+#define P_HENC_LEFT_INFO_1 		CBUS_REG_ADDR(HENC_LEFT_INFO_1) 	///../ucode/register.h
+#define VLC_IPRED_MODE_HI 0x0d3b 	///../ucode/register.h
+#define P_VLC_IPRED_MODE_HI 		CBUS_REG_ADDR(VLC_IPRED_MODE_HI) 	///../ucode/register.h
+#define VLC_IPRED_MODE_LO 0x0d3c 	///../ucode/register.h
+#define P_VLC_IPRED_MODE_LO 		CBUS_REG_ADDR(VLC_IPRED_MODE_LO) 	///../ucode/register.h
+#define VLC_DELTA_QP 0x0d3d 	///../ucode/register.h
+#define P_VLC_DELTA_QP 		CBUS_REG_ADDR(VLC_DELTA_QP) 	///../ucode/register.h
+#define VLC_MB_HEADER_INFO 0x0d3e 	///../ucode/register.h
+#define P_VLC_MB_HEADER_INFO 		CBUS_REG_ADDR(VLC_MB_HEADER_INFO) 	///../ucode/register.h
+#define VLC_P_MB_HEADER_INFO 0x0d3f 	///../ucode/register.h
+#define P_VLC_P_MB_HEADER_INFO 		CBUS_REG_ADDR(VLC_P_MB_HEADER_INFO) 	///../ucode/register.h
+#define VLC_COEFF_BUF_STATUS 0x0d40 	///../ucode/register.h
+#define P_VLC_COEFF_BUF_STATUS 		CBUS_REG_ADDR(VLC_COEFF_BUF_STATUS) 	///../ucode/register.h
+#define VLC_COEFF_RD_REQ 0x0d41 	///../ucode/register.h
+#define P_VLC_COEFF_RD_REQ 		CBUS_REG_ADDR(VLC_COEFF_RD_REQ) 	///../ucode/register.h
+#define VLC_COEFF 0x0d42 	///../ucode/register.h
+#define P_VLC_COEFF 		CBUS_REG_ADDR(VLC_COEFF) 	///../ucode/register.h
+#define VLC_COEFF_INFO 0x0d43 	///../ucode/register.h
+#define P_VLC_COEFF_INFO 		CBUS_REG_ADDR(VLC_COEFF_INFO) 	///../ucode/register.h
+#define VLC_DC_BUF_STATUS 0x0d44 	///../ucode/register.h
+#define P_VLC_DC_BUF_STATUS 		CBUS_REG_ADDR(VLC_DC_BUF_STATUS) 	///../ucode/register.h
+#define VLC_DC_RD_REQ 0x0d45 	///../ucode/register.h
+#define P_VLC_DC_RD_REQ 		CBUS_REG_ADDR(VLC_DC_RD_REQ) 	///../ucode/register.h
+#define VLC_DC 0x0d46 	///../ucode/register.h
+#define P_VLC_DC 		CBUS_REG_ADDR(VLC_DC) 	///../ucode/register.h
+#define VLC_DC_INFO 0x0d47 	///../ucode/register.h
+#define P_VLC_DC_INFO 		CBUS_REG_ADDR(VLC_DC_INFO) 	///../ucode/register.h
+#define VLC_MV_INDEX 0x0d48 	///../ucode/register.h
+#define P_VLC_MV_INDEX 		CBUS_REG_ADDR(VLC_MV_INDEX) 	///../ucode/register.h
+#define VLC_MV 0x0d49 	///../ucode/register.h
+#define P_VLC_MV 		CBUS_REG_ADDR(VLC_MV) 	///../ucode/register.h
+#define HENC_TOP_MV_0 0x0d4a 	///../ucode/register.h
+#define P_HENC_TOP_MV_0 		CBUS_REG_ADDR(HENC_TOP_MV_0) 	///../ucode/register.h
+#define HENC_TOP_MV_1 0x0d4b 	///../ucode/register.h
+#define P_HENC_TOP_MV_1 		CBUS_REG_ADDR(HENC_TOP_MV_1) 	///../ucode/register.h
+#define HENC_TOP_MV_2 0x0d4c 	///../ucode/register.h
+#define P_HENC_TOP_MV_2 		CBUS_REG_ADDR(HENC_TOP_MV_2) 	///../ucode/register.h
+#define HENC_TOP_MV_3 0x0d4d 	///../ucode/register.h
+#define P_HENC_TOP_MV_3 		CBUS_REG_ADDR(HENC_TOP_MV_3) 	///../ucode/register.h
+#define HENC_LEFT_MV_0 0x0d4e 	///../ucode/register.h
+#define P_HENC_LEFT_MV_0 		CBUS_REG_ADDR(HENC_LEFT_MV_0) 	///../ucode/register.h
+#define HENC_LEFT_MV_1 0x0d4f 	///../ucode/register.h
+#define P_HENC_LEFT_MV_1 		CBUS_REG_ADDR(HENC_LEFT_MV_1) 	///../ucode/register.h
+#define HENC_LEFT_MV_2 0x0d50 	///../ucode/register.h
+#define P_HENC_LEFT_MV_2 		CBUS_REG_ADDR(HENC_LEFT_MV_2) 	///../ucode/register.h
+#define HENC_LEFT_MV_3 0x0d51 	///../ucode/register.h
+#define P_HENC_LEFT_MV_3 		CBUS_REG_ADDR(HENC_LEFT_MV_3) 	///../ucode/register.h
+#define TOP_LEFT_READY 0x0d52 	///../ucode/register.h
+#define P_TOP_LEFT_READY 		CBUS_REG_ADDR(TOP_LEFT_READY) 	///../ucode/register.h
+#define MB_SKIP_RUN 0x0d53 	///../ucode/register.h
+#define P_MB_SKIP_RUN 		CBUS_REG_ADDR(MB_SKIP_RUN) 	///../ucode/register.h
+#define VLC_HCMD_CONFIG 0x0d54 	///../ucode/register.h
+#define P_VLC_HCMD_CONFIG 		CBUS_REG_ADDR(VLC_HCMD_CONFIG) 	///../ucode/register.h
+#define VLC_HCMD_DBLK_INFO 0x0d55 	///../ucode/register.h
+#define P_VLC_HCMD_DBLK_INFO 		CBUS_REG_ADDR(VLC_HCMD_DBLK_INFO) 	///../ucode/register.h
+#define VLC_DBG_IDX 0x0d56 	///../ucode/register.h
+#define P_VLC_DBG_IDX 		CBUS_REG_ADDR(VLC_DBG_IDX) 	///../ucode/register.h
+#define VLC_DBG_READ 0x0d57 	///../ucode/register.h
+#define P_VLC_DBG_READ 		CBUS_REG_ADDR(VLC_DBG_READ) 	///../ucode/register.h
+#define QDCT_STATUS_CTRL 0x0f00 	///../ucode/register.h
+#define P_QDCT_STATUS_CTRL 		CBUS_REG_ADDR(QDCT_STATUS_CTRL) 	///../ucode/register.h
+#define QDCT_CONFIG 0x0f01 	///../ucode/register.h
+#define P_QDCT_CONFIG 		CBUS_REG_ADDR(QDCT_CONFIG) 	///../ucode/register.h
+#define IGNORE_CONFIG 0x0f02 	///../ucode/register.h
+#define P_IGNORE_CONFIG 		CBUS_REG_ADDR(IGNORE_CONFIG) 	///../ucode/register.h
+#define IGNORE_CONFIG_2 0x0f03 	///../ucode/register.h
+#define P_IGNORE_CONFIG_2 		CBUS_REG_ADDR(IGNORE_CONFIG_2) 	///../ucode/register.h
+#define QDCT_MB_START_PTR 0x0f10 	///../ucode/register.h
+#define P_QDCT_MB_START_PTR 		CBUS_REG_ADDR(QDCT_MB_START_PTR) 	///../ucode/register.h
+#define QDCT_MB_END_PTR 0x0f11 	///../ucode/register.h
+#define P_QDCT_MB_END_PTR 		CBUS_REG_ADDR(QDCT_MB_END_PTR) 	///../ucode/register.h
+#define QDCT_MB_WR_PTR 0x0f12 	///../ucode/register.h
+#define P_QDCT_MB_WR_PTR 		CBUS_REG_ADDR(QDCT_MB_WR_PTR) 	///../ucode/register.h
+#define QDCT_MB_RD_PTR 0x0f13 	///../ucode/register.h
+#define P_QDCT_MB_RD_PTR 		CBUS_REG_ADDR(QDCT_MB_RD_PTR) 	///../ucode/register.h
+#define QDCT_MB_LEVEL 0x0f14 	///../ucode/register.h
+#define P_QDCT_MB_LEVEL 		CBUS_REG_ADDR(QDCT_MB_LEVEL) 	///../ucode/register.h
+#define QDCT_MB_CONTROL 0x0f15 	///../ucode/register.h
+#define P_QDCT_MB_CONTROL 		CBUS_REG_ADDR(QDCT_MB_CONTROL) 	///../ucode/register.h
+#define QDCT_MB_MEM_CTL 0x0f16 	///../ucode/register.h
+#define P_QDCT_MB_MEM_CTL 		CBUS_REG_ADDR(QDCT_MB_MEM_CTL) 	///../ucode/register.h
+#define QDCT_MB_BUFF 0x0f17 	///../ucode/register.h
+#define P_QDCT_MB_BUFF 		CBUS_REG_ADDR(QDCT_MB_BUFF) 	///../ucode/register.h
+#define QDCT_MB_MAGIC_WORD 0x0f18 	///../ucode/register.h
+#define P_QDCT_MB_MAGIC_WORD 		CBUS_REG_ADDR(QDCT_MB_MAGIC_WORD) 	///../ucode/register.h
+#define QDCT_DCT_STATUS 0x0f19 	///../ucode/register.h
+#define P_QDCT_DCT_STATUS 		CBUS_REG_ADDR(QDCT_DCT_STATUS) 	///../ucode/register.h
+#define QDCT_Q_STATUS 0x0f1a 	///../ucode/register.h
+#define P_QDCT_Q_STATUS 		CBUS_REG_ADDR(QDCT_Q_STATUS) 	///../ucode/register.h
+#define QDCT_PIC_INFO 0x0f1b 	///../ucode/register.h
+#define P_QDCT_PIC_INFO 		CBUS_REG_ADDR(QDCT_PIC_INFO) 	///../ucode/register.h
+#define QDCT_Q_QUANT_I 0x0f1c 	///../ucode/register.h
+#define P_QDCT_Q_QUANT_I 		CBUS_REG_ADDR(QDCT_Q_QUANT_I) 	///../ucode/register.h
+#define QDCT_Q_QUANT_P 0x0f1d 	///../ucode/register.h
+#define P_QDCT_Q_QUANT_P 		CBUS_REG_ADDR(QDCT_Q_QUANT_P) 	///../ucode/register.h
+#define QDCT_MB_PAUSE_CTL 0x0f1e 	///../ucode/register.h
+#define P_QDCT_MB_PAUSE_CTL 		CBUS_REG_ADDR(QDCT_MB_PAUSE_CTL) 	///../ucode/register.h
+#define QDCT_TOP_CONTROL 0x0f1f 	///../ucode/register.h
+#define P_QDCT_TOP_CONTROL 		CBUS_REG_ADDR(QDCT_TOP_CONTROL) 	///../ucode/register.h
+#define QDCT_TOP_BASE_MEM 0x0f20 	///../ucode/register.h
+#define P_QDCT_TOP_BASE_MEM 		CBUS_REG_ADDR(QDCT_TOP_BASE_MEM) 	///../ucode/register.h
+#define QDCT_TOP_MEM_CTL 0x0f21 	///../ucode/register.h
+#define P_QDCT_TOP_MEM_CTL 		CBUS_REG_ADDR(QDCT_TOP_MEM_CTL) 	///../ucode/register.h
+#define QDCT_TOP_WRRSP 0x0f22 	///../ucode/register.h
+#define P_QDCT_TOP_WRRSP 		CBUS_REG_ADDR(QDCT_TOP_WRRSP) 	///../ucode/register.h
+#define QDCT_DBG_IDX 0x0f23 	///../ucode/register.h
+#define P_QDCT_DBG_IDX 		CBUS_REG_ADDR(QDCT_DBG_IDX) 	///../ucode/register.h
+#define QDCT_DBG_READ 0x0f24 	///../ucode/register.h
+#define P_QDCT_DBG_READ 		CBUS_REG_ADDR(QDCT_DBG_READ) 	///../ucode/register.h
+#define DOS_SW_RESET0 0x3f00 	///../ucode/register.h
+#define P_DOS_SW_RESET0 		DOS_REG_ADDR(DOS_SW_RESET0) 	///../ucode/register.h
+#define DOS_GCLK_EN0 0x3f01 	///../ucode/register.h
+#define P_DOS_GCLK_EN0 		DOS_REG_ADDR(DOS_GCLK_EN0) 	///../ucode/register.h
+#define DOS_GEN_CTRL0 0x3f02 	///../ucode/register.h
+#define P_DOS_GEN_CTRL0 		DOS_REG_ADDR(DOS_GEN_CTRL0) 	///../ucode/register.h
+#define DOS_APB_ERR_CTRL 0x3f03 	///../ucode/register.h
+#define P_DOS_APB_ERR_CTRL 		DOS_REG_ADDR(DOS_APB_ERR_CTRL) 	///../ucode/register.h
+#define DOS_APB_ERR_STAT 0x3f04 	///../ucode/register.h
+#define P_DOS_APB_ERR_STAT 		DOS_REG_ADDR(DOS_APB_ERR_STAT) 	///../ucode/register.h
+#define DOS_VDEC_INT_EN 0x3f05 	///../ucode/register.h
+#define P_DOS_VDEC_INT_EN 		DOS_REG_ADDR(DOS_VDEC_INT_EN) 	///../ucode/register.h
+#define DOS_HCODEC_INT_EN 0x3f06 	///../ucode/register.h
+#define P_DOS_HCODEC_INT_EN 		DOS_REG_ADDR(DOS_HCODEC_INT_EN) 	///../ucode/register.h
+#define DOS_SW_RESET1 0x3f07 	///../ucode/register.h
+#define P_DOS_SW_RESET1 		DOS_REG_ADDR(DOS_SW_RESET1) 	///../ucode/register.h
+#define DOS_SCRATCH0 0x3f10 	///../ucode/register.h
+#define P_DOS_SCRATCH0 		DOS_REG_ADDR(DOS_SCRATCH0) 	///../ucode/register.h
+#define DOS_SCRATCH1 0x3f11 	///../ucode/register.h
+#define P_DOS_SCRATCH1 		DOS_REG_ADDR(DOS_SCRATCH1) 	///../ucode/register.h
+#define DOS_SCRATCH2 0x3f12 	///../ucode/register.h
+#define P_DOS_SCRATCH2 		DOS_REG_ADDR(DOS_SCRATCH2) 	///../ucode/register.h
+#define DOS_SCRATCH3 0x3f13 	///../ucode/register.h
+#define P_DOS_SCRATCH3 		DOS_REG_ADDR(DOS_SCRATCH3) 	///../ucode/register.h
+#define DOS_SCRATCH4 0x3f14 	///../ucode/register.h
+#define P_DOS_SCRATCH4 		DOS_REG_ADDR(DOS_SCRATCH4) 	///../ucode/register.h
+#define DOS_SCRATCH5 0x3f15 	///../ucode/register.h
+#define P_DOS_SCRATCH5 		DOS_REG_ADDR(DOS_SCRATCH5) 	///../ucode/register.h
+#define DOS_SCRATCH6 0x3f16 	///../ucode/register.h
+#define P_DOS_SCRATCH6 		DOS_REG_ADDR(DOS_SCRATCH6) 	///../ucode/register.h
+#define DOS_SCRATCH7 0x3f17 	///../ucode/register.h
+#define P_DOS_SCRATCH7 		DOS_REG_ADDR(DOS_SCRATCH7) 	///../ucode/register.h
+#define DOS_SCRATCH8 0x3f18 	///../ucode/register.h
+#define P_DOS_SCRATCH8 		DOS_REG_ADDR(DOS_SCRATCH8) 	///../ucode/register.h
+#define DOS_SCRATCH9 0x3f19 	///../ucode/register.h
+#define P_DOS_SCRATCH9 		DOS_REG_ADDR(DOS_SCRATCH9) 	///../ucode/register.h
+#define DOS_SCRATCH10 0x3f1a 	///../ucode/register.h
+#define P_DOS_SCRATCH10 		DOS_REG_ADDR(DOS_SCRATCH10) 	///../ucode/register.h
+#define DOS_SCRATCH11 0x3f1b 	///../ucode/register.h
+#define P_DOS_SCRATCH11 		DOS_REG_ADDR(DOS_SCRATCH11) 	///../ucode/register.h
+#define DOS_SCRATCH12 0x3f1c 	///../ucode/register.h
+#define P_DOS_SCRATCH12 		DOS_REG_ADDR(DOS_SCRATCH12) 	///../ucode/register.h
+#define DOS_SCRATCH13 0x3f1d 	///../ucode/register.h
+#define P_DOS_SCRATCH13 		DOS_REG_ADDR(DOS_SCRATCH13) 	///../ucode/register.h
+#define DOS_SCRATCH14 0x3f1e 	///../ucode/register.h
+#define P_DOS_SCRATCH14 		DOS_REG_ADDR(DOS_SCRATCH14) 	///../ucode/register.h
+#define DOS_SCRATCH15 0x3f1f 	///../ucode/register.h
+#define P_DOS_SCRATCH15 		DOS_REG_ADDR(DOS_SCRATCH15) 	///../ucode/register.h
+#define DOS_SCRATCH16 0x3f20 	///../ucode/register.h
+#define P_DOS_SCRATCH16 		DOS_REG_ADDR(DOS_SCRATCH16) 	///../ucode/register.h
+#define DOS_SCRATCH17 0x3f21 	///../ucode/register.h
+#define P_DOS_SCRATCH17 		DOS_REG_ADDR(DOS_SCRATCH17) 	///../ucode/register.h
+#define DOS_SCRATCH18 0x3f22 	///../ucode/register.h
+#define P_DOS_SCRATCH18 		DOS_REG_ADDR(DOS_SCRATCH18) 	///../ucode/register.h
+#define DOS_SCRATCH19 0x3f23 	///../ucode/register.h
+#define P_DOS_SCRATCH19 		DOS_REG_ADDR(DOS_SCRATCH19) 	///../ucode/register.h
+#define DOS_SCRATCH20 0x3f24 	///../ucode/register.h
+#define P_DOS_SCRATCH20 		DOS_REG_ADDR(DOS_SCRATCH20) 	///../ucode/register.h
+#define DOS_SCRATCH21 0x3f25 	///../ucode/register.h
+#define P_DOS_SCRATCH21 		DOS_REG_ADDR(DOS_SCRATCH21) 	///../ucode/register.h
+#define DOS_SCRATCH22 0x3f26 	///../ucode/register.h
+#define P_DOS_SCRATCH22 		DOS_REG_ADDR(DOS_SCRATCH22) 	///../ucode/register.h
+#define DOS_SCRATCH23 0x3f27 	///../ucode/register.h
+#define P_DOS_SCRATCH23 		DOS_REG_ADDR(DOS_SCRATCH23) 	///../ucode/register.h
+#define DOS_SCRATCH24 0x3f28 	///../ucode/register.h
+#define P_DOS_SCRATCH24 		DOS_REG_ADDR(DOS_SCRATCH24) 	///../ucode/register.h
+#define DOS_SCRATCH25 0x3f29 	///../ucode/register.h
+#define P_DOS_SCRATCH25 		DOS_REG_ADDR(DOS_SCRATCH25) 	///../ucode/register.h
+#define DOS_SCRATCH26 0x3f2a 	///../ucode/register.h
+#define P_DOS_SCRATCH26 		DOS_REG_ADDR(DOS_SCRATCH26) 	///../ucode/register.h
+#define DOS_SCRATCH27 0x3f2b 	///../ucode/register.h
+#define P_DOS_SCRATCH27 		DOS_REG_ADDR(DOS_SCRATCH27) 	///../ucode/register.h
+#define DOS_SCRATCH28 0x3f2c 	///../ucode/register.h
+#define P_DOS_SCRATCH28 		DOS_REG_ADDR(DOS_SCRATCH28) 	///../ucode/register.h
+#define DOS_SCRATCH29 0x3f2d 	///../ucode/register.h
+#define P_DOS_SCRATCH29 		DOS_REG_ADDR(DOS_SCRATCH29) 	///../ucode/register.h
+#define DOS_SCRATCH30 0x3f2e 	///../ucode/register.h
+#define P_DOS_SCRATCH30 		DOS_REG_ADDR(DOS_SCRATCH30) 	///../ucode/register.h
+#define DOS_SCRATCH31 0x3f2f 	///../ucode/register.h
+#define P_DOS_SCRATCH31 		DOS_REG_ADDR(DOS_SCRATCH31) 	///../ucode/register.h
+#define AIU_958_BPF 0x1500 	///../ucode/register.h
+#define P_AIU_958_BPF 		CBUS_REG_ADDR(AIU_958_BPF) 	///../ucode/register.h
+#define AIU_958_BRST 0x1501 	///../ucode/register.h
+#define P_AIU_958_BRST 		CBUS_REG_ADDR(AIU_958_BRST) 	///../ucode/register.h
+#define AIU_958_LENGTH 0x1502 	///../ucode/register.h
+#define P_AIU_958_LENGTH 		CBUS_REG_ADDR(AIU_958_LENGTH) 	///../ucode/register.h
+#define AIU_958_PADDSIZE 0x1503 	///../ucode/register.h
+#define P_AIU_958_PADDSIZE 		CBUS_REG_ADDR(AIU_958_PADDSIZE) 	///../ucode/register.h
+#define AIU_958_MISC 0x1504 	///../ucode/register.h
+#define P_AIU_958_MISC 		CBUS_REG_ADDR(AIU_958_MISC) 	///../ucode/register.h
+#define AIU_958_FORCE_LEFT 0x1505 	///../ucode/register.h
+#define P_AIU_958_FORCE_LEFT 		CBUS_REG_ADDR(AIU_958_FORCE_LEFT) 	///../ucode/register.h
+#define AIU_958_DISCARD_NUM 0x1506 	///../ucode/register.h
+#define P_AIU_958_DISCARD_NUM 		CBUS_REG_ADDR(AIU_958_DISCARD_NUM) 	///../ucode/register.h
+#define AIU_958_DCU_FF_CTRL 0x1507 	///../ucode/register.h
+#define P_AIU_958_DCU_FF_CTRL 		CBUS_REG_ADDR(AIU_958_DCU_FF_CTRL) 	///../ucode/register.h
+#define AIU_958_CHSTAT_L0 0x1508 	///../ucode/register.h
+#define P_AIU_958_CHSTAT_L0 		CBUS_REG_ADDR(AIU_958_CHSTAT_L0) 	///../ucode/register.h
+#define AIU_958_CHSTAT_L1 0x1509 	///../ucode/register.h
+#define P_AIU_958_CHSTAT_L1 		CBUS_REG_ADDR(AIU_958_CHSTAT_L1) 	///../ucode/register.h
+#define AIU_958_CTRL 0x150a 	///../ucode/register.h
+#define P_AIU_958_CTRL 		CBUS_REG_ADDR(AIU_958_CTRL) 	///../ucode/register.h
+#define AIU_958_RPT 0x150b 	///../ucode/register.h
+#define P_AIU_958_RPT 		CBUS_REG_ADDR(AIU_958_RPT) 	///../ucode/register.h
+#define AIU_I2S_MUTE_SWAP 0x150c 	///../ucode/register.h
+#define P_AIU_I2S_MUTE_SWAP 		CBUS_REG_ADDR(AIU_I2S_MUTE_SWAP) 	///../ucode/register.h
+#define AIU_I2S_SOURCE_DESC 0x150d 	///../ucode/register.h
+#define P_AIU_I2S_SOURCE_DESC 		CBUS_REG_ADDR(AIU_I2S_SOURCE_DESC) 	///../ucode/register.h
+#define AIU_I2S_MED_CTRL 0x150e 	///../ucode/register.h
+#define P_AIU_I2S_MED_CTRL 		CBUS_REG_ADDR(AIU_I2S_MED_CTRL) 	///../ucode/register.h
+#define AIU_I2S_MED_THRESH 0x150f 	///../ucode/register.h
+#define P_AIU_I2S_MED_THRESH 		CBUS_REG_ADDR(AIU_I2S_MED_THRESH) 	///../ucode/register.h
+#define AIU_I2S_DAC_CFG 0x1510 	///../ucode/register.h
+#define P_AIU_I2S_DAC_CFG 		CBUS_REG_ADDR(AIU_I2S_DAC_CFG) 	///../ucode/register.h
+#define AIU_I2S_SYNC 0x1511 	///../ucode/register.h
+#define P_AIU_I2S_SYNC 		CBUS_REG_ADDR(AIU_I2S_SYNC) 	///../ucode/register.h
+#define AIU_I2S_MISC 0x1512 	///../ucode/register.h
+#define P_AIU_I2S_MISC 		CBUS_REG_ADDR(AIU_I2S_MISC) 	///../ucode/register.h
+#define AIU_I2S_OUT_CFG 0x1513 	///../ucode/register.h
+#define P_AIU_I2S_OUT_CFG 		CBUS_REG_ADDR(AIU_I2S_OUT_CFG) 	///../ucode/register.h
+#define AIU_I2S_FF_CTRL 0x1514 	///../ucode/register.h
+#define P_AIU_I2S_FF_CTRL 		CBUS_REG_ADDR(AIU_I2S_FF_CTRL) 	///../ucode/register.h
+#define AIU_RST_SOFT 0x1515 	///../ucode/register.h
+#define P_AIU_RST_SOFT 		CBUS_REG_ADDR(AIU_RST_SOFT) 	///../ucode/register.h
+#define AIU_CLK_CTRL 0x1516 	///../ucode/register.h
+#define P_AIU_CLK_CTRL 		CBUS_REG_ADDR(AIU_CLK_CTRL) 	///../ucode/register.h
+#define AIU_MIX_ADCCFG 0x1517 	///../ucode/register.h
+#define P_AIU_MIX_ADCCFG 		CBUS_REG_ADDR(AIU_MIX_ADCCFG) 	///../ucode/register.h
+#define AIU_MIX_CTRL 0x1518 	///../ucode/register.h
+#define P_AIU_MIX_CTRL 		CBUS_REG_ADDR(AIU_MIX_CTRL) 	///../ucode/register.h
+#define AIU_CLK_CTRL_MORE 0x1519 	///../ucode/register.h
+#define P_AIU_CLK_CTRL_MORE 		CBUS_REG_ADDR(AIU_CLK_CTRL_MORE) 	///../ucode/register.h
+#define AIU_958_POP 0x151a 	///../ucode/register.h
+#define P_AIU_958_POP 		CBUS_REG_ADDR(AIU_958_POP) 	///../ucode/register.h
+#define AIU_MIX_GAIN 0x151b 	///../ucode/register.h
+#define P_AIU_MIX_GAIN 		CBUS_REG_ADDR(AIU_MIX_GAIN) 	///../ucode/register.h
+#define AIU_958_SYNWORD1 0x151c 	///../ucode/register.h
+#define P_AIU_958_SYNWORD1 		CBUS_REG_ADDR(AIU_958_SYNWORD1) 	///../ucode/register.h
+#define AIU_958_SYNWORD2 0x151d 	///../ucode/register.h
+#define P_AIU_958_SYNWORD2 		CBUS_REG_ADDR(AIU_958_SYNWORD2) 	///../ucode/register.h
+#define AIU_958_SYNWORD3 0x151e 	///../ucode/register.h
+#define P_AIU_958_SYNWORD3 		CBUS_REG_ADDR(AIU_958_SYNWORD3) 	///../ucode/register.h
+#define AIU_958_SYNWORD1_MASK 0x151f 	///../ucode/register.h
+#define P_AIU_958_SYNWORD1_MASK 		CBUS_REG_ADDR(AIU_958_SYNWORD1_MASK) 	///../ucode/register.h
+#define AIU_958_SYNWORD2_MASK 0x1520 	///../ucode/register.h
+#define P_AIU_958_SYNWORD2_MASK 		CBUS_REG_ADDR(AIU_958_SYNWORD2_MASK) 	///../ucode/register.h
+#define AIU_958_SYNWORD3_MASK 0x1521 	///../ucode/register.h
+#define P_AIU_958_SYNWORD3_MASK 		CBUS_REG_ADDR(AIU_958_SYNWORD3_MASK) 	///../ucode/register.h
+#define AIU_958_FFRDOUT_THD 0x1522 	///../ucode/register.h
+#define P_AIU_958_FFRDOUT_THD 		CBUS_REG_ADDR(AIU_958_FFRDOUT_THD) 	///../ucode/register.h
+#define AIU_958_LENGTH_PER_PAUSE 0x1523 	///../ucode/register.h
+#define P_AIU_958_LENGTH_PER_PAUSE 		CBUS_REG_ADDR(AIU_958_LENGTH_PER_PAUSE) 	///../ucode/register.h
+#define AIU_958_PAUSE_NUM 0x1524 	///../ucode/register.h
+#define P_AIU_958_PAUSE_NUM 		CBUS_REG_ADDR(AIU_958_PAUSE_NUM) 	///../ucode/register.h
+#define AIU_958_PAUSE_PAYLOAD 0x1525 	///../ucode/register.h
+#define P_AIU_958_PAUSE_PAYLOAD 		CBUS_REG_ADDR(AIU_958_PAUSE_PAYLOAD) 	///../ucode/register.h
+#define AIU_958_AUTO_PAUSE 0x1526 	///../ucode/register.h
+#define P_AIU_958_AUTO_PAUSE 		CBUS_REG_ADDR(AIU_958_AUTO_PAUSE) 	///../ucode/register.h
+#define AIU_958_PAUSE_PD_LENGTH 0x1527 	///../ucode/register.h
+#define P_AIU_958_PAUSE_PD_LENGTH 		CBUS_REG_ADDR(AIU_958_PAUSE_PD_LENGTH) 	///../ucode/register.h
+#define AIU_CODEC_DAC_LRCLK_CTRL 0x1528 	///../ucode/register.h
+#define P_AIU_CODEC_DAC_LRCLK_CTRL 		CBUS_REG_ADDR(AIU_CODEC_DAC_LRCLK_CTRL) 	///../ucode/register.h
+#define AIU_CODEC_ADC_LRCLK_CTRL 0x1529 	///../ucode/register.h
+#define P_AIU_CODEC_ADC_LRCLK_CTRL 		CBUS_REG_ADDR(AIU_CODEC_ADC_LRCLK_CTRL) 	///../ucode/register.h
+#define AIU_HDMI_CLK_DATA_CTRL 0x152a 	///../ucode/register.h
+#define P_AIU_HDMI_CLK_DATA_CTRL 		CBUS_REG_ADDR(AIU_HDMI_CLK_DATA_CTRL) 	///../ucode/register.h
+#define AIU_CODEC_CLK_DATA_CTRL 0x152b 	///../ucode/register.h
+#define P_AIU_CODEC_CLK_DATA_CTRL 		CBUS_REG_ADDR(AIU_CODEC_CLK_DATA_CTRL) 	///../ucode/register.h
+#define AIU_958_CHSTAT_R0 0x1530 	///../ucode/register.h
+#define P_AIU_958_CHSTAT_R0 		CBUS_REG_ADDR(AIU_958_CHSTAT_R0) 	///../ucode/register.h
+#define AIU_958_CHSTAT_R1 0x1531 	///../ucode/register.h
+#define P_AIU_958_CHSTAT_R1 		CBUS_REG_ADDR(AIU_958_CHSTAT_R1) 	///../ucode/register.h
+#define AIU_958_VALID_CTRL 0x1532 	///../ucode/register.h
+#define P_AIU_958_VALID_CTRL 		CBUS_REG_ADDR(AIU_958_VALID_CTRL) 	///../ucode/register.h
+#define AIU_AUDIO_AMP_REG0 0x153c 	///../ucode/register.h
+#define P_AIU_AUDIO_AMP_REG0 		CBUS_REG_ADDR(AIU_AUDIO_AMP_REG0) 	///../ucode/register.h
+#define AIU_AUDIO_AMP_REG1 0x153d 	///../ucode/register.h
+#define P_AIU_AUDIO_AMP_REG1 		CBUS_REG_ADDR(AIU_AUDIO_AMP_REG1) 	///../ucode/register.h
+#define AIU_AUDIO_AMP_REG2 0x153e 	///../ucode/register.h
+#define P_AIU_AUDIO_AMP_REG2 		CBUS_REG_ADDR(AIU_AUDIO_AMP_REG2) 	///../ucode/register.h
+#define AIU_AUDIO_AMP_REG3 0x153f 	///../ucode/register.h
+#define P_AIU_AUDIO_AMP_REG3 		CBUS_REG_ADDR(AIU_AUDIO_AMP_REG3) 	///../ucode/register.h
+#define AIU_AIFIFO2_CTRL 0x1540 	///../ucode/register.h
+#define P_AIU_AIFIFO2_CTRL 		CBUS_REG_ADDR(AIU_AIFIFO2_CTRL) 	///../ucode/register.h
+#define AIU_AIFIFO2_STATUS 0x1541 	///../ucode/register.h
+#define P_AIU_AIFIFO2_STATUS 		CBUS_REG_ADDR(AIU_AIFIFO2_STATUS) 	///../ucode/register.h
+#define AIU_AIFIFO2_GBIT 0x1542 	///../ucode/register.h
+#define P_AIU_AIFIFO2_GBIT 		CBUS_REG_ADDR(AIU_AIFIFO2_GBIT) 	///../ucode/register.h
+#define AIU_AIFIFO2_CLB 0x1543 	///../ucode/register.h
+#define P_AIU_AIFIFO2_CLB 		CBUS_REG_ADDR(AIU_AIFIFO2_CLB) 	///../ucode/register.h
+#define AIU_CRC_CTRL 0x1544 	///../ucode/register.h
+#define P_AIU_CRC_CTRL 		CBUS_REG_ADDR(AIU_CRC_CTRL) 	///../ucode/register.h
+#define AIU_CRC_STATUS 0x1545 	///../ucode/register.h
+#define P_AIU_CRC_STATUS 		CBUS_REG_ADDR(AIU_CRC_STATUS) 	///../ucode/register.h
+#define AIU_CRC_SHIFT_REG 0x1546 	///../ucode/register.h
+#define P_AIU_CRC_SHIFT_REG 		CBUS_REG_ADDR(AIU_CRC_SHIFT_REG) 	///../ucode/register.h
+#define AIU_CRC_IREG 0x1547 	///../ucode/register.h
+#define P_AIU_CRC_IREG 		CBUS_REG_ADDR(AIU_CRC_IREG) 	///../ucode/register.h
+#define AIU_CRC_CAL_REG1 0x1548 	///../ucode/register.h
+#define P_AIU_CRC_CAL_REG1 		CBUS_REG_ADDR(AIU_CRC_CAL_REG1) 	///../ucode/register.h
+#define AIU_CRC_CAL_REG0 0x1549 	///../ucode/register.h
+#define P_AIU_CRC_CAL_REG0 		CBUS_REG_ADDR(AIU_CRC_CAL_REG0) 	///../ucode/register.h
+#define AIU_CRC_POLY_COEF1 0x154a 	///../ucode/register.h
+#define P_AIU_CRC_POLY_COEF1 		CBUS_REG_ADDR(AIU_CRC_POLY_COEF1) 	///../ucode/register.h
+#define AIU_CRC_POLY_COEF0 0x154b 	///../ucode/register.h
+#define P_AIU_CRC_POLY_COEF0 		CBUS_REG_ADDR(AIU_CRC_POLY_COEF0) 	///../ucode/register.h
+#define AIU_CRC_BIT_SIZE1 0x154c 	///../ucode/register.h
+#define P_AIU_CRC_BIT_SIZE1 		CBUS_REG_ADDR(AIU_CRC_BIT_SIZE1) 	///../ucode/register.h
+#define AIU_CRC_BIT_SIZE0 0x154d 	///../ucode/register.h
+#define P_AIU_CRC_BIT_SIZE0 		CBUS_REG_ADDR(AIU_CRC_BIT_SIZE0) 	///../ucode/register.h
+#define AIU_CRC_BIT_CNT1 0x154e 	///../ucode/register.h
+#define P_AIU_CRC_BIT_CNT1 		CBUS_REG_ADDR(AIU_CRC_BIT_CNT1) 	///../ucode/register.h
+#define AIU_CRC_BIT_CNT0 0x154f 	///../ucode/register.h
+#define P_AIU_CRC_BIT_CNT0 		CBUS_REG_ADDR(AIU_CRC_BIT_CNT0) 	///../ucode/register.h
+#define AIU_AMCLK_GATE_HI 0x1550 	///../ucode/register.h
+#define P_AIU_AMCLK_GATE_HI 		CBUS_REG_ADDR(AIU_AMCLK_GATE_HI) 	///../ucode/register.h
+#define AIU_AMCLK_GATE_LO 0x1551 	///../ucode/register.h
+#define P_AIU_AMCLK_GATE_LO 		CBUS_REG_ADDR(AIU_AMCLK_GATE_LO) 	///../ucode/register.h
+#define AIU_AMCLK_MSR 0x1552 	///../ucode/register.h
+#define P_AIU_AMCLK_MSR 		CBUS_REG_ADDR(AIU_AMCLK_MSR) 	///../ucode/register.h
+#define AIU_AUDAC_CTRL0 0x1553 	///../ucode/register.h
+#define P_AIU_AUDAC_CTRL0 		CBUS_REG_ADDR(AIU_AUDAC_CTRL0) 	///../ucode/register.h
+#define AIU_AUDAC_CTRL1 0x1554 	///../ucode/register.h
+#define P_AIU_AUDAC_CTRL1 		CBUS_REG_ADDR(AIU_AUDAC_CTRL1) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA0 0x1555 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA0 		CBUS_REG_ADDR(AIU_DELTA_SIGMA0) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA1 0x1556 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA1 		CBUS_REG_ADDR(AIU_DELTA_SIGMA1) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA2 0x1557 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA2 		CBUS_REG_ADDR(AIU_DELTA_SIGMA2) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA3 0x1558 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA3 		CBUS_REG_ADDR(AIU_DELTA_SIGMA3) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA4 0x1559 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA4 		CBUS_REG_ADDR(AIU_DELTA_SIGMA4) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA5 0x155a 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA5 		CBUS_REG_ADDR(AIU_DELTA_SIGMA5) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA6 0x155b 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA6 		CBUS_REG_ADDR(AIU_DELTA_SIGMA6) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA7 0x155c 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA7 		CBUS_REG_ADDR(AIU_DELTA_SIGMA7) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA_LCNTS 0x155d 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA_LCNTS 		CBUS_REG_ADDR(AIU_DELTA_SIGMA_LCNTS) 	///../ucode/register.h
+#define AIU_DELTA_SIGMA_RCNTS 0x155e 	///../ucode/register.h
+#define P_AIU_DELTA_SIGMA_RCNTS 		CBUS_REG_ADDR(AIU_DELTA_SIGMA_RCNTS) 	///../ucode/register.h
+#define AIU_MEM_I2S_START_PTR 0x1560 	///../ucode/register.h
+#define P_AIU_MEM_I2S_START_PTR 		CBUS_REG_ADDR(AIU_MEM_I2S_START_PTR) 	///../ucode/register.h
+#define AIU_MEM_I2S_RD_PTR 0x1561 	///../ucode/register.h
+#define P_AIU_MEM_I2S_RD_PTR 		CBUS_REG_ADDR(AIU_MEM_I2S_RD_PTR) 	///../ucode/register.h
+#define AIU_MEM_I2S_END_PTR 0x1562 	///../ucode/register.h
+#define P_AIU_MEM_I2S_END_PTR 		CBUS_REG_ADDR(AIU_MEM_I2S_END_PTR) 	///../ucode/register.h
+#define AIU_MEM_I2S_MASKS 0x1563 	///../ucode/register.h
+#define P_AIU_MEM_I2S_MASKS 		CBUS_REG_ADDR(AIU_MEM_I2S_MASKS) 	///../ucode/register.h
+#define AIU_MEM_I2S_CONTROL 0x1564 	///../ucode/register.h
+#define P_AIU_MEM_I2S_CONTROL 		CBUS_REG_ADDR(AIU_MEM_I2S_CONTROL) 	///../ucode/register.h
+#define AIU_MEM_IEC958_START_PTR 0x1565 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_START_PTR 		CBUS_REG_ADDR(AIU_MEM_IEC958_START_PTR) 	///../ucode/register.h
+#define AIU_MEM_IEC958_RD_PTR 0x1566 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_RD_PTR 		CBUS_REG_ADDR(AIU_MEM_IEC958_RD_PTR) 	///../ucode/register.h
+#define AIU_MEM_IEC958_END_PTR 0x1567 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_END_PTR 		CBUS_REG_ADDR(AIU_MEM_IEC958_END_PTR) 	///../ucode/register.h
+#define AIU_MEM_IEC958_MASKS 0x1568 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_MASKS 		CBUS_REG_ADDR(AIU_MEM_IEC958_MASKS) 	///../ucode/register.h
+#define AIU_MEM_IEC958_CONTROL 0x1569 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_CONTROL 		CBUS_REG_ADDR(AIU_MEM_IEC958_CONTROL) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_START_PTR 0x156a 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_START_PTR 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_START_PTR) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_CURR_PTR 0x156b 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_CURR_PTR 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_CURR_PTR) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_END_PTR 0x156c 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_END_PTR 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_END_PTR) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_BYTES_AVAIL 0x156d 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_BYTES_AVAIL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_BYTES_AVAIL) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_CONTROL 0x156e 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_CONTROL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_CONTROL) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_MAN_WP 0x156f 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_MAN_WP 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_MAN_WP) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_MAN_RP 0x1570 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_MAN_RP 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_MAN_RP) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_LEVEL 0x1571 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_LEVEL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_LEVEL) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_BUF_CNTL 0x1572 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_BUF_CNTL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_BUF_CNTL) 	///../ucode/register.h
+#define AIU_MEM_I2S_MAN_WP 0x1573 	///../ucode/register.h
+#define P_AIU_MEM_I2S_MAN_WP 		CBUS_REG_ADDR(AIU_MEM_I2S_MAN_WP) 	///../ucode/register.h
+#define AIU_MEM_I2S_MAN_RP 0x1574 	///../ucode/register.h
+#define P_AIU_MEM_I2S_MAN_RP 		CBUS_REG_ADDR(AIU_MEM_I2S_MAN_RP) 	///../ucode/register.h
+#define AIU_MEM_I2S_LEVEL 0x1575 	///../ucode/register.h
+#define P_AIU_MEM_I2S_LEVEL 		CBUS_REG_ADDR(AIU_MEM_I2S_LEVEL) 	///../ucode/register.h
+#define AIU_MEM_I2S_BUF_CNTL 0x1576 	///../ucode/register.h
+#define P_AIU_MEM_I2S_BUF_CNTL 		CBUS_REG_ADDR(AIU_MEM_I2S_BUF_CNTL) 	///../ucode/register.h
+#define AIU_MEM_I2S_BUF_WRAP_COUNT 0x1577 	///../ucode/register.h
+#define P_AIU_MEM_I2S_BUF_WRAP_COUNT 		CBUS_REG_ADDR(AIU_MEM_I2S_BUF_WRAP_COUNT) 	///../ucode/register.h
+#define AIU_MEM_I2S_MEM_CTL 0x1578 	///../ucode/register.h
+#define P_AIU_MEM_I2S_MEM_CTL 		CBUS_REG_ADDR(AIU_MEM_I2S_MEM_CTL) 	///../ucode/register.h
+#define AIU_MEM_IEC958_MEM_CTL 0x1579 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_MEM_CTL 		CBUS_REG_ADDR(AIU_MEM_IEC958_MEM_CTL) 	///../ucode/register.h
+#define AIU_MEM_IEC958_WRAP_COUNT 0x157a 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_WRAP_COUNT 		CBUS_REG_ADDR(AIU_MEM_IEC958_WRAP_COUNT) 	///../ucode/register.h
+#define AIU_MEM_IEC958_IRQ_LEVEL 0x157b 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_IRQ_LEVEL 		CBUS_REG_ADDR(AIU_MEM_IEC958_IRQ_LEVEL) 	///../ucode/register.h
+#define AIU_MEM_IEC958_MAN_WP 0x157c 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_MAN_WP 		CBUS_REG_ADDR(AIU_MEM_IEC958_MAN_WP) 	///../ucode/register.h
+#define AIU_MEM_IEC958_MAN_RP 0x157d 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_MAN_RP 		CBUS_REG_ADDR(AIU_MEM_IEC958_MAN_RP) 	///../ucode/register.h
+#define AIU_MEM_IEC958_LEVEL 0x157e 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_LEVEL 		CBUS_REG_ADDR(AIU_MEM_IEC958_LEVEL) 	///../ucode/register.h
+#define AIU_MEM_IEC958_BUF_CNTL 0x157f 	///../ucode/register.h
+#define P_AIU_MEM_IEC958_BUF_CNTL 		CBUS_REG_ADDR(AIU_MEM_IEC958_BUF_CNTL) 	///../ucode/register.h
+#define AIU_AIFIFO_CTRL 0x1580 	///../ucode/register.h
+#define P_AIU_AIFIFO_CTRL 		CBUS_REG_ADDR(AIU_AIFIFO_CTRL) 	///../ucode/register.h
+#define AIU_AIFIFO_STATUS 0x1581 	///../ucode/register.h
+#define P_AIU_AIFIFO_STATUS 		CBUS_REG_ADDR(AIU_AIFIFO_STATUS) 	///../ucode/register.h
+#define AIU_AIFIFO_GBIT 0x1582 	///../ucode/register.h
+#define P_AIU_AIFIFO_GBIT 		CBUS_REG_ADDR(AIU_AIFIFO_GBIT) 	///../ucode/register.h
+#define AIU_AIFIFO_CLB 0x1583 	///../ucode/register.h
+#define P_AIU_AIFIFO_CLB 		CBUS_REG_ADDR(AIU_AIFIFO_CLB) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_START_PTR 0x1584 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_START_PTR 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_START_PTR) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_CURR_PTR 0x1585 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_CURR_PTR 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_CURR_PTR) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_END_PTR 0x1586 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_END_PTR 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_END_PTR) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_BYTES_AVAIL 0x1587 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_BYTES_AVAIL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_BYTES_AVAIL) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_CONTROL 0x1588 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_CONTROL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_CONTROL) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_MAN_WP 0x1589 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_MAN_WP 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_MAN_WP) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_MAN_RP 0x158a 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_MAN_RP 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_MAN_RP) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_LEVEL 0x158b 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_LEVEL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_LEVEL) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_BUF_CNTL 0x158c 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_BUF_CNTL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_BUF_CNTL) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_BUF_WRAP_COUNT 0x158d 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_BUF_WRAP_COUNT 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_BUF_WRAP_COUNT) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_BUF_WRAP_COUNT 0x158e 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_BUF_WRAP_COUNT 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_BUF_WRAP_COUNT) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO_MEM_CTL 0x158f 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO_MEM_CTL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO_MEM_CTL) 	///../ucode/register.h
+#define AIFIFO_TIME_STAMP_CNTL 0x1590 	///../ucode/register.h
+#define P_AIFIFO_TIME_STAMP_CNTL 		CBUS_REG_ADDR(AIFIFO_TIME_STAMP_CNTL) 	///../ucode/register.h
+#define AIFIFO_TIME_STAMP_SYNC_0 0x1591 	///../ucode/register.h
+#define P_AIFIFO_TIME_STAMP_SYNC_0 		CBUS_REG_ADDR(AIFIFO_TIME_STAMP_SYNC_0) 	///../ucode/register.h
+#define AIFIFO_TIME_STAMP_SYNC_1 0x1592 	///../ucode/register.h
+#define P_AIFIFO_TIME_STAMP_SYNC_1 		CBUS_REG_ADDR(AIFIFO_TIME_STAMP_SYNC_1) 	///../ucode/register.h
+#define AIFIFO_TIME_STAMP_0 0x1593 	///../ucode/register.h
+#define P_AIFIFO_TIME_STAMP_0 		CBUS_REG_ADDR(AIFIFO_TIME_STAMP_0) 	///../ucode/register.h
+#define AIFIFO_TIME_STAMP_1 0x1594 	///../ucode/register.h
+#define P_AIFIFO_TIME_STAMP_1 		CBUS_REG_ADDR(AIFIFO_TIME_STAMP_1) 	///../ucode/register.h
+#define AIFIFO_TIME_STAMP_2 0x1595 	///../ucode/register.h
+#define P_AIFIFO_TIME_STAMP_2 		CBUS_REG_ADDR(AIFIFO_TIME_STAMP_2) 	///../ucode/register.h
+#define AIFIFO_TIME_STAMP_3 0x1596 	///../ucode/register.h
+#define P_AIFIFO_TIME_STAMP_3 		CBUS_REG_ADDR(AIFIFO_TIME_STAMP_3) 	///../ucode/register.h
+#define AIFIFO_TIME_STAMP_LENGTH 0x1597 	///../ucode/register.h
+#define P_AIFIFO_TIME_STAMP_LENGTH 		CBUS_REG_ADDR(AIFIFO_TIME_STAMP_LENGTH) 	///../ucode/register.h
+#define AIFIFO2_TIME_STAMP_CNTL 0x1598 	///../ucode/register.h
+#define P_AIFIFO2_TIME_STAMP_CNTL 		CBUS_REG_ADDR(AIFIFO2_TIME_STAMP_CNTL) 	///../ucode/register.h
+#define AIFIFO2_TIME_STAMP_SYNC_0 0x1599 	///../ucode/register.h
+#define P_AIFIFO2_TIME_STAMP_SYNC_0 		CBUS_REG_ADDR(AIFIFO2_TIME_STAMP_SYNC_0) 	///../ucode/register.h
+#define AIFIFO2_TIME_STAMP_SYNC_1 0x159a 	///../ucode/register.h
+#define P_AIFIFO2_TIME_STAMP_SYNC_1 		CBUS_REG_ADDR(AIFIFO2_TIME_STAMP_SYNC_1) 	///../ucode/register.h
+#define AIFIFO2_TIME_STAMP_0 0x159b 	///../ucode/register.h
+#define P_AIFIFO2_TIME_STAMP_0 		CBUS_REG_ADDR(AIFIFO2_TIME_STAMP_0) 	///../ucode/register.h
+#define AIFIFO2_TIME_STAMP_1 0x159c 	///../ucode/register.h
+#define P_AIFIFO2_TIME_STAMP_1 		CBUS_REG_ADDR(AIFIFO2_TIME_STAMP_1) 	///../ucode/register.h
+#define AIFIFO2_TIME_STAMP_2 0x159d 	///../ucode/register.h
+#define P_AIFIFO2_TIME_STAMP_2 		CBUS_REG_ADDR(AIFIFO2_TIME_STAMP_2) 	///../ucode/register.h
+#define AIFIFO2_TIME_STAMP_3 0x159e 	///../ucode/register.h
+#define P_AIFIFO2_TIME_STAMP_3 		CBUS_REG_ADDR(AIFIFO2_TIME_STAMP_3) 	///../ucode/register.h
+#define AIFIFO2_TIME_STAMP_LENGTH 0x159f 	///../ucode/register.h
+#define P_AIFIFO2_TIME_STAMP_LENGTH 		CBUS_REG_ADDR(AIFIFO2_TIME_STAMP_LENGTH) 	///../ucode/register.h
+#define IEC958_TIME_STAMP_CNTL 0x15a0 	///../ucode/register.h
+#define P_IEC958_TIME_STAMP_CNTL 		CBUS_REG_ADDR(IEC958_TIME_STAMP_CNTL) 	///../ucode/register.h
+#define IEC958_TIME_STAMP_SYNC_0 0x15a1 	///../ucode/register.h
+#define P_IEC958_TIME_STAMP_SYNC_0 		CBUS_REG_ADDR(IEC958_TIME_STAMP_SYNC_0) 	///../ucode/register.h
+#define IEC958_TIME_STAMP_SYNC_1 0x15a2 	///../ucode/register.h
+#define P_IEC958_TIME_STAMP_SYNC_1 		CBUS_REG_ADDR(IEC958_TIME_STAMP_SYNC_1) 	///../ucode/register.h
+#define IEC958_TIME_STAMP_0 0x15a3 	///../ucode/register.h
+#define P_IEC958_TIME_STAMP_0 		CBUS_REG_ADDR(IEC958_TIME_STAMP_0) 	///../ucode/register.h
+#define IEC958_TIME_STAMP_1 0x15a4 	///../ucode/register.h
+#define P_IEC958_TIME_STAMP_1 		CBUS_REG_ADDR(IEC958_TIME_STAMP_1) 	///../ucode/register.h
+#define IEC958_TIME_STAMP_2 0x15a5 	///../ucode/register.h
+#define P_IEC958_TIME_STAMP_2 		CBUS_REG_ADDR(IEC958_TIME_STAMP_2) 	///../ucode/register.h
+#define IEC958_TIME_STAMP_3 0x15a6 	///../ucode/register.h
+#define P_IEC958_TIME_STAMP_3 		CBUS_REG_ADDR(IEC958_TIME_STAMP_3) 	///../ucode/register.h
+#define IEC958_TIME_STAMP_LENGTH 0x15a7 	///../ucode/register.h
+#define P_IEC958_TIME_STAMP_LENGTH 		CBUS_REG_ADDR(IEC958_TIME_STAMP_LENGTH) 	///../ucode/register.h
+#define AIU_MEM_AIFIFO2_MEM_CTL 0x15a8 	///../ucode/register.h
+#define P_AIU_MEM_AIFIFO2_MEM_CTL 		CBUS_REG_ADDR(AIU_MEM_AIFIFO2_MEM_CTL) 	///../ucode/register.h
+#define AIU_I2S_CBUS_DDR_CNTL 0x15a9 	///../ucode/register.h
+#define P_AIU_I2S_CBUS_DDR_CNTL 		CBUS_REG_ADDR(AIU_I2S_CBUS_DDR_CNTL) 	///../ucode/register.h
+#define AIU_I2S_CBUS_DDR_WDATA 0x15aa 	///../ucode/register.h
+#define P_AIU_I2S_CBUS_DDR_WDATA 		CBUS_REG_ADDR(AIU_I2S_CBUS_DDR_WDATA) 	///../ucode/register.h
+#define AIU_I2S_CBUS_DDR_ADDR 0x15ab 	///../ucode/register.h
+#define P_AIU_I2S_CBUS_DDR_ADDR 		CBUS_REG_ADDR(AIU_I2S_CBUS_DDR_ADDR) 	///../ucode/register.h
+#define VPP_DUMMY_DATA 0x1d00 	///../ucode/register.h
+#define P_VPP_DUMMY_DATA 		CBUS_REG_ADDR(VPP_DUMMY_DATA) 	///../ucode/register.h
+#define VPP_LINE_IN_LENGTH 0x1d01 	///../ucode/register.h
+#define P_VPP_LINE_IN_LENGTH 		CBUS_REG_ADDR(VPP_LINE_IN_LENGTH) 	///../ucode/register.h
+#define VPP_PIC_IN_HEIGHT 0x1d02 	///../ucode/register.h
+#define P_VPP_PIC_IN_HEIGHT 		CBUS_REG_ADDR(VPP_PIC_IN_HEIGHT) 	///../ucode/register.h
+#define VPP_SCALE_COEF_IDX 0x1d03 	///../ucode/register.h
+#define P_VPP_SCALE_COEF_IDX 		CBUS_REG_ADDR(VPP_SCALE_COEF_IDX) 	///../ucode/register.h
+#define VPP_SCALE_COEF 0x1d04 	///../ucode/register.h
+#define P_VPP_SCALE_COEF 		CBUS_REG_ADDR(VPP_SCALE_COEF) 	///../ucode/register.h
+#define VPP_VSC_REGION12_STARTP 0x1d05 	///../ucode/register.h
+#define P_VPP_VSC_REGION12_STARTP 		CBUS_REG_ADDR(VPP_VSC_REGION12_STARTP) 	///../ucode/register.h
+#define VPP_VSC_REGION34_STARTP 0x1d06 	///../ucode/register.h
+#define P_VPP_VSC_REGION34_STARTP 		CBUS_REG_ADDR(VPP_VSC_REGION34_STARTP) 	///../ucode/register.h
+#define VPP_VSC_REGION4_ENDP 0x1d07 	///../ucode/register.h
+#define P_VPP_VSC_REGION4_ENDP 		CBUS_REG_ADDR(VPP_VSC_REGION4_ENDP) 	///../ucode/register.h
+#define VPP_VSC_START_PHASE_STEP 0x1d08 	///../ucode/register.h
+#define P_VPP_VSC_START_PHASE_STEP 		CBUS_REG_ADDR(VPP_VSC_START_PHASE_STEP) 	///../ucode/register.h
+#define VPP_VSC_REGION0_PHASE_SLOPE 0x1d09 	///../ucode/register.h
+#define P_VPP_VSC_REGION0_PHASE_SLOPE 		CBUS_REG_ADDR(VPP_VSC_REGION0_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP_VSC_REGION1_PHASE_SLOPE 0x1d0a 	///../ucode/register.h
+#define P_VPP_VSC_REGION1_PHASE_SLOPE 		CBUS_REG_ADDR(VPP_VSC_REGION1_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP_VSC_REGION3_PHASE_SLOPE 0x1d0b 	///../ucode/register.h
+#define P_VPP_VSC_REGION3_PHASE_SLOPE 		CBUS_REG_ADDR(VPP_VSC_REGION3_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP_VSC_REGION4_PHASE_SLOPE 0x1d0c 	///../ucode/register.h
+#define P_VPP_VSC_REGION4_PHASE_SLOPE 		CBUS_REG_ADDR(VPP_VSC_REGION4_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP_VSC_PHASE_CTRL 0x1d0d 	///../ucode/register.h
+#define P_VPP_VSC_PHASE_CTRL 		CBUS_REG_ADDR(VPP_VSC_PHASE_CTRL) 	///../ucode/register.h
+#define VPP_VSC_INI_PHASE 0x1d0e 	///../ucode/register.h
+#define P_VPP_VSC_INI_PHASE 		CBUS_REG_ADDR(VPP_VSC_INI_PHASE) 	///../ucode/register.h
+#define VPP_HSC_REGION12_STARTP 0x1d10 	///../ucode/register.h
+#define P_VPP_HSC_REGION12_STARTP 		CBUS_REG_ADDR(VPP_HSC_REGION12_STARTP) 	///../ucode/register.h
+#define VPP_HSC_REGION34_STARTP 0x1d11 	///../ucode/register.h
+#define P_VPP_HSC_REGION34_STARTP 		CBUS_REG_ADDR(VPP_HSC_REGION34_STARTP) 	///../ucode/register.h
+#define VPP_HSC_REGION4_ENDP 0x1d12 	///../ucode/register.h
+#define P_VPP_HSC_REGION4_ENDP 		CBUS_REG_ADDR(VPP_HSC_REGION4_ENDP) 	///../ucode/register.h
+#define VPP_HSC_START_PHASE_STEP 0x1d13 	///../ucode/register.h
+#define P_VPP_HSC_START_PHASE_STEP 		CBUS_REG_ADDR(VPP_HSC_START_PHASE_STEP) 	///../ucode/register.h
+#define VPP_HSC_REGION0_PHASE_SLOPE 0x1d14 	///../ucode/register.h
+#define P_VPP_HSC_REGION0_PHASE_SLOPE 		CBUS_REG_ADDR(VPP_HSC_REGION0_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP_HSC_REGION1_PHASE_SLOPE 0x1d15 	///../ucode/register.h
+#define P_VPP_HSC_REGION1_PHASE_SLOPE 		CBUS_REG_ADDR(VPP_HSC_REGION1_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP_HSC_REGION3_PHASE_SLOPE 0x1d16 	///../ucode/register.h
+#define P_VPP_HSC_REGION3_PHASE_SLOPE 		CBUS_REG_ADDR(VPP_HSC_REGION3_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP_HSC_REGION4_PHASE_SLOPE 0x1d17 	///../ucode/register.h
+#define P_VPP_HSC_REGION4_PHASE_SLOPE 		CBUS_REG_ADDR(VPP_HSC_REGION4_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP_HSC_PHASE_CTRL 0x1d18 	///../ucode/register.h
+#define P_VPP_HSC_PHASE_CTRL 		CBUS_REG_ADDR(VPP_HSC_PHASE_CTRL) 	///../ucode/register.h
+#define VPP_SC_MISC 0x1d19 	///../ucode/register.h
+#define P_VPP_SC_MISC 		CBUS_REG_ADDR(VPP_SC_MISC) 	///../ucode/register.h
+#define VPP_PREBLEND_VD1_H_START_END 0x1d1a 	///../ucode/register.h
+#define P_VPP_PREBLEND_VD1_H_START_END 		CBUS_REG_ADDR(VPP_PREBLEND_VD1_H_START_END) 	///../ucode/register.h
+#define VPP_PREBLEND_VD1_V_START_END 0x1d1b 	///../ucode/register.h
+#define P_VPP_PREBLEND_VD1_V_START_END 		CBUS_REG_ADDR(VPP_PREBLEND_VD1_V_START_END) 	///../ucode/register.h
+#define VPP_POSTBLEND_VD1_H_START_END 0x1d1c 	///../ucode/register.h
+#define P_VPP_POSTBLEND_VD1_H_START_END 		CBUS_REG_ADDR(VPP_POSTBLEND_VD1_H_START_END) 	///../ucode/register.h
+#define VPP_POSTBLEND_VD1_V_START_END 0x1d1d 	///../ucode/register.h
+#define P_VPP_POSTBLEND_VD1_V_START_END 		CBUS_REG_ADDR(VPP_POSTBLEND_VD1_V_START_END) 	///../ucode/register.h
+#define VPP_BLEND_VD2_H_START_END 0x1d1e 	///../ucode/register.h
+#define P_VPP_BLEND_VD2_H_START_END 		CBUS_REG_ADDR(VPP_BLEND_VD2_H_START_END) 	///../ucode/register.h
+#define VPP_BLEND_VD2_V_START_END 0x1d1f 	///../ucode/register.h
+#define P_VPP_BLEND_VD2_V_START_END 		CBUS_REG_ADDR(VPP_BLEND_VD2_V_START_END) 	///../ucode/register.h
+#define VPP_PREBLEND_H_SIZE 0x1d20 	///../ucode/register.h
+#define P_VPP_PREBLEND_H_SIZE 		CBUS_REG_ADDR(VPP_PREBLEND_H_SIZE) 	///../ucode/register.h
+#define VPP_POSTBLEND_H_SIZE 0x1d21 	///../ucode/register.h
+#define P_VPP_POSTBLEND_H_SIZE 		CBUS_REG_ADDR(VPP_POSTBLEND_H_SIZE) 	///../ucode/register.h
+#define VPP_HOLD_LINES 0x1d22 	///../ucode/register.h
+#define P_VPP_HOLD_LINES 		CBUS_REG_ADDR(VPP_HOLD_LINES) 	///../ucode/register.h
+#define VPP_BLEND_ONECOLOR_CTRL 0x1d23 	///../ucode/register.h
+#define P_VPP_BLEND_ONECOLOR_CTRL 		CBUS_REG_ADDR(VPP_BLEND_ONECOLOR_CTRL) 	///../ucode/register.h
+#define VPP_PREBLEND_CURRENT_XY 0x1d24 	///../ucode/register.h
+#define P_VPP_PREBLEND_CURRENT_XY 		CBUS_REG_ADDR(VPP_PREBLEND_CURRENT_XY) 	///../ucode/register.h
+#define VPP_POSTBLEND_CURRENT_XY 0x1d25 	///../ucode/register.h
+#define P_VPP_POSTBLEND_CURRENT_XY 		CBUS_REG_ADDR(VPP_POSTBLEND_CURRENT_XY) 	///../ucode/register.h
+#define VPP_MISC 0x1d26 	///../ucode/register.h
+#define P_VPP_MISC 		CBUS_REG_ADDR(VPP_MISC) 	///../ucode/register.h
+#define VPP_OFIFO_SIZE 0x1d27 	///../ucode/register.h
+#define P_VPP_OFIFO_SIZE 		CBUS_REG_ADDR(VPP_OFIFO_SIZE) 	///../ucode/register.h
+#define VPP_FIFO_STATUS 0x1d28 	///../ucode/register.h
+#define P_VPP_FIFO_STATUS 		CBUS_REG_ADDR(VPP_FIFO_STATUS) 	///../ucode/register.h
+#define VPP_SMOKE_CTRL 0x1d29 	///../ucode/register.h
+#define P_VPP_SMOKE_CTRL 		CBUS_REG_ADDR(VPP_SMOKE_CTRL) 	///../ucode/register.h
+#define VPP_SMOKE1_VAL 0x1d2a 	///../ucode/register.h
+#define P_VPP_SMOKE1_VAL 		CBUS_REG_ADDR(VPP_SMOKE1_VAL) 	///../ucode/register.h
+#define VPP_SMOKE2_VAL 0x1d2b 	///../ucode/register.h
+#define P_VPP_SMOKE2_VAL 		CBUS_REG_ADDR(VPP_SMOKE2_VAL) 	///../ucode/register.h
+#define VPP_SMOKE3_VAL 0x1d2c 	///../ucode/register.h
+#define P_VPP_SMOKE3_VAL 		CBUS_REG_ADDR(VPP_SMOKE3_VAL) 	///../ucode/register.h
+#define VPP_SMOKE1_H_START_END 0x1d2d 	///../ucode/register.h
+#define P_VPP_SMOKE1_H_START_END 		CBUS_REG_ADDR(VPP_SMOKE1_H_START_END) 	///../ucode/register.h
+#define VPP_SMOKE1_V_START_END 0x1d2e 	///../ucode/register.h
+#define P_VPP_SMOKE1_V_START_END 		CBUS_REG_ADDR(VPP_SMOKE1_V_START_END) 	///../ucode/register.h
+#define VPP_SMOKE2_H_START_END 0x1d2f 	///../ucode/register.h
+#define P_VPP_SMOKE2_H_START_END 		CBUS_REG_ADDR(VPP_SMOKE2_H_START_END) 	///../ucode/register.h
+#define VPP_SMOKE2_V_START_END 0x1d30 	///../ucode/register.h
+#define P_VPP_SMOKE2_V_START_END 		CBUS_REG_ADDR(VPP_SMOKE2_V_START_END) 	///../ucode/register.h
+#define VPP_SMOKE3_H_START_END 0x1d31 	///../ucode/register.h
+#define P_VPP_SMOKE3_H_START_END 		CBUS_REG_ADDR(VPP_SMOKE3_H_START_END) 	///../ucode/register.h
+#define VPP_SMOKE3_V_START_END 0x1d32 	///../ucode/register.h
+#define P_VPP_SMOKE3_V_START_END 		CBUS_REG_ADDR(VPP_SMOKE3_V_START_END) 	///../ucode/register.h
+#define VPP_SCO_FIFO_CTRL 0x1d33 	///../ucode/register.h
+#define P_VPP_SCO_FIFO_CTRL 		CBUS_REG_ADDR(VPP_SCO_FIFO_CTRL) 	///../ucode/register.h
+#define VPP_HSC_PHASE_CTRL1 0x1d34 	///../ucode/register.h
+#define P_VPP_HSC_PHASE_CTRL1 		CBUS_REG_ADDR(VPP_HSC_PHASE_CTRL1) 	///../ucode/register.h
+#define VPP_HSC_INI_PAT_CTRL 0x1d35 	///../ucode/register.h
+#define P_VPP_HSC_INI_PAT_CTRL 		CBUS_REG_ADDR(VPP_HSC_INI_PAT_CTRL) 	///../ucode/register.h
+#define VPP_VADJ_CTRL 0x1d40 	///../ucode/register.h
+#define P_VPP_VADJ_CTRL 		CBUS_REG_ADDR(VPP_VADJ_CTRL) 	///../ucode/register.h
+#define VPP_VADJ1_Y 0x1d41 	///../ucode/register.h
+#define P_VPP_VADJ1_Y 		CBUS_REG_ADDR(VPP_VADJ1_Y) 	///../ucode/register.h
+#define VPP_VADJ1_MA_MB 0x1d42 	///../ucode/register.h
+#define P_VPP_VADJ1_MA_MB 		CBUS_REG_ADDR(VPP_VADJ1_MA_MB) 	///../ucode/register.h
+#define VPP_VADJ1_MC_MD 0x1d43 	///../ucode/register.h
+#define P_VPP_VADJ1_MC_MD 		CBUS_REG_ADDR(VPP_VADJ1_MC_MD) 	///../ucode/register.h
+#define VPP_VADJ2_Y 0x1d44 	///../ucode/register.h
+#define P_VPP_VADJ2_Y 		CBUS_REG_ADDR(VPP_VADJ2_Y) 	///../ucode/register.h
+#define VPP_VADJ2_MA_MB 0x1d45 	///../ucode/register.h
+#define P_VPP_VADJ2_MA_MB 		CBUS_REG_ADDR(VPP_VADJ2_MA_MB) 	///../ucode/register.h
+#define VPP_VADJ2_MC_MD 0x1d46 	///../ucode/register.h
+#define P_VPP_VADJ2_MC_MD 		CBUS_REG_ADDR(VPP_VADJ2_MC_MD) 	///../ucode/register.h
+#define VPP_HSHARP_CTRL 0x1d50 	///../ucode/register.h
+#define P_VPP_HSHARP_CTRL 		CBUS_REG_ADDR(VPP_HSHARP_CTRL) 	///../ucode/register.h
+#define VPP_HSHARP_LUMA_THRESH01 0x1d51 	///../ucode/register.h
+#define P_VPP_HSHARP_LUMA_THRESH01 		CBUS_REG_ADDR(VPP_HSHARP_LUMA_THRESH01) 	///../ucode/register.h
+#define VPP_HSHARP_LUMA_THRESH23 0x1d52 	///../ucode/register.h
+#define P_VPP_HSHARP_LUMA_THRESH23 		CBUS_REG_ADDR(VPP_HSHARP_LUMA_THRESH23) 	///../ucode/register.h
+#define VPP_HSHARP_CHROMA_THRESH01 0x1d53 	///../ucode/register.h
+#define P_VPP_HSHARP_CHROMA_THRESH01 		CBUS_REG_ADDR(VPP_HSHARP_CHROMA_THRESH01) 	///../ucode/register.h
+#define VPP_HSHARP_CHROMA_THRESH23 0x1d54 	///../ucode/register.h
+#define P_VPP_HSHARP_CHROMA_THRESH23 		CBUS_REG_ADDR(VPP_HSHARP_CHROMA_THRESH23) 	///../ucode/register.h
+#define VPP_HSHARP_LUMA_GAIN 0x1d55 	///../ucode/register.h
+#define P_VPP_HSHARP_LUMA_GAIN 		CBUS_REG_ADDR(VPP_HSHARP_LUMA_GAIN) 	///../ucode/register.h
+#define VPP_HSHARP_CHROMA_GAIN 0x1d56 	///../ucode/register.h
+#define P_VPP_HSHARP_CHROMA_GAIN 		CBUS_REG_ADDR(VPP_HSHARP_CHROMA_GAIN) 	///../ucode/register.h
+#define VPP_MATRIX_PROBE_COLOR 0x1d5c 	///../ucode/register.h
+#define P_VPP_MATRIX_PROBE_COLOR 		CBUS_REG_ADDR(VPP_MATRIX_PROBE_COLOR) 	///../ucode/register.h
+#define VPP_MATRIX_HL_COLOR 0x1d5d 	///../ucode/register.h
+#define P_VPP_MATRIX_HL_COLOR 		CBUS_REG_ADDR(VPP_MATRIX_HL_COLOR) 	///../ucode/register.h
+#define VPP_MATRIX_PROBE_POS 0x1d5e 	///../ucode/register.h
+#define P_VPP_MATRIX_PROBE_POS 		CBUS_REG_ADDR(VPP_MATRIX_PROBE_POS) 	///../ucode/register.h
+#define VPP_MATRIX_CTRL 0x1d5f 	///../ucode/register.h
+#define P_VPP_MATRIX_CTRL 		CBUS_REG_ADDR(VPP_MATRIX_CTRL) 	///../ucode/register.h
+#define VPP_MATRIX_COEF00_01 0x1d60 	///../ucode/register.h
+#define P_VPP_MATRIX_COEF00_01 		CBUS_REG_ADDR(VPP_MATRIX_COEF00_01) 	///../ucode/register.h
+#define VPP_MATRIX_COEF02_10 0x1d61 	///../ucode/register.h
+#define P_VPP_MATRIX_COEF02_10 		CBUS_REG_ADDR(VPP_MATRIX_COEF02_10) 	///../ucode/register.h
+#define VPP_MATRIX_COEF11_12 0x1d62 	///../ucode/register.h
+#define P_VPP_MATRIX_COEF11_12 		CBUS_REG_ADDR(VPP_MATRIX_COEF11_12) 	///../ucode/register.h
+#define VPP_MATRIX_COEF20_21 0x1d63 	///../ucode/register.h
+#define P_VPP_MATRIX_COEF20_21 		CBUS_REG_ADDR(VPP_MATRIX_COEF20_21) 	///../ucode/register.h
+#define VPP_MATRIX_COEF22 0x1d64 	///../ucode/register.h
+#define P_VPP_MATRIX_COEF22 		CBUS_REG_ADDR(VPP_MATRIX_COEF22) 	///../ucode/register.h
+#define VPP_MATRIX_OFFSET0_1 0x1d65 	///../ucode/register.h
+#define P_VPP_MATRIX_OFFSET0_1 		CBUS_REG_ADDR(VPP_MATRIX_OFFSET0_1) 	///../ucode/register.h
+#define VPP_MATRIX_OFFSET2 0x1d66 	///../ucode/register.h
+#define P_VPP_MATRIX_OFFSET2 		CBUS_REG_ADDR(VPP_MATRIX_OFFSET2) 	///../ucode/register.h
+#define VPP_MATRIX_PRE_OFFSET0_1 0x1d67 	///../ucode/register.h
+#define P_VPP_MATRIX_PRE_OFFSET0_1 		CBUS_REG_ADDR(VPP_MATRIX_PRE_OFFSET0_1) 	///../ucode/register.h
+#define VPP_MATRIX_PRE_OFFSET2 0x1d68 	///../ucode/register.h
+#define P_VPP_MATRIX_PRE_OFFSET2 		CBUS_REG_ADDR(VPP_MATRIX_PRE_OFFSET2) 	///../ucode/register.h
+#define VPP_DUMMY_DATA1 0x1d69 	///../ucode/register.h
+#define P_VPP_DUMMY_DATA1 		CBUS_REG_ADDR(VPP_DUMMY_DATA1) 	///../ucode/register.h
+#define VPP_GAINOFF_CTRL0 0x1d6a 	///../ucode/register.h
+#define P_VPP_GAINOFF_CTRL0 		CBUS_REG_ADDR(VPP_GAINOFF_CTRL0) 	///../ucode/register.h
+#define VPP_GAINOFF_CTRL1 0x1d6b 	///../ucode/register.h
+#define P_VPP_GAINOFF_CTRL1 		CBUS_REG_ADDR(VPP_GAINOFF_CTRL1) 	///../ucode/register.h
+#define VPP_GAINOFF_CTRL2 0x1d6c 	///../ucode/register.h
+#define P_VPP_GAINOFF_CTRL2 		CBUS_REG_ADDR(VPP_GAINOFF_CTRL2) 	///../ucode/register.h
+#define VPP_GAINOFF_CTRL3 0x1d6d 	///../ucode/register.h
+#define P_VPP_GAINOFF_CTRL3 		CBUS_REG_ADDR(VPP_GAINOFF_CTRL3) 	///../ucode/register.h
+#define VPP_GAINOFF_CTRL4 0x1d6e 	///../ucode/register.h
+#define P_VPP_GAINOFF_CTRL4 		CBUS_REG_ADDR(VPP_GAINOFF_CTRL4) 	///../ucode/register.h
+#define VPP_CHROMA_ADDR_PORT 0x1d70 	///../ucode/register.h
+#define P_VPP_CHROMA_ADDR_PORT 		CBUS_REG_ADDR(VPP_CHROMA_ADDR_PORT) 	///../ucode/register.h
+#define VPP_CHROMA_DATA_PORT 0x1d71 	///../ucode/register.h
+#define P_VPP_CHROMA_DATA_PORT 		CBUS_REG_ADDR(VPP_CHROMA_DATA_PORT) 	///../ucode/register.h
+#define VPP_GCLK_CTRL0 0x1d72 	///../ucode/register.h
+#define P_VPP_GCLK_CTRL0 		CBUS_REG_ADDR(VPP_GCLK_CTRL0) 	///../ucode/register.h
+#define VPP_GCLK_CTRL1 0x1d73 	///../ucode/register.h
+#define P_VPP_GCLK_CTRL1 		CBUS_REG_ADDR(VPP_GCLK_CTRL1) 	///../ucode/register.h
+#define VPP_SC_GCLK_CTRL 0x1d74 	///../ucode/register.h
+#define P_VPP_SC_GCLK_CTRL 		CBUS_REG_ADDR(VPP_SC_GCLK_CTRL) 	///../ucode/register.h
+#define VPP_BLACKEXT_CTRL 0x1d80 	///../ucode/register.h
+#define P_VPP_BLACKEXT_CTRL 		CBUS_REG_ADDR(VPP_BLACKEXT_CTRL) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_00 0x1d81 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_00 		CBUS_REG_ADDR(VPP_DNLP_CTRL_00) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_01 0x1d82 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_01 		CBUS_REG_ADDR(VPP_DNLP_CTRL_01) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_02 0x1d83 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_02 		CBUS_REG_ADDR(VPP_DNLP_CTRL_02) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_03 0x1d84 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_03 		CBUS_REG_ADDR(VPP_DNLP_CTRL_03) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_04 0x1d85 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_04 		CBUS_REG_ADDR(VPP_DNLP_CTRL_04) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_05 0x1d86 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_05 		CBUS_REG_ADDR(VPP_DNLP_CTRL_05) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_06 0x1d87 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_06 		CBUS_REG_ADDR(VPP_DNLP_CTRL_06) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_07 0x1d88 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_07 		CBUS_REG_ADDR(VPP_DNLP_CTRL_07) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_08 0x1d89 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_08 		CBUS_REG_ADDR(VPP_DNLP_CTRL_08) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_09 0x1d8a 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_09 		CBUS_REG_ADDR(VPP_DNLP_CTRL_09) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_10 0x1d8b 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_10 		CBUS_REG_ADDR(VPP_DNLP_CTRL_10) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_11 0x1d8c 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_11 		CBUS_REG_ADDR(VPP_DNLP_CTRL_11) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_12 0x1d8d 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_12 		CBUS_REG_ADDR(VPP_DNLP_CTRL_12) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_13 0x1d8e 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_13 		CBUS_REG_ADDR(VPP_DNLP_CTRL_13) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_14 0x1d8f 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_14 		CBUS_REG_ADDR(VPP_DNLP_CTRL_14) 	///../ucode/register.h
+#define VPP_DNLP_CTRL_15 0x1d90 	///../ucode/register.h
+#define P_VPP_DNLP_CTRL_15 		CBUS_REG_ADDR(VPP_DNLP_CTRL_15) 	///../ucode/register.h
+#define VPP_PEAKING_HGAIN 0x1d91 	///../ucode/register.h
+#define P_VPP_PEAKING_HGAIN 		CBUS_REG_ADDR(VPP_PEAKING_HGAIN) 	///../ucode/register.h
+#define VPP_PEAKING_VGAIN 0x1d92 	///../ucode/register.h
+#define P_VPP_PEAKING_VGAIN 		CBUS_REG_ADDR(VPP_PEAKING_VGAIN) 	///../ucode/register.h
+#define VPP_PEAKING_NLP_1 0x1d93 	///../ucode/register.h
+#define P_VPP_PEAKING_NLP_1 		CBUS_REG_ADDR(VPP_PEAKING_NLP_1) 	///../ucode/register.h
+#define VPP_PEAKING_NLP_2 0x1d94 	///../ucode/register.h
+#define P_VPP_PEAKING_NLP_2 		CBUS_REG_ADDR(VPP_PEAKING_NLP_2) 	///../ucode/register.h
+#define VPP_PEAKING_NLP_3 0x1d95 	///../ucode/register.h
+#define P_VPP_PEAKING_NLP_3 		CBUS_REG_ADDR(VPP_PEAKING_NLP_3) 	///../ucode/register.h
+#define VPP_PEAKING_NLP_4 0x1d96 	///../ucode/register.h
+#define P_VPP_PEAKING_NLP_4 		CBUS_REG_ADDR(VPP_PEAKING_NLP_4) 	///../ucode/register.h
+#define VPP_PEAKING_NLP_5 0x1d97 	///../ucode/register.h
+#define P_VPP_PEAKING_NLP_5 		CBUS_REG_ADDR(VPP_PEAKING_NLP_5) 	///../ucode/register.h
+#define VPP_SHARP_LIMIT 0x1d98 	///../ucode/register.h
+#define P_VPP_SHARP_LIMIT 		CBUS_REG_ADDR(VPP_SHARP_LIMIT) 	///../ucode/register.h
+#define VPP_VLTI_CTRL 0x1d99 	///../ucode/register.h
+#define P_VPP_VLTI_CTRL 		CBUS_REG_ADDR(VPP_VLTI_CTRL) 	///../ucode/register.h
+#define VPP_HLTI_CTRL 0x1d9a 	///../ucode/register.h
+#define P_VPP_HLTI_CTRL 		CBUS_REG_ADDR(VPP_HLTI_CTRL) 	///../ucode/register.h
+#define VPP_CTI_CTRL 0x1d9b 	///../ucode/register.h
+#define P_VPP_CTI_CTRL 		CBUS_REG_ADDR(VPP_CTI_CTRL) 	///../ucode/register.h
+#define VPP_BLUE_STRETCH_1 0x1d9c 	///../ucode/register.h
+#define P_VPP_BLUE_STRETCH_1 		CBUS_REG_ADDR(VPP_BLUE_STRETCH_1) 	///../ucode/register.h
+#define VPP_BLUE_STRETCH_2 0x1d9d 	///../ucode/register.h
+#define P_VPP_BLUE_STRETCH_2 		CBUS_REG_ADDR(VPP_BLUE_STRETCH_2) 	///../ucode/register.h
+#define VPP_BLUE_STRETCH_3 0x1d9e 	///../ucode/register.h
+#define P_VPP_BLUE_STRETCH_3 		CBUS_REG_ADDR(VPP_BLUE_STRETCH_3) 	///../ucode/register.h
+#define VPP_CCORING_CTRL 0x1da0 	///../ucode/register.h
+#define P_VPP_CCORING_CTRL 		CBUS_REG_ADDR(VPP_CCORING_CTRL) 	///../ucode/register.h
+#define VPP_VE_ENABLE_CTRL 0x1da1 	///../ucode/register.h
+#define P_VPP_VE_ENABLE_CTRL 		CBUS_REG_ADDR(VPP_VE_ENABLE_CTRL) 	///../ucode/register.h
+#define VPP_VE_DEMO_LEFT_TOP_SCREEN_WIDTH 0x1da2 	///../ucode/register.h
+#define P_VPP_VE_DEMO_LEFT_TOP_SCREEN_WIDTH 		CBUS_REG_ADDR(VPP_VE_DEMO_LEFT_TOP_SCREEN_WIDTH) 	///../ucode/register.h
+#define VPP_VE_DEMO_CENTER_BAR 0x1da3 	///../ucode/register.h
+#define P_VPP_VE_DEMO_CENTER_BAR 		CBUS_REG_ADDR(VPP_VE_DEMO_CENTER_BAR) 	///../ucode/register.h
+#define VPP_VDO_MEAS_CTRL 0x1da8 	///../ucode/register.h
+#define P_VPP_VDO_MEAS_CTRL 		CBUS_REG_ADDR(VPP_VDO_MEAS_CTRL) 	///../ucode/register.h
+#define VPP_VDO_MEAS_VS_COUNT_HI 0x1da9 	///../ucode/register.h
+#define P_VPP_VDO_MEAS_VS_COUNT_HI 		CBUS_REG_ADDR(VPP_VDO_MEAS_VS_COUNT_HI) 	///../ucode/register.h
+#define VPP_VDO_MEAS_VS_COUNT_LO 0x1daa 	///../ucode/register.h
+#define P_VPP_VDO_MEAS_VS_COUNT_LO 		CBUS_REG_ADDR(VPP_VDO_MEAS_VS_COUNT_LO) 	///../ucode/register.h
+#define VPP_INPUT_CTRL 0x1dab 	///../ucode/register.h
+#define P_VPP_INPUT_CTRL 		CBUS_REG_ADDR(VPP_INPUT_CTRL) 	///../ucode/register.h
+#define VPP_CTI_CTRL2 0x1dac 	///../ucode/register.h
+#define P_VPP_CTI_CTRL2 		CBUS_REG_ADDR(VPP_CTI_CTRL2) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD1 0x1dad 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD1 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD1) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD2 0x1dae 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD2 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD2) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD3 0x1daf 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD3 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD3) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD4 0x1db0 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD4 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD4) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD5 0x1db1 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD5 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD5) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD6 0x1db2 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD6 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD6) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD7 0x1db3 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD7 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD7) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD8 0x1db4 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD8 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD8) 	///../ucode/register.h
+#define VPP_PEAKING_SAT_THD9 0x1db5 	///../ucode/register.h
+#define P_VPP_PEAKING_SAT_THD9 		CBUS_REG_ADDR(VPP_PEAKING_SAT_THD9) 	///../ucode/register.h
+#define VPP_PEAKING_GAIN_ADD1 0x1db6 	///../ucode/register.h
+#define P_VPP_PEAKING_GAIN_ADD1 		CBUS_REG_ADDR(VPP_PEAKING_GAIN_ADD1) 	///../ucode/register.h
+#define VPP_PEAKING_GAIN_ADD2 0x1db7 	///../ucode/register.h
+#define P_VPP_PEAKING_GAIN_ADD2 		CBUS_REG_ADDR(VPP_PEAKING_GAIN_ADD2) 	///../ucode/register.h
+#define VPP_PEAKING_DNLP 0x1db8 	///../ucode/register.h
+#define P_VPP_PEAKING_DNLP 		CBUS_REG_ADDR(VPP_PEAKING_DNLP) 	///../ucode/register.h
+#define VPP_SHARP_DEMO_WIN_CTRL1 0x1db9 	///../ucode/register.h
+#define P_VPP_SHARP_DEMO_WIN_CTRL1 		CBUS_REG_ADDR(VPP_SHARP_DEMO_WIN_CTRL1) 	///../ucode/register.h
+#define VPP_SHARP_DEMO_WIN_CTRL2 0x1dba 	///../ucode/register.h
+#define P_VPP_SHARP_DEMO_WIN_CTRL2 		CBUS_REG_ADDR(VPP_SHARP_DEMO_WIN_CTRL2) 	///../ucode/register.h
+#define VPP_FRONT_HLTI_CTRL 0x1dbb 	///../ucode/register.h
+#define P_VPP_FRONT_HLTI_CTRL 		CBUS_REG_ADDR(VPP_FRONT_HLTI_CTRL) 	///../ucode/register.h
+#define VPP_FRONT_CTI_CTRL 0x1dbc 	///../ucode/register.h
+#define P_VPP_FRONT_CTI_CTRL 		CBUS_REG_ADDR(VPP_FRONT_CTI_CTRL) 	///../ucode/register.h
+#define VPP_FRONT_CTI_CTRL2 0x1dbd 	///../ucode/register.h
+#define P_VPP_FRONT_CTI_CTRL2 		CBUS_REG_ADDR(VPP_FRONT_CTI_CTRL2) 	///../ucode/register.h
+#define VPP_OSD_VSC_PHASE_STEP 0x1dc0 	///../ucode/register.h
+#define P_VPP_OSD_VSC_PHASE_STEP 		CBUS_REG_ADDR(VPP_OSD_VSC_PHASE_STEP) 	///../ucode/register.h
+#define VPP_OSD_VSC_INI_PHASE 0x1dc1 	///../ucode/register.h
+#define P_VPP_OSD_VSC_INI_PHASE 		CBUS_REG_ADDR(VPP_OSD_VSC_INI_PHASE) 	///../ucode/register.h
+#define VPP_OSD_VSC_CTRL0 0x1dc2 	///../ucode/register.h
+#define P_VPP_OSD_VSC_CTRL0 		CBUS_REG_ADDR(VPP_OSD_VSC_CTRL0) 	///../ucode/register.h
+#define VPP_OSD_HSC_PHASE_STEP 0x1dc3 	///../ucode/register.h
+#define P_VPP_OSD_HSC_PHASE_STEP 		CBUS_REG_ADDR(VPP_OSD_HSC_PHASE_STEP) 	///../ucode/register.h
+#define VPP_OSD_HSC_INI_PHASE 0x1dc4 	///../ucode/register.h
+#define P_VPP_OSD_HSC_INI_PHASE 		CBUS_REG_ADDR(VPP_OSD_HSC_INI_PHASE) 	///../ucode/register.h
+#define VPP_OSD_HSC_CTRL0 0x1dc5 	///../ucode/register.h
+#define P_VPP_OSD_HSC_CTRL0 		CBUS_REG_ADDR(VPP_OSD_HSC_CTRL0) 	///../ucode/register.h
+#define VPP_OSD_HSC_INI_PAT_CTRL 0x1dc6 	///../ucode/register.h
+#define P_VPP_OSD_HSC_INI_PAT_CTRL 		CBUS_REG_ADDR(VPP_OSD_HSC_INI_PAT_CTRL) 	///../ucode/register.h
+#define VPP_OSD_SC_DUMMY_DATA 0x1dc7 	///../ucode/register.h
+#define P_VPP_OSD_SC_DUMMY_DATA 		CBUS_REG_ADDR(VPP_OSD_SC_DUMMY_DATA) 	///../ucode/register.h
+#define VPP_OSD_SC_CTRL0 0x1dc8 	///../ucode/register.h
+#define P_VPP_OSD_SC_CTRL0 		CBUS_REG_ADDR(VPP_OSD_SC_CTRL0) 	///../ucode/register.h
+#define VPP_OSD_SCI_WH_M1 0x1dc9 	///../ucode/register.h
+#define P_VPP_OSD_SCI_WH_M1 		CBUS_REG_ADDR(VPP_OSD_SCI_WH_M1) 	///../ucode/register.h
+#define VPP_OSD_SCO_H_START_END 0x1dca 	///../ucode/register.h
+#define P_VPP_OSD_SCO_H_START_END 		CBUS_REG_ADDR(VPP_OSD_SCO_H_START_END) 	///../ucode/register.h
+#define VPP_OSD_SCO_V_START_END 0x1dcb 	///../ucode/register.h
+#define P_VPP_OSD_SCO_V_START_END 		CBUS_REG_ADDR(VPP_OSD_SCO_V_START_END) 	///../ucode/register.h
+#define VPP_OSD_SCALE_COEF_IDX 0x1dcc 	///../ucode/register.h
+#define P_VPP_OSD_SCALE_COEF_IDX 		CBUS_REG_ADDR(VPP_OSD_SCALE_COEF_IDX) 	///../ucode/register.h
+#define VPP_OSD_SCALE_COEF 0x1dcd 	///../ucode/register.h
+#define P_VPP_OSD_SCALE_COEF 		CBUS_REG_ADDR(VPP_OSD_SCALE_COEF) 	///../ucode/register.h
+#define VPP_INT_LINE_NUM 0x1dce 	///../ucode/register.h
+#define P_VPP_INT_LINE_NUM 		CBUS_REG_ADDR(VPP_INT_LINE_NUM) 	///../ucode/register.h
+#define VPP2_DUMMY_DATA 0x1900 	///../ucode/register.h
+#define P_VPP2_DUMMY_DATA 		CBUS_REG_ADDR(VPP2_DUMMY_DATA) 	///../ucode/register.h
+#define VPP2_LINE_IN_LENGTH 0x1901 	///../ucode/register.h
+#define P_VPP2_LINE_IN_LENGTH 		CBUS_REG_ADDR(VPP2_LINE_IN_LENGTH) 	///../ucode/register.h
+#define VPP2_PIC_IN_HEIGHT 0x1902 	///../ucode/register.h
+#define P_VPP2_PIC_IN_HEIGHT 		CBUS_REG_ADDR(VPP2_PIC_IN_HEIGHT) 	///../ucode/register.h
+#define VPP2_SCALE_COEF_IDX 0x1903 	///../ucode/register.h
+#define P_VPP2_SCALE_COEF_IDX 		CBUS_REG_ADDR(VPP2_SCALE_COEF_IDX) 	///../ucode/register.h
+#define VPP2_SCALE_COEF 0x1904 	///../ucode/register.h
+#define P_VPP2_SCALE_COEF 		CBUS_REG_ADDR(VPP2_SCALE_COEF) 	///../ucode/register.h
+#define VPP2_VSC_REGION12_STARTP 0x1905 	///../ucode/register.h
+#define P_VPP2_VSC_REGION12_STARTP 		CBUS_REG_ADDR(VPP2_VSC_REGION12_STARTP) 	///../ucode/register.h
+#define VPP2_VSC_REGION34_STARTP 0x1906 	///../ucode/register.h
+#define P_VPP2_VSC_REGION34_STARTP 		CBUS_REG_ADDR(VPP2_VSC_REGION34_STARTP) 	///../ucode/register.h
+#define VPP2_VSC_REGION4_ENDP 0x1907 	///../ucode/register.h
+#define P_VPP2_VSC_REGION4_ENDP 		CBUS_REG_ADDR(VPP2_VSC_REGION4_ENDP) 	///../ucode/register.h
+#define VPP2_VSC_START_PHASE_STEP 0x1908 	///../ucode/register.h
+#define P_VPP2_VSC_START_PHASE_STEP 		CBUS_REG_ADDR(VPP2_VSC_START_PHASE_STEP) 	///../ucode/register.h
+#define VPP2_VSC_REGION0_PHASE_SLOPE 0x1909 	///../ucode/register.h
+#define P_VPP2_VSC_REGION0_PHASE_SLOPE 		CBUS_REG_ADDR(VPP2_VSC_REGION0_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP2_VSC_REGION1_PHASE_SLOPE 0x190a 	///../ucode/register.h
+#define P_VPP2_VSC_REGION1_PHASE_SLOPE 		CBUS_REG_ADDR(VPP2_VSC_REGION1_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP2_VSC_REGION3_PHASE_SLOPE 0x190b 	///../ucode/register.h
+#define P_VPP2_VSC_REGION3_PHASE_SLOPE 		CBUS_REG_ADDR(VPP2_VSC_REGION3_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP2_VSC_REGION4_PHASE_SLOPE 0x190c 	///../ucode/register.h
+#define P_VPP2_VSC_REGION4_PHASE_SLOPE 		CBUS_REG_ADDR(VPP2_VSC_REGION4_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP2_VSC_PHASE_CTRL 0x190d 	///../ucode/register.h
+#define P_VPP2_VSC_PHASE_CTRL 		CBUS_REG_ADDR(VPP2_VSC_PHASE_CTRL) 	///../ucode/register.h
+#define VPP2_VSC_INI_PHASE 0x190e 	///../ucode/register.h
+#define P_VPP2_VSC_INI_PHASE 		CBUS_REG_ADDR(VPP2_VSC_INI_PHASE) 	///../ucode/register.h
+#define VPP2_HSC_REGION12_STARTP 0x1910 	///../ucode/register.h
+#define P_VPP2_HSC_REGION12_STARTP 		CBUS_REG_ADDR(VPP2_HSC_REGION12_STARTP) 	///../ucode/register.h
+#define VPP2_HSC_REGION34_STARTP 0x1911 	///../ucode/register.h
+#define P_VPP2_HSC_REGION34_STARTP 		CBUS_REG_ADDR(VPP2_HSC_REGION34_STARTP) 	///../ucode/register.h
+#define VPP2_HSC_REGION4_ENDP 0x1912 	///../ucode/register.h
+#define P_VPP2_HSC_REGION4_ENDP 		CBUS_REG_ADDR(VPP2_HSC_REGION4_ENDP) 	///../ucode/register.h
+#define VPP2_HSC_START_PHASE_STEP 0x1913 	///../ucode/register.h
+#define P_VPP2_HSC_START_PHASE_STEP 		CBUS_REG_ADDR(VPP2_HSC_START_PHASE_STEP) 	///../ucode/register.h
+#define VPP2_HSC_REGION0_PHASE_SLOPE 0x1914 	///../ucode/register.h
+#define P_VPP2_HSC_REGION0_PHASE_SLOPE 		CBUS_REG_ADDR(VPP2_HSC_REGION0_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP2_HSC_REGION1_PHASE_SLOPE 0x1915 	///../ucode/register.h
+#define P_VPP2_HSC_REGION1_PHASE_SLOPE 		CBUS_REG_ADDR(VPP2_HSC_REGION1_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP2_HSC_REGION3_PHASE_SLOPE 0x1916 	///../ucode/register.h
+#define P_VPP2_HSC_REGION3_PHASE_SLOPE 		CBUS_REG_ADDR(VPP2_HSC_REGION3_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP2_HSC_REGION4_PHASE_SLOPE 0x1917 	///../ucode/register.h
+#define P_VPP2_HSC_REGION4_PHASE_SLOPE 		CBUS_REG_ADDR(VPP2_HSC_REGION4_PHASE_SLOPE) 	///../ucode/register.h
+#define VPP2_HSC_PHASE_CTRL 0x1918 	///../ucode/register.h
+#define P_VPP2_HSC_PHASE_CTRL 		CBUS_REG_ADDR(VPP2_HSC_PHASE_CTRL) 	///../ucode/register.h
+#define VPP2_SC_MISC 0x1919 	///../ucode/register.h
+#define P_VPP2_SC_MISC 		CBUS_REG_ADDR(VPP2_SC_MISC) 	///../ucode/register.h
+#define VPP2_PREBLEND_VD1_H_START_END 0x191a 	///../ucode/register.h
+#define P_VPP2_PREBLEND_VD1_H_START_END 		CBUS_REG_ADDR(VPP2_PREBLEND_VD1_H_START_END) 	///../ucode/register.h
+#define VPP2_PREBLEND_VD1_V_START_END 0x191b 	///../ucode/register.h
+#define P_VPP2_PREBLEND_VD1_V_START_END 		CBUS_REG_ADDR(VPP2_PREBLEND_VD1_V_START_END) 	///../ucode/register.h
+#define VPP2_POSTBLEND_VD1_H_START_END 0x191c 	///../ucode/register.h
+#define P_VPP2_POSTBLEND_VD1_H_START_END 		CBUS_REG_ADDR(VPP2_POSTBLEND_VD1_H_START_END) 	///../ucode/register.h
+#define VPP2_POSTBLEND_VD1_V_START_END 0x191d 	///../ucode/register.h
+#define P_VPP2_POSTBLEND_VD1_V_START_END 		CBUS_REG_ADDR(VPP2_POSTBLEND_VD1_V_START_END) 	///../ucode/register.h
+#define VPP2_PREBLEND_H_SIZE 0x1920 	///../ucode/register.h
+#define P_VPP2_PREBLEND_H_SIZE 		CBUS_REG_ADDR(VPP2_PREBLEND_H_SIZE) 	///../ucode/register.h
+#define VPP2_POSTBLEND_H_SIZE 0x1921 	///../ucode/register.h
+#define P_VPP2_POSTBLEND_H_SIZE 		CBUS_REG_ADDR(VPP2_POSTBLEND_H_SIZE) 	///../ucode/register.h
+#define VPP2_HOLD_LINES 0x1922 	///../ucode/register.h
+#define P_VPP2_HOLD_LINES 		CBUS_REG_ADDR(VPP2_HOLD_LINES) 	///../ucode/register.h
+#define VPP2_BLEND_ONECOLOR_CTRL 0x1923 	///../ucode/register.h
+#define P_VPP2_BLEND_ONECOLOR_CTRL 		CBUS_REG_ADDR(VPP2_BLEND_ONECOLOR_CTRL) 	///../ucode/register.h
+#define VPP2_PREBLEND_CURRENT_XY 0x1924 	///../ucode/register.h
+#define P_VPP2_PREBLEND_CURRENT_XY 		CBUS_REG_ADDR(VPP2_PREBLEND_CURRENT_XY) 	///../ucode/register.h
+#define VPP2_POSTBLEND_CURRENT_XY 0x1925 	///../ucode/register.h
+#define P_VPP2_POSTBLEND_CURRENT_XY 		CBUS_REG_ADDR(VPP2_POSTBLEND_CURRENT_XY) 	///../ucode/register.h
+#define VPP2_MISC 0x1926 	///../ucode/register.h
+#define P_VPP2_MISC 		CBUS_REG_ADDR(VPP2_MISC) 	///../ucode/register.h
+#define VPP2_OFIFO_SIZE 0x1927 	///../ucode/register.h
+#define P_VPP2_OFIFO_SIZE 		CBUS_REG_ADDR(VPP2_OFIFO_SIZE) 	///../ucode/register.h
+#define VPP2_FIFO_STATUS 0x1928 	///../ucode/register.h
+#define P_VPP2_FIFO_STATUS 		CBUS_REG_ADDR(VPP2_FIFO_STATUS) 	///../ucode/register.h
+#define VPP2_SMOKE_CTRL 0x1929 	///../ucode/register.h
+#define P_VPP2_SMOKE_CTRL 		CBUS_REG_ADDR(VPP2_SMOKE_CTRL) 	///../ucode/register.h
+#define VPP2_SMOKE1_VAL 0x192a 	///../ucode/register.h
+#define P_VPP2_SMOKE1_VAL 		CBUS_REG_ADDR(VPP2_SMOKE1_VAL) 	///../ucode/register.h
+#define VPP2_SMOKE2_VAL 0x192b 	///../ucode/register.h
+#define P_VPP2_SMOKE2_VAL 		CBUS_REG_ADDR(VPP2_SMOKE2_VAL) 	///../ucode/register.h
+#define VPP2_SMOKE1_H_START_END 0x192d 	///../ucode/register.h
+#define P_VPP2_SMOKE1_H_START_END 		CBUS_REG_ADDR(VPP2_SMOKE1_H_START_END) 	///../ucode/register.h
+#define VPP2_SMOKE1_V_START_END 0x192e 	///../ucode/register.h
+#define P_VPP2_SMOKE1_V_START_END 		CBUS_REG_ADDR(VPP2_SMOKE1_V_START_END) 	///../ucode/register.h
+#define VPP2_SMOKE2_H_START_END 0x192f 	///../ucode/register.h
+#define P_VPP2_SMOKE2_H_START_END 		CBUS_REG_ADDR(VPP2_SMOKE2_H_START_END) 	///../ucode/register.h
+#define VPP2_SMOKE2_V_START_END 0x1930 	///../ucode/register.h
+#define P_VPP2_SMOKE2_V_START_END 		CBUS_REG_ADDR(VPP2_SMOKE2_V_START_END) 	///../ucode/register.h
+#define VPP2_SCO_FIFO_CTRL 0x1933 	///../ucode/register.h
+#define P_VPP2_SCO_FIFO_CTRL 		CBUS_REG_ADDR(VPP2_SCO_FIFO_CTRL) 	///../ucode/register.h
+#define VPP2_HSC_PHASE_CTRL1 0x1934 	///../ucode/register.h
+#define P_VPP2_HSC_PHASE_CTRL1 		CBUS_REG_ADDR(VPP2_HSC_PHASE_CTRL1) 	///../ucode/register.h
+#define VPP2_HSC_INI_PAT_CTRL 0x1935 	///../ucode/register.h
+#define P_VPP2_HSC_INI_PAT_CTRL 		CBUS_REG_ADDR(VPP2_HSC_INI_PAT_CTRL) 	///../ucode/register.h
+#define VPP2_VADJ_CTRL 0x1940 	///../ucode/register.h
+#define P_VPP2_VADJ_CTRL 		CBUS_REG_ADDR(VPP2_VADJ_CTRL) 	///../ucode/register.h
+#define VPP2_VADJ1_Y 0x1941 	///../ucode/register.h
+#define P_VPP2_VADJ1_Y 		CBUS_REG_ADDR(VPP2_VADJ1_Y) 	///../ucode/register.h
+#define VPP2_VADJ1_MA_MB 0x1942 	///../ucode/register.h
+#define P_VPP2_VADJ1_MA_MB 		CBUS_REG_ADDR(VPP2_VADJ1_MA_MB) 	///../ucode/register.h
+#define VPP2_VADJ1_MC_MD 0x1943 	///../ucode/register.h
+#define P_VPP2_VADJ1_MC_MD 		CBUS_REG_ADDR(VPP2_VADJ1_MC_MD) 	///../ucode/register.h
+#define VPP2_VADJ2_Y 0x1944 	///../ucode/register.h
+#define P_VPP2_VADJ2_Y 		CBUS_REG_ADDR(VPP2_VADJ2_Y) 	///../ucode/register.h
+#define VPP2_VADJ2_MA_MB 0x1945 	///../ucode/register.h
+#define P_VPP2_VADJ2_MA_MB 		CBUS_REG_ADDR(VPP2_VADJ2_MA_MB) 	///../ucode/register.h
+#define VPP2_VADJ2_MC_MD 0x1946 	///../ucode/register.h
+#define P_VPP2_VADJ2_MC_MD 		CBUS_REG_ADDR(VPP2_VADJ2_MC_MD) 	///../ucode/register.h
+#define VPP2_HSHARP_CTRL 0x1950 	///../ucode/register.h
+#define P_VPP2_HSHARP_CTRL 		CBUS_REG_ADDR(VPP2_HSHARP_CTRL) 	///../ucode/register.h
+#define VPP2_HSHARP_LUMA_THRESH01 0x1951 	///../ucode/register.h
+#define P_VPP2_HSHARP_LUMA_THRESH01 		CBUS_REG_ADDR(VPP2_HSHARP_LUMA_THRESH01) 	///../ucode/register.h
+#define VPP2_HSHARP_LUMA_THRESH23 0x1952 	///../ucode/register.h
+#define P_VPP2_HSHARP_LUMA_THRESH23 		CBUS_REG_ADDR(VPP2_HSHARP_LUMA_THRESH23) 	///../ucode/register.h
+#define VPP2_HSHARP_CHROMA_THRESH01 0x1953 	///../ucode/register.h
+#define P_VPP2_HSHARP_CHROMA_THRESH01 		CBUS_REG_ADDR(VPP2_HSHARP_CHROMA_THRESH01) 	///../ucode/register.h
+#define VPP2_HSHARP_CHROMA_THRESH23 0x1954 	///../ucode/register.h
+#define P_VPP2_HSHARP_CHROMA_THRESH23 		CBUS_REG_ADDR(VPP2_HSHARP_CHROMA_THRESH23) 	///../ucode/register.h
+#define VPP2_HSHARP_LUMA_GAIN 0x1955 	///../ucode/register.h
+#define P_VPP2_HSHARP_LUMA_GAIN 		CBUS_REG_ADDR(VPP2_HSHARP_LUMA_GAIN) 	///../ucode/register.h
+#define VPP2_HSHARP_CHROMA_GAIN 0x1956 	///../ucode/register.h
+#define P_VPP2_HSHARP_CHROMA_GAIN 		CBUS_REG_ADDR(VPP2_HSHARP_CHROMA_GAIN) 	///../ucode/register.h
+#define VPP2_MATRIX_CTRL 0x195f 	///../ucode/register.h
+#define P_VPP2_MATRIX_CTRL 		CBUS_REG_ADDR(VPP2_MATRIX_CTRL) 	///../ucode/register.h
+#define VPP2_MATRIX_COEF00_01 0x1960 	///../ucode/register.h
+#define P_VPP2_MATRIX_COEF00_01 		CBUS_REG_ADDR(VPP2_MATRIX_COEF00_01) 	///../ucode/register.h
+#define VPP2_MATRIX_COEF02_10 0x1961 	///../ucode/register.h
+#define P_VPP2_MATRIX_COEF02_10 		CBUS_REG_ADDR(VPP2_MATRIX_COEF02_10) 	///../ucode/register.h
+#define VPP2_MATRIX_COEF11_12 0x1962 	///../ucode/register.h
+#define P_VPP2_MATRIX_COEF11_12 		CBUS_REG_ADDR(VPP2_MATRIX_COEF11_12) 	///../ucode/register.h
+#define VPP2_MATRIX_COEF20_21 0x1963 	///../ucode/register.h
+#define P_VPP2_MATRIX_COEF20_21 		CBUS_REG_ADDR(VPP2_MATRIX_COEF20_21) 	///../ucode/register.h
+#define VPP2_MATRIX_COEF22 0x1964 	///../ucode/register.h
+#define P_VPP2_MATRIX_COEF22 		CBUS_REG_ADDR(VPP2_MATRIX_COEF22) 	///../ucode/register.h
+#define VPP2_MATRIX_OFFSET0_1 0x1965 	///../ucode/register.h
+#define P_VPP2_MATRIX_OFFSET0_1 		CBUS_REG_ADDR(VPP2_MATRIX_OFFSET0_1) 	///../ucode/register.h
+#define VPP2_MATRIX_OFFSET2 0x1966 	///../ucode/register.h
+#define P_VPP2_MATRIX_OFFSET2 		CBUS_REG_ADDR(VPP2_MATRIX_OFFSET2) 	///../ucode/register.h
+#define VPP2_MATRIX_PRE_OFFSET0_1 0x1967 	///../ucode/register.h
+#define P_VPP2_MATRIX_PRE_OFFSET0_1 		CBUS_REG_ADDR(VPP2_MATRIX_PRE_OFFSET0_1) 	///../ucode/register.h
+#define VPP2_MATRIX_PRE_OFFSET2 0x1968 	///../ucode/register.h
+#define P_VPP2_MATRIX_PRE_OFFSET2 		CBUS_REG_ADDR(VPP2_MATRIX_PRE_OFFSET2) 	///../ucode/register.h
+#define VPP2_DUMMY_DATA1 0x1969 	///../ucode/register.h
+#define P_VPP2_DUMMY_DATA1 		CBUS_REG_ADDR(VPP2_DUMMY_DATA1) 	///../ucode/register.h
+#define VPP2_GAINOFF_CTRL0 0x196a 	///../ucode/register.h
+#define P_VPP2_GAINOFF_CTRL0 		CBUS_REG_ADDR(VPP2_GAINOFF_CTRL0) 	///../ucode/register.h
+#define VPP2_GAINOFF_CTRL1 0x196b 	///../ucode/register.h
+#define P_VPP2_GAINOFF_CTRL1 		CBUS_REG_ADDR(VPP2_GAINOFF_CTRL1) 	///../ucode/register.h
+#define VPP2_GAINOFF_CTRL2 0x196c 	///../ucode/register.h
+#define P_VPP2_GAINOFF_CTRL2 		CBUS_REG_ADDR(VPP2_GAINOFF_CTRL2) 	///../ucode/register.h
+#define VPP2_GAINOFF_CTRL3 0x196d 	///../ucode/register.h
+#define P_VPP2_GAINOFF_CTRL3 		CBUS_REG_ADDR(VPP2_GAINOFF_CTRL3) 	///../ucode/register.h
+#define VPP2_GAINOFF_CTRL4 0x196e 	///../ucode/register.h
+#define P_VPP2_GAINOFF_CTRL4 		CBUS_REG_ADDR(VPP2_GAINOFF_CTRL4) 	///../ucode/register.h
+#define VPP2_CHROMA_ADDR_PORT 0x1970 	///../ucode/register.h
+#define P_VPP2_CHROMA_ADDR_PORT 		CBUS_REG_ADDR(VPP2_CHROMA_ADDR_PORT) 	///../ucode/register.h
+#define VPP2_CHROMA_DATA_PORT 0x1971 	///../ucode/register.h
+#define P_VPP2_CHROMA_DATA_PORT 		CBUS_REG_ADDR(VPP2_CHROMA_DATA_PORT) 	///../ucode/register.h
+#define VPP2_GCLK_CTRL0 0x1972 	///../ucode/register.h
+#define P_VPP2_GCLK_CTRL0 		CBUS_REG_ADDR(VPP2_GCLK_CTRL0) 	///../ucode/register.h
+#define VPP2_GCLK_CTRL1 0x1973 	///../ucode/register.h
+#define P_VPP2_GCLK_CTRL1 		CBUS_REG_ADDR(VPP2_GCLK_CTRL1) 	///../ucode/register.h
+#define VPP2_SC_GCLK_CTRL 0x1974 	///../ucode/register.h
+#define P_VPP2_SC_GCLK_CTRL 		CBUS_REG_ADDR(VPP2_SC_GCLK_CTRL) 	///../ucode/register.h
+#define VPP2_BLACKEXT_CTRL 0x1980 	///../ucode/register.h
+#define P_VPP2_BLACKEXT_CTRL 		CBUS_REG_ADDR(VPP2_BLACKEXT_CTRL) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_00 0x1981 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_00 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_00) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_01 0x1982 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_01 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_01) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_02 0x1983 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_02 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_02) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_03 0x1984 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_03 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_03) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_04 0x1985 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_04 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_04) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_05 0x1986 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_05 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_05) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_06 0x1987 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_06 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_06) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_07 0x1988 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_07 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_07) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_08 0x1989 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_08 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_08) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_09 0x198a 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_09 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_09) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_10 0x198b 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_10 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_10) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_11 0x198c 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_11 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_11) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_12 0x198d 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_12 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_12) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_13 0x198e 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_13 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_13) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_14 0x198f 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_14 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_14) 	///../ucode/register.h
+#define VPP2_DNLP_CTRL_15 0x1990 	///../ucode/register.h
+#define P_VPP2_DNLP_CTRL_15 		CBUS_REG_ADDR(VPP2_DNLP_CTRL_15) 	///../ucode/register.h
+#define VPP2_PEAKING_HGAIN 0x1991 	///../ucode/register.h
+#define P_VPP2_PEAKING_HGAIN 		CBUS_REG_ADDR(VPP2_PEAKING_HGAIN) 	///../ucode/register.h
+#define VPP2_PEAKING_VGAIN 0x1992 	///../ucode/register.h
+#define P_VPP2_PEAKING_VGAIN 		CBUS_REG_ADDR(VPP2_PEAKING_VGAIN) 	///../ucode/register.h
+#define VPP2_PEAKING_NLP_1 0x1993 	///../ucode/register.h
+#define P_VPP2_PEAKING_NLP_1 		CBUS_REG_ADDR(VPP2_PEAKING_NLP_1) 	///../ucode/register.h
+#define VPP2_PEAKING_NLP_2 0x1994 	///../ucode/register.h
+#define P_VPP2_PEAKING_NLP_2 		CBUS_REG_ADDR(VPP2_PEAKING_NLP_2) 	///../ucode/register.h
+#define VPP2_PEAKING_NLP_3 0x1995 	///../ucode/register.h
+#define P_VPP2_PEAKING_NLP_3 		CBUS_REG_ADDR(VPP2_PEAKING_NLP_3) 	///../ucode/register.h
+#define VPP2_PEAKING_NLP_4 0x1996 	///../ucode/register.h
+#define P_VPP2_PEAKING_NLP_4 		CBUS_REG_ADDR(VPP2_PEAKING_NLP_4) 	///../ucode/register.h
+#define VPP2_PEAKING_NLP_5 0x1997 	///../ucode/register.h
+#define P_VPP2_PEAKING_NLP_5 		CBUS_REG_ADDR(VPP2_PEAKING_NLP_5) 	///../ucode/register.h
+#define VPP2_SHARP_LIMIT 0x1998 	///../ucode/register.h
+#define P_VPP2_SHARP_LIMIT 		CBUS_REG_ADDR(VPP2_SHARP_LIMIT) 	///../ucode/register.h
+#define VPP2_VLTI_CTRL 0x1999 	///../ucode/register.h
+#define P_VPP2_VLTI_CTRL 		CBUS_REG_ADDR(VPP2_VLTI_CTRL) 	///../ucode/register.h
+#define VPP2_HLTI_CTRL 0x199a 	///../ucode/register.h
+#define P_VPP2_HLTI_CTRL 		CBUS_REG_ADDR(VPP2_HLTI_CTRL) 	///../ucode/register.h
+#define VPP2_CTI_CTRL 0x199b 	///../ucode/register.h
+#define P_VPP2_CTI_CTRL 		CBUS_REG_ADDR(VPP2_CTI_CTRL) 	///../ucode/register.h
+#define VPP2_BLUE_STRETCH_1 0x199c 	///../ucode/register.h
+#define P_VPP2_BLUE_STRETCH_1 		CBUS_REG_ADDR(VPP2_BLUE_STRETCH_1) 	///../ucode/register.h
+#define VPP2_BLUE_STRETCH_2 0x199d 	///../ucode/register.h
+#define P_VPP2_BLUE_STRETCH_2 		CBUS_REG_ADDR(VPP2_BLUE_STRETCH_2) 	///../ucode/register.h
+#define VPP2_BLUE_STRETCH_3 0x199e 	///../ucode/register.h
+#define P_VPP2_BLUE_STRETCH_3 		CBUS_REG_ADDR(VPP2_BLUE_STRETCH_3) 	///../ucode/register.h
+#define VPP2_CCORING_CTRL 0x19a0 	///../ucode/register.h
+#define P_VPP2_CCORING_CTRL 		CBUS_REG_ADDR(VPP2_CCORING_CTRL) 	///../ucode/register.h
+#define VPP2_VE_ENABLE_CTRL 0x19a1 	///../ucode/register.h
+#define P_VPP2_VE_ENABLE_CTRL 		CBUS_REG_ADDR(VPP2_VE_ENABLE_CTRL) 	///../ucode/register.h
+#define VPP2_VE_DEMO_LEFT_TOP_SCREEN_WIDTH 0x19a2 	///../ucode/register.h
+#define P_VPP2_VE_DEMO_LEFT_TOP_SCREEN_WIDTH 		CBUS_REG_ADDR(VPP2_VE_DEMO_LEFT_TOP_SCREEN_WIDTH) 	///../ucode/register.h
+#define VPP2_VE_DEMO_CENTER_BAR 0x19a3 	///../ucode/register.h
+#define P_VPP2_VE_DEMO_CENTER_BAR 		CBUS_REG_ADDR(VPP2_VE_DEMO_CENTER_BAR) 	///../ucode/register.h
+#define VPP2_VDO_MEAS_CTRL 0x19a8 	///../ucode/register.h
+#define P_VPP2_VDO_MEAS_CTRL 		CBUS_REG_ADDR(VPP2_VDO_MEAS_CTRL) 	///../ucode/register.h
+#define VPP2_VDO_MEAS_VS_COUNT_HI 0x19a9 	///../ucode/register.h
+#define P_VPP2_VDO_MEAS_VS_COUNT_HI 		CBUS_REG_ADDR(VPP2_VDO_MEAS_VS_COUNT_HI) 	///../ucode/register.h
+#define VPP2_VDO_MEAS_VS_COUNT_LO 0x19aa 	///../ucode/register.h
+#define P_VPP2_VDO_MEAS_VS_COUNT_LO 		CBUS_REG_ADDR(VPP2_VDO_MEAS_VS_COUNT_LO) 	///../ucode/register.h
+#define VPP2_INPUT_CTRL 0x19ab 	///../ucode/register.h
+#define P_VPP2_INPUT_CTRL 		CBUS_REG_ADDR(VPP2_INPUT_CTRL) 	///../ucode/register.h
+#define VPP2_CTI_CTRL2 0x19ac 	///../ucode/register.h
+#define P_VPP2_CTI_CTRL2 		CBUS_REG_ADDR(VPP2_CTI_CTRL2) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD1 0x19ad 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD1 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD1) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD2 0x19ae 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD2 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD2) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD3 0x19af 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD3 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD3) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD4 0x19b0 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD4 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD4) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD5 0x19b1 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD5 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD5) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD6 0x19b2 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD6 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD6) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD7 0x19b3 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD7 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD7) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD8 0x19b4 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD8 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD8) 	///../ucode/register.h
+#define VPP2_PEAKING_SAT_THD9 0x19b5 	///../ucode/register.h
+#define P_VPP2_PEAKING_SAT_THD9 		CBUS_REG_ADDR(VPP2_PEAKING_SAT_THD9) 	///../ucode/register.h
+#define VPP2_PEAKING_GAIN_ADD1 0x19b6 	///../ucode/register.h
+#define P_VPP2_PEAKING_GAIN_ADD1 		CBUS_REG_ADDR(VPP2_PEAKING_GAIN_ADD1) 	///../ucode/register.h
+#define VPP2_PEAKING_GAIN_ADD2 0x19b7 	///../ucode/register.h
+#define P_VPP2_PEAKING_GAIN_ADD2 		CBUS_REG_ADDR(VPP2_PEAKING_GAIN_ADD2) 	///../ucode/register.h
+#define VPP2_PEAKING_DNLP 0x19b8 	///../ucode/register.h
+#define P_VPP2_PEAKING_DNLP 		CBUS_REG_ADDR(VPP2_PEAKING_DNLP) 	///../ucode/register.h
+#define VPP2_SHARP_DEMO_WIN_CTRL1 0x19b9 	///../ucode/register.h
+#define P_VPP2_SHARP_DEMO_WIN_CTRL1 		CBUS_REG_ADDR(VPP2_SHARP_DEMO_WIN_CTRL1) 	///../ucode/register.h
+#define VPP2_SHARP_DEMO_WIN_CTRL2 0x19ba 	///../ucode/register.h
+#define P_VPP2_SHARP_DEMO_WIN_CTRL2 		CBUS_REG_ADDR(VPP2_SHARP_DEMO_WIN_CTRL2) 	///../ucode/register.h
+#define GE2D_GEN_CTRL0 0x18a0 	///../ucode/register.h
+#define P_GE2D_GEN_CTRL0 		CBUS_REG_ADDR(GE2D_GEN_CTRL0) 	///../ucode/register.h
+#define GE2D_GEN_CTRL1 0x18a1 	///../ucode/register.h
+#define P_GE2D_GEN_CTRL1 		CBUS_REG_ADDR(GE2D_GEN_CTRL1) 	///../ucode/register.h
+#define GE2D_GEN_CTRL2 0x18a2 	///../ucode/register.h
+#define P_GE2D_GEN_CTRL2 		CBUS_REG_ADDR(GE2D_GEN_CTRL2) 	///../ucode/register.h
+#define GE2D_CMD_CTRL 0x18a3 	///../ucode/register.h
+#define P_GE2D_CMD_CTRL 		CBUS_REG_ADDR(GE2D_CMD_CTRL) 	///../ucode/register.h
+#define GE2D_STATUS0 0x18a4 	///../ucode/register.h
+#define P_GE2D_STATUS0 		CBUS_REG_ADDR(GE2D_STATUS0) 	///../ucode/register.h
+#define GE2D_STATUS1 0x18a5 	///../ucode/register.h
+#define P_GE2D_STATUS1 		CBUS_REG_ADDR(GE2D_STATUS1) 	///../ucode/register.h
+#define GE2D_SRC1_DEF_COLOR 0x18a6 	///../ucode/register.h
+#define P_GE2D_SRC1_DEF_COLOR 		CBUS_REG_ADDR(GE2D_SRC1_DEF_COLOR) 	///../ucode/register.h
+#define GE2D_SRC1_CLIPX_START_END 0x18a7 	///../ucode/register.h
+#define P_GE2D_SRC1_CLIPX_START_END 		CBUS_REG_ADDR(GE2D_SRC1_CLIPX_START_END) 	///../ucode/register.h
+#define GE2D_SRC1_CLIPY_START_END 0x18a8 	///../ucode/register.h
+#define P_GE2D_SRC1_CLIPY_START_END 		CBUS_REG_ADDR(GE2D_SRC1_CLIPY_START_END) 	///../ucode/register.h
+#define GE2D_SRC1_CANVAS 0x18a9 	///../ucode/register.h
+#define P_GE2D_SRC1_CANVAS 		CBUS_REG_ADDR(GE2D_SRC1_CANVAS) 	///../ucode/register.h
+#define GE2D_SRC1_X_START_END 0x18aa 	///../ucode/register.h
+#define P_GE2D_SRC1_X_START_END 		CBUS_REG_ADDR(GE2D_SRC1_X_START_END) 	///../ucode/register.h
+#define GE2D_SRC1_Y_START_END 0x18ab 	///../ucode/register.h
+#define P_GE2D_SRC1_Y_START_END 		CBUS_REG_ADDR(GE2D_SRC1_Y_START_END) 	///../ucode/register.h
+#define GE2D_SRC1_LUT_ADDR 0x18ac 	///../ucode/register.h
+#define P_GE2D_SRC1_LUT_ADDR 		CBUS_REG_ADDR(GE2D_SRC1_LUT_ADDR) 	///../ucode/register.h
+#define GE2D_SRC1_LUT_DAT 0x18ad 	///../ucode/register.h
+#define P_GE2D_SRC1_LUT_DAT 		CBUS_REG_ADDR(GE2D_SRC1_LUT_DAT) 	///../ucode/register.h
+#define GE2D_SRC1_FMT_CTRL 0x18ae 	///../ucode/register.h
+#define P_GE2D_SRC1_FMT_CTRL 		CBUS_REG_ADDR(GE2D_SRC1_FMT_CTRL) 	///../ucode/register.h
+#define GE2D_SRC2_DEF_COLOR 0x18af 	///../ucode/register.h
+#define P_GE2D_SRC2_DEF_COLOR 		CBUS_REG_ADDR(GE2D_SRC2_DEF_COLOR) 	///../ucode/register.h
+#define GE2D_SRC2_CLIPX_START_END 0x18b0 	///../ucode/register.h
+#define P_GE2D_SRC2_CLIPX_START_END 		CBUS_REG_ADDR(GE2D_SRC2_CLIPX_START_END) 	///../ucode/register.h
+#define GE2D_SRC2_CLIPY_START_END 0x18b1 	///../ucode/register.h
+#define P_GE2D_SRC2_CLIPY_START_END 		CBUS_REG_ADDR(GE2D_SRC2_CLIPY_START_END) 	///../ucode/register.h
+#define GE2D_SRC2_X_START_END 0x18b2 	///../ucode/register.h
+#define P_GE2D_SRC2_X_START_END 		CBUS_REG_ADDR(GE2D_SRC2_X_START_END) 	///../ucode/register.h
+#define GE2D_SRC2_Y_START_END 0x18b3 	///../ucode/register.h
+#define P_GE2D_SRC2_Y_START_END 		CBUS_REG_ADDR(GE2D_SRC2_Y_START_END) 	///../ucode/register.h
+#define GE2D_DST_CLIPX_START_END 0x18b4 	///../ucode/register.h
+#define P_GE2D_DST_CLIPX_START_END 		CBUS_REG_ADDR(GE2D_DST_CLIPX_START_END) 	///../ucode/register.h
+#define GE2D_DST_CLIPY_START_END 0x18b5 	///../ucode/register.h
+#define P_GE2D_DST_CLIPY_START_END 		CBUS_REG_ADDR(GE2D_DST_CLIPY_START_END) 	///../ucode/register.h
+#define GE2D_DST_X_START_END 0x18b6 	///../ucode/register.h
+#define P_GE2D_DST_X_START_END 		CBUS_REG_ADDR(GE2D_DST_X_START_END) 	///../ucode/register.h
+#define GE2D_DST_Y_START_END 0x18b7 	///../ucode/register.h
+#define P_GE2D_DST_Y_START_END 		CBUS_REG_ADDR(GE2D_DST_Y_START_END) 	///../ucode/register.h
+#define GE2D_SRC2_DST_CANVAS 0x18b8 	///../ucode/register.h
+#define P_GE2D_SRC2_DST_CANVAS 		CBUS_REG_ADDR(GE2D_SRC2_DST_CANVAS) 	///../ucode/register.h
+#define GE2D_VSC_START_PHASE_STEP 0x18b9 	///../ucode/register.h
+#define P_GE2D_VSC_START_PHASE_STEP 		CBUS_REG_ADDR(GE2D_VSC_START_PHASE_STEP) 	///../ucode/register.h
+#define GE2D_VSC_PHASE_SLOPE 0x18ba 	///../ucode/register.h
+#define P_GE2D_VSC_PHASE_SLOPE 		CBUS_REG_ADDR(GE2D_VSC_PHASE_SLOPE) 	///../ucode/register.h
+#define GE2D_VSC_INI_CTRL 0x18bb 	///../ucode/register.h
+#define P_GE2D_VSC_INI_CTRL 		CBUS_REG_ADDR(GE2D_VSC_INI_CTRL) 	///../ucode/register.h
+#define GE2D_HSC_START_PHASE_STEP 0x18bc 	///../ucode/register.h
+#define P_GE2D_HSC_START_PHASE_STEP 		CBUS_REG_ADDR(GE2D_HSC_START_PHASE_STEP) 	///../ucode/register.h
+#define GE2D_HSC_PHASE_SLOPE 0x18bd 	///../ucode/register.h
+#define P_GE2D_HSC_PHASE_SLOPE 		CBUS_REG_ADDR(GE2D_HSC_PHASE_SLOPE) 	///../ucode/register.h
+#define GE2D_HSC_INI_CTRL 0x18be 	///../ucode/register.h
+#define P_GE2D_HSC_INI_CTRL 		CBUS_REG_ADDR(GE2D_HSC_INI_CTRL) 	///../ucode/register.h
+#define GE2D_HSC_ADV_CTRL 0x18bf 	///../ucode/register.h
+#define P_GE2D_HSC_ADV_CTRL 		CBUS_REG_ADDR(GE2D_HSC_ADV_CTRL) 	///../ucode/register.h
+#define GE2D_SC_MISC_CTRL 0x18c0 	///../ucode/register.h
+#define P_GE2D_SC_MISC_CTRL 		CBUS_REG_ADDR(GE2D_SC_MISC_CTRL) 	///../ucode/register.h
+#define GE2D_VSC_NRND_POINT 0x18c1 	///../ucode/register.h
+#define P_GE2D_VSC_NRND_POINT 		CBUS_REG_ADDR(GE2D_VSC_NRND_POINT) 	///../ucode/register.h
+#define GE2D_VSC_NRND_PHASE 0x18c2 	///../ucode/register.h
+#define P_GE2D_VSC_NRND_PHASE 		CBUS_REG_ADDR(GE2D_VSC_NRND_PHASE) 	///../ucode/register.h
+#define GE2D_HSC_NRND_POINT 0x18c3 	///../ucode/register.h
+#define P_GE2D_HSC_NRND_POINT 		CBUS_REG_ADDR(GE2D_HSC_NRND_POINT) 	///../ucode/register.h
+#define GE2D_HSC_NRND_PHASE 0x18c4 	///../ucode/register.h
+#define P_GE2D_HSC_NRND_PHASE 		CBUS_REG_ADDR(GE2D_HSC_NRND_PHASE) 	///../ucode/register.h
+#define GE2D_MATRIX_PRE_OFFSET 0x18c5 	///../ucode/register.h
+#define P_GE2D_MATRIX_PRE_OFFSET 		CBUS_REG_ADDR(GE2D_MATRIX_PRE_OFFSET) 	///../ucode/register.h
+#define GE2D_MATRIX_COEF00_01 0x18c6 	///../ucode/register.h
+#define P_GE2D_MATRIX_COEF00_01 		CBUS_REG_ADDR(GE2D_MATRIX_COEF00_01) 	///../ucode/register.h
+#define GE2D_MATRIX_COEF02_10 0x18c7 	///../ucode/register.h
+#define P_GE2D_MATRIX_COEF02_10 		CBUS_REG_ADDR(GE2D_MATRIX_COEF02_10) 	///../ucode/register.h
+#define GE2D_MATRIX_COEF11_12 0x18c8 	///../ucode/register.h
+#define P_GE2D_MATRIX_COEF11_12 		CBUS_REG_ADDR(GE2D_MATRIX_COEF11_12) 	///../ucode/register.h
+#define GE2D_MATRIX_COEF20_21 0x18c9 	///../ucode/register.h
+#define P_GE2D_MATRIX_COEF20_21 		CBUS_REG_ADDR(GE2D_MATRIX_COEF20_21) 	///../ucode/register.h
+#define GE2D_MATRIX_COEF22_CTRL 0x18ca 	///../ucode/register.h
+#define P_GE2D_MATRIX_COEF22_CTRL 		CBUS_REG_ADDR(GE2D_MATRIX_COEF22_CTRL) 	///../ucode/register.h
+#define GE2D_MATRIX_OFFSET 0x18cb 	///../ucode/register.h
+#define P_GE2D_MATRIX_OFFSET 		CBUS_REG_ADDR(GE2D_MATRIX_OFFSET) 	///../ucode/register.h
+#define GE2D_ALU_OP_CTRL 0x18cc 	///../ucode/register.h
+#define P_GE2D_ALU_OP_CTRL 		CBUS_REG_ADDR(GE2D_ALU_OP_CTRL) 	///../ucode/register.h
+#define GE2D_ALU_CONST_COLOR 0x18cd 	///../ucode/register.h
+#define P_GE2D_ALU_CONST_COLOR 		CBUS_REG_ADDR(GE2D_ALU_CONST_COLOR) 	///../ucode/register.h
+#define GE2D_SRC1_KEY 0x18ce 	///../ucode/register.h
+#define P_GE2D_SRC1_KEY 		CBUS_REG_ADDR(GE2D_SRC1_KEY) 	///../ucode/register.h
+#define GE2D_SRC1_KEY_MASK 0x18cf 	///../ucode/register.h
+#define P_GE2D_SRC1_KEY_MASK 		CBUS_REG_ADDR(GE2D_SRC1_KEY_MASK) 	///../ucode/register.h
+#define GE2D_SRC2_KEY 0x18d0 	///../ucode/register.h
+#define P_GE2D_SRC2_KEY 		CBUS_REG_ADDR(GE2D_SRC2_KEY) 	///../ucode/register.h
+#define GE2D_SRC2_KEY_MASK 0x18d1 	///../ucode/register.h
+#define P_GE2D_SRC2_KEY_MASK 		CBUS_REG_ADDR(GE2D_SRC2_KEY_MASK) 	///../ucode/register.h
+#define GE2D_DST_BITMASK 0x18d2 	///../ucode/register.h
+#define P_GE2D_DST_BITMASK 		CBUS_REG_ADDR(GE2D_DST_BITMASK) 	///../ucode/register.h
+#define GE2D_DP_ONOFF_CTRL 0x18d3 	///../ucode/register.h
+#define P_GE2D_DP_ONOFF_CTRL 		CBUS_REG_ADDR(GE2D_DP_ONOFF_CTRL) 	///../ucode/register.h
+#define GE2D_SCALE_COEF_IDX 0x18d4 	///../ucode/register.h
+#define P_GE2D_SCALE_COEF_IDX 		CBUS_REG_ADDR(GE2D_SCALE_COEF_IDX) 	///../ucode/register.h
+#define GE2D_SCALE_COEF 0x18d5 	///../ucode/register.h
+#define P_GE2D_SCALE_COEF 		CBUS_REG_ADDR(GE2D_SCALE_COEF) 	///../ucode/register.h
+#define GE2D_SRC_OUTSIDE_ALPHA 0x18d6 	///../ucode/register.h
+#define P_GE2D_SRC_OUTSIDE_ALPHA 		CBUS_REG_ADDR(GE2D_SRC_OUTSIDE_ALPHA) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_CTRL0 0x18d8 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_CTRL0 		CBUS_REG_ADDR(GE2D_ANTIFLICK_CTRL0) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_CTRL1 0x18d9 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_CTRL1 		CBUS_REG_ADDR(GE2D_ANTIFLICK_CTRL1) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_COLOR_FILT0 0x18da 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_COLOR_FILT0 		CBUS_REG_ADDR(GE2D_ANTIFLICK_COLOR_FILT0) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_COLOR_FILT1 0x18db 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_COLOR_FILT1 		CBUS_REG_ADDR(GE2D_ANTIFLICK_COLOR_FILT1) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_COLOR_FILT2 0x18dc 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_COLOR_FILT2 		CBUS_REG_ADDR(GE2D_ANTIFLICK_COLOR_FILT2) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_COLOR_FILT3 0x18dd 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_COLOR_FILT3 		CBUS_REG_ADDR(GE2D_ANTIFLICK_COLOR_FILT3) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_ALPHA_FILT0 0x18de 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_ALPHA_FILT0 		CBUS_REG_ADDR(GE2D_ANTIFLICK_ALPHA_FILT0) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_ALPHA_FILT1 0x18df 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_ALPHA_FILT1 		CBUS_REG_ADDR(GE2D_ANTIFLICK_ALPHA_FILT1) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_ALPHA_FILT2 0x18e0 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_ALPHA_FILT2 		CBUS_REG_ADDR(GE2D_ANTIFLICK_ALPHA_FILT2) 	///../ucode/register.h
+#define GE2D_ANTIFLICK_ALPHA_FILT3 0x18e1 	///../ucode/register.h
+#define P_GE2D_ANTIFLICK_ALPHA_FILT3 		CBUS_REG_ADDR(GE2D_ANTIFLICK_ALPHA_FILT3) 	///../ucode/register.h
+#define GE2D_SRC1_RANGE_MAP_Y_CTRL 0x18e3 	///../ucode/register.h
+#define P_GE2D_SRC1_RANGE_MAP_Y_CTRL 		CBUS_REG_ADDR(GE2D_SRC1_RANGE_MAP_Y_CTRL) 	///../ucode/register.h
+#define GE2D_SRC1_RANGE_MAP_CB_CTRL 0x18e4 	///../ucode/register.h
+#define P_GE2D_SRC1_RANGE_MAP_CB_CTRL 		CBUS_REG_ADDR(GE2D_SRC1_RANGE_MAP_CB_CTRL) 	///../ucode/register.h
+#define GE2D_SRC1_RANGE_MAP_CR_CTRL 0x18e5 	///../ucode/register.h
+#define P_GE2D_SRC1_RANGE_MAP_CR_CTRL 		CBUS_REG_ADDR(GE2D_SRC1_RANGE_MAP_CR_CTRL) 	///../ucode/register.h
+#define GE2D_ARB_BURST_NUM 0x18e6 	///../ucode/register.h
+#define P_GE2D_ARB_BURST_NUM 		CBUS_REG_ADDR(GE2D_ARB_BURST_NUM) 	///../ucode/register.h
+#define GE2D_TID_TOKEN 0x18e7 	///../ucode/register.h
+#define P_GE2D_TID_TOKEN 		CBUS_REG_ADDR(GE2D_TID_TOKEN) 	///../ucode/register.h
+#define GE2D_GEN_CTRL3 0x18e8 	///../ucode/register.h
+#define P_GE2D_GEN_CTRL3 		CBUS_REG_ADDR(GE2D_GEN_CTRL3) 	///../ucode/register.h
+#define GE2D_STATUS2 0x18e9 	///../ucode/register.h
+#define P_GE2D_STATUS2 		CBUS_REG_ADDR(GE2D_STATUS2) 	///../ucode/register.h
+#define CSI2_CLK_RESET 0x2a00 	///../ucode/register.h
+#define P_CSI2_CLK_RESET 		CBUS_REG_ADDR(CSI2_CLK_RESET) 	///../ucode/register.h
+#define CSI2_GEN_CTRL0 0x2a01 	///../ucode/register.h
+#define P_CSI2_GEN_CTRL0 		CBUS_REG_ADDR(CSI2_GEN_CTRL0) 	///../ucode/register.h
+#define CSI2_FORCE_PIC_SIZE 0x2a02 	///../ucode/register.h
+#define P_CSI2_FORCE_PIC_SIZE 		CBUS_REG_ADDR(CSI2_FORCE_PIC_SIZE) 	///../ucode/register.h
+#define CSI2_DDR_START_ADDR 0x2a03 	///../ucode/register.h
+#define P_CSI2_DDR_START_ADDR 		CBUS_REG_ADDR(CSI2_DDR_START_ADDR) 	///../ucode/register.h
+#define CSI2_DDR_END_ADDR 0x2a04 	///../ucode/register.h
+#define P_CSI2_DDR_END_ADDR 		CBUS_REG_ADDR(CSI2_DDR_END_ADDR) 	///../ucode/register.h
+#define CSI2_INTERRUPT_CTRL_STAT 0x2a05 	///../ucode/register.h
+#define P_CSI2_INTERRUPT_CTRL_STAT 		CBUS_REG_ADDR(CSI2_INTERRUPT_CTRL_STAT) 	///../ucode/register.h
+#define CSI2_PIC_SIZE_STAT 0x2a06 	///../ucode/register.h
+#define P_CSI2_PIC_SIZE_STAT 		CBUS_REG_ADDR(CSI2_PIC_SIZE_STAT) 	///../ucode/register.h
+#define CSI2_GEN_STAT0 0x2a07 	///../ucode/register.h
+#define P_CSI2_GEN_STAT0 		CBUS_REG_ADDR(CSI2_GEN_STAT0) 	///../ucode/register.h
+#define CSI2_DDR_WRPT_STAT 0x2a08 	///../ucode/register.h
+#define P_CSI2_DDR_WRPT_STAT 		CBUS_REG_ADDR(CSI2_DDR_WRPT_STAT) 	///../ucode/register.h
+#define CSI2_FS_EMBED_DDR_START 0x2a09 	///../ucode/register.h
+#define P_CSI2_FS_EMBED_DDR_START 		CBUS_REG_ADDR(CSI2_FS_EMBED_DDR_START) 	///../ucode/register.h
+#define CSI2_FS_EMBED_DDR_END 0x2a0a 	///../ucode/register.h
+#define P_CSI2_FS_EMBED_DDR_END 		CBUS_REG_ADDR(CSI2_FS_EMBED_DDR_END) 	///../ucode/register.h
+#define CSI2_FE_EMBED_DDR_START 0x2a0b 	///../ucode/register.h
+#define P_CSI2_FE_EMBED_DDR_START 		CBUS_REG_ADDR(CSI2_FE_EMBED_DDR_START) 	///../ucode/register.h
+#define CSI2_FE_EMBED_DDR_END 0x2a0c 	///../ucode/register.h
+#define P_CSI2_FE_EMBED_DDR_END 		CBUS_REG_ADDR(CSI2_FE_EMBED_DDR_END) 	///../ucode/register.h
+#define CSI2_MEM_PIXEL_BYTE_CNT 0x2a0d 	///../ucode/register.h
+#define P_CSI2_MEM_PIXEL_BYTE_CNT 		CBUS_REG_ADDR(CSI2_MEM_PIXEL_BYTE_CNT) 	///../ucode/register.h
+#define CSI2_MEM_PIXEL_LINE_CNT 0x2a0e 	///../ucode/register.h
+#define P_CSI2_MEM_PIXEL_LINE_CNT 		CBUS_REG_ADDR(CSI2_MEM_PIXEL_LINE_CNT) 	///../ucode/register.h
+#define CSI2_PIXEL_DDR_START 0x2a0f 	///../ucode/register.h
+#define P_CSI2_PIXEL_DDR_START 		CBUS_REG_ADDR(CSI2_PIXEL_DDR_START) 	///../ucode/register.h
+#define CSI2_PIXEL_DDR_END 0x2a10 	///../ucode/register.h
+#define P_CSI2_PIXEL_DDR_END 		CBUS_REG_ADDR(CSI2_PIXEL_DDR_END) 	///../ucode/register.h
+#define CSI2_USER_DDR_START 0x2a11 	///../ucode/register.h
+#define P_CSI2_USER_DDR_START 		CBUS_REG_ADDR(CSI2_USER_DDR_START) 	///../ucode/register.h
+#define CSI2_USER_DDR_END 0x2a12 	///../ucode/register.h
+#define P_CSI2_USER_DDR_END 		CBUS_REG_ADDR(CSI2_USER_DDR_END) 	///../ucode/register.h
+#define CSI2_DATA_TYPE_IN_MEM 0x2a13 	///../ucode/register.h
+#define P_CSI2_DATA_TYPE_IN_MEM 		CBUS_REG_ADDR(CSI2_DATA_TYPE_IN_MEM) 	///../ucode/register.h
+#define CSI2_ERR_STAT0 0x2a14 	///../ucode/register.h
+#define P_CSI2_ERR_STAT0 		CBUS_REG_ADDR(CSI2_ERR_STAT0) 	///../ucode/register.h
+#define VIU_ADDR_START 0x1a00 	///../ucode/register.h
+#define P_VIU_ADDR_START 		CBUS_REG_ADDR(VIU_ADDR_START) 	///../ucode/register.h
+#define VIU_ADDR_END 0x1aff 	///../ucode/register.h
+#define P_VIU_ADDR_END 		CBUS_REG_ADDR(VIU_ADDR_END) 	///../ucode/register.h
+#define VIU_SW_RESET 0x1a01 	///../ucode/register.h
+#define P_VIU_SW_RESET 		CBUS_REG_ADDR(VIU_SW_RESET) 	///../ucode/register.h
+#define VIU_MISC_CTRL0 0x1a06 	///../ucode/register.h
+#define P_VIU_MISC_CTRL0 		CBUS_REG_ADDR(VIU_MISC_CTRL0) 	///../ucode/register.h
+#define D2D3_INTF_LENGTH 0x1a08 	///../ucode/register.h
+#define P_D2D3_INTF_LENGTH 		CBUS_REG_ADDR(D2D3_INTF_LENGTH) 	///../ucode/register.h
+#define D2D3_INTF_CTRL0 0x1a09 	///../ucode/register.h
+#define P_D2D3_INTF_CTRL0 		CBUS_REG_ADDR(D2D3_INTF_CTRL0) 	///../ucode/register.h
+#define VIU_OSD1_CTRL_STAT 0x1a10 	///../ucode/register.h
+#define P_VIU_OSD1_CTRL_STAT 		CBUS_REG_ADDR(VIU_OSD1_CTRL_STAT) 	///../ucode/register.h
+#define VIU_OSD1_CTRL_STAT2 0x1a2d 	///../ucode/register.h
+#define P_VIU_OSD1_CTRL_STAT2 		CBUS_REG_ADDR(VIU_OSD1_CTRL_STAT2) 	///../ucode/register.h
+#define VIU_OSD1_COLOR_ADDR 0x1a11 	///../ucode/register.h
+#define P_VIU_OSD1_COLOR_ADDR 		CBUS_REG_ADDR(VIU_OSD1_COLOR_ADDR) 	///../ucode/register.h
+#define VIU_OSD1_COLOR 0x1a12 	///../ucode/register.h
+#define P_VIU_OSD1_COLOR 		CBUS_REG_ADDR(VIU_OSD1_COLOR) 	///../ucode/register.h
+#define VIU_OSD1_TCOLOR_AG0 0x1a17 	///../ucode/register.h
+#define P_VIU_OSD1_TCOLOR_AG0 		CBUS_REG_ADDR(VIU_OSD1_TCOLOR_AG0) 	///../ucode/register.h
+#define VIU_OSD1_TCOLOR_AG1 0x1a18 	///../ucode/register.h
+#define P_VIU_OSD1_TCOLOR_AG1 		CBUS_REG_ADDR(VIU_OSD1_TCOLOR_AG1) 	///../ucode/register.h
+#define VIU_OSD1_TCOLOR_AG2 0x1a19 	///../ucode/register.h
+#define P_VIU_OSD1_TCOLOR_AG2 		CBUS_REG_ADDR(VIU_OSD1_TCOLOR_AG2) 	///../ucode/register.h
+#define VIU_OSD1_TCOLOR_AG3 0x1a1a 	///../ucode/register.h
+#define P_VIU_OSD1_TCOLOR_AG3 		CBUS_REG_ADDR(VIU_OSD1_TCOLOR_AG3) 	///../ucode/register.h
+#define VIU_OSD1_BLK0_CFG_W0 0x1a1b 	///../ucode/register.h
+#define P_VIU_OSD1_BLK0_CFG_W0 		CBUS_REG_ADDR(VIU_OSD1_BLK0_CFG_W0) 	///../ucode/register.h
+#define VIU_OSD1_BLK1_CFG_W0 0x1a1f 	///../ucode/register.h
+#define P_VIU_OSD1_BLK1_CFG_W0 		CBUS_REG_ADDR(VIU_OSD1_BLK1_CFG_W0) 	///../ucode/register.h
+#define VIU_OSD1_BLK2_CFG_W0 0x1a23 	///../ucode/register.h
+#define P_VIU_OSD1_BLK2_CFG_W0 		CBUS_REG_ADDR(VIU_OSD1_BLK2_CFG_W0) 	///../ucode/register.h
+#define VIU_OSD1_BLK3_CFG_W0 0x1a27 	///../ucode/register.h
+#define P_VIU_OSD1_BLK3_CFG_W0 		CBUS_REG_ADDR(VIU_OSD1_BLK3_CFG_W0) 	///../ucode/register.h
+#define VIU_OSD1_BLK0_CFG_W1 0x1a1c 	///../ucode/register.h
+#define P_VIU_OSD1_BLK0_CFG_W1 		CBUS_REG_ADDR(VIU_OSD1_BLK0_CFG_W1) 	///../ucode/register.h
+#define VIU_OSD1_BLK1_CFG_W1 0x1a20 	///../ucode/register.h
+#define P_VIU_OSD1_BLK1_CFG_W1 		CBUS_REG_ADDR(VIU_OSD1_BLK1_CFG_W1) 	///../ucode/register.h
+#define VIU_OSD1_BLK2_CFG_W1 0x1a24 	///../ucode/register.h
+#define P_VIU_OSD1_BLK2_CFG_W1 		CBUS_REG_ADDR(VIU_OSD1_BLK2_CFG_W1) 	///../ucode/register.h
+#define VIU_OSD1_BLK3_CFG_W1 0x1a28 	///../ucode/register.h
+#define P_VIU_OSD1_BLK3_CFG_W1 		CBUS_REG_ADDR(VIU_OSD1_BLK3_CFG_W1) 	///../ucode/register.h
+#define VIU_OSD1_BLK0_CFG_W2 0x1a1d 	///../ucode/register.h
+#define P_VIU_OSD1_BLK0_CFG_W2 		CBUS_REG_ADDR(VIU_OSD1_BLK0_CFG_W2) 	///../ucode/register.h
+#define VIU_OSD1_BLK1_CFG_W2 0x1a21 	///../ucode/register.h
+#define P_VIU_OSD1_BLK1_CFG_W2 		CBUS_REG_ADDR(VIU_OSD1_BLK1_CFG_W2) 	///../ucode/register.h
+#define VIU_OSD1_BLK2_CFG_W2 0x1a25 	///../ucode/register.h
+#define P_VIU_OSD1_BLK2_CFG_W2 		CBUS_REG_ADDR(VIU_OSD1_BLK2_CFG_W2) 	///../ucode/register.h
+#define VIU_OSD1_BLK3_CFG_W2 0x1a29 	///../ucode/register.h
+#define P_VIU_OSD1_BLK3_CFG_W2 		CBUS_REG_ADDR(VIU_OSD1_BLK3_CFG_W2) 	///../ucode/register.h
+#define VIU_OSD1_BLK0_CFG_W3 0x1a1e 	///../ucode/register.h
+#define P_VIU_OSD1_BLK0_CFG_W3 		CBUS_REG_ADDR(VIU_OSD1_BLK0_CFG_W3) 	///../ucode/register.h
+#define VIU_OSD1_BLK1_CFG_W3 0x1a22 	///../ucode/register.h
+#define P_VIU_OSD1_BLK1_CFG_W3 		CBUS_REG_ADDR(VIU_OSD1_BLK1_CFG_W3) 	///../ucode/register.h
+#define VIU_OSD1_BLK2_CFG_W3 0x1a26 	///../ucode/register.h
+#define P_VIU_OSD1_BLK2_CFG_W3 		CBUS_REG_ADDR(VIU_OSD1_BLK2_CFG_W3) 	///../ucode/register.h
+#define VIU_OSD1_BLK3_CFG_W3 0x1a2a 	///../ucode/register.h
+#define P_VIU_OSD1_BLK3_CFG_W3 		CBUS_REG_ADDR(VIU_OSD1_BLK3_CFG_W3) 	///../ucode/register.h
+#define VIU_OSD1_BLK0_CFG_W4 0x1a13 	///../ucode/register.h
+#define P_VIU_OSD1_BLK0_CFG_W4 		CBUS_REG_ADDR(VIU_OSD1_BLK0_CFG_W4) 	///../ucode/register.h
+#define VIU_OSD1_BLK1_CFG_W4 0x1a14 	///../ucode/register.h
+#define P_VIU_OSD1_BLK1_CFG_W4 		CBUS_REG_ADDR(VIU_OSD1_BLK1_CFG_W4) 	///../ucode/register.h
+#define VIU_OSD1_BLK2_CFG_W4 0x1a15 	///../ucode/register.h
+#define P_VIU_OSD1_BLK2_CFG_W4 		CBUS_REG_ADDR(VIU_OSD1_BLK2_CFG_W4) 	///../ucode/register.h
+#define VIU_OSD1_BLK3_CFG_W4 0x1a16 	///../ucode/register.h
+#define P_VIU_OSD1_BLK3_CFG_W4 		CBUS_REG_ADDR(VIU_OSD1_BLK3_CFG_W4) 	///../ucode/register.h
+#define VIU_OSD1_FIFO_CTRL_STAT 0x1a2b 	///../ucode/register.h
+#define P_VIU_OSD1_FIFO_CTRL_STAT 		CBUS_REG_ADDR(VIU_OSD1_FIFO_CTRL_STAT) 	///../ucode/register.h
+#define VIU_OSD1_TEST_RDDATA 0x1a2c 	///../ucode/register.h
+#define P_VIU_OSD1_TEST_RDDATA 		CBUS_REG_ADDR(VIU_OSD1_TEST_RDDATA) 	///../ucode/register.h
+#define VIU_OSD2_CTRL_STAT 0x1a30 	///../ucode/register.h
+#define P_VIU_OSD2_CTRL_STAT 		CBUS_REG_ADDR(VIU_OSD2_CTRL_STAT) 	///../ucode/register.h
+#define VIU_OSD2_CTRL_STAT2 0x1a4d 	///../ucode/register.h
+#define P_VIU_OSD2_CTRL_STAT2 		CBUS_REG_ADDR(VIU_OSD2_CTRL_STAT2) 	///../ucode/register.h
+#define VIU_OSD2_COLOR_ADDR 0x1a31 	///../ucode/register.h
+#define P_VIU_OSD2_COLOR_ADDR 		CBUS_REG_ADDR(VIU_OSD2_COLOR_ADDR) 	///../ucode/register.h
+#define VIU_OSD2_COLOR 0x1a32 	///../ucode/register.h
+#define P_VIU_OSD2_COLOR 		CBUS_REG_ADDR(VIU_OSD2_COLOR) 	///../ucode/register.h
+#define VIU_OSD2_HL1_H_START_END 0x1a33 	///../ucode/register.h
+#define P_VIU_OSD2_HL1_H_START_END 		CBUS_REG_ADDR(VIU_OSD2_HL1_H_START_END) 	///../ucode/register.h
+#define VIU_OSD2_HL1_V_START_END 0x1a34 	///../ucode/register.h
+#define P_VIU_OSD2_HL1_V_START_END 		CBUS_REG_ADDR(VIU_OSD2_HL1_V_START_END) 	///../ucode/register.h
+#define VIU_OSD2_HL2_H_START_END 0x1a35 	///../ucode/register.h
+#define P_VIU_OSD2_HL2_H_START_END 		CBUS_REG_ADDR(VIU_OSD2_HL2_H_START_END) 	///../ucode/register.h
+#define VIU_OSD2_HL2_V_START_END 0x1a36 	///../ucode/register.h
+#define P_VIU_OSD2_HL2_V_START_END 		CBUS_REG_ADDR(VIU_OSD2_HL2_V_START_END) 	///../ucode/register.h
+#define VIU_OSD2_TCOLOR_AG0 0x1a37 	///../ucode/register.h
+#define P_VIU_OSD2_TCOLOR_AG0 		CBUS_REG_ADDR(VIU_OSD2_TCOLOR_AG0) 	///../ucode/register.h
+#define VIU_OSD2_TCOLOR_AG1 0x1a38 	///../ucode/register.h
+#define P_VIU_OSD2_TCOLOR_AG1 		CBUS_REG_ADDR(VIU_OSD2_TCOLOR_AG1) 	///../ucode/register.h
+#define VIU_OSD2_TCOLOR_AG2 0x1a39 	///../ucode/register.h
+#define P_VIU_OSD2_TCOLOR_AG2 		CBUS_REG_ADDR(VIU_OSD2_TCOLOR_AG2) 	///../ucode/register.h
+#define VIU_OSD2_TCOLOR_AG3 0x1a3a 	///../ucode/register.h
+#define P_VIU_OSD2_TCOLOR_AG3 		CBUS_REG_ADDR(VIU_OSD2_TCOLOR_AG3) 	///../ucode/register.h
+#define VIU_OSD2_BLK0_CFG_W0 0x1a3b 	///../ucode/register.h
+#define P_VIU_OSD2_BLK0_CFG_W0 		CBUS_REG_ADDR(VIU_OSD2_BLK0_CFG_W0) 	///../ucode/register.h
+#define VIU_OSD2_BLK1_CFG_W0 0x1a3f 	///../ucode/register.h
+#define P_VIU_OSD2_BLK1_CFG_W0 		CBUS_REG_ADDR(VIU_OSD2_BLK1_CFG_W0) 	///../ucode/register.h
+#define VIU_OSD2_BLK2_CFG_W0 0x1a43 	///../ucode/register.h
+#define P_VIU_OSD2_BLK2_CFG_W0 		CBUS_REG_ADDR(VIU_OSD2_BLK2_CFG_W0) 	///../ucode/register.h
+#define VIU_OSD2_BLK3_CFG_W0 0x1a47 	///../ucode/register.h
+#define P_VIU_OSD2_BLK3_CFG_W0 		CBUS_REG_ADDR(VIU_OSD2_BLK3_CFG_W0) 	///../ucode/register.h
+#define VIU_OSD2_BLK0_CFG_W1 0x1a3c 	///../ucode/register.h
+#define P_VIU_OSD2_BLK0_CFG_W1 		CBUS_REG_ADDR(VIU_OSD2_BLK0_CFG_W1) 	///../ucode/register.h
+#define VIU_OSD2_BLK1_CFG_W1 0x1a40 	///../ucode/register.h
+#define P_VIU_OSD2_BLK1_CFG_W1 		CBUS_REG_ADDR(VIU_OSD2_BLK1_CFG_W1) 	///../ucode/register.h
+#define VIU_OSD2_BLK2_CFG_W1 0x1a44 	///../ucode/register.h
+#define P_VIU_OSD2_BLK2_CFG_W1 		CBUS_REG_ADDR(VIU_OSD2_BLK2_CFG_W1) 	///../ucode/register.h
+#define VIU_OSD2_BLK3_CFG_W1 0x1a48 	///../ucode/register.h
+#define P_VIU_OSD2_BLK3_CFG_W1 		CBUS_REG_ADDR(VIU_OSD2_BLK3_CFG_W1) 	///../ucode/register.h
+#define VIU_OSD2_BLK0_CFG_W2 0x1a3d 	///../ucode/register.h
+#define P_VIU_OSD2_BLK0_CFG_W2 		CBUS_REG_ADDR(VIU_OSD2_BLK0_CFG_W2) 	///../ucode/register.h
+#define VIU_OSD2_BLK1_CFG_W2 0x1a41 	///../ucode/register.h
+#define P_VIU_OSD2_BLK1_CFG_W2 		CBUS_REG_ADDR(VIU_OSD2_BLK1_CFG_W2) 	///../ucode/register.h
+#define VIU_OSD2_BLK2_CFG_W2 0x1a45 	///../ucode/register.h
+#define P_VIU_OSD2_BLK2_CFG_W2 		CBUS_REG_ADDR(VIU_OSD2_BLK2_CFG_W2) 	///../ucode/register.h
+#define VIU_OSD2_BLK3_CFG_W2 0x1a49 	///../ucode/register.h
+#define P_VIU_OSD2_BLK3_CFG_W2 		CBUS_REG_ADDR(VIU_OSD2_BLK3_CFG_W2) 	///../ucode/register.h
+#define VIU_OSD2_BLK0_CFG_W3 0x1a3e 	///../ucode/register.h
+#define P_VIU_OSD2_BLK0_CFG_W3 		CBUS_REG_ADDR(VIU_OSD2_BLK0_CFG_W3) 	///../ucode/register.h
+#define VIU_OSD2_BLK1_CFG_W3 0x1a42 	///../ucode/register.h
+#define P_VIU_OSD2_BLK1_CFG_W3 		CBUS_REG_ADDR(VIU_OSD2_BLK1_CFG_W3) 	///../ucode/register.h
+#define VIU_OSD2_BLK2_CFG_W3 0x1a46 	///../ucode/register.h
+#define P_VIU_OSD2_BLK2_CFG_W3 		CBUS_REG_ADDR(VIU_OSD2_BLK2_CFG_W3) 	///../ucode/register.h
+#define VIU_OSD2_BLK3_CFG_W3 0x1a4a 	///../ucode/register.h
+#define P_VIU_OSD2_BLK3_CFG_W3 		CBUS_REG_ADDR(VIU_OSD2_BLK3_CFG_W3) 	///../ucode/register.h
+#define VIU_OSD2_BLK0_CFG_W4 0x1a64 	///../ucode/register.h
+#define P_VIU_OSD2_BLK0_CFG_W4 		CBUS_REG_ADDR(VIU_OSD2_BLK0_CFG_W4) 	///../ucode/register.h
+#define VIU_OSD2_BLK1_CFG_W4 0x1a65 	///../ucode/register.h
+#define P_VIU_OSD2_BLK1_CFG_W4 		CBUS_REG_ADDR(VIU_OSD2_BLK1_CFG_W4) 	///../ucode/register.h
+#define VIU_OSD2_BLK2_CFG_W4 0x1a66 	///../ucode/register.h
+#define P_VIU_OSD2_BLK2_CFG_W4 		CBUS_REG_ADDR(VIU_OSD2_BLK2_CFG_W4) 	///../ucode/register.h
+#define VIU_OSD2_BLK3_CFG_W4 0x1a67 	///../ucode/register.h
+#define P_VIU_OSD2_BLK3_CFG_W4 		CBUS_REG_ADDR(VIU_OSD2_BLK3_CFG_W4) 	///../ucode/register.h
+#define VIU_OSD2_FIFO_CTRL_STAT 0x1a4b 	///../ucode/register.h
+#define P_VIU_OSD2_FIFO_CTRL_STAT 		CBUS_REG_ADDR(VIU_OSD2_FIFO_CTRL_STAT) 	///../ucode/register.h
+#define VIU_OSD2_TEST_RDDATA 0x1a4c 	///../ucode/register.h
+#define P_VIU_OSD2_TEST_RDDATA 		CBUS_REG_ADDR(VIU_OSD2_TEST_RDDATA) 	///../ucode/register.h
+#define VD1_IF0_GEN_REG 0x1a50 	///../ucode/register.h
+#define P_VD1_IF0_GEN_REG 		CBUS_REG_ADDR(VD1_IF0_GEN_REG) 	///../ucode/register.h
+#define VD1_IF0_CANVAS0 0x1a51 	///../ucode/register.h
+#define P_VD1_IF0_CANVAS0 		CBUS_REG_ADDR(VD1_IF0_CANVAS0) 	///../ucode/register.h
+#define VD1_IF0_CANVAS1 0x1a52 	///../ucode/register.h
+#define P_VD1_IF0_CANVAS1 		CBUS_REG_ADDR(VD1_IF0_CANVAS1) 	///../ucode/register.h
+#define VD1_IF0_LUMA_X0 0x1a53 	///../ucode/register.h
+#define P_VD1_IF0_LUMA_X0 		CBUS_REG_ADDR(VD1_IF0_LUMA_X0) 	///../ucode/register.h
+#define VD1_IF0_LUMA_Y0 0x1a54 	///../ucode/register.h
+#define P_VD1_IF0_LUMA_Y0 		CBUS_REG_ADDR(VD1_IF0_LUMA_Y0) 	///../ucode/register.h
+#define VD1_IF0_CHROMA_X0 0x1a55 	///../ucode/register.h
+#define P_VD1_IF0_CHROMA_X0 		CBUS_REG_ADDR(VD1_IF0_CHROMA_X0) 	///../ucode/register.h
+#define VD1_IF0_CHROMA_Y0 0x1a56 	///../ucode/register.h
+#define P_VD1_IF0_CHROMA_Y0 		CBUS_REG_ADDR(VD1_IF0_CHROMA_Y0) 	///../ucode/register.h
+#define VD1_IF0_LUMA_X1 0x1a57 	///../ucode/register.h
+#define P_VD1_IF0_LUMA_X1 		CBUS_REG_ADDR(VD1_IF0_LUMA_X1) 	///../ucode/register.h
+#define VD1_IF0_LUMA_Y1 0x1a58 	///../ucode/register.h
+#define P_VD1_IF0_LUMA_Y1 		CBUS_REG_ADDR(VD1_IF0_LUMA_Y1) 	///../ucode/register.h
+#define VD1_IF0_CHROMA_X1 0x1a59 	///../ucode/register.h
+#define P_VD1_IF0_CHROMA_X1 		CBUS_REG_ADDR(VD1_IF0_CHROMA_X1) 	///../ucode/register.h
+#define VD1_IF0_CHROMA_Y1 0x1a5a 	///../ucode/register.h
+#define P_VD1_IF0_CHROMA_Y1 		CBUS_REG_ADDR(VD1_IF0_CHROMA_Y1) 	///../ucode/register.h
+#define VD1_IF0_RPT_LOOP 0x1a5b 	///../ucode/register.h
+#define P_VD1_IF0_RPT_LOOP 		CBUS_REG_ADDR(VD1_IF0_RPT_LOOP) 	///../ucode/register.h
+#define VD1_IF0_LUMA0_RPT_PAT 0x1a5c 	///../ucode/register.h
+#define P_VD1_IF0_LUMA0_RPT_PAT 		CBUS_REG_ADDR(VD1_IF0_LUMA0_RPT_PAT) 	///../ucode/register.h
+#define VD1_IF0_CHROMA0_RPT_PAT 0x1a5d 	///../ucode/register.h
+#define P_VD1_IF0_CHROMA0_RPT_PAT 		CBUS_REG_ADDR(VD1_IF0_CHROMA0_RPT_PAT) 	///../ucode/register.h
+#define VD1_IF0_LUMA1_RPT_PAT 0x1a5e 	///../ucode/register.h
+#define P_VD1_IF0_LUMA1_RPT_PAT 		CBUS_REG_ADDR(VD1_IF0_LUMA1_RPT_PAT) 	///../ucode/register.h
+#define VD1_IF0_CHROMA1_RPT_PAT 0x1a5f 	///../ucode/register.h
+#define P_VD1_IF0_CHROMA1_RPT_PAT 		CBUS_REG_ADDR(VD1_IF0_CHROMA1_RPT_PAT) 	///../ucode/register.h
+#define VD1_IF0_LUMA_PSEL 0x1a60 	///../ucode/register.h
+#define P_VD1_IF0_LUMA_PSEL 		CBUS_REG_ADDR(VD1_IF0_LUMA_PSEL) 	///../ucode/register.h
+#define VD1_IF0_CHROMA_PSEL 0x1a61 	///../ucode/register.h
+#define P_VD1_IF0_CHROMA_PSEL 		CBUS_REG_ADDR(VD1_IF0_CHROMA_PSEL) 	///../ucode/register.h
+#define VD1_IF0_DUMMY_PIXEL 0x1a62 	///../ucode/register.h
+#define P_VD1_IF0_DUMMY_PIXEL 		CBUS_REG_ADDR(VD1_IF0_DUMMY_PIXEL) 	///../ucode/register.h
+#define VD1_IF0_LUMA_FIFO_SIZE 0x1a63 	///../ucode/register.h
+#define P_VD1_IF0_LUMA_FIFO_SIZE 		CBUS_REG_ADDR(VD1_IF0_LUMA_FIFO_SIZE) 	///../ucode/register.h
+#define VD1_IF0_RANGE_MAP_Y 0x1a6a 	///../ucode/register.h
+#define P_VD1_IF0_RANGE_MAP_Y 		CBUS_REG_ADDR(VD1_IF0_RANGE_MAP_Y) 	///../ucode/register.h
+#define VD1_IF0_RANGE_MAP_CB 0x1a6b 	///../ucode/register.h
+#define P_VD1_IF0_RANGE_MAP_CB 		CBUS_REG_ADDR(VD1_IF0_RANGE_MAP_CB) 	///../ucode/register.h
+#define VD1_IF0_RANGE_MAP_CR 0x1a6c 	///../ucode/register.h
+#define P_VD1_IF0_RANGE_MAP_CR 		CBUS_REG_ADDR(VD1_IF0_RANGE_MAP_CR) 	///../ucode/register.h
+#define VD1_IF0_GEN_REG2 0x1a6d 	///../ucode/register.h
+#define P_VD1_IF0_GEN_REG2 		CBUS_REG_ADDR(VD1_IF0_GEN_REG2) 	///../ucode/register.h
+#define VIU_VD1_FMT_CTRL 0x1a68 	///../ucode/register.h
+#define P_VIU_VD1_FMT_CTRL 		CBUS_REG_ADDR(VIU_VD1_FMT_CTRL) 	///../ucode/register.h
+#define VIU_VD1_FMT_W 0x1a69 	///../ucode/register.h
+#define P_VIU_VD1_FMT_W 		CBUS_REG_ADDR(VIU_VD1_FMT_W) 	///../ucode/register.h
+#define VD2_IF0_GEN_REG 0x1a70 	///../ucode/register.h
+#define P_VD2_IF0_GEN_REG 		CBUS_REG_ADDR(VD2_IF0_GEN_REG) 	///../ucode/register.h
+#define VD2_IF0_CANVAS0 0x1a71 	///../ucode/register.h
+#define P_VD2_IF0_CANVAS0 		CBUS_REG_ADDR(VD2_IF0_CANVAS0) 	///../ucode/register.h
+#define VD2_IF0_CANVAS1 0x1a72 	///../ucode/register.h
+#define P_VD2_IF0_CANVAS1 		CBUS_REG_ADDR(VD2_IF0_CANVAS1) 	///../ucode/register.h
+#define VD2_IF0_LUMA_X0 0x1a73 	///../ucode/register.h
+#define P_VD2_IF0_LUMA_X0 		CBUS_REG_ADDR(VD2_IF0_LUMA_X0) 	///../ucode/register.h
+#define VD2_IF0_LUMA_Y0 0x1a74 	///../ucode/register.h
+#define P_VD2_IF0_LUMA_Y0 		CBUS_REG_ADDR(VD2_IF0_LUMA_Y0) 	///../ucode/register.h
+#define VD2_IF0_CHROMA_X0 0x1a75 	///../ucode/register.h
+#define P_VD2_IF0_CHROMA_X0 		CBUS_REG_ADDR(VD2_IF0_CHROMA_X0) 	///../ucode/register.h
+#define VD2_IF0_CHROMA_Y0 0x1a76 	///../ucode/register.h
+#define P_VD2_IF0_CHROMA_Y0 		CBUS_REG_ADDR(VD2_IF0_CHROMA_Y0) 	///../ucode/register.h
+#define VD2_IF0_LUMA_X1 0x1a77 	///../ucode/register.h
+#define P_VD2_IF0_LUMA_X1 		CBUS_REG_ADDR(VD2_IF0_LUMA_X1) 	///../ucode/register.h
+#define VD2_IF0_LUMA_Y1 0x1a78 	///../ucode/register.h
+#define P_VD2_IF0_LUMA_Y1 		CBUS_REG_ADDR(VD2_IF0_LUMA_Y1) 	///../ucode/register.h
+#define VD2_IF0_CHROMA_X1 0x1a79 	///../ucode/register.h
+#define P_VD2_IF0_CHROMA_X1 		CBUS_REG_ADDR(VD2_IF0_CHROMA_X1) 	///../ucode/register.h
+#define VD2_IF0_CHROMA_Y1 0x1a7a 	///../ucode/register.h
+#define P_VD2_IF0_CHROMA_Y1 		CBUS_REG_ADDR(VD2_IF0_CHROMA_Y1) 	///../ucode/register.h
+#define VD2_IF0_RPT_LOOP 0x1a7b 	///../ucode/register.h
+#define P_VD2_IF0_RPT_LOOP 		CBUS_REG_ADDR(VD2_IF0_RPT_LOOP) 	///../ucode/register.h
+#define VD2_IF0_LUMA0_RPT_PAT 0x1a7c 	///../ucode/register.h
+#define P_VD2_IF0_LUMA0_RPT_PAT 		CBUS_REG_ADDR(VD2_IF0_LUMA0_RPT_PAT) 	///../ucode/register.h
+#define VD2_IF0_CHROMA0_RPT_PAT 0x1a7d 	///../ucode/register.h
+#define P_VD2_IF0_CHROMA0_RPT_PAT 		CBUS_REG_ADDR(VD2_IF0_CHROMA0_RPT_PAT) 	///../ucode/register.h
+#define VD2_IF0_LUMA1_RPT_PAT 0x1a7e 	///../ucode/register.h
+#define P_VD2_IF0_LUMA1_RPT_PAT 		CBUS_REG_ADDR(VD2_IF0_LUMA1_RPT_PAT) 	///../ucode/register.h
+#define VD2_IF0_CHROMA1_RPT_PAT 0x1a7f 	///../ucode/register.h
+#define P_VD2_IF0_CHROMA1_RPT_PAT 		CBUS_REG_ADDR(VD2_IF0_CHROMA1_RPT_PAT) 	///../ucode/register.h
+#define VD2_IF0_LUMA_PSEL 0x1a80 	///../ucode/register.h
+#define P_VD2_IF0_LUMA_PSEL 		CBUS_REG_ADDR(VD2_IF0_LUMA_PSEL) 	///../ucode/register.h
+#define VD2_IF0_CHROMA_PSEL 0x1a81 	///../ucode/register.h
+#define P_VD2_IF0_CHROMA_PSEL 		CBUS_REG_ADDR(VD2_IF0_CHROMA_PSEL) 	///../ucode/register.h
+#define VD2_IF0_DUMMY_PIXEL 0x1a82 	///../ucode/register.h
+#define P_VD2_IF0_DUMMY_PIXEL 		CBUS_REG_ADDR(VD2_IF0_DUMMY_PIXEL) 	///../ucode/register.h
+#define VD2_IF0_LUMA_FIFO_SIZE 0x1a83 	///../ucode/register.h
+#define P_VD2_IF0_LUMA_FIFO_SIZE 		CBUS_REG_ADDR(VD2_IF0_LUMA_FIFO_SIZE) 	///../ucode/register.h
+#define VD2_IF0_RANGE_MAP_Y 0x1a8a 	///../ucode/register.h
+#define P_VD2_IF0_RANGE_MAP_Y 		CBUS_REG_ADDR(VD2_IF0_RANGE_MAP_Y) 	///../ucode/register.h
+#define VD2_IF0_RANGE_MAP_CB 0x1a8b 	///../ucode/register.h
+#define P_VD2_IF0_RANGE_MAP_CB 		CBUS_REG_ADDR(VD2_IF0_RANGE_MAP_CB) 	///../ucode/register.h
+#define VD2_IF0_RANGE_MAP_CR 0x1a8c 	///../ucode/register.h
+#define P_VD2_IF0_RANGE_MAP_CR 		CBUS_REG_ADDR(VD2_IF0_RANGE_MAP_CR) 	///../ucode/register.h
+#define VD2_IF0_GEN_REG2 0x1a8d 	///../ucode/register.h
+#define P_VD2_IF0_GEN_REG2 		CBUS_REG_ADDR(VD2_IF0_GEN_REG2) 	///../ucode/register.h
+#define VIU_VD2_FMT_CTRL 0x1a88 	///../ucode/register.h
+#define P_VIU_VD2_FMT_CTRL 		CBUS_REG_ADDR(VIU_VD2_FMT_CTRL) 	///../ucode/register.h
+#define VIU_VD2_FMT_W 0x1a89 	///../ucode/register.h
+#define P_VIU_VD2_FMT_W 		CBUS_REG_ADDR(VIU_VD2_FMT_W) 	///../ucode/register.h
+#define LDIM_STTS_GCLK_CTRL0 0x1a90 	///../ucode/register.h
+#define P_LDIM_STTS_GCLK_CTRL0 		CBUS_REG_ADDR(LDIM_STTS_GCLK_CTRL0) 	///../ucode/register.h
+#define LDIM_STTS_CTRL0 0x1a91 	///../ucode/register.h
+#define P_LDIM_STTS_CTRL0 		CBUS_REG_ADDR(LDIM_STTS_CTRL0) 	///../ucode/register.h
+#define LDIM_STTS_WIDTHM1_HEIGHTM1 0x1a92 	///../ucode/register.h
+#define P_LDIM_STTS_WIDTHM1_HEIGHTM1 		CBUS_REG_ADDR(LDIM_STTS_WIDTHM1_HEIGHTM1) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_COEF00_01 0x1a93 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_COEF00_01 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_COEF00_01) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_COEF02_10 0x1a94 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_COEF02_10 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_COEF02_10) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_COEF11_12 0x1a95 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_COEF11_12 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_COEF11_12) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_COEF20_21 0x1a96 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_COEF20_21 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_COEF20_21) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_COEF22 0x1a97 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_COEF22 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_COEF22) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_OFFSET0_1 0x1a98 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_OFFSET0_1 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_OFFSET0_1) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_OFFSET2 0x1a99 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_OFFSET2 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_OFFSET2) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_PRE_OFFSET0_1 0x1a9a 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_PRE_OFFSET0_1 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_PRE_OFFSET0_1) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_PRE_OFFSET2 0x1a9b 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_PRE_OFFSET2 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_PRE_OFFSET2) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_HL_COLOR 0x1a9c 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_HL_COLOR 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_HL_COLOR) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_PROBE_POS 0x1a9d 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_PROBE_POS 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_PROBE_POS) 	///../ucode/register.h
+#define LDIM_STTS_MATRIX_PROBE_COLOR 0x1a9e 	///../ucode/register.h
+#define P_LDIM_STTS_MATRIX_PROBE_COLOR 		CBUS_REG_ADDR(LDIM_STTS_MATRIX_PROBE_COLOR) 	///../ucode/register.h
+#define LDIM_STTS_HIST_REGION_IDX 0x1aa0 	///../ucode/register.h
+#define P_LDIM_STTS_HIST_REGION_IDX 		CBUS_REG_ADDR(LDIM_STTS_HIST_REGION_IDX) 	///../ucode/register.h
+#define LDIM_STTS_HIST_SET_REGION 0x1aa1 	///../ucode/register.h
+#define P_LDIM_STTS_HIST_SET_REGION 		CBUS_REG_ADDR(LDIM_STTS_HIST_SET_REGION) 	///../ucode/register.h
+#define LDIM_STTS_HIST_READ_REGION 0x1aa2 	///../ucode/register.h
+#define P_LDIM_STTS_HIST_READ_REGION 		CBUS_REG_ADDR(LDIM_STTS_HIST_READ_REGION) 	///../ucode/register.h
+#define DI_PRE_CTRL 0x1700 	///../ucode/register.h
+#define P_DI_PRE_CTRL 		CBUS_REG_ADDR(DI_PRE_CTRL) 	///../ucode/register.h
+#define DI_POST_CTRL 0x1701 	///../ucode/register.h
+#define P_DI_POST_CTRL 		CBUS_REG_ADDR(DI_POST_CTRL) 	///../ucode/register.h
+#define DI_POST_SIZE 0x1702 	///../ucode/register.h
+#define P_DI_POST_SIZE 		CBUS_REG_ADDR(DI_POST_SIZE) 	///../ucode/register.h
+#define DI_PRE_SIZE 0x1703 	///../ucode/register.h
+#define P_DI_PRE_SIZE 		CBUS_REG_ADDR(DI_PRE_SIZE) 	///../ucode/register.h
+#define DI_EI_CTRL0 0x1704 	///../ucode/register.h
+#define P_DI_EI_CTRL0 		CBUS_REG_ADDR(DI_EI_CTRL0) 	///../ucode/register.h
+#define DI_EI_CTRL1 0x1705 	///../ucode/register.h
+#define P_DI_EI_CTRL1 		CBUS_REG_ADDR(DI_EI_CTRL1) 	///../ucode/register.h
+#define DI_EI_CTRL2 0x1706 	///../ucode/register.h
+#define P_DI_EI_CTRL2 		CBUS_REG_ADDR(DI_EI_CTRL2) 	///../ucode/register.h
+#define DI_NR_CTRL0 0x1707 	///../ucode/register.h
+#define P_DI_NR_CTRL0 		CBUS_REG_ADDR(DI_NR_CTRL0) 	///../ucode/register.h
+#define DI_NR_CTRL1 0x1708 	///../ucode/register.h
+#define P_DI_NR_CTRL1 		CBUS_REG_ADDR(DI_NR_CTRL1) 	///../ucode/register.h
+#define DI_NR_CTRL2 0x1709 	///../ucode/register.h
+#define P_DI_NR_CTRL2 		CBUS_REG_ADDR(DI_NR_CTRL2) 	///../ucode/register.h
+#define DI_NR_CTRL3 0x170a 	///../ucode/register.h
+#define P_DI_NR_CTRL3 		CBUS_REG_ADDR(DI_NR_CTRL3) 	///../ucode/register.h
+#define DI_MTN_CTRL 0x170b 	///../ucode/register.h
+#define P_DI_MTN_CTRL 		CBUS_REG_ADDR(DI_MTN_CTRL) 	///../ucode/register.h
+#define DI_MTN_CTRL1 0x170c 	///../ucode/register.h
+#define P_DI_MTN_CTRL1 		CBUS_REG_ADDR(DI_MTN_CTRL1) 	///../ucode/register.h
+#define DI_BLEND_CTRL 0x170d 	///../ucode/register.h
+#define P_DI_BLEND_CTRL 		CBUS_REG_ADDR(DI_BLEND_CTRL) 	///../ucode/register.h
+#define DI_BLEND_CTRL1 0x170e 	///../ucode/register.h
+#define P_DI_BLEND_CTRL1 		CBUS_REG_ADDR(DI_BLEND_CTRL1) 	///../ucode/register.h
+#define DI_BLEND_CTRL2 0x170f 	///../ucode/register.h
+#define P_DI_BLEND_CTRL2 		CBUS_REG_ADDR(DI_BLEND_CTRL2) 	///../ucode/register.h
+#define DI_BLEND_REG0_X 0x1710 	///../ucode/register.h
+#define P_DI_BLEND_REG0_X 		CBUS_REG_ADDR(DI_BLEND_REG0_X) 	///../ucode/register.h
+#define DI_BLEND_REG0_Y 0x1711 	///../ucode/register.h
+#define P_DI_BLEND_REG0_Y 		CBUS_REG_ADDR(DI_BLEND_REG0_Y) 	///../ucode/register.h
+#define DI_BLEND_REG1_X 0x1712 	///../ucode/register.h
+#define P_DI_BLEND_REG1_X 		CBUS_REG_ADDR(DI_BLEND_REG1_X) 	///../ucode/register.h
+#define DI_BLEND_REG1_Y 0x1713 	///../ucode/register.h
+#define P_DI_BLEND_REG1_Y 		CBUS_REG_ADDR(DI_BLEND_REG1_Y) 	///../ucode/register.h
+#define DI_BLEND_REG2_X 0x1714 	///../ucode/register.h
+#define P_DI_BLEND_REG2_X 		CBUS_REG_ADDR(DI_BLEND_REG2_X) 	///../ucode/register.h
+#define DI_BLEND_REG2_Y 0x1715 	///../ucode/register.h
+#define P_DI_BLEND_REG2_Y 		CBUS_REG_ADDR(DI_BLEND_REG2_Y) 	///../ucode/register.h
+#define DI_BLEND_REG3_X 0x1716 	///../ucode/register.h
+#define P_DI_BLEND_REG3_X 		CBUS_REG_ADDR(DI_BLEND_REG3_X) 	///../ucode/register.h
+#define DI_BLEND_REG3_Y 0x1717 	///../ucode/register.h
+#define P_DI_BLEND_REG3_Y 		CBUS_REG_ADDR(DI_BLEND_REG3_Y) 	///../ucode/register.h
+#define DI_CLKG_CTRL 0x1718 	///../ucode/register.h
+#define P_DI_CLKG_CTRL 		CBUS_REG_ADDR(DI_CLKG_CTRL) 	///../ucode/register.h
+#define DI_EI_CTRL3 0x1719 	///../ucode/register.h
+#define P_DI_EI_CTRL3 		CBUS_REG_ADDR(DI_EI_CTRL3) 	///../ucode/register.h
+#define DI_EI_CTRL4 0x171a 	///../ucode/register.h
+#define P_DI_EI_CTRL4 		CBUS_REG_ADDR(DI_EI_CTRL4) 	///../ucode/register.h
+#define DI_EI_CTRL5 0x171b 	///../ucode/register.h
+#define P_DI_EI_CTRL5 		CBUS_REG_ADDR(DI_EI_CTRL5) 	///../ucode/register.h
+#define DI_EI_CTRL6 0x171c 	///../ucode/register.h
+#define P_DI_EI_CTRL6 		CBUS_REG_ADDR(DI_EI_CTRL6) 	///../ucode/register.h
+#define DI_EI_CTRL7 0x171d 	///../ucode/register.h
+#define P_DI_EI_CTRL7 		CBUS_REG_ADDR(DI_EI_CTRL7) 	///../ucode/register.h
+#define DI_EI_CTRL8 0x171e 	///../ucode/register.h
+#define P_DI_EI_CTRL8 		CBUS_REG_ADDR(DI_EI_CTRL8) 	///../ucode/register.h
+#define DI_EI_CTRL9 0x171f 	///../ucode/register.h
+#define P_DI_EI_CTRL9 		CBUS_REG_ADDR(DI_EI_CTRL9) 	///../ucode/register.h
+#define DI_EI_XWIN0 0x1798 	///../ucode/register.h
+#define P_DI_EI_XWIN0 		CBUS_REG_ADDR(DI_EI_XWIN0) 	///../ucode/register.h
+#define DI_EI_XWIN1 0x1799 	///../ucode/register.h
+#define P_DI_EI_XWIN1 		CBUS_REG_ADDR(DI_EI_XWIN1) 	///../ucode/register.h
+#define DI_MC_REG0_X 0x1720 	///../ucode/register.h
+#define P_DI_MC_REG0_X 		CBUS_REG_ADDR(DI_MC_REG0_X) 	///../ucode/register.h
+#define DI_MC_REG0_Y 0x1721 	///../ucode/register.h
+#define P_DI_MC_REG0_Y 		CBUS_REG_ADDR(DI_MC_REG0_Y) 	///../ucode/register.h
+#define DI_MC_REG1_X 0x1722 	///../ucode/register.h
+#define P_DI_MC_REG1_X 		CBUS_REG_ADDR(DI_MC_REG1_X) 	///../ucode/register.h
+#define DI_MC_REG1_Y 0x1723 	///../ucode/register.h
+#define P_DI_MC_REG1_Y 		CBUS_REG_ADDR(DI_MC_REG1_Y) 	///../ucode/register.h
+#define DI_MC_REG2_X 0x1724 	///../ucode/register.h
+#define P_DI_MC_REG2_X 		CBUS_REG_ADDR(DI_MC_REG2_X) 	///../ucode/register.h
+#define DI_MC_REG2_Y 0x1725 	///../ucode/register.h
+#define P_DI_MC_REG2_Y 		CBUS_REG_ADDR(DI_MC_REG2_Y) 	///../ucode/register.h
+#define DI_MC_REG3_X 0x1726 	///../ucode/register.h
+#define P_DI_MC_REG3_X 		CBUS_REG_ADDR(DI_MC_REG3_X) 	///../ucode/register.h
+#define DI_MC_REG3_Y 0x1727 	///../ucode/register.h
+#define P_DI_MC_REG3_Y 		CBUS_REG_ADDR(DI_MC_REG3_Y) 	///../ucode/register.h
+#define DI_MC_REG4_X 0x1728 	///../ucode/register.h
+#define P_DI_MC_REG4_X 		CBUS_REG_ADDR(DI_MC_REG4_X) 	///../ucode/register.h
+#define DI_MC_REG4_Y 0x1729 	///../ucode/register.h
+#define P_DI_MC_REG4_Y 		CBUS_REG_ADDR(DI_MC_REG4_Y) 	///../ucode/register.h
+#define DI_MC_32LVL0 0x172a 	///../ucode/register.h
+#define P_DI_MC_32LVL0 		CBUS_REG_ADDR(DI_MC_32LVL0) 	///../ucode/register.h
+#define DI_MC_32LVL1 0x172b 	///../ucode/register.h
+#define P_DI_MC_32LVL1 		CBUS_REG_ADDR(DI_MC_32LVL1) 	///../ucode/register.h
+#define DI_MC_22LVL0 0x172c 	///../ucode/register.h
+#define P_DI_MC_22LVL0 		CBUS_REG_ADDR(DI_MC_22LVL0) 	///../ucode/register.h
+#define DI_MC_22LVL1 0x172d 	///../ucode/register.h
+#define P_DI_MC_22LVL1 		CBUS_REG_ADDR(DI_MC_22LVL1) 	///../ucode/register.h
+#define DI_MC_22LVL2 0x172e 	///../ucode/register.h
+#define P_DI_MC_22LVL2 		CBUS_REG_ADDR(DI_MC_22LVL2) 	///../ucode/register.h
+#define DI_MC_CTRL 0x172f 	///../ucode/register.h
+#define P_DI_MC_CTRL 		CBUS_REG_ADDR(DI_MC_CTRL) 	///../ucode/register.h
+#define DI_INTR_CTRL 0x1730 	///../ucode/register.h
+#define P_DI_INTR_CTRL 		CBUS_REG_ADDR(DI_INTR_CTRL) 	///../ucode/register.h
+#define DI_INFO_ADDR 0x1731 	///../ucode/register.h
+#define P_DI_INFO_ADDR 		CBUS_REG_ADDR(DI_INFO_ADDR) 	///../ucode/register.h
+#define DI_INFO_DATA 0x1732 	///../ucode/register.h
+#define P_DI_INFO_DATA 		CBUS_REG_ADDR(DI_INFO_DATA) 	///../ucode/register.h
+#define DI_PRE_HOLD 0x1733 	///../ucode/register.h
+#define P_DI_PRE_HOLD 		CBUS_REG_ADDR(DI_PRE_HOLD) 	///../ucode/register.h
+#define DI_MTN_1_CTRL1 0x1740 	///../ucode/register.h
+#define P_DI_MTN_1_CTRL1 		CBUS_REG_ADDR(DI_MTN_1_CTRL1) 	///../ucode/register.h
+#define DI_MTN_1_CTRL2 0x1741 	///../ucode/register.h
+#define P_DI_MTN_1_CTRL2 		CBUS_REG_ADDR(DI_MTN_1_CTRL2) 	///../ucode/register.h
+#define DI_MTN_1_CTRL3 0x1742 	///../ucode/register.h
+#define P_DI_MTN_1_CTRL3 		CBUS_REG_ADDR(DI_MTN_1_CTRL3) 	///../ucode/register.h
+#define DI_MTN_1_CTRL4 0x1743 	///../ucode/register.h
+#define P_DI_MTN_1_CTRL4 		CBUS_REG_ADDR(DI_MTN_1_CTRL4) 	///../ucode/register.h
+#define DI_MTN_1_CTRL5 0x1744 	///../ucode/register.h
+#define P_DI_MTN_1_CTRL5 		CBUS_REG_ADDR(DI_MTN_1_CTRL5) 	///../ucode/register.h
+#define DET3D_MOTN_CFG 0x1734 	///../ucode/register.h
+#define P_DET3D_MOTN_CFG 		CBUS_REG_ADDR(DET3D_MOTN_CFG) 	///../ucode/register.h
+#define DET3D_CB_CFG 0x1735 	///../ucode/register.h
+#define P_DET3D_CB_CFG 		CBUS_REG_ADDR(DET3D_CB_CFG) 	///../ucode/register.h
+#define DET3D_SPLT_CFG 0x1736 	///../ucode/register.h
+#define P_DET3D_SPLT_CFG 		CBUS_REG_ADDR(DET3D_SPLT_CFG) 	///../ucode/register.h
+#define DET3D_HV_MUTE 0x1737 	///../ucode/register.h
+#define P_DET3D_HV_MUTE 		CBUS_REG_ADDR(DET3D_HV_MUTE) 	///../ucode/register.h
+#define DET3D_MAT_STA_P1M1 0x1738 	///../ucode/register.h
+#define P_DET3D_MAT_STA_P1M1 		CBUS_REG_ADDR(DET3D_MAT_STA_P1M1) 	///../ucode/register.h
+#define DET3D_MAT_STA_P1TH 0x1739 	///../ucode/register.h
+#define P_DET3D_MAT_STA_P1TH 		CBUS_REG_ADDR(DET3D_MAT_STA_P1TH) 	///../ucode/register.h
+#define DET3D_MAT_STA_M1TH 0x173a 	///../ucode/register.h
+#define P_DET3D_MAT_STA_M1TH 		CBUS_REG_ADDR(DET3D_MAT_STA_M1TH) 	///../ucode/register.h
+#define DET3D_MAT_STA_RSFT 0x173b 	///../ucode/register.h
+#define P_DET3D_MAT_STA_RSFT 		CBUS_REG_ADDR(DET3D_MAT_STA_RSFT) 	///../ucode/register.h
+#define DET3D_MAT_SYMTC_TH 0x173c 	///../ucode/register.h
+#define P_DET3D_MAT_SYMTC_TH 		CBUS_REG_ADDR(DET3D_MAT_SYMTC_TH) 	///../ucode/register.h
+#define DET3D_RO_DET_CB_HOR 0x173d 	///../ucode/register.h
+#define P_DET3D_RO_DET_CB_HOR 		CBUS_REG_ADDR(DET3D_RO_DET_CB_HOR) 	///../ucode/register.h
+#define DET3D_RO_DET_CB_VER 0x173e 	///../ucode/register.h
+#define P_DET3D_RO_DET_CB_VER 		CBUS_REG_ADDR(DET3D_RO_DET_CB_VER) 	///../ucode/register.h
+#define DET3D_RO_SPLT_HT 0x173f 	///../ucode/register.h
+#define P_DET3D_RO_SPLT_HT 		CBUS_REG_ADDR(DET3D_RO_SPLT_HT) 	///../ucode/register.h
+#define NR2_MET_NM_CTRL 0x1745 	///../ucode/register.h
+#define P_NR2_MET_NM_CTRL 		CBUS_REG_ADDR(NR2_MET_NM_CTRL) 	///../ucode/register.h
+#define NR2_MET_NM_YCTRL 0x1746 	///../ucode/register.h
+#define P_NR2_MET_NM_YCTRL 		CBUS_REG_ADDR(NR2_MET_NM_YCTRL) 	///../ucode/register.h
+#define NR2_MET_NM_CCTRL 0x1747 	///../ucode/register.h
+#define P_NR2_MET_NM_CCTRL 		CBUS_REG_ADDR(NR2_MET_NM_CCTRL) 	///../ucode/register.h
+#define NR2_MET_NM_TNR 0x1748 	///../ucode/register.h
+#define P_NR2_MET_NM_TNR 		CBUS_REG_ADDR(NR2_MET_NM_TNR) 	///../ucode/register.h
+#define NR2_MET_NMFRM_TNR_YLEV 0x1749 	///../ucode/register.h
+#define P_NR2_MET_NMFRM_TNR_YLEV 		CBUS_REG_ADDR(NR2_MET_NMFRM_TNR_YLEV) 	///../ucode/register.h
+#define NR2_MET_NMFRM_TNR_YCNT 0x174a 	///../ucode/register.h
+#define P_NR2_MET_NMFRM_TNR_YCNT 		CBUS_REG_ADDR(NR2_MET_NMFRM_TNR_YCNT) 	///../ucode/register.h
+#define NR2_MET_NMFRM_TNR_CLEV 0x174b 	///../ucode/register.h
+#define P_NR2_MET_NMFRM_TNR_CLEV 		CBUS_REG_ADDR(NR2_MET_NMFRM_TNR_CLEV) 	///../ucode/register.h
+#define NR2_MET_NMFRM_TNR_CCNT 0x174c 	///../ucode/register.h
+#define P_NR2_MET_NMFRM_TNR_CCNT 		CBUS_REG_ADDR(NR2_MET_NMFRM_TNR_CCNT) 	///../ucode/register.h
+#define NR2_3DEN_MODE 0x174d 	///../ucode/register.h
+#define P_NR2_3DEN_MODE 		CBUS_REG_ADDR(NR2_3DEN_MODE) 	///../ucode/register.h
+#define NR2_IIR_CTRL 0x174e 	///../ucode/register.h
+#define P_NR2_IIR_CTRL 		CBUS_REG_ADDR(NR2_IIR_CTRL) 	///../ucode/register.h
+#define NR2_SW_EN 0x174f 	///../ucode/register.h
+#define P_NR2_SW_EN 		CBUS_REG_ADDR(NR2_SW_EN) 	///../ucode/register.h
+#define NR2_FRM_SIZE 0x1750 	///../ucode/register.h
+#define P_NR2_FRM_SIZE 		CBUS_REG_ADDR(NR2_FRM_SIZE) 	///../ucode/register.h
+#define NR2_SNR_SAD_CFG 0x1751 	///../ucode/register.h
+#define P_NR2_SNR_SAD_CFG 		CBUS_REG_ADDR(NR2_SNR_SAD_CFG) 	///../ucode/register.h
+#define NR2_MATNR_SNR_OS 0x1752 	///../ucode/register.h
+#define P_NR2_MATNR_SNR_OS 		CBUS_REG_ADDR(NR2_MATNR_SNR_OS) 	///../ucode/register.h
+#define NR2_MATNR_SNR_NRM_CFG 0x1753 	///../ucode/register.h
+#define P_NR2_MATNR_SNR_NRM_CFG 		CBUS_REG_ADDR(NR2_MATNR_SNR_NRM_CFG) 	///../ucode/register.h
+#define NR2_MATNR_SNR_NRM_GAIN 0x1754 	///../ucode/register.h
+#define P_NR2_MATNR_SNR_NRM_GAIN 		CBUS_REG_ADDR(NR2_MATNR_SNR_NRM_GAIN) 	///../ucode/register.h
+#define NR2_MATNR_SNR_LPF_CFG 0x1755 	///../ucode/register.h
+#define P_NR2_MATNR_SNR_LPF_CFG 		CBUS_REG_ADDR(NR2_MATNR_SNR_LPF_CFG) 	///../ucode/register.h
+#define NR2_MATNR_SNR_USF_GAIN 0x1756 	///../ucode/register.h
+#define P_NR2_MATNR_SNR_USF_GAIN 		CBUS_REG_ADDR(NR2_MATNR_SNR_USF_GAIN) 	///../ucode/register.h
+#define NR2_MATNR_SNR_EDGE2B 0x1757 	///../ucode/register.h
+#define P_NR2_MATNR_SNR_EDGE2B 		CBUS_REG_ADDR(NR2_MATNR_SNR_EDGE2B) 	///../ucode/register.h
+#define NR2_MATNR_BETA_EGAIN 0x1758 	///../ucode/register.h
+#define P_NR2_MATNR_BETA_EGAIN 		CBUS_REG_ADDR(NR2_MATNR_BETA_EGAIN) 	///../ucode/register.h
+#define NR2_MATNR_BETA_BRT 0x1759 	///../ucode/register.h
+#define P_NR2_MATNR_BETA_BRT 		CBUS_REG_ADDR(NR2_MATNR_BETA_BRT) 	///../ucode/register.h
+#define NR2_MATNR_XBETA_CFG 0x175a 	///../ucode/register.h
+#define P_NR2_MATNR_XBETA_CFG 		CBUS_REG_ADDR(NR2_MATNR_XBETA_CFG) 	///../ucode/register.h
+#define NR2_MATNR_YBETA_SCL 0x175b 	///../ucode/register.h
+#define P_NR2_MATNR_YBETA_SCL 		CBUS_REG_ADDR(NR2_MATNR_YBETA_SCL) 	///../ucode/register.h
+#define NR2_MATNR_CBETA_SCL 0x175c 	///../ucode/register.h
+#define P_NR2_MATNR_CBETA_SCL 		CBUS_REG_ADDR(NR2_MATNR_CBETA_SCL) 	///../ucode/register.h
+#define NR2_SNR_MASK 0x175d 	///../ucode/register.h
+#define P_NR2_SNR_MASK 		CBUS_REG_ADDR(NR2_SNR_MASK) 	///../ucode/register.h
+#define NR2_SAD2NORM_LUT0 0x175e 	///../ucode/register.h
+#define P_NR2_SAD2NORM_LUT0 		CBUS_REG_ADDR(NR2_SAD2NORM_LUT0) 	///../ucode/register.h
+#define NR2_SAD2NORM_LUT1 0x175f 	///../ucode/register.h
+#define P_NR2_SAD2NORM_LUT1 		CBUS_REG_ADDR(NR2_SAD2NORM_LUT1) 	///../ucode/register.h
+#define NR2_SAD2NORM_LUT2 0x1760 	///../ucode/register.h
+#define P_NR2_SAD2NORM_LUT2 		CBUS_REG_ADDR(NR2_SAD2NORM_LUT2) 	///../ucode/register.h
+#define NR2_SAD2NORM_LUT3 0x1761 	///../ucode/register.h
+#define P_NR2_SAD2NORM_LUT3 		CBUS_REG_ADDR(NR2_SAD2NORM_LUT3) 	///../ucode/register.h
+#define NR2_EDGE2BETA_LUT0 0x1762 	///../ucode/register.h
+#define P_NR2_EDGE2BETA_LUT0 		CBUS_REG_ADDR(NR2_EDGE2BETA_LUT0) 	///../ucode/register.h
+#define NR2_EDGE2BETA_LUT1 0x1763 	///../ucode/register.h
+#define P_NR2_EDGE2BETA_LUT1 		CBUS_REG_ADDR(NR2_EDGE2BETA_LUT1) 	///../ucode/register.h
+#define NR2_EDGE2BETA_LUT2 0x1764 	///../ucode/register.h
+#define P_NR2_EDGE2BETA_LUT2 		CBUS_REG_ADDR(NR2_EDGE2BETA_LUT2) 	///../ucode/register.h
+#define NR2_EDGE2BETA_LUT3 0x1765 	///../ucode/register.h
+#define P_NR2_EDGE2BETA_LUT3 		CBUS_REG_ADDR(NR2_EDGE2BETA_LUT3) 	///../ucode/register.h
+#define NR2_MOTION2BETA_LUT0 0x1766 	///../ucode/register.h
+#define P_NR2_MOTION2BETA_LUT0 		CBUS_REG_ADDR(NR2_MOTION2BETA_LUT0) 	///../ucode/register.h
+#define NR2_MOTION2BETA_LUT1 0x1767 	///../ucode/register.h
+#define P_NR2_MOTION2BETA_LUT1 		CBUS_REG_ADDR(NR2_MOTION2BETA_LUT1) 	///../ucode/register.h
+#define NR2_MOTION2BETA_LUT2 0x1768 	///../ucode/register.h
+#define P_NR2_MOTION2BETA_LUT2 		CBUS_REG_ADDR(NR2_MOTION2BETA_LUT2) 	///../ucode/register.h
+#define NR2_MOTION2BETA_LUT3 0x1769 	///../ucode/register.h
+#define P_NR2_MOTION2BETA_LUT3 		CBUS_REG_ADDR(NR2_MOTION2BETA_LUT3) 	///../ucode/register.h
+#define NR2_MATNR_MTN_CRTL 0x176a 	///../ucode/register.h
+#define P_NR2_MATNR_MTN_CRTL 		CBUS_REG_ADDR(NR2_MATNR_MTN_CRTL) 	///../ucode/register.h
+#define NR2_MATNR_MTN_CRTL2 0x176b 	///../ucode/register.h
+#define P_NR2_MATNR_MTN_CRTL2 		CBUS_REG_ADDR(NR2_MATNR_MTN_CRTL2) 	///../ucode/register.h
+#define NR2_MATNR_MTN_COR 0x176c 	///../ucode/register.h
+#define P_NR2_MATNR_MTN_COR 		CBUS_REG_ADDR(NR2_MATNR_MTN_COR) 	///../ucode/register.h
+#define NR2_MATNR_MTN_GAIN 0x176d 	///../ucode/register.h
+#define P_NR2_MATNR_MTN_GAIN 		CBUS_REG_ADDR(NR2_MATNR_MTN_GAIN) 	///../ucode/register.h
+#define NR2_MATNR_DEGHOST 0x176e 	///../ucode/register.h
+#define P_NR2_MATNR_DEGHOST 		CBUS_REG_ADDR(NR2_MATNR_DEGHOST) 	///../ucode/register.h
+#define NR2_MATNR_ALPHALP_LUT0 0x176f 	///../ucode/register.h
+#define P_NR2_MATNR_ALPHALP_LUT0 		CBUS_REG_ADDR(NR2_MATNR_ALPHALP_LUT0) 	///../ucode/register.h
+#define NR2_MATNR_ALPHALP_LUT1 0x1770 	///../ucode/register.h
+#define P_NR2_MATNR_ALPHALP_LUT1 		CBUS_REG_ADDR(NR2_MATNR_ALPHALP_LUT1) 	///../ucode/register.h
+#define NR2_MATNR_ALPHALP_LUT2 0x1771 	///../ucode/register.h
+#define P_NR2_MATNR_ALPHALP_LUT2 		CBUS_REG_ADDR(NR2_MATNR_ALPHALP_LUT2) 	///../ucode/register.h
+#define NR2_MATNR_ALPHALP_LUT3 0x1772 	///../ucode/register.h
+#define P_NR2_MATNR_ALPHALP_LUT3 		CBUS_REG_ADDR(NR2_MATNR_ALPHALP_LUT3) 	///../ucode/register.h
+#define NR2_MATNR_ALPHAHP_LUT0 0x1773 	///../ucode/register.h
+#define P_NR2_MATNR_ALPHAHP_LUT0 		CBUS_REG_ADDR(NR2_MATNR_ALPHAHP_LUT0) 	///../ucode/register.h
+#define NR2_MATNR_ALPHAHP_LUT1 0x1774 	///../ucode/register.h
+#define P_NR2_MATNR_ALPHAHP_LUT1 		CBUS_REG_ADDR(NR2_MATNR_ALPHAHP_LUT1) 	///../ucode/register.h
+#define NR2_MATNR_ALPHAHP_LUT2 0x1775 	///../ucode/register.h
+#define P_NR2_MATNR_ALPHAHP_LUT2 		CBUS_REG_ADDR(NR2_MATNR_ALPHAHP_LUT2) 	///../ucode/register.h
+#define NR2_MATNR_ALPHAHP_LUT3 0x1776 	///../ucode/register.h
+#define P_NR2_MATNR_ALPHAHP_LUT3 		CBUS_REG_ADDR(NR2_MATNR_ALPHAHP_LUT3) 	///../ucode/register.h
+#define NR2_MATNR_MTNB_BRT 0x1777 	///../ucode/register.h
+#define P_NR2_MATNR_MTNB_BRT 		CBUS_REG_ADDR(NR2_MATNR_MTNB_BRT) 	///../ucode/register.h
+#define NR2_CUE_MODE 0x1778 	///../ucode/register.h
+#define P_NR2_CUE_MODE 		CBUS_REG_ADDR(NR2_CUE_MODE) 	///../ucode/register.h
+#define NR2_CUE_CON_MOT_TH 0x1779 	///../ucode/register.h
+#define P_NR2_CUE_CON_MOT_TH 		CBUS_REG_ADDR(NR2_CUE_CON_MOT_TH) 	///../ucode/register.h
+#define NR2_CUE_CON_DIF0 0x177a 	///../ucode/register.h
+#define P_NR2_CUE_CON_DIF0 		CBUS_REG_ADDR(NR2_CUE_CON_DIF0) 	///../ucode/register.h
+#define NR2_CUE_CON_DIF1 0x177b 	///../ucode/register.h
+#define P_NR2_CUE_CON_DIF1 		CBUS_REG_ADDR(NR2_CUE_CON_DIF1) 	///../ucode/register.h
+#define NR2_CUE_CON_DIF2 0x177c 	///../ucode/register.h
+#define P_NR2_CUE_CON_DIF2 		CBUS_REG_ADDR(NR2_CUE_CON_DIF2) 	///../ucode/register.h
+#define NR2_CUE_CON_DIF3 0x177d 	///../ucode/register.h
+#define P_NR2_CUE_CON_DIF3 		CBUS_REG_ADDR(NR2_CUE_CON_DIF3) 	///../ucode/register.h
+#define NR2_CUE_PRG_DIF 0x177e 	///../ucode/register.h
+#define P_NR2_CUE_PRG_DIF 		CBUS_REG_ADDR(NR2_CUE_PRG_DIF) 	///../ucode/register.h
+#define NR2_CONV_MODE 0x177f 	///../ucode/register.h
+#define P_NR2_CONV_MODE 		CBUS_REG_ADDR(NR2_CONV_MODE) 	///../ucode/register.h
+#define DET3D_RO_SPLT_HB 0x1780 	///../ucode/register.h
+#define P_DET3D_RO_SPLT_HB 		CBUS_REG_ADDR(DET3D_RO_SPLT_HB) 	///../ucode/register.h
+#define DET3D_RO_SPLT_VL 0x1781 	///../ucode/register.h
+#define P_DET3D_RO_SPLT_VL 		CBUS_REG_ADDR(DET3D_RO_SPLT_VL) 	///../ucode/register.h
+#define DET3D_RO_SPLT_VR 0x1782 	///../ucode/register.h
+#define P_DET3D_RO_SPLT_VR 		CBUS_REG_ADDR(DET3D_RO_SPLT_VR) 	///../ucode/register.h
+#define DET3D_RO_MAT_LUMA_LR 0x1783 	///../ucode/register.h
+#define P_DET3D_RO_MAT_LUMA_LR 		CBUS_REG_ADDR(DET3D_RO_MAT_LUMA_LR) 	///../ucode/register.h
+#define DET3D_RO_MAT_LUMA_TB 0x1784 	///../ucode/register.h
+#define P_DET3D_RO_MAT_LUMA_TB 		CBUS_REG_ADDR(DET3D_RO_MAT_LUMA_TB) 	///../ucode/register.h
+#define DET3D_RO_MAT_CHRU_LR 0x1785 	///../ucode/register.h
+#define P_DET3D_RO_MAT_CHRU_LR 		CBUS_REG_ADDR(DET3D_RO_MAT_CHRU_LR) 	///../ucode/register.h
+#define DET3D_RO_MAT_CHRU_TB 0x1786 	///../ucode/register.h
+#define P_DET3D_RO_MAT_CHRU_TB 		CBUS_REG_ADDR(DET3D_RO_MAT_CHRU_TB) 	///../ucode/register.h
+#define DET3D_RO_MAT_CHRV_LR 0x1787 	///../ucode/register.h
+#define P_DET3D_RO_MAT_CHRV_LR 		CBUS_REG_ADDR(DET3D_RO_MAT_CHRV_LR) 	///../ucode/register.h
+#define DET3D_RO_MAT_CHRV_TB 0x1788 	///../ucode/register.h
+#define P_DET3D_RO_MAT_CHRV_TB 		CBUS_REG_ADDR(DET3D_RO_MAT_CHRV_TB) 	///../ucode/register.h
+#define DET3D_RO_MAT_HEDG_LR 0x1789 	///../ucode/register.h
+#define P_DET3D_RO_MAT_HEDG_LR 		CBUS_REG_ADDR(DET3D_RO_MAT_HEDG_LR) 	///../ucode/register.h
+#define DET3D_RO_MAT_HEDG_TB 0x178a 	///../ucode/register.h
+#define P_DET3D_RO_MAT_HEDG_TB 		CBUS_REG_ADDR(DET3D_RO_MAT_HEDG_TB) 	///../ucode/register.h
+#define DET3D_RO_MAT_VEDG_LR 0x178b 	///../ucode/register.h
+#define P_DET3D_RO_MAT_VEDG_LR 		CBUS_REG_ADDR(DET3D_RO_MAT_VEDG_LR) 	///../ucode/register.h
+#define DET3D_RO_MAT_VEDG_TB 0x178c 	///../ucode/register.h
+#define P_DET3D_RO_MAT_VEDG_TB 		CBUS_REG_ADDR(DET3D_RO_MAT_VEDG_TB) 	///../ucode/register.h
+#define DET3D_RO_MAT_MOTN_LR 0x178d 	///../ucode/register.h
+#define P_DET3D_RO_MAT_MOTN_LR 		CBUS_REG_ADDR(DET3D_RO_MAT_MOTN_LR) 	///../ucode/register.h
+#define DET3D_RO_MAT_MOTN_TB 0x178e 	///../ucode/register.h
+#define P_DET3D_RO_MAT_MOTN_TB 		CBUS_REG_ADDR(DET3D_RO_MAT_MOTN_TB) 	///../ucode/register.h
+#define DET3D_RO_FRM_MOTN 0x178f 	///../ucode/register.h
+#define P_DET3D_RO_FRM_MOTN 		CBUS_REG_ADDR(DET3D_RO_FRM_MOTN) 	///../ucode/register.h
+#define DET3D_RAMRD_ADDR_PORT 0x179a 	///../ucode/register.h
+#define P_DET3D_RAMRD_ADDR_PORT 		CBUS_REG_ADDR(DET3D_RAMRD_ADDR_PORT) 	///../ucode/register.h
+#define DET3D_RAMRD_DATA_PORT 0x179b 	///../ucode/register.h
+#define P_DET3D_RAMRD_DATA_PORT 		CBUS_REG_ADDR(DET3D_RAMRD_DATA_PORT) 	///../ucode/register.h
+#define NR2_CFR_PARA_CFG0 0x179c 	///../ucode/register.h
+#define P_NR2_CFR_PARA_CFG0 		CBUS_REG_ADDR(NR2_CFR_PARA_CFG0) 	///../ucode/register.h
+#define NR2_CFR_PARA_CFG1 0x179d 	///../ucode/register.h
+#define P_NR2_CFR_PARA_CFG1 		CBUS_REG_ADDR(NR2_CFR_PARA_CFG1) 	///../ucode/register.h
+#define DI_NR_1_CTRL0 0x1794 	///../ucode/register.h
+#define P_DI_NR_1_CTRL0 		CBUS_REG_ADDR(DI_NR_1_CTRL0) 	///../ucode/register.h
+#define DI_NR_1_CTRL1 0x1795 	///../ucode/register.h
+#define P_DI_NR_1_CTRL1 		CBUS_REG_ADDR(DI_NR_1_CTRL1) 	///../ucode/register.h
+#define DI_NR_1_CTRL2 0x1796 	///../ucode/register.h
+#define P_DI_NR_1_CTRL2 		CBUS_REG_ADDR(DI_NR_1_CTRL2) 	///../ucode/register.h
+#define DI_NR_1_CTRL3 0x1797 	///../ucode/register.h
+#define P_DI_NR_1_CTRL3 		CBUS_REG_ADDR(DI_NR_1_CTRL3) 	///../ucode/register.h
+#define DI_CONTWR_X 0x17a0 	///../ucode/register.h
+#define P_DI_CONTWR_X 		CBUS_REG_ADDR(DI_CONTWR_X) 	///../ucode/register.h
+#define DI_CONTWR_Y 0x17a1 	///../ucode/register.h
+#define P_DI_CONTWR_Y 		CBUS_REG_ADDR(DI_CONTWR_Y) 	///../ucode/register.h
+#define DI_CONTWR_CTRL 0x17a2 	///../ucode/register.h
+#define P_DI_CONTWR_CTRL 		CBUS_REG_ADDR(DI_CONTWR_CTRL) 	///../ucode/register.h
+#define DI_CONTPRD_X 0x17a3 	///../ucode/register.h
+#define P_DI_CONTPRD_X 		CBUS_REG_ADDR(DI_CONTPRD_X) 	///../ucode/register.h
+#define DI_CONTPRD_Y 0x17a4 	///../ucode/register.h
+#define P_DI_CONTPRD_Y 		CBUS_REG_ADDR(DI_CONTPRD_Y) 	///../ucode/register.h
+#define DI_CONTP2RD_X 0x17a5 	///../ucode/register.h
+#define P_DI_CONTP2RD_X 		CBUS_REG_ADDR(DI_CONTP2RD_X) 	///../ucode/register.h
+#define DI_CONTP2RD_Y 0x17a6 	///../ucode/register.h
+#define P_DI_CONTP2RD_Y 		CBUS_REG_ADDR(DI_CONTP2RD_Y) 	///../ucode/register.h
+#define DI_CONTRD_CTRL 0x17a7 	///../ucode/register.h
+#define P_DI_CONTRD_CTRL 		CBUS_REG_ADDR(DI_CONTRD_CTRL) 	///../ucode/register.h
+#define DI_NRWR_X 0x17c0 	///../ucode/register.h
+#define P_DI_NRWR_X 		CBUS_REG_ADDR(DI_NRWR_X) 	///../ucode/register.h
+#define DI_NRWR_Y 0x17c1 	///../ucode/register.h
+#define P_DI_NRWR_Y 		CBUS_REG_ADDR(DI_NRWR_Y) 	///../ucode/register.h
+#define DI_NRWR_CTRL 0x17c2 	///../ucode/register.h
+#define P_DI_NRWR_CTRL 		CBUS_REG_ADDR(DI_NRWR_CTRL) 	///../ucode/register.h
+#define DI_MTNWR_X 0x17c3 	///../ucode/register.h
+#define P_DI_MTNWR_X 		CBUS_REG_ADDR(DI_MTNWR_X) 	///../ucode/register.h
+#define DI_MTNWR_Y 0x17c4 	///../ucode/register.h
+#define P_DI_MTNWR_Y 		CBUS_REG_ADDR(DI_MTNWR_Y) 	///../ucode/register.h
+#define DI_MTNWR_CTRL 0x17c5 	///../ucode/register.h
+#define P_DI_MTNWR_CTRL 		CBUS_REG_ADDR(DI_MTNWR_CTRL) 	///../ucode/register.h
+#define DI_DIWR_X 0x17c6 	///../ucode/register.h
+#define P_DI_DIWR_X 		CBUS_REG_ADDR(DI_DIWR_X) 	///../ucode/register.h
+#define DI_DIWR_Y 0x17c7 	///../ucode/register.h
+#define P_DI_DIWR_Y 		CBUS_REG_ADDR(DI_DIWR_Y) 	///../ucode/register.h
+#define DI_DIWR_CTRL 0x17c8 	///../ucode/register.h
+#define P_DI_DIWR_CTRL 		CBUS_REG_ADDR(DI_DIWR_CTRL) 	///../ucode/register.h
+#define DI_MTNCRD_X 0x17c9 	///../ucode/register.h
+#define P_DI_MTNCRD_X 		CBUS_REG_ADDR(DI_MTNCRD_X) 	///../ucode/register.h
+#define DI_MTNCRD_Y 0x17ca 	///../ucode/register.h
+#define P_DI_MTNCRD_Y 		CBUS_REG_ADDR(DI_MTNCRD_Y) 	///../ucode/register.h
+#define DI_MTNPRD_X 0x17cb 	///../ucode/register.h
+#define P_DI_MTNPRD_X 		CBUS_REG_ADDR(DI_MTNPRD_X) 	///../ucode/register.h
+#define DI_MTNPRD_Y 0x17cc 	///../ucode/register.h
+#define P_DI_MTNPRD_Y 		CBUS_REG_ADDR(DI_MTNPRD_Y) 	///../ucode/register.h
+#define DI_MTNRD_CTRL 0x17cd 	///../ucode/register.h
+#define P_DI_MTNRD_CTRL 		CBUS_REG_ADDR(DI_MTNRD_CTRL) 	///../ucode/register.h
+#define DI_INP_GEN_REG 0x17ce 	///../ucode/register.h
+#define P_DI_INP_GEN_REG 		CBUS_REG_ADDR(DI_INP_GEN_REG) 	///../ucode/register.h
+#define DI_INP_CANVAS0 0x17cf 	///../ucode/register.h
+#define P_DI_INP_CANVAS0 		CBUS_REG_ADDR(DI_INP_CANVAS0) 	///../ucode/register.h
+#define DI_INP_LUMA_X0 0x17d0 	///../ucode/register.h
+#define P_DI_INP_LUMA_X0 		CBUS_REG_ADDR(DI_INP_LUMA_X0) 	///../ucode/register.h
+#define DI_INP_LUMA_Y0 0x17d1 	///../ucode/register.h
+#define P_DI_INP_LUMA_Y0 		CBUS_REG_ADDR(DI_INP_LUMA_Y0) 	///../ucode/register.h
+#define DI_INP_CHROMA_X0 0x17d2 	///../ucode/register.h
+#define P_DI_INP_CHROMA_X0 		CBUS_REG_ADDR(DI_INP_CHROMA_X0) 	///../ucode/register.h
+#define DI_INP_CHROMA_Y0 0x17d3 	///../ucode/register.h
+#define P_DI_INP_CHROMA_Y0 		CBUS_REG_ADDR(DI_INP_CHROMA_Y0) 	///../ucode/register.h
+#define DI_INP_RPT_LOOP 0x17d4 	///../ucode/register.h
+#define P_DI_INP_RPT_LOOP 		CBUS_REG_ADDR(DI_INP_RPT_LOOP) 	///../ucode/register.h
+#define DI_INP_LUMA0_RPT_PAT 0x17d5 	///../ucode/register.h
+#define P_DI_INP_LUMA0_RPT_PAT 		CBUS_REG_ADDR(DI_INP_LUMA0_RPT_PAT) 	///../ucode/register.h
+#define DI_INP_CHROMA0_RPT_PAT 0x17d6 	///../ucode/register.h
+#define P_DI_INP_CHROMA0_RPT_PAT 		CBUS_REG_ADDR(DI_INP_CHROMA0_RPT_PAT) 	///../ucode/register.h
+#define DI_INP_DUMMY_PIXEL 0x17d7 	///../ucode/register.h
+#define P_DI_INP_DUMMY_PIXEL 		CBUS_REG_ADDR(DI_INP_DUMMY_PIXEL) 	///../ucode/register.h
+#define DI_INP_LUMA_FIFO_SIZE 0x17d8 	///../ucode/register.h
+#define P_DI_INP_LUMA_FIFO_SIZE 		CBUS_REG_ADDR(DI_INP_LUMA_FIFO_SIZE) 	///../ucode/register.h
+#define DI_INP_RANGE_MAP_Y 0x17ba 	///../ucode/register.h
+#define P_DI_INP_RANGE_MAP_Y 		CBUS_REG_ADDR(DI_INP_RANGE_MAP_Y) 	///../ucode/register.h
+#define DI_INP_RANGE_MAP_CB 0x17bb 	///../ucode/register.h
+#define P_DI_INP_RANGE_MAP_CB 		CBUS_REG_ADDR(DI_INP_RANGE_MAP_CB) 	///../ucode/register.h
+#define DI_INP_RANGE_MAP_CR 0x17bc 	///../ucode/register.h
+#define P_DI_INP_RANGE_MAP_CR 		CBUS_REG_ADDR(DI_INP_RANGE_MAP_CR) 	///../ucode/register.h
+#define DI_INP_GEN_REG2 0x1791 	///../ucode/register.h
+#define P_DI_INP_GEN_REG2 		CBUS_REG_ADDR(DI_INP_GEN_REG2) 	///../ucode/register.h
+#define DI_INP_FMT_CTRL 0x17d9 	///../ucode/register.h
+#define P_DI_INP_FMT_CTRL 		CBUS_REG_ADDR(DI_INP_FMT_CTRL) 	///../ucode/register.h
+#define DI_INP_FMT_W 0x17da 	///../ucode/register.h
+#define P_DI_INP_FMT_W 		CBUS_REG_ADDR(DI_INP_FMT_W) 	///../ucode/register.h
+#define DI_MEM_GEN_REG 0x17db 	///../ucode/register.h
+#define P_DI_MEM_GEN_REG 		CBUS_REG_ADDR(DI_MEM_GEN_REG) 	///../ucode/register.h
+#define DI_MEM_CANVAS0 0x17dc 	///../ucode/register.h
+#define P_DI_MEM_CANVAS0 		CBUS_REG_ADDR(DI_MEM_CANVAS0) 	///../ucode/register.h
+#define DI_MEM_LUMA_X0 0x17dd 	///../ucode/register.h
+#define P_DI_MEM_LUMA_X0 		CBUS_REG_ADDR(DI_MEM_LUMA_X0) 	///../ucode/register.h
+#define DI_MEM_LUMA_Y0 0x17de 	///../ucode/register.h
+#define P_DI_MEM_LUMA_Y0 		CBUS_REG_ADDR(DI_MEM_LUMA_Y0) 	///../ucode/register.h
+#define DI_MEM_CHROMA_X0 0x17df 	///../ucode/register.h
+#define P_DI_MEM_CHROMA_X0 		CBUS_REG_ADDR(DI_MEM_CHROMA_X0) 	///../ucode/register.h
+#define DI_MEM_CHROMA_Y0 0x17e0 	///../ucode/register.h
+#define P_DI_MEM_CHROMA_Y0 		CBUS_REG_ADDR(DI_MEM_CHROMA_Y0) 	///../ucode/register.h
+#define DI_MEM_RPT_LOOP 0x17e1 	///../ucode/register.h
+#define P_DI_MEM_RPT_LOOP 		CBUS_REG_ADDR(DI_MEM_RPT_LOOP) 	///../ucode/register.h
+#define DI_MEM_LUMA0_RPT_PAT 0x17e2 	///../ucode/register.h
+#define P_DI_MEM_LUMA0_RPT_PAT 		CBUS_REG_ADDR(DI_MEM_LUMA0_RPT_PAT) 	///../ucode/register.h
+#define DI_MEM_CHROMA0_RPT_PAT 0x17e3 	///../ucode/register.h
+#define P_DI_MEM_CHROMA0_RPT_PAT 		CBUS_REG_ADDR(DI_MEM_CHROMA0_RPT_PAT) 	///../ucode/register.h
+#define DI_MEM_DUMMY_PIXEL 0x17e4 	///../ucode/register.h
+#define P_DI_MEM_DUMMY_PIXEL 		CBUS_REG_ADDR(DI_MEM_DUMMY_PIXEL) 	///../ucode/register.h
+#define DI_MEM_LUMA_FIFO_SIZE 0x17e5 	///../ucode/register.h
+#define P_DI_MEM_LUMA_FIFO_SIZE 		CBUS_REG_ADDR(DI_MEM_LUMA_FIFO_SIZE) 	///../ucode/register.h
+#define DI_MEM_RANGE_MAP_Y 0x17bd 	///../ucode/register.h
+#define P_DI_MEM_RANGE_MAP_Y 		CBUS_REG_ADDR(DI_MEM_RANGE_MAP_Y) 	///../ucode/register.h
+#define DI_MEM_RANGE_MAP_CB 0x17be 	///../ucode/register.h
+#define P_DI_MEM_RANGE_MAP_CB 		CBUS_REG_ADDR(DI_MEM_RANGE_MAP_CB) 	///../ucode/register.h
+#define DI_MEM_RANGE_MAP_CR 0x17bf 	///../ucode/register.h
+#define P_DI_MEM_RANGE_MAP_CR 		CBUS_REG_ADDR(DI_MEM_RANGE_MAP_CR) 	///../ucode/register.h
+#define DI_MEM_GEN_REG2 0x1792 	///../ucode/register.h
+#define P_DI_MEM_GEN_REG2 		CBUS_REG_ADDR(DI_MEM_GEN_REG2) 	///../ucode/register.h
+#define DI_MEM_FMT_CTRL 0x17e6 	///../ucode/register.h
+#define P_DI_MEM_FMT_CTRL 		CBUS_REG_ADDR(DI_MEM_FMT_CTRL) 	///../ucode/register.h
+#define DI_MEM_FMT_W 0x17e7 	///../ucode/register.h
+#define P_DI_MEM_FMT_W 		CBUS_REG_ADDR(DI_MEM_FMT_W) 	///../ucode/register.h
+#define DI_IF1_GEN_REG 0x17e8 	///../ucode/register.h
+#define P_DI_IF1_GEN_REG 		CBUS_REG_ADDR(DI_IF1_GEN_REG) 	///../ucode/register.h
+#define DI_IF1_CANVAS0 0x17e9 	///../ucode/register.h
+#define P_DI_IF1_CANVAS0 		CBUS_REG_ADDR(DI_IF1_CANVAS0) 	///../ucode/register.h
+#define DI_IF1_LUMA_X0 0x17ea 	///../ucode/register.h
+#define P_DI_IF1_LUMA_X0 		CBUS_REG_ADDR(DI_IF1_LUMA_X0) 	///../ucode/register.h
+#define DI_IF1_LUMA_Y0 0x17eb 	///../ucode/register.h
+#define P_DI_IF1_LUMA_Y0 		CBUS_REG_ADDR(DI_IF1_LUMA_Y0) 	///../ucode/register.h
+#define DI_IF1_CHROMA_X0 0x17ec 	///../ucode/register.h
+#define P_DI_IF1_CHROMA_X0 		CBUS_REG_ADDR(DI_IF1_CHROMA_X0) 	///../ucode/register.h
+#define DI_IF1_CHROMA_Y0 0x17ed 	///../ucode/register.h
+#define P_DI_IF1_CHROMA_Y0 		CBUS_REG_ADDR(DI_IF1_CHROMA_Y0) 	///../ucode/register.h
+#define DI_IF1_RPT_LOOP 0x17ee 	///../ucode/register.h
+#define P_DI_IF1_RPT_LOOP 		CBUS_REG_ADDR(DI_IF1_RPT_LOOP) 	///../ucode/register.h
+#define DI_IF1_LUMA0_RPT_PAT 0x17ef 	///../ucode/register.h
+#define P_DI_IF1_LUMA0_RPT_PAT 		CBUS_REG_ADDR(DI_IF1_LUMA0_RPT_PAT) 	///../ucode/register.h
+#define DI_IF1_CHROMA0_RPT_PAT 0x17f0 	///../ucode/register.h
+#define P_DI_IF1_CHROMA0_RPT_PAT 		CBUS_REG_ADDR(DI_IF1_CHROMA0_RPT_PAT) 	///../ucode/register.h
+#define DI_IF1_DUMMY_PIXEL 0x17f1 	///../ucode/register.h
+#define P_DI_IF1_DUMMY_PIXEL 		CBUS_REG_ADDR(DI_IF1_DUMMY_PIXEL) 	///../ucode/register.h
+#define DI_IF1_LUMA_FIFO_SIZE 0x17f2 	///../ucode/register.h
+#define P_DI_IF1_LUMA_FIFO_SIZE 		CBUS_REG_ADDR(DI_IF1_LUMA_FIFO_SIZE) 	///../ucode/register.h
+#define DI_IF1_RANGE_MAP_Y 0x17fc 	///../ucode/register.h
+#define P_DI_IF1_RANGE_MAP_Y 		CBUS_REG_ADDR(DI_IF1_RANGE_MAP_Y) 	///../ucode/register.h
+#define DI_IF1_RANGE_MAP_CB 0x17fd 	///../ucode/register.h
+#define P_DI_IF1_RANGE_MAP_CB 		CBUS_REG_ADDR(DI_IF1_RANGE_MAP_CB) 	///../ucode/register.h
+#define DI_IF1_RANGE_MAP_CR 0x17fe 	///../ucode/register.h
+#define P_DI_IF1_RANGE_MAP_CR 		CBUS_REG_ADDR(DI_IF1_RANGE_MAP_CR) 	///../ucode/register.h
+#define DI_IF1_GEN_REG2 0x1790 	///../ucode/register.h
+#define P_DI_IF1_GEN_REG2 		CBUS_REG_ADDR(DI_IF1_GEN_REG2) 	///../ucode/register.h
+#define DI_IF1_FMT_CTRL 0x17f3 	///../ucode/register.h
+#define P_DI_IF1_FMT_CTRL 		CBUS_REG_ADDR(DI_IF1_FMT_CTRL) 	///../ucode/register.h
+#define DI_IF1_FMT_W 0x17f4 	///../ucode/register.h
+#define P_DI_IF1_FMT_W 		CBUS_REG_ADDR(DI_IF1_FMT_W) 	///../ucode/register.h
+#define DI_CHAN2_GEN_REG 0x17f5 	///../ucode/register.h
+#define P_DI_CHAN2_GEN_REG 		CBUS_REG_ADDR(DI_CHAN2_GEN_REG) 	///../ucode/register.h
+#define DI_CHAN2_CANVAS0 0x17f6 	///../ucode/register.h
+#define DI_CHAN2_CANVAS     DI_CHAN2_CANVAS0
+#define P_DI_CHAN2_CANVAS0 		CBUS_REG_ADDR(DI_CHAN2_CANVAS0) 	///../ucode/register.h
+#define DI_CHAN2_LUMA_X0 0x17f7 	///../ucode/register.h
+#define DI_CHAN2_LUMA_X    DI_CHAN2_LUMA_X0
+#define P_DI_CHAN2_LUMA_X0 		CBUS_REG_ADDR(DI_CHAN2_LUMA_X0) 	///../ucode/register.h
+#define DI_CHAN2_LUMA_Y0 0x17f8 	///../ucode/register.h
+#define DI_CHAN2_LUMA_Y DI_CHAN2_LUMA_Y0
+#define P_DI_CHAN2_LUMA_Y0 		CBUS_REG_ADDR(DI_CHAN2_LUMA_Y0) 	///../ucode/register.h
+#define DI_CHAN2_CHROMA_X0 0x17f9 	///../ucode/register.h
+#define P_DI_CHAN2_CHROMA_X0 		CBUS_REG_ADDR(DI_CHAN2_CHROMA_X0) 	///../ucode/register.h
+#define DI_CHAN2_CHROMA_Y0 0x17fa 	///../ucode/register.h
+#define P_DI_CHAN2_CHROMA_Y0 		CBUS_REG_ADDR(DI_CHAN2_CHROMA_Y0) 	///../ucode/register.h
+#define DI_CHAN2_RPT_LOOP 0x17fb 	///../ucode/register.h
+#define P_DI_CHAN2_RPT_LOOP 		CBUS_REG_ADDR(DI_CHAN2_RPT_LOOP) 	///../ucode/register.h
+#define DI_CHAN2_LUMA0_RPT_PAT 0x17b0 	///../ucode/register.h
+#define DI_CHAN2_LUMA_RPT_PAT   DI_CHAN2_LUMA0_RPT_PAT
+#define P_DI_CHAN2_LUMA0_RPT_PAT 		CBUS_REG_ADDR(DI_CHAN2_LUMA0_RPT_PAT) 	///../ucode/register.h
+#define DI_CHAN2_CHROMA0_RPT_PAT 0x17b1 	///../ucode/register.h
+#define P_DI_CHAN2_CHROMA0_RPT_PAT 		CBUS_REG_ADDR(DI_CHAN2_CHROMA0_RPT_PAT) 	///../ucode/register.h
+#define DI_CHAN2_DUMMY_PIXEL 0x17b2 	///../ucode/register.h
+#define P_DI_CHAN2_DUMMY_PIXEL 		CBUS_REG_ADDR(DI_CHAN2_DUMMY_PIXEL) 	///../ucode/register.h
+#define DI_CHAN2_LUMA_FIFO_SIZE 0x17b3 	///../ucode/register.h
+#define P_DI_CHAN2_LUMA_FIFO_SIZE 		CBUS_REG_ADDR(DI_CHAN2_LUMA_FIFO_SIZE) 	///../ucode/register.h
+#define DI_CHAN2_RANGE_MAP_Y 0x17b4 	///../ucode/register.h
+#define P_DI_CHAN2_RANGE_MAP_Y 		CBUS_REG_ADDR(DI_CHAN2_RANGE_MAP_Y) 	///../ucode/register.h
+#define DI_CHAN2_RANGE_MAP_CB 0x17b5 	///../ucode/register.h
+#define P_DI_CHAN2_RANGE_MAP_CB 		CBUS_REG_ADDR(DI_CHAN2_RANGE_MAP_CB) 	///../ucode/register.h
+#define DI_CHAN2_RANGE_MAP_CR 0x17b6 	///../ucode/register.h
+#define P_DI_CHAN2_RANGE_MAP_CR 		CBUS_REG_ADDR(DI_CHAN2_RANGE_MAP_CR) 	///../ucode/register.h
+#define DI_CHAN2_GEN_REG2 0x17b7 	///../ucode/register.h
+#define P_DI_CHAN2_GEN_REG2 		CBUS_REG_ADDR(DI_CHAN2_GEN_REG2) 	///../ucode/register.h
+#define DI_CHAN2_FMT_CTRL 0x17b8 	///../ucode/register.h
+#define P_DI_CHAN2_FMT_CTRL 		CBUS_REG_ADDR(DI_CHAN2_FMT_CTRL) 	///../ucode/register.h
+#define DI_CHAN2_FMT_W 0x17b9 	///../ucode/register.h
+#define P_DI_CHAN2_FMT_W 		CBUS_REG_ADDR(DI_CHAN2_FMT_W) 	///../ucode/register.h
+#define VIU2_ADDR_START 0x1e00 	///../ucode/register.h
+#define P_VIU2_ADDR_START 		CBUS_REG_ADDR(VIU2_ADDR_START) 	///../ucode/register.h
+#define VIU2_ADDR_END 0x1eff 	///../ucode/register.h
+#define P_VIU2_ADDR_END 		CBUS_REG_ADDR(VIU2_ADDR_END) 	///../ucode/register.h
+#define VIU2_OSD1_CTRL_STAT 0x1e10 	///../ucode/register.h
+#define P_VIU2_OSD1_CTRL_STAT 		CBUS_REG_ADDR(VIU2_OSD1_CTRL_STAT) 	///../ucode/register.h
+#define VIU2_OSD1_CTRL_STAT2 0x1e2d 	///../ucode/register.h
+#define P_VIU2_OSD1_CTRL_STAT2 		CBUS_REG_ADDR(VIU2_OSD1_CTRL_STAT2) 	///../ucode/register.h
+#define VIU2_OSD1_COLOR_ADDR 0x1e11 	///../ucode/register.h
+#define P_VIU2_OSD1_COLOR_ADDR 		CBUS_REG_ADDR(VIU2_OSD1_COLOR_ADDR) 	///../ucode/register.h
+#define VIU2_OSD1_COLOR 0x1e12 	///../ucode/register.h
+#define P_VIU2_OSD1_COLOR 		CBUS_REG_ADDR(VIU2_OSD1_COLOR) 	///../ucode/register.h
+#define VIU2_OSD1_TCOLOR_AG0 0x1e17 	///../ucode/register.h
+#define P_VIU2_OSD1_TCOLOR_AG0 		CBUS_REG_ADDR(VIU2_OSD1_TCOLOR_AG0) 	///../ucode/register.h
+#define VIU2_OSD1_TCOLOR_AG1 0x1e18 	///../ucode/register.h
+#define P_VIU2_OSD1_TCOLOR_AG1 		CBUS_REG_ADDR(VIU2_OSD1_TCOLOR_AG1) 	///../ucode/register.h
+#define VIU2_OSD1_TCOLOR_AG2 0x1e19 	///../ucode/register.h
+#define P_VIU2_OSD1_TCOLOR_AG2 		CBUS_REG_ADDR(VIU2_OSD1_TCOLOR_AG2) 	///../ucode/register.h
+#define VIU2_OSD1_TCOLOR_AG3 0x1e1a 	///../ucode/register.h
+#define P_VIU2_OSD1_TCOLOR_AG3 		CBUS_REG_ADDR(VIU2_OSD1_TCOLOR_AG3) 	///../ucode/register.h
+#define VIU2_OSD1_BLK0_CFG_W0 0x1e1b 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK0_CFG_W0 		CBUS_REG_ADDR(VIU2_OSD1_BLK0_CFG_W0) 	///../ucode/register.h
+#define VIU2_OSD1_BLK1_CFG_W0 0x1e1f 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK1_CFG_W0 		CBUS_REG_ADDR(VIU2_OSD1_BLK1_CFG_W0) 	///../ucode/register.h
+#define VIU2_OSD1_BLK2_CFG_W0 0x1e23 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK2_CFG_W0 		CBUS_REG_ADDR(VIU2_OSD1_BLK2_CFG_W0) 	///../ucode/register.h
+#define VIU2_OSD1_BLK3_CFG_W0 0x1e27 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK3_CFG_W0 		CBUS_REG_ADDR(VIU2_OSD1_BLK3_CFG_W0) 	///../ucode/register.h
+#define VIU2_OSD1_BLK0_CFG_W1 0x1e1c 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK0_CFG_W1 		CBUS_REG_ADDR(VIU2_OSD1_BLK0_CFG_W1) 	///../ucode/register.h
+#define VIU2_OSD1_BLK1_CFG_W1 0x1e20 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK1_CFG_W1 		CBUS_REG_ADDR(VIU2_OSD1_BLK1_CFG_W1) 	///../ucode/register.h
+#define VIU2_OSD1_BLK2_CFG_W1 0x1e24 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK2_CFG_W1 		CBUS_REG_ADDR(VIU2_OSD1_BLK2_CFG_W1) 	///../ucode/register.h
+#define VIU2_OSD1_BLK3_CFG_W1 0x1e28 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK3_CFG_W1 		CBUS_REG_ADDR(VIU2_OSD1_BLK3_CFG_W1) 	///../ucode/register.h
+#define VIU2_OSD1_BLK0_CFG_W2 0x1e1d 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK0_CFG_W2 		CBUS_REG_ADDR(VIU2_OSD1_BLK0_CFG_W2) 	///../ucode/register.h
+#define VIU2_OSD1_BLK1_CFG_W2 0x1e21 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK1_CFG_W2 		CBUS_REG_ADDR(VIU2_OSD1_BLK1_CFG_W2) 	///../ucode/register.h
+#define VIU2_OSD1_BLK2_CFG_W2 0x1e25 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK2_CFG_W2 		CBUS_REG_ADDR(VIU2_OSD1_BLK2_CFG_W2) 	///../ucode/register.h
+#define VIU2_OSD1_BLK3_CFG_W2 0x1e29 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK3_CFG_W2 		CBUS_REG_ADDR(VIU2_OSD1_BLK3_CFG_W2) 	///../ucode/register.h
+#define VIU2_OSD1_BLK0_CFG_W3 0x1e1e 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK0_CFG_W3 		CBUS_REG_ADDR(VIU2_OSD1_BLK0_CFG_W3) 	///../ucode/register.h
+#define VIU2_OSD1_BLK1_CFG_W3 0x1e22 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK1_CFG_W3 		CBUS_REG_ADDR(VIU2_OSD1_BLK1_CFG_W3) 	///../ucode/register.h
+#define VIU2_OSD1_BLK2_CFG_W3 0x1e26 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK2_CFG_W3 		CBUS_REG_ADDR(VIU2_OSD1_BLK2_CFG_W3) 	///../ucode/register.h
+#define VIU2_OSD1_BLK3_CFG_W3 0x1e2a 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK3_CFG_W3 		CBUS_REG_ADDR(VIU2_OSD1_BLK3_CFG_W3) 	///../ucode/register.h
+#define VIU2_OSD1_BLK0_CFG_W4 0x1e13 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK0_CFG_W4 		CBUS_REG_ADDR(VIU2_OSD1_BLK0_CFG_W4) 	///../ucode/register.h
+#define VIU2_OSD1_BLK1_CFG_W4 0x1e14 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK1_CFG_W4 		CBUS_REG_ADDR(VIU2_OSD1_BLK1_CFG_W4) 	///../ucode/register.h
+#define VIU2_OSD1_BLK2_CFG_W4 0x1e15 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK2_CFG_W4 		CBUS_REG_ADDR(VIU2_OSD1_BLK2_CFG_W4) 	///../ucode/register.h
+#define VIU2_OSD1_BLK3_CFG_W4 0x1e16 	///../ucode/register.h
+#define P_VIU2_OSD1_BLK3_CFG_W4 		CBUS_REG_ADDR(VIU2_OSD1_BLK3_CFG_W4) 	///../ucode/register.h
+#define VIU2_OSD1_FIFO_CTRL_STAT 0x1e2b 	///../ucode/register.h
+#define P_VIU2_OSD1_FIFO_CTRL_STAT 		CBUS_REG_ADDR(VIU2_OSD1_FIFO_CTRL_STAT) 	///../ucode/register.h
+#define VIU2_OSD1_TEST_RDDATA 0x1e2c 	///../ucode/register.h
+#define P_VIU2_OSD1_TEST_RDDATA 		CBUS_REG_ADDR(VIU2_OSD1_TEST_RDDATA) 	///../ucode/register.h
+#define VIU2_OSD2_CTRL_STAT 0x1e30 	///../ucode/register.h
+#define P_VIU2_OSD2_CTRL_STAT 		CBUS_REG_ADDR(VIU2_OSD2_CTRL_STAT) 	///../ucode/register.h
+#define VIU2_OSD2_CTRL_STAT2 0x1e4d 	///../ucode/register.h
+#define P_VIU2_OSD2_CTRL_STAT2 		CBUS_REG_ADDR(VIU2_OSD2_CTRL_STAT2) 	///../ucode/register.h
+#define VIU2_OSD2_COLOR_ADDR 0x1e31 	///../ucode/register.h
+#define P_VIU2_OSD2_COLOR_ADDR 		CBUS_REG_ADDR(VIU2_OSD2_COLOR_ADDR) 	///../ucode/register.h
+#define VIU2_OSD2_COLOR 0x1e32 	///../ucode/register.h
+#define P_VIU2_OSD2_COLOR 		CBUS_REG_ADDR(VIU2_OSD2_COLOR) 	///../ucode/register.h
+#define VIU2_OSD2_HL1_H_START_END 0x1e33 	///../ucode/register.h
+#define P_VIU2_OSD2_HL1_H_START_END 		CBUS_REG_ADDR(VIU2_OSD2_HL1_H_START_END) 	///../ucode/register.h
+#define VIU2_OSD2_HL1_V_START_END 0x1e34 	///../ucode/register.h
+#define P_VIU2_OSD2_HL1_V_START_END 		CBUS_REG_ADDR(VIU2_OSD2_HL1_V_START_END) 	///../ucode/register.h
+#define VIU2_OSD2_HL2_H_START_END 0x1e35 	///../ucode/register.h
+#define P_VIU2_OSD2_HL2_H_START_END 		CBUS_REG_ADDR(VIU2_OSD2_HL2_H_START_END) 	///../ucode/register.h
+#define VIU2_OSD2_HL2_V_START_END 0x1e36 	///../ucode/register.h
+#define P_VIU2_OSD2_HL2_V_START_END 		CBUS_REG_ADDR(VIU2_OSD2_HL2_V_START_END) 	///../ucode/register.h
+#define VIU2_OSD2_TCOLOR_AG0 0x1e37 	///../ucode/register.h
+#define P_VIU2_OSD2_TCOLOR_AG0 		CBUS_REG_ADDR(VIU2_OSD2_TCOLOR_AG0) 	///../ucode/register.h
+#define VIU2_OSD2_TCOLOR_AG1 0x1e38 	///../ucode/register.h
+#define P_VIU2_OSD2_TCOLOR_AG1 		CBUS_REG_ADDR(VIU2_OSD2_TCOLOR_AG1) 	///../ucode/register.h
+#define VIU2_OSD2_TCOLOR_AG2 0x1e39 	///../ucode/register.h
+#define P_VIU2_OSD2_TCOLOR_AG2 		CBUS_REG_ADDR(VIU2_OSD2_TCOLOR_AG2) 	///../ucode/register.h
+#define VIU2_OSD2_TCOLOR_AG3 0x1e3a 	///../ucode/register.h
+#define P_VIU2_OSD2_TCOLOR_AG3 		CBUS_REG_ADDR(VIU2_OSD2_TCOLOR_AG3) 	///../ucode/register.h
+#define VIU2_OSD2_BLK0_CFG_W0 0x1e3b 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK0_CFG_W0 		CBUS_REG_ADDR(VIU2_OSD2_BLK0_CFG_W0) 	///../ucode/register.h
+#define VIU2_OSD2_BLK1_CFG_W0 0x1e3f 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK1_CFG_W0 		CBUS_REG_ADDR(VIU2_OSD2_BLK1_CFG_W0) 	///../ucode/register.h
+#define VIU2_OSD2_BLK2_CFG_W0 0x1e43 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK2_CFG_W0 		CBUS_REG_ADDR(VIU2_OSD2_BLK2_CFG_W0) 	///../ucode/register.h
+#define VIU2_OSD2_BLK3_CFG_W0 0x1e47 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK3_CFG_W0 		CBUS_REG_ADDR(VIU2_OSD2_BLK3_CFG_W0) 	///../ucode/register.h
+#define VIU2_OSD2_BLK0_CFG_W1 0x1e3c 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK0_CFG_W1 		CBUS_REG_ADDR(VIU2_OSD2_BLK0_CFG_W1) 	///../ucode/register.h
+#define VIU2_OSD2_BLK1_CFG_W1 0x1e40 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK1_CFG_W1 		CBUS_REG_ADDR(VIU2_OSD2_BLK1_CFG_W1) 	///../ucode/register.h
+#define VIU2_OSD2_BLK2_CFG_W1 0x1e44 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK2_CFG_W1 		CBUS_REG_ADDR(VIU2_OSD2_BLK2_CFG_W1) 	///../ucode/register.h
+#define VIU2_OSD2_BLK3_CFG_W1 0x1e48 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK3_CFG_W1 		CBUS_REG_ADDR(VIU2_OSD2_BLK3_CFG_W1) 	///../ucode/register.h
+#define VIU2_OSD2_BLK0_CFG_W2 0x1e3d 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK0_CFG_W2 		CBUS_REG_ADDR(VIU2_OSD2_BLK0_CFG_W2) 	///../ucode/register.h
+#define VIU2_OSD2_BLK1_CFG_W2 0x1e41 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK1_CFG_W2 		CBUS_REG_ADDR(VIU2_OSD2_BLK1_CFG_W2) 	///../ucode/register.h
+#define VIU2_OSD2_BLK2_CFG_W2 0x1e45 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK2_CFG_W2 		CBUS_REG_ADDR(VIU2_OSD2_BLK2_CFG_W2) 	///../ucode/register.h
+#define VIU2_OSD2_BLK3_CFG_W2 0x1e49 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK3_CFG_W2 		CBUS_REG_ADDR(VIU2_OSD2_BLK3_CFG_W2) 	///../ucode/register.h
+#define VIU2_OSD2_BLK0_CFG_W3 0x1e3e 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK0_CFG_W3 		CBUS_REG_ADDR(VIU2_OSD2_BLK0_CFG_W3) 	///../ucode/register.h
+#define VIU2_OSD2_BLK1_CFG_W3 0x1e42 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK1_CFG_W3 		CBUS_REG_ADDR(VIU2_OSD2_BLK1_CFG_W3) 	///../ucode/register.h
+#define VIU2_OSD2_BLK2_CFG_W3 0x1e46 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK2_CFG_W3 		CBUS_REG_ADDR(VIU2_OSD2_BLK2_CFG_W3) 	///../ucode/register.h
+#define VIU2_OSD2_BLK3_CFG_W3 0x1e4a 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK3_CFG_W3 		CBUS_REG_ADDR(VIU2_OSD2_BLK3_CFG_W3) 	///../ucode/register.h
+#define VIU2_OSD2_BLK0_CFG_W4 0x1e64 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK0_CFG_W4 		CBUS_REG_ADDR(VIU2_OSD2_BLK0_CFG_W4) 	///../ucode/register.h
+#define VIU2_OSD2_BLK1_CFG_W4 0x1e65 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK1_CFG_W4 		CBUS_REG_ADDR(VIU2_OSD2_BLK1_CFG_W4) 	///../ucode/register.h
+#define VIU2_OSD2_BLK2_CFG_W4 0x1e66 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK2_CFG_W4 		CBUS_REG_ADDR(VIU2_OSD2_BLK2_CFG_W4) 	///../ucode/register.h
+#define VIU2_OSD2_BLK3_CFG_W4 0x1e67 	///../ucode/register.h
+#define P_VIU2_OSD2_BLK3_CFG_W4 		CBUS_REG_ADDR(VIU2_OSD2_BLK3_CFG_W4) 	///../ucode/register.h
+#define VIU2_OSD2_FIFO_CTRL_STAT 0x1e4b 	///../ucode/register.h
+#define P_VIU2_OSD2_FIFO_CTRL_STAT 		CBUS_REG_ADDR(VIU2_OSD2_FIFO_CTRL_STAT) 	///../ucode/register.h
+#define VIU2_OSD2_TEST_RDDATA 0x1e4c 	///../ucode/register.h
+#define P_VIU2_OSD2_TEST_RDDATA 		CBUS_REG_ADDR(VIU2_OSD2_TEST_RDDATA) 	///../ucode/register.h
+#define VIU2_VD1_IF0_GEN_REG 0x1e50 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_GEN_REG 		CBUS_REG_ADDR(VIU2_VD1_IF0_GEN_REG) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CANVAS0 0x1e51 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CANVAS0 		CBUS_REG_ADDR(VIU2_VD1_IF0_CANVAS0) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CANVAS1 0x1e52 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CANVAS1 		CBUS_REG_ADDR(VIU2_VD1_IF0_CANVAS1) 	///../ucode/register.h
+#define VIU2_VD1_IF0_LUMA_X0 0x1e53 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_LUMA_X0 		CBUS_REG_ADDR(VIU2_VD1_IF0_LUMA_X0) 	///../ucode/register.h
+#define VIU2_VD1_IF0_LUMA_Y0 0x1e54 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_LUMA_Y0 		CBUS_REG_ADDR(VIU2_VD1_IF0_LUMA_Y0) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CHROMA_X0 0x1e55 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CHROMA_X0 		CBUS_REG_ADDR(VIU2_VD1_IF0_CHROMA_X0) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CHROMA_Y0 0x1e56 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CHROMA_Y0 		CBUS_REG_ADDR(VIU2_VD1_IF0_CHROMA_Y0) 	///../ucode/register.h
+#define VIU2_VD1_IF0_LUMA_X1 0x1e57 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_LUMA_X1 		CBUS_REG_ADDR(VIU2_VD1_IF0_LUMA_X1) 	///../ucode/register.h
+#define VIU2_VD1_IF0_LUMA_Y1 0x1e58 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_LUMA_Y1 		CBUS_REG_ADDR(VIU2_VD1_IF0_LUMA_Y1) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CHROMA_X1 0x1e59 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CHROMA_X1 		CBUS_REG_ADDR(VIU2_VD1_IF0_CHROMA_X1) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CHROMA_Y1 0x1e5a 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CHROMA_Y1 		CBUS_REG_ADDR(VIU2_VD1_IF0_CHROMA_Y1) 	///../ucode/register.h
+#define VIU2_VD1_IF0_RPT_LOOP 0x1e5b 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_RPT_LOOP 		CBUS_REG_ADDR(VIU2_VD1_IF0_RPT_LOOP) 	///../ucode/register.h
+#define VIU2_VD1_IF0_LUMA0_RPT_PAT 0x1e5c 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_LUMA0_RPT_PAT 		CBUS_REG_ADDR(VIU2_VD1_IF0_LUMA0_RPT_PAT) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CHROMA0_RPT_PAT 0x1e5d 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CHROMA0_RPT_PAT 		CBUS_REG_ADDR(VIU2_VD1_IF0_CHROMA0_RPT_PAT) 	///../ucode/register.h
+#define VIU2_VD1_IF0_LUMA1_RPT_PAT 0x1e5e 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_LUMA1_RPT_PAT 		CBUS_REG_ADDR(VIU2_VD1_IF0_LUMA1_RPT_PAT) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CHROMA1_RPT_PAT 0x1e5f 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CHROMA1_RPT_PAT 		CBUS_REG_ADDR(VIU2_VD1_IF0_CHROMA1_RPT_PAT) 	///../ucode/register.h
+#define VIU2_VD1_IF0_LUMA_PSEL 0x1e60 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_LUMA_PSEL 		CBUS_REG_ADDR(VIU2_VD1_IF0_LUMA_PSEL) 	///../ucode/register.h
+#define VIU2_VD1_IF0_CHROMA_PSEL 0x1e61 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_CHROMA_PSEL 		CBUS_REG_ADDR(VIU2_VD1_IF0_CHROMA_PSEL) 	///../ucode/register.h
+#define VIU2_VD1_IF0_DUMMY_PIXEL 0x1e62 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_DUMMY_PIXEL 		CBUS_REG_ADDR(VIU2_VD1_IF0_DUMMY_PIXEL) 	///../ucode/register.h
+#define VIU2_VD1_IF0_LUMA_FIFO_SIZE 0x1e63 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_LUMA_FIFO_SIZE 		CBUS_REG_ADDR(VIU2_VD1_IF0_LUMA_FIFO_SIZE) 	///../ucode/register.h
+#define VIU2_VD1_IF0_RANGE_MAP_Y 0x1e6a 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_RANGE_MAP_Y 		CBUS_REG_ADDR(VIU2_VD1_IF0_RANGE_MAP_Y) 	///../ucode/register.h
+#define VIU2_VD1_IF0_RANGE_MAP_CB 0x1e6b 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_RANGE_MAP_CB 		CBUS_REG_ADDR(VIU2_VD1_IF0_RANGE_MAP_CB) 	///../ucode/register.h
+#define VIU2_VD1_IF0_RANGE_MAP_CR 0x1e6c 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_RANGE_MAP_CR 		CBUS_REG_ADDR(VIU2_VD1_IF0_RANGE_MAP_CR) 	///../ucode/register.h
+#define VIU2_VD1_IF0_GEN_REG2 0x1e6d 	///../ucode/register.h
+#define P_VIU2_VD1_IF0_GEN_REG2 		CBUS_REG_ADDR(VIU2_VD1_IF0_GEN_REG2) 	///../ucode/register.h
+#define VIU2_VD1_FMT_CTRL 0x1e68 	///../ucode/register.h
+#define P_VIU2_VD1_FMT_CTRL 		CBUS_REG_ADDR(VIU2_VD1_FMT_CTRL) 	///../ucode/register.h
+#define VIU2_VD1_FMT_W 0x1e69 	///../ucode/register.h
+#define P_VIU2_VD1_FMT_W 		CBUS_REG_ADDR(VIU2_VD1_FMT_W) 	///../ucode/register.h
+#define ENCP_VFIFO2VD_CTL 0x1b58 	///../ucode/register.h
+#define P_ENCP_VFIFO2VD_CTL 		CBUS_REG_ADDR(ENCP_VFIFO2VD_CTL) 	///../ucode/register.h
+#define ENCP_VFIFO2VD_PIXEL_START 0x1b59 	///../ucode/register.h
+#define P_ENCP_VFIFO2VD_PIXEL_START 		CBUS_REG_ADDR(ENCP_VFIFO2VD_PIXEL_START) 	///../ucode/register.h
+#define ENCP_VFIFO2VD_PIXEL_END 0x1b5a 	///../ucode/register.h
+#define P_ENCP_VFIFO2VD_PIXEL_END 		CBUS_REG_ADDR(ENCP_VFIFO2VD_PIXEL_END) 	///../ucode/register.h
+#define ENCP_VFIFO2VD_LINE_TOP_START 0x1b5b 	///../ucode/register.h
+#define P_ENCP_VFIFO2VD_LINE_TOP_START 		CBUS_REG_ADDR(ENCP_VFIFO2VD_LINE_TOP_START) 	///../ucode/register.h
+#define ENCP_VFIFO2VD_LINE_TOP_END 0x1b5c 	///../ucode/register.h
+#define P_ENCP_VFIFO2VD_LINE_TOP_END 		CBUS_REG_ADDR(ENCP_VFIFO2VD_LINE_TOP_END) 	///../ucode/register.h
+#define ENCP_VFIFO2VD_LINE_BOT_START 0x1b5d 	///../ucode/register.h
+#define P_ENCP_VFIFO2VD_LINE_BOT_START 		CBUS_REG_ADDR(ENCP_VFIFO2VD_LINE_BOT_START) 	///../ucode/register.h
+#define ENCP_VFIFO2VD_LINE_BOT_END 0x1b5e 	///../ucode/register.h
+#define P_ENCP_VFIFO2VD_LINE_BOT_END 		CBUS_REG_ADDR(ENCP_VFIFO2VD_LINE_BOT_END) 	///../ucode/register.h
+#define VENC_SYNC_ROUTE 0x1b60 	///../ucode/register.h
+#define P_VENC_SYNC_ROUTE 		CBUS_REG_ADDR(VENC_SYNC_ROUTE) 	///../ucode/register.h
+#define VENC_VIDEO_EXSRC 0x1b61 	///../ucode/register.h
+#define P_VENC_VIDEO_EXSRC 		CBUS_REG_ADDR(VENC_VIDEO_EXSRC) 	///../ucode/register.h
+#define VENC_DVI_SETTING 0x1b62 	///../ucode/register.h
+#define P_VENC_DVI_SETTING 		CBUS_REG_ADDR(VENC_DVI_SETTING) 	///../ucode/register.h
+#define VENC_C656_CTRL 0x1b63 	///../ucode/register.h
+#define P_VENC_C656_CTRL 		CBUS_REG_ADDR(VENC_C656_CTRL) 	///../ucode/register.h
+#define VENC_UPSAMPLE_CTRL0 0x1b64 	///../ucode/register.h
+#define P_VENC_UPSAMPLE_CTRL0 		CBUS_REG_ADDR(VENC_UPSAMPLE_CTRL0) 	///../ucode/register.h
+#define VENC_UPSAMPLE_CTRL1 0x1b65 	///../ucode/register.h
+#define P_VENC_UPSAMPLE_CTRL1 		CBUS_REG_ADDR(VENC_UPSAMPLE_CTRL1) 	///../ucode/register.h
+#define VENC_UPSAMPLE_CTRL2 0x1b66 	///../ucode/register.h
+#define P_VENC_UPSAMPLE_CTRL2 		CBUS_REG_ADDR(VENC_UPSAMPLE_CTRL2) 	///../ucode/register.h
+#define TCON_INVERT_CTL 0x1b67 	///../ucode/register.h
+#define P_TCON_INVERT_CTL 		CBUS_REG_ADDR(TCON_INVERT_CTL) 	///../ucode/register.h
+#define VENC_VIDEO_PROG_MODE 0x1b68 	///../ucode/register.h
+#define P_VENC_VIDEO_PROG_MODE 		CBUS_REG_ADDR(VENC_VIDEO_PROG_MODE) 	///../ucode/register.h
+#define VENC_ENCI_LINE 0x1b69 	///../ucode/register.h
+#define P_VENC_ENCI_LINE 		CBUS_REG_ADDR(VENC_ENCI_LINE) 	///../ucode/register.h
+#define VENC_ENCI_PIXEL 0x1b6a 	///../ucode/register.h
+#define P_VENC_ENCI_PIXEL 		CBUS_REG_ADDR(VENC_ENCI_PIXEL) 	///../ucode/register.h
+#define VENC_ENCP_LINE 0x1b6b 	///../ucode/register.h
+#define P_VENC_ENCP_LINE 		CBUS_REG_ADDR(VENC_ENCP_LINE) 	///../ucode/register.h
+#define VENC_ENCP_PIXEL 0x1b6c 	///../ucode/register.h
+#define P_VENC_ENCP_PIXEL 		CBUS_REG_ADDR(VENC_ENCP_PIXEL) 	///../ucode/register.h
+#define VENC_STATA 0x1b6d 	///../ucode/register.h
+#define P_VENC_STATA 		CBUS_REG_ADDR(VENC_STATA) 	///../ucode/register.h
+#define VENC_INTCTRL 0x1b6e 	///../ucode/register.h
+#define P_VENC_INTCTRL 		CBUS_REG_ADDR(VENC_INTCTRL) 	///../ucode/register.h
+#define VENC_INTFLAG 0x1b6f 	///../ucode/register.h
+#define P_VENC_INTFLAG 		CBUS_REG_ADDR(VENC_INTFLAG) 	///../ucode/register.h
+#define VENC_VIDEO_TST_EN 0x1b70 	///../ucode/register.h
+#define P_VENC_VIDEO_TST_EN 		CBUS_REG_ADDR(VENC_VIDEO_TST_EN) 	///../ucode/register.h
+#define VENC_VIDEO_TST_MDSEL 0x1b71 	///../ucode/register.h
+#define P_VENC_VIDEO_TST_MDSEL 		CBUS_REG_ADDR(VENC_VIDEO_TST_MDSEL) 	///../ucode/register.h
+#define VENC_VIDEO_TST_Y 0x1b72 	///../ucode/register.h
+#define P_VENC_VIDEO_TST_Y 		CBUS_REG_ADDR(VENC_VIDEO_TST_Y) 	///../ucode/register.h
+#define VENC_VIDEO_TST_CB 0x1b73 	///../ucode/register.h
+#define P_VENC_VIDEO_TST_CB 		CBUS_REG_ADDR(VENC_VIDEO_TST_CB) 	///../ucode/register.h
+#define VENC_VIDEO_TST_CR 0x1b74 	///../ucode/register.h
+#define P_VENC_VIDEO_TST_CR 		CBUS_REG_ADDR(VENC_VIDEO_TST_CR) 	///../ucode/register.h
+#define VENC_VIDEO_TST_CLRBAR_STRT 0x1b75 	///../ucode/register.h
+#define P_VENC_VIDEO_TST_CLRBAR_STRT 		CBUS_REG_ADDR(VENC_VIDEO_TST_CLRBAR_STRT) 	///../ucode/register.h
+#define VENC_VIDEO_TST_CLRBAR_WIDTH 0x1b76 	///../ucode/register.h
+#define P_VENC_VIDEO_TST_CLRBAR_WIDTH 		CBUS_REG_ADDR(VENC_VIDEO_TST_CLRBAR_WIDTH) 	///../ucode/register.h
+#define VENC_VIDEO_TST_VDCNT_STSET 0x1b77 	///../ucode/register.h
+#define P_VENC_VIDEO_TST_VDCNT_STSET 		CBUS_REG_ADDR(VENC_VIDEO_TST_VDCNT_STSET) 	///../ucode/register.h
+#define VENC_VDAC_DACSEL0 0x1b78 	///../ucode/register.h
+#define P_VENC_VDAC_DACSEL0 		CBUS_REG_ADDR(VENC_VDAC_DACSEL0) 	///../ucode/register.h
+#define VENC_VDAC_DACSEL1 0x1b79 	///../ucode/register.h
+#define P_VENC_VDAC_DACSEL1 		CBUS_REG_ADDR(VENC_VDAC_DACSEL1) 	///../ucode/register.h
+#define VENC_VDAC_DACSEL2 0x1b7a 	///../ucode/register.h
+#define P_VENC_VDAC_DACSEL2 		CBUS_REG_ADDR(VENC_VDAC_DACSEL2) 	///../ucode/register.h
+#define VENC_VDAC_DACSEL3 0x1b7b 	///../ucode/register.h
+#define P_VENC_VDAC_DACSEL3 		CBUS_REG_ADDR(VENC_VDAC_DACSEL3) 	///../ucode/register.h
+#define VENC_VDAC_DACSEL4 0x1b7c 	///../ucode/register.h
+#define P_VENC_VDAC_DACSEL4 		CBUS_REG_ADDR(VENC_VDAC_DACSEL4) 	///../ucode/register.h
+#define VENC_VDAC_DACSEL5 0x1b7d 	///../ucode/register.h
+#define P_VENC_VDAC_DACSEL5 		CBUS_REG_ADDR(VENC_VDAC_DACSEL5) 	///../ucode/register.h
+#define VENC_VDAC_SETTING 0x1b7e 	///../ucode/register.h
+#define P_VENC_VDAC_SETTING 		CBUS_REG_ADDR(VENC_VDAC_SETTING) 	///../ucode/register.h
+#define VENC_VDAC_TST_VAL 0x1b7f 	///../ucode/register.h
+#define P_VENC_VDAC_TST_VAL 		CBUS_REG_ADDR(VENC_VDAC_TST_VAL) 	///../ucode/register.h
+#define VENC_VDAC_DAC0_GAINCTRL 0x1bf0 	///../ucode/register.h
+#define P_VENC_VDAC_DAC0_GAINCTRL 		CBUS_REG_ADDR(VENC_VDAC_DAC0_GAINCTRL) 	///../ucode/register.h
+#define VENC_VDAC_DAC0_OFFSET 0x1bf1 	///../ucode/register.h
+#define P_VENC_VDAC_DAC0_OFFSET 		CBUS_REG_ADDR(VENC_VDAC_DAC0_OFFSET) 	///../ucode/register.h
+#define VENC_VDAC_DAC1_GAINCTRL 0x1bf2 	///../ucode/register.h
+#define P_VENC_VDAC_DAC1_GAINCTRL 		CBUS_REG_ADDR(VENC_VDAC_DAC1_GAINCTRL) 	///../ucode/register.h
+#define VENC_VDAC_DAC1_OFFSET 0x1bf3 	///../ucode/register.h
+#define P_VENC_VDAC_DAC1_OFFSET 		CBUS_REG_ADDR(VENC_VDAC_DAC1_OFFSET) 	///../ucode/register.h
+#define VENC_VDAC_DAC2_GAINCTRL 0x1bf4 	///../ucode/register.h
+#define P_VENC_VDAC_DAC2_GAINCTRL 		CBUS_REG_ADDR(VENC_VDAC_DAC2_GAINCTRL) 	///../ucode/register.h
+#define VENC_VDAC_DAC2_OFFSET 0x1bf5 	///../ucode/register.h
+#define P_VENC_VDAC_DAC2_OFFSET 		CBUS_REG_ADDR(VENC_VDAC_DAC2_OFFSET) 	///../ucode/register.h
+#define VENC_VDAC_DAC3_GAINCTRL 0x1bf6 	///../ucode/register.h
+#define P_VENC_VDAC_DAC3_GAINCTRL 		CBUS_REG_ADDR(VENC_VDAC_DAC3_GAINCTRL) 	///../ucode/register.h
+#define VENC_VDAC_DAC3_OFFSET 0x1bf7 	///../ucode/register.h
+#define P_VENC_VDAC_DAC3_OFFSET 		CBUS_REG_ADDR(VENC_VDAC_DAC3_OFFSET) 	///../ucode/register.h
+#define VENC_VDAC_DAC4_GAINCTRL 0x1bf8 	///../ucode/register.h
+#define P_VENC_VDAC_DAC4_GAINCTRL 		CBUS_REG_ADDR(VENC_VDAC_DAC4_GAINCTRL) 	///../ucode/register.h
+#define VENC_VDAC_DAC4_OFFSET 0x1bf9 	///../ucode/register.h
+#define P_VENC_VDAC_DAC4_OFFSET 		CBUS_REG_ADDR(VENC_VDAC_DAC4_OFFSET) 	///../ucode/register.h
+#define VENC_VDAC_DAC5_GAINCTRL 0x1bfa 	///../ucode/register.h
+#define P_VENC_VDAC_DAC5_GAINCTRL 		CBUS_REG_ADDR(VENC_VDAC_DAC5_GAINCTRL) 	///../ucode/register.h
+#define VENC_VDAC_DAC5_OFFSET 0x1bfb 	///../ucode/register.h
+#define P_VENC_VDAC_DAC5_OFFSET 		CBUS_REG_ADDR(VENC_VDAC_DAC5_OFFSET) 	///../ucode/register.h
+#define VENC_VDAC_FIFO_CTRL 0x1bfc 	///../ucode/register.h
+#define P_VENC_VDAC_FIFO_CTRL 		CBUS_REG_ADDR(VENC_VDAC_FIFO_CTRL) 	///../ucode/register.h
+#define ENCL_TCON_INVERT_CTL 0x1bfd 	///../ucode/register.h
+#define P_ENCL_TCON_INVERT_CTL 		CBUS_REG_ADDR(ENCL_TCON_INVERT_CTL) 	///../ucode/register.h
+#define ENCP_VIDEO_EN 0x1b80 	///../ucode/register.h
+#define P_ENCP_VIDEO_EN 		CBUS_REG_ADDR(ENCP_VIDEO_EN) 	///../ucode/register.h
+#define ENCP_VIDEO_SYNC_MODE 0x1b81 	///../ucode/register.h
+#define P_ENCP_VIDEO_SYNC_MODE 		CBUS_REG_ADDR(ENCP_VIDEO_SYNC_MODE) 	///../ucode/register.h
+#define ENCP_MACV_EN 0x1b82 	///../ucode/register.h
+#define P_ENCP_MACV_EN 		CBUS_REG_ADDR(ENCP_MACV_EN) 	///../ucode/register.h
+#define ENCP_VIDEO_Y_SCL 0x1b83 	///../ucode/register.h
+#define P_ENCP_VIDEO_Y_SCL 		CBUS_REG_ADDR(ENCP_VIDEO_Y_SCL) 	///../ucode/register.h
+#define ENCP_VIDEO_PB_SCL 0x1b84 	///../ucode/register.h
+#define P_ENCP_VIDEO_PB_SCL 		CBUS_REG_ADDR(ENCP_VIDEO_PB_SCL) 	///../ucode/register.h
+#define ENCP_VIDEO_PR_SCL 0x1b85 	///../ucode/register.h
+#define P_ENCP_VIDEO_PR_SCL 		CBUS_REG_ADDR(ENCP_VIDEO_PR_SCL) 	///../ucode/register.h
+#define ENCP_VIDEO_SYNC_SCL 0x1b86 	///../ucode/register.h
+#define P_ENCP_VIDEO_SYNC_SCL 		CBUS_REG_ADDR(ENCP_VIDEO_SYNC_SCL) 	///../ucode/register.h
+#define ENCP_VIDEO_MACV_SCL 0x1b87 	///../ucode/register.h
+#define P_ENCP_VIDEO_MACV_SCL 		CBUS_REG_ADDR(ENCP_VIDEO_MACV_SCL) 	///../ucode/register.h
+#define ENCP_VIDEO_Y_OFFST 0x1b88 	///../ucode/register.h
+#define P_ENCP_VIDEO_Y_OFFST 		CBUS_REG_ADDR(ENCP_VIDEO_Y_OFFST) 	///../ucode/register.h
+#define ENCP_VIDEO_PB_OFFST 0x1b89 	///../ucode/register.h
+#define P_ENCP_VIDEO_PB_OFFST 		CBUS_REG_ADDR(ENCP_VIDEO_PB_OFFST) 	///../ucode/register.h
+#define ENCP_VIDEO_PR_OFFST 0x1b8a 	///../ucode/register.h
+#define P_ENCP_VIDEO_PR_OFFST 		CBUS_REG_ADDR(ENCP_VIDEO_PR_OFFST) 	///../ucode/register.h
+#define ENCP_VIDEO_SYNC_OFFST 0x1b8b 	///../ucode/register.h
+#define P_ENCP_VIDEO_SYNC_OFFST 		CBUS_REG_ADDR(ENCP_VIDEO_SYNC_OFFST) 	///../ucode/register.h
+#define ENCP_VIDEO_MACV_OFFST 0x1b8c 	///../ucode/register.h
+#define P_ENCP_VIDEO_MACV_OFFST 		CBUS_REG_ADDR(ENCP_VIDEO_MACV_OFFST) 	///../ucode/register.h
+#define ENCP_VIDEO_MODE 0x1b8d 	///../ucode/register.h
+#define P_ENCP_VIDEO_MODE 		CBUS_REG_ADDR(ENCP_VIDEO_MODE) 	///../ucode/register.h
+#define ENCP_VIDEO_MODE_ADV 0x1b8e 	///../ucode/register.h
+#define P_ENCP_VIDEO_MODE_ADV 		CBUS_REG_ADDR(ENCP_VIDEO_MODE_ADV) 	///../ucode/register.h
+#define ENCP_DBG_PX_RST 0x1b90 	///../ucode/register.h
+#define P_ENCP_DBG_PX_RST 		CBUS_REG_ADDR(ENCP_DBG_PX_RST) 	///../ucode/register.h
+#define ENCP_DBG_LN_RST 0x1b91 	///../ucode/register.h
+#define P_ENCP_DBG_LN_RST 		CBUS_REG_ADDR(ENCP_DBG_LN_RST) 	///../ucode/register.h
+#define ENCP_DBG_PX_INT 0x1b92 	///../ucode/register.h
+#define P_ENCP_DBG_PX_INT 		CBUS_REG_ADDR(ENCP_DBG_PX_INT) 	///../ucode/register.h
+#define ENCP_DBG_LN_INT 0x1b93 	///../ucode/register.h
+#define P_ENCP_DBG_LN_INT 		CBUS_REG_ADDR(ENCP_DBG_LN_INT) 	///../ucode/register.h
+#define ENCP_VIDEO_YFP1_HTIME 0x1b94 	///../ucode/register.h
+#define P_ENCP_VIDEO_YFP1_HTIME 		CBUS_REG_ADDR(ENCP_VIDEO_YFP1_HTIME) 	///../ucode/register.h
+#define ENCP_VIDEO_YFP2_HTIME 0x1b95 	///../ucode/register.h
+#define P_ENCP_VIDEO_YFP2_HTIME 		CBUS_REG_ADDR(ENCP_VIDEO_YFP2_HTIME) 	///../ucode/register.h
+#define ENCP_VIDEO_YC_DLY 0x1b96 	///../ucode/register.h
+#define P_ENCP_VIDEO_YC_DLY 		CBUS_REG_ADDR(ENCP_VIDEO_YC_DLY) 	///../ucode/register.h
+#define ENCP_VIDEO_MAX_PXCNT 0x1b97 	///../ucode/register.h
+#define P_ENCP_VIDEO_MAX_PXCNT 		CBUS_REG_ADDR(ENCP_VIDEO_MAX_PXCNT) 	///../ucode/register.h
+#define ENCP_VIDEO_HSPULS_BEGIN 0x1b98 	///../ucode/register.h
+#define P_ENCP_VIDEO_HSPULS_BEGIN 		CBUS_REG_ADDR(ENCP_VIDEO_HSPULS_BEGIN) 	///../ucode/register.h
+#define ENCP_VIDEO_HSPULS_END 0x1b99 	///../ucode/register.h
+#define P_ENCP_VIDEO_HSPULS_END 		CBUS_REG_ADDR(ENCP_VIDEO_HSPULS_END) 	///../ucode/register.h
+#define ENCP_VIDEO_HSPULS_SWITCH 0x1b9a 	///../ucode/register.h
+#define P_ENCP_VIDEO_HSPULS_SWITCH 		CBUS_REG_ADDR(ENCP_VIDEO_HSPULS_SWITCH) 	///../ucode/register.h
+#define ENCP_VIDEO_VSPULS_BEGIN 0x1b9b 	///../ucode/register.h
+#define P_ENCP_VIDEO_VSPULS_BEGIN 		CBUS_REG_ADDR(ENCP_VIDEO_VSPULS_BEGIN) 	///../ucode/register.h
+#define ENCP_VIDEO_VSPULS_END 0x1b9c 	///../ucode/register.h
+#define P_ENCP_VIDEO_VSPULS_END 		CBUS_REG_ADDR(ENCP_VIDEO_VSPULS_END) 	///../ucode/register.h
+#define ENCP_VIDEO_VSPULS_BLINE 0x1b9d 	///../ucode/register.h
+#define P_ENCP_VIDEO_VSPULS_BLINE 		CBUS_REG_ADDR(ENCP_VIDEO_VSPULS_BLINE) 	///../ucode/register.h
+#define ENCP_VIDEO_VSPULS_ELINE 0x1b9e 	///../ucode/register.h
+#define P_ENCP_VIDEO_VSPULS_ELINE 		CBUS_REG_ADDR(ENCP_VIDEO_VSPULS_ELINE) 	///../ucode/register.h
+#define ENCP_VIDEO_EQPULS_BEGIN 0x1b9f 	///../ucode/register.h
+#define P_ENCP_VIDEO_EQPULS_BEGIN 		CBUS_REG_ADDR(ENCP_VIDEO_EQPULS_BEGIN) 	///../ucode/register.h
+#define ENCP_VIDEO_EQPULS_END 0x1ba0 	///../ucode/register.h
+#define P_ENCP_VIDEO_EQPULS_END 		CBUS_REG_ADDR(ENCP_VIDEO_EQPULS_END) 	///../ucode/register.h
+#define ENCP_VIDEO_EQPULS_BLINE 0x1ba1 	///../ucode/register.h
+#define P_ENCP_VIDEO_EQPULS_BLINE 		CBUS_REG_ADDR(ENCP_VIDEO_EQPULS_BLINE) 	///../ucode/register.h
+#define ENCP_VIDEO_EQPULS_ELINE 0x1ba2 	///../ucode/register.h
+#define P_ENCP_VIDEO_EQPULS_ELINE 		CBUS_REG_ADDR(ENCP_VIDEO_EQPULS_ELINE) 	///../ucode/register.h
+#define ENCP_VIDEO_HAVON_END 0x1ba3 	///../ucode/register.h
+#define P_ENCP_VIDEO_HAVON_END 		CBUS_REG_ADDR(ENCP_VIDEO_HAVON_END) 	///../ucode/register.h
+#define ENCP_VIDEO_HAVON_BEGIN 0x1ba4 	///../ucode/register.h
+#define P_ENCP_VIDEO_HAVON_BEGIN 		CBUS_REG_ADDR(ENCP_VIDEO_HAVON_BEGIN) 	///../ucode/register.h
+#define ENCP_VIDEO_VAVON_ELINE 0x1baf 	///../ucode/register.h
+#define P_ENCP_VIDEO_VAVON_ELINE 		CBUS_REG_ADDR(ENCP_VIDEO_VAVON_ELINE) 	///../ucode/register.h
+#define ENCP_VIDEO_VAVON_BLINE 0x1ba6 	///../ucode/register.h
+#define P_ENCP_VIDEO_VAVON_BLINE 		CBUS_REG_ADDR(ENCP_VIDEO_VAVON_BLINE) 	///../ucode/register.h
+#define ENCP_VIDEO_HSO_BEGIN 0x1ba7 	///../ucode/register.h
+#define P_ENCP_VIDEO_HSO_BEGIN 		CBUS_REG_ADDR(ENCP_VIDEO_HSO_BEGIN) 	///../ucode/register.h
+#define ENCP_VIDEO_HSO_END 0x1ba8 	///../ucode/register.h
+#define P_ENCP_VIDEO_HSO_END 		CBUS_REG_ADDR(ENCP_VIDEO_HSO_END) 	///../ucode/register.h
+#define ENCP_VIDEO_VSO_BEGIN 0x1ba9 	///../ucode/register.h
+#define P_ENCP_VIDEO_VSO_BEGIN 		CBUS_REG_ADDR(ENCP_VIDEO_VSO_BEGIN) 	///../ucode/register.h
+#define ENCP_VIDEO_VSO_END 0x1baa 	///../ucode/register.h
+#define P_ENCP_VIDEO_VSO_END 		CBUS_REG_ADDR(ENCP_VIDEO_VSO_END) 	///../ucode/register.h
+#define ENCP_VIDEO_VSO_BLINE 0x1bab 	///../ucode/register.h
+#define P_ENCP_VIDEO_VSO_BLINE 		CBUS_REG_ADDR(ENCP_VIDEO_VSO_BLINE) 	///../ucode/register.h
+#define ENCP_VIDEO_VSO_ELINE 0x1bac 	///../ucode/register.h
+#define P_ENCP_VIDEO_VSO_ELINE 		CBUS_REG_ADDR(ENCP_VIDEO_VSO_ELINE) 	///../ucode/register.h
+#define ENCP_VIDEO_SYNC_WAVE_CURVE 0x1bad 	///../ucode/register.h
+#define P_ENCP_VIDEO_SYNC_WAVE_CURVE 		CBUS_REG_ADDR(ENCP_VIDEO_SYNC_WAVE_CURVE) 	///../ucode/register.h
+#define ENCP_VIDEO_MAX_LNCNT 0x1bae 	///../ucode/register.h
+#define P_ENCP_VIDEO_MAX_LNCNT 		CBUS_REG_ADDR(ENCP_VIDEO_MAX_LNCNT) 	///../ucode/register.h
+#define ENCP_VIDEO_SY_VAL 0x1bb0 	///../ucode/register.h
+#define P_ENCP_VIDEO_SY_VAL 		CBUS_REG_ADDR(ENCP_VIDEO_SY_VAL) 	///../ucode/register.h
+#define ENCP_VIDEO_SY2_VAL 0x1bb1 	///../ucode/register.h
+#define P_ENCP_VIDEO_SY2_VAL 		CBUS_REG_ADDR(ENCP_VIDEO_SY2_VAL) 	///../ucode/register.h
+#define ENCP_VIDEO_BLANKY_VAL 0x1bb2 	///../ucode/register.h
+#define P_ENCP_VIDEO_BLANKY_VAL 		CBUS_REG_ADDR(ENCP_VIDEO_BLANKY_VAL) 	///../ucode/register.h
+#define ENCP_VIDEO_BLANKPB_VAL 0x1bb3 	///../ucode/register.h
+#define P_ENCP_VIDEO_BLANKPB_VAL 		CBUS_REG_ADDR(ENCP_VIDEO_BLANKPB_VAL) 	///../ucode/register.h
+#define ENCP_VIDEO_BLANKPR_VAL 0x1bb4 	///../ucode/register.h
+#define P_ENCP_VIDEO_BLANKPR_VAL 		CBUS_REG_ADDR(ENCP_VIDEO_BLANKPR_VAL) 	///../ucode/register.h
+#define ENCP_VIDEO_HOFFST 0x1bb5 	///../ucode/register.h
+#define P_ENCP_VIDEO_HOFFST 		CBUS_REG_ADDR(ENCP_VIDEO_HOFFST) 	///../ucode/register.h
+#define ENCP_VIDEO_VOFFST 0x1bb6 	///../ucode/register.h
+#define P_ENCP_VIDEO_VOFFST 		CBUS_REG_ADDR(ENCP_VIDEO_VOFFST) 	///../ucode/register.h
+#define ENCP_VIDEO_RGB_CTRL 0x1bb7 	///../ucode/register.h
+#define P_ENCP_VIDEO_RGB_CTRL 		CBUS_REG_ADDR(ENCP_VIDEO_RGB_CTRL) 	///../ucode/register.h
+#define ENCP_VIDEO_FILT_CTRL 0x1bb8 	///../ucode/register.h
+#define P_ENCP_VIDEO_FILT_CTRL 		CBUS_REG_ADDR(ENCP_VIDEO_FILT_CTRL) 	///../ucode/register.h
+#define ENCP_VIDEO_OFLD_VPEQ_OFST 0x1bb9 	///../ucode/register.h
+#define P_ENCP_VIDEO_OFLD_VPEQ_OFST 		CBUS_REG_ADDR(ENCP_VIDEO_OFLD_VPEQ_OFST) 	///../ucode/register.h
+#define ENCP_VIDEO_OFLD_VOAV_OFST 0x1bba 	///../ucode/register.h
+#define P_ENCP_VIDEO_OFLD_VOAV_OFST 		CBUS_REG_ADDR(ENCP_VIDEO_OFLD_VOAV_OFST) 	///../ucode/register.h
+#define ENCP_VIDEO_MATRIX_CB 0x1bbb 	///../ucode/register.h
+#define P_ENCP_VIDEO_MATRIX_CB 		CBUS_REG_ADDR(ENCP_VIDEO_MATRIX_CB) 	///../ucode/register.h
+#define ENCP_VIDEO_MATRIX_CR 0x1bbc 	///../ucode/register.h
+#define P_ENCP_VIDEO_MATRIX_CR 		CBUS_REG_ADDR(ENCP_VIDEO_MATRIX_CR) 	///../ucode/register.h
+#define ENCP_VIDEO_RGBIN_CTRL 0x1bbd 	///../ucode/register.h
+#define P_ENCP_VIDEO_RGBIN_CTRL 		CBUS_REG_ADDR(ENCP_VIDEO_RGBIN_CTRL) 	///../ucode/register.h
+#define ENCP_MACV_BLANKY_VAL 0x1bc0 	///../ucode/register.h
+#define P_ENCP_MACV_BLANKY_VAL 		CBUS_REG_ADDR(ENCP_MACV_BLANKY_VAL) 	///../ucode/register.h
+#define ENCP_MACV_MAXY_VAL 0x1bc1 	///../ucode/register.h
+#define P_ENCP_MACV_MAXY_VAL 		CBUS_REG_ADDR(ENCP_MACV_MAXY_VAL) 	///../ucode/register.h
+#define ENCP_MACV_1ST_PSSYNC_STRT 0x1bc2 	///../ucode/register.h
+#define P_ENCP_MACV_1ST_PSSYNC_STRT 		CBUS_REG_ADDR(ENCP_MACV_1ST_PSSYNC_STRT) 	///../ucode/register.h
+#define ENCP_MACV_PSSYNC_STRT 0x1bc3 	///../ucode/register.h
+#define P_ENCP_MACV_PSSYNC_STRT 		CBUS_REG_ADDR(ENCP_MACV_PSSYNC_STRT) 	///../ucode/register.h
+#define ENCP_MACV_AGC_STRT 0x1bc4 	///../ucode/register.h
+#define P_ENCP_MACV_AGC_STRT 		CBUS_REG_ADDR(ENCP_MACV_AGC_STRT) 	///../ucode/register.h
+#define ENCP_MACV_AGC_END 0x1bc5 	///../ucode/register.h
+#define P_ENCP_MACV_AGC_END 		CBUS_REG_ADDR(ENCP_MACV_AGC_END) 	///../ucode/register.h
+#define ENCP_MACV_WAVE_END 0x1bc6 	///../ucode/register.h
+#define P_ENCP_MACV_WAVE_END 		CBUS_REG_ADDR(ENCP_MACV_WAVE_END) 	///../ucode/register.h
+#define ENCP_MACV_STRTLINE 0x1bc7 	///../ucode/register.h
+#define P_ENCP_MACV_STRTLINE 		CBUS_REG_ADDR(ENCP_MACV_STRTLINE) 	///../ucode/register.h
+#define ENCP_MACV_ENDLINE 0x1bc8 	///../ucode/register.h
+#define P_ENCP_MACV_ENDLINE 		CBUS_REG_ADDR(ENCP_MACV_ENDLINE) 	///../ucode/register.h
+#define ENCP_MACV_TS_CNT_MAX_L 0x1bc9 	///../ucode/register.h
+#define P_ENCP_MACV_TS_CNT_MAX_L 		CBUS_REG_ADDR(ENCP_MACV_TS_CNT_MAX_L) 	///../ucode/register.h
+#define ENCP_MACV_TS_CNT_MAX_H 0x1bca 	///../ucode/register.h
+#define P_ENCP_MACV_TS_CNT_MAX_H 		CBUS_REG_ADDR(ENCP_MACV_TS_CNT_MAX_H) 	///../ucode/register.h
+#define ENCP_MACV_TIME_DOWN 0x1bcb 	///../ucode/register.h
+#define P_ENCP_MACV_TIME_DOWN 		CBUS_REG_ADDR(ENCP_MACV_TIME_DOWN) 	///../ucode/register.h
+#define ENCP_MACV_TIME_LO 0x1bcc 	///../ucode/register.h
+#define P_ENCP_MACV_TIME_LO 		CBUS_REG_ADDR(ENCP_MACV_TIME_LO) 	///../ucode/register.h
+#define ENCP_MACV_TIME_UP 0x1bcd 	///../ucode/register.h
+#define P_ENCP_MACV_TIME_UP 		CBUS_REG_ADDR(ENCP_MACV_TIME_UP) 	///../ucode/register.h
+#define ENCP_MACV_TIME_RST 0x1bce 	///../ucode/register.h
+#define P_ENCP_MACV_TIME_RST 		CBUS_REG_ADDR(ENCP_MACV_TIME_RST) 	///../ucode/register.h
+#define ENCP_VBI_CTRL 0x1bd0 	///../ucode/register.h
+#define P_ENCP_VBI_CTRL 		CBUS_REG_ADDR(ENCP_VBI_CTRL) 	///../ucode/register.h
+#define ENCP_VBI_SETTING 0x1bd1 	///../ucode/register.h
+#define P_ENCP_VBI_SETTING 		CBUS_REG_ADDR(ENCP_VBI_SETTING) 	///../ucode/register.h
+#define ENCP_VBI_BEGIN 0x1bd2 	///../ucode/register.h
+#define P_ENCP_VBI_BEGIN 		CBUS_REG_ADDR(ENCP_VBI_BEGIN) 	///../ucode/register.h
+#define ENCP_VBI_WIDTH 0x1bd3 	///../ucode/register.h
+#define P_ENCP_VBI_WIDTH 		CBUS_REG_ADDR(ENCP_VBI_WIDTH) 	///../ucode/register.h
+#define ENCP_VBI_HVAL 0x1bd4 	///../ucode/register.h
+#define P_ENCP_VBI_HVAL 		CBUS_REG_ADDR(ENCP_VBI_HVAL) 	///../ucode/register.h
+#define ENCP_VBI_DATA0 0x1bd5 	///../ucode/register.h
+#define P_ENCP_VBI_DATA0 		CBUS_REG_ADDR(ENCP_VBI_DATA0) 	///../ucode/register.h
+#define ENCP_VBI_DATA1 0x1bd6 	///../ucode/register.h
+#define P_ENCP_VBI_DATA1 		CBUS_REG_ADDR(ENCP_VBI_DATA1) 	///../ucode/register.h
+#define C656_HS_ST 0x1be0 	///../ucode/register.h
+#define P_C656_HS_ST 		CBUS_REG_ADDR(C656_HS_ST) 	///../ucode/register.h
+#define C656_HS_ED 0x1be1 	///../ucode/register.h
+#define P_C656_HS_ED 		CBUS_REG_ADDR(C656_HS_ED) 	///../ucode/register.h
+#define C656_VS_LNST_E 0x1be2 	///../ucode/register.h
+#define P_C656_VS_LNST_E 		CBUS_REG_ADDR(C656_VS_LNST_E) 	///../ucode/register.h
+#define C656_VS_LNST_O 0x1be3 	///../ucode/register.h
+#define P_C656_VS_LNST_O 		CBUS_REG_ADDR(C656_VS_LNST_O) 	///../ucode/register.h
+#define C656_VS_LNED_E 0x1be4 	///../ucode/register.h
+#define P_C656_VS_LNED_E 		CBUS_REG_ADDR(C656_VS_LNED_E) 	///../ucode/register.h
+#define C656_VS_LNED_O 0x1be5 	///../ucode/register.h
+#define P_C656_VS_LNED_O 		CBUS_REG_ADDR(C656_VS_LNED_O) 	///../ucode/register.h
+#define C656_FS_LNST 0x1be6 	///../ucode/register.h
+#define P_C656_FS_LNST 		CBUS_REG_ADDR(C656_FS_LNST) 	///../ucode/register.h
+#define C656_FS_LNED 0x1be7 	///../ucode/register.h
+#define P_C656_FS_LNED 		CBUS_REG_ADDR(C656_FS_LNED) 	///../ucode/register.h
+#define ENCI_VIDEO_MODE 0x1b00 	///../ucode/register.h
+#define P_ENCI_VIDEO_MODE 		CBUS_REG_ADDR(ENCI_VIDEO_MODE) 	///../ucode/register.h
+#define ENCI_VIDEO_MODE_ADV 0x1b01 	///../ucode/register.h
+#define P_ENCI_VIDEO_MODE_ADV 		CBUS_REG_ADDR(ENCI_VIDEO_MODE_ADV) 	///../ucode/register.h
+#define ENCI_VIDEO_FSC_ADJ 0x1b02 	///../ucode/register.h
+#define P_ENCI_VIDEO_FSC_ADJ 		CBUS_REG_ADDR(ENCI_VIDEO_FSC_ADJ) 	///../ucode/register.h
+#define ENCI_VIDEO_BRIGHT 0x1b03 	///../ucode/register.h
+#define P_ENCI_VIDEO_BRIGHT 		CBUS_REG_ADDR(ENCI_VIDEO_BRIGHT) 	///../ucode/register.h
+#define ENCI_VIDEO_CONT 0x1b04 	///../ucode/register.h
+#define P_ENCI_VIDEO_CONT 		CBUS_REG_ADDR(ENCI_VIDEO_CONT) 	///../ucode/register.h
+#define ENCI_VIDEO_SAT 0x1b05 	///../ucode/register.h
+#define P_ENCI_VIDEO_SAT 		CBUS_REG_ADDR(ENCI_VIDEO_SAT) 	///../ucode/register.h
+#define ENCI_VIDEO_HUE 0x1b06 	///../ucode/register.h
+#define P_ENCI_VIDEO_HUE 		CBUS_REG_ADDR(ENCI_VIDEO_HUE) 	///../ucode/register.h
+#define ENCI_VIDEO_SCH 0x1b07 	///../ucode/register.h
+#define P_ENCI_VIDEO_SCH 		CBUS_REG_ADDR(ENCI_VIDEO_SCH) 	///../ucode/register.h
+#define ENCI_SYNC_MODE 0x1b08 	///../ucode/register.h
+#define P_ENCI_SYNC_MODE 		CBUS_REG_ADDR(ENCI_SYNC_MODE) 	///../ucode/register.h
+#define ENCI_SYNC_CTRL 0x1b09 	///../ucode/register.h
+#define P_ENCI_SYNC_CTRL 		CBUS_REG_ADDR(ENCI_SYNC_CTRL) 	///../ucode/register.h
+#define ENCI_SYNC_HSO_BEGIN 0x1b0a 	///../ucode/register.h
+#define P_ENCI_SYNC_HSO_BEGIN 		CBUS_REG_ADDR(ENCI_SYNC_HSO_BEGIN) 	///../ucode/register.h
+#define ENCI_SYNC_HSO_END 0x1b0b 	///../ucode/register.h
+#define P_ENCI_SYNC_HSO_END 		CBUS_REG_ADDR(ENCI_SYNC_HSO_END) 	///../ucode/register.h
+#define ENCI_SYNC_VSO_EVN 0x1b0c 	///../ucode/register.h
+#define P_ENCI_SYNC_VSO_EVN 		CBUS_REG_ADDR(ENCI_SYNC_VSO_EVN) 	///../ucode/register.h
+#define ENCI_SYNC_VSO_ODD 0x1b0d 	///../ucode/register.h
+#define P_ENCI_SYNC_VSO_ODD 		CBUS_REG_ADDR(ENCI_SYNC_VSO_ODD) 	///../ucode/register.h
+#define ENCI_SYNC_VSO_EVNLN 0x1b0e 	///../ucode/register.h
+#define P_ENCI_SYNC_VSO_EVNLN 		CBUS_REG_ADDR(ENCI_SYNC_VSO_EVNLN) 	///../ucode/register.h
+#define ENCI_SYNC_VSO_ODDLN 0x1b0f 	///../ucode/register.h
+#define P_ENCI_SYNC_VSO_ODDLN 		CBUS_REG_ADDR(ENCI_SYNC_VSO_ODDLN) 	///../ucode/register.h
+#define ENCI_SYNC_HOFFST 0x1b10 	///../ucode/register.h
+#define P_ENCI_SYNC_HOFFST 		CBUS_REG_ADDR(ENCI_SYNC_HOFFST) 	///../ucode/register.h
+#define ENCI_SYNC_VOFFST 0x1b11 	///../ucode/register.h
+#define P_ENCI_SYNC_VOFFST 		CBUS_REG_ADDR(ENCI_SYNC_VOFFST) 	///../ucode/register.h
+#define ENCI_SYNC_ADJ 0x1b12 	///../ucode/register.h
+#define P_ENCI_SYNC_ADJ 		CBUS_REG_ADDR(ENCI_SYNC_ADJ) 	///../ucode/register.h
+#define ENCI_RGB_SETTING 0x1b13 	///../ucode/register.h
+#define P_ENCI_RGB_SETTING 		CBUS_REG_ADDR(ENCI_RGB_SETTING) 	///../ucode/register.h
+#define ENCI_DE_H_BEGIN 0x1b16 	///../ucode/register.h
+#define P_ENCI_DE_H_BEGIN 		CBUS_REG_ADDR(ENCI_DE_H_BEGIN) 	///../ucode/register.h
+#define ENCI_DE_H_END 0x1b17 	///../ucode/register.h
+#define P_ENCI_DE_H_END 		CBUS_REG_ADDR(ENCI_DE_H_END) 	///../ucode/register.h
+#define ENCI_DE_V_BEGIN_EVEN 0x1b18 	///../ucode/register.h
+#define P_ENCI_DE_V_BEGIN_EVEN 		CBUS_REG_ADDR(ENCI_DE_V_BEGIN_EVEN) 	///../ucode/register.h
+#define ENCI_DE_V_END_EVEN 0x1b19 	///../ucode/register.h
+#define P_ENCI_DE_V_END_EVEN 		CBUS_REG_ADDR(ENCI_DE_V_END_EVEN) 	///../ucode/register.h
+#define ENCI_DE_V_BEGIN_ODD 0x1b1a 	///../ucode/register.h
+#define P_ENCI_DE_V_BEGIN_ODD 		CBUS_REG_ADDR(ENCI_DE_V_BEGIN_ODD) 	///../ucode/register.h
+#define ENCI_DE_V_END_ODD 0x1b1b 	///../ucode/register.h
+#define P_ENCI_DE_V_END_ODD 		CBUS_REG_ADDR(ENCI_DE_V_END_ODD) 	///../ucode/register.h
+#define ENCI_VBI_SETTING 0x1b20 	///../ucode/register.h
+#define P_ENCI_VBI_SETTING 		CBUS_REG_ADDR(ENCI_VBI_SETTING) 	///../ucode/register.h
+#define ENCI_VBI_CCDT_EVN 0x1b21 	///../ucode/register.h
+#define P_ENCI_VBI_CCDT_EVN 		CBUS_REG_ADDR(ENCI_VBI_CCDT_EVN) 	///../ucode/register.h
+#define ENCI_VBI_CCDT_ODD 0x1b22 	///../ucode/register.h
+#define P_ENCI_VBI_CCDT_ODD 		CBUS_REG_ADDR(ENCI_VBI_CCDT_ODD) 	///../ucode/register.h
+#define ENCI_VBI_CC525_LN 0x1b23 	///../ucode/register.h
+#define P_ENCI_VBI_CC525_LN 		CBUS_REG_ADDR(ENCI_VBI_CC525_LN) 	///../ucode/register.h
+#define ENCI_VBI_CC625_LN 0x1b24 	///../ucode/register.h
+#define P_ENCI_VBI_CC625_LN 		CBUS_REG_ADDR(ENCI_VBI_CC625_LN) 	///../ucode/register.h
+#define ENCI_VBI_WSSDT 0x1b25 	///../ucode/register.h
+#define P_ENCI_VBI_WSSDT 		CBUS_REG_ADDR(ENCI_VBI_WSSDT) 	///../ucode/register.h
+#define ENCI_VBI_WSS_LN 0x1b26 	///../ucode/register.h
+#define P_ENCI_VBI_WSS_LN 		CBUS_REG_ADDR(ENCI_VBI_WSS_LN) 	///../ucode/register.h
+#define ENCI_VBI_CGMSDT_L 0x1b27 	///../ucode/register.h
+#define P_ENCI_VBI_CGMSDT_L 		CBUS_REG_ADDR(ENCI_VBI_CGMSDT_L) 	///../ucode/register.h
+#define ENCI_VBI_CGMSDT_H 0x1b28 	///../ucode/register.h
+#define P_ENCI_VBI_CGMSDT_H 		CBUS_REG_ADDR(ENCI_VBI_CGMSDT_H) 	///../ucode/register.h
+#define ENCI_VBI_CGMS_LN 0x1b29 	///../ucode/register.h
+#define P_ENCI_VBI_CGMS_LN 		CBUS_REG_ADDR(ENCI_VBI_CGMS_LN) 	///../ucode/register.h
+#define ENCI_VBI_TTX_HTIME 0x1b2a 	///../ucode/register.h
+#define P_ENCI_VBI_TTX_HTIME 		CBUS_REG_ADDR(ENCI_VBI_TTX_HTIME) 	///../ucode/register.h
+#define ENCI_VBI_TTX_LN 0x1b2b 	///../ucode/register.h
+#define P_ENCI_VBI_TTX_LN 		CBUS_REG_ADDR(ENCI_VBI_TTX_LN) 	///../ucode/register.h
+#define ENCI_VBI_TTXDT0 0x1b2c 	///../ucode/register.h
+#define P_ENCI_VBI_TTXDT0 		CBUS_REG_ADDR(ENCI_VBI_TTXDT0) 	///../ucode/register.h
+#define ENCI_VBI_TTXDT1 0x1b2d 	///../ucode/register.h
+#define P_ENCI_VBI_TTXDT1 		CBUS_REG_ADDR(ENCI_VBI_TTXDT1) 	///../ucode/register.h
+#define ENCI_VBI_TTXDT2 0x1b2e 	///../ucode/register.h
+#define P_ENCI_VBI_TTXDT2 		CBUS_REG_ADDR(ENCI_VBI_TTXDT2) 	///../ucode/register.h
+#define ENCI_VBI_TTXDT3 0x1b2f 	///../ucode/register.h
+#define P_ENCI_VBI_TTXDT3 		CBUS_REG_ADDR(ENCI_VBI_TTXDT3) 	///../ucode/register.h
+#define ENCI_MACV_N0 0x1b30 	///../ucode/register.h
+#define P_ENCI_MACV_N0 		CBUS_REG_ADDR(ENCI_MACV_N0) 	///../ucode/register.h
+#define ENCI_MACV_N1 0x1b31 	///../ucode/register.h
+#define P_ENCI_MACV_N1 		CBUS_REG_ADDR(ENCI_MACV_N1) 	///../ucode/register.h
+#define ENCI_MACV_N2 0x1b32 	///../ucode/register.h
+#define P_ENCI_MACV_N2 		CBUS_REG_ADDR(ENCI_MACV_N2) 	///../ucode/register.h
+#define ENCI_MACV_N3 0x1b33 	///../ucode/register.h
+#define P_ENCI_MACV_N3 		CBUS_REG_ADDR(ENCI_MACV_N3) 	///../ucode/register.h
+#define ENCI_MACV_N4 0x1b34 	///../ucode/register.h
+#define P_ENCI_MACV_N4 		CBUS_REG_ADDR(ENCI_MACV_N4) 	///../ucode/register.h
+#define ENCI_MACV_N5 0x1b35 	///../ucode/register.h
+#define P_ENCI_MACV_N5 		CBUS_REG_ADDR(ENCI_MACV_N5) 	///../ucode/register.h
+#define ENCI_MACV_N6 0x1b36 	///../ucode/register.h
+#define P_ENCI_MACV_N6 		CBUS_REG_ADDR(ENCI_MACV_N6) 	///../ucode/register.h
+#define ENCI_MACV_N7 0x1b37 	///../ucode/register.h
+#define P_ENCI_MACV_N7 		CBUS_REG_ADDR(ENCI_MACV_N7) 	///../ucode/register.h
+#define ENCI_MACV_N8 0x1b38 	///../ucode/register.h
+#define P_ENCI_MACV_N8 		CBUS_REG_ADDR(ENCI_MACV_N8) 	///../ucode/register.h
+#define ENCI_MACV_N9 0x1b39 	///../ucode/register.h
+#define P_ENCI_MACV_N9 		CBUS_REG_ADDR(ENCI_MACV_N9) 	///../ucode/register.h
+#define ENCI_MACV_N10 0x1b3a 	///../ucode/register.h
+#define P_ENCI_MACV_N10 		CBUS_REG_ADDR(ENCI_MACV_N10) 	///../ucode/register.h
+#define ENCI_MACV_N11 0x1b3b 	///../ucode/register.h
+#define P_ENCI_MACV_N11 		CBUS_REG_ADDR(ENCI_MACV_N11) 	///../ucode/register.h
+#define ENCI_MACV_N12 0x1b3c 	///../ucode/register.h
+#define P_ENCI_MACV_N12 		CBUS_REG_ADDR(ENCI_MACV_N12) 	///../ucode/register.h
+#define ENCI_MACV_N13 0x1b3d 	///../ucode/register.h
+#define P_ENCI_MACV_N13 		CBUS_REG_ADDR(ENCI_MACV_N13) 	///../ucode/register.h
+#define ENCI_MACV_N14 0x1b3e 	///../ucode/register.h
+#define P_ENCI_MACV_N14 		CBUS_REG_ADDR(ENCI_MACV_N14) 	///../ucode/register.h
+#define ENCI_MACV_N15 0x1b3f 	///../ucode/register.h
+#define P_ENCI_MACV_N15 		CBUS_REG_ADDR(ENCI_MACV_N15) 	///../ucode/register.h
+#define ENCI_MACV_N16 0x1b40 	///../ucode/register.h
+#define P_ENCI_MACV_N16 		CBUS_REG_ADDR(ENCI_MACV_N16) 	///../ucode/register.h
+#define ENCI_MACV_N17 0x1b41 	///../ucode/register.h
+#define P_ENCI_MACV_N17 		CBUS_REG_ADDR(ENCI_MACV_N17) 	///../ucode/register.h
+#define ENCI_MACV_N18 0x1b42 	///../ucode/register.h
+#define P_ENCI_MACV_N18 		CBUS_REG_ADDR(ENCI_MACV_N18) 	///../ucode/register.h
+#define ENCI_MACV_N19 0x1b43 	///../ucode/register.h
+#define P_ENCI_MACV_N19 		CBUS_REG_ADDR(ENCI_MACV_N19) 	///../ucode/register.h
+#define ENCI_MACV_N20 0x1b44 	///../ucode/register.h
+#define P_ENCI_MACV_N20 		CBUS_REG_ADDR(ENCI_MACV_N20) 	///../ucode/register.h
+#define ENCI_MACV_N21 0x1b45 	///../ucode/register.h
+#define P_ENCI_MACV_N21 		CBUS_REG_ADDR(ENCI_MACV_N21) 	///../ucode/register.h
+#define ENCI_MACV_N22 0x1b46 	///../ucode/register.h
+#define P_ENCI_MACV_N22 		CBUS_REG_ADDR(ENCI_MACV_N22) 	///../ucode/register.h
+#define ENCI_DBG_PX_RST 0x1b48 	///../ucode/register.h
+#define P_ENCI_DBG_PX_RST 		CBUS_REG_ADDR(ENCI_DBG_PX_RST) 	///../ucode/register.h
+#define ENCI_DBG_FLDLN_RST 0x1b49 	///../ucode/register.h
+#define P_ENCI_DBG_FLDLN_RST 		CBUS_REG_ADDR(ENCI_DBG_FLDLN_RST) 	///../ucode/register.h
+#define ENCI_DBG_PX_INT 0x1b4a 	///../ucode/register.h
+#define P_ENCI_DBG_PX_INT 		CBUS_REG_ADDR(ENCI_DBG_PX_INT) 	///../ucode/register.h
+#define ENCI_DBG_FLDLN_INT 0x1b4b 	///../ucode/register.h
+#define P_ENCI_DBG_FLDLN_INT 		CBUS_REG_ADDR(ENCI_DBG_FLDLN_INT) 	///../ucode/register.h
+#define ENCI_DBG_MAXPX 0x1b4c 	///../ucode/register.h
+#define P_ENCI_DBG_MAXPX 		CBUS_REG_ADDR(ENCI_DBG_MAXPX) 	///../ucode/register.h
+#define ENCI_DBG_MAXLN 0x1b4d 	///../ucode/register.h
+#define P_ENCI_DBG_MAXLN 		CBUS_REG_ADDR(ENCI_DBG_MAXLN) 	///../ucode/register.h
+#define ENCI_MACV_MAX_AMP 0x1b50 	///../ucode/register.h
+#define P_ENCI_MACV_MAX_AMP 		CBUS_REG_ADDR(ENCI_MACV_MAX_AMP) 	///../ucode/register.h
+#define ENCI_MACV_PULSE_LO 0x1b51 	///../ucode/register.h
+#define P_ENCI_MACV_PULSE_LO 		CBUS_REG_ADDR(ENCI_MACV_PULSE_LO) 	///../ucode/register.h
+#define ENCI_MACV_PULSE_HI 0x1b52 	///../ucode/register.h
+#define P_ENCI_MACV_PULSE_HI 		CBUS_REG_ADDR(ENCI_MACV_PULSE_HI) 	///../ucode/register.h
+#define ENCI_MACV_BKP_MAX 0x1b53 	///../ucode/register.h
+#define P_ENCI_MACV_BKP_MAX 		CBUS_REG_ADDR(ENCI_MACV_BKP_MAX) 	///../ucode/register.h
+#define ENCI_CFILT_CTRL 0x1b54 	///../ucode/register.h
+#define P_ENCI_CFILT_CTRL 		CBUS_REG_ADDR(ENCI_CFILT_CTRL) 	///../ucode/register.h
+#define ENCI_CFILT7 0x1b55 	///../ucode/register.h
+#define P_ENCI_CFILT7 		CBUS_REG_ADDR(ENCI_CFILT7) 	///../ucode/register.h
+#define ENCI_YC_DELAY 0x1b56 	///../ucode/register.h
+#define P_ENCI_YC_DELAY 		CBUS_REG_ADDR(ENCI_YC_DELAY) 	///../ucode/register.h
+#define ENCI_VIDEO_EN 0x1b57 	///../ucode/register.h
+#define P_ENCI_VIDEO_EN 		CBUS_REG_ADDR(ENCI_VIDEO_EN) 	///../ucode/register.h
+#define ENCI_DVI_HSO_BEGIN 0x1c00 	///../ucode/register.h
+#define P_ENCI_DVI_HSO_BEGIN 		CBUS_REG_ADDR(ENCI_DVI_HSO_BEGIN) 	///../ucode/register.h
+#define ENCI_DVI_HSO_END 0x1c01 	///../ucode/register.h
+#define P_ENCI_DVI_HSO_END 		CBUS_REG_ADDR(ENCI_DVI_HSO_END) 	///../ucode/register.h
+#define ENCI_DVI_VSO_BLINE_EVN 0x1c02 	///../ucode/register.h
+#define P_ENCI_DVI_VSO_BLINE_EVN 		CBUS_REG_ADDR(ENCI_DVI_VSO_BLINE_EVN) 	///../ucode/register.h
+#define ENCI_DVI_VSO_BLINE_ODD 0x1c03 	///../ucode/register.h
+#define P_ENCI_DVI_VSO_BLINE_ODD 		CBUS_REG_ADDR(ENCI_DVI_VSO_BLINE_ODD) 	///../ucode/register.h
+#define ENCI_DVI_VSO_ELINE_EVN 0x1c04 	///../ucode/register.h
+#define P_ENCI_DVI_VSO_ELINE_EVN 		CBUS_REG_ADDR(ENCI_DVI_VSO_ELINE_EVN) 	///../ucode/register.h
+#define ENCI_DVI_VSO_ELINE_ODD 0x1c05 	///../ucode/register.h
+#define P_ENCI_DVI_VSO_ELINE_ODD 		CBUS_REG_ADDR(ENCI_DVI_VSO_ELINE_ODD) 	///../ucode/register.h
+#define ENCI_DVI_VSO_BEGIN_EVN 0x1c06 	///../ucode/register.h
+#define P_ENCI_DVI_VSO_BEGIN_EVN 		CBUS_REG_ADDR(ENCI_DVI_VSO_BEGIN_EVN) 	///../ucode/register.h
+#define ENCI_DVI_VSO_BEGIN_ODD 0x1c07 	///../ucode/register.h
+#define P_ENCI_DVI_VSO_BEGIN_ODD 		CBUS_REG_ADDR(ENCI_DVI_VSO_BEGIN_ODD) 	///../ucode/register.h
+#define ENCI_DVI_VSO_END_EVN 0x1c08 	///../ucode/register.h
+#define P_ENCI_DVI_VSO_END_EVN 		CBUS_REG_ADDR(ENCI_DVI_VSO_END_EVN) 	///../ucode/register.h
+#define ENCI_DVI_VSO_END_ODD 0x1c09 	///../ucode/register.h
+#define P_ENCI_DVI_VSO_END_ODD 		CBUS_REG_ADDR(ENCI_DVI_VSO_END_ODD) 	///../ucode/register.h
+#define ENCI_CFILT_CTRL2 0x1c0a 	///../ucode/register.h
+#define P_ENCI_CFILT_CTRL2 		CBUS_REG_ADDR(ENCI_CFILT_CTRL2) 	///../ucode/register.h
+#define ENCI_DACSEL_0 0x1c0b 	///../ucode/register.h
+#define P_ENCI_DACSEL_0 		CBUS_REG_ADDR(ENCI_DACSEL_0) 	///../ucode/register.h
+#define ENCI_DACSEL_1 0x1c0c 	///../ucode/register.h
+#define P_ENCI_DACSEL_1 		CBUS_REG_ADDR(ENCI_DACSEL_1) 	///../ucode/register.h
+#define ENCP_DACSEL_0 0x1c0d 	///../ucode/register.h
+#define P_ENCP_DACSEL_0 		CBUS_REG_ADDR(ENCP_DACSEL_0) 	///../ucode/register.h
+#define ENCP_DACSEL_1 0x1c0e 	///../ucode/register.h
+#define P_ENCP_DACSEL_1 		CBUS_REG_ADDR(ENCP_DACSEL_1) 	///../ucode/register.h
+#define ENCP_MAX_LINE_SWITCH_POINT 0x1c0f 	///../ucode/register.h
+#define P_ENCP_MAX_LINE_SWITCH_POINT 		CBUS_REG_ADDR(ENCP_MAX_LINE_SWITCH_POINT) 	///../ucode/register.h
+#define ENCI_TST_EN 0x1c10 	///../ucode/register.h
+#define P_ENCI_TST_EN 		CBUS_REG_ADDR(ENCI_TST_EN) 	///../ucode/register.h
+#define ENCI_TST_MDSEL 0x1c11 	///../ucode/register.h
+#define P_ENCI_TST_MDSEL 		CBUS_REG_ADDR(ENCI_TST_MDSEL) 	///../ucode/register.h
+#define ENCI_TST_Y 0x1c12 	///../ucode/register.h
+#define P_ENCI_TST_Y 		CBUS_REG_ADDR(ENCI_TST_Y) 	///../ucode/register.h
+#define ENCI_TST_CB 0x1c13 	///../ucode/register.h
+#define P_ENCI_TST_CB 		CBUS_REG_ADDR(ENCI_TST_CB) 	///../ucode/register.h
+#define ENCI_TST_CR 0x1c14 	///../ucode/register.h
+#define P_ENCI_TST_CR 		CBUS_REG_ADDR(ENCI_TST_CR) 	///../ucode/register.h
+#define ENCI_TST_CLRBAR_STRT 0x1c15 	///../ucode/register.h
+#define P_ENCI_TST_CLRBAR_STRT 		CBUS_REG_ADDR(ENCI_TST_CLRBAR_STRT) 	///../ucode/register.h
+#define ENCI_TST_CLRBAR_WIDTH 0x1c16 	///../ucode/register.h
+#define P_ENCI_TST_CLRBAR_WIDTH 		CBUS_REG_ADDR(ENCI_TST_CLRBAR_WIDTH) 	///../ucode/register.h
+#define ENCI_TST_VDCNT_STSET 0x1c17 	///../ucode/register.h
+#define P_ENCI_TST_VDCNT_STSET 		CBUS_REG_ADDR(ENCI_TST_VDCNT_STSET) 	///../ucode/register.h
+#define ENCI_VFIFO2VD_CTL 0x1c18 	///../ucode/register.h
+#define P_ENCI_VFIFO2VD_CTL 		CBUS_REG_ADDR(ENCI_VFIFO2VD_CTL) 	///../ucode/register.h
+#define ENCI_VFIFO2VD_PIXEL_START 0x1c19 	///../ucode/register.h
+#define P_ENCI_VFIFO2VD_PIXEL_START 		CBUS_REG_ADDR(ENCI_VFIFO2VD_PIXEL_START) 	///../ucode/register.h
+#define ENCI_VFIFO2VD_PIXEL_END 0x1c1a 	///../ucode/register.h
+#define P_ENCI_VFIFO2VD_PIXEL_END 		CBUS_REG_ADDR(ENCI_VFIFO2VD_PIXEL_END) 	///../ucode/register.h
+#define ENCI_VFIFO2VD_LINE_TOP_START 0x1c1b 	///../ucode/register.h
+#define P_ENCI_VFIFO2VD_LINE_TOP_START 		CBUS_REG_ADDR(ENCI_VFIFO2VD_LINE_TOP_START) 	///../ucode/register.h
+#define ENCI_VFIFO2VD_LINE_TOP_END 0x1c1c 	///../ucode/register.h
+#define P_ENCI_VFIFO2VD_LINE_TOP_END 		CBUS_REG_ADDR(ENCI_VFIFO2VD_LINE_TOP_END) 	///../ucode/register.h
+#define ENCI_VFIFO2VD_LINE_BOT_START 0x1c1d 	///../ucode/register.h
+#define P_ENCI_VFIFO2VD_LINE_BOT_START 		CBUS_REG_ADDR(ENCI_VFIFO2VD_LINE_BOT_START) 	///../ucode/register.h
+#define ENCI_VFIFO2VD_LINE_BOT_END 0x1c1e 	///../ucode/register.h
+#define P_ENCI_VFIFO2VD_LINE_BOT_END 		CBUS_REG_ADDR(ENCI_VFIFO2VD_LINE_BOT_END) 	///../ucode/register.h
+#define ENCI_VFIFO2VD_CTL2 0x1c1f 	///../ucode/register.h
+#define P_ENCI_VFIFO2VD_CTL2 		CBUS_REG_ADDR(ENCI_VFIFO2VD_CTL2) 	///../ucode/register.h
+#define ENCT_VFIFO2VD_CTL 0x1c20 	///../ucode/register.h
+#define P_ENCT_VFIFO2VD_CTL 		CBUS_REG_ADDR(ENCT_VFIFO2VD_CTL) 	///../ucode/register.h
+#define ENCT_VFIFO2VD_PIXEL_START 0x1c21 	///../ucode/register.h
+#define P_ENCT_VFIFO2VD_PIXEL_START 		CBUS_REG_ADDR(ENCT_VFIFO2VD_PIXEL_START) 	///../ucode/register.h
+#define ENCT_VFIFO2VD_PIXEL_END 0x1c22 	///../ucode/register.h
+#define P_ENCT_VFIFO2VD_PIXEL_END 		CBUS_REG_ADDR(ENCT_VFIFO2VD_PIXEL_END) 	///../ucode/register.h
+#define ENCT_VFIFO2VD_LINE_TOP_START 0x1c23 	///../ucode/register.h
+#define P_ENCT_VFIFO2VD_LINE_TOP_START 		CBUS_REG_ADDR(ENCT_VFIFO2VD_LINE_TOP_START) 	///../ucode/register.h
+#define ENCT_VFIFO2VD_LINE_TOP_END 0x1c24 	///../ucode/register.h
+#define P_ENCT_VFIFO2VD_LINE_TOP_END 		CBUS_REG_ADDR(ENCT_VFIFO2VD_LINE_TOP_END) 	///../ucode/register.h
+#define ENCT_VFIFO2VD_LINE_BOT_START 0x1c25 	///../ucode/register.h
+#define P_ENCT_VFIFO2VD_LINE_BOT_START 		CBUS_REG_ADDR(ENCT_VFIFO2VD_LINE_BOT_START) 	///../ucode/register.h
+#define ENCT_VFIFO2VD_LINE_BOT_END 0x1c26 	///../ucode/register.h
+#define P_ENCT_VFIFO2VD_LINE_BOT_END 		CBUS_REG_ADDR(ENCT_VFIFO2VD_LINE_BOT_END) 	///../ucode/register.h
+#define ENCT_VFIFO2VD_CTL2 0x1c27 	///../ucode/register.h
+#define P_ENCT_VFIFO2VD_CTL2 		CBUS_REG_ADDR(ENCT_VFIFO2VD_CTL2) 	///../ucode/register.h
+#define ENCT_TST_EN 0x1c28 	///../ucode/register.h
+#define P_ENCT_TST_EN 		CBUS_REG_ADDR(ENCT_TST_EN) 	///../ucode/register.h
+#define ENCT_TST_MDSEL 0x1c29 	///../ucode/register.h
+#define P_ENCT_TST_MDSEL 		CBUS_REG_ADDR(ENCT_TST_MDSEL) 	///../ucode/register.h
+#define ENCT_TST_Y 0x1c2a 	///../ucode/register.h
+#define P_ENCT_TST_Y 		CBUS_REG_ADDR(ENCT_TST_Y) 	///../ucode/register.h
+#define ENCT_TST_CB 0x1c2b 	///../ucode/register.h
+#define P_ENCT_TST_CB 		CBUS_REG_ADDR(ENCT_TST_CB) 	///../ucode/register.h
+#define ENCT_TST_CR 0x1c2c 	///../ucode/register.h
+#define P_ENCT_TST_CR 		CBUS_REG_ADDR(ENCT_TST_CR) 	///../ucode/register.h
+#define ENCT_TST_CLRBAR_STRT 0x1c2d 	///../ucode/register.h
+#define P_ENCT_TST_CLRBAR_STRT 		CBUS_REG_ADDR(ENCT_TST_CLRBAR_STRT) 	///../ucode/register.h
+#define ENCT_TST_CLRBAR_WIDTH 0x1c2e 	///../ucode/register.h
+#define P_ENCT_TST_CLRBAR_WIDTH 		CBUS_REG_ADDR(ENCT_TST_CLRBAR_WIDTH) 	///../ucode/register.h
+#define ENCT_TST_VDCNT_STSET 0x1c2f 	///../ucode/register.h
+#define P_ENCT_TST_VDCNT_STSET 		CBUS_REG_ADDR(ENCT_TST_VDCNT_STSET) 	///../ucode/register.h
+#define ENCP_DVI_HSO_BEGIN 0x1c30 	///../ucode/register.h
+#define P_ENCP_DVI_HSO_BEGIN 		CBUS_REG_ADDR(ENCP_DVI_HSO_BEGIN) 	///../ucode/register.h
+#define ENCP_DVI_HSO_END 0x1c31 	///../ucode/register.h
+#define P_ENCP_DVI_HSO_END 		CBUS_REG_ADDR(ENCP_DVI_HSO_END) 	///../ucode/register.h
+#define ENCP_DVI_VSO_BLINE_EVN 0x1c32 	///../ucode/register.h
+#define P_ENCP_DVI_VSO_BLINE_EVN 		CBUS_REG_ADDR(ENCP_DVI_VSO_BLINE_EVN) 	///../ucode/register.h
+#define ENCP_DVI_VSO_BLINE_ODD 0x1c33 	///../ucode/register.h
+#define P_ENCP_DVI_VSO_BLINE_ODD 		CBUS_REG_ADDR(ENCP_DVI_VSO_BLINE_ODD) 	///../ucode/register.h
+#define ENCP_DVI_VSO_ELINE_EVN 0x1c34 	///../ucode/register.h
+#define P_ENCP_DVI_VSO_ELINE_EVN 		CBUS_REG_ADDR(ENCP_DVI_VSO_ELINE_EVN) 	///../ucode/register.h
+#define ENCP_DVI_VSO_ELINE_ODD 0x1c35 	///../ucode/register.h
+#define P_ENCP_DVI_VSO_ELINE_ODD 		CBUS_REG_ADDR(ENCP_DVI_VSO_ELINE_ODD) 	///../ucode/register.h
+#define ENCP_DVI_VSO_BEGIN_EVN 0x1c36 	///../ucode/register.h
+#define P_ENCP_DVI_VSO_BEGIN_EVN 		CBUS_REG_ADDR(ENCP_DVI_VSO_BEGIN_EVN) 	///../ucode/register.h
+#define ENCP_DVI_VSO_BEGIN_ODD 0x1c37 	///../ucode/register.h
+#define P_ENCP_DVI_VSO_BEGIN_ODD 		CBUS_REG_ADDR(ENCP_DVI_VSO_BEGIN_ODD) 	///../ucode/register.h
+#define ENCP_DVI_VSO_END_EVN 0x1c38 	///../ucode/register.h
+#define P_ENCP_DVI_VSO_END_EVN 		CBUS_REG_ADDR(ENCP_DVI_VSO_END_EVN) 	///../ucode/register.h
+#define ENCP_DVI_VSO_END_ODD 0x1c39 	///../ucode/register.h
+#define P_ENCP_DVI_VSO_END_ODD 		CBUS_REG_ADDR(ENCP_DVI_VSO_END_ODD) 	///../ucode/register.h
+#define ENCP_DE_H_BEGIN 0x1c3a 	///../ucode/register.h
+#define P_ENCP_DE_H_BEGIN 		CBUS_REG_ADDR(ENCP_DE_H_BEGIN) 	///../ucode/register.h
+#define ENCP_DE_H_END 0x1c3b 	///../ucode/register.h
+#define P_ENCP_DE_H_END 		CBUS_REG_ADDR(ENCP_DE_H_END) 	///../ucode/register.h
+#define ENCP_DE_V_BEGIN_EVEN 0x1c3c 	///../ucode/register.h
+#define P_ENCP_DE_V_BEGIN_EVEN 		CBUS_REG_ADDR(ENCP_DE_V_BEGIN_EVEN) 	///../ucode/register.h
+#define ENCP_DE_V_END_EVEN 0x1c3d 	///../ucode/register.h
+#define P_ENCP_DE_V_END_EVEN 		CBUS_REG_ADDR(ENCP_DE_V_END_EVEN) 	///../ucode/register.h
+#define ENCP_DE_V_BEGIN_ODD 0x1c3e 	///../ucode/register.h
+#define P_ENCP_DE_V_BEGIN_ODD 		CBUS_REG_ADDR(ENCP_DE_V_BEGIN_ODD) 	///../ucode/register.h
+#define ENCP_DE_V_END_ODD 0x1c3f 	///../ucode/register.h
+#define P_ENCP_DE_V_END_ODD 		CBUS_REG_ADDR(ENCP_DE_V_END_ODD) 	///../ucode/register.h
+#define ENCI_SYNC_LINE_LENGTH 0x1c40 	///../ucode/register.h
+#define P_ENCI_SYNC_LINE_LENGTH 		CBUS_REG_ADDR(ENCI_SYNC_LINE_LENGTH) 	///../ucode/register.h
+#define ENCI_SYNC_PIXEL_EN 0x1c41 	///../ucode/register.h
+#define P_ENCI_SYNC_PIXEL_EN 		CBUS_REG_ADDR(ENCI_SYNC_PIXEL_EN) 	///../ucode/register.h
+#define ENCI_SYNC_TO_LINE_EN 0x1c42 	///../ucode/register.h
+#define P_ENCI_SYNC_TO_LINE_EN 		CBUS_REG_ADDR(ENCI_SYNC_TO_LINE_EN) 	///../ucode/register.h
+#define ENCI_SYNC_TO_PIXEL 0x1c43 	///../ucode/register.h
+#define P_ENCI_SYNC_TO_PIXEL 		CBUS_REG_ADDR(ENCI_SYNC_TO_PIXEL) 	///../ucode/register.h
+#define ENCP_SYNC_LINE_LENGTH 0x1c44 	///../ucode/register.h
+#define P_ENCP_SYNC_LINE_LENGTH 		CBUS_REG_ADDR(ENCP_SYNC_LINE_LENGTH) 	///../ucode/register.h
+#define ENCP_SYNC_PIXEL_EN 0x1c45 	///../ucode/register.h
+#define P_ENCP_SYNC_PIXEL_EN 		CBUS_REG_ADDR(ENCP_SYNC_PIXEL_EN) 	///../ucode/register.h
+#define ENCP_SYNC_TO_LINE_EN 0x1c46 	///../ucode/register.h
+#define P_ENCP_SYNC_TO_LINE_EN 		CBUS_REG_ADDR(ENCP_SYNC_TO_LINE_EN) 	///../ucode/register.h
+#define ENCP_SYNC_TO_PIXEL 0x1c47 	///../ucode/register.h
+#define P_ENCP_SYNC_TO_PIXEL 		CBUS_REG_ADDR(ENCP_SYNC_TO_PIXEL) 	///../ucode/register.h
+#define ENCT_SYNC_LINE_LENGTH 0x1c48 	///../ucode/register.h
+#define P_ENCT_SYNC_LINE_LENGTH 		CBUS_REG_ADDR(ENCT_SYNC_LINE_LENGTH) 	///../ucode/register.h
+#define ENCT_SYNC_PIXEL_EN 0x1c49 	///../ucode/register.h
+#define P_ENCT_SYNC_PIXEL_EN 		CBUS_REG_ADDR(ENCT_SYNC_PIXEL_EN) 	///../ucode/register.h
+#define ENCT_SYNC_TO_LINE_EN 0x1c4a 	///../ucode/register.h
+#define P_ENCT_SYNC_TO_LINE_EN 		CBUS_REG_ADDR(ENCT_SYNC_TO_LINE_EN) 	///../ucode/register.h
+#define ENCT_SYNC_TO_PIXEL 0x1c4b 	///../ucode/register.h
+#define P_ENCT_SYNC_TO_PIXEL 		CBUS_REG_ADDR(ENCT_SYNC_TO_PIXEL) 	///../ucode/register.h
+#define ENCL_SYNC_LINE_LENGTH 0x1c4c 	///../ucode/register.h
+#define P_ENCL_SYNC_LINE_LENGTH 		CBUS_REG_ADDR(ENCL_SYNC_LINE_LENGTH) 	///../ucode/register.h
+#define ENCL_SYNC_PIXEL_EN 0x1c4d 	///../ucode/register.h
+#define P_ENCL_SYNC_PIXEL_EN 		CBUS_REG_ADDR(ENCL_SYNC_PIXEL_EN) 	///../ucode/register.h
+#define ENCL_SYNC_TO_LINE_EN 0x1c4e 	///../ucode/register.h
+#define P_ENCL_SYNC_TO_LINE_EN 		CBUS_REG_ADDR(ENCL_SYNC_TO_LINE_EN) 	///../ucode/register.h
+#define ENCL_SYNC_TO_PIXEL 0x1c4f 	///../ucode/register.h
+#define P_ENCL_SYNC_TO_PIXEL 		CBUS_REG_ADDR(ENCL_SYNC_TO_PIXEL) 	///../ucode/register.h
+#define ENCP_VFIFO2VD_CTL2 0x1c50 	///../ucode/register.h
+#define P_ENCP_VFIFO2VD_CTL2 		CBUS_REG_ADDR(ENCP_VFIFO2VD_CTL2) 	///../ucode/register.h
+#define VENC_DVI_SETTING_MORE 0x1c51 	///../ucode/register.h
+#define P_VENC_DVI_SETTING_MORE 		CBUS_REG_ADDR(VENC_DVI_SETTING_MORE) 	///../ucode/register.h
+#define VENC_VDAC_DAC4_FILT_CTRL0 0x1c54 	///../ucode/register.h
+#define P_VENC_VDAC_DAC4_FILT_CTRL0 		CBUS_REG_ADDR(VENC_VDAC_DAC4_FILT_CTRL0) 	///../ucode/register.h
+#define VENC_VDAC_DAC4_FILT_CTRL1 0x1c55 	///../ucode/register.h
+#define P_VENC_VDAC_DAC4_FILT_CTRL1 		CBUS_REG_ADDR(VENC_VDAC_DAC4_FILT_CTRL1) 	///../ucode/register.h
+#define VENC_VDAC_DAC5_FILT_CTRL0 0x1c56 	///../ucode/register.h
+#define P_VENC_VDAC_DAC5_FILT_CTRL0 		CBUS_REG_ADDR(VENC_VDAC_DAC5_FILT_CTRL0) 	///../ucode/register.h
+#define VENC_VDAC_DAC5_FILT_CTRL1 0x1c57 	///../ucode/register.h
+#define P_VENC_VDAC_DAC5_FILT_CTRL1 		CBUS_REG_ADDR(VENC_VDAC_DAC5_FILT_CTRL1) 	///../ucode/register.h
+#define VENC_VDAC_DAC0_FILT_CTRL0 0x1c58 	///../ucode/register.h
+#define P_VENC_VDAC_DAC0_FILT_CTRL0 		CBUS_REG_ADDR(VENC_VDAC_DAC0_FILT_CTRL0) 	///../ucode/register.h
+#define VENC_VDAC_DAC0_FILT_CTRL1 0x1c59 	///../ucode/register.h
+#define P_VENC_VDAC_DAC0_FILT_CTRL1 		CBUS_REG_ADDR(VENC_VDAC_DAC0_FILT_CTRL1) 	///../ucode/register.h
+#define VENC_VDAC_DAC1_FILT_CTRL0 0x1c5a 	///../ucode/register.h
+#define P_VENC_VDAC_DAC1_FILT_CTRL0 		CBUS_REG_ADDR(VENC_VDAC_DAC1_FILT_CTRL0) 	///../ucode/register.h
+#define VENC_VDAC_DAC1_FILT_CTRL1 0x1c5b 	///../ucode/register.h
+#define P_VENC_VDAC_DAC1_FILT_CTRL1 		CBUS_REG_ADDR(VENC_VDAC_DAC1_FILT_CTRL1) 	///../ucode/register.h
+#define VENC_VDAC_DAC2_FILT_CTRL0 0x1c5c 	///../ucode/register.h
+#define P_VENC_VDAC_DAC2_FILT_CTRL0 		CBUS_REG_ADDR(VENC_VDAC_DAC2_FILT_CTRL0) 	///../ucode/register.h
+#define VENC_VDAC_DAC2_FILT_CTRL1 0x1c5d 	///../ucode/register.h
+#define P_VENC_VDAC_DAC2_FILT_CTRL1 		CBUS_REG_ADDR(VENC_VDAC_DAC2_FILT_CTRL1) 	///../ucode/register.h
+#define VENC_VDAC_DAC3_FILT_CTRL0 0x1c5e 	///../ucode/register.h
+#define P_VENC_VDAC_DAC3_FILT_CTRL0 		CBUS_REG_ADDR(VENC_VDAC_DAC3_FILT_CTRL0) 	///../ucode/register.h
+#define VENC_VDAC_DAC3_FILT_CTRL1 0x1c5f 	///../ucode/register.h
+#define P_VENC_VDAC_DAC3_FILT_CTRL1 		CBUS_REG_ADDR(VENC_VDAC_DAC3_FILT_CTRL1) 	///../ucode/register.h
+#define ENCT_VIDEO_EN 0x1c60 	///../ucode/register.h
+#define P_ENCT_VIDEO_EN 		CBUS_REG_ADDR(ENCT_VIDEO_EN) 	///../ucode/register.h
+#define ENCT_VIDEO_Y_SCL 0x1c61 	///../ucode/register.h
+#define P_ENCT_VIDEO_Y_SCL 		CBUS_REG_ADDR(ENCT_VIDEO_Y_SCL) 	///../ucode/register.h
+#define ENCT_VIDEO_PB_SCL 0x1c62 	///../ucode/register.h
+#define P_ENCT_VIDEO_PB_SCL 		CBUS_REG_ADDR(ENCT_VIDEO_PB_SCL) 	///../ucode/register.h
+#define ENCT_VIDEO_PR_SCL 0x1c63 	///../ucode/register.h
+#define P_ENCT_VIDEO_PR_SCL 		CBUS_REG_ADDR(ENCT_VIDEO_PR_SCL) 	///../ucode/register.h
+#define ENCT_VIDEO_Y_OFFST 0x1c64 	///../ucode/register.h
+#define P_ENCT_VIDEO_Y_OFFST 		CBUS_REG_ADDR(ENCT_VIDEO_Y_OFFST) 	///../ucode/register.h
+#define ENCT_VIDEO_PB_OFFST 0x1c65 	///../ucode/register.h
+#define P_ENCT_VIDEO_PB_OFFST 		CBUS_REG_ADDR(ENCT_VIDEO_PB_OFFST) 	///../ucode/register.h
+#define ENCT_VIDEO_PR_OFFST 0x1c66 	///../ucode/register.h
+#define P_ENCT_VIDEO_PR_OFFST 		CBUS_REG_ADDR(ENCT_VIDEO_PR_OFFST) 	///../ucode/register.h
+#define ENCT_VIDEO_MODE 0x1c67 	///../ucode/register.h
+#define P_ENCT_VIDEO_MODE 		CBUS_REG_ADDR(ENCT_VIDEO_MODE) 	///../ucode/register.h
+#define ENCT_VIDEO_MODE_ADV 0x1c68 	///../ucode/register.h
+#define P_ENCT_VIDEO_MODE_ADV 		CBUS_REG_ADDR(ENCT_VIDEO_MODE_ADV) 	///../ucode/register.h
+#define ENCT_DBG_PX_RST 0x1c69 	///../ucode/register.h
+#define P_ENCT_DBG_PX_RST 		CBUS_REG_ADDR(ENCT_DBG_PX_RST) 	///../ucode/register.h
+#define ENCT_DBG_LN_RST 0x1c6a 	///../ucode/register.h
+#define P_ENCT_DBG_LN_RST 		CBUS_REG_ADDR(ENCT_DBG_LN_RST) 	///../ucode/register.h
+#define ENCT_DBG_PX_INT 0x1c6b 	///../ucode/register.h
+#define P_ENCT_DBG_PX_INT 		CBUS_REG_ADDR(ENCT_DBG_PX_INT) 	///../ucode/register.h
+#define ENCT_DBG_LN_INT 0x1c6c 	///../ucode/register.h
+#define P_ENCT_DBG_LN_INT 		CBUS_REG_ADDR(ENCT_DBG_LN_INT) 	///../ucode/register.h
+#define ENCT_VIDEO_YFP1_HTIME 0x1c6d 	///../ucode/register.h
+#define P_ENCT_VIDEO_YFP1_HTIME 		CBUS_REG_ADDR(ENCT_VIDEO_YFP1_HTIME) 	///../ucode/register.h
+#define ENCT_VIDEO_YFP2_HTIME 0x1c6e 	///../ucode/register.h
+#define P_ENCT_VIDEO_YFP2_HTIME 		CBUS_REG_ADDR(ENCT_VIDEO_YFP2_HTIME) 	///../ucode/register.h
+#define ENCT_VIDEO_YC_DLY 0x1c6f 	///../ucode/register.h
+#define P_ENCT_VIDEO_YC_DLY 		CBUS_REG_ADDR(ENCT_VIDEO_YC_DLY) 	///../ucode/register.h
+#define ENCT_VIDEO_MAX_PXCNT 0x1c70 	///../ucode/register.h
+#define P_ENCT_VIDEO_MAX_PXCNT 		CBUS_REG_ADDR(ENCT_VIDEO_MAX_PXCNT) 	///../ucode/register.h
+#define ENCT_VIDEO_HAVON_END 0x1c71 	///../ucode/register.h
+#define P_ENCT_VIDEO_HAVON_END 		CBUS_REG_ADDR(ENCT_VIDEO_HAVON_END) 	///../ucode/register.h
+#define ENCT_VIDEO_HAVON_BEGIN 0x1c72 	///../ucode/register.h
+#define P_ENCT_VIDEO_HAVON_BEGIN 		CBUS_REG_ADDR(ENCT_VIDEO_HAVON_BEGIN) 	///../ucode/register.h
+#define ENCT_VIDEO_VAVON_ELINE 0x1c73 	///../ucode/register.h
+#define P_ENCT_VIDEO_VAVON_ELINE 		CBUS_REG_ADDR(ENCT_VIDEO_VAVON_ELINE) 	///../ucode/register.h
+#define ENCT_VIDEO_VAVON_BLINE 0x1c74 	///../ucode/register.h
+#define P_ENCT_VIDEO_VAVON_BLINE 		CBUS_REG_ADDR(ENCT_VIDEO_VAVON_BLINE) 	///../ucode/register.h
+#define ENCT_VIDEO_HSO_BEGIN 0x1c75 	///../ucode/register.h
+#define P_ENCT_VIDEO_HSO_BEGIN 		CBUS_REG_ADDR(ENCT_VIDEO_HSO_BEGIN) 	///../ucode/register.h
+#define ENCT_VIDEO_HSO_END 0x1c76 	///../ucode/register.h
+#define P_ENCT_VIDEO_HSO_END 		CBUS_REG_ADDR(ENCT_VIDEO_HSO_END) 	///../ucode/register.h
+#define ENCT_VIDEO_VSO_BEGIN 0x1c77 	///../ucode/register.h
+#define P_ENCT_VIDEO_VSO_BEGIN 		CBUS_REG_ADDR(ENCT_VIDEO_VSO_BEGIN) 	///../ucode/register.h
+#define ENCT_VIDEO_VSO_END 0x1c78 	///../ucode/register.h
+#define P_ENCT_VIDEO_VSO_END 		CBUS_REG_ADDR(ENCT_VIDEO_VSO_END) 	///../ucode/register.h
+#define ENCT_VIDEO_VSO_BLINE 0x1c79 	///../ucode/register.h
+#define P_ENCT_VIDEO_VSO_BLINE 		CBUS_REG_ADDR(ENCT_VIDEO_VSO_BLINE) 	///../ucode/register.h
+#define ENCT_VIDEO_VSO_ELINE 0x1c7a 	///../ucode/register.h
+#define P_ENCT_VIDEO_VSO_ELINE 		CBUS_REG_ADDR(ENCT_VIDEO_VSO_ELINE) 	///../ucode/register.h
+#define ENCT_VIDEO_MAX_LNCNT 0x1c7b 	///../ucode/register.h
+#define P_ENCT_VIDEO_MAX_LNCNT 		CBUS_REG_ADDR(ENCT_VIDEO_MAX_LNCNT) 	///../ucode/register.h
+#define ENCT_VIDEO_BLANKY_VAL 0x1c7c 	///../ucode/register.h
+#define P_ENCT_VIDEO_BLANKY_VAL 		CBUS_REG_ADDR(ENCT_VIDEO_BLANKY_VAL) 	///../ucode/register.h
+#define ENCT_VIDEO_BLANKPB_VAL 0x1c7d 	///../ucode/register.h
+#define P_ENCT_VIDEO_BLANKPB_VAL 		CBUS_REG_ADDR(ENCT_VIDEO_BLANKPB_VAL) 	///../ucode/register.h
+#define ENCT_VIDEO_BLANKPR_VAL 0x1c7e 	///../ucode/register.h
+#define P_ENCT_VIDEO_BLANKPR_VAL 		CBUS_REG_ADDR(ENCT_VIDEO_BLANKPR_VAL) 	///../ucode/register.h
+#define ENCT_VIDEO_HOFFST 0x1c7f 	///../ucode/register.h
+#define P_ENCT_VIDEO_HOFFST 		CBUS_REG_ADDR(ENCT_VIDEO_HOFFST) 	///../ucode/register.h
+#define ENCT_VIDEO_VOFFST 0x1c80 	///../ucode/register.h
+#define P_ENCT_VIDEO_VOFFST 		CBUS_REG_ADDR(ENCT_VIDEO_VOFFST) 	///../ucode/register.h
+#define ENCT_VIDEO_RGB_CTRL 0x1c81 	///../ucode/register.h
+#define P_ENCT_VIDEO_RGB_CTRL 		CBUS_REG_ADDR(ENCT_VIDEO_RGB_CTRL) 	///../ucode/register.h
+#define ENCT_VIDEO_FILT_CTRL 0x1c82 	///../ucode/register.h
+#define P_ENCT_VIDEO_FILT_CTRL 		CBUS_REG_ADDR(ENCT_VIDEO_FILT_CTRL) 	///../ucode/register.h
+#define ENCT_VIDEO_OFLD_VPEQ_OFST 0x1c83 	///../ucode/register.h
+#define P_ENCT_VIDEO_OFLD_VPEQ_OFST 		CBUS_REG_ADDR(ENCT_VIDEO_OFLD_VPEQ_OFST) 	///../ucode/register.h
+#define ENCT_VIDEO_OFLD_VOAV_OFST 0x1c84 	///../ucode/register.h
+#define P_ENCT_VIDEO_OFLD_VOAV_OFST 		CBUS_REG_ADDR(ENCT_VIDEO_OFLD_VOAV_OFST) 	///../ucode/register.h
+#define ENCT_VIDEO_MATRIX_CB 0x1c85 	///../ucode/register.h
+#define P_ENCT_VIDEO_MATRIX_CB 		CBUS_REG_ADDR(ENCT_VIDEO_MATRIX_CB) 	///../ucode/register.h
+#define ENCT_VIDEO_MATRIX_CR 0x1c86 	///../ucode/register.h
+#define P_ENCT_VIDEO_MATRIX_CR 		CBUS_REG_ADDR(ENCT_VIDEO_MATRIX_CR) 	///../ucode/register.h
+#define ENCT_VIDEO_RGBIN_CTRL 0x1c87 	///../ucode/register.h
+#define P_ENCT_VIDEO_RGBIN_CTRL 		CBUS_REG_ADDR(ENCT_VIDEO_RGBIN_CTRL) 	///../ucode/register.h
+#define ENCT_MAX_LINE_SWITCH_POINT 0x1c88 	///../ucode/register.h
+#define P_ENCT_MAX_LINE_SWITCH_POINT 		CBUS_REG_ADDR(ENCT_MAX_LINE_SWITCH_POINT) 	///../ucode/register.h
+#define ENCT_DACSEL_0 0x1c89 	///../ucode/register.h
+#define P_ENCT_DACSEL_0 		CBUS_REG_ADDR(ENCT_DACSEL_0) 	///../ucode/register.h
+#define ENCT_DACSEL_1 0x1c8a 	///../ucode/register.h
+#define P_ENCT_DACSEL_1 		CBUS_REG_ADDR(ENCT_DACSEL_1) 	///../ucode/register.h
+#define ENCL_VFIFO2VD_CTL 0x1c90 	///../ucode/register.h
+#define P_ENCL_VFIFO2VD_CTL 		CBUS_REG_ADDR(ENCL_VFIFO2VD_CTL) 	///../ucode/register.h
+#define ENCL_VFIFO2VD_PIXEL_START 0x1c91 	///../ucode/register.h
+#define P_ENCL_VFIFO2VD_PIXEL_START 		CBUS_REG_ADDR(ENCL_VFIFO2VD_PIXEL_START) 	///../ucode/register.h
+#define ENCL_VFIFO2VD_PIXEL_END 0x1c92 	///../ucode/register.h
+#define P_ENCL_VFIFO2VD_PIXEL_END 		CBUS_REG_ADDR(ENCL_VFIFO2VD_PIXEL_END) 	///../ucode/register.h
+#define ENCL_VFIFO2VD_LINE_TOP_START 0x1c93 	///../ucode/register.h
+#define P_ENCL_VFIFO2VD_LINE_TOP_START 		CBUS_REG_ADDR(ENCL_VFIFO2VD_LINE_TOP_START) 	///../ucode/register.h
+#define ENCL_VFIFO2VD_LINE_TOP_END 0x1c94 	///../ucode/register.h
+#define P_ENCL_VFIFO2VD_LINE_TOP_END 		CBUS_REG_ADDR(ENCL_VFIFO2VD_LINE_TOP_END) 	///../ucode/register.h
+#define ENCL_VFIFO2VD_LINE_BOT_START 0x1c95 	///../ucode/register.h
+#define P_ENCL_VFIFO2VD_LINE_BOT_START 		CBUS_REG_ADDR(ENCL_VFIFO2VD_LINE_BOT_START) 	///../ucode/register.h
+#define ENCL_VFIFO2VD_LINE_BOT_END 0x1c96 	///../ucode/register.h
+#define P_ENCL_VFIFO2VD_LINE_BOT_END 		CBUS_REG_ADDR(ENCL_VFIFO2VD_LINE_BOT_END) 	///../ucode/register.h
+#define ENCL_VFIFO2VD_CTL2 0x1c97 	///../ucode/register.h
+#define P_ENCL_VFIFO2VD_CTL2 		CBUS_REG_ADDR(ENCL_VFIFO2VD_CTL2) 	///../ucode/register.h
+#define ENCL_TST_EN 0x1c98 	///../ucode/register.h
+#define P_ENCL_TST_EN 		CBUS_REG_ADDR(ENCL_TST_EN) 	///../ucode/register.h
+#define ENCL_TST_MDSEL 0x1c99 	///../ucode/register.h
+#define P_ENCL_TST_MDSEL 		CBUS_REG_ADDR(ENCL_TST_MDSEL) 	///../ucode/register.h
+#define ENCL_TST_Y 0x1c9a 	///../ucode/register.h
+#define P_ENCL_TST_Y 		CBUS_REG_ADDR(ENCL_TST_Y) 	///../ucode/register.h
+#define ENCL_TST_CB 0x1c9b 	///../ucode/register.h
+#define P_ENCL_TST_CB 		CBUS_REG_ADDR(ENCL_TST_CB) 	///../ucode/register.h
+#define ENCL_TST_CR 0x1c9c 	///../ucode/register.h
+#define P_ENCL_TST_CR 		CBUS_REG_ADDR(ENCL_TST_CR) 	///../ucode/register.h
+#define ENCL_TST_CLRBAR_STRT 0x1c9d 	///../ucode/register.h
+#define P_ENCL_TST_CLRBAR_STRT 		CBUS_REG_ADDR(ENCL_TST_CLRBAR_STRT) 	///../ucode/register.h
+#define ENCL_TST_CLRBAR_WIDTH 0x1c9e 	///../ucode/register.h
+#define P_ENCL_TST_CLRBAR_WIDTH 		CBUS_REG_ADDR(ENCL_TST_CLRBAR_WIDTH) 	///../ucode/register.h
+#define ENCL_TST_VDCNT_STSET 0x1c9f 	///../ucode/register.h
+#define P_ENCL_TST_VDCNT_STSET 		CBUS_REG_ADDR(ENCL_TST_VDCNT_STSET) 	///../ucode/register.h
+#define ENCL_VIDEO_EN 0x1ca0 	///../ucode/register.h
+#define P_ENCL_VIDEO_EN 		CBUS_REG_ADDR(ENCL_VIDEO_EN) 	///../ucode/register.h
+#define ENCL_VIDEO_Y_SCL 0x1ca1 	///../ucode/register.h
+#define P_ENCL_VIDEO_Y_SCL 		CBUS_REG_ADDR(ENCL_VIDEO_Y_SCL) 	///../ucode/register.h
+#define ENCL_VIDEO_PB_SCL 0x1ca2 	///../ucode/register.h
+#define P_ENCL_VIDEO_PB_SCL 		CBUS_REG_ADDR(ENCL_VIDEO_PB_SCL) 	///../ucode/register.h
+#define ENCL_VIDEO_PR_SCL 0x1ca3 	///../ucode/register.h
+#define P_ENCL_VIDEO_PR_SCL 		CBUS_REG_ADDR(ENCL_VIDEO_PR_SCL) 	///../ucode/register.h
+#define ENCL_VIDEO_Y_OFFST 0x1ca4 	///../ucode/register.h
+#define P_ENCL_VIDEO_Y_OFFST 		CBUS_REG_ADDR(ENCL_VIDEO_Y_OFFST) 	///../ucode/register.h
+#define ENCL_VIDEO_PB_OFFST 0x1ca5 	///../ucode/register.h
+#define P_ENCL_VIDEO_PB_OFFST 		CBUS_REG_ADDR(ENCL_VIDEO_PB_OFFST) 	///../ucode/register.h
+#define ENCL_VIDEO_PR_OFFST 0x1ca6 	///../ucode/register.h
+#define P_ENCL_VIDEO_PR_OFFST 		CBUS_REG_ADDR(ENCL_VIDEO_PR_OFFST) 	///../ucode/register.h
+#define ENCL_VIDEO_MODE 0x1ca7 	///../ucode/register.h
+#define P_ENCL_VIDEO_MODE 		CBUS_REG_ADDR(ENCL_VIDEO_MODE) 	///../ucode/register.h
+#define ENCL_VIDEO_MODE_ADV 0x1ca8 	///../ucode/register.h
+#define P_ENCL_VIDEO_MODE_ADV 		CBUS_REG_ADDR(ENCL_VIDEO_MODE_ADV) 	///../ucode/register.h
+#define ENCL_DBG_PX_RST 0x1ca9 	///../ucode/register.h
+#define P_ENCL_DBG_PX_RST 		CBUS_REG_ADDR(ENCL_DBG_PX_RST) 	///../ucode/register.h
+#define ENCL_DBG_LN_RST 0x1caa 	///../ucode/register.h
+#define P_ENCL_DBG_LN_RST 		CBUS_REG_ADDR(ENCL_DBG_LN_RST) 	///../ucode/register.h
+#define ENCL_DBG_PX_INT 0x1cab 	///../ucode/register.h
+#define P_ENCL_DBG_PX_INT 		CBUS_REG_ADDR(ENCL_DBG_PX_INT) 	///../ucode/register.h
+#define ENCL_DBG_LN_INT 0x1cac 	///../ucode/register.h
+#define P_ENCL_DBG_LN_INT 		CBUS_REG_ADDR(ENCL_DBG_LN_INT) 	///../ucode/register.h
+#define ENCL_VIDEO_YFP1_HTIME 0x1cad 	///../ucode/register.h
+#define P_ENCL_VIDEO_YFP1_HTIME 		CBUS_REG_ADDR(ENCL_VIDEO_YFP1_HTIME) 	///../ucode/register.h
+#define ENCL_VIDEO_YFP2_HTIME 0x1cae 	///../ucode/register.h
+#define P_ENCL_VIDEO_YFP2_HTIME 		CBUS_REG_ADDR(ENCL_VIDEO_YFP2_HTIME) 	///../ucode/register.h
+#define ENCL_VIDEO_YC_DLY 0x1caf 	///../ucode/register.h
+#define P_ENCL_VIDEO_YC_DLY 		CBUS_REG_ADDR(ENCL_VIDEO_YC_DLY) 	///../ucode/register.h
+#define ENCL_VIDEO_MAX_PXCNT 0x1cb0 	///../ucode/register.h
+#define P_ENCL_VIDEO_MAX_PXCNT 		CBUS_REG_ADDR(ENCL_VIDEO_MAX_PXCNT) 	///../ucode/register.h
+#define ENCL_VIDEO_HAVON_END 0x1cb1 	///../ucode/register.h
+#define P_ENCL_VIDEO_HAVON_END 		CBUS_REG_ADDR(ENCL_VIDEO_HAVON_END) 	///../ucode/register.h
+#define ENCL_VIDEO_HAVON_BEGIN 0x1cb2 	///../ucode/register.h
+#define P_ENCL_VIDEO_HAVON_BEGIN 		CBUS_REG_ADDR(ENCL_VIDEO_HAVON_BEGIN) 	///../ucode/register.h
+#define ENCL_VIDEO_VAVON_ELINE 0x1cb3 	///../ucode/register.h
+#define P_ENCL_VIDEO_VAVON_ELINE 		CBUS_REG_ADDR(ENCL_VIDEO_VAVON_ELINE) 	///../ucode/register.h
+#define ENCL_VIDEO_VAVON_BLINE 0x1cb4 	///../ucode/register.h
+#define P_ENCL_VIDEO_VAVON_BLINE 		CBUS_REG_ADDR(ENCL_VIDEO_VAVON_BLINE) 	///../ucode/register.h
+#define ENCL_VIDEO_HSO_BEGIN 0x1cb5 	///../ucode/register.h
+#define P_ENCL_VIDEO_HSO_BEGIN 		CBUS_REG_ADDR(ENCL_VIDEO_HSO_BEGIN) 	///../ucode/register.h
+#define ENCL_VIDEO_HSO_END 0x1cb6 	///../ucode/register.h
+#define P_ENCL_VIDEO_HSO_END 		CBUS_REG_ADDR(ENCL_VIDEO_HSO_END) 	///../ucode/register.h
+#define ENCL_VIDEO_VSO_BEGIN 0x1cb7 	///../ucode/register.h
+#define P_ENCL_VIDEO_VSO_BEGIN 		CBUS_REG_ADDR(ENCL_VIDEO_VSO_BEGIN) 	///../ucode/register.h
+#define ENCL_VIDEO_VSO_END 0x1cb8 	///../ucode/register.h
+#define P_ENCL_VIDEO_VSO_END 		CBUS_REG_ADDR(ENCL_VIDEO_VSO_END) 	///../ucode/register.h
+#define ENCL_VIDEO_VSO_BLINE 0x1cb9 	///../ucode/register.h
+#define P_ENCL_VIDEO_VSO_BLINE 		CBUS_REG_ADDR(ENCL_VIDEO_VSO_BLINE) 	///../ucode/register.h
+#define ENCL_VIDEO_VSO_ELINE 0x1cba 	///../ucode/register.h
+#define P_ENCL_VIDEO_VSO_ELINE 		CBUS_REG_ADDR(ENCL_VIDEO_VSO_ELINE) 	///../ucode/register.h
+#define ENCL_VIDEO_MAX_LNCNT 0x1cbb 	///../ucode/register.h
+#define P_ENCL_VIDEO_MAX_LNCNT 		CBUS_REG_ADDR(ENCL_VIDEO_MAX_LNCNT) 	///../ucode/register.h
+#define ENCL_VIDEO_BLANKY_VAL 0x1cbc 	///../ucode/register.h
+#define P_ENCL_VIDEO_BLANKY_VAL 		CBUS_REG_ADDR(ENCL_VIDEO_BLANKY_VAL) 	///../ucode/register.h
+#define ENCL_VIDEO_BLANKPB_VAL 0x1cbd 	///../ucode/register.h
+#define P_ENCL_VIDEO_BLANKPB_VAL 		CBUS_REG_ADDR(ENCL_VIDEO_BLANKPB_VAL) 	///../ucode/register.h
+#define ENCL_VIDEO_BLANKPR_VAL 0x1cbe 	///../ucode/register.h
+#define P_ENCL_VIDEO_BLANKPR_VAL 		CBUS_REG_ADDR(ENCL_VIDEO_BLANKPR_VAL) 	///../ucode/register.h
+#define ENCL_VIDEO_HOFFST 0x1cbf 	///../ucode/register.h
+#define P_ENCL_VIDEO_HOFFST 		CBUS_REG_ADDR(ENCL_VIDEO_HOFFST) 	///../ucode/register.h
+#define ENCL_VIDEO_VOFFST 0x1cc0 	///../ucode/register.h
+#define P_ENCL_VIDEO_VOFFST 		CBUS_REG_ADDR(ENCL_VIDEO_VOFFST) 	///../ucode/register.h
+#define ENCL_VIDEO_RGB_CTRL 0x1cc1 	///../ucode/register.h
+#define P_ENCL_VIDEO_RGB_CTRL 		CBUS_REG_ADDR(ENCL_VIDEO_RGB_CTRL) 	///../ucode/register.h
+#define ENCL_VIDEO_FILT_CTRL 0x1cc2 	///../ucode/register.h
+#define P_ENCL_VIDEO_FILT_CTRL 		CBUS_REG_ADDR(ENCL_VIDEO_FILT_CTRL) 	///../ucode/register.h
+#define ENCL_VIDEO_OFLD_VPEQ_OFST 0x1cc3 	///../ucode/register.h
+#define P_ENCL_VIDEO_OFLD_VPEQ_OFST 		CBUS_REG_ADDR(ENCL_VIDEO_OFLD_VPEQ_OFST) 	///../ucode/register.h
+#define ENCL_VIDEO_OFLD_VOAV_OFST 0x1cc4 	///../ucode/register.h
+#define P_ENCL_VIDEO_OFLD_VOAV_OFST 		CBUS_REG_ADDR(ENCL_VIDEO_OFLD_VOAV_OFST) 	///../ucode/register.h
+#define ENCL_VIDEO_MATRIX_CB 0x1cc5 	///../ucode/register.h
+#define P_ENCL_VIDEO_MATRIX_CB 		CBUS_REG_ADDR(ENCL_VIDEO_MATRIX_CB) 	///../ucode/register.h
+#define ENCL_VIDEO_MATRIX_CR 0x1cc6 	///../ucode/register.h
+#define P_ENCL_VIDEO_MATRIX_CR 		CBUS_REG_ADDR(ENCL_VIDEO_MATRIX_CR) 	///../ucode/register.h
+#define ENCL_VIDEO_RGBIN_CTRL 0x1cc7 	///../ucode/register.h
+#define P_ENCL_VIDEO_RGBIN_CTRL 		CBUS_REG_ADDR(ENCL_VIDEO_RGBIN_CTRL) 	///../ucode/register.h
+#define ENCL_MAX_LINE_SWITCH_POINT 0x1cc8 	///../ucode/register.h
+#define P_ENCL_MAX_LINE_SWITCH_POINT 		CBUS_REG_ADDR(ENCL_MAX_LINE_SWITCH_POINT) 	///../ucode/register.h
+#define ENCL_DACSEL_0 0x1cc9 	///../ucode/register.h
+#define P_ENCL_DACSEL_0 		CBUS_REG_ADDR(ENCL_DACSEL_0) 	///../ucode/register.h
+#define ENCL_DACSEL_1 0x1cca 	///../ucode/register.h
+#define P_ENCL_DACSEL_1 		CBUS_REG_ADDR(ENCL_DACSEL_1) 	///../ucode/register.h
+#define RDMA_AHB_START_ADDR_MAN 0x1cf0 	///../ucode/register.h
+#define P_RDMA_AHB_START_ADDR_MAN 		CBUS_REG_ADDR(RDMA_AHB_START_ADDR_MAN) 	///../ucode/register.h
+#define RDMA_AHB_END_ADDR_MAN 0x1cf1 	///../ucode/register.h
+#define P_RDMA_AHB_END_ADDR_MAN 		CBUS_REG_ADDR(RDMA_AHB_END_ADDR_MAN) 	///../ucode/register.h
+#define RDMA_AHB_START_ADDR_1 0x1cf2 	///../ucode/register.h
+#define P_RDMA_AHB_START_ADDR_1 		CBUS_REG_ADDR(RDMA_AHB_START_ADDR_1) 	///../ucode/register.h
+#define RDMA_AHB_END_ADDR_1 0x1cf3 	///../ucode/register.h
+#define P_RDMA_AHB_END_ADDR_1 		CBUS_REG_ADDR(RDMA_AHB_END_ADDR_1) 	///../ucode/register.h
+#define RDMA_AHB_START_ADDR_2 0x1cf4 	///../ucode/register.h
+#define P_RDMA_AHB_START_ADDR_2 		CBUS_REG_ADDR(RDMA_AHB_START_ADDR_2) 	///../ucode/register.h
+#define RDMA_AHB_END_ADDR_2 0x1cf5 	///../ucode/register.h
+#define P_RDMA_AHB_END_ADDR_2 		CBUS_REG_ADDR(RDMA_AHB_END_ADDR_2) 	///../ucode/register.h
+#define RDMA_AHB_START_ADDR_3 0x1cf6 	///../ucode/register.h
+#define P_RDMA_AHB_START_ADDR_3 		CBUS_REG_ADDR(RDMA_AHB_START_ADDR_3) 	///../ucode/register.h
+#define RDMA_AHB_END_ADDR_3 0x1cf7 	///../ucode/register.h
+#define P_RDMA_AHB_END_ADDR_3 		CBUS_REG_ADDR(RDMA_AHB_END_ADDR_3) 	///../ucode/register.h
+#define RDMA_ACCESS_AUTO 0x1cf8 	///../ucode/register.h
+#define P_RDMA_ACCESS_AUTO 		CBUS_REG_ADDR(RDMA_ACCESS_AUTO) 	///../ucode/register.h
+#define RDMA_ACCESS_MAN 0x1cf9 	///../ucode/register.h
+#define P_RDMA_ACCESS_MAN 		CBUS_REG_ADDR(RDMA_ACCESS_MAN) 	///../ucode/register.h
+#define RDMA_CTRL 0x1cfa 	///../ucode/register.h
+#define P_RDMA_CTRL 		CBUS_REG_ADDR(RDMA_CTRL) 	///../ucode/register.h
+#define RDMA_STATUS 0x1cfb 	///../ucode/register.h
+#define P_RDMA_STATUS 		CBUS_REG_ADDR(RDMA_STATUS) 	///../ucode/register.h
+#define L_GAMMA_CNTL_PORT 0x1400 	///../ucode/register.h
+#define P_L_GAMMA_CNTL_PORT 		CBUS_REG_ADDR(L_GAMMA_CNTL_PORT) 	///../ucode/register.h
+#define L_GAMMA_DATA_PORT 0x1401 	///../ucode/register.h
+#define P_L_GAMMA_DATA_PORT 		CBUS_REG_ADDR(L_GAMMA_DATA_PORT) 	///../ucode/register.h
+#define L_GAMMA_ADDR_PORT 0x1402 	///../ucode/register.h
+#define P_L_GAMMA_ADDR_PORT 		CBUS_REG_ADDR(L_GAMMA_ADDR_PORT) 	///../ucode/register.h
+#define L_GAMMA_VCOM_HSWITCH_ADDR 0x1403 	///../ucode/register.h
+#define P_L_GAMMA_VCOM_HSWITCH_ADDR 		CBUS_REG_ADDR(L_GAMMA_VCOM_HSWITCH_ADDR) 	///../ucode/register.h
+#define L_RGB_BASE_ADDR 0x1405 	///../ucode/register.h
+#define P_L_RGB_BASE_ADDR 		CBUS_REG_ADDR(L_RGB_BASE_ADDR) 	///../ucode/register.h
+#define L_RGB_COEFF_ADDR 0x1406 	///../ucode/register.h
+#define P_L_RGB_COEFF_ADDR 		CBUS_REG_ADDR(L_RGB_COEFF_ADDR) 	///../ucode/register.h
+#define L_POL_CNTL_ADDR 0x1407 	///../ucode/register.h
+#define P_L_POL_CNTL_ADDR 		CBUS_REG_ADDR(L_POL_CNTL_ADDR) 	///../ucode/register.h
+#define L_DITH_CNTL_ADDR 0x1408 	///../ucode/register.h
+#define P_L_DITH_CNTL_ADDR 		CBUS_REG_ADDR(L_DITH_CNTL_ADDR) 	///../ucode/register.h
+#define L_GAMMA_PROBE_CTRL 0x1409 	///../ucode/register.h
+#define P_L_GAMMA_PROBE_CTRL 		CBUS_REG_ADDR(L_GAMMA_PROBE_CTRL) 	///../ucode/register.h
+#define L_GAMMA_PROBE_COLOR_L 0x140a 	///../ucode/register.h
+#define P_L_GAMMA_PROBE_COLOR_L 		CBUS_REG_ADDR(L_GAMMA_PROBE_COLOR_L) 	///../ucode/register.h
+#define L_GAMMA_PROBE_COLOR_H 0x140b 	///../ucode/register.h
+#define P_L_GAMMA_PROBE_COLOR_H 		CBUS_REG_ADDR(L_GAMMA_PROBE_COLOR_H) 	///../ucode/register.h
+#define L_GAMMA_PROBE_HL_COLOR 0x140c 	///../ucode/register.h
+#define P_L_GAMMA_PROBE_HL_COLOR 		CBUS_REG_ADDR(L_GAMMA_PROBE_HL_COLOR) 	///../ucode/register.h
+#define L_GAMMA_PROBE_POS_X 0x140d 	///../ucode/register.h
+#define P_L_GAMMA_PROBE_POS_X 		CBUS_REG_ADDR(L_GAMMA_PROBE_POS_X) 	///../ucode/register.h
+#define L_GAMMA_PROBE_POS_Y 0x140e 	///../ucode/register.h
+#define P_L_GAMMA_PROBE_POS_Y 		CBUS_REG_ADDR(L_GAMMA_PROBE_POS_Y) 	///../ucode/register.h
+#define L_STH1_HS_ADDR 0x1410 	///../ucode/register.h
+#define P_L_STH1_HS_ADDR 		CBUS_REG_ADDR(L_STH1_HS_ADDR) 	///../ucode/register.h
+#define L_STH1_HE_ADDR 0x1411 	///../ucode/register.h
+#define P_L_STH1_HE_ADDR 		CBUS_REG_ADDR(L_STH1_HE_ADDR) 	///../ucode/register.h
+#define L_STH1_VS_ADDR 0x1412 	///../ucode/register.h
+#define P_L_STH1_VS_ADDR 		CBUS_REG_ADDR(L_STH1_VS_ADDR) 	///../ucode/register.h
+#define L_STH1_VE_ADDR 0x1413 	///../ucode/register.h
+#define P_L_STH1_VE_ADDR 		CBUS_REG_ADDR(L_STH1_VE_ADDR) 	///../ucode/register.h
+#define L_STH2_HS_ADDR 0x1414 	///../ucode/register.h
+#define P_L_STH2_HS_ADDR 		CBUS_REG_ADDR(L_STH2_HS_ADDR) 	///../ucode/register.h
+#define L_STH2_HE_ADDR 0x1415 	///../ucode/register.h
+#define P_L_STH2_HE_ADDR 		CBUS_REG_ADDR(L_STH2_HE_ADDR) 	///../ucode/register.h
+#define L_STH2_VS_ADDR 0x1416 	///../ucode/register.h
+#define P_L_STH2_VS_ADDR 		CBUS_REG_ADDR(L_STH2_VS_ADDR) 	///../ucode/register.h
+#define L_STH2_VE_ADDR 0x1417 	///../ucode/register.h
+#define P_L_STH2_VE_ADDR 		CBUS_REG_ADDR(L_STH2_VE_ADDR) 	///../ucode/register.h
+#define L_OEH_HS_ADDR 0x1418 	///../ucode/register.h
+#define P_L_OEH_HS_ADDR 		CBUS_REG_ADDR(L_OEH_HS_ADDR) 	///../ucode/register.h
+#define L_OEH_HE_ADDR 0x1419 	///../ucode/register.h
+#define P_L_OEH_HE_ADDR 		CBUS_REG_ADDR(L_OEH_HE_ADDR) 	///../ucode/register.h
+#define L_OEH_VS_ADDR 0x141a 	///../ucode/register.h
+#define P_L_OEH_VS_ADDR 		CBUS_REG_ADDR(L_OEH_VS_ADDR) 	///../ucode/register.h
+#define L_OEH_VE_ADDR 0x141b 	///../ucode/register.h
+#define P_L_OEH_VE_ADDR 		CBUS_REG_ADDR(L_OEH_VE_ADDR) 	///../ucode/register.h
+#define L_VCOM_HSWITCH_ADDR 0x141c 	///../ucode/register.h
+#define P_L_VCOM_HSWITCH_ADDR 		CBUS_REG_ADDR(L_VCOM_HSWITCH_ADDR) 	///../ucode/register.h
+#define L_VCOM_VS_ADDR 0x141d 	///../ucode/register.h
+#define P_L_VCOM_VS_ADDR 		CBUS_REG_ADDR(L_VCOM_VS_ADDR) 	///../ucode/register.h
+#define L_VCOM_VE_ADDR 0x141e 	///../ucode/register.h
+#define P_L_VCOM_VE_ADDR 		CBUS_REG_ADDR(L_VCOM_VE_ADDR) 	///../ucode/register.h
+#define L_CPV1_HS_ADDR 0x141f 	///../ucode/register.h
+#define P_L_CPV1_HS_ADDR 		CBUS_REG_ADDR(L_CPV1_HS_ADDR) 	///../ucode/register.h
+#define L_CPV1_HE_ADDR 0x1420 	///../ucode/register.h
+#define P_L_CPV1_HE_ADDR 		CBUS_REG_ADDR(L_CPV1_HE_ADDR) 	///../ucode/register.h
+#define L_CPV1_VS_ADDR 0x1421 	///../ucode/register.h
+#define P_L_CPV1_VS_ADDR 		CBUS_REG_ADDR(L_CPV1_VS_ADDR) 	///../ucode/register.h
+#define L_CPV1_VE_ADDR 0x1422 	///../ucode/register.h
+#define P_L_CPV1_VE_ADDR 		CBUS_REG_ADDR(L_CPV1_VE_ADDR) 	///../ucode/register.h
+#define L_CPV2_HS_ADDR 0x1423 	///../ucode/register.h
+#define P_L_CPV2_HS_ADDR 		CBUS_REG_ADDR(L_CPV2_HS_ADDR) 	///../ucode/register.h
+#define L_CPV2_HE_ADDR 0x1424 	///../ucode/register.h
+#define P_L_CPV2_HE_ADDR 		CBUS_REG_ADDR(L_CPV2_HE_ADDR) 	///../ucode/register.h
+#define L_CPV2_VS_ADDR 0x1425 	///../ucode/register.h
+#define P_L_CPV2_VS_ADDR 		CBUS_REG_ADDR(L_CPV2_VS_ADDR) 	///../ucode/register.h
+#define L_CPV2_VE_ADDR 0x1426 	///../ucode/register.h
+#define P_L_CPV2_VE_ADDR 		CBUS_REG_ADDR(L_CPV2_VE_ADDR) 	///../ucode/register.h
+#define L_STV1_HS_ADDR 0x1427 	///../ucode/register.h
+#define P_L_STV1_HS_ADDR 		CBUS_REG_ADDR(L_STV1_HS_ADDR) 	///../ucode/register.h
+#define L_STV1_HE_ADDR 0x1428 	///../ucode/register.h
+#define P_L_STV1_HE_ADDR 		CBUS_REG_ADDR(L_STV1_HE_ADDR) 	///../ucode/register.h
+#define L_STV1_VS_ADDR 0x1429 	///../ucode/register.h
+#define P_L_STV1_VS_ADDR 		CBUS_REG_ADDR(L_STV1_VS_ADDR) 	///../ucode/register.h
+#define L_STV1_VE_ADDR 0x142a 	///../ucode/register.h
+#define P_L_STV1_VE_ADDR 		CBUS_REG_ADDR(L_STV1_VE_ADDR) 	///../ucode/register.h
+#define L_STV2_HS_ADDR 0x142b 	///../ucode/register.h
+#define P_L_STV2_HS_ADDR 		CBUS_REG_ADDR(L_STV2_HS_ADDR) 	///../ucode/register.h
+#define L_STV2_HE_ADDR 0x142c 	///../ucode/register.h
+#define P_L_STV2_HE_ADDR 		CBUS_REG_ADDR(L_STV2_HE_ADDR) 	///../ucode/register.h
+#define L_STV2_VS_ADDR 0x142d 	///../ucode/register.h
+#define P_L_STV2_VS_ADDR 		CBUS_REG_ADDR(L_STV2_VS_ADDR) 	///../ucode/register.h
+#define L_STV2_VE_ADDR 0x142e 	///../ucode/register.h
+#define P_L_STV2_VE_ADDR 		CBUS_REG_ADDR(L_STV2_VE_ADDR) 	///../ucode/register.h
+#define L_OEV1_HS_ADDR 0x142f 	///../ucode/register.h
+#define P_L_OEV1_HS_ADDR 		CBUS_REG_ADDR(L_OEV1_HS_ADDR) 	///../ucode/register.h
+#define L_OEV1_HE_ADDR 0x1430 	///../ucode/register.h
+#define P_L_OEV1_HE_ADDR 		CBUS_REG_ADDR(L_OEV1_HE_ADDR) 	///../ucode/register.h
+#define L_OEV1_VS_ADDR 0x1431 	///../ucode/register.h
+#define P_L_OEV1_VS_ADDR 		CBUS_REG_ADDR(L_OEV1_VS_ADDR) 	///../ucode/register.h
+#define L_OEV1_VE_ADDR 0x1432 	///../ucode/register.h
+#define P_L_OEV1_VE_ADDR 		CBUS_REG_ADDR(L_OEV1_VE_ADDR) 	///../ucode/register.h
+#define L_OEV2_HS_ADDR 0x1433 	///../ucode/register.h
+#define P_L_OEV2_HS_ADDR 		CBUS_REG_ADDR(L_OEV2_HS_ADDR) 	///../ucode/register.h
+#define L_OEV2_HE_ADDR 0x1434 	///../ucode/register.h
+#define P_L_OEV2_HE_ADDR 		CBUS_REG_ADDR(L_OEV2_HE_ADDR) 	///../ucode/register.h
+#define L_OEV2_VS_ADDR 0x1435 	///../ucode/register.h
+#define P_L_OEV2_VS_ADDR 		CBUS_REG_ADDR(L_OEV2_VS_ADDR) 	///../ucode/register.h
+#define L_OEV2_VE_ADDR 0x1436 	///../ucode/register.h
+#define P_L_OEV2_VE_ADDR 		CBUS_REG_ADDR(L_OEV2_VE_ADDR) 	///../ucode/register.h
+#define L_OEV3_HS_ADDR 0x1437 	///../ucode/register.h
+#define P_L_OEV3_HS_ADDR 		CBUS_REG_ADDR(L_OEV3_HS_ADDR) 	///../ucode/register.h
+#define L_OEV3_HE_ADDR 0x1438 	///../ucode/register.h
+#define P_L_OEV3_HE_ADDR 		CBUS_REG_ADDR(L_OEV3_HE_ADDR) 	///../ucode/register.h
+#define L_OEV3_VS_ADDR 0x1439 	///../ucode/register.h
+#define P_L_OEV3_VS_ADDR 		CBUS_REG_ADDR(L_OEV3_VS_ADDR) 	///../ucode/register.h
+#define L_OEV3_VE_ADDR 0x143a 	///../ucode/register.h
+#define P_L_OEV3_VE_ADDR 		CBUS_REG_ADDR(L_OEV3_VE_ADDR) 	///../ucode/register.h
+#define L_LCD_PWR_ADDR 0x143b 	///../ucode/register.h
+#define P_L_LCD_PWR_ADDR 		CBUS_REG_ADDR(L_LCD_PWR_ADDR) 	///../ucode/register.h
+#define L_LCD_PWM0_LO_ADDR 0x143c 	///../ucode/register.h
+#define P_L_LCD_PWM0_LO_ADDR 		CBUS_REG_ADDR(L_LCD_PWM0_LO_ADDR) 	///../ucode/register.h
+#define L_LCD_PWM0_HI_ADDR 0x143d 	///../ucode/register.h
+#define P_L_LCD_PWM0_HI_ADDR 		CBUS_REG_ADDR(L_LCD_PWM0_HI_ADDR) 	///../ucode/register.h
+#define L_LCD_PWM1_LO_ADDR 0x143e 	///../ucode/register.h
+#define P_L_LCD_PWM1_LO_ADDR 		CBUS_REG_ADDR(L_LCD_PWM1_LO_ADDR) 	///../ucode/register.h
+#define L_LCD_PWM1_HI_ADDR 0x143f 	///../ucode/register.h
+#define P_L_LCD_PWM1_HI_ADDR 		CBUS_REG_ADDR(L_LCD_PWM1_HI_ADDR) 	///../ucode/register.h
+#define L_INV_CNT_ADDR 0x1440 	///../ucode/register.h
+#define P_L_INV_CNT_ADDR 		CBUS_REG_ADDR(L_INV_CNT_ADDR) 	///../ucode/register.h
+#define L_TCON_MISC_SEL_ADDR 0x1441 	///../ucode/register.h
+#define P_L_TCON_MISC_SEL_ADDR 		CBUS_REG_ADDR(L_TCON_MISC_SEL_ADDR) 	///../ucode/register.h
+#define L_DUAL_PORT_CNTL_ADDR 0x1442 	///../ucode/register.h
+#define P_L_DUAL_PORT_CNTL_ADDR 		CBUS_REG_ADDR(L_DUAL_PORT_CNTL_ADDR) 	///../ucode/register.h
+#define MLVDS_CLK_CTL1_HI 0x1443 	///../ucode/register.h
+#define P_MLVDS_CLK_CTL1_HI 		CBUS_REG_ADDR(MLVDS_CLK_CTL1_HI) 	///../ucode/register.h
+#define MLVDS_CLK_CTL1_LO 0x1444 	///../ucode/register.h
+#define P_MLVDS_CLK_CTL1_LO 		CBUS_REG_ADDR(MLVDS_CLK_CTL1_LO) 	///../ucode/register.h
+#define L_TCON_DOUBLE_CTL 0x1449 	///../ucode/register.h
+#define P_L_TCON_DOUBLE_CTL 		CBUS_REG_ADDR(L_TCON_DOUBLE_CTL) 	///../ucode/register.h
+#define L_TCON_PATTERN_HI 0x144a 	///../ucode/register.h
+#define P_L_TCON_PATTERN_HI 		CBUS_REG_ADDR(L_TCON_PATTERN_HI) 	///../ucode/register.h
+#define L_TCON_PATTERN_LO 0x144b 	///../ucode/register.h
+#define P_L_TCON_PATTERN_LO 		CBUS_REG_ADDR(L_TCON_PATTERN_LO) 	///../ucode/register.h
+#define LDIM_BL_ADDR_PORT 0x144e 	///../ucode/register.h
+#define P_LDIM_BL_ADDR_PORT 		CBUS_REG_ADDR(LDIM_BL_ADDR_PORT) 	///../ucode/register.h
+#define LDIM_BL_DATA_PORT 0x144f 	///../ucode/register.h
+#define P_LDIM_BL_DATA_PORT 		CBUS_REG_ADDR(LDIM_BL_DATA_PORT) 	///../ucode/register.h
+#define L_DE_HS_ADDR 0x1451 	///../ucode/register.h
+#define P_L_DE_HS_ADDR 		CBUS_REG_ADDR(L_DE_HS_ADDR) 	///../ucode/register.h
+#define L_DE_HE_ADDR 0x1452 	///../ucode/register.h
+#define P_L_DE_HE_ADDR 		CBUS_REG_ADDR(L_DE_HE_ADDR) 	///../ucode/register.h
+#define L_DE_VS_ADDR 0x1453 	///../ucode/register.h
+#define P_L_DE_VS_ADDR 		CBUS_REG_ADDR(L_DE_VS_ADDR) 	///../ucode/register.h
+#define L_DE_VE_ADDR 0x1454 	///../ucode/register.h
+#define P_L_DE_VE_ADDR 		CBUS_REG_ADDR(L_DE_VE_ADDR) 	///../ucode/register.h
+#define L_HSYNC_HS_ADDR 0x1455 	///../ucode/register.h
+#define P_L_HSYNC_HS_ADDR 		CBUS_REG_ADDR(L_HSYNC_HS_ADDR) 	///../ucode/register.h
+#define L_HSYNC_HE_ADDR 0x1456 	///../ucode/register.h
+#define P_L_HSYNC_HE_ADDR 		CBUS_REG_ADDR(L_HSYNC_HE_ADDR) 	///../ucode/register.h
+#define L_HSYNC_VS_ADDR 0x1457 	///../ucode/register.h
+#define P_L_HSYNC_VS_ADDR 		CBUS_REG_ADDR(L_HSYNC_VS_ADDR) 	///../ucode/register.h
+#define L_HSYNC_VE_ADDR 0x1458 	///../ucode/register.h
+#define P_L_HSYNC_VE_ADDR 		CBUS_REG_ADDR(L_HSYNC_VE_ADDR) 	///../ucode/register.h
+#define L_VSYNC_HS_ADDR 0x1459 	///../ucode/register.h
+#define P_L_VSYNC_HS_ADDR 		CBUS_REG_ADDR(L_VSYNC_HS_ADDR) 	///../ucode/register.h
+#define L_VSYNC_HE_ADDR 0x145a 	///../ucode/register.h
+#define P_L_VSYNC_HE_ADDR 		CBUS_REG_ADDR(L_VSYNC_HE_ADDR) 	///../ucode/register.h
+#define L_VSYNC_VS_ADDR 0x145b 	///../ucode/register.h
+#define P_L_VSYNC_VS_ADDR 		CBUS_REG_ADDR(L_VSYNC_VS_ADDR) 	///../ucode/register.h
+#define L_VSYNC_VE_ADDR 0x145c 	///../ucode/register.h
+#define P_L_VSYNC_VE_ADDR 		CBUS_REG_ADDR(L_VSYNC_VE_ADDR) 	///../ucode/register.h
+#define L_LCD_MCU_CTL 0x145d 	///../ucode/register.h
+#define P_L_LCD_MCU_CTL 		CBUS_REG_ADDR(L_LCD_MCU_CTL) 	///../ucode/register.h
+#define DUAL_MLVDS_CTL 0x1460 	///../ucode/register.h
+#define P_DUAL_MLVDS_CTL 		CBUS_REG_ADDR(DUAL_MLVDS_CTL) 	///../ucode/register.h
+#define DUAL_MLVDS_LINE_START 0x1461 	///../ucode/register.h
+#define P_DUAL_MLVDS_LINE_START 		CBUS_REG_ADDR(DUAL_MLVDS_LINE_START) 	///../ucode/register.h
+#define DUAL_MLVDS_LINE_END 0x1462 	///../ucode/register.h
+#define P_DUAL_MLVDS_LINE_END 		CBUS_REG_ADDR(DUAL_MLVDS_LINE_END) 	///../ucode/register.h
+#define DUAL_MLVDS_PIXEL_W_START_L 0x1463 	///../ucode/register.h
+#define P_DUAL_MLVDS_PIXEL_W_START_L 		CBUS_REG_ADDR(DUAL_MLVDS_PIXEL_W_START_L) 	///../ucode/register.h
+#define DUAL_MLVDS_PIXEL_W_END_L 0x1464 	///../ucode/register.h
+#define P_DUAL_MLVDS_PIXEL_W_END_L 		CBUS_REG_ADDR(DUAL_MLVDS_PIXEL_W_END_L) 	///../ucode/register.h
+#define DUAL_MLVDS_PIXEL_W_START_R 0x1465 	///../ucode/register.h
+#define P_DUAL_MLVDS_PIXEL_W_START_R 		CBUS_REG_ADDR(DUAL_MLVDS_PIXEL_W_START_R) 	///../ucode/register.h
+#define DUAL_MLVDS_PIXEL_W_END_R 0x1466 	///../ucode/register.h
+#define P_DUAL_MLVDS_PIXEL_W_END_R 		CBUS_REG_ADDR(DUAL_MLVDS_PIXEL_W_END_R) 	///../ucode/register.h
+#define DUAL_MLVDS_PIXEL_R_START_L 0x1467 	///../ucode/register.h
+#define P_DUAL_MLVDS_PIXEL_R_START_L 		CBUS_REG_ADDR(DUAL_MLVDS_PIXEL_R_START_L) 	///../ucode/register.h
+#define DUAL_MLVDS_PIXEL_R_CNT_L 0x1468 	///../ucode/register.h
+#define P_DUAL_MLVDS_PIXEL_R_CNT_L 		CBUS_REG_ADDR(DUAL_MLVDS_PIXEL_R_CNT_L) 	///../ucode/register.h
+#define DUAL_MLVDS_PIXEL_R_START_R 0x1469 	///../ucode/register.h
+#define P_DUAL_MLVDS_PIXEL_R_START_R 		CBUS_REG_ADDR(DUAL_MLVDS_PIXEL_R_START_R) 	///../ucode/register.h
+#define DUAL_MLVDS_PIXEL_R_CNT_R 0x146a 	///../ucode/register.h
+#define P_DUAL_MLVDS_PIXEL_R_CNT_R 		CBUS_REG_ADDR(DUAL_MLVDS_PIXEL_R_CNT_R) 	///../ucode/register.h
+#define V_INVERSION_PIXEL 0x1470 	///../ucode/register.h
+#define P_V_INVERSION_PIXEL 		CBUS_REG_ADDR(V_INVERSION_PIXEL) 	///../ucode/register.h
+#define V_INVERSION_LINE 0x1471 	///../ucode/register.h
+#define P_V_INVERSION_LINE 		CBUS_REG_ADDR(V_INVERSION_LINE) 	///../ucode/register.h
+#define V_INVERSION_CONTROL 0x1472 	///../ucode/register.h
+#define P_V_INVERSION_CONTROL 		CBUS_REG_ADDR(V_INVERSION_CONTROL) 	///../ucode/register.h
+#define MLVDS2_CONTROL 0x1474 	///../ucode/register.h
+#define P_MLVDS2_CONTROL 		CBUS_REG_ADDR(MLVDS2_CONTROL) 	///../ucode/register.h
+#define MLVDS2_CONFIG_HI 0x1475 	///../ucode/register.h
+#define P_MLVDS2_CONFIG_HI 		CBUS_REG_ADDR(MLVDS2_CONFIG_HI) 	///../ucode/register.h
+#define MLVDS2_CONFIG_LO 0x1476 	///../ucode/register.h
+#define P_MLVDS2_CONFIG_LO 		CBUS_REG_ADDR(MLVDS2_CONFIG_LO) 	///../ucode/register.h
+#define MLVDS2_DUAL_GATE_WR_START 0x1477 	///../ucode/register.h
+#define P_MLVDS2_DUAL_GATE_WR_START 		CBUS_REG_ADDR(MLVDS2_DUAL_GATE_WR_START) 	///../ucode/register.h
+#define MLVDS2_DUAL_GATE_WR_END 0x1478 	///../ucode/register.h
+#define P_MLVDS2_DUAL_GATE_WR_END 		CBUS_REG_ADDR(MLVDS2_DUAL_GATE_WR_END) 	///../ucode/register.h
+#define MLVDS2_DUAL_GATE_RD_START 0x1479 	///../ucode/register.h
+#define P_MLVDS2_DUAL_GATE_RD_START 		CBUS_REG_ADDR(MLVDS2_DUAL_GATE_RD_START) 	///../ucode/register.h
+#define MLVDS2_DUAL_GATE_RD_END 0x147a 	///../ucode/register.h
+#define P_MLVDS2_DUAL_GATE_RD_END 		CBUS_REG_ADDR(MLVDS2_DUAL_GATE_RD_END) 	///../ucode/register.h
+#define MLVDS2_SECOND_RESET_CTL 0x147b 	///../ucode/register.h
+#define P_MLVDS2_SECOND_RESET_CTL 		CBUS_REG_ADDR(MLVDS2_SECOND_RESET_CTL) 	///../ucode/register.h
+#define MLVDS2_DUAL_GATE_CTL_HI 0x147c 	///../ucode/register.h
+#define P_MLVDS2_DUAL_GATE_CTL_HI 		CBUS_REG_ADDR(MLVDS2_DUAL_GATE_CTL_HI) 	///../ucode/register.h
+#define MLVDS2_DUAL_GATE_CTL_LO 0x147d 	///../ucode/register.h
+#define P_MLVDS2_DUAL_GATE_CTL_LO 		CBUS_REG_ADDR(MLVDS2_DUAL_GATE_CTL_LO) 	///../ucode/register.h
+#define MLVDS2_RESET_CONFIG_HI 0x147e 	///../ucode/register.h
+#define P_MLVDS2_RESET_CONFIG_HI 		CBUS_REG_ADDR(MLVDS2_RESET_CONFIG_HI) 	///../ucode/register.h
+#define MLVDS2_RESET_CONFIG_LO 0x147f 	///../ucode/register.h
+#define P_MLVDS2_RESET_CONFIG_LO 		CBUS_REG_ADDR(MLVDS2_RESET_CONFIG_LO) 	///../ucode/register.h
+#define GAMMA_CNTL_PORT 0x1480 	///../ucode/register.h
+#define P_GAMMA_CNTL_PORT 		CBUS_REG_ADDR(GAMMA_CNTL_PORT) 	///../ucode/register.h
+#define GAMMA_DATA_PORT 0x1481 	///../ucode/register.h
+#define P_GAMMA_DATA_PORT 		CBUS_REG_ADDR(GAMMA_DATA_PORT) 	///../ucode/register.h
+#define GAMMA_ADDR_PORT 0x1482 	///../ucode/register.h
+#define P_GAMMA_ADDR_PORT 		CBUS_REG_ADDR(GAMMA_ADDR_PORT) 	///../ucode/register.h
+#define GAMMA_VCOM_HSWITCH_ADDR 0x1483 	///../ucode/register.h
+#define P_GAMMA_VCOM_HSWITCH_ADDR 		CBUS_REG_ADDR(GAMMA_VCOM_HSWITCH_ADDR) 	///../ucode/register.h
+#define RGB_BASE_ADDR 0x1485 	///../ucode/register.h
+#define P_RGB_BASE_ADDR 		CBUS_REG_ADDR(RGB_BASE_ADDR) 	///../ucode/register.h
+#define RGB_COEFF_ADDR 0x1486 	///../ucode/register.h
+#define P_RGB_COEFF_ADDR 		CBUS_REG_ADDR(RGB_COEFF_ADDR) 	///../ucode/register.h
+#define POL_CNTL_ADDR 0x1487 	///../ucode/register.h
+#define P_POL_CNTL_ADDR 		CBUS_REG_ADDR(POL_CNTL_ADDR) 	///../ucode/register.h
+#define DITH_CNTL_ADDR 0x1488 	///../ucode/register.h
+#define P_DITH_CNTL_ADDR 		CBUS_REG_ADDR(DITH_CNTL_ADDR) 	///../ucode/register.h
+#define GAMMA_PROBE_CTRL 0x1489 	///../ucode/register.h
+#define P_GAMMA_PROBE_CTRL 		CBUS_REG_ADDR(GAMMA_PROBE_CTRL) 	///../ucode/register.h
+#define GAMMA_PROBE_COLOR_L 0x148a 	///../ucode/register.h
+#define P_GAMMA_PROBE_COLOR_L 		CBUS_REG_ADDR(GAMMA_PROBE_COLOR_L) 	///../ucode/register.h
+#define GAMMA_PROBE_COLOR_H 0x148b 	///../ucode/register.h
+#define P_GAMMA_PROBE_COLOR_H 		CBUS_REG_ADDR(GAMMA_PROBE_COLOR_H) 	///../ucode/register.h
+#define GAMMA_PROBE_HL_COLOR 0x148c 	///../ucode/register.h
+#define P_GAMMA_PROBE_HL_COLOR 		CBUS_REG_ADDR(GAMMA_PROBE_HL_COLOR) 	///../ucode/register.h
+#define GAMMA_PROBE_POS_X 0x148d 	///../ucode/register.h
+#define P_GAMMA_PROBE_POS_X 		CBUS_REG_ADDR(GAMMA_PROBE_POS_X) 	///../ucode/register.h
+#define GAMMA_PROBE_POS_Y 0x148e 	///../ucode/register.h
+#define P_GAMMA_PROBE_POS_Y 		CBUS_REG_ADDR(GAMMA_PROBE_POS_Y) 	///../ucode/register.h
+#define STH1_HS_ADDR 0x1490 	///../ucode/register.h
+#define P_STH1_HS_ADDR 		CBUS_REG_ADDR(STH1_HS_ADDR) 	///../ucode/register.h
+#define STH1_HE_ADDR 0x1491 	///../ucode/register.h
+#define P_STH1_HE_ADDR 		CBUS_REG_ADDR(STH1_HE_ADDR) 	///../ucode/register.h
+#define STH1_VS_ADDR 0x1492 	///../ucode/register.h
+#define P_STH1_VS_ADDR 		CBUS_REG_ADDR(STH1_VS_ADDR) 	///../ucode/register.h
+#define STH1_VE_ADDR 0x1493 	///../ucode/register.h
+#define P_STH1_VE_ADDR 		CBUS_REG_ADDR(STH1_VE_ADDR) 	///../ucode/register.h
+#define STH2_HS_ADDR 0x1494 	///../ucode/register.h
+#define P_STH2_HS_ADDR 		CBUS_REG_ADDR(STH2_HS_ADDR) 	///../ucode/register.h
+#define STH2_HE_ADDR 0x1495 	///../ucode/register.h
+#define P_STH2_HE_ADDR 		CBUS_REG_ADDR(STH2_HE_ADDR) 	///../ucode/register.h
+#define STH2_VS_ADDR 0x1496 	///../ucode/register.h
+#define P_STH2_VS_ADDR 		CBUS_REG_ADDR(STH2_VS_ADDR) 	///../ucode/register.h
+#define STH2_VE_ADDR 0x1497 	///../ucode/register.h
+#define P_STH2_VE_ADDR 		CBUS_REG_ADDR(STH2_VE_ADDR) 	///../ucode/register.h
+#define OEH_HS_ADDR 0x1498 	///../ucode/register.h
+#define P_OEH_HS_ADDR 		CBUS_REG_ADDR(OEH_HS_ADDR) 	///../ucode/register.h
+#define OEH_HE_ADDR 0x1499 	///../ucode/register.h
+#define P_OEH_HE_ADDR 		CBUS_REG_ADDR(OEH_HE_ADDR) 	///../ucode/register.h
+#define OEH_VS_ADDR 0x149a 	///../ucode/register.h
+#define P_OEH_VS_ADDR 		CBUS_REG_ADDR(OEH_VS_ADDR) 	///../ucode/register.h
+#define OEH_VE_ADDR 0x149b 	///../ucode/register.h
+#define P_OEH_VE_ADDR 		CBUS_REG_ADDR(OEH_VE_ADDR) 	///../ucode/register.h
+#define VCOM_HSWITCH_ADDR 0x149c 	///../ucode/register.h
+#define P_VCOM_HSWITCH_ADDR 		CBUS_REG_ADDR(VCOM_HSWITCH_ADDR) 	///../ucode/register.h
+#define VCOM_VS_ADDR 0x149d 	///../ucode/register.h
+#define P_VCOM_VS_ADDR 		CBUS_REG_ADDR(VCOM_VS_ADDR) 	///../ucode/register.h
+#define VCOM_VE_ADDR 0x149e 	///../ucode/register.h
+#define P_VCOM_VE_ADDR 		CBUS_REG_ADDR(VCOM_VE_ADDR) 	///../ucode/register.h
+#define CPV1_HS_ADDR 0x149f 	///../ucode/register.h
+#define P_CPV1_HS_ADDR 		CBUS_REG_ADDR(CPV1_HS_ADDR) 	///../ucode/register.h
+#define CPV1_HE_ADDR 0x14a0 	///../ucode/register.h
+#define P_CPV1_HE_ADDR 		CBUS_REG_ADDR(CPV1_HE_ADDR) 	///../ucode/register.h
+#define CPV1_VS_ADDR 0x14a1 	///../ucode/register.h
+#define P_CPV1_VS_ADDR 		CBUS_REG_ADDR(CPV1_VS_ADDR) 	///../ucode/register.h
+#define CPV1_VE_ADDR 0x14a2 	///../ucode/register.h
+#define P_CPV1_VE_ADDR 		CBUS_REG_ADDR(CPV1_VE_ADDR) 	///../ucode/register.h
+#define CPV2_HS_ADDR 0x14a3 	///../ucode/register.h
+#define P_CPV2_HS_ADDR 		CBUS_REG_ADDR(CPV2_HS_ADDR) 	///../ucode/register.h
+#define CPV2_HE_ADDR 0x14a4 	///../ucode/register.h
+#define P_CPV2_HE_ADDR 		CBUS_REG_ADDR(CPV2_HE_ADDR) 	///../ucode/register.h
+#define CPV2_VS_ADDR 0x14a5 	///../ucode/register.h
+#define P_CPV2_VS_ADDR 		CBUS_REG_ADDR(CPV2_VS_ADDR) 	///../ucode/register.h
+#define CPV2_VE_ADDR 0x14a6 	///../ucode/register.h
+#define P_CPV2_VE_ADDR 		CBUS_REG_ADDR(CPV2_VE_ADDR) 	///../ucode/register.h
+#define STV1_HS_ADDR 0x14a7 	///../ucode/register.h
+#define P_STV1_HS_ADDR 		CBUS_REG_ADDR(STV1_HS_ADDR) 	///../ucode/register.h
+#define STV1_HE_ADDR 0x14a8 	///../ucode/register.h
+#define P_STV1_HE_ADDR 		CBUS_REG_ADDR(STV1_HE_ADDR) 	///../ucode/register.h
+#define STV1_VS_ADDR 0x14a9 	///../ucode/register.h
+#define P_STV1_VS_ADDR 		CBUS_REG_ADDR(STV1_VS_ADDR) 	///../ucode/register.h
+#define STV1_VE_ADDR 0x14aa 	///../ucode/register.h
+#define P_STV1_VE_ADDR 		CBUS_REG_ADDR(STV1_VE_ADDR) 	///../ucode/register.h
+#define STV2_HS_ADDR 0x14ab 	///../ucode/register.h
+#define P_STV2_HS_ADDR 		CBUS_REG_ADDR(STV2_HS_ADDR) 	///../ucode/register.h
+#define STV2_HE_ADDR 0x14ac 	///../ucode/register.h
+#define P_STV2_HE_ADDR 		CBUS_REG_ADDR(STV2_HE_ADDR) 	///../ucode/register.h
+#define STV2_VS_ADDR 0x14ad 	///../ucode/register.h
+#define P_STV2_VS_ADDR 		CBUS_REG_ADDR(STV2_VS_ADDR) 	///../ucode/register.h
+#define STV2_VE_ADDR 0x14ae 	///../ucode/register.h
+#define P_STV2_VE_ADDR 		CBUS_REG_ADDR(STV2_VE_ADDR) 	///../ucode/register.h
+#define OEV1_HS_ADDR 0x14af 	///../ucode/register.h
+#define P_OEV1_HS_ADDR 		CBUS_REG_ADDR(OEV1_HS_ADDR) 	///../ucode/register.h
+#define OEV1_HE_ADDR 0x14b0 	///../ucode/register.h
+#define P_OEV1_HE_ADDR 		CBUS_REG_ADDR(OEV1_HE_ADDR) 	///../ucode/register.h
+#define OEV1_VS_ADDR 0x14b1 	///../ucode/register.h
+#define P_OEV1_VS_ADDR 		CBUS_REG_ADDR(OEV1_VS_ADDR) 	///../ucode/register.h
+#define OEV1_VE_ADDR 0x14b2 	///../ucode/register.h
+#define P_OEV1_VE_ADDR 		CBUS_REG_ADDR(OEV1_VE_ADDR) 	///../ucode/register.h
+#define OEV2_HS_ADDR 0x14b3 	///../ucode/register.h
+#define P_OEV2_HS_ADDR 		CBUS_REG_ADDR(OEV2_HS_ADDR) 	///../ucode/register.h
+#define OEV2_HE_ADDR 0x14b4 	///../ucode/register.h
+#define P_OEV2_HE_ADDR 		CBUS_REG_ADDR(OEV2_HE_ADDR) 	///../ucode/register.h
+#define OEV2_VS_ADDR 0x14b5 	///../ucode/register.h
+#define P_OEV2_VS_ADDR 		CBUS_REG_ADDR(OEV2_VS_ADDR) 	///../ucode/register.h
+#define OEV2_VE_ADDR 0x14b6 	///../ucode/register.h
+#define P_OEV2_VE_ADDR 		CBUS_REG_ADDR(OEV2_VE_ADDR) 	///../ucode/register.h
+#define OEV3_HS_ADDR 0x14b7 	///../ucode/register.h
+#define P_OEV3_HS_ADDR 		CBUS_REG_ADDR(OEV3_HS_ADDR) 	///../ucode/register.h
+#define OEV3_HE_ADDR 0x14b8 	///../ucode/register.h
+#define P_OEV3_HE_ADDR 		CBUS_REG_ADDR(OEV3_HE_ADDR) 	///../ucode/register.h
+#define OEV3_VS_ADDR 0x14b9 	///../ucode/register.h
+#define P_OEV3_VS_ADDR 		CBUS_REG_ADDR(OEV3_VS_ADDR) 	///../ucode/register.h
+#define OEV3_VE_ADDR 0x14ba 	///../ucode/register.h
+#define P_OEV3_VE_ADDR 		CBUS_REG_ADDR(OEV3_VE_ADDR) 	///../ucode/register.h
+#define LCD_PWR_ADDR 0x14bb 	///../ucode/register.h
+#define P_LCD_PWR_ADDR 		CBUS_REG_ADDR(LCD_PWR_ADDR) 	///../ucode/register.h
+#define LCD_PWM0_LO_ADDR 0x14bc 	///../ucode/register.h
+#define P_LCD_PWM0_LO_ADDR 		CBUS_REG_ADDR(LCD_PWM0_LO_ADDR) 	///../ucode/register.h
+#define LCD_PWM0_HI_ADDR 0x14bd 	///../ucode/register.h
+#define P_LCD_PWM0_HI_ADDR 		CBUS_REG_ADDR(LCD_PWM0_HI_ADDR) 	///../ucode/register.h
+#define LCD_PWM1_LO_ADDR 0x14be 	///../ucode/register.h
+#define P_LCD_PWM1_LO_ADDR 		CBUS_REG_ADDR(LCD_PWM1_LO_ADDR) 	///../ucode/register.h
+#define LCD_PWM1_HI_ADDR 0x14bf 	///../ucode/register.h
+#define P_LCD_PWM1_HI_ADDR 		CBUS_REG_ADDR(LCD_PWM1_HI_ADDR) 	///../ucode/register.h
+#define INV_CNT_ADDR 0x14c0 	///../ucode/register.h
+#define P_INV_CNT_ADDR 		CBUS_REG_ADDR(INV_CNT_ADDR) 	///../ucode/register.h
+#define TCON_MISC_SEL_ADDR 0x14c1 	///../ucode/register.h
+#define P_TCON_MISC_SEL_ADDR 		CBUS_REG_ADDR(TCON_MISC_SEL_ADDR) 	///../ucode/register.h
+#define DUAL_PORT_CNTL_ADDR 0x14c2 	///../ucode/register.h
+#define P_DUAL_PORT_CNTL_ADDR 		CBUS_REG_ADDR(DUAL_PORT_CNTL_ADDR) 	///../ucode/register.h
+#define MLVDS_CONTROL 0x14c3 	///../ucode/register.h
+#define P_MLVDS_CONTROL 		CBUS_REG_ADDR(MLVDS_CONTROL) 	///../ucode/register.h
+#define MLVDS_RESET_PATTERN_HI 0x14c4 	///../ucode/register.h
+#define P_MLVDS_RESET_PATTERN_HI 		CBUS_REG_ADDR(MLVDS_RESET_PATTERN_HI) 	///../ucode/register.h
+#define MLVDS_RESET_PATTERN_LO 0x14c5 	///../ucode/register.h
+#define P_MLVDS_RESET_PATTERN_LO 		CBUS_REG_ADDR(MLVDS_RESET_PATTERN_LO) 	///../ucode/register.h
+#define MLVDS_RESET_PATTERN_EXT 0x14c6 	///../ucode/register.h
+#define P_MLVDS_RESET_PATTERN_EXT 		CBUS_REG_ADDR(MLVDS_RESET_PATTERN_EXT) 	///../ucode/register.h
+#define MLVDS_CONFIG_HI 0x14c7 	///../ucode/register.h
+#define P_MLVDS_CONFIG_HI 		CBUS_REG_ADDR(MLVDS_CONFIG_HI) 	///../ucode/register.h
+#define MLVDS_CONFIG_LO 0x14c8 	///../ucode/register.h
+#define P_MLVDS_CONFIG_LO 		CBUS_REG_ADDR(MLVDS_CONFIG_LO) 	///../ucode/register.h
+#define TCON_DOUBLE_CTL 0x14c9 	///../ucode/register.h
+#define P_TCON_DOUBLE_CTL 		CBUS_REG_ADDR(TCON_DOUBLE_CTL) 	///../ucode/register.h
+#define TCON_PATTERN_HI 0x14ca 	///../ucode/register.h
+#define P_TCON_PATTERN_HI 		CBUS_REG_ADDR(TCON_PATTERN_HI) 	///../ucode/register.h
+#define TCON_PATTERN_LO 0x14cb 	///../ucode/register.h
+#define P_TCON_PATTERN_LO 		CBUS_REG_ADDR(TCON_PATTERN_LO) 	///../ucode/register.h
+#define TCON_CONTROL_HI 0x14cc 	///../ucode/register.h
+#define P_TCON_CONTROL_HI 		CBUS_REG_ADDR(TCON_CONTROL_HI) 	///../ucode/register.h
+#define TCON_CONTROL_LO 0x14cd 	///../ucode/register.h
+#define P_TCON_CONTROL_LO 		CBUS_REG_ADDR(TCON_CONTROL_LO) 	///../ucode/register.h
+#define LVDS_BLANK_DATA_HI 0x14ce 	///../ucode/register.h
+#define P_LVDS_BLANK_DATA_HI 		CBUS_REG_ADDR(LVDS_BLANK_DATA_HI) 	///../ucode/register.h
+#define LVDS_BLANK_DATA_LO 0x14cf 	///../ucode/register.h
+#define P_LVDS_BLANK_DATA_LO 		CBUS_REG_ADDR(LVDS_BLANK_DATA_LO) 	///../ucode/register.h
+#define LVDS_PACK_CNTL_ADDR 0x14d0 	///../ucode/register.h
+#define P_LVDS_PACK_CNTL_ADDR 		CBUS_REG_ADDR(LVDS_PACK_CNTL_ADDR) 	///../ucode/register.h
+#define DE_HS_ADDR 0x14d1 	///../ucode/register.h
+#define P_DE_HS_ADDR 		CBUS_REG_ADDR(DE_HS_ADDR) 	///../ucode/register.h
+#define DE_HE_ADDR 0x14d2 	///../ucode/register.h
+#define P_DE_HE_ADDR 		CBUS_REG_ADDR(DE_HE_ADDR) 	///../ucode/register.h
+#define DE_VS_ADDR 0x14d3 	///../ucode/register.h
+#define P_DE_VS_ADDR 		CBUS_REG_ADDR(DE_VS_ADDR) 	///../ucode/register.h
+#define DE_VE_ADDR 0x14d4 	///../ucode/register.h
+#define P_DE_VE_ADDR 		CBUS_REG_ADDR(DE_VE_ADDR) 	///../ucode/register.h
+#define HSYNC_HS_ADDR 0x14d5 	///../ucode/register.h
+#define P_HSYNC_HS_ADDR 		CBUS_REG_ADDR(HSYNC_HS_ADDR) 	///../ucode/register.h
+#define HSYNC_HE_ADDR 0x14d6 	///../ucode/register.h
+#define P_HSYNC_HE_ADDR 		CBUS_REG_ADDR(HSYNC_HE_ADDR) 	///../ucode/register.h
+#define HSYNC_VS_ADDR 0x14d7 	///../ucode/register.h
+#define P_HSYNC_VS_ADDR 		CBUS_REG_ADDR(HSYNC_VS_ADDR) 	///../ucode/register.h
+#define HSYNC_VE_ADDR 0x14d8 	///../ucode/register.h
+#define P_HSYNC_VE_ADDR 		CBUS_REG_ADDR(HSYNC_VE_ADDR) 	///../ucode/register.h
+#define VSYNC_HS_ADDR 0x14d9 	///../ucode/register.h
+#define P_VSYNC_HS_ADDR 		CBUS_REG_ADDR(VSYNC_HS_ADDR) 	///../ucode/register.h
+#define VSYNC_HE_ADDR 0x14da 	///../ucode/register.h
+#define P_VSYNC_HE_ADDR 		CBUS_REG_ADDR(VSYNC_HE_ADDR) 	///../ucode/register.h
+#define VSYNC_VS_ADDR 0x14db 	///../ucode/register.h
+#define P_VSYNC_VS_ADDR 		CBUS_REG_ADDR(VSYNC_VS_ADDR) 	///../ucode/register.h
+#define VSYNC_VE_ADDR 0x14dc 	///../ucode/register.h
+#define P_VSYNC_VE_ADDR 		CBUS_REG_ADDR(VSYNC_VE_ADDR) 	///../ucode/register.h
+#define LCD_MCU_CTL 0x14dd 	///../ucode/register.h
+#define P_LCD_MCU_CTL 		CBUS_REG_ADDR(LCD_MCU_CTL) 	///../ucode/register.h
+#define LCD_MCU_DATA_0 0x14de 	///../ucode/register.h
+#define P_LCD_MCU_DATA_0 		CBUS_REG_ADDR(LCD_MCU_DATA_0) 	///../ucode/register.h
+#define LCD_MCU_DATA_1 0x14df 	///../ucode/register.h
+#define P_LCD_MCU_DATA_1 		CBUS_REG_ADDR(LCD_MCU_DATA_1) 	///../ucode/register.h
+#define LVDS_GEN_CNTL 0x14e0 	///../ucode/register.h
+#define P_LVDS_GEN_CNTL 		CBUS_REG_ADDR(LVDS_GEN_CNTL) 	///../ucode/register.h
+#define LVDS_PHY_CNTL0 0x14e1 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL0 		CBUS_REG_ADDR(LVDS_PHY_CNTL0) 	///../ucode/register.h
+#define LVDS_PHY_CNTL1 0x14e2 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL1 		CBUS_REG_ADDR(LVDS_PHY_CNTL1) 	///../ucode/register.h
+#define LVDS_PHY_CNTL2 0x14e3 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL2 		CBUS_REG_ADDR(LVDS_PHY_CNTL2) 	///../ucode/register.h
+#define LVDS_PHY_CNTL3 0x14e4 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL3 		CBUS_REG_ADDR(LVDS_PHY_CNTL3) 	///../ucode/register.h
+#define LVDS_PHY_CNTL4 0x14e5 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL4 		CBUS_REG_ADDR(LVDS_PHY_CNTL4) 	///../ucode/register.h
+#define LVDS_PHY_CNTL5 0x14e6 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL5 		CBUS_REG_ADDR(LVDS_PHY_CNTL5) 	///../ucode/register.h
+#define LVDS_SRG_TEST 0x14e8 	///../ucode/register.h
+#define P_LVDS_SRG_TEST 		CBUS_REG_ADDR(LVDS_SRG_TEST) 	///../ucode/register.h
+#define LVDS_BIST_MUX0 0x14e9 	///../ucode/register.h
+#define P_LVDS_BIST_MUX0 		CBUS_REG_ADDR(LVDS_BIST_MUX0) 	///../ucode/register.h
+#define LVDS_BIST_MUX1 0x14ea 	///../ucode/register.h
+#define P_LVDS_BIST_MUX1 		CBUS_REG_ADDR(LVDS_BIST_MUX1) 	///../ucode/register.h
+#define LVDS_BIST_FIXED0 0x14eb 	///../ucode/register.h
+#define P_LVDS_BIST_FIXED0 		CBUS_REG_ADDR(LVDS_BIST_FIXED0) 	///../ucode/register.h
+#define LVDS_BIST_FIXED1 0x14ec 	///../ucode/register.h
+#define P_LVDS_BIST_FIXED1 		CBUS_REG_ADDR(LVDS_BIST_FIXED1) 	///../ucode/register.h
+#define LVDS_BIST_CNTL0 0x14ed 	///../ucode/register.h
+#define P_LVDS_BIST_CNTL0 		CBUS_REG_ADDR(LVDS_BIST_CNTL0) 	///../ucode/register.h
+#define LVDS_CLKB_CLKA 0x14ee 	///../ucode/register.h
+#define P_LVDS_CLKB_CLKA 		CBUS_REG_ADDR(LVDS_CLKB_CLKA) 	///../ucode/register.h
+#define LVDS_PHY_CLK_CNTL 0x14ef 	///../ucode/register.h
+#define P_LVDS_PHY_CLK_CNTL 		CBUS_REG_ADDR(LVDS_PHY_CLK_CNTL) 	///../ucode/register.h
+#define LVDS_SER_EN 0x14f0 	///../ucode/register.h
+#define P_LVDS_SER_EN 		CBUS_REG_ADDR(LVDS_SER_EN) 	///../ucode/register.h
+#define LVDS_PHY_CNTL6 0x14f1 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL6 		CBUS_REG_ADDR(LVDS_PHY_CNTL6) 	///../ucode/register.h
+#define LVDS_PHY_CNTL7 0x14f2 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL7 		CBUS_REG_ADDR(LVDS_PHY_CNTL7) 	///../ucode/register.h
+#define LVDS_PHY_CNTL8 0x14f3 	///../ucode/register.h
+#define P_LVDS_PHY_CNTL8 		CBUS_REG_ADDR(LVDS_PHY_CNTL8) 	///../ucode/register.h
+#define MLVDS_CLK_CTL0_HI 0x14f4 	///../ucode/register.h
+#define P_MLVDS_CLK_CTL0_HI 		CBUS_REG_ADDR(MLVDS_CLK_CTL0_HI) 	///../ucode/register.h
+#define MLVDS_CLK_CTL0_LO 0x14f5 	///../ucode/register.h
+#define P_MLVDS_CLK_CTL0_LO 		CBUS_REG_ADDR(MLVDS_CLK_CTL0_LO) 	///../ucode/register.h
+#define MLVDS_DUAL_GATE_WR_START 0x14f6 	///../ucode/register.h
+#define P_MLVDS_DUAL_GATE_WR_START 		CBUS_REG_ADDR(MLVDS_DUAL_GATE_WR_START) 	///../ucode/register.h
+#define MLVDS_DUAL_GATE_WR_END 0x14f7 	///../ucode/register.h
+#define P_MLVDS_DUAL_GATE_WR_END 		CBUS_REG_ADDR(MLVDS_DUAL_GATE_WR_END) 	///../ucode/register.h
+#define MLVDS_DUAL_GATE_RD_START 0x14f8 	///../ucode/register.h
+#define P_MLVDS_DUAL_GATE_RD_START 		CBUS_REG_ADDR(MLVDS_DUAL_GATE_RD_START) 	///../ucode/register.h
+#define MLVDS_DUAL_GATE_RD_END 0x14f9 	///../ucode/register.h
+#define P_MLVDS_DUAL_GATE_RD_END 		CBUS_REG_ADDR(MLVDS_DUAL_GATE_RD_END) 	///../ucode/register.h
+#define MLVDS_SECOND_RESET_CTL 0x14fa 	///../ucode/register.h
+#define P_MLVDS_SECOND_RESET_CTL 		CBUS_REG_ADDR(MLVDS_SECOND_RESET_CTL) 	///../ucode/register.h
+#define MLVDS_DUAL_GATE_CTL_HI 0x14fb 	///../ucode/register.h
+#define P_MLVDS_DUAL_GATE_CTL_HI 		CBUS_REG_ADDR(MLVDS_DUAL_GATE_CTL_HI) 	///../ucode/register.h
+#define MLVDS_DUAL_GATE_CTL_LO 0x14fc 	///../ucode/register.h
+#define P_MLVDS_DUAL_GATE_CTL_LO 		CBUS_REG_ADDR(MLVDS_DUAL_GATE_CTL_LO) 	///../ucode/register.h
+#define MLVDS_RESET_CONFIG_HI 0x14fd 	///../ucode/register.h
+#define P_MLVDS_RESET_CONFIG_HI 		CBUS_REG_ADDR(MLVDS_RESET_CONFIG_HI) 	///../ucode/register.h
+#define MLVDS_RESET_CONFIG_LO 0x14fe 	///../ucode/register.h
+#define P_MLVDS_RESET_CONFIG_LO 		CBUS_REG_ADDR(MLVDS_RESET_CONFIG_LO) 	///../ucode/register.h
+#define VPU_OSD1_MMC_CTRL 0x2701 	///../ucode/register.h
+#define P_VPU_OSD1_MMC_CTRL 		CBUS_REG_ADDR(VPU_OSD1_MMC_CTRL) 	///../ucode/register.h
+#define VPU_OSD2_MMC_CTRL 0x2702 	///../ucode/register.h
+#define P_VPU_OSD2_MMC_CTRL 		CBUS_REG_ADDR(VPU_OSD2_MMC_CTRL) 	///../ucode/register.h
+#define VPU_VD1_MMC_CTRL 0x2703 	///../ucode/register.h
+#define P_VPU_VD1_MMC_CTRL 		CBUS_REG_ADDR(VPU_VD1_MMC_CTRL) 	///../ucode/register.h
+#define VPU_VD2_MMC_CTRL 0x2704 	///../ucode/register.h
+#define P_VPU_VD2_MMC_CTRL 		CBUS_REG_ADDR(VPU_VD2_MMC_CTRL) 	///../ucode/register.h
+#define VPU_DI_IF1_MMC_CTRL 0x2705 	///../ucode/register.h
+#define P_VPU_DI_IF1_MMC_CTRL 		CBUS_REG_ADDR(VPU_DI_IF1_MMC_CTRL) 	///../ucode/register.h
+#define VPU_DI_MEM_MMC_CTRL 0x2706 	///../ucode/register.h
+#define P_VPU_DI_MEM_MMC_CTRL 		CBUS_REG_ADDR(VPU_DI_MEM_MMC_CTRL) 	///../ucode/register.h
+#define VPU_DI_INP_MMC_CTRL 0x2707 	///../ucode/register.h
+#define P_VPU_DI_INP_MMC_CTRL 		CBUS_REG_ADDR(VPU_DI_INP_MMC_CTRL) 	///../ucode/register.h
+#define VPU_DI_MTNRD_MMC_CTRL 0x2708 	///../ucode/register.h
+#define P_VPU_DI_MTNRD_MMC_CTRL 		CBUS_REG_ADDR(VPU_DI_MTNRD_MMC_CTRL) 	///../ucode/register.h
+#define VPU_DI_CHAN2_MMC_CTRL 0x2709 	///../ucode/register.h
+#define P_VPU_DI_CHAN2_MMC_CTRL 		CBUS_REG_ADDR(VPU_DI_CHAN2_MMC_CTRL) 	///../ucode/register.h
+#define VPU_DI_MTNWR_MMC_CTRL 0x270a 	///../ucode/register.h
+#define P_VPU_DI_MTNWR_MMC_CTRL 		CBUS_REG_ADDR(VPU_DI_MTNWR_MMC_CTRL) 	///../ucode/register.h
+#define VPU_DI_NRWR_MMC_CTRL 0x270b 	///../ucode/register.h
+#define P_VPU_DI_NRWR_MMC_CTRL 		CBUS_REG_ADDR(VPU_DI_NRWR_MMC_CTRL) 	///../ucode/register.h
+#define VPU_DI_DIWR_MMC_CTRL 0x270c 	///../ucode/register.h
+#define P_VPU_DI_DIWR_MMC_CTRL 		CBUS_REG_ADDR(VPU_DI_DIWR_MMC_CTRL) 	///../ucode/register.h
+#define VPU_VDIN0_MMC_CTRL 0x270d 	///../ucode/register.h
+#define P_VPU_VDIN0_MMC_CTRL 		CBUS_REG_ADDR(VPU_VDIN0_MMC_CTRL) 	///../ucode/register.h
+#define VPU_VDIN1_MMC_CTRL 0x270e 	///../ucode/register.h
+#define P_VPU_VDIN1_MMC_CTRL 		CBUS_REG_ADDR(VPU_VDIN1_MMC_CTRL) 	///../ucode/register.h
+#define VPU_BT656_MMC_CTRL 0x270f 	///../ucode/register.h
+#define P_VPU_BT656_MMC_CTRL 		CBUS_REG_ADDR(VPU_BT656_MMC_CTRL) 	///../ucode/register.h
+#define VPU_TVD3D_MMC_CTRL 0x2710 	///../ucode/register.h
+#define P_VPU_TVD3D_MMC_CTRL 		CBUS_REG_ADDR(VPU_TVD3D_MMC_CTRL) 	///../ucode/register.h
+#define VPU_TVDVBI_MMC_CTRL 0x2711 	///../ucode/register.h
+#define P_VPU_TVDVBI_MMC_CTRL 		CBUS_REG_ADDR(VPU_TVDVBI_MMC_CTRL) 	///../ucode/register.h
+#define VPU_TVDVBI_VSLATCH_ADDR 0x2712 	///../ucode/register.h
+#define P_VPU_TVDVBI_VSLATCH_ADDR 		CBUS_REG_ADDR(VPU_TVDVBI_VSLATCH_ADDR) 	///../ucode/register.h
+#define VPU_TVDVBI_WRRSP_ADDR 0x2713 	///../ucode/register.h
+#define P_VPU_TVDVBI_WRRSP_ADDR 		CBUS_REG_ADDR(VPU_TVDVBI_WRRSP_ADDR) 	///../ucode/register.h
+#define VPU_VDIN_PRE_ARB_CTRL 0x2714 	///../ucode/register.h
+#define P_VPU_VDIN_PRE_ARB_CTRL 		CBUS_REG_ADDR(VPU_VDIN_PRE_ARB_CTRL) 	///../ucode/register.h
+#define VPU_VDISP_PRE_ARB_CTRL 0x2715 	///../ucode/register.h
+#define P_VPU_VDISP_PRE_ARB_CTRL 		CBUS_REG_ADDR(VPU_VDISP_PRE_ARB_CTRL) 	///../ucode/register.h
+#define VPU_VPUARB2_PRE_ARB_CTRL 0x2716 	///../ucode/register.h
+#define P_VPU_VPUARB2_PRE_ARB_CTRL 		CBUS_REG_ADDR(VPU_VPUARB2_PRE_ARB_CTRL) 	///../ucode/register.h
+#define VPU_OSD3_MMC_CTRL 0x2717 	///../ucode/register.h
+#define P_VPU_OSD3_MMC_CTRL 		CBUS_REG_ADDR(VPU_OSD3_MMC_CTRL) 	///../ucode/register.h
+#define VPU_OSD4_MMC_CTRL 0x2718 	///../ucode/register.h
+#define P_VPU_OSD4_MMC_CTRL 		CBUS_REG_ADDR(VPU_OSD4_MMC_CTRL) 	///../ucode/register.h
+#define VPU_VD3_MMC_CTRL 0x2719 	///../ucode/register.h
+#define P_VPU_VD3_MMC_CTRL 		CBUS_REG_ADDR(VPU_VD3_MMC_CTRL) 	///../ucode/register.h
+#define VPU_VIU_VENC_MUX_CTRL 0x271a 	///../ucode/register.h
+#define P_VPU_VIU_VENC_MUX_CTRL 		CBUS_REG_ADDR(VPU_VIU_VENC_MUX_CTRL) 	///../ucode/register.h
+#define VPU_HDMI_SETTING 0x271b 	///../ucode/register.h
+#define P_VPU_HDMI_SETTING 		CBUS_REG_ADDR(VPU_HDMI_SETTING) 	///../ucode/register.h
+#define ENCI_INFO_READ 0x271c 	///../ucode/register.h
+#define P_ENCI_INFO_READ 		CBUS_REG_ADDR(ENCI_INFO_READ) 	///../ucode/register.h
+#define ENCP_INFO_READ 0x271d 	///../ucode/register.h
+#define P_ENCP_INFO_READ 		CBUS_REG_ADDR(ENCP_INFO_READ) 	///../ucode/register.h
+#define ENCT_INFO_READ 0x271e 	///../ucode/register.h
+#define P_ENCT_INFO_READ 		CBUS_REG_ADDR(ENCT_INFO_READ) 	///../ucode/register.h
+#define ENCL_INFO_READ 0x271f 	///../ucode/register.h
+#define P_ENCL_INFO_READ 		CBUS_REG_ADDR(ENCL_INFO_READ) 	///../ucode/register.h
+#define VPU_SW_RESET 0x2720 	///../ucode/register.h
+#define P_VPU_SW_RESET 		CBUS_REG_ADDR(VPU_SW_RESET) 	///../ucode/register.h
+#define VPU_D2D3_MMC_CTRL 0x2721 	///../ucode/register.h
+#define P_VPU_D2D3_MMC_CTRL 		CBUS_REG_ADDR(VPU_D2D3_MMC_CTRL) 	///../ucode/register.h
+#define VPU_CONT_MMC_CTRL 0x2722 	///../ucode/register.h
+#define P_VPU_CONT_MMC_CTRL 		CBUS_REG_ADDR(VPU_CONT_MMC_CTRL) 	///../ucode/register.h
+#define VPU_VPU_PWM_V0 0x2730 	///../ucode/register.h
+#define P_VPU_VPU_PWM_V0 		CBUS_REG_ADDR(VPU_VPU_PWM_V0) 	///../ucode/register.h
+#define VPU_VPU_PWM_V1 0x2731 	///../ucode/register.h
+#define P_VPU_VPU_PWM_V1 		CBUS_REG_ADDR(VPU_VPU_PWM_V1) 	///../ucode/register.h
+#define VPU_VPU_PWM_V2 0x2732 	///../ucode/register.h
+#define P_VPU_VPU_PWM_V2 		CBUS_REG_ADDR(VPU_VPU_PWM_V2) 	///../ucode/register.h
+#define VPU_VPU_PWM_V3 0x2733 	///../ucode/register.h
+#define P_VPU_VPU_PWM_V3 		CBUS_REG_ADDR(VPU_VPU_PWM_V3) 	///../ucode/register.h
+#define VPU_VPU_PWM_H0 0x2734 	///../ucode/register.h
+#define P_VPU_VPU_PWM_H0 		CBUS_REG_ADDR(VPU_VPU_PWM_H0) 	///../ucode/register.h
+#define VPU_VPU_PWM_H1 0x2735 	///../ucode/register.h
+#define P_VPU_VPU_PWM_H1 		CBUS_REG_ADDR(VPU_VPU_PWM_H1) 	///../ucode/register.h
+#define VPU_VPU_PWM_H2 0x2736 	///../ucode/register.h
+#define P_VPU_VPU_PWM_H2 		CBUS_REG_ADDR(VPU_VPU_PWM_H2) 	///../ucode/register.h
+#define VPU_VPU_PWM_H3 0x2737 	///../ucode/register.h
+#define P_VPU_VPU_PWM_H3 		CBUS_REG_ADDR(VPU_VPU_PWM_H3) 	///../ucode/register.h
+#define D2D3_GLB_CTRL 0x2b00 	///../ucode/register.h
+#define P_D2D3_GLB_CTRL 		CBUS_REG_ADDR(D2D3_GLB_CTRL) 	///../ucode/register.h
+#define D2D3_DPG_INPIC_SIZE 0x2b01 	///../ucode/register.h
+#define P_D2D3_DPG_INPIC_SIZE 		CBUS_REG_ADDR(D2D3_DPG_INPIC_SIZE) 	///../ucode/register.h
+#define D2D3_DBR_OUTPIC_SIZE 0x2b02 	///../ucode/register.h
+#define P_D2D3_DBR_OUTPIC_SIZE 		CBUS_REG_ADDR(D2D3_DBR_OUTPIC_SIZE) 	///../ucode/register.h
+#define D2D3_DGEN_WIN_HOR 0x2b03 	///../ucode/register.h
+#define P_D2D3_DGEN_WIN_HOR 		CBUS_REG_ADDR(D2D3_DGEN_WIN_HOR) 	///../ucode/register.h
+#define D2D3_DGEN_WIN_VER 0x2b04 	///../ucode/register.h
+#define P_D2D3_DGEN_WIN_VER 		CBUS_REG_ADDR(D2D3_DGEN_WIN_VER) 	///../ucode/register.h
+#define D2D3_PRE_SCD_H 0x2b05 	///../ucode/register.h
+#define P_D2D3_PRE_SCD_H 		CBUS_REG_ADDR(D2D3_PRE_SCD_H) 	///../ucode/register.h
+#define D2D3_SCALER_CTRL 0x2b06 	///../ucode/register.h
+#define P_D2D3_SCALER_CTRL 		CBUS_REG_ADDR(D2D3_SCALER_CTRL) 	///../ucode/register.h
+#define D2D3_CG_THRESHOLD_1 0x2b07 	///../ucode/register.h
+#define P_D2D3_CG_THRESHOLD_1 		CBUS_REG_ADDR(D2D3_CG_THRESHOLD_1) 	///../ucode/register.h
+#define D2D3_CG_THRESHOLD_2 0x2b08 	///../ucode/register.h
+#define P_D2D3_CG_THRESHOLD_2 		CBUS_REG_ADDR(D2D3_CG_THRESHOLD_2) 	///../ucode/register.h
+#define D2D3_CG_PARAM_1 0x2b09 	///../ucode/register.h
+#define P_D2D3_CG_PARAM_1 		CBUS_REG_ADDR(D2D3_CG_PARAM_1) 	///../ucode/register.h
+#define D2D3_CG_PARAM_2 0x2b0a 	///../ucode/register.h
+#define P_D2D3_CG_PARAM_2 		CBUS_REG_ADDR(D2D3_CG_PARAM_2) 	///../ucode/register.h
+#define D2D3_PRE_SCD_V 0x2b0b 	///../ucode/register.h
+#define P_D2D3_PRE_SCD_V 		CBUS_REG_ADDR(D2D3_PRE_SCD_V) 	///../ucode/register.h
+#define D2D3_D2P_PARAM_1 0x2b0c 	///../ucode/register.h
+#define P_D2D3_D2P_PARAM_1 		CBUS_REG_ADDR(D2D3_D2P_PARAM_1) 	///../ucode/register.h
+#define D2D3_D2P_PARAM_2 0x2b0d 	///../ucode/register.h
+#define P_D2D3_D2P_PARAM_2 		CBUS_REG_ADDR(D2D3_D2P_PARAM_2) 	///../ucode/register.h
+#define D2D3_D2P_PARAM_3 0x2b0e 	///../ucode/register.h
+#define P_D2D3_D2P_PARAM_3 		CBUS_REG_ADDR(D2D3_D2P_PARAM_3) 	///../ucode/register.h
+#define D2D3_SCU18_STEP 0x2b0f 	///../ucode/register.h
+#define P_D2D3_SCU18_STEP 		CBUS_REG_ADDR(D2D3_SCU18_STEP) 	///../ucode/register.h
+#define D2D3_DPF_LPF_CTRL 0x2b10 	///../ucode/register.h
+#define P_D2D3_DPF_LPF_CTRL 		CBUS_REG_ADDR(D2D3_DPF_LPF_CTRL) 	///../ucode/register.h
+#define D2D3_DBLD_CG_PARAM 0x2b11 	///../ucode/register.h
+#define P_D2D3_DBLD_CG_PARAM 		CBUS_REG_ADDR(D2D3_DBLD_CG_PARAM) 	///../ucode/register.h
+#define D2D3_DBLD_MG_PARAM 0x2b12 	///../ucode/register.h
+#define P_D2D3_DBLD_MG_PARAM 		CBUS_REG_ADDR(D2D3_DBLD_MG_PARAM) 	///../ucode/register.h
+#define D2D3_DBLD_LG_PARAM 0x2b13 	///../ucode/register.h
+#define P_D2D3_DBLD_LG_PARAM 		CBUS_REG_ADDR(D2D3_DBLD_LG_PARAM) 	///../ucode/register.h
+#define D2D3_DBLD_LPF_HCOEFF 0x2b14 	///../ucode/register.h
+#define P_D2D3_DBLD_LPF_HCOEFF 		CBUS_REG_ADDR(D2D3_DBLD_LPF_HCOEFF) 	///../ucode/register.h
+#define D2D3_DBLD_LPF_VCOEFF 0x2b15 	///../ucode/register.h
+#define P_D2D3_DBLD_LPF_VCOEFF 		CBUS_REG_ADDR(D2D3_DBLD_LPF_VCOEFF) 	///../ucode/register.h
+#define D2D3_DBLD_PATH_CTRL 0x2b16 	///../ucode/register.h
+#define P_D2D3_DBLD_PATH_CTRL 		CBUS_REG_ADDR(D2D3_DBLD_PATH_CTRL) 	///../ucode/register.h
+#define D2D3_SCU18_INPIC_SIZE 0x2b17 	///../ucode/register.h
+#define P_D2D3_SCU18_INPIC_SIZE 		CBUS_REG_ADDR(D2D3_SCU18_INPIC_SIZE) 	///../ucode/register.h
+#define D2D3_MBDG_CTRL 0x2b18 	///../ucode/register.h
+#define P_D2D3_MBDG_CTRL 		CBUS_REG_ADDR(D2D3_MBDG_CTRL) 	///../ucode/register.h
+#define D2D3_MBDG_PARAM_0 0x2b19 	///../ucode/register.h
+#define P_D2D3_MBDG_PARAM_0 		CBUS_REG_ADDR(D2D3_MBDG_PARAM_0) 	///../ucode/register.h
+#define D2D3_MBDG_PARAM_1 0x2b1a 	///../ucode/register.h
+#define P_D2D3_MBDG_PARAM_1 		CBUS_REG_ADDR(D2D3_MBDG_PARAM_1) 	///../ucode/register.h
+#define D2D3_MBDG_PARAM_2 0x2b1b 	///../ucode/register.h
+#define P_D2D3_MBDG_PARAM_2 		CBUS_REG_ADDR(D2D3_MBDG_PARAM_2) 	///../ucode/register.h
+#define D2D3_MBDG_PARAM_3 0x2b1c 	///../ucode/register.h
+#define P_D2D3_MBDG_PARAM_3 		CBUS_REG_ADDR(D2D3_MBDG_PARAM_3) 	///../ucode/register.h
+#define D2D3_MBDG_PARAM_4 0x2b1d 	///../ucode/register.h
+#define P_D2D3_MBDG_PARAM_4 		CBUS_REG_ADDR(D2D3_MBDG_PARAM_4) 	///../ucode/register.h
+#define D2D3_MBDG_PARAM_5 0x2b1e 	///../ucode/register.h
+#define P_D2D3_MBDG_PARAM_5 		CBUS_REG_ADDR(D2D3_MBDG_PARAM_5) 	///../ucode/register.h
+#define D2D3_MBDG_PARAM_6 0x2b1f 	///../ucode/register.h
+#define P_D2D3_MBDG_PARAM_6 		CBUS_REG_ADDR(D2D3_MBDG_PARAM_6) 	///../ucode/register.h
+#define D2D3_MBDG_PARAM_7 0x2b20 	///../ucode/register.h
+#define P_D2D3_MBDG_PARAM_7 		CBUS_REG_ADDR(D2D3_MBDG_PARAM_7) 	///../ucode/register.h
+#define D2D3_DBG_CTRL 0x2b23 	///../ucode/register.h
+#define P_D2D3_DBG_CTRL 		CBUS_REG_ADDR(D2D3_DBG_CTRL) 	///../ucode/register.h
+#define D2D3_DWMIF_CTRL 0x2b24 	///../ucode/register.h
+#define P_D2D3_DWMIF_CTRL 		CBUS_REG_ADDR(D2D3_DWMIF_CTRL) 	///../ucode/register.h
+#define D2D3_DWMIF_HPOS 0x2b25 	///../ucode/register.h
+#define P_D2D3_DWMIF_HPOS 		CBUS_REG_ADDR(D2D3_DWMIF_HPOS) 	///../ucode/register.h
+#define D2D3_DWMIF_VPOS 0x2b26 	///../ucode/register.h
+#define P_D2D3_DWMIF_VPOS 		CBUS_REG_ADDR(D2D3_DWMIF_VPOS) 	///../ucode/register.h
+#define D2D3_DWMIF_SIZE 0x2b27 	///../ucode/register.h
+#define P_D2D3_DWMIF_SIZE 		CBUS_REG_ADDR(D2D3_DWMIF_SIZE) 	///../ucode/register.h
+#define D2D3_DRMIF_CTRL 0x2b28 	///../ucode/register.h
+#define P_D2D3_DRMIF_CTRL 		CBUS_REG_ADDR(D2D3_DRMIF_CTRL) 	///../ucode/register.h
+#define D2D3_DRMIF_HPOS 0x2b29 	///../ucode/register.h
+#define P_D2D3_DRMIF_HPOS 		CBUS_REG_ADDR(D2D3_DRMIF_HPOS) 	///../ucode/register.h
+#define D2D3_DRMIF_VPOS 0x2b2a 	///../ucode/register.h
+#define P_D2D3_DRMIF_VPOS 		CBUS_REG_ADDR(D2D3_DRMIF_VPOS) 	///../ucode/register.h
+#define D2D3_DBR_DDD_CTRL 0x2b2c 	///../ucode/register.h
+#define P_D2D3_DBR_DDD_CTRL 		CBUS_REG_ADDR(D2D3_DBR_DDD_CTRL) 	///../ucode/register.h
+#define D2D3_DBR_DDD_DBG 0x2b2d 	///../ucode/register.h
+#define P_D2D3_DBR_DDD_DBG 		CBUS_REG_ADDR(D2D3_DBR_DDD_DBG) 	///../ucode/register.h
+#define D2D3_DBR_LRDMX_CTRL 0x2b2f 	///../ucode/register.h
+#define P_D2D3_DBR_LRDMX_CTRL 		CBUS_REG_ADDR(D2D3_DBR_LRDMX_CTRL) 	///../ucode/register.h
+#define D2D3_CBDG_STATUS_1 0x2b30 	///../ucode/register.h
+#define P_D2D3_CBDG_STATUS_1 		CBUS_REG_ADDR(D2D3_CBDG_STATUS_1) 	///../ucode/register.h
+#define D2D3_MBDG_STATUS_1 0x2b31 	///../ucode/register.h
+#define P_D2D3_MBDG_STATUS_1 		CBUS_REG_ADDR(D2D3_MBDG_STATUS_1) 	///../ucode/register.h
+#define D2D3_MBDG_STATUS_2 0x2b32 	///../ucode/register.h
+#define P_D2D3_MBDG_STATUS_2 		CBUS_REG_ADDR(D2D3_MBDG_STATUS_2) 	///../ucode/register.h
+#define D2D3_MBDG_STATUS_3 0x2b33 	///../ucode/register.h
+#define P_D2D3_MBDG_STATUS_3 		CBUS_REG_ADDR(D2D3_MBDG_STATUS_3) 	///../ucode/register.h
+#define D2D3_MBDG_STATUS_4 0x2b34 	///../ucode/register.h
+#define P_D2D3_MBDG_STATUS_4 		CBUS_REG_ADDR(D2D3_MBDG_STATUS_4) 	///../ucode/register.h
+#define D2D3_MBDG_STATUS_5 0x2b35 	///../ucode/register.h
+#define P_D2D3_MBDG_STATUS_5 		CBUS_REG_ADDR(D2D3_MBDG_STATUS_5) 	///../ucode/register.h
+#define D2D3_MBDG_STATUS_6 0x2b36 	///../ucode/register.h
+#define P_D2D3_MBDG_STATUS_6 		CBUS_REG_ADDR(D2D3_MBDG_STATUS_6) 	///../ucode/register.h
+#define D2D3_MBDG_STATUS_7 0x2b37 	///../ucode/register.h
+#define P_D2D3_MBDG_STATUS_7 		CBUS_REG_ADDR(D2D3_MBDG_STATUS_7) 	///../ucode/register.h
+#define D2D3_DBG_STATUS_1 0x2b38 	///../ucode/register.h
+#define P_D2D3_DBG_STATUS_1 		CBUS_REG_ADDR(D2D3_DBG_STATUS_1) 	///../ucode/register.h
+#define D2D3_DBG_STATUS_2 0x2b39 	///../ucode/register.h
+#define P_D2D3_DBG_STATUS_2 		CBUS_REG_ADDR(D2D3_DBG_STATUS_2) 	///../ucode/register.h
+#define D2D3_DRMIF_STATUS 0x2b3a 	///../ucode/register.h
+#define P_D2D3_DRMIF_STATUS 		CBUS_REG_ADDR(D2D3_DRMIF_STATUS) 	///../ucode/register.h
+#define D2D3_DWMIF_STATUS 0x2b3b 	///../ucode/register.h
+#define P_D2D3_DWMIF_STATUS 		CBUS_REG_ADDR(D2D3_DWMIF_STATUS) 	///../ucode/register.h
+#define D2D3_CBDG_STATUS_2 0x2b3c 	///../ucode/register.h
+#define P_D2D3_CBDG_STATUS_2 		CBUS_REG_ADDR(D2D3_CBDG_STATUS_2) 	///../ucode/register.h
+#define D2D3_DBLD_STATUS 0x2b3d 	///../ucode/register.h
+#define P_D2D3_DBLD_STATUS 		CBUS_REG_ADDR(D2D3_DBLD_STATUS) 	///../ucode/register.h
+#define D2D3_RESEV_STATUS1 0x2b3e 	///../ucode/register.h
+#define P_D2D3_RESEV_STATUS1 		CBUS_REG_ADDR(D2D3_RESEV_STATUS1) 	///../ucode/register.h
+#define D2D3_RESEV_STATUS2 0x2b3f 	///../ucode/register.h
+#define P_D2D3_RESEV_STATUS2 		CBUS_REG_ADDR(D2D3_RESEV_STATUS2) 	///../ucode/register.h
+#define AUDIO_COP_CTL2 0x2f01 	///../ucode/register.h
+#define P_AUDIO_COP_CTL2 		CBUS_REG_ADDR(AUDIO_COP_CTL2) 	///../ucode/register.h
+#define OPERAND_M_CTL 0x2f02 	///../ucode/register.h
+#define P_OPERAND_M_CTL 		CBUS_REG_ADDR(OPERAND_M_CTL) 	///../ucode/register.h
+#define OPERAND1_ADDR 0x2f03 	///../ucode/register.h
+#define P_OPERAND1_ADDR 		CBUS_REG_ADDR(OPERAND1_ADDR) 	///../ucode/register.h
+#define OPERAND2_ADDR 0x2f04 	///../ucode/register.h
+#define P_OPERAND2_ADDR 		CBUS_REG_ADDR(OPERAND2_ADDR) 	///../ucode/register.h
+#define RESULT_M_CTL 0x2f05 	///../ucode/register.h
+#define P_RESULT_M_CTL 		CBUS_REG_ADDR(RESULT_M_CTL) 	///../ucode/register.h
+#define RESULT1_ADDR 0x2f06 	///../ucode/register.h
+#define P_RESULT1_ADDR 		CBUS_REG_ADDR(RESULT1_ADDR) 	///../ucode/register.h
+#define RESULT2_ADDR 0x2f07 	///../ucode/register.h
+#define P_RESULT2_ADDR 		CBUS_REG_ADDR(RESULT2_ADDR) 	///../ucode/register.h
+#define ADD_SHFT_CTL 0x2f08 	///../ucode/register.h
+#define P_ADD_SHFT_CTL 		CBUS_REG_ADDR(ADD_SHFT_CTL) 	///../ucode/register.h
+#define OPERAND_ONE_H 0x2f09 	///../ucode/register.h
+#define P_OPERAND_ONE_H 		CBUS_REG_ADDR(OPERAND_ONE_H) 	///../ucode/register.h
+#define OPERAND_ONE_L 0x2f0a 	///../ucode/register.h
+#define P_OPERAND_ONE_L 		CBUS_REG_ADDR(OPERAND_ONE_L) 	///../ucode/register.h
+#define OPERAND_TWO_H 0x2f0b 	///../ucode/register.h
+#define P_OPERAND_TWO_H 		CBUS_REG_ADDR(OPERAND_TWO_H) 	///../ucode/register.h
+#define OPERAND_TWO_L 0x2f0c 	///../ucode/register.h
+#define P_OPERAND_TWO_L 		CBUS_REG_ADDR(OPERAND_TWO_L) 	///../ucode/register.h
+#define RESULT_H 0x2f0d 	///../ucode/register.h
+#define P_RESULT_H 		CBUS_REG_ADDR(RESULT_H) 	///../ucode/register.h
+#define RESULT_M 0x2f0e 	///../ucode/register.h
+#define P_RESULT_M 		CBUS_REG_ADDR(RESULT_M) 	///../ucode/register.h
+#define RESULT_L 0x2f0f 	///../ucode/register.h
+#define P_RESULT_L 		CBUS_REG_ADDR(RESULT_L) 	///../ucode/register.h
+#define WMEM_R_PTR 0x2f10 	///../ucode/register.h
+#define P_WMEM_R_PTR 		CBUS_REG_ADDR(WMEM_R_PTR) 	///../ucode/register.h
+#define WMEM_W_PTR 0x2f11 	///../ucode/register.h
+#define P_WMEM_W_PTR 		CBUS_REG_ADDR(WMEM_W_PTR) 	///../ucode/register.h
+#define AUDIO_LAYER 0x2f20 	///../ucode/register.h
+#define P_AUDIO_LAYER 		CBUS_REG_ADDR(AUDIO_LAYER) 	///../ucode/register.h
+#define AC3_DECODING 0x2f21 	///../ucode/register.h
+#define P_AC3_DECODING 		CBUS_REG_ADDR(AC3_DECODING) 	///../ucode/register.h
+#define AC3_DYNAMIC 0x2f22 	///../ucode/register.h
+#define P_AC3_DYNAMIC 		CBUS_REG_ADDR(AC3_DYNAMIC) 	///../ucode/register.h
+#define AC3_MELODY 0x2f23 	///../ucode/register.h
+#define P_AC3_MELODY 		CBUS_REG_ADDR(AC3_MELODY) 	///../ucode/register.h
+#define AC3_VOCAL 0x2f24 	///../ucode/register.h
+#define P_AC3_VOCAL 		CBUS_REG_ADDR(AC3_VOCAL) 	///../ucode/register.h
+#define ASSIST_AMR_SCRATCH0 0x1f4f 	///../ucode/register.h
+#define P_ASSIST_AMR_SCRATCH0 		CBUS_REG_ADDR(ASSIST_AMR_SCRATCH0) 	///../ucode/register.h
+#define ASSIST_AMR_SCRATCH1 0x1f50 	///../ucode/register.h
+#define P_ASSIST_AMR_SCRATCH1 		CBUS_REG_ADDR(ASSIST_AMR_SCRATCH1) 	///../ucode/register.h
+#define ASSIST_AMR_SCRATCH2 0x1f51 	///../ucode/register.h
+#define P_ASSIST_AMR_SCRATCH2 		CBUS_REG_ADDR(ASSIST_AMR_SCRATCH2) 	///../ucode/register.h
+#define ASSIST_AMR_SCRATCH3 0x1f52 	///../ucode/register.h
+#define P_ASSIST_AMR_SCRATCH3 		CBUS_REG_ADDR(ASSIST_AMR_SCRATCH3) 	///../ucode/register.h
+#define ASSIST_HW_REV 0x1f53 	///../ucode/register.h
+#define P_ASSIST_HW_REV 		CBUS_REG_ADDR(ASSIST_HW_REV) 	///../ucode/register.h
+#define ASSIST_POR_CONFIG 0x1f55 	///../ucode/register.h
+#define P_ASSIST_POR_CONFIG 		CBUS_REG_ADDR(ASSIST_POR_CONFIG) 	///../ucode/register.h
+#define ASSIST_SPARE16_REG1 0x1f56 	///../ucode/register.h
+#define P_ASSIST_SPARE16_REG1 		CBUS_REG_ADDR(ASSIST_SPARE16_REG1) 	///../ucode/register.h
+#define ASSIST_SPARE16_REG2 0x1f57 	///../ucode/register.h
+#define P_ASSIST_SPARE16_REG2 		CBUS_REG_ADDR(ASSIST_SPARE16_REG2) 	///../ucode/register.h
+#define ASSIST_SPARE8_REG1 0x1f58 	///../ucode/register.h
+#define P_ASSIST_SPARE8_REG1 		CBUS_REG_ADDR(ASSIST_SPARE8_REG1) 	///../ucode/register.h
+#define ASSIST_SPARE8_REG2 0x1f59 	///../ucode/register.h
+#define P_ASSIST_SPARE8_REG2 		CBUS_REG_ADDR(ASSIST_SPARE8_REG2) 	///../ucode/register.h
+#define ASSIST_SPARE8_REG3 0x1f5a 	///../ucode/register.h
+#define P_ASSIST_SPARE8_REG3 		CBUS_REG_ADDR(ASSIST_SPARE8_REG3) 	///../ucode/register.h
+#define AC3_CTRL_REG1 0x1f5b 	///../ucode/register.h
+#define P_AC3_CTRL_REG1 		CBUS_REG_ADDR(AC3_CTRL_REG1) 	///../ucode/register.h
+#define AC3_CTRL_REG2 0x1f5c 	///../ucode/register.h
+#define P_AC3_CTRL_REG2 		CBUS_REG_ADDR(AC3_CTRL_REG2) 	///../ucode/register.h
+#define AC3_CTRL_REG3 0x1f5d 	///../ucode/register.h
+#define P_AC3_CTRL_REG3 		CBUS_REG_ADDR(AC3_CTRL_REG3) 	///../ucode/register.h
+#define AC3_CTRL_REG4 0x1f5e 	///../ucode/register.h
+#define P_AC3_CTRL_REG4 		CBUS_REG_ADDR(AC3_CTRL_REG4) 	///../ucode/register.h
+#define ASSIST_GEN_CNTL 0x1f68 	///../ucode/register.h
+#define P_ASSIST_GEN_CNTL 		CBUS_REG_ADDR(ASSIST_GEN_CNTL) 	///../ucode/register.h
+#define EE_ASSIST_MBOX0_IRQ_REG 0x1f70 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX0_IRQ_REG 		CBUS_REG_ADDR(EE_ASSIST_MBOX0_IRQ_REG) 	///../ucode/register.h
+#define EE_ASSIST_MBOX0_CLR_REG 0x1f71 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX0_CLR_REG 		CBUS_REG_ADDR(EE_ASSIST_MBOX0_CLR_REG) 	///../ucode/register.h
+#define EE_ASSIST_MBOX0_MASK 0x1f72 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX0_MASK 		CBUS_REG_ADDR(EE_ASSIST_MBOX0_MASK) 	///../ucode/register.h
+#define EE_ASSIST_MBOX0_FIQ_SEL 0x1f73 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX0_FIQ_SEL 		CBUS_REG_ADDR(EE_ASSIST_MBOX0_FIQ_SEL) 	///../ucode/register.h
+#define EE_ASSIST_MBOX1_IRQ_REG 0x1f74 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX1_IRQ_REG 		CBUS_REG_ADDR(EE_ASSIST_MBOX1_IRQ_REG) 	///../ucode/register.h
+#define EE_ASSIST_MBOX1_CLR_REG 0x1f75 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX1_CLR_REG 		CBUS_REG_ADDR(EE_ASSIST_MBOX1_CLR_REG) 	///../ucode/register.h
+#define EE_ASSIST_MBOX1_MASK 0x1f76 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX1_MASK 		CBUS_REG_ADDR(EE_ASSIST_MBOX1_MASK) 	///../ucode/register.h
+#define EE_ASSIST_MBOX1_FIQ_SEL 0x1f77 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX1_FIQ_SEL 		CBUS_REG_ADDR(EE_ASSIST_MBOX1_FIQ_SEL) 	///../ucode/register.h
+#define EE_ASSIST_MBOX2_IRQ_REG 0x1f78 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX2_IRQ_REG 		CBUS_REG_ADDR(EE_ASSIST_MBOX2_IRQ_REG) 	///../ucode/register.h
+#define EE_ASSIST_MBOX2_CLR_REG 0x1f79 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX2_CLR_REG 		CBUS_REG_ADDR(EE_ASSIST_MBOX2_CLR_REG) 	///../ucode/register.h
+#define EE_ASSIST_MBOX2_MASK 0x1f7a 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX2_MASK 		CBUS_REG_ADDR(EE_ASSIST_MBOX2_MASK) 	///../ucode/register.h
+#define EE_ASSIST_MBOX2_FIQ_SEL 0x1f7b 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX2_FIQ_SEL 		CBUS_REG_ADDR(EE_ASSIST_MBOX2_FIQ_SEL) 	///../ucode/register.h
+#define EE_ASSIST_MBOX3_IRQ_REG 0x1f7c 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX3_IRQ_REG 		CBUS_REG_ADDR(EE_ASSIST_MBOX3_IRQ_REG) 	///../ucode/register.h
+#define EE_ASSIST_MBOX3_CLR_REG 0x1f7d 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX3_CLR_REG 		CBUS_REG_ADDR(EE_ASSIST_MBOX3_CLR_REG) 	///../ucode/register.h
+#define EE_ASSIST_MBOX3_MASK 0x1f7e 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX3_MASK 		CBUS_REG_ADDR(EE_ASSIST_MBOX3_MASK) 	///../ucode/register.h
+#define EE_ASSIST_MBOX3_FIQ_SEL 0x1f7f 	///../ucode/register.h
+#define P_EE_ASSIST_MBOX3_FIQ_SEL 		CBUS_REG_ADDR(EE_ASSIST_MBOX3_FIQ_SEL) 	///../ucode/register.h
+#define AUDIN_SPDIF_MODE 0x2800 	///../ucode/register.h
+#define P_AUDIN_SPDIF_MODE 		CBUS_REG_ADDR(AUDIN_SPDIF_MODE) 	///../ucode/register.h
+#define AUDIN_SPDIF_FS_CLK_RLTN 0x2801 	///../ucode/register.h
+#define P_AUDIN_SPDIF_FS_CLK_RLTN 		CBUS_REG_ADDR(AUDIN_SPDIF_FS_CLK_RLTN) 	///../ucode/register.h
+#define AUDIN_SPDIF_CHNL_STS_A 0x2802 	///../ucode/register.h
+#define P_AUDIN_SPDIF_CHNL_STS_A 		CBUS_REG_ADDR(AUDIN_SPDIF_CHNL_STS_A) 	///../ucode/register.h
+#define AUDIN_SPDIF_CHNL_STS_B 0x2803 	///../ucode/register.h
+#define P_AUDIN_SPDIF_CHNL_STS_B 		CBUS_REG_ADDR(AUDIN_SPDIF_CHNL_STS_B) 	///../ucode/register.h
+#define AUDIN_SPDIF_MISC 0x2804 	///../ucode/register.h
+#define P_AUDIN_SPDIF_MISC 		CBUS_REG_ADDR(AUDIN_SPDIF_MISC) 	///../ucode/register.h
+#define AUDIN_SPDIF_NPCM_PCPD 0x2805 	///../ucode/register.h
+#define P_AUDIN_SPDIF_NPCM_PCPD 		CBUS_REG_ADDR(AUDIN_SPDIF_NPCM_PCPD) 	///../ucode/register.h
+#define AUDIN_SPDIF_END 0x280f 	///../ucode/register.h
+#define P_AUDIN_SPDIF_END 		CBUS_REG_ADDR(AUDIN_SPDIF_END) 	///../ucode/register.h
+#define AUDIN_I2SIN_CTRL 0x2810 	///../ucode/register.h
+#define P_AUDIN_I2SIN_CTRL 		CBUS_REG_ADDR(AUDIN_I2SIN_CTRL) 	///../ucode/register.h
+#define AUDIN_SOURCE_SEL 0x2811 	///../ucode/register.h
+#define P_AUDIN_SOURCE_SEL 		CBUS_REG_ADDR(AUDIN_SOURCE_SEL) 	///../ucode/register.h
+#define AUDIN_DECODE_FORMAT 0x2812 	///../ucode/register.h
+#define P_AUDIN_DECODE_FORMAT 		CBUS_REG_ADDR(AUDIN_DECODE_FORMAT) 	///../ucode/register.h
+#define AUDIN_DECODE_CONTROL_STATUS 0x2813 	///../ucode/register.h
+#define P_AUDIN_DECODE_CONTROL_STATUS 		CBUS_REG_ADDR(AUDIN_DECODE_CONTROL_STATUS) 	///../ucode/register.h
+#define AUDIN_DECODE_CHANNEL_STATUS_A_0 0x2814 	///../ucode/register.h
+#define P_AUDIN_DECODE_CHANNEL_STATUS_A_0 		CBUS_REG_ADDR(AUDIN_DECODE_CHANNEL_STATUS_A_0) 	///../ucode/register.h
+#define AUDIN_DECODE_CHANNEL_STATUS_A_1 0x2815 	///../ucode/register.h
+#define P_AUDIN_DECODE_CHANNEL_STATUS_A_1 		CBUS_REG_ADDR(AUDIN_DECODE_CHANNEL_STATUS_A_1) 	///../ucode/register.h
+#define AUDIN_DECODE_CHANNEL_STATUS_A_2 0x2816 	///../ucode/register.h
+#define P_AUDIN_DECODE_CHANNEL_STATUS_A_2 		CBUS_REG_ADDR(AUDIN_DECODE_CHANNEL_STATUS_A_2) 	///../ucode/register.h
+#define AUDIN_DECODE_CHANNEL_STATUS_A_3 0x2817 	///../ucode/register.h
+#define P_AUDIN_DECODE_CHANNEL_STATUS_A_3 		CBUS_REG_ADDR(AUDIN_DECODE_CHANNEL_STATUS_A_3) 	///../ucode/register.h
+#define AUDIN_DECODE_CHANNEL_STATUS_A_4 0x2818 	///../ucode/register.h
+#define P_AUDIN_DECODE_CHANNEL_STATUS_A_4 		CBUS_REG_ADDR(AUDIN_DECODE_CHANNEL_STATUS_A_4) 	///../ucode/register.h
+#define AUDIN_DECODE_CHANNEL_STATUS_A_5 0x2819 	///../ucode/register.h
+#define P_AUDIN_DECODE_CHANNEL_STATUS_A_5 		CBUS_REG_ADDR(AUDIN_DECODE_CHANNEL_STATUS_A_5) 	///../ucode/register.h
+#define AUDIN_FIFO0_START 0x2820 	///../ucode/register.h
+#define P_AUDIN_FIFO0_START 		CBUS_REG_ADDR(AUDIN_FIFO0_START) 	///../ucode/register.h
+#define AUDIN_FIFO0_END 0x2821 	///../ucode/register.h
+#define P_AUDIN_FIFO0_END 		CBUS_REG_ADDR(AUDIN_FIFO0_END) 	///../ucode/register.h
+#define AUDIN_FIFO0_PTR 0x2822 	///../ucode/register.h
+#define P_AUDIN_FIFO0_PTR 		CBUS_REG_ADDR(AUDIN_FIFO0_PTR) 	///../ucode/register.h
+#define AUDIN_FIFO0_INTR 0x2823 	///../ucode/register.h
+#define P_AUDIN_FIFO0_INTR 		CBUS_REG_ADDR(AUDIN_FIFO0_INTR) 	///../ucode/register.h
+#define AUDIN_FIFO0_RDPTR 0x2824 	///../ucode/register.h
+#define P_AUDIN_FIFO0_RDPTR 		CBUS_REG_ADDR(AUDIN_FIFO0_RDPTR) 	///../ucode/register.h
+#define AUDIN_FIFO0_CTRL 0x2825 	///../ucode/register.h
+#define P_AUDIN_FIFO0_CTRL 		CBUS_REG_ADDR(AUDIN_FIFO0_CTRL) 	///../ucode/register.h
+#define AUDIN_FIFO0_CTRL1 0x2826 	///../ucode/register.h
+#define P_AUDIN_FIFO0_CTRL1 		CBUS_REG_ADDR(AUDIN_FIFO0_CTRL1) 	///../ucode/register.h
+#define AUDIN_FIFO0_LVL0 0x2827 	///../ucode/register.h
+#define P_AUDIN_FIFO0_LVL0 		CBUS_REG_ADDR(AUDIN_FIFO0_LVL0) 	///../ucode/register.h
+#define AUDIN_FIFO0_LVL1 0x2828 	///../ucode/register.h
+#define P_AUDIN_FIFO0_LVL1 		CBUS_REG_ADDR(AUDIN_FIFO0_LVL1) 	///../ucode/register.h
+#define AUDIN_FIFO0_LVL2 0x2829 	///../ucode/register.h
+#define P_AUDIN_FIFO0_LVL2 		CBUS_REG_ADDR(AUDIN_FIFO0_LVL2) 	///../ucode/register.h
+#define AUDIN_FIFO1_START 0x282a 	///../ucode/register.h
+#define P_AUDIN_FIFO1_START 		CBUS_REG_ADDR(AUDIN_FIFO1_START) 	///../ucode/register.h
+#define AUDIN_FIFO1_END 0x282b 	///../ucode/register.h
+#define P_AUDIN_FIFO1_END 		CBUS_REG_ADDR(AUDIN_FIFO1_END) 	///../ucode/register.h
+#define AUDIN_FIFO1_PTR 0x282c 	///../ucode/register.h
+#define P_AUDIN_FIFO1_PTR 		CBUS_REG_ADDR(AUDIN_FIFO1_PTR) 	///../ucode/register.h
+#define AUDIN_FIFO1_INTR 0x282d 	///../ucode/register.h
+#define P_AUDIN_FIFO1_INTR 		CBUS_REG_ADDR(AUDIN_FIFO1_INTR) 	///../ucode/register.h
+#define AUDIN_FIFO1_RDPTR 0x282e 	///../ucode/register.h
+#define P_AUDIN_FIFO1_RDPTR 		CBUS_REG_ADDR(AUDIN_FIFO1_RDPTR) 	///../ucode/register.h
+#define AUDIN_FIFO1_CTRL 0x282f 	///../ucode/register.h
+#define P_AUDIN_FIFO1_CTRL 		CBUS_REG_ADDR(AUDIN_FIFO1_CTRL) 	///../ucode/register.h
+#define AUDIN_FIFO1_CTRL1 0x2830 	///../ucode/register.h
+#define P_AUDIN_FIFO1_CTRL1 		CBUS_REG_ADDR(AUDIN_FIFO1_CTRL1) 	///../ucode/register.h
+#define AUDIN_FIFO1_LVL0 0x2831 	///../ucode/register.h
+#define P_AUDIN_FIFO1_LVL0 		CBUS_REG_ADDR(AUDIN_FIFO1_LVL0) 	///../ucode/register.h
+#define AUDIN_FIFO1_LVL1 0x2832 	///../ucode/register.h
+#define P_AUDIN_FIFO1_LVL1 		CBUS_REG_ADDR(AUDIN_FIFO1_LVL1) 	///../ucode/register.h
+#define AUDIN_FIFO1_LVL2 0x2833 	///../ucode/register.h
+#define P_AUDIN_FIFO1_LVL2 		CBUS_REG_ADDR(AUDIN_FIFO1_LVL2) 	///../ucode/register.h
+#define AUDIN_FIFO0_REQID 0x2834 	///../ucode/register.h
+#define P_AUDIN_FIFO0_REQID 		CBUS_REG_ADDR(AUDIN_FIFO0_REQID) 	///../ucode/register.h
+#define AUDIN_FIFO1_REQID 0x2835 	///../ucode/register.h
+#define P_AUDIN_FIFO1_REQID 		CBUS_REG_ADDR(AUDIN_FIFO1_REQID) 	///../ucode/register.h
+#define AUDIN_INT_CTRL 0x2836 	///../ucode/register.h
+#define P_AUDIN_INT_CTRL 		CBUS_REG_ADDR(AUDIN_INT_CTRL) 	///../ucode/register.h
+#define AUDIN_FIFO_INT 0x2837 	///../ucode/register.h
+#define P_AUDIN_FIFO_INT 		CBUS_REG_ADDR(AUDIN_FIFO_INT) 	///../ucode/register.h
+#define AUDIN_FIFO0_WRAP 0x2838 	///../ucode/register.h
+#define P_AUDIN_FIFO0_WRAP 		CBUS_REG_ADDR(AUDIN_FIFO0_WRAP) 	///../ucode/register.h
+#define AUDIN_FIFO1_WRAP 0x2839 	///../ucode/register.h
+#define P_AUDIN_FIFO1_WRAP 		CBUS_REG_ADDR(AUDIN_FIFO1_WRAP) 	///../ucode/register.h
+#define AUDIN_PIO_STS 0x283a 	///../ucode/register.h
+#define P_AUDIN_PIO_STS 		CBUS_REG_ADDR(AUDIN_PIO_STS) 	///../ucode/register.h
+#define AUDIN_RD_L 0x283b 	///../ucode/register.h
+#define P_AUDIN_RD_L 		CBUS_REG_ADDR(AUDIN_RD_L) 	///../ucode/register.h
+#define AUDIN_RD_H 0x283c 	///../ucode/register.h
+#define P_AUDIN_RD_H 		CBUS_REG_ADDR(AUDIN_RD_H) 	///../ucode/register.h
+#define PCMIN_CTRL0 0x2840 	///../ucode/register.h
+#define P_PCMIN_CTRL0 		CBUS_REG_ADDR(PCMIN_CTRL0) 	///../ucode/register.h
+#define PCMIN_CTRL1 0x2841 	///../ucode/register.h
+#define P_PCMIN_CTRL1 		CBUS_REG_ADDR(PCMIN_CTRL1) 	///../ucode/register.h
+#define PCMOUT_CTRL0 0x2850 	///../ucode/register.h
+#define P_PCMOUT_CTRL0 		CBUS_REG_ADDR(PCMOUT_CTRL0) 	///../ucode/register.h
+#define PCMOUT_CTRL1 0x2851 	///../ucode/register.h
+#define P_PCMOUT_CTRL1 		CBUS_REG_ADDR(PCMOUT_CTRL1) 	///../ucode/register.h
+#define PCMOUT_CTRL2 0x2852 	///../ucode/register.h
+#define P_PCMOUT_CTRL2 		CBUS_REG_ADDR(PCMOUT_CTRL2) 	///../ucode/register.h
+#define PCMOUT_CTRL3 0x2853 	///../ucode/register.h
+#define P_PCMOUT_CTRL3 		CBUS_REG_ADDR(PCMOUT_CTRL3) 	///../ucode/register.h
+#define AUDOUT_CTRL 0x2860 	///../ucode/register.h
+#define P_AUDOUT_CTRL 		CBUS_REG_ADDR(AUDOUT_CTRL) 	///../ucode/register.h
+#define AUDOUT_CTRL1 0x2861 	///../ucode/register.h
+#define P_AUDOUT_CTRL1 		CBUS_REG_ADDR(AUDOUT_CTRL1) 	///../ucode/register.h
+#define AUDOUT_BUF0_STA 0x2862 	///../ucode/register.h
+#define P_AUDOUT_BUF0_STA 		CBUS_REG_ADDR(AUDOUT_BUF0_STA) 	///../ucode/register.h
+#define AUDOUT_BUF0_EDA 0x2863 	///../ucode/register.h
+#define P_AUDOUT_BUF0_EDA 		CBUS_REG_ADDR(AUDOUT_BUF0_EDA) 	///../ucode/register.h
+#define AUDOUT_BUF0_WPTR 0x2864 	///../ucode/register.h
+#define P_AUDOUT_BUF0_WPTR 		CBUS_REG_ADDR(AUDOUT_BUF0_WPTR) 	///../ucode/register.h
+#define AUDOUT_BUF1_STA 0x2865 	///../ucode/register.h
+#define P_AUDOUT_BUF1_STA 		CBUS_REG_ADDR(AUDOUT_BUF1_STA) 	///../ucode/register.h
+#define AUDOUT_BUF1_EDA 0x2866 	///../ucode/register.h
+#define P_AUDOUT_BUF1_EDA 		CBUS_REG_ADDR(AUDOUT_BUF1_EDA) 	///../ucode/register.h
+#define AUDOUT_BUF1_WPTR 0x2867 	///../ucode/register.h
+#define P_AUDOUT_BUF1_WPTR 		CBUS_REG_ADDR(AUDOUT_BUF1_WPTR) 	///../ucode/register.h
+#define AUDOUT_FIFO_RPTR 0x2868 	///../ucode/register.h
+#define P_AUDOUT_FIFO_RPTR 		CBUS_REG_ADDR(AUDOUT_FIFO_RPTR) 	///../ucode/register.h
+#define AUDOUT_INTR_PTR 0x2869 	///../ucode/register.h
+#define P_AUDOUT_INTR_PTR 		CBUS_REG_ADDR(AUDOUT_INTR_PTR) 	///../ucode/register.h
+#define AUDOUT_FIFO_STS 0x286a 	///../ucode/register.h
+#define P_AUDOUT_FIFO_STS 		CBUS_REG_ADDR(AUDOUT_FIFO_STS) 	///../ucode/register.h
+#define AUDOUT_WR_L 0x286b 	///../ucode/register.h
+#define P_AUDOUT_WR_L 		CBUS_REG_ADDR(AUDOUT_WR_L) 	///../ucode/register.h
+#define AUDOUT_WR_H 0x286c 	///../ucode/register.h
+#define P_AUDOUT_WR_H 		CBUS_REG_ADDR(AUDOUT_WR_H) 	///../ucode/register.h
+#define AUDIN_HDMI_MEAS_CTRL 0x2870 	///../ucode/register.h
+#define P_AUDIN_HDMI_MEAS_CTRL 		CBUS_REG_ADDR(AUDIN_HDMI_MEAS_CTRL) 	///../ucode/register.h
+#define AUDIN_HDMI_MEAS_CYCLES_M1 0x2871 	///../ucode/register.h
+#define P_AUDIN_HDMI_MEAS_CYCLES_M1 		CBUS_REG_ADDR(AUDIN_HDMI_MEAS_CYCLES_M1) 	///../ucode/register.h
+#define AUDIN_HDMI_MEAS_INTR_MASKN 0x2872 	///../ucode/register.h
+#define P_AUDIN_HDMI_MEAS_INTR_MASKN 		CBUS_REG_ADDR(AUDIN_HDMI_MEAS_INTR_MASKN) 	///../ucode/register.h
+#define AUDIN_HDMI_MEAS_INTR_STAT 0x2873 	///../ucode/register.h
+#define P_AUDIN_HDMI_MEAS_INTR_STAT 		CBUS_REG_ADDR(AUDIN_HDMI_MEAS_INTR_STAT) 	///../ucode/register.h
+#define AUDIN_HDMI_REF_CYCLES_STAT_0 0x2874 	///../ucode/register.h
+#define P_AUDIN_HDMI_REF_CYCLES_STAT_0 		CBUS_REG_ADDR(AUDIN_HDMI_REF_CYCLES_STAT_0) 	///../ucode/register.h
+#define AUDIN_HDMI_REF_CYCLES_STAT_1 0x2875 	///../ucode/register.h
+#define P_AUDIN_HDMI_REF_CYCLES_STAT_1 		CBUS_REG_ADDR(AUDIN_HDMI_REF_CYCLES_STAT_1) 	///../ucode/register.h
+#define AUDIN_HDMIRX_AFIFO_STAT 0x2876 	///../ucode/register.h
+#define P_AUDIN_HDMIRX_AFIFO_STAT 		CBUS_REG_ADDR(AUDIN_HDMIRX_AFIFO_STAT) 	///../ucode/register.h
+#define AUDIN_ADDR_END 0x287f 	///../ucode/register.h
+#define P_AUDIN_ADDR_END 		CBUS_REG_ADDR(AUDIN_ADDR_END) 	///../ucode/register.h
+#define P_AO_RTI_STATUS_REG0 		AOBUS_REG_ADDR((0x00 << 10) | (0x00 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_RTI_STATUS_REG1 		AOBUS_REG_ADDR((0x00 << 10) | (0x01 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_RTI_STATUS_REG2 		AOBUS_REG_ADDR((0x00 << 10) | (0x02 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_RTI_PWR_CNTL_REG0 		AOBUS_REG_ADDR((0x00 << 10) | (0x04 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_RTI_PIN_MUX_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x05 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_WD_GPIO_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x06 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_REMAP_REG0 		AOBUS_REG_ADDR((0x00 << 10) | (0x07 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_REMAP_REG1 		AOBUS_REG_ADDR((0x00 << 10) | (0x08 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_GPIO_O_EN_N 		AOBUS_REG_ADDR((0x00 << 10) | (0x09 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_GPIO_I 		AOBUS_REG_ADDR((0x00 << 10) | (0x0A << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_RTI_PULL_UP_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x0B << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_RTI_WD_MARK 		AOBUS_REG_ADDR((0x00 << 10) | (0x0D << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_RTI_GEN_CNTL_REG0 		AOBUS_REG_ADDR((0x00 << 10) | (0x10 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_WATCHDOG_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x11 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_WATCHDOG_RESET 		AOBUS_REG_ADDR((0x00 << 10) | (0x12 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_TIMER_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x13 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_TIMERA_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x14 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_TIMERE_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x15 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_AHB2DDR_CNTL 		AOBUS_REG_ADDR((0x00 << 10) | (0x18 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IRQ_MASK_FIQ_SEL 		AOBUS_REG_ADDR((0x00 << 10) | (0x20 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IRQ_GPIO_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x21 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IRQ_STAT 		AOBUS_REG_ADDR((0x00 << 10) | (0x22 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IRQ_STAT_CLR 		AOBUS_REG_ADDR((0x00 << 10) | (0x23 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_DEBUG_REG0 		AOBUS_REG_ADDR((0x00 << 10) | (0x28 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_DEBUG_REG1 		AOBUS_REG_ADDR((0x00 << 10) | (0x29 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_DEBUG_REG2 		AOBUS_REG_ADDR((0x00 << 10) | (0x2a << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_DEBUG_REG3 		AOBUS_REG_ADDR((0x00 << 10) | (0x2b << 2)) 	///../ucode/c_always_on_pointer.h
+#define AO_IR_BLASTER_ADDR0 0x30 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_BLASTER_ADDR0 		CBUS_REG_ADDR(AO_IR_BLASTER_ADDR0) 	///../ucode/c_always_on_pointer.h
+#define AO_IR_BLASTER_ADDR1 0x31 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_BLASTER_ADDR1 		CBUS_REG_ADDR(AO_IR_BLASTER_ADDR1) 	///../ucode/c_always_on_pointer.h
+#define AO_IR_BLASTER_ADDR2 0x32 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_BLASTER_ADDR2 		CBUS_REG_ADDR(AO_IR_BLASTER_ADDR2) 	///../ucode/c_always_on_pointer.h
+#define P_AO_CEC_GEN_CNTL 		AOBUS_REG_ADDR((0x00 << 10) | (0x40 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_CEC_RW_REG 		AOBUS_REG_ADDR((0x00 << 10) | (0x41 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_CEC_INTR_MASKN 		AOBUS_REG_ADDR((0x00 << 10) | (0x42 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_CEC_INTR_CLR 		AOBUS_REG_ADDR((0x00 << 10) | (0x43 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_CEC_INTR_STAT 		AOBUS_REG_ADDR((0x00 << 10) | (0x44 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_DEC_LDR_ACTIVE 		AOBUS_REG_ADDR((0x01 << 10) | (0x20 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_DEC_LDR_IDLE 		AOBUS_REG_ADDR((0x01 << 10) | (0x21 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_DEC_LDR_REPEAT 		AOBUS_REG_ADDR((0x01 << 10) | (0x22 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_DEC_BIT_0 		AOBUS_REG_ADDR((0x01 << 10) | (0x23 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_DEC_REG0 		AOBUS_REG_ADDR((0x01 << 10) | (0x24 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_DEC_FRAME 		AOBUS_REG_ADDR((0x01 << 10) | (0x25 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_DEC_STATUS 		AOBUS_REG_ADDR((0x01 << 10) | (0x26 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_IR_DEC_REG1 		AOBUS_REG_ADDR((0x01 << 10) | (0x27 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART_WFIFO 		AOBUS_REG_ADDR((0x01 << 10) | (0x30 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART_RFIFO 		AOBUS_REG_ADDR((0x01 << 10) | (0x31 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART_CONTROL 		AOBUS_REG_ADDR((0x01 << 10) | (0x32 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART_STATUS 		AOBUS_REG_ADDR((0x01 << 10) | (0x33 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART_MISC 		AOBUS_REG_ADDR((0x01 << 10) | (0x34 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART_REG5 		AOBUS_REG_ADDR((0x01 << 10) | (0x35 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART2_WFIFO 		AOBUS_REG_ADDR((0x01 << 10) | (0x38 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART2_RFIFO 		AOBUS_REG_ADDR((0x01 << 10) | (0x39 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART2_CONTROL 		AOBUS_REG_ADDR((0x01 << 10) | (0x3a << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART2_STATUS 		AOBUS_REG_ADDR((0x01 << 10) | (0x3b << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART2_MISC 		AOBUS_REG_ADDR((0x01 << 10) | (0x3c << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_UART2_REG5 		AOBUS_REG_ADDR((0x01 << 10) | (0x3d << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_M_0_CONTROL_REG 		AOBUS_REG_ADDR((0x01 << 10) | (0x40 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_M_0_SLAVE_ADDR 		AOBUS_REG_ADDR((0x01 << 10) | (0x41 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_M_0_TOKEN_LIST0 		AOBUS_REG_ADDR((0x01 << 10) | (0x42 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_M_0_TOKEN_LIST1 		AOBUS_REG_ADDR((0x01 << 10) | (0x43 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_M_0_WDATA_REG0 		AOBUS_REG_ADDR((0x01 << 10) | (0x44 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_M_0_WDATA_REG1 		AOBUS_REG_ADDR((0x01 << 10) | (0x45 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_M_0_RDATA_REG0 		AOBUS_REG_ADDR((0x01 << 10) | (0x46 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_M_0_RDATA_REG1 		AOBUS_REG_ADDR((0x01 << 10) | (0x47 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_S_CONTROL_REG 		AOBUS_REG_ADDR((0x01 << 10) | (0x50 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_S_SEND_REG 		AOBUS_REG_ADDR((0x01 << 10) | (0x51 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_S_RECV_REG 		AOBUS_REG_ADDR((0x01 << 10) | (0x52 << 2)) 	///../ucode/c_always_on_pointer.h
+#define P_AO_I2C_S_CNTL1_REG 		AOBUS_REG_ADDR((0x01 << 10) | (0x53 << 2)) 	///../ucode/c_always_on_pointer.h
+#define UPCTL_STAT_ADDR 0x0008 	///../ucode/pctl.h
+#define P_UPCTL_STAT_ADDR 		APB_REG_ADDR(UPCTL_STAT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_INTRSTAT_ADDR 0x000c 	///../ucode/pctl.h
+#define P_UPCTL_INTRSTAT_ADDR 		APB_REG_ADDR(UPCTL_INTRSTAT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_SCTL_ADDR 0x0004 	///../ucode/pctl.h
+#define P_UPCTL_SCTL_ADDR 		APB_REG_ADDR(UPCTL_SCTL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_SCFG_ADDR 0x0000 	///../ucode/pctl.h
+#define P_UPCTL_SCFG_ADDR 		APB_REG_ADDR(UPCTL_SCFG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_POWSTAT_ADDR 0x0048 	///../ucode/pctl.h
+#define P_UPCTL_POWSTAT_ADDR 		APB_REG_ADDR(UPCTL_POWSTAT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_MRRSTAT0_ADDR 0x0064 	///../ucode/pctl.h
+#define P_UPCTL_MRRSTAT0_ADDR 		APB_REG_ADDR(UPCTL_MRRSTAT0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_CMDTSTAT_ADDR 0x004c 	///../ucode/pctl.h
+#define P_UPCTL_CMDTSTAT_ADDR 		APB_REG_ADDR(UPCTL_CMDTSTAT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_MCMD_ADDR 0x0040 	///../ucode/pctl.h
+#define P_UPCTL_MCMD_ADDR 		APB_REG_ADDR(UPCTL_MCMD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_MRRSTAT1_ADDR 0x0068 	///../ucode/pctl.h
+#define P_UPCTL_MRRSTAT1_ADDR 		APB_REG_ADDR(UPCTL_MRRSTAT1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_MRRCFG0_ADDR 0x0060 	///../ucode/pctl.h
+#define P_UPCTL_MRRCFG0_ADDR 		APB_REG_ADDR(UPCTL_MRRCFG0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_CMDTSTATEN_ADDR 0x0050 	///../ucode/pctl.h
+#define P_UPCTL_CMDTSTATEN_ADDR 		APB_REG_ADDR(UPCTL_CMDTSTATEN_ADDR) 	///../ucode/pctl.h
+#define UPCTL_POWCTL_ADDR 0x0044 	///../ucode/pctl.h
+#define P_UPCTL_POWCTL_ADDR 		APB_REG_ADDR(UPCTL_POWCTL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_LPDDR2ZQCFG_ADDR 0x008c 	///../ucode/pctl.h
+#define P_UPCTL_LPDDR2ZQCFG_ADDR 		APB_REG_ADDR(UPCTL_LPDDR2ZQCFG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_PPCFG_ADDR 0x0084 	///../ucode/pctl.h
+#define P_UPCTL_PPCFG_ADDR 		APB_REG_ADDR(UPCTL_PPCFG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_MCFG1_ADDR 0x007c 	///../ucode/pctl.h
+#define P_UPCTL_MCFG1_ADDR 		APB_REG_ADDR(UPCTL_MCFG1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_MSTAT_ADDR 0x0088 	///../ucode/pctl.h
+#define P_UPCTL_MSTAT_ADDR 		APB_REG_ADDR(UPCTL_MSTAT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_MCFG_ADDR 0x0080 	///../ucode/pctl.h
+#define P_UPCTL_MCFG_ADDR 		APB_REG_ADDR(UPCTL_MCFG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUAWDT_ADDR 0x00b0 	///../ucode/pctl.h
+#define P_UPCTL_DTUAWDT_ADDR 		APB_REG_ADDR(UPCTL_DTUAWDT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUPRD2_ADDR 0x00a8 	///../ucode/pctl.h
+#define P_UPCTL_DTUPRD2_ADDR 		APB_REG_ADDR(UPCTL_DTUPRD2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUPRD3_ADDR 0x00ac 	///../ucode/pctl.h
+#define P_UPCTL_DTUPRD3_ADDR 		APB_REG_ADDR(UPCTL_DTUPRD3_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUNE_ADDR 0x009c 	///../ucode/pctl.h
+#define P_UPCTL_DTUNE_ADDR 		APB_REG_ADDR(UPCTL_DTUNE_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUPDES_ADDR 0x0094 	///../ucode/pctl.h
+#define P_UPCTL_DTUPDES_ADDR 		APB_REG_ADDR(UPCTL_DTUPDES_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUNA_ADDR 0x0098 	///../ucode/pctl.h
+#define P_UPCTL_DTUNA_ADDR 		APB_REG_ADDR(UPCTL_DTUNA_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUPRD0_ADDR 0x00a0 	///../ucode/pctl.h
+#define P_UPCTL_DTUPRD0_ADDR 		APB_REG_ADDR(UPCTL_DTUPRD0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUPRD1_ADDR 0x00a4 	///../ucode/pctl.h
+#define P_UPCTL_DTUPRD1_ADDR 		APB_REG_ADDR(UPCTL_DTUPRD1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TCKSRE_ADDR 0x0124 	///../ucode/pctl.h
+#define P_UPCTL_TCKSRE_ADDR 		APB_REG_ADDR(UPCTL_TCKSRE_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TZQCSI_ADDR 0x011c 	///../ucode/pctl.h
+#define P_UPCTL_TZQCSI_ADDR 		APB_REG_ADDR(UPCTL_TZQCSI_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TINIT_ADDR 0x00c4 	///../ucode/pctl.h
+#define P_UPCTL_TINIT_ADDR 		APB_REG_ADDR(UPCTL_TINIT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TDPD_ADDR 0x0144 	///../ucode/pctl.h
+#define P_UPCTL_TDPD_ADDR 		APB_REG_ADDR(UPCTL_TDPD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TOGCNT1U_ADDR 0x00c0 	///../ucode/pctl.h
+#define P_UPCTL_TOGCNT1U_ADDR 		APB_REG_ADDR(UPCTL_TOGCNT1U_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TCKE_ADDR 0x012c 	///../ucode/pctl.h
+#define P_UPCTL_TCKE_ADDR 		APB_REG_ADDR(UPCTL_TCKE_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TMOD_ADDR 0x0130 	///../ucode/pctl.h
+#define P_UPCTL_TMOD_ADDR 		APB_REG_ADDR(UPCTL_TMOD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TEXSR_ADDR 0x010c 	///../ucode/pctl.h
+#define P_UPCTL_TEXSR_ADDR 		APB_REG_ADDR(UPCTL_TEXSR_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TAL_ADDR 0x00e4 	///../ucode/pctl.h
+#define P_UPCTL_TAL_ADDR 		APB_REG_ADDR(UPCTL_TAL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRTP_ADDR 0x0100 	///../ucode/pctl.h
+#define P_UPCTL_TRTP_ADDR 		APB_REG_ADDR(UPCTL_TRTP_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TCKSRX_ADDR 0x0128 	///../ucode/pctl.h
+#define P_UPCTL_TCKSRX_ADDR 		APB_REG_ADDR(UPCTL_TCKSRX_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRTW_ADDR 0x00e0 	///../ucode/pctl.h
+#define P_UPCTL_TRTW_ADDR 		APB_REG_ADDR(UPCTL_TRTW_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TCWL_ADDR 0x00ec 	///../ucode/pctl.h
+#define P_UPCTL_TCWL_ADDR 		APB_REG_ADDR(UPCTL_TCWL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TWR_ADDR 0x0104 	///../ucode/pctl.h
+#define P_UPCTL_TWR_ADDR 		APB_REG_ADDR(UPCTL_TWR_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TCL_ADDR 0x00e8 	///../ucode/pctl.h
+#define P_UPCTL_TCL_ADDR 		APB_REG_ADDR(UPCTL_TCL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TDQS_ADDR 0x0120 	///../ucode/pctl.h
+#define P_UPCTL_TDQS_ADDR 		APB_REG_ADDR(UPCTL_TDQS_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRSTH_ADDR 0x00c8 	///../ucode/pctl.h
+#define P_UPCTL_TRSTH_ADDR 		APB_REG_ADDR(UPCTL_TRSTH_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRCD_ADDR 0x00f8 	///../ucode/pctl.h
+#define P_UPCTL_TRCD_ADDR 		APB_REG_ADDR(UPCTL_TRCD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TXP_ADDR 0x0110 	///../ucode/pctl.h
+#define P_UPCTL_TXP_ADDR 		APB_REG_ADDR(UPCTL_TXP_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TOGCNT100N_ADDR 0x00cc 	///../ucode/pctl.h
+#define P_UPCTL_TOGCNT100N_ADDR 		APB_REG_ADDR(UPCTL_TOGCNT100N_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TMRD_ADDR 0x00d4 	///../ucode/pctl.h
+#define P_UPCTL_TMRD_ADDR 		APB_REG_ADDR(UPCTL_TMRD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRSTL_ADDR 0x0134 	///../ucode/pctl.h
+#define P_UPCTL_TRSTL_ADDR 		APB_REG_ADDR(UPCTL_TRSTL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TREFI_ADDR 0x00d0 	///../ucode/pctl.h
+#define P_UPCTL_TREFI_ADDR 		APB_REG_ADDR(UPCTL_TREFI_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRAS_ADDR 0x00f0 	///../ucode/pctl.h
+#define P_UPCTL_TRAS_ADDR 		APB_REG_ADDR(UPCTL_TRAS_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TWTR_ADDR 0x0108 	///../ucode/pctl.h
+#define P_UPCTL_TWTR_ADDR 		APB_REG_ADDR(UPCTL_TWTR_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRC_ADDR 0x00f4 	///../ucode/pctl.h
+#define P_UPCTL_TRC_ADDR 		APB_REG_ADDR(UPCTL_TRC_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRFC_ADDR 0x00d8 	///../ucode/pctl.h
+#define P_UPCTL_TRFC_ADDR 		APB_REG_ADDR(UPCTL_TRFC_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TMRR_ADDR 0x013c 	///../ucode/pctl.h
+#define P_UPCTL_TMRR_ADDR 		APB_REG_ADDR(UPCTL_TMRR_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TCKESR_ADDR 0x0140 	///../ucode/pctl.h
+#define P_UPCTL_TCKESR_ADDR 		APB_REG_ADDR(UPCTL_TCKESR_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TZQCL_ADDR 0x0138 	///../ucode/pctl.h
+#define P_UPCTL_TZQCL_ADDR 		APB_REG_ADDR(UPCTL_TZQCL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRRD_ADDR 0x00fc 	///../ucode/pctl.h
+#define P_UPCTL_TRRD_ADDR 		APB_REG_ADDR(UPCTL_TRRD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TRP_ADDR 0x00dc 	///../ucode/pctl.h
+#define P_UPCTL_TRP_ADDR 		APB_REG_ADDR(UPCTL_TRP_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TZQCS_ADDR 0x0118 	///../ucode/pctl.h
+#define P_UPCTL_TZQCS_ADDR 		APB_REG_ADDR(UPCTL_TZQCS_ADDR) 	///../ucode/pctl.h
+#define UPCTL_TXPDLL_ADDR 0x0114 	///../ucode/pctl.h
+#define P_UPCTL_TXPDLL_ADDR 		APB_REG_ADDR(UPCTL_TXPDLL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_ECCCFG_ADDR 0x0180 	///../ucode/pctl.h
+#define P_UPCTL_ECCCFG_ADDR 		APB_REG_ADDR(UPCTL_ECCCFG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_ECCLOG_ADDR 0x018c 	///../ucode/pctl.h
+#define P_UPCTL_ECCLOG_ADDR 		APB_REG_ADDR(UPCTL_ECCLOG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_ECCCLR_ADDR 0x0188 	///../ucode/pctl.h
+#define P_UPCTL_ECCCLR_ADDR 		APB_REG_ADDR(UPCTL_ECCCLR_ADDR) 	///../ucode/pctl.h
+#define UPCTL_ECCTST_ADDR 0x0184 	///../ucode/pctl.h
+#define P_UPCTL_ECCTST_ADDR 		APB_REG_ADDR(UPCTL_ECCTST_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUWD0_ADDR 0x0210 	///../ucode/pctl.h
+#define P_UPCTL_DTUWD0_ADDR 		APB_REG_ADDR(UPCTL_DTUWD0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUWD1_ADDR 0x0214 	///../ucode/pctl.h
+#define P_UPCTL_DTUWD1_ADDR 		APB_REG_ADDR(UPCTL_DTUWD1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUWACTL_ADDR 0x0200 	///../ucode/pctl.h
+#define P_UPCTL_DTUWACTL_ADDR 		APB_REG_ADDR(UPCTL_DTUWACTL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTULFSRRD_ADDR 0x0238 	///../ucode/pctl.h
+#define P_UPCTL_DTULFSRRD_ADDR 		APB_REG_ADDR(UPCTL_DTULFSRRD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUWD2_ADDR 0x0218 	///../ucode/pctl.h
+#define P_UPCTL_DTUWD2_ADDR 		APB_REG_ADDR(UPCTL_DTUWD2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUWD3_ADDR 0x021c 	///../ucode/pctl.h
+#define P_UPCTL_DTUWD3_ADDR 		APB_REG_ADDR(UPCTL_DTUWD3_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTULFSRWD_ADDR 0x0234 	///../ucode/pctl.h
+#define P_UPCTL_DTULFSRWD_ADDR 		APB_REG_ADDR(UPCTL_DTULFSRWD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTURACTL_ADDR 0x0204 	///../ucode/pctl.h
+#define P_UPCTL_DTURACTL_ADDR 		APB_REG_ADDR(UPCTL_DTURACTL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUWDM_ADDR 0x0220 	///../ucode/pctl.h
+#define P_UPCTL_DTUWDM_ADDR 		APB_REG_ADDR(UPCTL_DTUWDM_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTURD0_ADDR 0x0224 	///../ucode/pctl.h
+#define P_UPCTL_DTURD0_ADDR 		APB_REG_ADDR(UPCTL_DTURD0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTURD1_ADDR 0x0228 	///../ucode/pctl.h
+#define P_UPCTL_DTURD1_ADDR 		APB_REG_ADDR(UPCTL_DTURD1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTURD2_ADDR 0x022c 	///../ucode/pctl.h
+#define P_UPCTL_DTURD2_ADDR 		APB_REG_ADDR(UPCTL_DTURD2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTURD3_ADDR 0x0230 	///../ucode/pctl.h
+#define P_UPCTL_DTURD3_ADDR 		APB_REG_ADDR(UPCTL_DTURD3_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUCFG_ADDR 0x0208 	///../ucode/pctl.h
+#define P_UPCTL_DTUCFG_ADDR 		APB_REG_ADDR(UPCTL_DTUCFG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUEAF_ADDR 0x023c 	///../ucode/pctl.h
+#define P_UPCTL_DTUEAF_ADDR 		APB_REG_ADDR(UPCTL_DTUEAF_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DTUECTL_ADDR 0x020c 	///../ucode/pctl.h
+#define P_UPCTL_DTUECTL_ADDR 		APB_REG_ADDR(UPCTL_DTUECTL_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFIODTCFG1_ADDR 0x0248 	///../ucode/pctl.h
+#define P_UPCTL_DFIODTCFG1_ADDR 		APB_REG_ADDR(UPCTL_DFIODTCFG1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITCTRLDELAY_ADDR 0x0240 	///../ucode/pctl.h
+#define P_UPCTL_DFITCTRLDELAY_ADDR 		APB_REG_ADDR(UPCTL_DFITCTRLDELAY_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFIODTRANKMAP_ADDR 0x024c 	///../ucode/pctl.h
+#define P_UPCTL_DFIODTRANKMAP_ADDR 		APB_REG_ADDR(UPCTL_DFIODTRANKMAP_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFIODTCFG_ADDR 0x0244 	///../ucode/pctl.h
+#define P_UPCTL_DFIODTCFG_ADDR 		APB_REG_ADDR(UPCTL_DFIODTCFG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITPHYWRLAT_ADDR 0x0254 	///../ucode/pctl.h
+#define P_UPCTL_DFITPHYWRLAT_ADDR 		APB_REG_ADDR(UPCTL_DFITPHYWRLAT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITPHYWRDATA_ADDR 0x0250 	///../ucode/pctl.h
+#define P_UPCTL_DFITPHYWRDATA_ADDR 		APB_REG_ADDR(UPCTL_DFITPHYWRDATA_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRDDATAEN_ADDR 0x0260 	///../ucode/pctl.h
+#define P_UPCTL_DFITRDDATAEN_ADDR 		APB_REG_ADDR(UPCTL_DFITRDDATAEN_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITPHYRDLAT_ADDR 0x0264 	///../ucode/pctl.h
+#define P_UPCTL_DFITPHYRDLAT_ADDR 		APB_REG_ADDR(UPCTL_DFITPHYRDLAT_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITREFMSKI_ADDR 0x0294 	///../ucode/pctl.h
+#define P_UPCTL_DFITREFMSKI_ADDR 		APB_REG_ADDR(UPCTL_DFITREFMSKI_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITPHYUPDTYPE0_ADDR 0x0270 	///../ucode/pctl.h
+#define P_UPCTL_DFITPHYUPDTYPE0_ADDR 		APB_REG_ADDR(UPCTL_DFITPHYUPDTYPE0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITPHYUPDTYPE1_ADDR 0x0274 	///../ucode/pctl.h
+#define P_UPCTL_DFITPHYUPDTYPE1_ADDR 		APB_REG_ADDR(UPCTL_DFITPHYUPDTYPE1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITCTRLUPDDLY_ADDR 0x0288 	///../ucode/pctl.h
+#define P_UPCTL_DFITCTRLUPDDLY_ADDR 		APB_REG_ADDR(UPCTL_DFITCTRLUPDDLY_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITPHYUPDTYPE2_ADDR 0x0278 	///../ucode/pctl.h
+#define P_UPCTL_DFITPHYUPDTYPE2_ADDR 		APB_REG_ADDR(UPCTL_DFITPHYUPDTYPE2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITCTRLUPDMIN_ADDR 0x0280 	///../ucode/pctl.h
+#define P_UPCTL_DFITCTRLUPDMIN_ADDR 		APB_REG_ADDR(UPCTL_DFITCTRLUPDMIN_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITPHYUPDTYPE3_ADDR 0x027c 	///../ucode/pctl.h
+#define P_UPCTL_DFITPHYUPDTYPE3_ADDR 		APB_REG_ADDR(UPCTL_DFITPHYUPDTYPE3_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFIUPDCFG_ADDR 0x0290 	///../ucode/pctl.h
+#define P_UPCTL_DFIUPDCFG_ADDR 		APB_REG_ADDR(UPCTL_DFIUPDCFG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITCTRLUPDMAX_ADDR 0x0284 	///../ucode/pctl.h
+#define P_UPCTL_DFITCTRLUPDMAX_ADDR 		APB_REG_ADDR(UPCTL_DFITCTRLUPDMAX_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITCTRLUPDI_ADDR 0x0298 	///../ucode/pctl.h
+#define P_UPCTL_DFITCTRLUPDI_ADDR 		APB_REG_ADDR(UPCTL_DFITCTRLUPDI_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLEN_ADDR 0x02b8 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLEN_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLEN_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRSTAT0_ADDR 0x02b0 	///../ucode/pctl.h
+#define P_UPCTL_DFITRSTAT0_ADDR 		APB_REG_ADDR(UPCTL_DFITRSTAT0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRWRLVLEN_ADDR 0x02b4 	///../ucode/pctl.h
+#define P_UPCTL_DFITRWRLVLEN_ADDR 		APB_REG_ADDR(UPCTL_DFITRWRLVLEN_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRCFG0_ADDR 0x02ac 	///../ucode/pctl.h
+#define P_UPCTL_DFITRCFG0_ADDR 		APB_REG_ADDR(UPCTL_DFITRCFG0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLGATEEN_ADDR 0x02bc 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLGATEEN_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLGATEEN_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFISTSTAT0_ADDR 0x02c0 	///../ucode/pctl.h
+#define P_UPCTL_DFISTSTAT0_ADDR 		APB_REG_ADDR(UPCTL_DFISTSTAT0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFISTPARLOG_ADDR 0x02e0 	///../ucode/pctl.h
+#define P_UPCTL_DFISTPARLOG_ADDR 		APB_REG_ADDR(UPCTL_DFISTPARLOG_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITDRAMCLKEN_ADDR 0x02d0 	///../ucode/pctl.h
+#define P_UPCTL_DFITDRAMCLKEN_ADDR 		APB_REG_ADDR(UPCTL_DFITDRAMCLKEN_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFISTPARCLR_ADDR 0x02dc 	///../ucode/pctl.h
+#define P_UPCTL_DFISTPARCLR_ADDR 		APB_REG_ADDR(UPCTL_DFISTPARCLR_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFISTCFG0_ADDR 0x02c4 	///../ucode/pctl.h
+#define P_UPCTL_DFISTCFG0_ADDR 		APB_REG_ADDR(UPCTL_DFISTCFG0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFISTCFG1_ADDR 0x02c8 	///../ucode/pctl.h
+#define P_UPCTL_DFISTCFG1_ADDR 		APB_REG_ADDR(UPCTL_DFISTCFG1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFISTCFG2_ADDR 0x02d8 	///../ucode/pctl.h
+#define P_UPCTL_DFISTCFG2_ADDR 		APB_REG_ADDR(UPCTL_DFISTCFG2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITDRAMCLKDIS_ADDR 0x02d4 	///../ucode/pctl.h
+#define P_UPCTL_DFITDRAMCLKDIS_ADDR 		APB_REG_ADDR(UPCTL_DFITDRAMCLKDIS_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFILPCFG0_ADDR 0x02f0 	///../ucode/pctl.h
+#define P_UPCTL_DFILPCFG0_ADDR 		APB_REG_ADDR(UPCTL_DFILPCFG0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRWRLVLDELAY0_ADDR 0x0318 	///../ucode/pctl.h
+#define P_UPCTL_DFITRWRLVLDELAY0_ADDR 		APB_REG_ADDR(UPCTL_DFITRWRLVLDELAY0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRWRLVLDELAY1_ADDR 0x031c 	///../ucode/pctl.h
+#define P_UPCTL_DFITRWRLVLDELAY1_ADDR 		APB_REG_ADDR(UPCTL_DFITRWRLVLDELAY1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRWRLVLDELAY2_ADDR 0x0320 	///../ucode/pctl.h
+#define P_UPCTL_DFITRWRLVLDELAY2_ADDR 		APB_REG_ADDR(UPCTL_DFITRWRLVLDELAY2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLRESP0_ADDR 0x030c 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLRESP0_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLRESP0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLRESP1_ADDR 0x0310 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLRESP1_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLRESP1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLRESP2_ADDR 0x0314 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLRESP2_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLRESP2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRWRLVLRESP0_ADDR 0x0300 	///../ucode/pctl.h
+#define P_UPCTL_DFITRWRLVLRESP0_ADDR 		APB_REG_ADDR(UPCTL_DFITRWRLVLRESP0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLDELAY0_ADDR 0x0324 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLDELAY0_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLDELAY0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLDELAY1_ADDR 0x0328 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLDELAY1_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLDELAY1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRWRLVLRESP1_ADDR 0x0304 	///../ucode/pctl.h
+#define P_UPCTL_DFITRWRLVLRESP1_ADDR 		APB_REG_ADDR(UPCTL_DFITRWRLVLRESP1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLDELAY2_ADDR 0x032c 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLDELAY2_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLDELAY2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRWRLVLRESP2_ADDR 0x0308 	///../ucode/pctl.h
+#define P_UPCTL_DFITRWRLVLRESP2_ADDR 		APB_REG_ADDR(UPCTL_DFITRWRLVLRESP2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLGATEDELAY0_ADDR 0x0330 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLGATEDELAY0_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLGATEDELAY0_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRCMD_ADDR 0x033c 	///../ucode/pctl.h
+#define P_UPCTL_DFITRCMD_ADDR 		APB_REG_ADDR(UPCTL_DFITRCMD_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLGATEDELAY1_ADDR 0x0334 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLGATEDELAY1_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLGATEDELAY1_ADDR) 	///../ucode/pctl.h
+#define UPCTL_DFITRRDLVLGATEDELAY2_ADDR 0x0338 	///../ucode/pctl.h
+#define P_UPCTL_DFITRRDLVLGATEDELAY2_ADDR 		APB_REG_ADDR(UPCTL_DFITRRDLVLGATEDELAY2_ADDR) 	///../ucode/pctl.h
+#define UPCTL_IPTR_ADDR 0x03fc 	///../ucode/pctl.h
+#define P_UPCTL_IPTR_ADDR 		APB_REG_ADDR(UPCTL_IPTR_ADDR) 	///../ucode/pctl.h
+#define UPCTL_IPVR_ADDR 0x03f8 	///../ucode/pctl.h
+#define P_UPCTL_IPVR_ADDR 		APB_REG_ADDR(UPCTL_IPVR_ADDR) 	///../ucode/pctl.h
+#define PUB_RIDR_ADDR 0x1000 	///../ucode/pctl.h
+#define P_PUB_RIDR_ADDR 		APB_REG_ADDR(PUB_RIDR_ADDR) 	///../ucode/pctl.h
+#define PUB_PIR_ADDR 0x1004 	///../ucode/pctl.h
+#define P_PUB_PIR_ADDR 		APB_REG_ADDR(PUB_PIR_ADDR) 	///../ucode/pctl.h
+#define PUB_PGCR_ADDR 0x1008 	///../ucode/pctl.h
+#define P_PUB_PGCR_ADDR 		APB_REG_ADDR(PUB_PGCR_ADDR) 	///../ucode/pctl.h
+#define PUB_PGSR_ADDR 0x100c 	///../ucode/pctl.h
+#define P_PUB_PGSR_ADDR 		APB_REG_ADDR(PUB_PGSR_ADDR) 	///../ucode/pctl.h
+#define PUB_DLLGCR_ADDR 0x1010 	///../ucode/pctl.h
+#define P_PUB_DLLGCR_ADDR 		APB_REG_ADDR(PUB_DLLGCR_ADDR) 	///../ucode/pctl.h
+#define PUB_ACDLLCR_ADDR 0x1014 	///../ucode/pctl.h
+#define P_PUB_ACDLLCR_ADDR 		APB_REG_ADDR(PUB_ACDLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_PTR0_ADDR 0x1018 	///../ucode/pctl.h
+#define P_PUB_PTR0_ADDR 		APB_REG_ADDR(PUB_PTR0_ADDR) 	///../ucode/pctl.h
+#define PUB_PTR1_ADDR 0x101c 	///../ucode/pctl.h
+#define P_PUB_PTR1_ADDR 		APB_REG_ADDR(PUB_PTR1_ADDR) 	///../ucode/pctl.h
+#define PUB_PTR2_ADDR 0x1020 	///../ucode/pctl.h
+#define P_PUB_PTR2_ADDR 		APB_REG_ADDR(PUB_PTR2_ADDR) 	///../ucode/pctl.h
+#define PUB_ACIOCR_ADDR 0x1024 	///../ucode/pctl.h
+#define P_PUB_ACIOCR_ADDR 		APB_REG_ADDR(PUB_ACIOCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DXCCR_ADDR 0x1028 	///../ucode/pctl.h
+#define P_PUB_DXCCR_ADDR 		APB_REG_ADDR(PUB_DXCCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DSGCR_ADDR 0x102c 	///../ucode/pctl.h
+#define P_PUB_DSGCR_ADDR 		APB_REG_ADDR(PUB_DSGCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DCR_ADDR 0x1030 	///../ucode/pctl.h
+#define P_PUB_DCR_ADDR 		APB_REG_ADDR(PUB_DCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DTPR0_ADDR 0x1034 	///../ucode/pctl.h
+#define P_PUB_DTPR0_ADDR 		APB_REG_ADDR(PUB_DTPR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DTPR1_ADDR 0x1038 	///../ucode/pctl.h
+#define P_PUB_DTPR1_ADDR 		APB_REG_ADDR(PUB_DTPR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DTPR2_ADDR 0x103c 	///../ucode/pctl.h
+#define P_PUB_DTPR2_ADDR 		APB_REG_ADDR(PUB_DTPR2_ADDR) 	///../ucode/pctl.h
+#define PUB_MR0_ADDR 0x1040 	///../ucode/pctl.h
+#define P_PUB_MR0_ADDR 		APB_REG_ADDR(PUB_MR0_ADDR) 	///../ucode/pctl.h
+#define PUB_MR1_ADDR 0x1044 	///../ucode/pctl.h
+#define P_PUB_MR1_ADDR 		APB_REG_ADDR(PUB_MR1_ADDR) 	///../ucode/pctl.h
+#define PUB_MR2_ADDR 0x1048 	///../ucode/pctl.h
+#define P_PUB_MR2_ADDR 		APB_REG_ADDR(PUB_MR2_ADDR) 	///../ucode/pctl.h
+#define PUB_MR3_ADDR 0x104c 	///../ucode/pctl.h
+#define P_PUB_MR3_ADDR 		APB_REG_ADDR(PUB_MR3_ADDR) 	///../ucode/pctl.h
+#define PUB_ODTCR_ADDR 0x1050 	///../ucode/pctl.h
+#define P_PUB_ODTCR_ADDR 		APB_REG_ADDR(PUB_ODTCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DTAR_ADDR 0x1054 	///../ucode/pctl.h
+#define P_PUB_DTAR_ADDR 		APB_REG_ADDR(PUB_DTAR_ADDR) 	///../ucode/pctl.h
+#define PUB_DTDR0_ADDR 0x1058 	///../ucode/pctl.h
+#define P_PUB_DTDR0_ADDR 		APB_REG_ADDR(PUB_DTDR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DTDR1_ADDR 0x105c 	///../ucode/pctl.h
+#define P_PUB_DTDR1_ADDR 		APB_REG_ADDR(PUB_DTDR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DCUAR_ADDR 0x10c0 	///../ucode/pctl.h
+#define P_PUB_DCUAR_ADDR 		APB_REG_ADDR(PUB_DCUAR_ADDR) 	///../ucode/pctl.h
+#define PUB_DCUDR_ADDR 0x10c4 	///../ucode/pctl.h
+#define P_PUB_DCUDR_ADDR 		APB_REG_ADDR(PUB_DCUDR_ADDR) 	///../ucode/pctl.h
+#define PUB_DCURR_ADDR 0x10c8 	///../ucode/pctl.h
+#define P_PUB_DCURR_ADDR 		APB_REG_ADDR(PUB_DCURR_ADDR) 	///../ucode/pctl.h
+#define PUB_DCULR_ADDR 0x10cc 	///../ucode/pctl.h
+#define P_PUB_DCULR_ADDR 		APB_REG_ADDR(PUB_DCULR_ADDR) 	///../ucode/pctl.h
+#define PUB_DCUGCR_ADDR 0x10d0 	///../ucode/pctl.h
+#define P_PUB_DCUGCR_ADDR 		APB_REG_ADDR(PUB_DCUGCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DCUTPR_ADDR 0x10d4 	///../ucode/pctl.h
+#define P_PUB_DCUTPR_ADDR 		APB_REG_ADDR(PUB_DCUTPR_ADDR) 	///../ucode/pctl.h
+#define PUB_DCUSR0_ADDR 0x10d8 	///../ucode/pctl.h
+#define P_PUB_DCUSR0_ADDR 		APB_REG_ADDR(PUB_DCUSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DCUSR1_ADDR 0x10dc 	///../ucode/pctl.h
+#define P_PUB_DCUSR1_ADDR 		APB_REG_ADDR(PUB_DCUSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTRR_ADDR 0x1100 	///../ucode/pctl.h
+#define P_PUB_BISTRR_ADDR 		APB_REG_ADDR(PUB_BISTRR_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTMSKR0_ADDR 0x1104 	///../ucode/pctl.h
+#define P_PUB_BISTMSKR0_ADDR 		APB_REG_ADDR(PUB_BISTMSKR0_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTMSKR1_ADDR 0x1108 	///../ucode/pctl.h
+#define P_PUB_BISTMSKR1_ADDR 		APB_REG_ADDR(PUB_BISTMSKR1_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTWCR_ADDR 0x110c 	///../ucode/pctl.h
+#define P_PUB_BISTWCR_ADDR 		APB_REG_ADDR(PUB_BISTWCR_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTLSR_ADDR 0x1110 	///../ucode/pctl.h
+#define P_PUB_BISTLSR_ADDR 		APB_REG_ADDR(PUB_BISTLSR_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTAR0_ADDR 0x1114 	///../ucode/pctl.h
+#define P_PUB_BISTAR0_ADDR 		APB_REG_ADDR(PUB_BISTAR0_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTAR1_ADDR 0x1118 	///../ucode/pctl.h
+#define P_PUB_BISTAR1_ADDR 		APB_REG_ADDR(PUB_BISTAR1_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTAR2_ADDR 0x111c 	///../ucode/pctl.h
+#define P_PUB_BISTAR2_ADDR 		APB_REG_ADDR(PUB_BISTAR2_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTUDPR_ADDR 0x1120 	///../ucode/pctl.h
+#define P_PUB_BISTUDPR_ADDR 		APB_REG_ADDR(PUB_BISTUDPR_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTGSR_ADDR 0x1124 	///../ucode/pctl.h
+#define P_PUB_BISTGSR_ADDR 		APB_REG_ADDR(PUB_BISTGSR_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTWER_ADDR 0x1128 	///../ucode/pctl.h
+#define P_PUB_BISTWER_ADDR 		APB_REG_ADDR(PUB_BISTWER_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTBER0_ADDR 0x112c 	///../ucode/pctl.h
+#define P_PUB_BISTBER0_ADDR 		APB_REG_ADDR(PUB_BISTBER0_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTBER1_ADDR 0x1130 	///../ucode/pctl.h
+#define P_PUB_BISTBER1_ADDR 		APB_REG_ADDR(PUB_BISTBER1_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTBER2_ADDR 0x1134 	///../ucode/pctl.h
+#define P_PUB_BISTBER2_ADDR 		APB_REG_ADDR(PUB_BISTBER2_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTWCSR_ADDR 0x1138 	///../ucode/pctl.h
+#define P_PUB_BISTWCSR_ADDR 		APB_REG_ADDR(PUB_BISTWCSR_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTFWR0_ADDR 0x113c 	///../ucode/pctl.h
+#define P_PUB_BISTFWR0_ADDR 		APB_REG_ADDR(PUB_BISTFWR0_ADDR) 	///../ucode/pctl.h
+#define PUB_BISTFWR1_ADDR 0x1140 	///../ucode/pctl.h
+#define P_PUB_BISTFWR1_ADDR 		APB_REG_ADDR(PUB_BISTFWR1_ADDR) 	///../ucode/pctl.h
+#define PUB_GPR0_ADDR 0x1178 	///../ucode/pctl.h
+#define P_PUB_GPR0_ADDR 		APB_REG_ADDR(PUB_GPR0_ADDR) 	///../ucode/pctl.h
+#define PUB_GPR1_ADDR 0x117c 	///../ucode/pctl.h
+#define P_PUB_GPR1_ADDR 		APB_REG_ADDR(PUB_GPR1_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ0CR0_ADDR 0x1180 	///../ucode/pctl.h
+#define P_PUB_ZQ0CR0_ADDR 		APB_REG_ADDR(PUB_ZQ0CR0_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ0CR1_ADDR 0x1184 	///../ucode/pctl.h
+#define P_PUB_ZQ0CR1_ADDR 		APB_REG_ADDR(PUB_ZQ0CR1_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ0SR0_ADDR 0x1188 	///../ucode/pctl.h
+#define P_PUB_ZQ0SR0_ADDR 		APB_REG_ADDR(PUB_ZQ0SR0_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ0SR1_ADDR 0x118c 	///../ucode/pctl.h
+#define P_PUB_ZQ0SR1_ADDR 		APB_REG_ADDR(PUB_ZQ0SR1_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ1CR0_ADDR 0x1190 	///../ucode/pctl.h
+#define P_PUB_ZQ1CR0_ADDR 		APB_REG_ADDR(PUB_ZQ1CR0_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ1CR1_ADDR 0x1194 	///../ucode/pctl.h
+#define P_PUB_ZQ1CR1_ADDR 		APB_REG_ADDR(PUB_ZQ1CR1_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ1SR0_ADDR 0x1198 	///../ucode/pctl.h
+#define P_PUB_ZQ1SR0_ADDR 		APB_REG_ADDR(PUB_ZQ1SR0_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ1SR1_ADDR 0x119c 	///../ucode/pctl.h
+#define P_PUB_ZQ1SR1_ADDR 		APB_REG_ADDR(PUB_ZQ1SR1_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ2CR0_ADDR 0x11a0 	///../ucode/pctl.h
+#define P_PUB_ZQ2CR0_ADDR 		APB_REG_ADDR(PUB_ZQ2CR0_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ2CR1_ADDR 0x11a4 	///../ucode/pctl.h
+#define P_PUB_ZQ2CR1_ADDR 		APB_REG_ADDR(PUB_ZQ2CR1_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ2SR0_ADDR 0x11a8 	///../ucode/pctl.h
+#define P_PUB_ZQ2SR0_ADDR 		APB_REG_ADDR(PUB_ZQ2SR0_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ2SR1_ADDR 0x11ac 	///../ucode/pctl.h
+#define P_PUB_ZQ2SR1_ADDR 		APB_REG_ADDR(PUB_ZQ2SR1_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ3CR0_ADDR 0x11b0 	///../ucode/pctl.h
+#define P_PUB_ZQ3CR0_ADDR 		APB_REG_ADDR(PUB_ZQ3CR0_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ3CR1_ADDR 0x11b4 	///../ucode/pctl.h
+#define P_PUB_ZQ3CR1_ADDR 		APB_REG_ADDR(PUB_ZQ3CR1_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ3SR0_ADDR 0x11b8 	///../ucode/pctl.h
+#define P_PUB_ZQ3SR0_ADDR 		APB_REG_ADDR(PUB_ZQ3SR0_ADDR) 	///../ucode/pctl.h
+#define PUB_ZQ3SR1_ADDR 0x11bc 	///../ucode/pctl.h
+#define P_PUB_ZQ3SR1_ADDR 		APB_REG_ADDR(PUB_ZQ3SR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX0GCR_ADDR 0x11c0 	///../ucode/pctl.h
+#define P_PUB_DX0GCR_ADDR 		APB_REG_ADDR(PUB_DX0GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX0GSR0_ADDR 0x11c4 	///../ucode/pctl.h
+#define P_PUB_DX0GSR0_ADDR 		APB_REG_ADDR(PUB_DX0GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX0GSR1_ADDR 0x11c8 	///../ucode/pctl.h
+#define P_PUB_DX0GSR1_ADDR 		APB_REG_ADDR(PUB_DX0GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX0DLLCR_ADDR 0x11cc 	///../ucode/pctl.h
+#define P_PUB_DX0DLLCR_ADDR 		APB_REG_ADDR(PUB_DX0DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX0DQTR_ADDR 0x11d0 	///../ucode/pctl.h
+#define P_PUB_DX0DQTR_ADDR 		APB_REG_ADDR(PUB_DX0DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX0DQSTR_ADDR 0x11d4 	///../ucode/pctl.h
+#define P_PUB_DX0DQSTR_ADDR 		APB_REG_ADDR(PUB_DX0DQSTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX1GCR_ADDR 0x1200 	///../ucode/pctl.h
+#define P_PUB_DX1GCR_ADDR 		APB_REG_ADDR(PUB_DX1GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX1GSR0_ADDR 0x1204 	///../ucode/pctl.h
+#define P_PUB_DX1GSR0_ADDR 		APB_REG_ADDR(PUB_DX1GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX1GSR1_ADDR 0x1208 	///../ucode/pctl.h
+#define P_PUB_DX1GSR1_ADDR 		APB_REG_ADDR(PUB_DX1GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX1DLLCR_ADDR 0x120c 	///../ucode/pctl.h
+#define P_PUB_DX1DLLCR_ADDR 		APB_REG_ADDR(PUB_DX1DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX1DQTR_ADDR 0x1210 	///../ucode/pctl.h
+#define P_PUB_DX1DQTR_ADDR 		APB_REG_ADDR(PUB_DX1DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX1DQSTR_ADDR 0x1214 	///../ucode/pctl.h
+#define P_PUB_DX1DQSTR_ADDR 		APB_REG_ADDR(PUB_DX1DQSTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX2GCR_ADDR 0x1240 	///../ucode/pctl.h
+#define P_PUB_DX2GCR_ADDR 		APB_REG_ADDR(PUB_DX2GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX2GSR0_ADDR 0x1244 	///../ucode/pctl.h
+#define P_PUB_DX2GSR0_ADDR 		APB_REG_ADDR(PUB_DX2GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX2GSR1_ADDR 0x1248 	///../ucode/pctl.h
+#define P_PUB_DX2GSR1_ADDR 		APB_REG_ADDR(PUB_DX2GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX2DLLCR_ADDR 0x124c 	///../ucode/pctl.h
+#define P_PUB_DX2DLLCR_ADDR 		APB_REG_ADDR(PUB_DX2DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX2DQTR_ADDR 0x1250 	///../ucode/pctl.h
+#define P_PUB_DX2DQTR_ADDR 		APB_REG_ADDR(PUB_DX2DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX2DQSTR_ADDR 0x1254 	///../ucode/pctl.h
+#define P_PUB_DX2DQSTR_ADDR 		APB_REG_ADDR(PUB_DX2DQSTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX3GCR_ADDR 0x1280 	///../ucode/pctl.h
+#define P_PUB_DX3GCR_ADDR 		APB_REG_ADDR(PUB_DX3GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX3GSR0_ADDR 0x1284 	///../ucode/pctl.h
+#define P_PUB_DX3GSR0_ADDR 		APB_REG_ADDR(PUB_DX3GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX3GSR1_ADDR 0x1288 	///../ucode/pctl.h
+#define P_PUB_DX3GSR1_ADDR 		APB_REG_ADDR(PUB_DX3GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX3DLLCR_ADDR 0x128c 	///../ucode/pctl.h
+#define P_PUB_DX3DLLCR_ADDR 		APB_REG_ADDR(PUB_DX3DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX3DQTR_ADDR 0x1290 	///../ucode/pctl.h
+#define P_PUB_DX3DQTR_ADDR 		APB_REG_ADDR(PUB_DX3DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX3DQSTR_ADDR 0x1294 	///../ucode/pctl.h
+#define P_PUB_DX3DQSTR_ADDR 		APB_REG_ADDR(PUB_DX3DQSTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX4GCR_ADDR 0x12c0 	///../ucode/pctl.h
+#define P_PUB_DX4GCR_ADDR 		APB_REG_ADDR(PUB_DX4GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX4GSR0_ADDR 0x12c4 	///../ucode/pctl.h
+#define P_PUB_DX4GSR0_ADDR 		APB_REG_ADDR(PUB_DX4GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX4GSR1_ADDR 0x12c8 	///../ucode/pctl.h
+#define P_PUB_DX4GSR1_ADDR 		APB_REG_ADDR(PUB_DX4GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX4DLLCR_ADDR 0x12cc 	///../ucode/pctl.h
+#define P_PUB_DX4DLLCR_ADDR 		APB_REG_ADDR(PUB_DX4DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX4DQTR_ADDR 0x12d0 	///../ucode/pctl.h
+#define P_PUB_DX4DQTR_ADDR 		APB_REG_ADDR(PUB_DX4DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX4DQSTR_ADDR 0x12d4 	///../ucode/pctl.h
+#define P_PUB_DX4DQSTR_ADDR 		APB_REG_ADDR(PUB_DX4DQSTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX5GCR_ADDR 0x1300 	///../ucode/pctl.h
+#define P_PUB_DX5GCR_ADDR 		APB_REG_ADDR(PUB_DX5GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX5GSR0_ADDR 0x1304 	///../ucode/pctl.h
+#define P_PUB_DX5GSR0_ADDR 		APB_REG_ADDR(PUB_DX5GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX5GSR1_ADDR 0x1308 	///../ucode/pctl.h
+#define P_PUB_DX5GSR1_ADDR 		APB_REG_ADDR(PUB_DX5GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX5DLLCR_ADDR 0x130c 	///../ucode/pctl.h
+#define P_PUB_DX5DLLCR_ADDR 		APB_REG_ADDR(PUB_DX5DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX5DQTR_ADDR 0x1310 	///../ucode/pctl.h
+#define P_PUB_DX5DQTR_ADDR 		APB_REG_ADDR(PUB_DX5DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX5DQSTR_ADDR 0x1314 	///../ucode/pctl.h
+#define P_PUB_DX5DQSTR_ADDR 		APB_REG_ADDR(PUB_DX5DQSTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX6GCR_ADDR 0x1340 	///../ucode/pctl.h
+#define P_PUB_DX6GCR_ADDR 		APB_REG_ADDR(PUB_DX6GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX6GSR0_ADDR 0x1344 	///../ucode/pctl.h
+#define P_PUB_DX6GSR0_ADDR 		APB_REG_ADDR(PUB_DX6GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX6GSR1_ADDR 0x1348 	///../ucode/pctl.h
+#define P_PUB_DX6GSR1_ADDR 		APB_REG_ADDR(PUB_DX6GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX6DLLCR_ADDR 0x134c 	///../ucode/pctl.h
+#define P_PUB_DX6DLLCR_ADDR 		APB_REG_ADDR(PUB_DX6DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX6DQTR_ADDR 0x1350 	///../ucode/pctl.h
+#define P_PUB_DX6DQTR_ADDR 		APB_REG_ADDR(PUB_DX6DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX6DQSTR_ADDR 0x1354 	///../ucode/pctl.h
+#define P_PUB_DX6DQSTR_ADDR 		APB_REG_ADDR(PUB_DX6DQSTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX7GCR_ADDR 0x1380 	///../ucode/pctl.h
+#define P_PUB_DX7GCR_ADDR 		APB_REG_ADDR(PUB_DX7GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX7GSR0_ADDR 0x1384 	///../ucode/pctl.h
+#define P_PUB_DX7GSR0_ADDR 		APB_REG_ADDR(PUB_DX7GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX7GSR1_ADDR 0x1388 	///../ucode/pctl.h
+#define P_PUB_DX7GSR1_ADDR 		APB_REG_ADDR(PUB_DX7GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX7DLLCR_ADDR 0x138c 	///../ucode/pctl.h
+#define P_PUB_DX7DLLCR_ADDR 		APB_REG_ADDR(PUB_DX7DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX7DQTR_ADDR 0x1390 	///../ucode/pctl.h
+#define P_PUB_DX7DQTR_ADDR 		APB_REG_ADDR(PUB_DX7DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX7DQSTR_ADDR 0x1394 	///../ucode/pctl.h
+#define P_PUB_DX7DQSTR_ADDR 		APB_REG_ADDR(PUB_DX7DQSTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX8GCR_ADDR 0x13c0 	///../ucode/pctl.h
+#define P_PUB_DX8GCR_ADDR 		APB_REG_ADDR(PUB_DX8GCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX8GSR0_ADDR 0x13c4 	///../ucode/pctl.h
+#define P_PUB_DX8GSR0_ADDR 		APB_REG_ADDR(PUB_DX8GSR0_ADDR) 	///../ucode/pctl.h
+#define PUB_DX8GSR1_ADDR 0x13c8 	///../ucode/pctl.h
+#define P_PUB_DX8GSR1_ADDR 		APB_REG_ADDR(PUB_DX8GSR1_ADDR) 	///../ucode/pctl.h
+#define PUB_DX8DLLCR_ADDR 0x13cc 	///../ucode/pctl.h
+#define P_PUB_DX8DLLCR_ADDR 		APB_REG_ADDR(PUB_DX8DLLCR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX8DQTR_ADDR 0x13d0 	///../ucode/pctl.h
+#define P_PUB_DX8DQTR_ADDR 		APB_REG_ADDR(PUB_DX8DQTR_ADDR) 	///../ucode/pctl.h
+#define PUB_DX8DQSTR_ADDR 0x13d4 	///../ucode/pctl.h
+#define P_PUB_DX8DQSTR_ADDR 		APB_REG_ADDR(PUB_DX8DQSTR_ADDR) 	///../ucode/pctl.h
+#define MMC_DDR_CTRL 0x6000 	///../ucode/pctl.h
+#define P_MMC_DDR_CTRL 		APB_REG_ADDR(MMC_DDR_CTRL) 	///../ucode/pctl.h
+#define MMC_ARB_CTRL 0x6008 	///../ucode/pctl.h
+#define P_MMC_ARB_CTRL 		APB_REG_ADDR(MMC_ARB_CTRL) 	///../ucode/pctl.h
+#define MMC_ARB_CTRL1 0x600c 	///../ucode/pctl.h
+#define P_MMC_ARB_CTRL1 		APB_REG_ADDR(MMC_ARB_CTRL1) 	///../ucode/pctl.h
+#define MMC_QOS0_CTRL 0x6010 	///../ucode/pctl.h
+#define P_MMC_QOS0_CTRL 		APB_REG_ADDR(MMC_QOS0_CTRL) 	///../ucode/pctl.h
+#define MMC_QOS0_MAX 0x6014 	///../ucode/pctl.h
+#define P_MMC_QOS0_MAX 		APB_REG_ADDR(MMC_QOS0_MAX) 	///../ucode/pctl.h
+#define MMC_QOS0_MIN 0x6018 	///../ucode/pctl.h
+#define P_MMC_QOS0_MIN 		APB_REG_ADDR(MMC_QOS0_MIN) 	///../ucode/pctl.h
+#define MMC_QOS0_LIMIT 0x601c 	///../ucode/pctl.h
+#define P_MMC_QOS0_LIMIT 		APB_REG_ADDR(MMC_QOS0_LIMIT) 	///../ucode/pctl.h
+#define MMC_QOS0_STOP 0x6020 	///../ucode/pctl.h
+#define P_MMC_QOS0_STOP 		APB_REG_ADDR(MMC_QOS0_STOP) 	///../ucode/pctl.h
+#define MMC_QOS1_CTRL 0x6024 	///../ucode/pctl.h
+#define P_MMC_QOS1_CTRL 		APB_REG_ADDR(MMC_QOS1_CTRL) 	///../ucode/pctl.h
+#define MMC_QOS1_MAX 0x6028 	///../ucode/pctl.h
+#define P_MMC_QOS1_MAX 		APB_REG_ADDR(MMC_QOS1_MAX) 	///../ucode/pctl.h
+#define MMC_QOS1_MIN 0x602c 	///../ucode/pctl.h
+#define P_MMC_QOS1_MIN 		APB_REG_ADDR(MMC_QOS1_MIN) 	///../ucode/pctl.h
+#define MMC_QOS1_STOP 0x6030 	///../ucode/pctl.h
+#define P_MMC_QOS1_STOP 		APB_REG_ADDR(MMC_QOS1_STOP) 	///../ucode/pctl.h
+#define MMC_QOS1_LIMIT 0x6034 	///../ucode/pctl.h
+#define P_MMC_QOS1_LIMIT 		APB_REG_ADDR(MMC_QOS1_LIMIT) 	///../ucode/pctl.h
+#define MMC_QOS2_CTRL 0x6038 	///../ucode/pctl.h
+#define P_MMC_QOS2_CTRL 		APB_REG_ADDR(MMC_QOS2_CTRL) 	///../ucode/pctl.h
+#define MMC_QOS2_MAX 0x603c 	///../ucode/pctl.h
+#define P_MMC_QOS2_MAX 		APB_REG_ADDR(MMC_QOS2_MAX) 	///../ucode/pctl.h
+#define MMC_QOS2_MIN 0x6040 	///../ucode/pctl.h
+#define P_MMC_QOS2_MIN 		APB_REG_ADDR(MMC_QOS2_MIN) 	///../ucode/pctl.h
+#define MMC_QOS2_STOP 0x6044 	///../ucode/pctl.h
+#define P_MMC_QOS2_STOP 		APB_REG_ADDR(MMC_QOS2_STOP) 	///../ucode/pctl.h
+#define MMC_QOS2_LIMIT 0x6048 	///../ucode/pctl.h
+#define P_MMC_QOS2_LIMIT 		APB_REG_ADDR(MMC_QOS2_LIMIT) 	///../ucode/pctl.h
+#define MMC_QOS3_CTRL 0x604c 	///../ucode/pctl.h
+#define P_MMC_QOS3_CTRL 		APB_REG_ADDR(MMC_QOS3_CTRL) 	///../ucode/pctl.h
+#define MMC_QOS3_MAX 0x6050 	///../ucode/pctl.h
+#define P_MMC_QOS3_MAX 		APB_REG_ADDR(MMC_QOS3_MAX) 	///../ucode/pctl.h
+#define MMC_QOS3_MIN 0x6054 	///../ucode/pctl.h
+#define P_MMC_QOS3_MIN 		APB_REG_ADDR(MMC_QOS3_MIN) 	///../ucode/pctl.h
+#define MMC_QOS3_STOP 0x6058 	///../ucode/pctl.h
+#define P_MMC_QOS3_STOP 		APB_REG_ADDR(MMC_QOS3_STOP) 	///../ucode/pctl.h
+#define MMC_QOS3_LIMIT 0x605c 	///../ucode/pctl.h
+#define P_MMC_QOS3_LIMIT 		APB_REG_ADDR(MMC_QOS3_LIMIT) 	///../ucode/pctl.h
+#define MMC_QOS4_CTRL 0x6060 	///../ucode/pctl.h
+#define P_MMC_QOS4_CTRL 		APB_REG_ADDR(MMC_QOS4_CTRL) 	///../ucode/pctl.h
+#define MMC_QOS4_MAX 0x6064 	///../ucode/pctl.h
+#define P_MMC_QOS4_MAX 		APB_REG_ADDR(MMC_QOS4_MAX) 	///../ucode/pctl.h
+#define MMC_QOS4_MIN 0x6068 	///../ucode/pctl.h
+#define P_MMC_QOS4_MIN 		APB_REG_ADDR(MMC_QOS4_MIN) 	///../ucode/pctl.h
+#define MMC_QOS4_STOP 0x606c 	///../ucode/pctl.h
+#define P_MMC_QOS4_STOP 		APB_REG_ADDR(MMC_QOS4_STOP) 	///../ucode/pctl.h
+#define MMC_QOS4_LIMIT 0x6070 	///../ucode/pctl.h
+#define P_MMC_QOS4_LIMIT 		APB_REG_ADDR(MMC_QOS4_LIMIT) 	///../ucode/pctl.h
+#define MMC_QOS5_CTRL 0x6074 	///../ucode/pctl.h
+#define P_MMC_QOS5_CTRL 		APB_REG_ADDR(MMC_QOS5_CTRL) 	///../ucode/pctl.h
+#define MMC_QOS5_MAX 0x6078 	///../ucode/pctl.h
+#define P_MMC_QOS5_MAX 		APB_REG_ADDR(MMC_QOS5_MAX) 	///../ucode/pctl.h
+#define MMC_QOS5_MIN 0x607c 	///../ucode/pctl.h
+#define P_MMC_QOS5_MIN 		APB_REG_ADDR(MMC_QOS5_MIN) 	///../ucode/pctl.h
+#define MMC_QOS5_STOP 0x6080 	///../ucode/pctl.h
+#define P_MMC_QOS5_STOP 		APB_REG_ADDR(MMC_QOS5_STOP) 	///../ucode/pctl.h
+#define MMC_QOS5_LIMIT 0x6084 	///../ucode/pctl.h
+#define P_MMC_QOS5_LIMIT 		APB_REG_ADDR(MMC_QOS5_LIMIT) 	///../ucode/pctl.h
+#define MMC_QOS6_CTRL 0x6088 	///../ucode/pctl.h
+#define P_MMC_QOS6_CTRL 		APB_REG_ADDR(MMC_QOS6_CTRL) 	///../ucode/pctl.h
+#define MMC_QOS6_MAX 0x608c 	///../ucode/pctl.h
+#define P_MMC_QOS6_MAX 		APB_REG_ADDR(MMC_QOS6_MAX) 	///../ucode/pctl.h
+#define MMC_QOS6_MIN 0x6090 	///../ucode/pctl.h
+#define P_MMC_QOS6_MIN 		APB_REG_ADDR(MMC_QOS6_MIN) 	///../ucode/pctl.h
+#define MMC_QOS6_STOP 0x6094 	///../ucode/pctl.h
+#define P_MMC_QOS6_STOP 		APB_REG_ADDR(MMC_QOS6_STOP) 	///../ucode/pctl.h
+#define MMC_QOS6_LIMIT 0x6098 	///../ucode/pctl.h
+#define P_MMC_QOS6_LIMIT 		APB_REG_ADDR(MMC_QOS6_LIMIT) 	///../ucode/pctl.h
+#define MMC_QOS7_CTRL 0x609c 	///../ucode/pctl.h
+#define P_MMC_QOS7_CTRL 		APB_REG_ADDR(MMC_QOS7_CTRL) 	///../ucode/pctl.h
+#define MMC_QOS7_MAX 0x60a0 	///../ucode/pctl.h
+#define P_MMC_QOS7_MAX 		APB_REG_ADDR(MMC_QOS7_MAX) 	///../ucode/pctl.h
+#define MMC_QOS7_MIN 0x60a4 	///../ucode/pctl.h
+#define P_MMC_QOS7_MIN 		APB_REG_ADDR(MMC_QOS7_MIN) 	///../ucode/pctl.h
+#define MMC_QOS7_STOP 0x60a8 	///../ucode/pctl.h
+#define P_MMC_QOS7_STOP 		APB_REG_ADDR(MMC_QOS7_STOP) 	///../ucode/pctl.h
+#define MMC_QOS7_LIMIT 0x60ac 	///../ucode/pctl.h
+#define P_MMC_QOS7_LIMIT 		APB_REG_ADDR(MMC_QOS7_LIMIT) 	///../ucode/pctl.h
+#define MMC_QOSMON_CTRL 0x60b0 	///../ucode/pctl.h
+#define P_MMC_QOSMON_CTRL 		APB_REG_ADDR(MMC_QOSMON_CTRL) 	///../ucode/pctl.h
+#define MMC_QOSMON_TIM 0x60b4 	///../ucode/pctl.h
+#define P_MMC_QOSMON_TIM 		APB_REG_ADDR(MMC_QOSMON_TIM) 	///../ucode/pctl.h
+#define MMC_QOSMON_MST 0x60b8 	///../ucode/pctl.h
+#define P_MMC_QOSMON_MST 		APB_REG_ADDR(MMC_QOSMON_MST) 	///../ucode/pctl.h
+#define MMC_MON_CLKCNT 0x60bc 	///../ucode/pctl.h
+#define P_MMC_MON_CLKCNT 		APB_REG_ADDR(MMC_MON_CLKCNT) 	///../ucode/pctl.h
+#define MMC_ALL_REQCNT 0x60c0 	///../ucode/pctl.h
+#define P_MMC_ALL_REQCNT 		APB_REG_ADDR(MMC_ALL_REQCNT) 	///../ucode/pctl.h
+#define MMC_ALL_GANTCNT 0x60c4 	///../ucode/pctl.h
+#define P_MMC_ALL_GANTCNT 		APB_REG_ADDR(MMC_ALL_GANTCNT) 	///../ucode/pctl.h
+#define MMC_ONE_REQCNT 0x60c8 	///../ucode/pctl.h
+#define P_MMC_ONE_REQCNT 		APB_REG_ADDR(MMC_ONE_REQCNT) 	///../ucode/pctl.h
+#define MMC_ONE_CYCLE_CNT 0x60cc 	///../ucode/pctl.h
+#define P_MMC_ONE_CYCLE_CNT 		APB_REG_ADDR(MMC_ONE_CYCLE_CNT) 	///../ucode/pctl.h
+#define MMC_ONE_DATA_CNT 0x60d0 	///../ucode/pctl.h
+#define P_MMC_ONE_DATA_CNT 		APB_REG_ADDR(MMC_ONE_DATA_CNT) 	///../ucode/pctl.h
+
+
+#ifndef CONFIG_MESON_M6C_ENHANCEMENT
+#define MMC_CHAN0_CTRL 0x6100
+#define P_MMC_CHAN0_CTRL		APB_REG_ADDR(MMC_CHAN0_CTRL)
+#define MMC_CHAN1_CTRL 0x6104
+#define P_MMC_CHAN1_CTRL		APB_REG_ADDR(MMC_CHAN1_CTRL)
+#define MMC_CHAN2_CTRL 0x6108
+#define P_MMC_CHAN2_CTRL		APB_REG_ADDR(MMC_CHAN2_CTRL)
+#define MMC_CHAN3_CTRL 0x610c
+#define P_MMC_CHAN3_CTRL		APB_REG_ADDR(MMC_CHAN3_CTRL)
+#define MMC_CHAN4_CTRL 0x6110
+#define P_MMC_CHAN4_CTRL		APB_REG_ADDR(MMC_CHAN4_CTRL)
+#define MMC_CHAN5_CTRL 0x6114
+#define P_MMC_CHAN5_CTRL		APB_REG_ADDR(MMC_CHAN5_CTRL)
+#define MMC_CHAN6_CTRL 0x6118
+#define P_MMC_CHAN6_CTRL		APB_REG_ADDR(MMC_CHAN6_CTRL)
+#define MMC_CHAN7_CTRL 0x611c
+#define P_MMC_CHAN7_CTRL		APB_REG_ADDR(MMC_CHAN7_CTRL)
+#define MMC_CHAN8_CTRL 0x6120
+#define P_MMC_CHAN8_CTRL		APB_REG_ADDR(MMC_CHAN8_CTRL)
+#define MMC_CHAN9_CTRL 0x6124
+#define P_MMC_CHAN9_CTRL		APB_REG_ADDR(MMC_CHAN9_CTRL)
+#else
+#define MMC_CHAN_CTRL0 0x6100
+#define P_MMC_CHAN_CTRL0		APB_REG_ADDR(MMC_CHAN_CTRL0)
+#define MMC_CHAN_CTRL1 0x6104
+#define P_MMC_CHAN_CTRL1		APB_REG_ADDR(MMC_CHAN_CTRL1)
+#define MMC_DDR_TIMING0 0x6128
+#define P_MMC_DDR_TIMING0		APB_REG_ADDR(MMC_DDR_TIMING0)
+#define MMC_DDR_TIMING1 0x612c
+#define P_MMC_DDR_TIMING1		APB_REG_ADDR(MMC_DDR_TIMING1)
+#define MMC_PARB_CTRL  0x6130
+#define P_MMC_PARB_CTRL			APB_REG_ADDR(MMC_PARB_CTRL)
+#define MMC_QOS7_CTRL0 0x609c
+#define P_MMC_QOS7_CTRL0		APB_REG_ADDR(MMC_QOS7_CTRL0)
+
+#endif
+
+#define DC_CAV_CTRL 0x6300 	///../ucode/pctl.h
+#define P_DC_CAV_CTRL 		APB_REG_ADDR(DC_CAV_CTRL) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_GRANT 0x6304 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_GRANT 		APB_REG_ADDR(DC_CAV_LVL3_GRANT) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_GH 0x6308 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_GH 		APB_REG_ADDR(DC_CAV_LVL3_GH) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_FLIP 0x630c 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_FLIP 		APB_REG_ADDR(DC_CAV_LVL3_FLIP) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_FH 0x6310 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_FH 		APB_REG_ADDR(DC_CAV_LVL3_FH) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_CTRL0 0x6314 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_CTRL0 		APB_REG_ADDR(DC_CAV_LVL3_CTRL0) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_CTRL1 0x6318 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_CTRL1 		APB_REG_ADDR(DC_CAV_LVL3_CTRL1) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_CTRL2 0x631c 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_CTRL2 		APB_REG_ADDR(DC_CAV_LVL3_CTRL2) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_CTRL3 0x6320 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_CTRL3 		APB_REG_ADDR(DC_CAV_LVL3_CTRL3) 	///../ucode/pctl.h
+#define DC_CAV_LUT_DATAL 0x60c0 	///../ucode/pctl.h
+#define P_DC_CAV_LUT_DATAL 		APB_REG_ADDR(DC_CAV_LUT_DATAL) 	///../ucode/pctl.h
+#define DC_CAV_LUT_DATAH 0x60c4 	///../ucode/pctl.h
+#define P_DC_CAV_LUT_DATAH 		APB_REG_ADDR(DC_CAV_LUT_DATAH) 	///../ucode/pctl.h
+#define DC_CAV_LUT_ADDR 0x60c8 	///../ucode/pctl.h
+#define P_DC_CAV_LUT_ADDR 		APB_REG_ADDR(DC_CAV_LUT_ADDR) 	///../ucode/pctl.h
+#define DC_CAV_LVL3_MODE 0x6330 	///../ucode/pctl.h
+#define P_DC_CAV_LVL3_MODE 		APB_REG_ADDR(DC_CAV_LVL3_MODE) 	///../ucode/pctl.h
+#define MMC_PROT_ADDR 0x6334 	///../ucode/pctl.h
+#define P_MMC_PROT_ADDR 		APB_REG_ADDR(MMC_PROT_ADDR) 	///../ucode/pctl.h
+#define MMC_PROT_SELH 0x6338 	///../ucode/pctl.h
+#define P_MMC_PROT_SELH 		APB_REG_ADDR(MMC_PROT_SELH) 	///../ucode/pctl.h
+#define MMC_PROT_SELL 0x633c 	///../ucode/pctl.h
+#define P_MMC_PROT_SELL 		APB_REG_ADDR(MMC_PROT_SELL) 	///../ucode/pctl.h
+#define MMC_PROT_CTL_STS 0x6340 	///../ucode/pctl.h
+#define P_MMC_PROT_CTL_STS 		APB_REG_ADDR(MMC_PROT_CTL_STS) 	///../ucode/pctl.h
+#define MMC_INT_STS 0x6344 	///../ucode/pctl.h
+#define P_MMC_INT_STS 		APB_REG_ADDR(MMC_INT_STS) 	///../ucode/pctl.h
+#define MMC_REQ0_CTRL 0x6388 	///../ucode/pctl.h
+#define P_MMC_REQ0_CTRL 		APB_REG_ADDR(MMC_REQ0_CTRL) 	///../ucode/pctl.h
+#define MMC_REQ1_CTRL 0x638c 	///../ucode/pctl.h
+#define P_MMC_REQ1_CTRL 		APB_REG_ADDR(MMC_REQ1_CTRL) 	///../ucode/pctl.h
+#define MMC_REQ2_CTRL 0x6390 	///../ucode/pctl.h
+#define P_MMC_REQ2_CTRL 		APB_REG_ADDR(MMC_REQ2_CTRL) 	///../ucode/pctl.h
+#define MMC_REQ3_CTRL 0x6394 	///../ucode/pctl.h
+#define P_MMC_REQ3_CTRL 		APB_REG_ADDR(MMC_REQ3_CTRL) 	///../ucode/pctl.h
+#define MMC_REQ4_CTRL 0x6398 	///../ucode/pctl.h
+#define P_MMC_REQ4_CTRL 		APB_REG_ADDR(MMC_REQ4_CTRL) 	///../ucode/pctl.h
+#define MMC_REQ5_CTRL 0x639c 	///../ucode/pctl.h
+#define P_MMC_REQ5_CTRL 		APB_REG_ADDR(MMC_REQ5_CTRL) 	///../ucode/pctl.h
+#define MMC_REQ6_CTRL 0x63a0 	///../ucode/pctl.h
+#define P_MMC_REQ6_CTRL 		APB_REG_ADDR(MMC_REQ6_CTRL) 	///../ucode/pctl.h
+#define MMC_REQ7_CTRL 0x63a4 	///../ucode/pctl.h
+#define P_MMC_REQ7_CTRL 		APB_REG_ADDR(MMC_REQ7_CTRL) 	///../ucode/pctl.h
+#define MMC_REQ_CTRL 0x6400 	///../ucode/pctl.h
+#define P_MMC_REQ_CTRL 		APB_REG_ADDR(MMC_REQ_CTRL) 	///../ucode/pctl.h
+#define MMC_SOFT_RST 0x6404 	///../ucode/pctl.h
+#define P_MMC_SOFT_RST 		APB_REG_ADDR(MMC_SOFT_RST) 	///../ucode/pctl.h
+#define MMC_RST_STS 0x6408 	///../ucode/pctl.h
+#define P_MMC_RST_STS 		APB_REG_ADDR(MMC_RST_STS) 	///../ucode/pctl.h
+#define MMC_APB3_CTRL 0x640c 	///../ucode/pctl.h
+#define P_MMC_APB3_CTRL 		APB_REG_ADDR(MMC_APB3_CTRL) 	///../ucode/pctl.h
+#define MMC_CHAN_STS 0x6410 	///../ucode/pctl.h
+#define P_MMC_CHAN_STS 		APB_REG_ADDR(MMC_CHAN_STS) 	///../ucode/pctl.h
+#define MMC_CLKG_CNTL0 0x6414 	///../ucode/pctl.h
+#define P_MMC_CLKG_CNTL0 		APB_REG_ADDR(MMC_CLKG_CNTL0) 	///../ucode/pctl.h
+#define MMC_CLKG_CNTL1 0x6418 	///../ucode/pctl.h
+#define P_MMC_CLKG_CNTL1 		APB_REG_ADDR(MMC_CLKG_CNTL1) 	///../ucode/pctl.h
+#define MMC_CLK_CNTL 0x641c 	///../ucode/pctl.h
+#define P_MMC_CLK_CNTL 		APB_REG_ADDR(MMC_CLK_CNTL) 	///../ucode/pctl.h
+#define MMC_DDR_PHY_GPR0 0x6420 	///../ucode/pctl.h
+#define P_MMC_DDR_PHY_GPR0 		APB_REG_ADDR(MMC_DDR_PHY_GPR0) 	///../ucode/pctl.h
+#define MMC_DDR_PHY_GPR1 0x6424 	///../ucode/pctl.h
+#define P_MMC_DDR_PHY_GPR1 		APB_REG_ADDR(MMC_DDR_PHY_GPR1) 	///../ucode/pctl.h
+#define MMC_LP_CTRL1 0x6428 	///../ucode/pctl.h
+#define P_MMC_LP_CTRL1 		APB_REG_ADDR(MMC_LP_CTRL1) 	///../ucode/pctl.h
+#define MMC_LP_CTRL2 0x642c 	///../ucode/pctl.h
+#define P_MMC_LP_CTRL2 		APB_REG_ADDR(MMC_LP_CTRL2) 	///../ucode/pctl.h
+#define MMC_LP_CTRL3 0x6430 	///../ucode/pctl.h
+#define P_MMC_LP_CTRL3 		APB_REG_ADDR(MMC_LP_CTRL3) 	///../ucode/pctl.h
+#define MMC_PCTL_STAT 0x6434 	///../ucode/pctl.h
+#define P_MMC_PCTL_STAT 		APB_REG_ADDR(MMC_PCTL_STAT) 	///../ucode/pctl.h
+#define MMC_CMDZQ_CTRL 0x6438 	///../ucode/pctl.h
+#define P_MMC_CMDZQ_CTRL 		APB_REG_ADDR(MMC_CMDZQ_CTRL) 	///../ucode/pctl.h
+#define STB_VERSION 0x1600 	///../ucode/c_stb_define.h
+#define P_STB_VERSION 		CBUS_REG_ADDR(STB_VERSION) 	///../ucode/c_stb_define.h
+#define STB_VERSION_2 0x1650 	///../ucode/c_stb_define.h
+#define P_STB_VERSION_2 		CBUS_REG_ADDR(STB_VERSION_2) 	///../ucode/c_stb_define.h
+#define STB_VERSION_3 0x16a0 	///../ucode/c_stb_define.h
+#define P_STB_VERSION_3 		CBUS_REG_ADDR(STB_VERSION_3) 	///../ucode/c_stb_define.h
+#define STB_TEST_REG 0x1601 	///../ucode/c_stb_define.h
+#define P_STB_TEST_REG 		CBUS_REG_ADDR(STB_TEST_REG) 	///../ucode/c_stb_define.h
+#define STB_TEST_REG_2 0x1651 	///../ucode/c_stb_define.h
+#define P_STB_TEST_REG_2 		CBUS_REG_ADDR(STB_TEST_REG_2) 	///../ucode/c_stb_define.h
+#define STB_TEST_REG_3 0x16a1 	///../ucode/c_stb_define.h
+#define P_STB_TEST_REG_3 		CBUS_REG_ADDR(STB_TEST_REG_3) 	///../ucode/c_stb_define.h
+#define FEC_INPUT_CONTROL 0x1602 	///../ucode/c_stb_define.h
+#define P_FEC_INPUT_CONTROL 		CBUS_REG_ADDR(FEC_INPUT_CONTROL) 	///../ucode/c_stb_define.h
+#define FEC_INPUT_CONTROL_2 0x1652 	///../ucode/c_stb_define.h
+#define P_FEC_INPUT_CONTROL_2 		CBUS_REG_ADDR(FEC_INPUT_CONTROL_2) 	///../ucode/c_stb_define.h
+#define FEC_INPUT_CONTROL_3 0x16a2 	///../ucode/c_stb_define.h
+#define P_FEC_INPUT_CONTROL_3 		CBUS_REG_ADDR(FEC_INPUT_CONTROL_3) 	///../ucode/c_stb_define.h
+#define FEC_INPUT_DATA 0x1603 	///../ucode/c_stb_define.h
+#define P_FEC_INPUT_DATA 		CBUS_REG_ADDR(FEC_INPUT_DATA) 	///../ucode/c_stb_define.h
+#define FEC_INPUT_DATA_2 0x1653 	///../ucode/c_stb_define.h
+#define P_FEC_INPUT_DATA_2 		CBUS_REG_ADDR(FEC_INPUT_DATA_2) 	///../ucode/c_stb_define.h
+#define FEC_INPUT_DATA_3 0x16a3 	///../ucode/c_stb_define.h
+#define P_FEC_INPUT_DATA_3 		CBUS_REG_ADDR(FEC_INPUT_DATA_3) 	///../ucode/c_stb_define.h
+#define DEMUX_CONTROL 0x1604 	///../ucode/c_stb_define.h
+#define P_DEMUX_CONTROL 		CBUS_REG_ADDR(DEMUX_CONTROL) 	///../ucode/c_stb_define.h
+#define DEMUX_CONTROL_2 0x1654 	///../ucode/c_stb_define.h
+#define P_DEMUX_CONTROL_2 		CBUS_REG_ADDR(DEMUX_CONTROL_2) 	///../ucode/c_stb_define.h
+#define DEMUX_CONTROL_3 0x16a4 	///../ucode/c_stb_define.h
+#define P_DEMUX_CONTROL_3 		CBUS_REG_ADDR(DEMUX_CONTROL_3) 	///../ucode/c_stb_define.h
+#define FEC_SYNC_BYTE 0x1605 	///../ucode/c_stb_define.h
+#define P_FEC_SYNC_BYTE 		CBUS_REG_ADDR(FEC_SYNC_BYTE) 	///../ucode/c_stb_define.h
+#define FEC_SYNC_BYTE_2 0x1655 	///../ucode/c_stb_define.h
+#define P_FEC_SYNC_BYTE_2 		CBUS_REG_ADDR(FEC_SYNC_BYTE_2) 	///../ucode/c_stb_define.h
+#define FEC_SYNC_BYTE_3 0x16a5 	///../ucode/c_stb_define.h
+#define P_FEC_SYNC_BYTE_3 		CBUS_REG_ADDR(FEC_SYNC_BYTE_3) 	///../ucode/c_stb_define.h
+#define FM_WR_DATA 0x1606 	///../ucode/c_stb_define.h
+#define P_FM_WR_DATA 		CBUS_REG_ADDR(FM_WR_DATA) 	///../ucode/c_stb_define.h
+#define FM_WR_DATA_2 0x1656 	///../ucode/c_stb_define.h
+#define P_FM_WR_DATA_2 		CBUS_REG_ADDR(FM_WR_DATA_2) 	///../ucode/c_stb_define.h
+#define FM_WR_DATA_3 0x16a6 	///../ucode/c_stb_define.h
+#define P_FM_WR_DATA_3 		CBUS_REG_ADDR(FM_WR_DATA_3) 	///../ucode/c_stb_define.h
+#define FM_WR_ADDR 0x1607 	///../ucode/c_stb_define.h
+#define P_FM_WR_ADDR 		CBUS_REG_ADDR(FM_WR_ADDR) 	///../ucode/c_stb_define.h
+#define FM_WR_ADDR_2 0x1657 	///../ucode/c_stb_define.h
+#define P_FM_WR_ADDR_2 		CBUS_REG_ADDR(FM_WR_ADDR_2) 	///../ucode/c_stb_define.h
+#define FM_WR_ADDR_3 0x16a7 	///../ucode/c_stb_define.h
+#define P_FM_WR_ADDR_3 		CBUS_REG_ADDR(FM_WR_ADDR_3) 	///../ucode/c_stb_define.h
+#define MAX_FM_COMP_ADDR 0x1608 	///../ucode/c_stb_define.h
+#define P_MAX_FM_COMP_ADDR 		CBUS_REG_ADDR(MAX_FM_COMP_ADDR) 	///../ucode/c_stb_define.h
+#define MAX_FM_COMP_ADDR_2 0x1658 	///../ucode/c_stb_define.h
+#define P_MAX_FM_COMP_ADDR_2 		CBUS_REG_ADDR(MAX_FM_COMP_ADDR_2) 	///../ucode/c_stb_define.h
+#define MAX_FM_COMP_ADDR_3 0x16a8 	///../ucode/c_stb_define.h
+#define P_MAX_FM_COMP_ADDR_3 		CBUS_REG_ADDR(MAX_FM_COMP_ADDR_3) 	///../ucode/c_stb_define.h
+#define TS_HEAD_0 0x1609 	///../ucode/c_stb_define.h
+#define P_TS_HEAD_0 		CBUS_REG_ADDR(TS_HEAD_0) 	///../ucode/c_stb_define.h
+#define TS_HEAD_0_2 0x1659 	///../ucode/c_stb_define.h
+#define P_TS_HEAD_0_2 		CBUS_REG_ADDR(TS_HEAD_0_2) 	///../ucode/c_stb_define.h
+#define TS_HEAD_0_3 0x16a9 	///../ucode/c_stb_define.h
+#define P_TS_HEAD_0_3 		CBUS_REG_ADDR(TS_HEAD_0_3) 	///../ucode/c_stb_define.h
+#define TS_HEAD_1 0x160a 	///../ucode/c_stb_define.h
+#define P_TS_HEAD_1 		CBUS_REG_ADDR(TS_HEAD_1) 	///../ucode/c_stb_define.h
+#define TS_HEAD_1_2 0x165a 	///../ucode/c_stb_define.h
+#define P_TS_HEAD_1_2 		CBUS_REG_ADDR(TS_HEAD_1_2) 	///../ucode/c_stb_define.h
+#define TS_HEAD_1_3 0x16aa 	///../ucode/c_stb_define.h
+#define P_TS_HEAD_1_3 		CBUS_REG_ADDR(TS_HEAD_1_3) 	///../ucode/c_stb_define.h
+#define OM_CMD_STATUS 0x160b 	///../ucode/c_stb_define.h
+#define P_OM_CMD_STATUS 		CBUS_REG_ADDR(OM_CMD_STATUS) 	///../ucode/c_stb_define.h
+#define OM_CMD_STATUS_2 0x165b 	///../ucode/c_stb_define.h
+#define P_OM_CMD_STATUS_2 		CBUS_REG_ADDR(OM_CMD_STATUS_2) 	///../ucode/c_stb_define.h
+#define OM_CMD_STATUS_3 0x16ab 	///../ucode/c_stb_define.h
+#define P_OM_CMD_STATUS_3 		CBUS_REG_ADDR(OM_CMD_STATUS_3) 	///../ucode/c_stb_define.h
+#define OM_CMD_DATA 0x160c 	///../ucode/c_stb_define.h
+#define P_OM_CMD_DATA 		CBUS_REG_ADDR(OM_CMD_DATA) 	///../ucode/c_stb_define.h
+#define OM_CMD_DATA_2 0x165c 	///../ucode/c_stb_define.h
+#define P_OM_CMD_DATA_2 		CBUS_REG_ADDR(OM_CMD_DATA_2) 	///../ucode/c_stb_define.h
+#define OM_CMD_DATA_3 0x16ac 	///../ucode/c_stb_define.h
+#define P_OM_CMD_DATA_3 		CBUS_REG_ADDR(OM_CMD_DATA_3) 	///../ucode/c_stb_define.h
+#define OM_CMD_DATA2 0x160d 	///../ucode/c_stb_define.h
+#define P_OM_CMD_DATA2 		CBUS_REG_ADDR(OM_CMD_DATA2) 	///../ucode/c_stb_define.h
+#define OM_CMD_DATA2_2 0x165d 	///../ucode/c_stb_define.h
+#define P_OM_CMD_DATA2_2 		CBUS_REG_ADDR(OM_CMD_DATA2_2) 	///../ucode/c_stb_define.h
+#define OM_CMD_DATA2_3 0x16ad 	///../ucode/c_stb_define.h
+#define P_OM_CMD_DATA2_3 		CBUS_REG_ADDR(OM_CMD_DATA2_3) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_01_START 0x160e 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_01_START 		CBUS_REG_ADDR(SEC_BUFF_01_START) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_01_START_2 0x165e 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_01_START_2 		CBUS_REG_ADDR(SEC_BUFF_01_START_2) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_01_START_3 0x16ae 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_01_START_3 		CBUS_REG_ADDR(SEC_BUFF_01_START_3) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_23_START 0x160f 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_23_START 		CBUS_REG_ADDR(SEC_BUFF_23_START) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_23_START_2 0x165f 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_23_START_2 		CBUS_REG_ADDR(SEC_BUFF_23_START_2) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_23_START_3 0x16af 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_23_START_3 		CBUS_REG_ADDR(SEC_BUFF_23_START_3) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_SIZE 0x1610 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_SIZE 		CBUS_REG_ADDR(SEC_BUFF_SIZE) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_SIZE_2 0x1660 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_SIZE_2 		CBUS_REG_ADDR(SEC_BUFF_SIZE_2) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_SIZE_3 0x16b0 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_SIZE_3 		CBUS_REG_ADDR(SEC_BUFF_SIZE_3) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_BUSY 0x1611 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_BUSY 		CBUS_REG_ADDR(SEC_BUFF_BUSY) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_BUSY_2 0x1661 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_BUSY_2 		CBUS_REG_ADDR(SEC_BUFF_BUSY_2) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_BUSY_3 0x16b1 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_BUSY_3 		CBUS_REG_ADDR(SEC_BUFF_BUSY_3) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_READY 0x1612 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_READY 		CBUS_REG_ADDR(SEC_BUFF_READY) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_READY_2 0x1662 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_READY_2 		CBUS_REG_ADDR(SEC_BUFF_READY_2) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_READY_3 0x16b2 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_READY_3 		CBUS_REG_ADDR(SEC_BUFF_READY_3) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_NUMBER 0x1613 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_NUMBER 		CBUS_REG_ADDR(SEC_BUFF_NUMBER) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_NUMBER_2 0x1663 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_NUMBER_2 		CBUS_REG_ADDR(SEC_BUFF_NUMBER_2) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_NUMBER_3 0x16b3 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_NUMBER_3 		CBUS_REG_ADDR(SEC_BUFF_NUMBER_3) 	///../ucode/c_stb_define.h
+#define ASSIGN_PID_NUMBER 0x1614 	///../ucode/c_stb_define.h
+#define P_ASSIGN_PID_NUMBER 		CBUS_REG_ADDR(ASSIGN_PID_NUMBER) 	///../ucode/c_stb_define.h
+#define ASSIGN_PID_NUMBER_2 0x1664 	///../ucode/c_stb_define.h
+#define P_ASSIGN_PID_NUMBER_2 		CBUS_REG_ADDR(ASSIGN_PID_NUMBER_2) 	///../ucode/c_stb_define.h
+#define ASSIGN_PID_NUMBER_3 0x16b4 	///../ucode/c_stb_define.h
+#define P_ASSIGN_PID_NUMBER_3 		CBUS_REG_ADDR(ASSIGN_PID_NUMBER_3) 	///../ucode/c_stb_define.h
+#define VIDEO_STREAM_ID 0x1615 	///../ucode/c_stb_define.h
+#define P_VIDEO_STREAM_ID 		CBUS_REG_ADDR(VIDEO_STREAM_ID) 	///../ucode/c_stb_define.h
+#define VIDEO_STREAM_ID_2 0x1665 	///../ucode/c_stb_define.h
+#define P_VIDEO_STREAM_ID_2 		CBUS_REG_ADDR(VIDEO_STREAM_ID_2) 	///../ucode/c_stb_define.h
+#define VIDEO_STREAM_ID_3 0x16b5 	///../ucode/c_stb_define.h
+#define P_VIDEO_STREAM_ID_3 		CBUS_REG_ADDR(VIDEO_STREAM_ID_3) 	///../ucode/c_stb_define.h
+#define AUDIO_STREAM_ID 0x1616 	///../ucode/c_stb_define.h
+#define P_AUDIO_STREAM_ID 		CBUS_REG_ADDR(AUDIO_STREAM_ID) 	///../ucode/c_stb_define.h
+#define AUDIO_STREAM_ID_2 0x1666 	///../ucode/c_stb_define.h
+#define P_AUDIO_STREAM_ID_2 		CBUS_REG_ADDR(AUDIO_STREAM_ID_2) 	///../ucode/c_stb_define.h
+#define AUDIO_STREAM_ID_3 0x16b6 	///../ucode/c_stb_define.h
+#define P_AUDIO_STREAM_ID_3 		CBUS_REG_ADDR(AUDIO_STREAM_ID_3) 	///../ucode/c_stb_define.h
+#define SUB_STREAM_ID 0x1617 	///../ucode/c_stb_define.h
+#define P_SUB_STREAM_ID 		CBUS_REG_ADDR(SUB_STREAM_ID) 	///../ucode/c_stb_define.h
+#define SUB_STREAM_ID_2 0x1667 	///../ucode/c_stb_define.h
+#define P_SUB_STREAM_ID_2 		CBUS_REG_ADDR(SUB_STREAM_ID_2) 	///../ucode/c_stb_define.h
+#define SUB_STREAM_ID_3 0x16b7 	///../ucode/c_stb_define.h
+#define P_SUB_STREAM_ID_3 		CBUS_REG_ADDR(SUB_STREAM_ID_3) 	///../ucode/c_stb_define.h
+#define OTHER_STREAM_ID 0x1618 	///../ucode/c_stb_define.h
+#define P_OTHER_STREAM_ID 		CBUS_REG_ADDR(OTHER_STREAM_ID) 	///../ucode/c_stb_define.h
+#define OTHER_STREAM_ID_2 0x1668 	///../ucode/c_stb_define.h
+#define P_OTHER_STREAM_ID_2 		CBUS_REG_ADDR(OTHER_STREAM_ID_2) 	///../ucode/c_stb_define.h
+#define OTHER_STREAM_ID_3 0x16b8 	///../ucode/c_stb_define.h
+#define P_OTHER_STREAM_ID_3 		CBUS_REG_ADDR(OTHER_STREAM_ID_3) 	///../ucode/c_stb_define.h
+#define PCR90K_CTL 0x1619 	///../ucode/c_stb_define.h
+#define P_PCR90K_CTL 		CBUS_REG_ADDR(PCR90K_CTL) 	///../ucode/c_stb_define.h
+#define PCR90K_CTL_2 0x1669 	///../ucode/c_stb_define.h
+#define P_PCR90K_CTL_2 		CBUS_REG_ADDR(PCR90K_CTL_2) 	///../ucode/c_stb_define.h
+#define PCR90K_CTL_3 0x16b9 	///../ucode/c_stb_define.h
+#define P_PCR90K_CTL_3 		CBUS_REG_ADDR(PCR90K_CTL_3) 	///../ucode/c_stb_define.h
+#define PCR_DEMUX 0x161a 	///../ucode/c_stb_define.h
+#define P_PCR_DEMUX 		CBUS_REG_ADDR(PCR_DEMUX) 	///../ucode/c_stb_define.h
+#define PCR_DEMUX_2 0x166a 	///../ucode/c_stb_define.h
+#define P_PCR_DEMUX_2 		CBUS_REG_ADDR(PCR_DEMUX_2) 	///../ucode/c_stb_define.h
+#define PCR_DEMUX_3 0x16ba 	///../ucode/c_stb_define.h
+#define P_PCR_DEMUX_3 		CBUS_REG_ADDR(PCR_DEMUX_3) 	///../ucode/c_stb_define.h
+#define VIDEO_PTS_DEMUX 0x161b 	///../ucode/c_stb_define.h
+#define P_VIDEO_PTS_DEMUX 		CBUS_REG_ADDR(VIDEO_PTS_DEMUX) 	///../ucode/c_stb_define.h
+#define VIDEO_PTS_DEMUX_2 0x166b 	///../ucode/c_stb_define.h
+#define P_VIDEO_PTS_DEMUX_2 		CBUS_REG_ADDR(VIDEO_PTS_DEMUX_2) 	///../ucode/c_stb_define.h
+#define VIDEO_PTS_DEMUX_3 0x16bb 	///../ucode/c_stb_define.h
+#define P_VIDEO_PTS_DEMUX_3 		CBUS_REG_ADDR(VIDEO_PTS_DEMUX_3) 	///../ucode/c_stb_define.h
+#define VIDEO_DTS_DEMUX 0x161c 	///../ucode/c_stb_define.h
+#define P_VIDEO_DTS_DEMUX 		CBUS_REG_ADDR(VIDEO_DTS_DEMUX) 	///../ucode/c_stb_define.h
+#define VIDEO_DTS_DEMUX_2 0x166c 	///../ucode/c_stb_define.h
+#define P_VIDEO_DTS_DEMUX_2 		CBUS_REG_ADDR(VIDEO_DTS_DEMUX_2) 	///../ucode/c_stb_define.h
+#define VIDEO_DTS_DEMUX_3 0x16bc 	///../ucode/c_stb_define.h
+#define P_VIDEO_DTS_DEMUX_3 		CBUS_REG_ADDR(VIDEO_DTS_DEMUX_3) 	///../ucode/c_stb_define.h
+#define AUDIO_PTS_DEMUX 0x161d 	///../ucode/c_stb_define.h
+#define P_AUDIO_PTS_DEMUX 		CBUS_REG_ADDR(AUDIO_PTS_DEMUX) 	///../ucode/c_stb_define.h
+#define AUDIO_PTS_DEMUX_2 0x166d 	///../ucode/c_stb_define.h
+#define P_AUDIO_PTS_DEMUX_2 		CBUS_REG_ADDR(AUDIO_PTS_DEMUX_2) 	///../ucode/c_stb_define.h
+#define AUDIO_PTS_DEMUX_3 0x16bd 	///../ucode/c_stb_define.h
+#define P_AUDIO_PTS_DEMUX_3 		CBUS_REG_ADDR(AUDIO_PTS_DEMUX_3) 	///../ucode/c_stb_define.h
+#define SUB_PTS_DEMUX 0x161e 	///../ucode/c_stb_define.h
+#define P_SUB_PTS_DEMUX 		CBUS_REG_ADDR(SUB_PTS_DEMUX) 	///../ucode/c_stb_define.h
+#define SUB_PTS_DEMUX_2 0x166e 	///../ucode/c_stb_define.h
+#define P_SUB_PTS_DEMUX_2 		CBUS_REG_ADDR(SUB_PTS_DEMUX_2) 	///../ucode/c_stb_define.h
+#define SUB_PTS_DEMUX_3 0x16be 	///../ucode/c_stb_define.h
+#define P_SUB_PTS_DEMUX_3 		CBUS_REG_ADDR(SUB_PTS_DEMUX_3) 	///../ucode/c_stb_define.h
+#define STB_PTS_DTS_STATUS 0x161f 	///../ucode/c_stb_define.h
+#define P_STB_PTS_DTS_STATUS 		CBUS_REG_ADDR(STB_PTS_DTS_STATUS) 	///../ucode/c_stb_define.h
+#define STB_PTS_DTS_STATUS_2 0x166f 	///../ucode/c_stb_define.h
+#define P_STB_PTS_DTS_STATUS_2 		CBUS_REG_ADDR(STB_PTS_DTS_STATUS_2) 	///../ucode/c_stb_define.h
+#define STB_PTS_DTS_STATUS_3 0x16bf 	///../ucode/c_stb_define.h
+#define P_STB_PTS_DTS_STATUS_3 		CBUS_REG_ADDR(STB_PTS_DTS_STATUS_3) 	///../ucode/c_stb_define.h
+#define STB_DEBUG_INDEX 0x1620 	///../ucode/c_stb_define.h
+#define P_STB_DEBUG_INDEX 		CBUS_REG_ADDR(STB_DEBUG_INDEX) 	///../ucode/c_stb_define.h
+#define STB_DEBUG_INDEX_2 0x1670 	///../ucode/c_stb_define.h
+#define P_STB_DEBUG_INDEX_2 		CBUS_REG_ADDR(STB_DEBUG_INDEX_2) 	///../ucode/c_stb_define.h
+#define STB_DEBUG_INDEX_3 0x16c0 	///../ucode/c_stb_define.h
+#define P_STB_DEBUG_INDEX_3 		CBUS_REG_ADDR(STB_DEBUG_INDEX_3) 	///../ucode/c_stb_define.h
+#define STB_DEBUG_DATAUT_O 0x1621 	///../ucode/c_stb_define.h
+#define P_STB_DEBUG_DATAUT_O 		CBUS_REG_ADDR(STB_DEBUG_DATAUT_O) 	///../ucode/c_stb_define.h
+#define STB_DEBUG_DATAUT_O_2 0x1671 	///../ucode/c_stb_define.h
+#define P_STB_DEBUG_DATAUT_O_2 		CBUS_REG_ADDR(STB_DEBUG_DATAUT_O_2) 	///../ucode/c_stb_define.h
+#define STB_DEBUG_DATAUT_O_3 0x16c1 	///../ucode/c_stb_define.h
+#define P_STB_DEBUG_DATAUT_O_3 		CBUS_REG_ADDR(STB_DEBUG_DATAUT_O_3) 	///../ucode/c_stb_define.h
+#define STBM_CTL_O 0x1622 	///../ucode/c_stb_define.h
+#define P_STBM_CTL_O 		CBUS_REG_ADDR(STBM_CTL_O) 	///../ucode/c_stb_define.h
+#define STBM_CTL_O_2 0x1672 	///../ucode/c_stb_define.h
+#define P_STBM_CTL_O_2 		CBUS_REG_ADDR(STBM_CTL_O_2) 	///../ucode/c_stb_define.h
+#define STBM_CTL_O_3 0x16c2 	///../ucode/c_stb_define.h
+#define P_STBM_CTL_O_3 		CBUS_REG_ADDR(STBM_CTL_O_3) 	///../ucode/c_stb_define.h
+#define STB_INT_STATUS 0x1623 	///../ucode/c_stb_define.h
+#define P_STB_INT_STATUS 		CBUS_REG_ADDR(STB_INT_STATUS) 	///../ucode/c_stb_define.h
+#define STB_INT_STATUS_2 0x1673 	///../ucode/c_stb_define.h
+#define P_STB_INT_STATUS_2 		CBUS_REG_ADDR(STB_INT_STATUS_2) 	///../ucode/c_stb_define.h
+#define STB_INT_STATUS_3 0x16c3 	///../ucode/c_stb_define.h
+#define P_STB_INT_STATUS_3 		CBUS_REG_ADDR(STB_INT_STATUS_3) 	///../ucode/c_stb_define.h
+#define DEMUX_ENDIAN 0x1624 	///../ucode/c_stb_define.h
+#define P_DEMUX_ENDIAN 		CBUS_REG_ADDR(DEMUX_ENDIAN) 	///../ucode/c_stb_define.h
+#define DEMUX_ENDIAN_2 0x1674 	///../ucode/c_stb_define.h
+#define P_DEMUX_ENDIAN_2 		CBUS_REG_ADDR(DEMUX_ENDIAN_2) 	///../ucode/c_stb_define.h
+#define DEMUX_ENDIAN_3 0x16c4 	///../ucode/c_stb_define.h
+#define P_DEMUX_ENDIAN_3 		CBUS_REG_ADDR(DEMUX_ENDIAN_3) 	///../ucode/c_stb_define.h
+#define TS_HIU_CTL 0x1625 	///../ucode/c_stb_define.h
+#define P_TS_HIU_CTL 		CBUS_REG_ADDR(TS_HIU_CTL) 	///../ucode/c_stb_define.h
+#define TS_HIU_CTL_2 0x1675 	///../ucode/c_stb_define.h
+#define P_TS_HIU_CTL_2 		CBUS_REG_ADDR(TS_HIU_CTL_2) 	///../ucode/c_stb_define.h
+#define TS_HIU_CTL_3 0x16c5 	///../ucode/c_stb_define.h
+#define P_TS_HIU_CTL_3 		CBUS_REG_ADDR(TS_HIU_CTL_3) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_BASE 0x1626 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_BASE 		CBUS_REG_ADDR(SEC_BUFF_BASE) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_BASE_2 0x1676 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_BASE_2 		CBUS_REG_ADDR(SEC_BUFF_BASE_2) 	///../ucode/c_stb_define.h
+#define SEC_BUFF_BASE_3 0x16c6 	///../ucode/c_stb_define.h
+#define P_SEC_BUFF_BASE_3 		CBUS_REG_ADDR(SEC_BUFF_BASE_3) 	///../ucode/c_stb_define.h
+#define DEMUX_MEM_REQ_EN 0x1627 	///../ucode/c_stb_define.h
+#define P_DEMUX_MEM_REQ_EN 		CBUS_REG_ADDR(DEMUX_MEM_REQ_EN) 	///../ucode/c_stb_define.h
+#define DEMUX_MEM_REQ_EN_2 0x1677 	///../ucode/c_stb_define.h
+#define P_DEMUX_MEM_REQ_EN_2 		CBUS_REG_ADDR(DEMUX_MEM_REQ_EN_2) 	///../ucode/c_stb_define.h
+#define DEMUX_MEM_REQ_EN_3 0x16c7 	///../ucode/c_stb_define.h
+#define P_DEMUX_MEM_REQ_EN_3 		CBUS_REG_ADDR(DEMUX_MEM_REQ_EN_3) 	///../ucode/c_stb_define.h
+#define VIDEO_PDTS_WR_PTR 0x1628 	///../ucode/c_stb_define.h
+#define P_VIDEO_PDTS_WR_PTR 		CBUS_REG_ADDR(VIDEO_PDTS_WR_PTR) 	///../ucode/c_stb_define.h
+#define VIDEO_PDTS_WR_PTR_2 0x1678 	///../ucode/c_stb_define.h
+#define P_VIDEO_PDTS_WR_PTR_2 		CBUS_REG_ADDR(VIDEO_PDTS_WR_PTR_2) 	///../ucode/c_stb_define.h
+#define VIDEO_PDTS_WR_PTR_3 0x16c8 	///../ucode/c_stb_define.h
+#define P_VIDEO_PDTS_WR_PTR_3 		CBUS_REG_ADDR(VIDEO_PDTS_WR_PTR_3) 	///../ucode/c_stb_define.h
+#define AUDIO_PDTS_WR_PTR 0x1629 	///../ucode/c_stb_define.h
+#define P_AUDIO_PDTS_WR_PTR 		CBUS_REG_ADDR(AUDIO_PDTS_WR_PTR) 	///../ucode/c_stb_define.h
+#define AUDIO_PDTS_WR_PTR_2 0x1679 	///../ucode/c_stb_define.h
+#define P_AUDIO_PDTS_WR_PTR_2 		CBUS_REG_ADDR(AUDIO_PDTS_WR_PTR_2) 	///../ucode/c_stb_define.h
+#define AUDIO_PDTS_WR_PTR_3 0x16c9 	///../ucode/c_stb_define.h
+#define P_AUDIO_PDTS_WR_PTR_3 		CBUS_REG_ADDR(AUDIO_PDTS_WR_PTR_3) 	///../ucode/c_stb_define.h
+#define SUB_WR_PTR 0x162a 	///../ucode/c_stb_define.h
+#define P_SUB_WR_PTR 		CBUS_REG_ADDR(SUB_WR_PTR) 	///../ucode/c_stb_define.h
+#define SUB_WR_PTR_2 0x167a 	///../ucode/c_stb_define.h
+#define P_SUB_WR_PTR_2 		CBUS_REG_ADDR(SUB_WR_PTR_2) 	///../ucode/c_stb_define.h
+#define SUB_WR_PTR_3 0x16ca 	///../ucode/c_stb_define.h
+#define P_SUB_WR_PTR_3 		CBUS_REG_ADDR(SUB_WR_PTR_3) 	///../ucode/c_stb_define.h
+#define SB_START 0x162b 	///../ucode/c_stb_define.h
+#define P_SB_START 		CBUS_REG_ADDR(SB_START) 	///../ucode/c_stb_define.h
+#define SB_START_2 0x167b 	///../ucode/c_stb_define.h
+#define P_SB_START_2 		CBUS_REG_ADDR(SB_START_2) 	///../ucode/c_stb_define.h
+#define SB_START_3 0x16cb 	///../ucode/c_stb_define.h
+#define P_SB_START_3 		CBUS_REG_ADDR(SB_START_3) 	///../ucode/c_stb_define.h
+#define SB_LAST_ADDR 0x162c 	///../ucode/c_stb_define.h
+#define P_SB_LAST_ADDR 		CBUS_REG_ADDR(SB_LAST_ADDR) 	///../ucode/c_stb_define.h
+#define SB_LAST_ADDR_2 0x167c 	///../ucode/c_stb_define.h
+#define P_SB_LAST_ADDR_2 		CBUS_REG_ADDR(SB_LAST_ADDR_2) 	///../ucode/c_stb_define.h
+#define SB_LAST_ADDR_3 0x16cc 	///../ucode/c_stb_define.h
+#define P_SB_LAST_ADDR_3 		CBUS_REG_ADDR(SB_LAST_ADDR_3) 	///../ucode/c_stb_define.h
+#define SB_PES_WR_PTR 0x162d 	///../ucode/c_stb_define.h
+#define P_SB_PES_WR_PTR 		CBUS_REG_ADDR(SB_PES_WR_PTR) 	///../ucode/c_stb_define.h
+#define SB_PES_WR_PTR_2 0x167d 	///../ucode/c_stb_define.h
+#define P_SB_PES_WR_PTR_2 		CBUS_REG_ADDR(SB_PES_WR_PTR_2) 	///../ucode/c_stb_define.h
+#define SB_PES_WR_PTR_3 0x16cd 	///../ucode/c_stb_define.h
+#define P_SB_PES_WR_PTR_3 		CBUS_REG_ADDR(SB_PES_WR_PTR_3) 	///../ucode/c_stb_define.h
+#define OTHER_WR_PTR 0x162e 	///../ucode/c_stb_define.h
+#define P_OTHER_WR_PTR 		CBUS_REG_ADDR(OTHER_WR_PTR) 	///../ucode/c_stb_define.h
+#define OTHER_WR_PTR_2 0x167e 	///../ucode/c_stb_define.h
+#define P_OTHER_WR_PTR_2 		CBUS_REG_ADDR(OTHER_WR_PTR_2) 	///../ucode/c_stb_define.h
+#define OTHER_WR_PTR_3 0x16ce 	///../ucode/c_stb_define.h
+#define P_OTHER_WR_PTR_3 		CBUS_REG_ADDR(OTHER_WR_PTR_3) 	///../ucode/c_stb_define.h
+#define OB_START 0x162f 	///../ucode/c_stb_define.h
+#define P_OB_START 		CBUS_REG_ADDR(OB_START) 	///../ucode/c_stb_define.h
+#define OB_START_2 0x167f 	///../ucode/c_stb_define.h
+#define P_OB_START_2 		CBUS_REG_ADDR(OB_START_2) 	///../ucode/c_stb_define.h
+#define OB_START_3 0x16cf 	///../ucode/c_stb_define.h
+#define P_OB_START_3 		CBUS_REG_ADDR(OB_START_3) 	///../ucode/c_stb_define.h
+#define OB_LAST_ADDR 0x1630 	///../ucode/c_stb_define.h
+#define P_OB_LAST_ADDR 		CBUS_REG_ADDR(OB_LAST_ADDR) 	///../ucode/c_stb_define.h
+#define OB_LAST_ADDR_2 0x1680 	///../ucode/c_stb_define.h
+#define P_OB_LAST_ADDR_2 		CBUS_REG_ADDR(OB_LAST_ADDR_2) 	///../ucode/c_stb_define.h
+#define OB_LAST_ADDR_3 0x16d0 	///../ucode/c_stb_define.h
+#define P_OB_LAST_ADDR_3 		CBUS_REG_ADDR(OB_LAST_ADDR_3) 	///../ucode/c_stb_define.h
+#define OB_PES_WR_PTR 0x1631 	///../ucode/c_stb_define.h
+#define P_OB_PES_WR_PTR 		CBUS_REG_ADDR(OB_PES_WR_PTR) 	///../ucode/c_stb_define.h
+#define OB_PES_WR_PTR_2 0x1681 	///../ucode/c_stb_define.h
+#define P_OB_PES_WR_PTR_2 		CBUS_REG_ADDR(OB_PES_WR_PTR_2) 	///../ucode/c_stb_define.h
+#define OB_PES_WR_PTR_3 0x16d1 	///../ucode/c_stb_define.h
+#define P_OB_PES_WR_PTR_3 		CBUS_REG_ADDR(OB_PES_WR_PTR_3) 	///../ucode/c_stb_define.h
+#define STB_INT_MASK 0x1632 	///../ucode/c_stb_define.h
+#define P_STB_INT_MASK 		CBUS_REG_ADDR(STB_INT_MASK) 	///../ucode/c_stb_define.h
+#define STB_INT_MASK_2 0x1682 	///../ucode/c_stb_define.h
+#define P_STB_INT_MASK_2 		CBUS_REG_ADDR(STB_INT_MASK_2) 	///../ucode/c_stb_define.h
+#define STB_INT_MASK_3 0x16d2 	///../ucode/c_stb_define.h
+#define P_STB_INT_MASK_3 		CBUS_REG_ADDR(STB_INT_MASK_3) 	///../ucode/c_stb_define.h
+#define VIDEO_SPLICING_CTL 0x1633 	///../ucode/c_stb_define.h
+#define P_VIDEO_SPLICING_CTL 		CBUS_REG_ADDR(VIDEO_SPLICING_CTL) 	///../ucode/c_stb_define.h
+#define VIDEO_SPLICING_CTL_2 0x1683 	///../ucode/c_stb_define.h
+#define P_VIDEO_SPLICING_CTL_2 		CBUS_REG_ADDR(VIDEO_SPLICING_CTL_2) 	///../ucode/c_stb_define.h
+#define VIDEO_SPLICING_CTL_3 0x16d3 	///../ucode/c_stb_define.h
+#define P_VIDEO_SPLICING_CTL_3 		CBUS_REG_ADDR(VIDEO_SPLICING_CTL_3) 	///../ucode/c_stb_define.h
+#define AUDIO_SPLICING_CTL 0x1634 	///../ucode/c_stb_define.h
+#define P_AUDIO_SPLICING_CTL 		CBUS_REG_ADDR(AUDIO_SPLICING_CTL) 	///../ucode/c_stb_define.h
+#define AUDIO_SPLICING_CTL_2 0x1684 	///../ucode/c_stb_define.h
+#define P_AUDIO_SPLICING_CTL_2 		CBUS_REG_ADDR(AUDIO_SPLICING_CTL_2) 	///../ucode/c_stb_define.h
+#define AUDIO_SPLICING_CTL_3 0x16d4 	///../ucode/c_stb_define.h
+#define P_AUDIO_SPLICING_CTL_3 		CBUS_REG_ADDR(AUDIO_SPLICING_CTL_3) 	///../ucode/c_stb_define.h
+#define TS_PACKAGE_BYTE_COUNT 0x1635 	///../ucode/c_stb_define.h
+#define P_TS_PACKAGE_BYTE_COUNT 		CBUS_REG_ADDR(TS_PACKAGE_BYTE_COUNT) 	///../ucode/c_stb_define.h
+#define TS_PACKAGE_BYTE_COUNT_2 0x1685 	///../ucode/c_stb_define.h
+#define P_TS_PACKAGE_BYTE_COUNT_2 		CBUS_REG_ADDR(TS_PACKAGE_BYTE_COUNT_2) 	///../ucode/c_stb_define.h
+#define TS_PACKAGE_BYTE_COUNT_3 0x16d5 	///../ucode/c_stb_define.h
+#define P_TS_PACKAGE_BYTE_COUNT_3 		CBUS_REG_ADDR(TS_PACKAGE_BYTE_COUNT_3) 	///../ucode/c_stb_define.h
+#define PES_STRONG_SYNC 0x1636 	///../ucode/c_stb_define.h
+#define P_PES_STRONG_SYNC 		CBUS_REG_ADDR(PES_STRONG_SYNC) 	///../ucode/c_stb_define.h
+#define PES_STRONG_SYNC_2 0x1686 	///../ucode/c_stb_define.h
+#define P_PES_STRONG_SYNC_2 		CBUS_REG_ADDR(PES_STRONG_SYNC_2) 	///../ucode/c_stb_define.h
+#define PES_STRONG_SYNC_3 0x16d6 	///../ucode/c_stb_define.h
+#define P_PES_STRONG_SYNC_3 		CBUS_REG_ADDR(PES_STRONG_SYNC_3) 	///../ucode/c_stb_define.h
+#define OM_DATA_RD_ADDR 0x1637 	///../ucode/c_stb_define.h
+#define P_OM_DATA_RD_ADDR 		CBUS_REG_ADDR(OM_DATA_RD_ADDR) 	///../ucode/c_stb_define.h
+#define OM_DATA_RD_ADDR_2 0x1687 	///../ucode/c_stb_define.h
+#define P_OM_DATA_RD_ADDR_2 		CBUS_REG_ADDR(OM_DATA_RD_ADDR_2) 	///../ucode/c_stb_define.h
+#define OM_DATA_RD_ADDR_3 0x16d7 	///../ucode/c_stb_define.h
+#define P_OM_DATA_RD_ADDR_3 		CBUS_REG_ADDR(OM_DATA_RD_ADDR_3) 	///../ucode/c_stb_define.h
+#define OM_DATA_RD 0x1638 	///../ucode/c_stb_define.h
+#define P_OM_DATA_RD 		CBUS_REG_ADDR(OM_DATA_RD) 	///../ucode/c_stb_define.h
+#define OM_DATA_RD_2 0x1688 	///../ucode/c_stb_define.h
+#define P_OM_DATA_RD_2 		CBUS_REG_ADDR(OM_DATA_RD_2) 	///../ucode/c_stb_define.h
+#define OM_DATA_RD_3 0x16d8 	///../ucode/c_stb_define.h
+#define P_OM_DATA_RD_3 		CBUS_REG_ADDR(OM_DATA_RD_3) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_3 0x1639 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_3 		CBUS_REG_ADDR(SECTION_AUTO_STOP_3) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_3_2 0x1689 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_3_2 		CBUS_REG_ADDR(SECTION_AUTO_STOP_3_2) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_3_3 0x16d9 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_3_3 		CBUS_REG_ADDR(SECTION_AUTO_STOP_3_3) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_2 0x163a 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_2 		CBUS_REG_ADDR(SECTION_AUTO_STOP_2) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_2_2 0x168a 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_2_2 		CBUS_REG_ADDR(SECTION_AUTO_STOP_2_2) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_2_3 0x16da 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_2_3 		CBUS_REG_ADDR(SECTION_AUTO_STOP_2_3) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_1 0x163b 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_1 		CBUS_REG_ADDR(SECTION_AUTO_STOP_1) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_1_2 0x168b 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_1_2 		CBUS_REG_ADDR(SECTION_AUTO_STOP_1_2) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_1_3 0x16db 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_1_3 		CBUS_REG_ADDR(SECTION_AUTO_STOP_1_3) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_0 0x163c 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_0 		CBUS_REG_ADDR(SECTION_AUTO_STOP_0) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_0_2 0x168c 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_0_2 		CBUS_REG_ADDR(SECTION_AUTO_STOP_0_2) 	///../ucode/c_stb_define.h
+#define SECTION_AUTO_STOP_0_3 0x16dc 	///../ucode/c_stb_define.h
+#define P_SECTION_AUTO_STOP_0_3 		CBUS_REG_ADDR(SECTION_AUTO_STOP_0_3) 	///../ucode/c_stb_define.h
+#define DEMUX_CHANNEL_RESET 0x163d 	///../ucode/c_stb_define.h
+#define P_DEMUX_CHANNEL_RESET 		CBUS_REG_ADDR(DEMUX_CHANNEL_RESET) 	///../ucode/c_stb_define.h
+#define DEMUX_CHANNEL_RESET_2 0x168d 	///../ucode/c_stb_define.h
+#define P_DEMUX_CHANNEL_RESET_2 		CBUS_REG_ADDR(DEMUX_CHANNEL_RESET_2) 	///../ucode/c_stb_define.h
+#define DEMUX_CHANNEL_RESET_3 0x16dd 	///../ucode/c_stb_define.h
+#define P_DEMUX_CHANNEL_RESET_3 		CBUS_REG_ADDR(DEMUX_CHANNEL_RESET_3) 	///../ucode/c_stb_define.h
+#define DEMUX_SCRAMBLING_STATE 0x163e 	///../ucode/c_stb_define.h
+#define P_DEMUX_SCRAMBLING_STATE 		CBUS_REG_ADDR(DEMUX_SCRAMBLING_STATE) 	///../ucode/c_stb_define.h
+#define DEMUX_SCRAMBLING_STATE_2 0x168e 	///../ucode/c_stb_define.h
+#define P_DEMUX_SCRAMBLING_STATE_2 		CBUS_REG_ADDR(DEMUX_SCRAMBLING_STATE_2) 	///../ucode/c_stb_define.h
+#define DEMUX_SCRAMBLING_STATE_3 0x16de 	///../ucode/c_stb_define.h
+#define P_DEMUX_SCRAMBLING_STATE_3 		CBUS_REG_ADDR(DEMUX_SCRAMBLING_STATE_3) 	///../ucode/c_stb_define.h
+#define DEMUX_CHANNEL_ACTIVITY 0x163f 	///../ucode/c_stb_define.h
+#define P_DEMUX_CHANNEL_ACTIVITY 		CBUS_REG_ADDR(DEMUX_CHANNEL_ACTIVITY) 	///../ucode/c_stb_define.h
+#define DEMUX_CHANNEL_ACTIVITY_2 0x168f 	///../ucode/c_stb_define.h
+#define P_DEMUX_CHANNEL_ACTIVITY_2 		CBUS_REG_ADDR(DEMUX_CHANNEL_ACTIVITY_2) 	///../ucode/c_stb_define.h
+#define DEMUX_CHANNEL_ACTIVITY_3 0x16df 	///../ucode/c_stb_define.h
+#define P_DEMUX_CHANNEL_ACTIVITY_3 		CBUS_REG_ADDR(DEMUX_CHANNEL_ACTIVITY_3) 	///../ucode/c_stb_define.h
+#define DEMUX_STAMP_CTL 0x1640 	///../ucode/c_stb_define.h
+#define P_DEMUX_STAMP_CTL 		CBUS_REG_ADDR(DEMUX_STAMP_CTL) 	///../ucode/c_stb_define.h
+#define DEMUX_STAMP_CTL_2 0x1690 	///../ucode/c_stb_define.h
+#define P_DEMUX_STAMP_CTL_2 		CBUS_REG_ADDR(DEMUX_STAMP_CTL_2) 	///../ucode/c_stb_define.h
+#define DEMUX_STAMP_CTL_3 0x16e0 	///../ucode/c_stb_define.h
+#define P_DEMUX_STAMP_CTL_3 		CBUS_REG_ADDR(DEMUX_STAMP_CTL_3) 	///../ucode/c_stb_define.h
+#define DEMUX_VIDEO_STAMP_SYNC_0 0x1641 	///../ucode/c_stb_define.h
+#define P_DEMUX_VIDEO_STAMP_SYNC_0 		CBUS_REG_ADDR(DEMUX_VIDEO_STAMP_SYNC_0) 	///../ucode/c_stb_define.h
+#define DEMUX_VIDEO_STAMP_SYNC_0_2 0x1691 	///../ucode/c_stb_define.h
+#define P_DEMUX_VIDEO_STAMP_SYNC_0_2 		CBUS_REG_ADDR(DEMUX_VIDEO_STAMP_SYNC_0_2) 	///../ucode/c_stb_define.h
+#define DEMUX_VIDEO_STAMP_SYNC_0_3 0x16e1 	///../ucode/c_stb_define.h
+#define P_DEMUX_VIDEO_STAMP_SYNC_0_3 		CBUS_REG_ADDR(DEMUX_VIDEO_STAMP_SYNC_0_3) 	///../ucode/c_stb_define.h
+#define DEMUX_VIDEO_STAMP_SYNC_1 0x1642 	///../ucode/c_stb_define.h
+#define P_DEMUX_VIDEO_STAMP_SYNC_1 		CBUS_REG_ADDR(DEMUX_VIDEO_STAMP_SYNC_1) 	///../ucode/c_stb_define.h
+#define DEMUX_VIDEO_STAMP_SYNC_1_2 0x1692 	///../ucode/c_stb_define.h
+#define P_DEMUX_VIDEO_STAMP_SYNC_1_2 		CBUS_REG_ADDR(DEMUX_VIDEO_STAMP_SYNC_1_2) 	///../ucode/c_stb_define.h
+#define DEMUX_VIDEO_STAMP_SYNC_1_3 0x16e2 	///../ucode/c_stb_define.h
+#define P_DEMUX_VIDEO_STAMP_SYNC_1_3 		CBUS_REG_ADDR(DEMUX_VIDEO_STAMP_SYNC_1_3) 	///../ucode/c_stb_define.h
+#define DEMUX_AUDIO_STAMP_SYNC_0 0x1643 	///../ucode/c_stb_define.h
+#define P_DEMUX_AUDIO_STAMP_SYNC_0 		CBUS_REG_ADDR(DEMUX_AUDIO_STAMP_SYNC_0) 	///../ucode/c_stb_define.h
+#define DEMUX_AUDIO_STAMP_SYNC_0_2 0x1693 	///../ucode/c_stb_define.h
+#define P_DEMUX_AUDIO_STAMP_SYNC_0_2 		CBUS_REG_ADDR(DEMUX_AUDIO_STAMP_SYNC_0_2) 	///../ucode/c_stb_define.h
+#define DEMUX_AUDIO_STAMP_SYNC_0_3 0x16e3 	///../ucode/c_stb_define.h
+#define P_DEMUX_AUDIO_STAMP_SYNC_0_3 		CBUS_REG_ADDR(DEMUX_AUDIO_STAMP_SYNC_0_3) 	///../ucode/c_stb_define.h
+#define DEMUX_AUDIO_STAMP_SYNC_1 0x1644 	///../ucode/c_stb_define.h
+#define P_DEMUX_AUDIO_STAMP_SYNC_1 		CBUS_REG_ADDR(DEMUX_AUDIO_STAMP_SYNC_1) 	///../ucode/c_stb_define.h
+#define DEMUX_AUDIO_STAMP_SYNC_1_2 0x1694 	///../ucode/c_stb_define.h
+#define P_DEMUX_AUDIO_STAMP_SYNC_1_2 		CBUS_REG_ADDR(DEMUX_AUDIO_STAMP_SYNC_1_2) 	///../ucode/c_stb_define.h
+#define DEMUX_AUDIO_STAMP_SYNC_1_3 0x16e4 	///../ucode/c_stb_define.h
+#define P_DEMUX_AUDIO_STAMP_SYNC_1_3 		CBUS_REG_ADDR(DEMUX_AUDIO_STAMP_SYNC_1_3) 	///../ucode/c_stb_define.h
+#define DEMUX_SECTION_RESET 0x1645 	///../ucode/c_stb_define.h
+#define P_DEMUX_SECTION_RESET 		CBUS_REG_ADDR(DEMUX_SECTION_RESET) 	///../ucode/c_stb_define.h
+#define DEMUX_SECTION_RESET_2 0x1695 	///../ucode/c_stb_define.h
+#define P_DEMUX_SECTION_RESET_2 		CBUS_REG_ADDR(DEMUX_SECTION_RESET_2) 	///../ucode/c_stb_define.h
+#define DEMUX_SECTION_RESET_3 0x16e5 	///../ucode/c_stb_define.h
+#define P_DEMUX_SECTION_RESET_3 		CBUS_REG_ADDR(DEMUX_SECTION_RESET_3) 	///../ucode/c_stb_define.h
+#define EFUSE_CNTL0 0x0 	///../ucode/secure_apb.h
+#define P_EFUSE_CNTL0 		SECBUS_REG_ADDR(EFUSE_CNTL0) 	///../ucode/secure_apb.h
+#define EFUSE_CNTL1 0x1 	///../ucode/secure_apb.h
+#define P_EFUSE_CNTL1 		SECBUS_REG_ADDR(EFUSE_CNTL1) 	///../ucode/secure_apb.h
+#define EFUSE_CNTL2 0x2 	///../ucode/secure_apb.h
+#define P_EFUSE_CNTL2 		SECBUS_REG_ADDR(EFUSE_CNTL2) 	///../ucode/secure_apb.h
+#define EFUSE_CNTL3 0x3 	///../ucode/secure_apb.h
+#define P_EFUSE_CNTL3 		SECBUS_REG_ADDR(EFUSE_CNTL3) 	///../ucode/secure_apb.h
+#define EFUSE_CNTL4 0x4 	///../ucode/secure_apb.h
+#define P_EFUSE_CNTL4 		SECBUS_REG_ADDR(EFUSE_CNTL4) 	///../ucode/secure_apb.h
+#define AO_SECURE_REG0 0x00 	///../ucode/secure_apb.h
+#define P_AO_SECURE_REG0 		SECBUS2_REG_ADDR(AO_SECURE_REG0) 	///../ucode/secure_apb.h
+#define AO_SECURE_REG1 0x01 	///../ucode/secure_apb.h
+#define P_AO_SECURE_REG1 		SECBUS2_REG_ADDR(AO_SECURE_REG1) 	///../ucode/secure_apb.h
+#define AO_RTC_ADDR0 0xd0 	///../ucode/secure_apb.h
+#define P_AO_RTC_ADDR0 		SECBUS2_REG_ADDR(AO_RTC_ADDR0) 	///../ucode/secure_apb.h
+#define AO_RTC_ADDR1 0xd1 	///../ucode/secure_apb.h
+#define P_AO_RTC_ADDR1 		SECBUS2_REG_ADDR(AO_RTC_ADDR1) 	///../ucode/secure_apb.h
+#define AO_RTC_ADDR2 0xd2 	///../ucode/secure_apb.h
+#define P_AO_RTC_ADDR2 		SECBUS2_REG_ADDR(AO_RTC_ADDR2) 	///../ucode/secure_apb.h
+#define AO_RTC_ADDR3 0xd3 	///../ucode/secure_apb.h
+#define P_AO_RTC_ADDR3 		SECBUS2_REG_ADDR(AO_RTC_ADDR3) 	///../ucode/secure_apb.h
+#define AO_RTC_ADDR4 0xd4 	///../ucode/secure_apb.h
+#define P_AO_RTC_ADDR4 		SECBUS2_REG_ADDR(AO_RTC_ADDR4) 	///../ucode/secure_apb.h
+#define HDMI_ADDR_PORT 0xc8002000 	///../ucode/hdmi.h
+#define P_HDMI_ADDR_PORT 		APB_REG_ADDR(HDMI_ADDR_PORT) 	///../ucode/hdmi.h
+#define HDMI_DATA_PORT 0xc8002004 	///../ucode/hdmi.h
+#define P_HDMI_DATA_PORT 		APB_REG_ADDR(HDMI_DATA_PORT) 	///../ucode/hdmi.h
+#define HDMI_CTRL_PORT 0xc8002008 	///../ucode/hdmi.h
+#define P_HDMI_CTRL_PORT 		APB_REG_ADDR(HDMI_CTRL_PORT) 	///../ucode/hdmi.h
+#endif
diff --git a/arch/arm/mach-meson6tv/include/mach/smp.h b/arch/arm/mach-meson6tv/include/mach/smp.h
new file mode 100755
index 000000000000..df7447e47fdb
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/smp.h
@@ -0,0 +1,30 @@
+/*
+* arch/arm/mach-meson6tv/include/mach/smp.h
+*
+* Copyright (C) 2013 Amlogic, Inc.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+#ifndef __MACH_MESON6TV_SMP_H
+#define __MACH_MESON6TV_SMP_H
+
+#include <linux/smp.h>
+#include <asm/smp.h>
+
+extern struct smp_operations meson6tv_smp_ops;
+
+#endif /* __MACH_MESON6TV_SMP_H */
+
diff --git a/arch/arm/mach-meson6tv/include/mach/system.h b/arch/arm/mach-meson6tv/include/mach/system.h
new file mode 100755
index 000000000000..ae8c371b7c9f
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/system.h
@@ -0,0 +1,54 @@
+/*
+ *  arch/arm/mach-meson6tv/include/mach/system.h
+ *
+ *  Copyright (C) 2010-2013 AMLOGIC, INC.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#ifndef __MACH_MESON6TV_SYSTEM_H
+#define __MACH_MESON6TV_SYSTEM_H
+
+#include <linux/io.h>
+#include <plat/io.h>
+#include <mach/hardware.h>
+#include <mach/register.h>
+
+static inline void arch_idle(void)
+{
+	/*
+	* This should do all the clock switching
+	* and wait for interrupt tricks
+	*/
+	cpu_do_idle();
+}
+
+#define WATCHDOG_ENABLE_BIT     (1<<22)
+#define DUAL_CORE_RESET         (3<<24)
+
+static inline void arch_reset(char mode, const char *cmd)
+{
+#ifndef CONFIG_BOARD_MESON6TV_REF
+	WRITE_AOBUS_REG(0, 0x6b730000);
+#endif
+	WRITE_MPEG_REG(WATCHDOG_RESET, 0);
+	WRITE_MPEG_REG(WATCHDOG_TC, DUAL_CORE_RESET| WATCHDOG_ENABLE_BIT | 1000);
+	WRITE_MPEG_REG(VENC_VDAC_SETTING, 0xf);
+	aml_write_reg32(P_VGHL_PWM_REG0,0x630000);
+	while(1)
+		cpu_relax();
+}
+
+#endif // __MACH_MESON6TV_SYSTEM_H
diff --git a/arch/arm/mach-meson6tv/include/mach/timex.h b/arch/arm/mach-meson6tv/include/mach/timex.h
new file mode 100755
index 000000000000..8b4881158056
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/timex.h
@@ -0,0 +1,33 @@
+/*
+ *  arch/arm/mach-meson6tv/include/mach/timex.h
+ *
+ *  Amlogic architecture timex specifications
+ *
+ *  Copyright (C) 2010-2013 AMLOGIC, INC.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+
+#ifndef __MACH_MESON6TV_TIMEX_H
+#define __MACH_MESON6TV_TIMEX_H
+
+#ifndef CONFIG_MESON_CLOCK_TICK_RATE
+#define CLOCK_TICK_RATE     25000000
+#else
+#define CLOCK_TICK_RATE     (CONFIG_MESON_CLOCK_TICK_RATE)
+#endif
+
+#endif // __MACH_MESON6TV_TIMEX_H
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/uart.h b/arch/arm/mach-meson6tv/include/mach/uart.h
new file mode 100755
index 000000000000..1defc6ab89d9
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/uart.h
@@ -0,0 +1,41 @@
+/*
+*  arch/arm/mach-meson6tvd/include/mach/uart.h
+*
+*  Copyright (C) 2013 AMLOGIC, INC.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with this program; if not, write to the Free Software
+* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*/
+
+#ifndef __MACH_MESON6TVD_UART_REGS_H
+#define __MACH_MESON6TVD_UART_REGS_H
+
+#define UART_AO    0
+#define UART_A     1
+#define UART_B     2
+#define UART_C     3
+#define UART_D     4
+
+#define MESON_UART_PORT_NUM 5
+
+#define MESON_UART_NAME "uart_ao","uart_a","uart_b","uart_c","uart_d"
+#define MESON_UART_LINE UART_AO,UART_A,UART_B,UART_C,UART_D
+#define MESON_UART_FIFO 64,128,64,64,64
+#define MESON_UART_ADDRS      ((void *)P_AO_UART_WFIFO),((void *)P_UART0_WFIFO), \
+						((void *)P_UART1_WFIFO),((void *)P_UART2_WFIFO),   \
+						((void *)P_UART3_WFIFO)
+#define MESON_UART_IRQS		INT_UART_AO, INT_UART_0, INT_UART_1, INT_UART_2    \
+						, INT_UART_3
+
+#endif // __MACH_MESON6TVD_UART_REGS_H
\ No newline at end of file
diff --git a/arch/arm/mach-meson6tv/include/mach/vpp.h b/arch/arm/mach-meson6tv/include/mach/vpp.h
new file mode 100755
index 000000000000..3dfcbc1fda82
--- /dev/null
+++ b/arch/arm/mach-meson6tv/include/mach/vpp.h
@@ -0,0 +1,77 @@
+/*
+ * arch/arm/mach-meson6tvd/include/mach/vpp.h
+ *
+ * Copyright (C) 2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __MACH_MESON_VPP_REGS_H
+#define __MACH_MESON_VPP_REGS_H
+
+
+// Bit 28   color management enable
+// Bit 27,  if true, vd2 use viu2 output as the input, otherwise use normal vd2 from memory
+// Bit 26:18, vd2 alpha
+// Bit 17, osd2 enable for preblend
+// Bit 16, osd1 enable for preblend
+// Bit 15, vd2 enable for preblend
+// Bit 14, vd1 enable for preblend
+// Bit 13, osd2 enable for postblend
+// Bit 12, osd1 enable for postblend
+// Bit 11, vd2 enable for postblend
+// Bit 10, vd1 enable for postblend
+// Bit 9,  if true, osd1 is alpha premultipiled
+// Bit 8,  if true, osd2 is alpha premultipiled
+// Bit 7,  postblend module enable
+// Bit 6,  preblend module enable
+// Bit 5,  if true, osd2 foreground compared with osd1 in preblend
+// Bit 4,  if true, osd2 foreground compared with osd1 in postblend
+// Bit 3,
+// Bit 2,  if true, disable resetting async fifo every vsync, otherwise every vsync
+//			 the aync fifo will be reseted.
+// Bit 1,
+// Bit 0	if true, the output result of VPP is saturated
+#define VPP_VD2_ALPHA_WID		9
+#define VPP_VD2_ALPHA_MASK		0x1ff
+#define VPP_VD2_ALPHA_BIT		18
+#define VPP_OSD2_PREBLEND		(1 << 17)
+#define VPP_OSD1_PREBLEND		(1 << 16)
+#define VPP_VD2_PREBLEND		(1 << 15)
+#define VPP_VD1_PREBLEND		(1 << 14)
+#define VPP_OSD2_POSTBLEND		(1 << 13)
+#define VPP_OSD1_POSTBLEND		(1 << 12)
+#define VPP_VD2_POSTBLEND		(1 << 11)
+#define VPP_VD1_POSTBLEND		(1 << 10)
+#define VPP_OSD1_ALPHA			(1 << 9)
+#define VPP_OSD2_ALPHA			(1 << 8)
+#define VPP_POSTBLEND_EN		(1 << 7)
+#define VPP_PREBLEND_EN			(1 << 6)
+#define VPP_PRE_FG_SEL_MASK		(1 << 5)
+#define VPP_PRE_FG_OSD2			(1 << 5)
+#define VPP_PRE_FG_OSD1			(0 << 5)
+#define VPP_POST_FG_SEL_MASK		(1 << 4)
+#define VPP_POST_FG_OSD2 		(1 << 4)
+#define VPP_POST_FG_OSD1		(0 << 4)
+#define VPP_FIFO_RESET_DE		(1 << 2)
+#define VPP_OUT_SATURATE		(1 << 0)
+
+
+/*tv relative part*/
+#define VFIFO2VD_CTL			0x1b58
+#define VFIFO2VD_PIXEL_START		0x1b59
+#define VFIFO2VD_PIXEL_END		0x1b5a
+#define VFIFO2VD_LINE_TOP_START		0x1b5b
+#define VFIFO2VD_LINE_TOP_END		0x1b5c
+#define VFIFO2VD_LINE_BOT_START		0x1b5d
+#define VFIFO2VD_LINE_BOT_END		0x1b5e
+
+
+#endif // __MACH_MESON_VPP_REGS_H
diff --git a/arch/arm/mach-meson6tv/iomapping.c b/arch/arm/mach-meson6tv/iomapping.c
new file mode 100755
index 000000000000..92884bdbd2a4
--- /dev/null
+++ b/arch/arm/mach-meson6tv/iomapping.c
@@ -0,0 +1,145 @@
+/*
+ * arch/arm/mach-meson6tv/iomapping.c
+ *
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/sizes.h>
+#include <linux/mm.h>
+#include <asm/memory.h>
+#include <asm/mach/map.h>
+
+#include <mach/io.h>
+
+/***********************************************************************
+ * IO Mapping
+ **********************************************************************/
+/*
+#define IO_CBUS_BASE        0xf1100000  ///2M
+#define IO_AXI_BUS_BASE     0xf1300000  ///1M
+#define IO_PL310_BASE       0xf2200000  ///4k
+#define IO_PERIPH_BASE      0xf2300000  ///4k
+#define IO_APB_BUS_BASE     0xf3000000  ///8k
+#define IO_DOS_BUS_BASE     0xf3010000  ///64k
+#define IO_AOBUS_BASE       0xf3100000  ///1M
+#define IO_USB_A_BASE       0xf3240000  ///256k
+#define IO_USB_B_BASE       0xf32C0000  ///256k
+#define IO_WIFI_BASE        0xf3300000  ///1M
+#define IO_SATA_BASE        0xf3400000  ///64k
+#define IO_ETH_BASE         0xf3410000  ///64k
+
+#define IO_SPIMEM_BASE      0xf4000000  ///64M
+#define IO_A9_APB_BASE      0xf8000000  ///256k
+#define IO_DEMOD_APB_BASE   0xf8044000  ///112k
+#define IO_MALI_APB_BASE    0xf8060000  ///128k
+#define IO_APB2_BUS_BASE    0xf8000000
+#define IO_AHB_BASE         0xf9000000  ///128k
+#define IO_BOOTROM_BASE     0xf9040000  ///64k
+#define IO_SECBUS_BASE      0xfa000000
+#define IO_EFUSE_BASE       0xfa000000  ///4k
+*/
+
+static __initdata struct map_desc meson6tv_io_desc[] = {
+	{
+		.virtual	= IO_CBUS_BASE,
+		.pfn		= __phys_to_pfn(IO_CBUS_PHY_BASE),
+		.length		= SZ_2M,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_AXI_BUS_BASE,
+		.pfn		= __phys_to_pfn(IO_AXI_BUS_PHY_BASE),
+		.length		= SZ_1M,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_PL310_BASE,
+		.pfn		= __phys_to_pfn(IO_PL310_PHY_BASE),
+		.length		= SZ_4K,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_PERIPH_BASE,
+		.pfn		= __phys_to_pfn(IO_PERIPH_PHY_BASE),
+		.length		= SZ_1M,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_APB_BUS_BASE,
+		.pfn		= __phys_to_pfn(IO_APB_BUS_PHY_BASE),
+		.length		= SZ_1M,
+		.type		= MT_DEVICE,
+	}, /*{
+		.virtual	= IO_DOS_BUS_BASE,
+		.pfn		= __phys_to_pfn(IO_DOS_BUS_PHY_BASE),
+		.length		= SZ_64K,
+		.type		= MT_DEVICE,
+	}, */{
+		.virtual	= IO_AOBUS_BASE,
+		.pfn		= __phys_to_pfn(IO_AOBUS_PHY_BASE),
+		.length		= SZ_1M,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_AHB_BUS_BASE,
+		.pfn		= __phys_to_pfn(IO_AHB_BUS_PHY_BASE),
+		.length		= SZ_8M,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_SPIMEM_BASE,
+		.pfn		= __phys_to_pfn(IO_SPIMEM_PHY_BASE),
+		.length		= SZ_64M,
+		.type		= MT_ROM,
+	}, {
+		.virtual	= IO_APB2_BUS_BASE,
+		.pfn		= __phys_to_pfn(IO_APB2_BUS_PHY_BASE),
+		.length		= SZ_512K,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_AHB_BASE,
+		.pfn		= __phys_to_pfn(IO_AHB_PHY_BASE),
+		.length		= SZ_128K,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_BOOTROM_BASE,
+		.pfn		= __phys_to_pfn(IO_BOOTROM_PHY_BASE),
+		.length		= SZ_64K,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_SECBUS_BASE,
+		.pfn		= __phys_to_pfn(IO_SECBUS_PHY_BASE),
+		.length		= SZ_4K,
+		.type		= MT_DEVICE,
+	}, {
+		.virtual	= IO_SECURE_BASE,
+		.pfn		= __phys_to_pfn(IO_SECURE_PHY_BASE),
+		.length		= SZ_16K,
+		.type		= MT_DEVICE,
+	},
+#ifdef CONFIG_MESON_SUSPEND
+	{
+		.virtual	= PAGE_ALIGN(__phys_to_virt(0x9ff00000)),
+		.pfn		= __phys_to_pfn(0x9ff00000),
+		.length		= SZ_1M,
+		.type		= MT_MEMORY_NONCACHED,
+	},
+#endif
+
+};
+
+void __init meson6tv_map_default_io(void)
+{
+	iotable_init(meson6tv_io_desc, ARRAY_SIZE(meson6tv_io_desc));
+}
+
diff --git a/arch/arm/mach-meson6tv/mod_gate.c b/arch/arm/mach-meson6tv/mod_gate.c
new file mode 100755
index 000000000000..1268146ef41d
--- /dev/null
+++ b/arch/arm/mach-meson6tv/mod_gate.c
@@ -0,0 +1,999 @@
+/*
+ * arch/arm/mach-meson6tv/mod_gate.c
+ *
+ * Copyright (C) 2011-2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/init.h>
+#include <linux/device.h>
+#include <linux/module.h>
+#include <linux/spinlock.h>
+#include <linux/err.h>
+
+#include <mach/power_gate.h>
+#include <mach/mod_gate.h>
+#include <mach/am_regs.h>
+
+//#define PRINT_DEBUG_INFO
+#ifdef PRINT_DEBUG_INFO
+#define PRINT_INFO(...)		printk(__VA_ARGS__)
+#else
+#define PRINT_INFO(...)
+#endif
+
+typedef struct{
+	const char* name;
+	const mod_type_t type;
+	int ref;
+	int flag;
+	int dc_en;
+}mod_record_t;
+
+DEFINE_SPINLOCK(mod_lock);
+
+static mod_record_t mod_records[MOD_MAX_NUM + 1] = {
+	{
+		.name = "vdec",
+		.type = MOD_VDEC,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "audio",
+		.type = MOD_AUDIO,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "hdmi",
+		.type = MOD_HDMI,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "venc",
+		.type = MOD_VENC,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "tcon",
+		.type = MOD_TCON,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "lvds",
+		.type = MOD_LVDS,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "mipi",
+		.type = MOD_MIPI,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "bt656",
+		.type = MOD_BT656,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "spi",
+		.type = MOD_SPI,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "uart0",
+		.type = MOD_UART0,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "uart1",
+		.type = MOD_UART1,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "uart2",
+		.type = MOD_UART2,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "uart3",
+		.type = MOD_UART3,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "rom",
+		.type = MOD_ROM,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "efuse",
+		.type = MOD_EFUSE,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "random_num_gen",
+		.type = MOD_RANDOM_NUM_GEN,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "ethernet",
+		.type = MOD_ETHERNET,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "media_cpu",
+		.type = MOD_MEDIA_CPU,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "ge2d",
+		.type = MOD_GE2D,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "vdin",
+		.type = MOD_VIDEO_IN,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "viu2",
+		.type = MOD_VIU2,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "audio_in",
+		.type = MOD_AUD_IN,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "audio_out",
+		.type = MOD_AUD_OUT,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "ahb",
+		.type = MOD_AHB,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "demux",
+		.type = MOD_DEMUX,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "smart_card",
+		.type = MOD_SMART_CARD,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "sdhc",
+		.type = MOD_SDHC,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "stream",
+		.type = MOD_STREAM,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "blk_mov",
+		.type = MOD_BLK_MOV,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "dvin",
+		.type = MOD_MISC_DVIN,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "rdma",
+		.type = MOD_MISC_RDMA,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "usb0",
+		.type = MOD_USB0,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "usb1",
+		.type = MOD_USB1,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "usb2",
+		.type = MOD_USB2,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "usb3",
+		.type = MOD_USB3,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "sdio",
+		.type = MOD_SDIO,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 1,
+	},{
+		.name = "vi_core",
+		.type = MOD_VI_CORE,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 0,
+	},{
+		.name = "led_pwm",
+		.type = MOD_LED_PWM,
+		.ref = 0,
+		.flag = 1,
+		.dc_en = 1,
+	},{
+		.name = NULL,
+		.type = -1,
+		.ref = -1,
+		.flag = -1,
+		.dc_en = -1,
+	}, //end of the record array
+};
+
+
+static int _switch_gate(mod_type_t type, int flag)
+{
+	int ret = 0;
+	switch(type) {
+	case MOD_VDEC:
+		PRINT_INFO("turn %s vdec module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(DOS);
+		} else {
+			GATE_OFF(DOS);
+		}
+		break;
+	case MOD_AUDIO:
+		PRINT_INFO("turn %s audio module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(AIU_AMCLK_MEASURE);
+			GATE_ON(AIU_AIFIFO2);
+			GATE_ON(AIU_AUD_MIXER);
+			GATE_ON(AIU_MIXER_REG);
+
+			GATE_ON(AIU_IEC958);
+			GATE_ON(AIU_AI_TOP_GLUE);
+			GATE_ON(AUD_BUF);
+			GATE_ON(AIU_I2S_OUT);
+			GATE_ON(AIU_AMCLK); //this gate should not be turned off
+			GATE_ON(AIU_ICE958_AMCLK);
+			GATE_ON(AIU_AOCLK);
+			//GATE_ON(AUD_IN);
+			GATE_ON(AIU_ADC);
+			GATE_ON(AIU_AUDIN_SCLK);
+		} else {
+			GATE_OFF(AIU_AMCLK_MEASURE);
+			GATE_OFF(AIU_AIFIFO2);
+			GATE_OFF(AIU_AUD_MIXER);
+			GATE_OFF(AIU_MIXER_REG);
+
+			GATE_OFF(AIU_IEC958);
+			GATE_OFF(AIU_AI_TOP_GLUE);
+			GATE_OFF(AUD_BUF);
+			GATE_OFF(AIU_I2S_OUT);
+			GATE_OFF(AIU_AMCLK); //this gate should not be turned off
+			GATE_OFF(AIU_ICE958_AMCLK);
+			GATE_OFF(AIU_AOCLK);
+			//GATE_OFF(AUD_IN);
+			GATE_OFF(AIU_ADC);
+			GATE_OFF(AIU_AUDIN_SCLK);
+		}
+		break;
+	case MOD_HDMI:
+		PRINT_INFO("turn %s hdmi module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(HDMI_INTR_SYNC);
+			GATE_ON(HDMI_PCLK);
+			//GATE_ON(VCLK1_HDMI);
+			GATE_ON(HDMI_RX);
+		} else {
+			GATE_OFF(HDMI_INTR_SYNC);
+			GATE_OFF(HDMI_PCLK);
+			GATE_OFF(HDMI_RX);
+			//GATE_OFF(VCLK1_HDMI);
+		}
+		break;
+	case MOD_VENC:
+		PRINT_INFO("turn %s venc module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(VCLK2_VENCI);
+			GATE_ON(VCLK2_VENCI1);
+			GATE_ON(VCLK2_VENCP);
+			GATE_ON(VCLK2_VENCP1);
+			GATE_ON(VENC_P_TOP);
+			GATE_ON(VENC_I_TOP);
+			GATE_ON(VENCI_INT);
+			GATE_ON(VENCP_INT);
+			GATE_ON(VCLK2_ENCI);
+			GATE_ON(VCLK2_ENCP);
+			GATE_ON(VCLK2_VENCT);
+			GATE_ON(VCLK2_VENCT1);
+			GATE_ON(VCLK2_OTHER);
+			GATE_ON(VCLK2_OTHER1);
+			GATE_ON(ENC480P);
+			GATE_ON(VENC_DAC);
+			GATE_ON(DAC_CLK);
+		} else {
+			GATE_OFF(VCLK2_VENCI);
+			GATE_OFF(VCLK2_VENCI1);
+			GATE_OFF(VCLK2_VENCP);
+			GATE_OFF(VCLK2_VENCP1);
+			GATE_OFF(VENC_P_TOP);
+			GATE_OFF(VENC_I_TOP);
+			GATE_OFF(VENCI_INT);
+			GATE_OFF(VENCP_INT);
+			GATE_OFF(VCLK2_ENCI);
+			GATE_OFF(VCLK2_ENCP);
+			GATE_OFF(VCLK2_VENCT);
+			GATE_OFF(VCLK2_VENCT1);
+			GATE_OFF(VCLK2_OTHER);
+			GATE_OFF(VCLK2_OTHER1);
+			GATE_OFF(ENC480P);
+			GATE_OFF(VENC_DAC);
+			GATE_OFF(DAC_CLK);
+		}
+		break;
+	case MOD_TCON:
+		PRINT_INFO("turn %s tcon module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(VENC_T_TOP);
+			GATE_ON(VENCT_INT);
+			GATE_ON(VCLK2_ENCT);
+		} else {
+			GATE_OFF(VENC_T_TOP);
+			GATE_OFF(VENCT_INT);
+			GATE_OFF(VCLK2_ENCT);
+		}
+		break;
+	case MOD_LVDS:
+		PRINT_INFO("turn %s lvds module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(VENC_L_TOP);
+			GATE_ON(VENCL_INT);
+			GATE_ON(VCLK2_ENCL);
+		} else {
+			GATE_OFF(VENC_L_TOP);
+			GATE_OFF(VENCL_INT);
+			GATE_OFF(VCLK2_ENCL);
+		}
+		break;
+	case MOD_MIPI:
+		PRINT_INFO("turn %s mipi module\n", flag?"on":"off");
+#if 0
+		if (flag) {
+			GATE_ON(MIPI_APB_CLK);
+			GATE_ON(MIPI_SYS_CLK);
+			GATE_ON(MIPI_PHY);
+		} else {
+			GATE_OFF(MIPI_APB_CLK);
+			GATE_OFF(MIPI_SYS_CLK);
+			GATE_OFF(MIPI_PHY);
+		}
+#endif
+		break;
+	case MOD_BT656:
+		PRINT_INFO("turn %s bt656 module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(BT656_IN);
+		} else {
+			GATE_OFF(BT656_IN);
+		}
+		break;
+	case MOD_SPI:
+		PRINT_INFO("turn %s spi module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(SPICC);
+			GATE_ON(SPI1);
+			GATE_ON(SPI2);
+		} else {
+			GATE_OFF(SPICC);
+			GATE_OFF(SPI1);
+			GATE_OFF(SPI2);
+		}
+		break;
+	case MOD_UART0:
+		PRINT_INFO("turn %s uart0 module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(UART0);
+		} else {
+			GATE_OFF(UART0);
+		}
+		break;
+	case MOD_UART1:
+		PRINT_INFO("turn %s uart1 module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(UART1);
+		} else {
+			GATE_OFF(UART1);
+		}
+		break;
+	case MOD_UART2:
+		PRINT_INFO("turn %s uart2 module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(UART2);
+		} else {
+			GATE_OFF(UART2);
+		}
+		break;
+	case MOD_UART3:
+		PRINT_INFO("turn %s uart3 module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(UART3);
+		} else {
+			GATE_OFF(UART3);
+		}
+		break;
+	case MOD_ROM:
+		PRINT_INFO("turn %s rom module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(ROM_CLK);
+		} else {
+			GATE_OFF(ROM_CLK);
+		}
+		break;
+	case MOD_EFUSE:
+		PRINT_INFO("turn %s efuse module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(EFUSE);
+		} else {
+			GATE_OFF(EFUSE);
+		}
+		break;
+	case MOD_RANDOM_NUM_GEN:
+		PRINT_INFO("turn %s random_num_gen module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(RAND_NUM_GEN);
+		} else {
+			GATE_OFF(RAND_NUM_GEN);
+		}
+		break;
+	case MOD_ETHERNET:
+		PRINT_INFO("turn %s ethernet module\n", flag?"on":"off");
+		if (flag) {
+			GATE_ON(ETHERNET);
+		} else {
+			GATE_OFF(ETHERNET);
+		}
+		break;
+	case MOD_MEDIA_CPU:
+		PRINT_INFO("trun %s Audio DSP\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(MEDIA_CPU);
+		}else{
+			GATE_OFF(MEDIA_CPU);
+		}
+		break;
+	case MOD_GE2D:
+		PRINT_INFO("trun %s GE2D\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(GE2D);
+		}else{
+			GATE_OFF(GE2D);
+		}
+		break;
+	case MOD_VIDEO_IN:
+		PRINT_INFO("trun %s video_in\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(VIDEO_IN);
+		}else{
+			GATE_OFF(VIDEO_IN);
+		}
+		break;
+	case MOD_VIU2:
+		PRINT_INFO("trun %s viu2\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(VIU2);
+		}else{
+			GATE_OFF(VIU2);
+		}
+		break;
+	case MOD_AUD_IN:
+		PRINT_INFO("trun %s audio_in\n", flag? " on" : "off");
+#if 0
+		if(flag){
+			GATE_ON(AIU_ADC);
+			GATE_ON(AIU_AUDIN_SCLK);
+		}else{
+			GATE_OFF(AIU_ADC);
+			GATE_OFF(AIU_AUDIN_SCLK);
+		}
+#endif
+		break;
+	case MOD_AUD_OUT:
+		PRINT_INFO("trun %s audio_out\n", flag? " on" : "off");
+		if(flag){
+
+		}else{
+
+		}
+		break;
+	case MOD_AHB:
+		PRINT_INFO("trun %s ahb\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(AHB_ARB0);
+			GATE_ON(AHB_BRIDGE);
+			GATE_ON(AHB_DATA_BUS);
+			GATE_ON(AHB_CONTROL_BUS);
+		}else{
+			GATE_OFF(AHB_ARB0);
+			GATE_OFF(AHB_BRIDGE);
+			GATE_OFF(AHB_DATA_BUS);
+			GATE_OFF(AHB_CONTROL_BUS);
+		}
+		break;
+	case MOD_DEMUX:
+		PRINT_INFO("trun %s demux\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(DEMUX);
+		}else{
+			GATE_OFF(DEMUX);
+		}
+		break;
+	case MOD_SMART_CARD:
+		PRINT_INFO("trun %s smart card\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(SMART_CARD_MPEG_DOMAIN);
+		}else{
+			GATE_OFF(SMART_CARD_MPEG_DOMAIN);
+		}
+		break;
+	case MOD_SDHC:
+		PRINT_INFO("trun %s sdhc\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(SDHC);
+		}else{
+			GATE_OFF(SDHC);
+		}
+		break;
+	case MOD_STREAM:
+		PRINT_INFO("trun %s stream\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(STREAM);
+		}else{
+			GATE_OFF(STREAM);
+		}
+		break;
+	case MOD_BLK_MOV:
+		PRINT_INFO("trun %s blk_mov\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(BLK_MOV);
+		}else{
+			GATE_OFF(BLK_MOV);
+		}
+		break;
+	case MOD_MISC_DVIN:
+		PRINT_INFO("trun %s dvin\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(MISC_DVIN);
+		}else{
+			GATE_OFF(MISC_DVIN);
+		}
+		break;
+	case MOD_MISC_RDMA:
+		PRINT_INFO("trun %s rdma\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(MISC_RDMA);
+		}else{
+			GATE_OFF(MISC_RDMA);
+		}
+		break;
+	case MOD_USB0:
+		PRINT_INFO("trun %s usb0\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(USB0);
+			GATE_ON(MISC_USB0_TO_DDR);
+		}else{
+			GATE_OFF(USB0);
+			GATE_ON(MISC_USB0_TO_DDR);
+		}
+		break;
+	case MOD_USB1:
+		PRINT_INFO("trun %s usb1\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(USB1);
+			GATE_ON(MISC_USB1_TO_DDR);
+		}else{
+			GATE_OFF(USB1);
+			GATE_ON(MISC_USB1_TO_DDR);
+		}
+		break;
+	case MOD_USB2:
+		PRINT_INFO("trun %s usb2\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(USB2_OTG_CON);
+			GATE_ON(USB2_TO_DDR);
+		}else{
+			GATE_OFF(USB2_OTG_CON);
+			GATE_ON(USB2_TO_DDR);
+		}
+		break;
+	case MOD_USB3:
+		PRINT_INFO("trun %s usb3\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(USB3_OTG_CON);
+			GATE_ON(USB3_TO_DDR);
+		}else{
+			GATE_OFF(USB3_OTG_CON);
+			GATE_ON(USB3_TO_DDR);
+		}
+		break;
+	case MOD_SDIO:
+		PRINT_INFO("trun %s sdio\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(SDIO);
+		}else{
+			GATE_OFF(SDIO);
+		}
+		break;
+	case MOD_VI_CORE:
+		PRINT_INFO("trun %s vi core\n", flag? " on" : "off");
+		if(flag){
+			GATE_ON(VI_CORE);
+		}else{
+			GATE_OFF(VI_CORE);
+		}
+		break;
+	case MOD_LED_PWM:
+		PRINT_INFO("trun %s led pwm\n", flag? " on" : "off");
+#if 0
+		if(flag){
+		GATE_ON(LED_PWM);
+		}else{
+		GATE_OFF(LED_PWM);
+		}
+#endif
+		break;
+	default:
+		PRINT_INFO("mod type not support\n");
+		ret = -1;
+		break;
+	}
+	return ret;
+}
+
+static int get_mod(mod_record_t* mod_record)
+{
+	int ret = 0;
+	unsigned long flags;
+	PRINT_INFO("get mod  %s\n", mod_record->name);
+	spin_lock_irqsave(&mod_lock, flags);
+	if(mod_record->ref > 0)
+		mod_record->ref++;
+	else {
+		mod_record->ref = 1;
+		mod_record->flag = 1;
+		ret = _switch_gate(mod_record->type, 1);
+	}
+	spin_unlock_irqrestore(&mod_lock, flags);
+	return ret;
+}
+
+static int put_mod(mod_record_t* mod_record)
+{
+	int ret = 0;
+	unsigned long flags;
+	PRINT_INFO("put mod  %s\n", mod_record->name);
+	spin_lock_irqsave(&mod_lock, flags);
+	mod_record->ref--;
+	if(mod_record->ref <= 0) {
+		ret = _switch_gate(mod_record->type, 0);
+		mod_record->ref = 0;
+		mod_record->flag = 0;
+	}
+	spin_unlock_irqrestore(&mod_lock, flags);
+	return ret;
+}
+
+static void _switch_mod_gate_by_type(mod_type_t type, int flag, int dc_protect)
+{
+	if (mod_records[type].dc_en <= 0 && dc_protect)
+		return;
+	else {
+		if (flag)
+			get_mod(&mod_records[type]);
+		else
+			put_mod(&mod_records[type]);
+	}
+}
+
+void switch_mod_gate_by_type(mod_type_t type, int flag)
+{
+	_switch_mod_gate_by_type(type, flag, 1);
+}
+EXPORT_SYMBOL(switch_mod_gate_by_type);
+
+static void _switch_mod_gate_by_name(const char* mod_name, int flag, int dc_protect)
+{
+	int i = 0;
+	//PRINT_INFO("arg mod_name is %s\n", mod_name);
+	while (mod_records[i].name && i < MOD_MAX_NUM) {
+		//PRINT_INFO("mod%d name is %s\n", i, mod_records[i].name);
+		if (!strncmp(mod_name, mod_records[i].name, strlen(mod_name))) {
+			if (mod_records[i].dc_en <= 0 && dc_protect)
+				break;
+			else {
+				if (flag)
+					get_mod(&mod_records[i]);
+				else
+					put_mod(&mod_records[i]);
+				break;
+			}
+		}
+		i++;
+	}
+}
+
+void switch_mod_gate_by_name(const char* mod_name, int flag)
+{
+	_switch_mod_gate_by_name(mod_name, flag, 1);
+}
+EXPORT_SYMBOL(switch_mod_gate_by_name);
+
+void power_gate_init(void)
+{
+	GATE_INIT(DDR);
+	GATE_INIT(DOS);
+	GATE_INIT(MIPI_APB_CLK);
+	GATE_INIT(MIPI_SYS_CLK);
+	GATE_INIT(AHB_BRIDGE);
+	GATE_INIT(ISA);
+	GATE_INIT(APB_CBUS);
+	GATE_INIT(_1200XXX);
+	GATE_INIT(SPICC);
+	GATE_INIT(I2C);
+	GATE_INIT(SAR_ADC);
+	GATE_INIT(SMART_CARD_MPEG_DOMAIN);
+	GATE_INIT(RANDOM_NUM_GEN);
+	GATE_INIT(UART0);
+	GATE_INIT(SDHC);
+	GATE_INIT(STREAM);
+	GATE_INIT(ASYNC_FIFO);
+	GATE_INIT(SDIO);
+	GATE_INIT(AUD_BUF);
+	GATE_INIT(HIU_PARSER);
+	GATE_INIT(BT656_IN);
+	GATE_INIT(ASSIST_MISC);
+	GATE_INIT(VENC_I_TOP);
+	GATE_INIT(VENC_P_TOP);
+	GATE_INIT(VENC_T_TOP);
+	GATE_INIT(VENC_DAC);
+	GATE_INIT(VI_CORE);
+	GATE_INIT(SPI2);
+	GATE_INIT(SPI1);
+	GATE_INIT(AUD_IN);
+	GATE_INIT(ETHERNET);
+	GATE_INIT(DEMUX);
+	GATE_INIT(AIU_AI_TOP_GLUE);
+	GATE_INIT(AIU_IEC958);
+	GATE_INIT(AIU_I2S_OUT);
+	GATE_INIT(AIU_AMCLK_MEASURE);
+	GATE_INIT(AIU_AIFIFO2);
+	GATE_INIT(AIU_AUD_MIXER);
+	GATE_INIT(AIU_MIXER_REG);
+	GATE_INIT(AIU_ADC);
+	GATE_INIT(BLK_MOV);
+	GATE_INIT(UART1);
+	GATE_INIT(LED_PWM);
+	GATE_INIT(VGHL_PWM);
+	GATE_INIT(GE2D);
+	GATE_INIT(USB0);
+	GATE_INIT(USB1);
+	GATE_INIT(RESET);
+	GATE_INIT(NAND);
+	GATE_INIT(HIU_PARSER_TOP);
+	GATE_INIT(MIPI_PHY);
+	GATE_INIT(VIDEO_IN);
+	GATE_INIT(AHB_ARB0);
+	GATE_INIT(EFUSE);
+	GATE_INIT(ROM_CLK);
+	GATE_INIT(AHB_DATA_BUS);
+	GATE_INIT(AHB_CONTROL_BUS);
+	GATE_INIT(HDMI_INTR_SYNC);
+	GATE_INIT(HDMI_PCLK);
+	GATE_INIT(MISC_USB1_TO_DDR);
+	GATE_INIT(MISC_USB0_TO_DDR);
+	GATE_INIT(MMC_PCLK);
+	GATE_INIT(MISC_DVIN);
+	GATE_INIT(MISC_RDMA);
+	GATE_INIT(UART2);
+	GATE_INIT(VENCI_INT);
+	GATE_INIT(VIU2);
+	GATE_INIT(VENCP_INT);
+	GATE_INIT(VENCT_INT);
+	GATE_INIT(VENCL_INT);
+	GATE_INIT(VENC_L_TOP);
+	GATE_INIT(UART3);
+	GATE_INIT(VCLK2_VENCI);
+	GATE_INIT(VCLK2_VENCI1);
+	GATE_INIT(VCLK2_VENCP);
+	GATE_INIT(VCLK2_VENCP1);
+	GATE_INIT(VCLK2_VENCT);
+	GATE_INIT(VCLK2_VENCT1);
+	GATE_INIT(VCLK2_OTHER);
+	GATE_INIT(VCLK2_ENCI);
+	GATE_INIT(VCLK2_ENCP);
+	GATE_INIT(DAC_CLK);
+	GATE_INIT(AIU_AOCLK);
+	GATE_INIT(AIU_AMCLK);
+	GATE_INIT(AIU_ICE958_AMCLK);
+	GATE_INIT(VCLK1_HDMI);
+	GATE_INIT(AIU_AUDIN_SCLK);
+	GATE_INIT(ENC480P);
+	GATE_INIT(VCLK2_ENCT);
+	GATE_INIT(VCLK2_ENCL);
+	GATE_INIT(MMC_CLK);
+	GATE_INIT(VCLK2_VENCL);
+	GATE_INIT(VCLK2_OTHER1);
+	GATE_INIT(MEDIA_CPU);
+}
+
+static struct class* mod_gate_clsp;
+
+static ssize_t show_mod_on(struct class* class, struct class_attribute* attr,
+	char* buf)
+{
+	ssize_t size = 0;
+	int i = 0;
+	while(mod_records[i].name && i < MOD_MAX_NUM) {
+		if (mod_records[i].flag > 0)
+			size += sprintf(buf + size, "%s\n", mod_records[i].name);
+		i++;
+	}
+	return size;
+}
+
+static ssize_t store_mod_on(struct class* class, struct class_attribute* attr,
+	const char* buf, size_t count )
+{
+	char tmp_str[32];
+	memset(tmp_str, 0, 32);
+	strncpy(tmp_str, buf, 32);
+	while(tmp_str[0] && tmp_str[strlen(tmp_str)-1] < 33 )
+	tmp_str[strlen(tmp_str)-1] = 0;
+	_switch_mod_gate_by_name(tmp_str, 1, 0);
+	return count;
+}
+
+static ssize_t show_mod_off(struct class* class, struct class_attribute* attr,
+	char* buf)
+{
+	ssize_t size = 0;
+	int i = 0;
+	while(mod_records[i].name && i < MOD_MAX_NUM) {
+		if (mod_records[i].flag <= 0)
+			size += sprintf(buf + size, "%s\n", mod_records[i].name);
+		i++;
+	}
+	return size;
+}
+
+static ssize_t store_mod_off(struct class* class, struct class_attribute* attr,
+	const char* buf, size_t count )
+{
+	char tmp_str[32];
+	memset(tmp_str, 0, 32);
+	strncpy(tmp_str, buf, 32);
+	while(tmp_str[0] && tmp_str[strlen(tmp_str)-1] < 33 )
+	tmp_str[strlen(tmp_str)-1] = 0;
+	_switch_mod_gate_by_name(tmp_str, 0, 0);
+	return count;
+}
+
+static ssize_t show_dynamical_control(struct class* class, struct class_attribute* attr,
+	char* buf)
+{
+	ssize_t size = 0;
+	int i = 0;
+	while (mod_records[i].name && i < MOD_MAX_NUM) {
+		if (mod_records[i].dc_en > 0)
+			size += sprintf(buf + size, "%s\n", mod_records[i].name);
+		i++;
+	}
+	return size;
+}
+
+static ssize_t store_dynamical_control(struct class* class, struct class_attribute* attr,
+	const char* buf, size_t count )
+{
+	int i = 0;
+	char tmp_str[32];
+
+	PRINT_INFO("arg mod_name is %s\n", buf);
+	while(mod_records[i].name && i < MOD_MAX_NUM) {
+		memset(tmp_str, 0, 32);
+		strncpy(tmp_str, buf, 32);
+		while(tmp_str[0] && tmp_str[strlen(tmp_str)-1] < 33 )
+		tmp_str[strlen(tmp_str)-1] = 0;
+		//PRINT_INFO("mod%d name is %s\n", i, mod_records[i].name);
+		if (!strncmp(tmp_str, mod_records[i].name, strlen(tmp_str))) {
+			mod_records[i].dc_en = 1;
+			break;
+		}
+		i++;
+	}
+	return count;
+}
+
+static struct class_attribute aml_mod_attrs[]={
+	__ATTR(mod_on,   S_IRUGO | S_IWUSR, show_mod_on,  store_mod_on),
+	__ATTR(mod_off,  S_IRUGO | S_IWUSR, show_mod_off, store_mod_off),
+	__ATTR(dynamical_control,  S_IRUGO | S_IWUSR, show_dynamical_control, store_dynamical_control),
+	__ATTR_NULL,
+};
+
+static int __init mode_gate_mgr_init(void)
+{
+	int ret = 0, i = 0;
+	power_gate_init();
+	mod_gate_clsp = class_create(THIS_MODULE, "aml_mod");
+	if (IS_ERR(mod_gate_clsp)){
+		ret = PTR_ERR(mod_gate_clsp);
+		return ret;
+	}
+	for(i = 0; aml_mod_attrs[i].attr.name; i++){
+	if (class_create_file(mod_gate_clsp, &aml_mod_attrs[i]) < 0)
+		goto err;
+	}
+	return 0;
+err:
+	for (i=0; aml_mod_attrs[i].attr.name; i++){
+		class_remove_file(mod_gate_clsp, &aml_mod_attrs[i]);
+	}
+	class_destroy(mod_gate_clsp);
+	return -1;
+}
+arch_initcall(mode_gate_mgr_init);
+
diff --git a/arch/arm/mach-meson6tv/pinctrl.c b/arch/arm/mach-meson6tv/pinctrl.c
new file mode 100755
index 000000000000..55a06a6fe291
--- /dev/null
+++ b/arch/arm/mach-meson6tv/pinctrl.c
@@ -0,0 +1,783 @@
+/*
+ * arch/arm/mach-meson6tv/pinctrl.c
+ *
+ * Amlogic pin controller driver
+ *
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <linux/slab.h>
+#include <linux/err.h>
+#include <linux/of.h>
+#include <linux/of_device.h>
+#include <linux/pinctrl/machine.h>
+#include <linux/pinctrl/pinctrl.h>
+#include <linux/pinctrl/pinmux.h>
+#include <linux/pinctrl/pinconf.h>
+
+#include <plat/io.h>
+#include <mach/gpio.h>
+#include <mach/am_regs.h>
+
+#include <linux/amlogic/pinctrl-amlogic.h>
+#include <linux/amlogic/aml_gpio_consumer.h>
+
+DEFINE_MUTEX(spi_nand_mutex);
+
+unsigned int p_pull_up_addr[] = {
+	P_PAD_PULL_UP_REG0,
+	P_PAD_PULL_UP_REG1,
+	P_PAD_PULL_UP_REG2,
+	P_PAD_PULL_UP_REG3,
+	P_PAD_PULL_UP_REG4,
+	P_PAD_PULL_UP_REG5,
+	P_PAD_PULL_UP_REG6,
+};
+
+unsigned int p_pin_mux_reg_addr[] = {
+	P_PERIPHS_PIN_MUX_0,
+	P_PERIPHS_PIN_MUX_1,
+	P_PERIPHS_PIN_MUX_2,
+	P_PERIPHS_PIN_MUX_3,
+	P_PERIPHS_PIN_MUX_4,
+	P_PERIPHS_PIN_MUX_5,
+	P_PERIPHS_PIN_MUX_6,
+	P_PERIPHS_PIN_MUX_7,
+	P_PERIPHS_PIN_MUX_8,
+	P_PERIPHS_PIN_MUX_9,
+	P_AO_RTI_PIN_MUX_REG,
+};
+
+static const struct pinctrl_pin_desc m6tv_pads[] = {
+
+	PINCTRL_PIN(GPIOZ_0,	"GPIOZ_0"),
+	PINCTRL_PIN(GPIOZ_1,	"GPIOZ_1"),
+	PINCTRL_PIN(GPIOZ_2,	"GPIOZ_2"),
+	PINCTRL_PIN(GPIOZ_3,	"GPIOZ_3"),
+	PINCTRL_PIN(GPIOZ_4,	"GPIOZ_4"),
+	PINCTRL_PIN(GPIOZ_5,	"GPIOZ_5"),
+	PINCTRL_PIN(GPIOZ_6,	"GPIOZ_6"),
+	PINCTRL_PIN(GPIOZ_7,	"GPIOZ_7"),
+	PINCTRL_PIN(GPIOZ_8,	"GPIOZ_8"),
+	PINCTRL_PIN(GPIOZ_9,	"GPIOZ_9"),
+	PINCTRL_PIN(GPIOZ_10,	"GPIOZ_10"),
+	PINCTRL_PIN(GPIOZ_11,	"GPIOZ_11"),
+	PINCTRL_PIN(GPIOZ_12,	"GPIOZ_12"),
+	PINCTRL_PIN(GPIOZ_13,	"GPIOZ_13"),
+	PINCTRL_PIN(GPIOZ_14,	"GPIOZ_14"),
+	PINCTRL_PIN(GPIOZ_15,	"GPIOZ_15"),
+	PINCTRL_PIN(GPIOZ_16,	"GPIOZ_16"),
+	PINCTRL_PIN(GPIOZ_17,	"GPIOZ_17"),
+	PINCTRL_PIN(GPIOZ_18,	"GPIOZ_18"),
+	PINCTRL_PIN(GPIOZ_19,	"GPIOZ_19"),
+
+	PINCTRL_PIN(GPIOY_0,	"GPIOY_0"),
+	PINCTRL_PIN(GPIOY_1,	"GPIOY_1"),
+	PINCTRL_PIN(GPIOY_2,	"GPIOY_2"),
+	PINCTRL_PIN(GPIOY_3,	"GPIOY_3"),
+	PINCTRL_PIN(GPIOY_4,	"GPIOY_4"),
+	PINCTRL_PIN(GPIOY_5,	"GPIOY_5"),
+	PINCTRL_PIN(GPIOY_6,	"GPIOY_6"),
+	PINCTRL_PIN(GPIOY_7,	"GPIOY_7"),
+	PINCTRL_PIN(GPIOY_8,	"GPIOY_8"),
+	PINCTRL_PIN(GPIOY_9,	"GPIOY_9"),
+	PINCTRL_PIN(GPIOY_10,	"GPIOY_10"),
+	PINCTRL_PIN(GPIOY_11,	"GPIOY_11"),
+	PINCTRL_PIN(GPIOY_12,	"GPIOY_12"),
+	PINCTRL_PIN(GPIOY_13,	"GPIOY_13"),
+	PINCTRL_PIN(GPIOY_14,	"GPIOY_14"),
+	PINCTRL_PIN(GPIOY_15,	"GPIOY_15"),
+	PINCTRL_PIN(GPIOY_16,	"GPIOY_16"),
+	PINCTRL_PIN(GPIOY_17,	"GPIOY_17"),
+	PINCTRL_PIN(GPIOY_18,	"GPIOY_18"),
+	PINCTRL_PIN(GPIOY_19,	"GPIOY_19"),
+	PINCTRL_PIN(GPIOY_20,	"GPIOY_20"),
+	PINCTRL_PIN(GPIOY_21,	"GPIOY_21"),
+	PINCTRL_PIN(GPIOY_22,	"GPIOY_22"),
+	PINCTRL_PIN(GPIOY_23,	"GPIOY_23"),
+	PINCTRL_PIN(GPIOY_24,	"GPIOY_24"),
+	PINCTRL_PIN(GPIOY_25,	"GPIOY_25"),
+	PINCTRL_PIN(GPIOY_26,	"GPIOY_26"),
+	PINCTRL_PIN(GPIOY_27,	"GPIOY_27"),
+
+	PINCTRL_PIN(GPIOW_0,	"GPIOW_0"),
+	PINCTRL_PIN(GPIOW_1,	"GPIOW_1"),
+	PINCTRL_PIN(GPIOW_2,	"GPIOW_2"),
+	PINCTRL_PIN(GPIOW_3,	"GPIOW_3"),
+	PINCTRL_PIN(GPIOW_4,	"GPIOW_4"),
+	PINCTRL_PIN(GPIOW_5,	"GPIOW_5"),
+	PINCTRL_PIN(GPIOW_6,	"GPIOW_6"),
+	PINCTRL_PIN(GPIOW_7,	"GPIOW_7"),
+	PINCTRL_PIN(GPIOW_8,	"GPIOW_8"),
+	PINCTRL_PIN(GPIOW_9,	"GPIOW_9"),
+	PINCTRL_PIN(GPIOW_10,	"GPIOW_10"),
+	PINCTRL_PIN(GPIOW_11,	"GPIOW_11"),
+	PINCTRL_PIN(GPIOW_12,	"GPIOW_12"),
+	PINCTRL_PIN(GPIOW_13,	"GPIOW_13"),
+	PINCTRL_PIN(GPIOW_14,	"GPIOW_14"),
+	PINCTRL_PIN(GPIOW_15,	"GPIOW_15"),
+	PINCTRL_PIN(GPIOW_16,	"GPIOW_16"),
+	PINCTRL_PIN(GPIOW_17,	"GPIOW_17"),
+	PINCTRL_PIN(GPIOW_18,	"GPIOW_18"),
+	PINCTRL_PIN(GPIOW_19,	"GPIOW_19"),
+
+	PINCTRL_PIN(GPIOX_0,	"GPIOX_0"),
+	PINCTRL_PIN(GPIOX_1,	"GPIOX_1"),
+	PINCTRL_PIN(GPIOX_2,	"GPIOX_2"),
+	PINCTRL_PIN(GPIOX_3,	"GPIOX_3"),
+	PINCTRL_PIN(GPIOX_4,	"GPIOX_4"),
+	PINCTRL_PIN(GPIOX_5,	"GPIOX_5"),
+	PINCTRL_PIN(GPIOX_6,	"GPIOX_6"),
+	PINCTRL_PIN(GPIOX_7,	"GPIOX_7"),
+	PINCTRL_PIN(GPIOX_8,	"GPIOX_8"),
+	PINCTRL_PIN(GPIOX_9,	"GPIOX_9"),
+	PINCTRL_PIN(GPIOX_10,	"GPIOX_10"),
+	PINCTRL_PIN(GPIOX_11,	"GPIOX_11"),
+	PINCTRL_PIN(GPIOX_12,	"GPIOX_12"),
+
+	PINCTRL_PIN(BOOT_0,	"BOOT_0"),
+	PINCTRL_PIN(BOOT_1,	"BOOT_1"),
+	PINCTRL_PIN(BOOT_2,	"BOOT_2"),
+	PINCTRL_PIN(BOOT_3,	"BOOT_3"),
+	PINCTRL_PIN(BOOT_4,	"BOOT_4"),
+	PINCTRL_PIN(BOOT_5,	"BOOT_5"),
+	PINCTRL_PIN(BOOT_6,	"BOOT_6"),
+	PINCTRL_PIN(BOOT_7,	"BOOT_7"),
+	PINCTRL_PIN(BOOT_8,	"BOOT_8"),
+	PINCTRL_PIN(BOOT_9,	"BOOT_9"),
+	PINCTRL_PIN(BOOT_10,	"BOOT_10"),
+	PINCTRL_PIN(BOOT_11,	"BOOT_11"),
+	PINCTRL_PIN(BOOT_12,	"BOOT_12"),
+	PINCTRL_PIN(BOOT_13,	"BOOT_13"),
+	PINCTRL_PIN(BOOT_14,	"BOOT_14"),
+	PINCTRL_PIN(BOOT_15,	"BOOT_15"),
+	PINCTRL_PIN(BOOT_16,	"BOOT_16"),
+	PINCTRL_PIN(BOOT_17,	"BOOT_17"),
+
+	PINCTRL_PIN(GPIOP_0,	"GPIOP_0"),
+	PINCTRL_PIN(GPIOP_1,	"GPIOP_1"),
+	PINCTRL_PIN(GPIOP_2,	"GPIOP_2"),
+	PINCTRL_PIN(GPIOP_3,	"GPIOP_3"),
+	PINCTRL_PIN(GPIOP_4,	"GPIOP_4"),
+	PINCTRL_PIN(GPIOP_5,	"GPIOP_5"),
+	PINCTRL_PIN(GPIOP_6,	"GPIOP_6"),
+	PINCTRL_PIN(GPIOP_7,	"GPIOP_7"),
+
+	PINCTRL_PIN(CARD_0,	"CARD_0"),
+	PINCTRL_PIN(CARD_1,	"CARD_1"),
+	PINCTRL_PIN(CARD_2,	"CARD_2"),
+	PINCTRL_PIN(CARD_3,	"CARD_3"),
+	PINCTRL_PIN(CARD_4,	"CARD_4"),
+	PINCTRL_PIN(CARD_5,	"CARD_5"),
+	PINCTRL_PIN(CARD_6,	"CARD_6"),
+	PINCTRL_PIN(CARD_7,	"CARD_7"),
+	PINCTRL_PIN(CARD_8,	"CARD_8"),
+
+	PINCTRL_PIN(GPIOB_0,	"GPIOB_0"),
+	PINCTRL_PIN(GPIOB_1,	"GPIOB_1"),
+	PINCTRL_PIN(GPIOB_2,	"GPIOB_2"),
+	PINCTRL_PIN(GPIOB_3,	"GPIOB_3"),
+	PINCTRL_PIN(GPIOB_4,	"GPIOB_4"),
+	PINCTRL_PIN(GPIOB_5,	"GPIOB_5"),
+	PINCTRL_PIN(GPIOB_6,	"GPIOB_6"),
+	PINCTRL_PIN(GPIOB_7,	"GPIOB_7"),
+	PINCTRL_PIN(GPIOB_8,	"GPIOB_8"),
+	PINCTRL_PIN(GPIOB_9,	"GPIOB_9"),
+	PINCTRL_PIN(GPIOB_10,	"GPIOB_10"),
+	PINCTRL_PIN(GPIOB_11,	"GPIOB_11"),
+	PINCTRL_PIN(GPIOB_12,	"GPIOB_12"),
+	PINCTRL_PIN(GPIOB_13,	"GPIOB_13"),
+	PINCTRL_PIN(GPIOB_14,	"GPIOB_14"),
+	PINCTRL_PIN(GPIOB_15,	"GPIOB_15"),
+	PINCTRL_PIN(GPIOB_16,	"GPIOB_16"),
+	PINCTRL_PIN(GPIOB_17,	"GPIOB_17"),
+	PINCTRL_PIN(GPIOB_18,	"GPIOB_18"),
+	PINCTRL_PIN(GPIOB_19,	"GPIOB_19"),
+	PINCTRL_PIN(GPIOB_20,	"GPIOB_20"),
+	PINCTRL_PIN(GPIOB_21,	"GPIOB_21"),
+	PINCTRL_PIN(GPIOB_22,	"GPIOB_22"),
+	PINCTRL_PIN(GPIOB_23,	"GPIOB_23"),
+
+	PINCTRL_PIN(GPIOA_0,	"GPIOA_0"),
+	PINCTRL_PIN(GPIOA_1,	"GPIOA_1"),
+	PINCTRL_PIN(GPIOA_2,	"GPIOA_2"),
+	PINCTRL_PIN(GPIOA_3,	"GPIOA_3"),
+	PINCTRL_PIN(GPIOA_4,	"GPIOA_4"),
+	PINCTRL_PIN(GPIOA_5,	"GPIOA_5"),
+	PINCTRL_PIN(GPIOA_6,	"GPIOA_6"),
+	PINCTRL_PIN(GPIOA_7,	"GPIOA_7"),
+	PINCTRL_PIN(GPIOA_8,	"GPIOA_8"),
+	PINCTRL_PIN(GPIOA_9,	"GPIOA_9"),
+	PINCTRL_PIN(GPIOA_10,	"GPIOA_10"),
+	PINCTRL_PIN(GPIOA_11,	"GPIOA_11"),
+	PINCTRL_PIN(GPIOA_12,	"GPIOA_12"),
+	PINCTRL_PIN(GPIOA_13,	"GPIOA_13"),
+	PINCTRL_PIN(GPIOA_14,	"GPIOA_14"),
+	PINCTRL_PIN(GPIOA_15,	"GPIOA_15"),
+	PINCTRL_PIN(GPIOA_16,	"GPIOA_16"),
+	PINCTRL_PIN(GPIOA_17,	"GPIOA_17"),
+	PINCTRL_PIN(GPIOA_18,	"GPIOA_18"),
+	PINCTRL_PIN(GPIOA_19,	"GPIOA_19"),
+	PINCTRL_PIN(GPIOA_20,	"GPIOA_20"),
+	PINCTRL_PIN(GPIOA_21,	"GPIOA_21"),
+	PINCTRL_PIN(GPIOA_22,	"GPIOA_22"),
+	PINCTRL_PIN(GPIOA_23,	"GPIOA_23"),
+	PINCTRL_PIN(GPIOA_24,	"GPIOA_24"),
+	PINCTRL_PIN(GPIOA_25,	"GPIOA_25"),
+	PINCTRL_PIN(GPIOA_26,	"GPIOA_26"),
+	PINCTRL_PIN(GPIOA_27,	"GPIOA_27"),
+	PINCTRL_PIN(GPIOA_28,	"GPIOA_28"),
+	PINCTRL_PIN(GPIOA_29,	"GPIOA_29"),
+
+	PINCTRL_PIN(GPIOAO_0,	"GPIOAO_0"),
+	PINCTRL_PIN(GPIOAO_1,	"GPIOAO_1"),
+	PINCTRL_PIN(GPIOAO_2,	"GPIOAO_2"),
+	PINCTRL_PIN(GPIOAO_3,	"GPIOAO_3"),
+	PINCTRL_PIN(GPIOAO_4,	"GPIOAO_4"),
+	PINCTRL_PIN(GPIOAO_5,	"GPIOAO_5"),
+	PINCTRL_PIN(GPIOAO_6,	"GPIOAO_6"),
+	PINCTRL_PIN(GPIOAO_7,	"GPIOAO_7"),
+	PINCTRL_PIN(GPIOAO_8,	"GPIOAO_8"),
+	PINCTRL_PIN(GPIOAO_9,	"GPIOAO_9"),
+	PINCTRL_PIN(GPIOAO_10,	"GPIOAO_10"),
+	PINCTRL_PIN(GPIOAO_11,	"GPIOAO_11"),
+};
+
+#define PULL_UP_MAP(reg, bit)	((reg << 5) | bit)
+#define PULL_UP_REG(val)	(val >> 5)
+#define PULL_UP_BIT(val)	(val & 0x1F)
+#define PULL_UP_NONE		(0xFFFF)
+
+static unsigned int m6tv_pull_up[] = {
+	[BOOT_0	]	=	PULL_UP_MAP(3, 0),
+	[BOOT_1	]	=	PULL_UP_MAP(3, 1),
+	[BOOT_2	]	=	PULL_UP_MAP(3, 2),
+	[BOOT_3	]	=	PULL_UP_MAP(3, 3),
+	[BOOT_4	]	=	PULL_UP_MAP(3, 4),
+	[BOOT_5	]	=	PULL_UP_MAP(3, 5),
+	[BOOT_6	]	=	PULL_UP_MAP(3, 6),
+	[BOOT_7	]	=	PULL_UP_MAP(3, 7),
+	[BOOT_8	]	=	PULL_UP_MAP(3, 8),
+	[BOOT_9	]	=	PULL_UP_MAP(3, 9),
+	[BOOT_10]	=	PULL_UP_MAP(3, 10),
+	[BOOT_11]	=	PULL_UP_MAP(3, 11),
+	[BOOT_12]	=	PULL_UP_MAP(3, 12),
+	[BOOT_13]	=	PULL_UP_MAP(3, 13),
+	[BOOT_14]	=	PULL_UP_MAP(3, 14),
+	[BOOT_15]	=	PULL_UP_MAP(3, 15),
+	[BOOT_16]	=	PULL_UP_MAP(3, 16),
+	[BOOT_17]	=	PULL_UP_MAP(3, 17),
+
+	[CARD_0	]	=	PULL_UP_MAP(3, 20),
+	[CARD_1	]	=	PULL_UP_MAP(3, 21),
+	[CARD_2	]	=	PULL_UP_MAP(3, 22),
+	[CARD_3	]	=	PULL_UP_MAP(3, 23),
+	[CARD_4	]	=	PULL_UP_MAP(3, 24),
+	[CARD_5	]	=	PULL_UP_MAP(3, 25),
+	[CARD_6	]	=	PULL_UP_MAP(3, 26),
+	[CARD_7	]	=	PULL_UP_MAP(3, 27),
+	[CARD_8	]	=	PULL_UP_MAP(3, 28),
+
+	[GPIOA_0]	=	PULL_UP_MAP(0, 0),
+	[GPIOA_1]	=	PULL_UP_MAP(0, 1),
+	[GPIOA_2]	=	PULL_UP_MAP(0, 2),
+	[GPIOA_3]	=	PULL_UP_MAP(0, 3),
+	[GPIOA_4]	=	PULL_UP_MAP(0, 4),
+	[GPIOA_5]	=	PULL_UP_MAP(0, 5),
+	[GPIOA_6]	=	PULL_UP_MAP(0, 6),
+	[GPIOA_7]	=	PULL_UP_MAP(0, 7),
+	[GPIOA_8]	=	PULL_UP_MAP(0, 8),
+	[GPIOA_9]	=	PULL_UP_MAP(0, 9),
+	[GPIOA_10]	=	PULL_UP_MAP(0, 10),
+	[GPIOA_11]	=	PULL_UP_MAP(0, 11),
+	[GPIOA_12]	=	PULL_UP_MAP(0, 12),
+	[GPIOA_13]	=	PULL_UP_MAP(0, 13),
+	[GPIOA_14]	=	PULL_UP_MAP(0, 14),
+	[GPIOA_15]	=	PULL_UP_MAP(0, 15),
+	[GPIOA_16]	=	PULL_UP_MAP(0, 16),
+	[GPIOA_17]	=	PULL_UP_MAP(0, 17),
+	[GPIOA_18]	=	PULL_UP_MAP(0, 18),
+	[GPIOA_19]	=	PULL_UP_MAP(0, 19),
+	[GPIOA_20]	=	PULL_UP_MAP(0, 20),
+	[GPIOA_21]	=	PULL_UP_MAP(0, 21),
+	[GPIOA_22]	=	PULL_UP_MAP(0, 22),
+	[GPIOA_23]	=	PULL_UP_MAP(0, 23),
+	[GPIOA_24]	=	PULL_UP_MAP(0, 24),
+	[GPIOA_25]	=	PULL_UP_MAP(0, 25),
+	[GPIOA_26]	=	PULL_UP_MAP(0, 26),
+	[GPIOA_27]	=	PULL_UP_MAP(0, 27),
+	[GPIOA_28]	=	PULL_UP_MAP(0, 28),
+	[GPIOA_29]	=	PULL_UP_MAP(0, 29),
+
+	[GPIOAO_0]	=	PULL_UP_NONE,
+	[GPIOAO_1]	=	PULL_UP_NONE,
+	[GPIOAO_2]	=	PULL_UP_NONE,
+	[GPIOAO_3]	=	PULL_UP_NONE,
+	[GPIOAO_4]	=	PULL_UP_NONE,
+	[GPIOAO_5]	=	PULL_UP_NONE,
+	[GPIOAO_6]	=	PULL_UP_NONE,
+	[GPIOAO_7]	=	PULL_UP_NONE,
+	[GPIOAO_8]	=	PULL_UP_NONE,
+	[GPIOAO_9]	=	PULL_UP_NONE,
+	[GPIOAO_10]	=	PULL_UP_NONE,
+	[GPIOAO_11]	=	PULL_UP_NONE,
+
+	[GPIOB_0]	=	PULL_UP_MAP(1, 0),
+	[GPIOB_1]	=	PULL_UP_MAP(1, 1),
+	[GPIOB_2]	=	PULL_UP_MAP(1, 2),
+	[GPIOB_3]	=	PULL_UP_MAP(1, 3),
+	[GPIOB_4]	=	PULL_UP_MAP(1, 4),
+	[GPIOB_5]	=	PULL_UP_MAP(1, 5),
+	[GPIOB_6]	=	PULL_UP_MAP(1, 6),
+	[GPIOB_7]	=	PULL_UP_MAP(1, 7),
+	[GPIOB_8]	=	PULL_UP_MAP(1, 8),
+	[GPIOB_9]	=	PULL_UP_MAP(1, 9),
+	[GPIOB_10]	=	PULL_UP_MAP(1, 10),
+	[GPIOB_11]	=	PULL_UP_MAP(1, 11),
+	[GPIOB_12]	=	PULL_UP_MAP(1, 12),
+	[GPIOB_13]	=	PULL_UP_MAP(1, 13),
+	[GPIOB_14]	=	PULL_UP_MAP(1, 14),
+	[GPIOB_15]	=	PULL_UP_MAP(1, 15),
+	[GPIOB_16]	=	PULL_UP_MAP(1, 16),
+	[GPIOB_17]	=	PULL_UP_MAP(1, 17),
+	[GPIOB_18]	=	PULL_UP_MAP(1, 18),
+	[GPIOB_19]	=	PULL_UP_MAP(1, 19),
+	[GPIOB_20]	=	PULL_UP_MAP(1, 20),
+	[GPIOB_21]	=	PULL_UP_MAP(1, 21),
+	[GPIOB_22]	=	PULL_UP_MAP(1, 22),
+	[GPIOB_23]	=	PULL_UP_MAP(1, 23),
+
+	[GPIOP_0]	=	PULL_UP_MAP(1, 24),
+	[GPIOP_1]	=	PULL_UP_MAP(1, 25),
+	[GPIOP_2]	=	PULL_UP_MAP(1, 26),
+	[GPIOP_3]	=	PULL_UP_MAP(1, 27),
+	[GPIOP_4]	=	PULL_UP_MAP(1, 28),
+	[GPIOP_5]	=	PULL_UP_MAP(1, 29),
+	[GPIOP_6]	=	PULL_UP_MAP(1, 30),
+	[GPIOP_7]	=	PULL_UP_MAP(1, 31),
+
+	[GPIOW_0]	=	PULL_UP_MAP(2, 0),
+	[GPIOW_1]	=	PULL_UP_MAP(2, 1),
+	[GPIOW_2]	=	PULL_UP_MAP(2, 2),
+	[GPIOW_3]	=	PULL_UP_MAP(2, 3),
+	[GPIOW_4]	=	PULL_UP_MAP(2, 4),
+	[GPIOW_5]	=	PULL_UP_MAP(2, 5),
+	[GPIOW_6]	=	PULL_UP_MAP(2, 6),
+	[GPIOW_7]	=	PULL_UP_MAP(2, 7),
+	[GPIOW_8]	=	PULL_UP_MAP(2, 8),
+	[GPIOW_9]	=	PULL_UP_MAP(2, 9),
+	[GPIOW_10]	=	PULL_UP_MAP(2, 10),
+	[GPIOW_11]	=	PULL_UP_MAP(2, 11),
+	[GPIOW_12]	=	PULL_UP_MAP(2, 12),
+	[GPIOW_13]	=	PULL_UP_MAP(2, 13),
+	[GPIOW_14]	=	PULL_UP_MAP(2, 14),
+	[GPIOW_15]	=	PULL_UP_MAP(2, 15),
+	[GPIOW_16]	=	PULL_UP_MAP(2, 16),
+	[GPIOW_17]	=	PULL_UP_MAP(2, 17),
+	[GPIOW_18]	=	PULL_UP_MAP(2, 18),
+	[GPIOW_19]	=	PULL_UP_MAP(2, 19),
+
+	[GPIOX_0]	=	PULL_UP_MAP(4, 0),
+	[GPIOX_1]	=	PULL_UP_MAP(4, 1),
+	[GPIOX_2]	=	PULL_UP_MAP(4, 2),
+	[GPIOX_3]	=	PULL_UP_MAP(4, 3),
+	[GPIOX_4]	=	PULL_UP_MAP(4, 4),
+	[GPIOX_5]	=	PULL_UP_MAP(4, 5),
+	[GPIOX_6]	=	PULL_UP_MAP(4, 6),
+	[GPIOX_7]	=	PULL_UP_MAP(4, 7),
+	[GPIOX_8]	=	PULL_UP_MAP(4, 8),
+	[GPIOX_9]	=	PULL_UP_MAP(4, 9),
+	[GPIOX_10]	=	PULL_UP_MAP(4, 10),
+	[GPIOX_11]	=	PULL_UP_MAP(4, 11),
+	[GPIOX_12]	=	PULL_UP_MAP(4, 12),
+
+	[GPIOY_0]	=	PULL_UP_MAP(5, 0),
+	[GPIOY_1]	=	PULL_UP_MAP(5, 1),
+	[GPIOY_2]	=	PULL_UP_MAP(5, 2),
+	[GPIOY_3]	=	PULL_UP_MAP(5, 3),
+	[GPIOY_4]	=	PULL_UP_MAP(5, 4),
+	[GPIOY_5]	=	PULL_UP_MAP(5, 5),
+	[GPIOY_6]	=	PULL_UP_MAP(5, 6),
+	[GPIOY_7]	=	PULL_UP_MAP(5, 7),
+	[GPIOY_8]	=	PULL_UP_MAP(5, 8),
+	[GPIOY_9]	=	PULL_UP_MAP(5, 9),
+	[GPIOY_10]	=	PULL_UP_MAP(5, 10),
+	[GPIOY_11]	=	PULL_UP_MAP(5, 11),
+	[GPIOY_12]	=	PULL_UP_MAP(5, 12),
+	[GPIOY_13]	=	PULL_UP_MAP(5, 13),
+	[GPIOY_14]	=	PULL_UP_MAP(5, 14),
+	[GPIOY_15]	=	PULL_UP_MAP(5, 15),
+	[GPIOY_16]	=	PULL_UP_MAP(5, 16),
+	[GPIOY_17]	=	PULL_UP_MAP(5, 17),
+	[GPIOY_18]	=	PULL_UP_MAP(5, 18),
+	[GPIOY_19]	=	PULL_UP_MAP(5, 19),
+	[GPIOY_20]	=	PULL_UP_MAP(5, 20),
+	[GPIOY_21]	=	PULL_UP_MAP(5, 21),
+	[GPIOY_22]	=	PULL_UP_MAP(5, 22),
+	[GPIOY_23]	=	PULL_UP_MAP(5, 23),
+	[GPIOY_24]	=	PULL_UP_MAP(5, 24),
+	[GPIOY_25]	=	PULL_UP_MAP(5, 25),
+	[GPIOY_26]	=	PULL_UP_MAP(5, 26),
+	[GPIOY_27]	=	PULL_UP_MAP(5, 27),
+
+	[GPIOZ_0]	=	PULL_UP_MAP(6, 0),
+	[GPIOZ_1]	=	PULL_UP_MAP(6, 1),
+	[GPIOZ_2]	=	PULL_UP_MAP(6, 2),
+	[GPIOZ_3]	=	PULL_UP_MAP(6, 3),
+	[GPIOZ_4]	=	PULL_UP_MAP(6, 4),
+	[GPIOZ_5]	=	PULL_UP_MAP(6, 5),
+	[GPIOZ_6]	=	PULL_UP_MAP(6, 6),
+	[GPIOZ_7]	=	PULL_UP_MAP(6, 7),
+	[GPIOZ_8]	=	PULL_UP_MAP(6, 8),
+	[GPIOZ_9]	=	PULL_UP_MAP(6, 9),
+	[GPIOZ_10]	=	PULL_UP_MAP(6, 10),
+	[GPIOZ_11]	=	PULL_UP_MAP(6, 11),
+	[GPIOZ_12]	=	PULL_UP_MAP(6, 12),
+	[GPIOZ_13]	=	PULL_UP_MAP(6, 13),
+	[GPIOZ_14]	=	PULL_UP_MAP(6, 14),
+	[GPIOZ_15]	=	PULL_UP_MAP(6, 15),
+	[GPIOZ_16]	=	PULL_UP_MAP(6, 16),
+	[GPIOZ_17]	=	PULL_UP_MAP(6, 17),
+	[GPIOZ_18]	=	PULL_UP_MAP(6, 18),
+	[GPIOZ_19]	=	PULL_UP_MAP(6, 19),
+};
+
+#define PIN_MAP(reg, bit)	((reg << 5) | bit)
+#define PIN_REG(val)		(val >> 5)
+#define PIN_BIT(val)		(val & 0x1F)
+#define PIN_NONE		(0xFFFF)
+
+
+static unsigned int m6tv_pin_map[] = {
+	[BOOT_0]	=	PIN_MAP(3, 0),
+	[BOOT_1]	= 	PIN_MAP(3, 1),
+	[BOOT_2]	= 	PIN_MAP(3, 2),
+	[BOOT_3]	= 	PIN_MAP(3, 3),
+	[BOOT_4]	= 	PIN_MAP(3, 4),
+	[BOOT_5]	= 	PIN_MAP(3, 5),
+	[BOOT_6]	= 	PIN_MAP(3, 6),
+	[BOOT_7]	= 	PIN_MAP(3, 7),
+	[BOOT_8]	= 	PIN_MAP(3, 8),
+	[BOOT_9]	= 	PIN_MAP(3, 9),
+	[BOOT_10]	=	PIN_MAP(3, 10),
+	[BOOT_11]	=	PIN_MAP(3, 11),
+	[BOOT_12]	=	PIN_MAP(3, 12),
+	[BOOT_13]	=	PIN_MAP(3, 13),
+	[BOOT_14]	=	PIN_MAP(3, 14),
+	[BOOT_15]	=	PIN_MAP(3, 15),
+	[BOOT_16]	=	PIN_MAP(3, 16),
+	[BOOT_17]	=	PIN_MAP(3, 17),
+
+	[CARD_0]	=  	PIN_MAP(5, 23),
+	[CARD_1]	=  	PIN_MAP(5, 24),
+	[CARD_2]	=  	PIN_MAP(5, 25),
+	[CARD_3]	=  	PIN_MAP(5, 26),
+	[CARD_4]	=  	PIN_MAP(5, 27),
+	[CARD_5]	=  	PIN_MAP(5, 28),
+	[CARD_6]	=  	PIN_MAP(5, 29),
+	[CARD_7]	=  	PIN_MAP(5, 30),
+	[CARD_8]	=  	PIN_MAP(5, 31),
+
+	[GPIOA_0]	= 	PIN_MAP(0, 0),
+	[GPIOA_1]	=  	PIN_MAP(0, 1),
+	[GPIOA_2]	=  	PIN_MAP(0, 2),
+	[GPIOA_3]	=  	PIN_MAP(0, 3),
+	[GPIOA_4]	=  	PIN_MAP(0, 4),
+	[GPIOA_5]	=  	PIN_MAP(0, 5),
+	[GPIOA_6]	=  	PIN_MAP(0, 6),
+	[GPIOA_7]	=  	PIN_MAP(0, 7),
+	[GPIOA_8]	=  	PIN_MAP(0, 8),
+	[GPIOA_9]	=  	PIN_MAP(0, 9),
+	[GPIOA_10]	= 	PIN_MAP(0, 10),
+	[GPIOA_11]	=  	PIN_MAP(0, 11),
+	[GPIOA_12]	=  	PIN_MAP(0, 12),
+	[GPIOA_13]	=  	PIN_MAP(0, 13),
+	[GPIOA_14]	=  	PIN_MAP(0, 14),
+	[GPIOA_15]	=  	PIN_MAP(0, 15),
+	[GPIOA_16]	=  	PIN_MAP(0, 16),
+	[GPIOA_17]	=  	PIN_MAP(0, 17),
+	[GPIOA_18]	=  	PIN_MAP(0, 18),
+	[GPIOA_19]	=  	PIN_MAP(0, 19),
+	[GPIOA_20]	=	PIN_MAP(0, 20),
+	[GPIOA_21]	= 	PIN_MAP(0, 21),
+	[GPIOA_22]	= 	PIN_MAP(0, 22),
+	[GPIOA_23]	= 	PIN_MAP(0, 23),
+	[GPIOA_24]	= 	PIN_MAP(0, 24),
+	[GPIOA_25]	= 	PIN_MAP(0, 25),
+	[GPIOA_26]	= 	PIN_MAP(0, 26),
+	[GPIOA_27]	= 	PIN_MAP(0, 27),
+	[GPIOA_28]	= 	PIN_MAP(0, 28),
+	[GPIOA_29]	= 	PIN_MAP(0, 29),
+
+	[GPIOAO_0]	=	PIN_MAP(7, 0),
+	[GPIOAO_1]	=	PIN_MAP(7, 1),
+	[GPIOAO_2]	=	PIN_MAP(7, 2),
+	[GPIOAO_3]	=	PIN_MAP(7, 3),
+	[GPIOAO_4]	=	PIN_MAP(7, 4),
+	[GPIOAO_5]	=	PIN_MAP(7, 5),
+	[GPIOAO_6]	=	PIN_MAP(7, 6),
+	[GPIOAO_7]	=	PIN_MAP(7, 7),
+	[GPIOAO_8]	=	PIN_MAP(7, 8),
+	[GPIOAO_9]	=	PIN_MAP(7, 9),
+	[GPIOAO_10]	=	PIN_MAP(7, 10),
+	[GPIOAO_11]	=	PIN_MAP(7, 11),
+
+
+	[GPIOB_0]	=	PIN_MAP(1, 0),
+	[GPIOB_1]	=	PIN_MAP(1, 1),
+	[GPIOB_2]	=	PIN_MAP(1, 2),
+	[GPIOB_3]	=	PIN_MAP(1, 3),
+	[GPIOB_4]	=	PIN_MAP(1, 4),
+	[GPIOB_5]	=	PIN_MAP(1, 5),
+	[GPIOB_6]	=	PIN_MAP(1, 6),
+	[GPIOB_7]	=	PIN_MAP(1, 7),
+	[GPIOB_8]	=	PIN_MAP(1, 8),
+	[GPIOB_9]	=	PIN_MAP(1, 9),
+	[GPIOB_10]	=	PIN_MAP(1, 10),
+	[GPIOB_11]	=	PIN_MAP(1, 11),
+	[GPIOB_12]	=	PIN_MAP(1, 12),
+	[GPIOB_13]	=	PIN_MAP(1, 13),
+	[GPIOB_14]	=	PIN_MAP(1, 14),
+	[GPIOB_15]	=	PIN_MAP(1, 15),
+	[GPIOB_16]	=	PIN_MAP(1, 16),
+	[GPIOB_17]	=	PIN_MAP(1, 17),
+	[GPIOB_18]	=	PIN_MAP(1, 18),
+	[GPIOB_19]	=	PIN_MAP(1, 19),
+	[GPIOB_20]	=	PIN_MAP(1, 20),
+	[GPIOB_21]	=	PIN_MAP(1, 21),
+	[GPIOB_22]	=	PIN_MAP(1, 22),
+	[GPIOB_23]	=	PIN_MAP(1, 23),
+
+
+	[GPIOP_0]	=	PIN_MAP(1, 24),
+	[GPIOP_1]	=	PIN_MAP(1, 25),
+	[GPIOP_2]	=	PIN_MAP(1, 26),
+	[GPIOP_3]	=	PIN_MAP(1, 27),
+	[GPIOP_4]	=	PIN_MAP(1, 28),
+	[GPIOP_5]	=	PIN_MAP(1, 29),
+	[GPIOP_6]	=	PIN_MAP(1, 30),
+	[GPIOP_7]	=	PIN_MAP(1, 31),
+
+	[GPIOW_0]	=	PIN_MAP(5, 0),
+	[GPIOW_1]	=	PIN_MAP(5, 1),
+	[GPIOW_2]	=	PIN_MAP(5, 2),
+	[GPIOW_3]	=	PIN_MAP(5, 3),
+	[GPIOW_4]	=	PIN_MAP(5, 4),
+	[GPIOW_5]	=	PIN_MAP(5, 5),
+	[GPIOW_6]	=	PIN_MAP(5, 6),
+	[GPIOW_7]	=	PIN_MAP(5, 7),
+	[GPIOW_8]	=	PIN_MAP(5, 8),
+	[GPIOW_9]	=	PIN_MAP(5, 9),
+	[GPIOW_10]	=	PIN_MAP(5, 10),
+	[GPIOW_11]	=	PIN_MAP(5, 11),
+	[GPIOW_12]	=	PIN_MAP(5, 12),
+	[GPIOW_13]	=	PIN_MAP(5, 13),
+	[GPIOW_14]	=	PIN_MAP(5, 14),
+	[GPIOW_15]	=	PIN_MAP(5, 15),
+	[GPIOW_16]	=	PIN_MAP(5, 16),
+	[GPIOW_17]	=	PIN_MAP(5, 17),
+	[GPIOW_18]	=	PIN_MAP(5, 18),
+	[GPIOW_19]	=	PIN_MAP(5, 19),
+
+
+	[GPIOX_0]	= 	PIN_MAP(4, 0),
+	[GPIOX_1]	= 	PIN_MAP(4, 1),
+	[GPIOX_2]	= 	PIN_MAP(4, 2),
+	[GPIOX_3]	= 	PIN_MAP(4, 3),
+	[GPIOX_4]	= 	PIN_MAP(4, 4),
+	[GPIOX_5]	= 	PIN_MAP(4, 5),
+	[GPIOX_6]	= 	PIN_MAP(4, 6),
+	[GPIOX_7]	= 	PIN_MAP(4, 7),
+	[GPIOX_8]	= 	PIN_MAP(4, 8),
+	[GPIOX_9]	= 	PIN_MAP(4, 9),
+	[GPIOX_10]	= 	PIN_MAP(4, 10),
+	[GPIOX_11]	= 	PIN_MAP(4, 11),
+	[GPIOX_12]	= 	PIN_MAP(4, 12),
+
+	[GPIOY_0]	=  	PIN_MAP(2, 0),
+	[GPIOY_1]	=  	PIN_MAP(2, 1),
+	[GPIOY_2]	=  	PIN_MAP(2, 2),
+	[GPIOY_3]	=  	PIN_MAP(2, 3),
+	[GPIOY_4]	=  	PIN_MAP(2, 4),
+	[GPIOY_5]	=  	PIN_MAP(2, 5),
+	[GPIOY_6]	=  	PIN_MAP(2, 6),
+	[GPIOY_7]	=  	PIN_MAP(2, 7),
+	[GPIOY_8]	=  	PIN_MAP(2, 8),
+	[GPIOY_9]	=  	PIN_MAP(2, 9),
+	[GPIOY_10]	=  	PIN_MAP(2, 10),
+	[GPIOY_11]	=  	PIN_MAP(2, 11),
+	[GPIOY_12]	=  	PIN_MAP(2, 12),
+	[GPIOY_13]	=  	PIN_MAP(2, 13),
+	[GPIOY_14]	=  	PIN_MAP(2, 14),
+	[GPIOY_15]	=  	PIN_MAP(2, 15),
+	[GPIOY_16]	=  	PIN_MAP(2, 16),
+	[GPIOY_17]	=  	PIN_MAP(2, 17),
+	[GPIOY_18]	=  	PIN_MAP(2, 18),
+	[GPIOY_19]	=  	PIN_MAP(2, 19),
+	[GPIOY_20]	= 	PIN_MAP(2, 20),
+	[GPIOY_21]	=  	PIN_MAP(2, 21),
+	[GPIOY_22]	=  	PIN_MAP(2, 22),
+	[GPIOY_23]	=  	PIN_MAP(2, 23),
+	[GPIOY_24]	=  	PIN_MAP(2, 24),
+	[GPIOY_25]	=  	PIN_MAP(2, 25),
+	[GPIOY_26]	=  	PIN_MAP(2, 26),
+	[GPIOY_27]	=  	PIN_MAP(2, 27),
+
+
+	[GPIOZ_0]	= 	PIN_MAP(6, 0),
+	[GPIOZ_1]	= 	PIN_MAP(6, 1),
+	[GPIOZ_2]	= 	PIN_MAP(6, 2),
+	[GPIOZ_3]	= 	PIN_MAP(6, 3),
+	[GPIOZ_4]	= 	PIN_MAP(6, 4),
+	[GPIOZ_5]	= 	PIN_MAP(6, 5),
+	[GPIOZ_6]	= 	PIN_MAP(6, 6),
+	[GPIOZ_7]	= 	PIN_MAP(6, 7),
+	[GPIOZ_8]	= 	PIN_MAP(6, 8),
+	[GPIOZ_9]	= 	PIN_MAP(6, 9),
+	[GPIOZ_10]	= 	PIN_MAP(6, 10),
+	[GPIOZ_11]	= 	PIN_MAP(6, 11),
+	[GPIOZ_12]	= 	PIN_MAP(6, 12),
+	[GPIOZ_13]	= 	PIN_MAP(6, 13),
+	[GPIOZ_14]	= 	PIN_MAP(6, 14),
+	[GPIOZ_15]	= 	PIN_MAP(6, 15),
+	[GPIOZ_16]	= 	PIN_MAP(6, 16),
+	[GPIOZ_17]	= 	PIN_MAP(6, 17),
+	[GPIOZ_18]	= 	PIN_MAP(6, 18),
+	[GPIOZ_19]	= 	PIN_MAP(6, 19),
+};
+
+
+#if 0
+static int m6tv_pin_to_pullup(unsigned int pin ,unsigned int *reg,unsigned int *bit)
+{
+	if (GPIOZ_0 <= pin <= GPIOZ_19) {
+		*reg = 6;
+		*bit = pin - GPIOZ_0;
+	}
+	else if (GPIOA_0 <= pin <= GPIOA_29) {
+		*reg = 0;
+		*bit = pin - GPIOA_0;
+	}
+	else if (GPIOP_0 <= pin <= GPIOP_7) {
+		*reg = 1;
+		*bit = pin - GPIOP_0 + 24;
+	}
+	else if (GPIOB_0 <= pin <= GPIOB_23) {
+		*reg = 1;
+		*bit = pin - GPIOB_0;
+	}
+	else if (GPIOW_0 <= pin <= GPIOW_19) {
+		*reg = 2;
+		*bit = pin - GPIOW_0;
+	}
+	else if (CARD_0 <= pin <= CARD_8) {
+		*reg = 3;
+		*bit = pin - CARD_0 + 20;
+	}
+	else if (BOOT_0 <= pin <= BOOT_17) {
+		*reg = 3;
+		*bit = pin - BOOT_0;
+	}
+	else if (GPIOX_0 <= pin <= GPIOX_12) {
+		*reg = 4;
+		*bit = pin - GPIOX_0;
+	}
+	else if (GPIOY_0 <= pin <= GPIOY_27) {
+		*reg = 5;
+		*bit = pin - GPIOY_0;
+	}
+	else {
+		return -1;
+	}
+
+
+
+	return 0;
+}
+#endif
+
+static int m6tv_pin_map_to_direction(unsigned int pin, unsigned int *reg, unsigned int *bit)
+{
+	*reg = PIN_REG(m6tv_pin_map[pin]);
+	*bit = PIN_BIT(m6tv_pin_map[pin]);
+	return 0;
+}
+
+static int m6tv_set_pullup(unsigned int pin, unsigned int config)
+{
+	unsigned int reg = 0, bit = 0, ret;
+	u16 pullarg = AML_PINCONF_UNPACK_PULL_ARG(config);
+
+	if (m6tv_pull_up[pin] == PULL_UP_NONE)
+		return -1;
+
+	reg = PULL_UP_REG(m6tv_pull_up[pin]);
+	bit = PULL_UP_BIT(m6tv_pull_up[pin]);
+
+	if(pullarg)
+		aml_set_reg32_mask(p_pull_up_addr[reg], 1<<bit);
+	else
+		aml_clr_reg32_mask(p_pull_up_addr[reg], 1<<bit);
+	return 0;
+}
+
+static struct amlogic_pinctrl_soc_data m6tv_pinctrl = {
+	.pins = m6tv_pads,
+	.npins = ARRAY_SIZE(m6tv_pads),
+	.meson_set_pullup = m6tv_set_pullup,
+	.pin_map_to_direction = m6tv_pin_map_to_direction,
+};
+
+static struct of_device_id m6tv_pinctrl_of_table[] = {
+	{
+		.compatible="amlogic,pinmux-m6tv",
+	},
+	{},
+};
+
+static int m6tv_pmx_probe(struct platform_device *pdev)
+{
+	return amlogic_pmx_probe(pdev, &m6tv_pinctrl);
+}
+
+static int m6tv_pmx_remove(struct platform_device *pdev)
+{
+	return amlogic_pmx_remove(pdev);
+}
+
+static struct platform_driver m6tv_pmx_driver = {
+	.driver = {
+		.name = "pinmux-m6tv",
+		.owner = THIS_MODULE,
+		.of_match_table=of_match_ptr(m6tv_pinctrl_of_table),
+	},
+	.probe  = m6tv_pmx_probe,
+	.remove = m6tv_pmx_remove,
+};
+
+static int __init m6tv_pmx_init(void)
+{
+	return platform_driver_register(&m6tv_pmx_driver);
+}
+arch_initcall(m6tv_pmx_init);
+
+static void __exit m6tv_pmx_exit(void)
+{
+	platform_driver_unregister(&m6tv_pmx_driver);
+}
+module_exit(m6tv_pmx_exit);
+MODULE_DESCRIPTION("amlogic m6tv pin control driver");
+MODULE_LICENSE("GPL v2");
diff --git a/arch/arm/mach-meson6tv/pm.c b/arch/arm/mach-meson6tv/pm.c
new file mode 100755
index 000000000000..b7a03da96293
--- /dev/null
+++ b/arch/arm/mach-meson6tv/pm.c
@@ -0,0 +1,1203 @@
+/*
+ * Meson Power Management Routines
+ *
+ * Copyright (C) 2010 Amlogic, Inc. http://www.amlogic.com/
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/pm.h>
+#include <linux/suspend.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/clk.h>
+#include <linux/spinlock.h>
+#include <linux/clk.h>
+#include <linux/fs.h>
+
+#include <asm/cacheflush.h>
+#include <asm/delay.h>
+#include <asm/uaccess.h>
+
+#include <mach/pm.h>
+#include <mach/am_regs.h>
+#include <plat/sram.h>
+#include <mach/power_gate.h>
+#include <mach/gpio.h>
+#include <mach/pctl.h>
+#include <mach/clock.h>
+#include <plat/regops.h>
+#include <plat/io.h>
+
+#ifdef CONFIG_WAKELOCK
+#include <linux/wakelock.h>
+#endif
+
+#include <mach/mod_gate.h>
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+#include <linux/earlysuspend.h>
+static struct early_suspend early_suspend;
+static int early_suspend_flag = 0;
+#endif
+
+#define ON  1
+#define OFF 0
+#define M6_TV_CLK_DEBUG
+//#include <mach/sleep.h>
+//#define EARLY_SUSPEND_USE_XTAL
+//#define MESON_SUSPEND_DEBUG
+
+static void (*meson_sram_suspend)(struct meson_pm_config *);
+static struct meson_pm_config *pdata;
+//static int mask_save_0[5];
+//static int mask_save_1[5];
+
+static void meson_sram_push(void *dest, void *src, unsigned int size)
+{
+	int res = 0;
+	memcpy(dest, src, size);
+	flush_icache_range((unsigned long)dest, (unsigned long)(dest + size));
+	res = memcmp(dest, src, size);
+	printk("compare code in sram addr = 0x%x, size = 0x%x, result = %d", (unsigned)dest, size, res);
+}
+
+#define M6TV_GATE_OFF(_MOD) do {power_gate_flag[GCLK_IDX_##_MOD] = IS_CLK_GATE_ON(_MOD);CLK_GATE_OFF(_MOD);} while(0)
+#define M6TV_GATE_ON(_MOD) do {if (power_gate_flag[GCLK_IDX_##_MOD]) CLK_GATE_ON(_MOD);} while(0)
+#define GATE_SWITCH(flag, _MOD) do {if (flag) M6TV_GATE_ON(_MOD); else M6TV_GATE_OFF(_MOD);} while(0)
+static int power_gate_flag[GCLK_IDX_MAX];
+
+void power_init_off(void)
+{
+#if 0
+	aml_clr_reg32_mask(P_HHI_DEMOD_CLK_CNTL, (1 << 8));
+	aml_clr_reg32_mask(P_HHI_SATA_CLK_CNTL, (1 << 8));
+	aml_clr_reg32_mask(P_HHI_ETH_CLK_CNTL, (1 << 8));
+	aml_clr_reg32_mask(P_HHI_WIFI_CLK_CNTL, (1 << 0));
+	aml_set_reg32_mask(P_HHI_DEMOD_PLL_CNTL, (1 << 15));
+#endif
+}
+
+void power_gate_switch(int flag)
+{
+	//GATE_SWITCH(flag, DDR);
+	GATE_SWITCH(flag, DOS);
+	//GATE_SWITCH(flag,MIPI_APB_CLK);
+	//GATE_SWITCH(flag,MIPI_SYS_CLK);
+	//GATE_SWITCH(flag, AHB_BRIDGE);
+	//GATE_SWITCH(flag, ISA);
+	//GATE_SWITCH(flag, APB_CBUS);
+	//GATE_SWITCH(flag, _1200XXX);
+	GATE_SWITCH(flag, SPICC);
+	GATE_SWITCH(flag, I2C);
+	GATE_SWITCH(flag, SAR_ADC);
+	GATE_SWITCH(flag, SMART_CARD_MPEG_DOMAIN);
+	//GATE_SWITCH(flag, RANDOM_NUM_GEN);
+	GATE_SWITCH(flag, UART0);
+	GATE_SWITCH(flag, SDHC);
+	GATE_SWITCH(flag, STREAM);
+	GATE_SWITCH(flag, ASYNC_FIFO);
+	GATE_SWITCH(flag, SDIO);
+	GATE_SWITCH(flag, AUD_BUF);
+	GATE_SWITCH(flag, HDMI_RX);
+	//GATE_SWITCH(flag, HIU_PARSER);
+	//GATE_SWITCH(flag, AMRISC);
+	GATE_SWITCH(flag, BT656_IN);
+	//GATE_SWITCH(flag, ASSIST_MISC);
+	//GATE_SWITCH(flag, VI_CORE);
+	GATE_SWITCH(flag, SPI2);
+	GATE_SWITCH(flag, ACODEC);
+	//GATE_SWITCH(flag, MDEC_CLK_ASSIST);
+	//GATE_SWITCH(flag, MDEC_CLK_PSC);
+/*******************************************************/
+	GATE_SWITCH(flag, PCLK_TVFE);
+	GATE_SWITCH(flag, SPI1);
+	//GATE_SWITCH(flag, AUD_IN);
+	GATE_SWITCH(flag, ETHERNET);
+	GATE_SWITCH(flag, AIU_AI_TOP_GLUE);
+	GATE_SWITCH(flag, AIU_IEC958);
+	GATE_SWITCH(flag, AIU_I2S_OUT);
+	GATE_SWITCH(flag, AIU_AMCLK_MEASURE);
+	GATE_SWITCH(flag, AIU_AIFIFO2);
+	GATE_SWITCH(flag, AIU_AUD_MIXER);
+	GATE_SWITCH(flag, AIU_MIXER_REG);
+	GATE_SWITCH(flag, AIU_ADC);
+	GATE_SWITCH(flag, BLK_MOV);
+	//GATE_SWITCH(flag, UART1);
+	//GATE_SWITCH(flag, VGHL_PWM);
+	GATE_SWITCH(flag, GE2D);
+	GATE_SWITCH(flag, USB0);
+	GATE_SWITCH(flag, USB1);
+	//GATE_SWITCH(flag, RESET);
+	GATE_SWITCH(flag, NAND);
+	GATE_SWITCH(flag, HIU_PARSER_TOP);
+	GATE_SWITCH(flag, USB_GENERAL);
+	//GATE_SWITCH(flag, MDEC_CLK_DBLK);
+	//GATE_SWITCH(flag, MIPI_PHY);
+	GATE_SWITCH(flag, VIDEO_IN);
+	//GATE_SWITCH(flag, AHB_ARB0);
+	GATE_SWITCH(flag, EFUSE);
+	GATE_SWITCH(flag, ROM_CLK);
+	//GATE_SWITCH(flag, AHB_DATA_BUS);
+	//GATE_SWITCH(flag, AHB_CONTROL_BUS);
+	GATE_SWITCH(flag, MISC_USB1_TO_DDR);
+	GATE_SWITCH(flag, MISC_USB0_TO_DDR);
+	GATE_SWITCH(flag, USB2_TO_DDR);
+	GATE_SWITCH(flag, USB3_TO_DDR);
+	GATE_SWITCH(flag, AIU_PCLK);
+	//GATE_SWITCH(flag, MMC_PCLK);
+	GATE_SWITCH(flag, UART2);
+	GATE_SWITCH(flag, USB2_OTG_CON);
+	GATE_SWITCH(flag, USB3_OTG_CON);
+	GATE_SWITCH(flag, DEMOD_PCLK);
+	/****/
+	GATE_SWITCH(flag, DAC_CLK);
+	GATE_SWITCH(flag, AIU_AOCLK);
+	//GATE_SWITCH(flag, AIU_AMCLK);
+	GATE_SWITCH(flag, AIU_ICE958_AMCLK);
+	//GATE_SWITCH(flag, AIU_AUDIN_SCLK);
+	GATE_SWITCH(flag, RAND_NUM_GEN);
+}
+EXPORT_SYMBOL(power_gate_switch);
+
+void early_power_gate_switch(int flag)
+{
+	//GATE_SWITCH(flag, AMRISC);
+	//GATE_SWITCH(flag, AUD_IN);
+	GATE_SWITCH(flag, BLK_MOV);
+	GATE_SWITCH(flag, VENC_I_TOP);
+	GATE_SWITCH(flag, VENC_P_TOP);
+	GATE_SWITCH(flag, VENC_T_TOP);
+	GATE_SWITCH(flag, VENC_DAC);
+	GATE_SWITCH(flag, HDMI_INTR_SYNC);
+	GATE_SWITCH(flag, HDMI_PCLK);
+	GATE_SWITCH(flag, MISC_DVIN);
+	GATE_SWITCH(flag, MISC_RDMA);
+	GATE_SWITCH(flag, VENCI_INT);
+	GATE_SWITCH(flag, VIU2);
+	GATE_SWITCH(flag, VENCP_INT);
+	GATE_SWITCH(flag, VENCT_INT);
+	GATE_SWITCH(flag, VENCL_INT);
+	GATE_SWITCH(flag, VENC_L_TOP);
+	GATE_SWITCH(flag, VCLK2_VENCI);
+	GATE_SWITCH(flag, VCLK2_VENCI1);
+	GATE_SWITCH(flag, VCLK2_VENCP);
+	GATE_SWITCH(flag, VCLK2_VENCP1);
+	GATE_SWITCH(flag, VCLK2_VENCT);
+	GATE_SWITCH(flag, VCLK2_VENCT1);
+	GATE_SWITCH(flag, VCLK2_OTHER);
+	GATE_SWITCH(flag, VCLK2_ENCI);
+	GATE_SWITCH(flag, VCLK2_ENCP);
+	//GATE_SWITCH(flag, VCLK1_HDMI);
+	GATE_SWITCH(flag, ENC480P);
+	GATE_SWITCH(flag, VCLK2_ENCT);
+	GATE_SWITCH(flag, VCLK2_ENCL);
+	GATE_SWITCH(flag, VCLK2_VENCL);
+	GATE_SWITCH(flag, VCLK2_OTHER1);
+	//GATE_SWITCH(flag, LED_PWM);
+	//GATE_SWITCH(flag, GE2D);
+	//GATE_SWITCH(flag, VIDEO_IN);
+	GATE_SWITCH(flag, VI_CORE);
+}
+EXPORT_SYMBOL(early_power_gate_switch);
+
+#define CLK_COUNT 8
+static char clk_flag[CLK_COUNT];
+static char clk_aud_23;
+static char clk_vdec_24;
+static unsigned clks[CLK_COUNT] = {
+	P_HHI_ETH_CLK_CNTL,
+	P_HHI_VID_CLK_CNTL,
+	P_HHI_VIID_CLK_CNTL,
+	P_HHI_AUD_CLK_CNTL,
+	P_HHI_MALI_CLK_CNTL,
+	P_HHI_HDMI_CLK_CNTL,
+	P_HHI_MPEG_CLK_CNTL,
+	P_HHI_VDEC_CLK_CNTL,
+};
+
+static char clks_name[CLK_COUNT][32] = {
+	"HHI_ETH_CLK_CNTL",
+	"HHI_VID_CLK_CNTL",
+	"HHI_VIID_CLK_CNTL",
+	"HHI_AUD_CLK_CNTL",
+	"HHI_MALI_CLK_CNTL",
+	"HHI_HDMI_CLK_CNTL",
+	"HHI_MPEG_CLK_CNTL",
+	"HHI_VDEC_CLK_CNTL",
+};
+
+#ifdef EARLY_SUSPEND_USE_XTAL
+#define EARLY_CLK_COUNT 3
+#else
+#define EARLY_CLK_COUNT 2
+#endif
+static char early_clk_flag[EARLY_CLK_COUNT];
+static unsigned early_clks[EARLY_CLK_COUNT] = {
+	P_HHI_VID_CLK_CNTL,
+	P_HHI_VIID_CLK_CNTL,
+#ifdef EARLY_SUSPEND_USE_XTAL
+	P_HHI_MPEG_CLK_CNTL,
+#endif
+};
+
+static char early_clks_name[EARLY_CLK_COUNT][32] = {
+	"HHI_VID_CLK_CNTL",
+	"HHI_VIID_CLK_CNTL",
+#ifdef EARLY_SUSPEND_USE_XTAL
+	"HHI_MPEG_CLK_CNTL",
+#endif
+};
+#if 1
+static void wait_uart_empty(void)
+{
+	unsigned int count = 0;
+	do {
+		if ((aml_read_reg32(P_UART0_STATUS) & (1<<22)) == 0)
+			udelay(4);
+		else
+			break;
+		count++;
+	} while (count < 2000000);
+
+	count = 0;
+	do{
+		if((aml_read_reg32(P_UART1_STATUS) & (1<<22)) == 0)
+			udelay(4);
+		else
+			break;
+		count++;
+	} while (count < 2000000);
+
+	count = 0;
+	do {
+		if((aml_read_reg32(P_AO_UART_STATUS) & (1<<22)) == 0)
+			udelay(4);
+		else
+			break;
+		count++;
+	} while (count < 2000000);
+}
+#else
+static void wait_uart_empty()
+{
+	do {
+		if ((aml_read_reg32(P_UART0_STATUS) & (1<<22)) == 0)
+			udelay(4);
+		else
+			break;
+	} while (1);
+
+	do {
+		if ((aml_read_reg32(P_UART1_STATUS) & (1<<22)) == 0)
+			udelay(4);
+		else
+			break;
+	} while (1);
+
+	do {
+		if ((aml_read_reg32(P_AO_UART_STATUS) & (1<<22)) == 0)
+			udelay(4);
+		else
+			break;
+	} while (1);
+}
+#endif
+
+static unsigned uart_rate_backup;
+static unsigned xtal_uart_rate_backup;
+
+void clk_switch(int flag)
+{
+	int i;
+
+	if (flag) {
+		for (i = CLK_COUNT - 1; i >= 0; i--) {
+			if (clk_flag[i]) {
+				if ((clks[i] == P_HHI_VID_CLK_CNTL)||(clks[i] == P_HHI_VIID_CLK_CNTL)) {
+					aml_set_reg32_bits(clks[i],clk_flag[i],19,2);
+				} else if (clks[i] == P_HHI_MPEG_CLK_CNTL) {
+					if (uart_rate_backup == 0) {
+						struct clk* sys_clk = clk_get_sys("clk81", NULL);
+						sys_clk->rate = 0;
+						uart_rate_backup = clk_get_rate(sys_clk);
+					}
+					wait_uart_empty();
+					aml_set_reg32_mask(clks[i],(1<<7));//gate on pll
+					udelay(10);
+					aml_set_reg32_mask(clks[i],(1<<8));//switch to pll
+					udelay(10);
+					aml_clr_reg32_mask(P_UART0_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_UART0_REG5, ((uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_UART0_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_UART1_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_UART1_REG5, ((uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_UART1_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_AO_UART2_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_AO_UART2_REG5, ((uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_AO_UART2_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_AO_UART_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_AO_UART_REG5, ((uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_AO_UART_REG5, 1, 23, 1);
+				} else {
+					aml_set_reg32_mask(clks[i],(1<<8));
+				}
+				clk_flag[i] = 0;
+				printk(KERN_INFO "clk %s(%x) on\n", clks_name[i], clks[i]);
+			}
+#ifdef M6_TV_CLK_DEBUG
+			if (clk_aud_23)
+				aml_set_reg32_mask(P_HHI_AUD_CLK_CNTL,(1<<23));
+			if (clk_vdec_24)
+				aml_set_reg32_mask(P_HHI_VDEC_CLK_CNTL,(1<<24));
+#endif
+		}
+	} else {
+		for (i = 0; i < CLK_COUNT; i++) {
+			if ((clks[i] == P_HHI_VID_CLK_CNTL)||(clks[i] == P_HHI_VIID_CLK_CNTL)) {
+				clk_flag[i] = aml_get_reg32_bits(clks[i], 19, 2);
+				if (clk_flag[i]) {
+					aml_clr_reg32_mask(clks[i], (1<<19)|(1<<20));
+				}
+			} else if (clks[i] == P_HHI_MPEG_CLK_CNTL) {
+				if (aml_read_reg32(clks[i]) & (1 << 8)) {
+					if (xtal_uart_rate_backup == 0) {//if no early suspend supported
+						struct clk* sys_clk = clk_get_sys("xtal", NULL);
+						xtal_uart_rate_backup = clk_get_rate(sys_clk);
+					}
+					wait_uart_empty();
+					clk_flag[i] = 1;
+					aml_clr_reg32_mask(clks[i], (1 << 8)); // 24M
+					udelay(10);
+					aml_clr_reg32_mask(clks[i], (1 << 7)); // 24M
+					udelay(10);
+					aml_clr_reg32_mask(P_UART0_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_UART0_REG5, ((xtal_uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_UART0_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_UART1_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_UART1_REG5, ((xtal_uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_UART1_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_AO_UART2_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_AO_UART2_REG5, ((xtal_uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_AO_UART2_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_AO_UART_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_AO_UART_REG5, ((xtal_uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_AO_UART_REG5, 1, 23, 1);
+				}
+			}
+#ifdef M6_TV_CLK_DEBUG
+			else if (clks[i] == P_HHI_AUD_CLK_CNTL) {
+				clk_flag[i] = aml_get_reg32_bits(clks[i], 8, 1) ? 1 : 0;
+				if (clk_flag[i]) {
+					aml_clr_reg32_mask(clks[i], (1 << 8));
+				}
+				clk_aud_23 = aml_get_reg32_bits(clks[i], 23, 1) ? 1 : 0;
+				if (clk_aud_23) {
+					aml_clr_reg32_mask(clks[i], (1 << 23));
+				}
+			}
+			else if (clks[i] == P_HHI_VDEC_CLK_CNTL) {
+				clk_flag[i] = aml_get_reg32_bits(clks[i], 8, 1) ? 1 : 0;
+				if (clk_flag[i]) {
+					aml_clr_reg32_mask(clks[i], (1 << 8));
+				}
+				clk_vdec_24 = aml_get_reg32_bits(clks[i], 24, 1) ? 1 : 0;
+				if (clk_vdec_24) {
+					aml_clr_reg32_mask(clks[i], (1 << 24));
+				}
+			}
+			else {
+				clk_flag[i] = aml_get_reg32_bits(clks[i], 8, 1) ? 1 : 0;
+				if (clk_flag[i]) {
+					aml_clr_reg32_mask(clks[i], (1 << 8));
+				}
+			}
+#else
+			else {
+				clk_flag[i] = aml_get_reg32_bits(clks[i], 8, 1) ? 1 : 0;
+				if (clk_flag[i]) {
+					aml_clr_reg32_mask(clks[i], (1 << 8));
+				}
+			}
+#endif
+			if (clk_flag[i]) {
+				printk(KERN_INFO "clk %s(%x) off\n", clks_name[i], clks[i]);
+				wait_uart_empty();
+			}
+		}
+	}
+}
+EXPORT_SYMBOL(clk_switch);
+
+void early_clk_switch(int flag)
+{
+	int i;
+	struct clk *sys_clk;
+	if (flag) {
+		for (i = EARLY_CLK_COUNT - 1; i >= 0; i--) {
+			if (early_clk_flag[i]) {
+				if ((early_clks[i] == P_HHI_VID_CLK_CNTL)||(early_clks[i] == P_HHI_VIID_CLK_CNTL)) {
+					aml_set_reg32_bits(early_clks[i], early_clk_flag[i], 19, 2);
+				}
+#ifdef EARLY_SUSPEND_USE_XTAL
+				else if (early_clks[i] == P_HHI_MPEG_CLK_CNTL) {
+					udelay(1000);
+					aml_set_reg32_mask(early_clks[i], (1 << 8)); // clk81 back to normal
+					aml_clr_reg32_mask(P_UART0_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_UART0_REG5, ((uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_UART0_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_UART1_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_UART1_REG5, ((uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_UART1_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_AO_UART2_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_AO_UART2_REG5, ((uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_AO_UART2_REG5, 1, 23, 1);
+
+					aml_clr_reg32_mask(P_AO_UART_REG5, 0x7FFFFF);
+					aml_set_reg32_bits(P_AO_UART_REG5, ((uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+					aml_set_reg32_bits(P_AO_UART_REG5, 1, 23, 1);
+					udelay(1000);
+				}
+#endif
+			else {
+				aml_set_reg32_mask(early_clks[i], (1 << 8));
+			}
+				printk(KERN_INFO "late clk %s(%x) on\n", early_clks_name[i], early_clks[i]);
+				early_clk_flag[i] = 0;
+			}
+		}
+	} else {
+		sys_clk = clk_get_sys("clk81", NULL);
+		sys_clk->rate = 0;
+		uart_rate_backup = clk_get_rate(sys_clk);
+		sys_clk = clk_get_sys("xtal", NULL);
+		//        xtal_uart_rate_backup = sys_clk->rate;
+		xtal_uart_rate_backup = clk_get_rate(sys_clk);
+
+		for (i = 0; i < EARLY_CLK_COUNT; i++) {
+			if ((early_clks[i] == P_HHI_VID_CLK_CNTL)||(early_clks[i] == P_HHI_VIID_CLK_CNTL)) {
+				early_clk_flag[i] = aml_get_reg32_bits(early_clks[i], 19, 2);
+				if (early_clk_flag[i]) {
+					aml_clr_reg32_mask(early_clks[i], (1<<19)|(1<<20));
+				}
+			}
+#ifdef EARLY_SUSPEND_USE_XTAL
+			else if (early_clks[i] == P_HHI_MPEG_CLK_CNTL) {
+				early_clk_flag[i] = 1;
+
+				udelay(1000);
+				aml_clr_reg32_mask(early_clks[i], (1 << 8)); // 24M
+
+				aml_clr_reg32_mask(P_UART0_REG5, 0x7FFFFF);
+				aml_set_reg32_bits(P_UART0_REG5, ((xtal_uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+				aml_set_reg32_bits(P_UART0_REG5, 1, 23, 1);
+
+				aml_clr_reg32_mask(P_UART1_REG5, 0x7FFFFF);
+				aml_set_reg32_bits(P_UART1_REG5, ((xtal_uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+				aml_set_reg32_bits(P_UART1_REG5, 1, 23, 1);
+
+				aml_clr_reg32_mask(P_AO_UART2_REG5, 0x7FFFFF);
+				aml_set_reg32_bits(P_AO_UART2_REG5, ((xtal_uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+				aml_set_reg32_bits(P_AO_UART2_REG5, 1, 23, 1);
+
+				aml_clr_reg32_mask(P_AO_UART_REG5, 0x7FFFFF);
+				aml_set_reg32_bits(P_AO_UART_REG5, ((xtal_uart_rate_backup / (115200 * 4)) - 1) & 0x7fffff, 0, 23);
+				aml_set_reg32_bits(P_AO_UART_REG5, 1, 23, 1);
+
+				udelay(1000);
+			}
+#endif
+			else {
+				early_clk_flag[i] = aml_get_reg32_bits(early_clks[i], 8, 1) ? 1 : 0;
+				if (early_clk_flag[i]) {
+					aml_clr_reg32_mask(early_clks[i], (1 << 8));
+				}
+			}
+			if (early_clk_flag[i]) {
+				printk(KERN_INFO "early clk %s(%x) off\n", early_clks_name[i], early_clks[i]);
+			}
+		}
+	}
+}
+EXPORT_SYMBOL(early_clk_switch);
+
+#if 0
+#define PLL_COUNT 3
+static char pll_flag[PLL_COUNT];
+static unsigned plls[PLL_COUNT] = {
+	P_HHI_VID_PLL_CNTL,
+	P_HHI_VIID_PLL_CNTL,
+//	P_HHI_AUD_PLL_CNTL,
+	P_HHI_MPLL_CNTL,
+};
+
+static char plls_name[PLL_COUNT][32] = {
+	"HHI_VID_PLL_CNTL",
+	"HHI_VIID_PLL_CNTL",
+//	"HHI_AUD_PLL_CNTL",
+	"HHI_MPLL_CNTL",
+};
+#endif
+
+#if 0
+#define EARLY_PLL_COUNT 2
+static char early_pll_flag[EARLY_PLL_COUNT];
+static unsigned early_pll_settings[EARLY_PLL_COUNT][4];
+static unsigned early_plls[EARLY_PLL_COUNT] = {
+	P_HHI_VID_PLL_CNTL,
+	P_HHI_VIID_PLL_CNTL,
+};
+
+static char early_plls_name[EARLY_PLL_COUNT][32] = {
+	"HHI_VID_PLL_CNTL",
+	"HHI_VIID_PLL_CNTL",
+};
+#endif
+
+/*
+void pll_switch(int flag)
+{
+    int i;
+    if (flag) {
+         for (i = PLL_COUNT - 1; i >= 0; i--) {
+            if (pll_flag[i]) {
+ 					   		if(default_console_loglevel >= 7){
+	       	        printk(KERN_INFO "pll %s(%x) on\n", plls_name[i], plls[i]);
+	       	        udelay(2000);
+	       	        udelay(2000);
+								}
+                if ((plls[i]==P_HHI_VID_PLL_CNTL)||(plls[i]==P_HHI_VIID_PLL_CNTL)||(plls[i]==P_HHI_MPLL_CNTL)){
+                    aml_clr_reg32_mask(plls[i],(1<<30));
+                    pll_flag[i] = 0;
+                }
+                else{
+                    aml_clr_reg32_mask(plls[i],(1<<15));//bit15 PD:power down
+                    pll_flag[i] = 0;
+                }
+                udelay(10);
+             }
+        }
+        udelay(1000);
+	     } else {
+        for (i = 0; i < PLL_COUNT; i++) {
+        	  if ((plls[i]==P_HHI_VID_PLL_CNTL)||(plls[i]==P_HHI_VIID_PLL_CNTL)||(plls[i]==P_HHI_MPLL_CNTL))
+        	  	pll_flag[i]=aml_get_reg32_bits(plls[i],30,1) ? 0:1;
+        	  else
+        	  	pll_flag[i]=aml_get_reg32_bits(plls[i],15,1) ? 0:1;
+            if (pll_flag[i]) {
+                printk(KERN_INFO "pll %s(%x) off\n", plls_name[i], plls[i]);
+                if ((plls[i]==P_HHI_VID_PLL_CNTL)||(plls[i]==P_HHI_VIID_PLL_CNTL)){
+                    aml_set_reg32_mask(plls[i],(1<<30));
+                }
+                else{
+                    aml_set_reg32_mask(plls[i],(1<<15));
+                }
+            }
+        }
+    }
+}
+EXPORT_SYMBOL(pll_switch);
+*/
+
+
+/*
+void early_pll_switch(int flag)//for MX only
+{
+    int i;
+    if (flag) {
+        for (i = EARLY_PLL_COUNT - 1; i >= 0; i--) {
+            if (early_pll_flag[i]) {
+				early_pll_flag[i] = 0;
+                if (early_plls[i]==P_HHI_VID_PLL_CNTL)
+                {
+                    do{
+	                    aml_write_reg32(P_HHI_VID_PLL_CNTL,1<<29);
+				        aml_write_reg32(P_HHI_VID_PLL_CNTL2,0x814d3928);
+				        aml_write_reg32(P_HHI_VID_PLL_CNTL3,0x6d425012);
+				        aml_write_reg32(P_HHI_VID_PLL_CNTL4,0x110);
+
+                        aml_write_reg32(P_HHI_VID_PLL_CNTL,(early_pll_settings[i][0] & ~(1<<30))|1<<29);
+                        aml_write_reg32(P_HHI_VID_PLL_CNTL,early_pll_settings[i][0] & ~(3<<30));
+                        udelay(1000);
+                    }while((aml_read_reg32(P_HHI_VID_PLL_CNTL) & 1<<31) == 0);
+                }
+                else if(early_plls[i]==P_HHI_VIID_PLL_CNTL)
+                {
+                    do{
+                        aml_write_reg32(P_HHI_VIID_PLL_CNTL,1<<29);
+                        aml_write_reg32(P_HHI_VIID_PLL_CNTL2,0x814d3928);
+                        aml_write_reg32(P_HHI_VIID_PLL_CNTL3,0x6d425012);
+                        aml_write_reg32(P_HHI_VIID_PLL_CNTL4,0x110);
+
+                        aml_write_reg32(P_HHI_VIID_PLL_CNTL,(early_pll_settings[i][0] & ~(1<<30))|1<<29);
+                        aml_write_reg32(P_HHI_VIID_PLL_CNTL,early_pll_settings[i][0] & ~(3<<30));
+                        udelay(1000);
+                    }while((aml_read_reg32(P_HHI_VIID_PLL_CNTL) & 1<<31) == 0);
+                }
+                else{
+                   printk("Error: not restore pll setting!!!\n");
+                }
+                printk(KERN_INFO "late pll %s(%x) on\n", early_plls_name[i], early_plls[i]);
+            }
+        }
+        udelay(1000);
+    } else {
+        for (i = 0; i < EARLY_PLL_COUNT; i++) {
+            if (early_plls[i]==P_HHI_VID_PLL_CNTL)
+            {
+            	early_pll_flag[i] = aml_get_reg32_bits(early_plls[i],30,1) ? 0 : 1;
+				early_pll_settings[i][0]=aml_read_reg32(P_HHI_VID_PLL_CNTL);
+				early_pll_settings[i][1]=aml_read_reg32(P_HHI_VID_PLL_CNTL2);
+				early_pll_settings[i][2]=aml_read_reg32(P_HHI_VID_PLL_CNTL3);
+				early_pll_settings[i][3]=aml_read_reg32(P_HHI_VID_PLL_CNTL4);
+            }
+            else if(early_plls[i]==P_HHI_VIID_PLL_CNTL)
+            {
+                early_pll_flag[i] = aml_get_reg32_bits(early_plls[i],30,1) ? 0 : 1;
+				early_pll_settings[i][0]=aml_read_reg32(P_HHI_VIID_PLL_CNTL);
+				early_pll_settings[i][1]=aml_read_reg32(P_HHI_VIID_PLL_CNTL2);
+				early_pll_settings[i][2]=aml_read_reg32(P_HHI_VIID_PLL_CNTL3);
+				early_pll_settings[i][3]=aml_read_reg32(P_HHI_VIID_PLL_CNTL4);
+			}
+            else
+                printk("Error: not store pll setting!\n");
+            if (early_pll_flag[i]) {
+                printk(KERN_INFO "early pll %s(%x) off\n", early_plls_name[i], early_plls[i]);
+                if ((early_plls[i]==P_HHI_VID_PLL_CNTL)||(early_plls[i]==P_HHI_VIID_PLL_CNTL))
+                   aml_set_reg32_mask(early_plls[i], (1 << 30));
+            }
+        }
+    }
+}
+EXPORT_SYMBOL(early_pll_switch);
+*/
+
+typedef struct {
+	char name[32];
+	unsigned reg_addr;
+	unsigned set_bits;
+	unsigned clear_bits;
+	unsigned reg_value;
+	unsigned enable; // 1:cbus 2:apb 3:ahb 0:disable
+} analog_t;
+
+//#define ANALOG_COUNT    2
+#define ANALOG_COUNT    1
+static analog_t analog_regs[ANALOG_COUNT] = {
+    {"SAR_ADC",             P_SAR_ADC_REG3,       1 << 28, (1 << 30) | (1 << 21),    0,  1},
+#if 0
+#ifdef ADJUST_CORE_VOLTAGE
+    {"LED_PWM_REG0",        P_LED_PWM_REG0,       1 << 13,          1 << 12,              0,  0}, // needed for core voltage adjustment, so not off
+#else
+    {"LED_PWM_REG0",        P_LED_PWM_REG0,       1 << 13,          1 << 12,              0,  1},
+#endif
+#endif
+    //{"VGHL_PWM_REG0",       P_VGHL_PWM_REG0,      1 << 13,          1 << 12,              0,  1},
+};
+
+
+void analog_switch(int flag)
+{
+	int i;
+	unsigned reg_value = 0;
+
+	if (flag) {
+		printk(KERN_INFO "analog on\n");
+		aml_set_reg32_mask(P_AM_ANALOG_TOP_REG0, 1 << 1); // set 0x206e bit[1] 1 to power on top analog
+		for (i = 0; i < ANALOG_COUNT; i++) {
+			if (analog_regs[i].enable && (analog_regs[i].set_bits || analog_regs[i].clear_bits)) {
+				if (analog_regs[i].enable == 1) {
+					aml_write_reg32(analog_regs[i].reg_addr, analog_regs[i].reg_value);
+				} else if (analog_regs[i].enable == 2) {
+					aml_write_reg32(analog_regs[i].reg_addr, analog_regs[i].reg_value);
+				} else if (analog_regs[i].enable == 3) {
+					aml_write_reg32(analog_regs[i].reg_addr, analog_regs[i].reg_value);
+				}
+			}
+		}
+	} else {
+		printk(KERN_INFO "analog off\n");
+		for (i = 0; i < ANALOG_COUNT; i++) {
+			if (analog_regs[i].enable && (analog_regs[i].set_bits || analog_regs[i].clear_bits)) {
+				if (analog_regs[i].enable == 1) {
+					analog_regs[i].reg_value = aml_read_reg32(analog_regs[i].reg_addr);
+					printk("%s(0x%x):0x%x", analog_regs[i].name, analog_regs[i].reg_addr, analog_regs[i].reg_value);
+					if (analog_regs[i].clear_bits) {
+						aml_clr_reg32_mask(analog_regs[i].reg_addr, analog_regs[i].clear_bits);
+						printk(" & ~0x%x", analog_regs[i].clear_bits);
+					}
+					if (analog_regs[i].set_bits) {
+						aml_set_reg32_mask(analog_regs[i].reg_addr, analog_regs[i].set_bits);
+						printk(" | 0x%x", analog_regs[i].set_bits);
+					}
+					reg_value = aml_read_reg32(analog_regs[i].reg_addr);
+					printk(" = 0x%x\n", reg_value);
+				} else if (analog_regs[i].enable == 2) {
+					analog_regs[i].reg_value = aml_read_reg32(analog_regs[i].reg_addr);
+					printk("%s(0x%x):0x%x", analog_regs[i].name, analog_regs[i].reg_addr, analog_regs[i].reg_value);
+					if (analog_regs[i].clear_bits) {
+						aml_clr_reg32_mask(analog_regs[i].reg_addr, analog_regs[i].clear_bits);
+						printk(" & ~0x%x", analog_regs[i].clear_bits);
+					}
+					if (analog_regs[i].set_bits) {
+						aml_set_reg32_mask(analog_regs[i].reg_addr, analog_regs[i].set_bits);
+						printk(" | 0x%x", analog_regs[i].set_bits);
+					}
+					reg_value = aml_read_reg32(analog_regs[i].reg_addr);
+					printk(" = 0x%x\n", reg_value);
+				} else if (analog_regs[i].enable == 3) {
+					analog_regs[i].reg_value = aml_read_reg32(analog_regs[i].reg_addr);
+					printk("%s(0x%x):0x%x", analog_regs[i].name, analog_regs[i].reg_addr, analog_regs[i].reg_value);
+					if (analog_regs[i].clear_bits) {
+						aml_clr_reg32_mask(analog_regs[i].reg_addr, analog_regs[i].clear_bits);
+						printk(" & ~0x%x", analog_regs[i].clear_bits);
+					}
+					if (analog_regs[i].set_bits) {
+						aml_set_reg32_mask(analog_regs[i].reg_addr, analog_regs[i].set_bits);
+						printk(" | 0x%x", analog_regs[i].set_bits);
+					}
+					reg_value = aml_read_reg32(analog_regs[i].reg_addr);
+					printk(" = 0x%x\n", reg_value);
+				}
+			}
+		}
+		aml_clr_reg32_mask(P_AM_ANALOG_TOP_REG0, 1 << 1); // set 0x206e bit[1] 0 to shutdown top analog
+	}
+}
+
+/*
+void usb_switch(int is_on, int ctrl)
+{
+    int index, por;
+
+    if (ctrl == 0) {
+        index = USB_CTL_INDEX_A;
+    } else {
+        index = USB_CTL_INDEX_B;
+    }
+
+    if (is_on) {
+        por = USB_CTL_POR_ON;
+    } else {
+        por = USB_CTL_POR_OFF;
+    }
+
+    set_usb_ctl_por(index, por);
+}
+*/
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+static void meson_system_early_suspend(struct early_suspend *h)
+{
+	if (!early_suspend_flag) {
+		printk(KERN_INFO "sys_suspend\n");
+		if (pdata->set_exgpio_early_suspend) {
+			pdata->set_exgpio_early_suspend(OFF);
+		}
+		early_clk_switch(OFF);
+		//early_pll_switch(OFF);
+		early_power_gate_switch(OFF);
+		early_suspend_flag = 1;
+	}
+}
+
+static void meson_system_late_resume(struct early_suspend *h)
+{
+	if (early_suspend_flag) {
+		early_power_gate_switch(ON);
+		//early_pll_switch(ON);
+		early_clk_switch(ON);
+		early_suspend_flag = 0;
+		if (pdata->set_exgpio_early_suspend) {
+			pdata->set_exgpio_early_suspend(ON);
+		}
+		printk(KERN_INFO "sys_resume\n");
+	}
+#ifdef CONFIG_SUSPEND_WATCHDOG
+	extern void reset_watchdog(void);
+	reset_watchdog();
+#endif
+}
+#endif
+
+#ifdef CONFIG_SCREEN_ON_EARLY
+void vout_pll_resume_early(void)
+{
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	if (early_suspend_flag){
+		early_power_gate_switch(ON);
+		early_clk_switch(ON);
+		early_suspend_flag = 0;
+		if(pdata->set_exgpio_early_suspend){
+			pdata->set_exgpio_early_suspend(ON);
+		}
+		printk(KERN_INFO "sys_resume\n");
+	}
+#endif
+	return;
+}
+EXPORT_SYMBOL(vout_pll_resume_early);
+#endif
+
+#define         MODE_DELAYED_WAKE       0
+#define         MODE_IRQ_DELAYED_WAKE   1
+#define         MODE_IRQ_ONLY_WAKE      2
+
+static void auto_clk_gating_setup(
+    unsigned long sleep_dly_tb, unsigned long mode, unsigned long clear_fiq, unsigned long clear_irq,
+    unsigned long   start_delay, unsigned long   clock_gate_dly, unsigned long   sleep_time, unsigned long   enable_delay)
+{
+}
+
+
+static void meson_pm_suspend(void)
+{
+	unsigned ddr_clk_N;
+#ifdef ADJUST_CORE_VOLTAGE
+	unsigned vcck_backup = aml_get_reg32_bits(P_LED_PWM_REG0, 0, 4);
+	printk(KERN_INFO "current vcck is 0x%x!\n", vcck_backup);
+#endif
+
+	printk(KERN_INFO "enter meson_pm_suspend!\n");
+#ifdef CONFIG_SUSPEND_WATCHDOG
+	extern void enable_watchdog(void);
+	enable_watchdog();
+#endif
+
+	// Disable MMC_LP_CTRL. Will be re-enabled at resume by kreboot.S
+	//pr_debug("MMC_LP_CTRL1 before=%#x\n", aml_read_reg32(P_MMC_LP_CTRL1));
+	//aml_write_reg32(P_MMC_LP_CTRL1, 0x60a80000);
+	//pr_debug("MMC_LP_CTRL1 after=%#x\n", aml_read_reg32(P_MMC_LP_CTRL1));
+	//done in bsp, early suspend
+
+	pdata->ddr_clk = aml_read_reg32(P_HHI_DDR_PLL_CNTL);
+
+	ddr_clk_N = (pdata->ddr_clk >> 9) & 0x1f;
+	ddr_clk_N = ddr_clk_N * 4; // N*4
+	if (ddr_clk_N > 0x1f) {
+		ddr_clk_N = 0x1f;
+	}
+	pdata->ddr_clk &= ~(0x1f << 9);
+	pdata->ddr_clk |= ddr_clk_N << 9;
+
+	printk(KERN_INFO "target ddr clock 0x%x!\n", pdata->ddr_clk);
+
+	analog_switch(OFF);
+
+	//usb_switch(OFF, 0);
+	//usb_switch(OFF, 1);
+
+	if (pdata->set_vccx2) {
+		pdata->set_vccx2(OFF);
+	}
+	if (pdata->set_pinmux) {
+		pdata->set_pinmux(OFF);
+		printk("set gpio_p6 output mode low\n");
+		WRITE_CBUS_REG_BITS(PREG_PAD_GPIO1_O,0,30,1);
+		WRITE_CBUS_REG_BITS(PREG_PAD_GPIO1_EN_N,0,30,1);
+	}
+
+	clk_switch(OFF);
+
+	//   pll_switch(OFF);
+
+	power_gate_switch(OFF);
+
+	switch_mod_gate_by_type(MOD_MEDIA_CPU, 1);
+
+#ifndef CONFIG_MESON_SUSPEND
+	printk("meson_sram_suspend params 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x\n",
+	(unsigned)pdata->pctl_reg_base, (unsigned)pdata->mmc_reg_base, (unsigned)pdata->hiu_reg_base,
+	(unsigned)pdata->power_key, (unsigned)pdata->ddr_clk, (unsigned)pdata->ddr_reg_backup);
+
+	meson_sram_push(meson_sram_suspend, meson_cpu_suspend,
+	meson_cpu_suspend_sz);
+#endif
+
+	printk(KERN_INFO "sleep ...\n");
+
+#ifndef CONFIG_MESON_SUSPEND
+	auto_clk_gating_setup(	2,			// select 100uS timebase
+				MODE_IRQ_ONLY_WAKE,	// Set interrupt wakeup only
+				0,			// don't clear the FIQ global mask
+				0,			// don't clear the IRQ global mask
+				1,			// 1us start delay
+				1,			// 1uS gate delay
+				1,			// Set the delay wakeup time (1mS)
+				1);			// 1uS enable delay
+#endif
+	//switch A9 clock to xtal 24MHz
+	aml_clr_reg32_mask(P_HHI_SYS_CPU_CLK_CNTL, 1 << 7);
+	aml_set_reg32_mask(P_HHI_SYS_PLL_CNTL, 1 << 30);//power down sys pll
+
+#ifdef ADJUST_CORE_VOLTAGE
+	aml_set_reg32_bits(P_LED_PWM_REG0,0,0,4);
+#endif
+
+#if 0
+	//while ((READ_AOBUS_REG(AO_RTC_ADDR1) >> 2) & 1){
+	while ((aml_read_reg32(AO_RTC_ADDR1) >> 2) & 1){
+	udelay(10);
+	}
+#else
+#ifdef CONFIG_MESON_SUSPEND
+	extern int meson_power_suspend(void);
+	meson_power_suspend();
+#else
+	/**
+	* @todo you should not enable irq with a directly register operation
+	*       Please replace it with setup_irq .
+	*/
+	aml_set_reg32_mask(P_SYS_CPU_0_IRQ_IN2_INTR_MASK, pdata->power_key); //enable rtc interrupt only
+	meson_sram_suspend(pdata);
+#endif
+#endif
+
+#ifdef ADJUST_CORE_VOLTAGE
+	aml_set_reg32_bits(P_LED_PWM_REG0,vcck_backup, 0, 4);
+	udelay(100);
+#endif
+	aml_clr_reg32_mask(P_HHI_SYS_PLL_CNTL, (1 << 30)); //turn on sys pll
+
+	printk(KERN_INFO "... wake up\n");
+
+	if ((*(volatile unsigned *)(P_AO_RTC_ADDR1)) & (1<<12)) {
+		// Woke from alarm, not power button. Set flag to inform key_input driver.
+		WRITE_AOBUS_REG(AO_RTI_STATUS_REG2, 0x12345678);
+	}
+	// clear RTC interrupt
+	*(volatile unsigned *)(P_AO_RTC_ADDR1)=(*(volatile unsigned *)(P_AO_RTC_ADDR1))|(0xf000);
+	printk(KERN_INFO "RTCADD3=0x%x\n",*(volatile unsigned *)(P_AO_RTC_ADDR3));
+	if((*(volatile unsigned *)(P_AO_RTC_ADDR3))|(1<<29))
+	{
+		*(volatile unsigned *)(P_AO_RTC_ADDR3)=(*(volatile unsigned *)(P_AO_RTC_ADDR3))&(~(1<<29));
+		udelay(1000);
+	}
+	printk(KERN_INFO "RTCADD3=0x%x\n",*(volatile unsigned *)P_AO_RTC_ADDR3);
+
+	if (pdata->set_vccx2) {
+		pdata->set_vccx2(ON);
+	}
+	if (pdata->set_pinmux) {
+		pdata->set_pinmux(ON);
+	}
+	wait_uart_empty();
+	aml_set_reg32_mask(P_HHI_SYS_CPU_CLK_CNTL , (1 << 7)); //a9 use pll
+
+	switch_mod_gate_by_type(MOD_MEDIA_CPU, 0);
+
+	power_gate_switch(ON);
+
+	//    pll_switch(ON);
+
+	clk_switch(ON);
+
+	//usb_switch(ON, 0);
+	//usb_switch(ON, 1);
+
+	analog_switch(ON);
+}
+
+static int meson_pm_prepare(void)
+{
+	printk(KERN_INFO "enter meson_pm_prepare!\n");
+#if 0
+	mask_save_0[0] = aml_read_reg32(P_SYS_CPU_0_IRQ_IN0_INTR_MASK);
+	mask_save_0[1] = aml_read_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK);
+	mask_save_0[2] = aml_read_reg32(P_SYS_CPU_0_IRQ_IN2_INTR_MASK);
+	mask_save_0[3] = aml_read_reg32(P_SYS_CPU_0_IRQ_IN3_INTR_MASK);
+	mask_save_0[4] = aml_read_reg32(P_SYS_CPU_0_IRQ_IN4_INTR_MASK);
+
+	mask_save_1[0] = aml_read_reg32(P_SYS_CPU_1_IRQ_IN0_INTR_MASK);
+	mask_save_1[1] = aml_read_reg32(P_SYS_CPU_1_IRQ_IN1_INTR_MASK);
+	mask_save_1[2] = aml_read_reg32(P_SYS_CPU_1_IRQ_IN2_INTR_MASK);
+	mask_save_1[3] = aml_read_reg32(P_SYS_CPU_1_IRQ_IN3_INTR_MASK);
+	mask_save_1[4] = aml_read_reg32(P_SYS_CPU_1_IRQ_IN4_INTR_MASK);
+
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN0_INTR_MASK, 0x0);
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK, 0x0);
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN2_INTR_MASK, 0x0);
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN3_INTR_MASK, 0x0);
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN4_INTR_MASK, 0x0);
+
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN0_INTR_MASK, 0x0);
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN1_INTR_MASK, 0x0);
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN2_INTR_MASK, 0x0);
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN3_INTR_MASK, 0x0);
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN4_INTR_MASK, 0x0);
+#endif
+
+
+#ifndef CONFIG_MESON_SUSPEND
+	meson_sram_push(meson_sram_suspend, meson_cpu_suspend,
+	meson_cpu_suspend_sz);
+#endif
+	return 0;
+}
+
+static int meson_pm_enter(suspend_state_t state)
+{
+	int ret = 0;
+
+	switch (state) {
+		case PM_SUSPEND_STANDBY:
+		case PM_SUSPEND_MEM:
+			meson_pm_suspend();
+			break;
+		default:
+			ret = -EINVAL;
+	}
+
+	return ret;
+}
+
+static void meson_pm_finish(void)
+{
+	printk(KERN_INFO "enter meson_pm_finish!\n");
+#if 0
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN0_INTR_MASK, mask_save_0[0]);
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK, mask_save_0[1]);
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN2_INTR_MASK, mask_save_0[2]);
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN3_INTR_MASK, mask_save_0[3]);
+	aml_write_reg32(P_SYS_CPU_0_IRQ_IN4_INTR_MASK, mask_save_0[4]);
+
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN0_INTR_MASK, mask_save_1[0]);
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN1_INTR_MASK, mask_save_1[1]);
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN2_INTR_MASK, mask_save_1[2]);
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN3_INTR_MASK, mask_save_1[3]);
+	aml_write_reg32(P_SYS_CPU_1_IRQ_IN4_INTR_MASK, mask_save_1[4]);
+#endif
+
+#ifdef CONFIG_MESON_SUSPEND
+#ifdef MESON_SUSPEND_DEBUG // only use this when debug without android rootfs
+#ifdef CONFIG_EARLYSUSPEND
+	extern void request_suspend_state(suspend_state_t new_state);
+	request_suspend_state(0);
+#else
+	extern int enter_state(suspend_state_t state);
+	enter_state(0);
+#endif
+#endif
+#endif
+}
+
+static struct platform_suspend_ops meson_pm_ops = {
+	.enter        = meson_pm_enter,
+	.prepare      = meson_pm_prepare,
+	.finish       = meson_pm_finish,
+	.valid        = suspend_valid_only_mem,
+};
+
+static void power_off_unused_pll(void)
+{
+	aml_write_reg32(P_HHI_MPLL_CNTL7, 0x01082000); //turn off mp0
+	aml_write_reg32(P_HHI_MPLL_CNTL8, 0x01082000); //turn off mp1
+}
+
+static void m6tv_set_vccx2(int power_on)
+{
+	if (power_on) {
+		printk(KERN_INFO "%s() Power ON\n", __FUNCTION__);
+		aml_clr_reg32_mask(P_PREG_PAD_GPIO0_EN_N,(1<<26));
+		aml_clr_reg32_mask(P_PREG_PAD_GPIO0_O,(1<<26));
+	} else {
+		printk(KERN_INFO "%s() Power OFF\n", __FUNCTION__);
+		aml_clr_reg32_mask(P_PREG_PAD_GPIO0_EN_N,(1<<26));
+		aml_set_reg32_mask(P_PREG_PAD_GPIO0_O,(1<<26));
+	}
+}
+
+static struct meson_pm_config m6tv_pm_pdata = {
+	.pctl_reg_base = (void *)IO_APB_BUS_BASE,
+	.mmc_reg_base = (void *)APB_REG_ADDR(0x1000),
+	.hiu_reg_base = (void *)CBUS_REG_ADDR(0x1000),
+	.power_key = (1<<8),
+	.ddr_clk = 0x00110820,
+	.sleepcount = 128,
+	.set_vccx2 = m6tv_set_vccx2,
+	.core_voltage_adjust = 7,  //5,8
+};
+
+static int __init meson_pm_probe(struct platform_device *pdev)
+{
+	printk(KERN_INFO "enter meson_pm_probe!\n");
+
+	power_init_off();
+	power_off_unused_pll();
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	early_suspend.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
+	early_suspend.suspend = meson_system_early_suspend;
+	early_suspend.resume = meson_system_late_resume;
+	//early_suspend.param = pdev;
+	register_early_suspend(&early_suspend);
+#endif
+	pdev->dev.platform_data = &m6tv_pm_pdata;
+	pdata = pdev->dev.platform_data;
+	if (!pdata) {
+		dev_err(&pdev->dev, "cannot get platform data\n");
+		return -ENOENT;
+	}
+
+#ifndef CONFIG_MESON_SUSPEND
+	pdata->ddr_reg_backup = sram_alloc(32 * 4);
+	if (!pdata->ddr_reg_backup) {
+		dev_err(&pdev->dev, "cannot allocate SRAM memory\n");
+		return -ENOMEM;
+	}
+
+	meson_sram_suspend = sram_alloc(meson_cpu_suspend_sz);
+	if (!meson_sram_suspend) {
+		dev_err(&pdev->dev, "cannot allocate SRAM memory\n");
+		return -ENOMEM;
+	}
+	meson_sram_push(meson_sram_suspend, meson_cpu_suspend,
+		meson_cpu_suspend_sz);
+#endif
+	suspend_set_ops(&meson_pm_ops);
+
+#ifndef CONFIG_MESON_SUSPEND
+	printk(KERN_INFO "meson_pm_probe done 0x%x %d!\n", (unsigned)meson_sram_suspend, meson_cpu_suspend_sz);
+#else
+	printk(KERN_INFO "meson_pm_probe done !\n");
+#endif
+	return 0;
+}
+
+static int __exit meson_pm_remove(struct platform_device *pdev)
+{
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	unregister_early_suspend(&early_suspend);
+#endif
+	return 0;
+}
+
+static const struct of_device_id m6tv_pm_dt_match[] = {
+	{	.compatible = "amlogic,pm",
+	},
+};
+
+static struct platform_driver meson_pm_driver = {
+	.driver = {
+		.name = "pm-meson",
+		.owner = THIS_MODULE,
+		.of_match_table = m6tv_pm_dt_match,
+	},
+	.remove = __exit_p(meson_pm_remove),
+};
+
+static int __init meson_pm_init(void)
+{
+	return platform_driver_probe(&meson_pm_driver, meson_pm_probe);
+}
+late_initcall(meson_pm_init);
diff --git a/arch/arm/mach-meson6tv/power_gate.c b/arch/arm/mach-meson6tv/power_gate.c
new file mode 100755
index 000000000000..fc35febf82c8
--- /dev/null
+++ b/arch/arm/mach-meson6tv/power_gate.c
@@ -0,0 +1,45 @@
+/*
+ * arch/arm/mach-meson6tv/power_gate.c
+ *
+ * Copyright (C) 2011-2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/module.h>
+#include <mach/am_regs.h>
+#include <mach/power_gate.h>
+#include <mach/mod_gate.h>
+
+unsigned char GCLK_ref[GCLK_IDX_MAX];
+EXPORT_SYMBOL(GCLK_ref);
+
+
+int video_dac_enable(unsigned char enable_mask)
+{
+	switch_mod_gate_by_name("venc", 1);
+	CLEAR_CBUS_REG_MASK(VENC_VDAC_SETTING, enable_mask & 0x1f);
+	return 0;
+}
+EXPORT_SYMBOL(video_dac_enable);
+
+int video_dac_disable()
+{
+	SET_CBUS_REG_MASK(VENC_VDAC_SETTING, 0x1f);
+	switch_mod_gate_by_name("venc", 0);
+	return 0;
+}
+EXPORT_SYMBOL(video_dac_disable);
+
diff --git a/arch/arm/mach-meson6tv/power_suspend.c b/arch/arm/mach-meson6tv/power_suspend.c
new file mode 100755
index 000000000000..613b5270614f
--- /dev/null
+++ b/arch/arm/mach-meson6tv/power_suspend.c
@@ -0,0 +1,86 @@
+/*
+ * arch/arm/mach-meson6tv/power_suspend.c
+ *
+ * Copyright (C) 2011-2013 Amlogic, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <asm/memory.h>
+#include <asm/cacheflush.h>
+
+#include <plat/io.h>
+
+
+//appf functions
+#define APPF_INITIALIZE             0
+#define APPF_POWER_DOWN_CPU         1
+#define APPF_POWER_UP_CPUS          2
+//appf flags
+#define APPF_SAVE_PMU          (1<<0)
+#define APPF_SAVE_TIMERS       (1<<1)
+#define APPF_SAVE_VFP          (1<<2)
+#define APPF_SAVE_DEBUG        (1<<3)
+#define APPF_SAVE_L2           (1<<4)
+
+#ifdef CONFIG_HARDWARE_WATCHDOG
+void disable_watchdog(void)
+{
+	printk(KERN_INFO "** disable watchdog\n");
+	aml_write_reg32(P_WATCHDOG_RESET, 0);
+	aml_clr_reg32_mask(P_WATCHDOG_TC,(1 << WATCHDOG_ENABLE_BIT));
+}
+void enable_watchdog(void)
+{
+	printk(KERN_INFO "** enable watchdog\n");
+	aml_write_reg32(P_WATCHDOG_RESET, 0);
+	aml_write_reg32(P_WATCHDOG_TC, 1 << WATCHDOG_ENABLE_BIT | 0x1FFFFF);//about 20sec
+
+	aml_write_reg32(P_AO_RTI_STATUS_REG1, MESON_NORMAL_BOOT);
+}
+void reset_watchdog(void)
+{
+	//printk(KERN_INFO "** reset watchdog\n");
+	aml_write_reg32(P_WATCHDOG_RESET, 0);
+}
+#endif /* CONFIG_HARDWARE_WATCHDOG */
+
+int meson_power_suspend(void)
+{
+	static int test_flag = 0;
+	unsigned addr;
+	unsigned p_addr;
+	void	(*pwrtest_entry)(unsigned,unsigned,unsigned,unsigned);
+
+	flush_cache_all();
+
+	addr = 0x9FF04400;
+	p_addr = (unsigned)__phys_to_virt(addr);
+	pwrtest_entry = (void (*)(unsigned,unsigned,unsigned,unsigned))p_addr;
+	if(test_flag != 1234){
+		test_flag = 1234;
+		printk("initial appf\n");
+		pwrtest_entry(APPF_INITIALIZE,0,0,0);
+	}
+#ifdef CONFIG_SUSPEND_WATCHDOG
+	disable_watchdog();
+#endif
+	printk("power down cpu --\n");
+	pwrtest_entry(APPF_POWER_DOWN_CPU,0,0,APPF_SAVE_PMU|APPF_SAVE_VFP|APPF_SAVE_L2);
+#ifdef CONFIG_SUSPEND_WATCHDOG
+	enable_watchdog();
+#endif
+	return 0;
+}
diff --git a/arch/arm/mach-meson6tv/smp.c b/arch/arm/mach-meson6tv/smp.c
new file mode 100755
index 000000000000..009cd1fa2c1f
--- /dev/null
+++ b/arch/arm/mach-meson6tv/smp.c
@@ -0,0 +1,176 @@
+/*
+* arch/arm/mach-meson6tv/smp.c
+*
+* Copyright (C) 2013 Amlogic, Inc.
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+* more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+*/
+
+#include <linux/init.h>
+#include <linux/cpumask.h>
+#include <linux/spinlock.h>
+#include <asm/smp.h>
+#include <asm/smp_plat.h>
+#include <asm/smp_scu.h>
+#include <asm/cacheflush.h>
+#include <asm/hardware/gic.h>
+#include <plat/io.h>
+#include <mach/cpu.h>
+#include <mach/am_regs.h>
+
+#include "common.h"
+
+static DEFINE_SPINLOCK(boot_lock);
+
+static void write_pen_release(int val)
+{
+	pen_release = val;
+	smp_wmb();
+	__cpuc_flush_dcache_area((void *)&pen_release, sizeof(pen_release));
+	outer_clean_range(__pa(&pen_release), __pa(&pen_release + 1));
+}
+
+static void __cpuinit meson6tv_secondary_init(unsigned int cpu)
+{
+	/*
+	 * if any interrupts are already enabled for the primary
+	 * core (e.g. timer irq), then they will not have been enabled
+	 * for us: do so
+	 */
+//	gic_secondary_init(0);
+#ifdef CONFIG_MESON_ARM_GIC_FIQ
+extern void  init_fiq(void);
+	init_fiq();
+#endif
+
+	/*
+	 * let the primary processor know we're out of the
+	 * pen, then head off into the C entry point
+	 */
+	write_pen_release(-1);
+	smp_wmb();
+
+	/*
+	 * Synchronise with the boot thread.
+	 */
+	spin_lock(&boot_lock);
+	spin_unlock(&boot_lock);
+}
+
+static void __init wakeup_secondary(unsigned int cpu)
+{
+	/*
+	* Write the address of secondary startup routine into the
+	* AuxCoreBoot1 where ROM code will jump and start executing
+	* on secondary core once out of WFE
+	* A barrier is added to ensure that write buffer is drained
+	*/
+	aml_write_reg32((uint32_t)(IO_AHB_BASE + 0x1ff84),
+	    (const uint32_t)virt_to_phys(meson_secondary_startup));
+
+	//aml_write_reg32(IO_AHB_BASE + 0x1ff80, (1 << cpu) | 1);
+	meson_set_cpu_ctrl_reg((1 << cpu) | 1);
+
+	smp_wmb();
+	/*
+	 * Send a 'sev' to wake the secondary core from WFE.
+	 * Drain the outstanding writes to memory
+	 */
+	 mb();
+#ifndef CONFIG_MESON6_SMP_HOTPLUG
+	dsb_sev();
+#else
+	gic_raise_softirq(cpumask_of(cpu), 0);
+#endif
+
+}
+
+static int __cpuinit meson6tv_boot_secondary(unsigned int cpu, struct task_struct *idle)
+{
+	unsigned long timeout;
+	wakeup_secondary(1);
+	/*
+	* Set synchronisation state between this boot processor
+	* and the secondary one
+	*/
+	spin_lock(&boot_lock);
+
+	/*
+	 * The secondary processor is waiting to be released from
+	 * the holding pen - release it, then wait for it to flag
+	 * that it has been released by resetting pen_release.
+	 */
+	write_pen_release(cpu_logical_map(cpu));
+
+	//smp_send_reschedule(cpu);
+
+	timeout = jiffies + (1 * HZ);
+	while (time_before(jiffies, timeout)) {
+		if (pen_release == -1)
+			break;
+	}
+
+	/*
+	 * now the secondary core is starting up let it run its
+	 * calibrations, then wait for it to finish
+	 */
+	spin_unlock(&boot_lock);
+	return pen_release != -1 ? -ENOSYS : 0;
+}
+
+static void __init meson6tv_smp_init_cpus(void)
+{
+	unsigned int i;
+
+	for (i = 0; i < NR_CPUS; i++)
+		set_cpu_possible(i, true);
+
+	 set_smp_cross_call(gic_raise_softirq);
+}
+
+static void __init meson6tv_smp_prepare_cpus(unsigned int max_cpus)
+{
+	int i;
+
+	/*
+	* Initialise the present map, which describes the set of CPUs
+	* actually populated at the present time.
+	*/
+	for (i = 0; i < max_cpus; i++)
+		set_cpu_present(i, true);
+
+	/*
+	* Initialise the SCU and wake up the secondary core using
+	* wakeup_secondary().
+	*/
+	scu_enable((void __iomem *) IO_PERIPH_BASE);
+	//wakeup_secondary(1);
+	///    dsb_sev();
+}
+
+
+struct smp_operations __initdata meson6tv_smp_ops = {
+	.smp_init_cpus		= meson6tv_smp_init_cpus,
+	.smp_prepare_cpus	= meson6tv_smp_prepare_cpus,
+	.smp_secondary_init	= meson6tv_secondary_init,
+	.smp_boot_secondary	= meson6tv_boot_secondary,
+#ifdef CONFIG_HOTPLUG_CPU
+	.cpu_die		= meson6tv_cpu_die,
+	.cpu_kill		= meson6tv_cpu_kill,
+	.cpu_disable		= meson6tv_cpu_disable,
+#endif
+};
+
+
diff --git a/arch/arm/mach-meson6tv/time.c b/arch/arm/mach-meson6tv/time.c
new file mode 100755
index 000000000000..4dc570bb911c
--- /dev/null
+++ b/arch/arm/mach-meson6tv/time.c
@@ -0,0 +1,443 @@
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/interrupt.h>
+#include <linux/irq.h>
+#include <linux/io.h>
+#include <linux/mm.h>
+#include <linux/clockchips.h>
+#include <linux/clocksource.h>
+#include <asm/memory.h>
+#include <asm/mach/map.h>
+#include <asm/mach/time.h>
+#include <asm/sched_clock.h>
+#include <plat/io.h>
+#include <mach/am_regs.h>
+
+
+
+
+/***********************************************************************
+ * System timer
+ **********************************************************************/
+#define TIMER_E_INPUT_BIT         8
+#define TIMER_D_INPUT_BIT         6
+#define TIMER_C_INPUT_BIT         4
+#define TIMER_B_INPUT_BIT         2
+#define TIMER_A_INPUT_BIT         0
+#define TIMER_E_INPUT_MASK       (7UL << TIMER_E_INPUT_BIT)
+#define TIMER_D_INPUT_MASK       (3UL << TIMER_D_INPUT_BIT)
+#define TIMER_C_INPUT_MASK       (3UL << TIMER_C_INPUT_BIT)
+#define TIMER_B_INPUT_MASK       (3UL << TIMER_B_INPUT_BIT)
+#define TIMER_A_INPUT_MASK       (3UL << TIMER_A_INPUT_BIT)
+#define TIMER_UNIT_1us            0
+#define TIMER_UNIT_10us           1
+#define TIMER_UNIT_100us          2
+#define TIMER_UNIT_1ms            3
+#define TIMERE_UNIT_SYS           0
+#define TIMERE_UNIT_1us           1
+#define TIMERE_UNIT_10us          2
+#define TIMERE_UNIT_100us         3
+#define TIMERE_UNIT_1ms           4
+#define TIMER_A_ENABLE_BIT        16
+#define TIMER_E_ENABLE_BIT        20
+#define TIMER_A_PERIODIC_BIT      12
+/********** Clock Source Device, Timer-E *********/
+static cycle_t cycle_read_timerE(struct clocksource *cs)
+{
+    return (cycles_t) aml_read_reg32(P_ISA_TIMERE);
+}
+
+static struct clocksource clocksource_timer_e = {
+    .name   = "Timer-E",
+    .rating = 300,
+    .read   = cycle_read_timerE,
+    .mask   = CLOCKSOURCE_MASK(32),
+    .flags  = CLOCK_SOURCE_IS_CONTINUOUS,
+};
+
+
+static u32 notrace meson6_read_sched_clock(void)
+{
+    return (u32)aml_read_reg32(P_ISA_TIMERE);
+}
+
+static void __init meson_clocksource_init(void)
+{
+    aml_clr_reg32_mask(P_ISA_TIMER_MUX, TIMER_E_INPUT_MASK);
+    aml_set_reg32_mask(P_ISA_TIMER_MUX, TIMERE_UNIT_1us << TIMER_E_INPUT_BIT);
+///    aml_write_reg32(P_ISA_TIMERE, 0);
+
+    /**
+     * (counter*mult)>>shift=xxx ns
+     */
+    /**
+     * Constants generated by clocks_calc_mult_shift(m, s, 1MHz, NSEC_PER_SEC, 0).
+     * This gives a resolution of about 1us and a wrap period of about 1h11min.
+     */
+    clocksource_timer_e.shift = 22;
+    clocksource_timer_e.mult = 4194304000u;
+    clocksource_register_khz(&clocksource_timer_e,1000);
+
+    setup_sched_clock(meson6_read_sched_clock, 32,USEC_PER_SEC);
+
+}
+
+/********** Clock Event Device, Timer-ABCD *********/
+#define MESON_TIMERA 0
+#define MESON_TIMERB 1
+#define MESON_TIMERC 2
+#define MESON_TIMERD 3
+struct meson_clock {
+	struct clock_event_device   clockevent;
+    struct irqaction            irq;
+    unsigned id;
+    unsigned mux_reg;
+    unsigned reg;
+};
+
+static struct meson_clock *clockevent_to_clock(struct clock_event_device *evt)
+{
+	return container_of(evt, struct meson_clock, clockevent);
+}
+static void meson_clkevt_set_mode(enum clock_event_mode mode,
+                                  struct clock_event_device *dev)
+{
+
+    struct meson_clock * clk=clockevent_to_clock(dev);
+    switch (mode) {
+    case CLOCK_EVT_MODE_RESUME:
+        printk(KERN_INFO"Resume timer%c\n",'A'+clk->id);
+        aml_set_reg32_mask(clk->mux_reg, 0x1<<(TIMER_A_ENABLE_BIT+clk->id));
+        break;
+
+    case CLOCK_EVT_MODE_PERIODIC:
+    	aml_set_reg32_mask(clk->mux_reg, 0x1<<(TIMER_A_PERIODIC_BIT+clk->id));
+         aml_set_reg32_mask(clk->mux_reg, 0x1<<(TIMER_A_ENABLE_BIT+clk->id));
+
+        break;
+
+    case CLOCK_EVT_MODE_ONESHOT:
+        aml_clr_reg32_mask(clk->mux_reg, 0x1<<(TIMER_A_PERIODIC_BIT+clk->id));
+        aml_set_reg32_mask(clk->mux_reg, 0x1<<(TIMER_A_ENABLE_BIT+clk->id));
+		break;
+    case CLOCK_EVT_MODE_SHUTDOWN:
+    case CLOCK_EVT_MODE_UNUSED:
+        printk(KERN_INFO"Disable timer%c\n",'A'+clk->id);
+        aml_clr_reg32_mask(clk->mux_reg, 0x1<<(TIMER_A_ENABLE_BIT+clk->id));
+        break;
+    }
+}
+static int meson_set_next_event(unsigned long evt,
+                                struct clock_event_device *dev)
+{
+    struct meson_clock * clk=clockevent_to_clock(dev);
+    /* use a big number to clear previous trigger cleanly */
+    aml_set_reg32_mask(clk->reg, evt & 0xffff);
+
+    /* then set next event */
+    aml_set_reg32_bits(clk->reg, evt, 0, 16);
+    return 0;
+}
+#if (defined CONFIG_SMP)&& !(defined CONFIG_HAVE_ARM_TWD)
+#if (defined CONFIG_MESON_TIMERB ) || (defined CONFIG_MESON_TIMERD )
+#error "under smp build, if you deselect HAVE_ARM_TWD , you should not enable TIMERB and TIMERD"
+#endif
+
+
+static void meson_tick_set_mode(enum clock_event_mode mode,
+                                  struct clock_event_device *dev);
+static int meson_tick_set_next_event(unsigned long evt,
+                                struct clock_event_device *dev);
+#define meson_tick_rating 450
+//{
+//    int timer =2*smp_processor_id()+1;
+//    meson_clkevt_set_mode(mode,&)
+//}
+#else
+#define meson_tick_set_mode meson_clkevt_set_mode
+#define meson_tick_set_next_event meson_set_next_event
+#define meson_tick_rating 300
+#endif
+
+/* Clock event timer interrupt handler */
+static irqreturn_t meson_timer_interrupt(int irq, void *dev_id);
+#if 0
+static struct clock_event_device clockevent_meson_1mhz = {
+    .name           = "TIMER-AC",
+    .rating         = 300, /* Reasonably fast and accurate clock event */
+
+    .features       = CLOCK_EVT_FEAT_PERIODIC | CLOCK_EVT_FEAT_ONESHOT,
+    .shift          = 20,
+    .set_next_event = meson_set_next_event,
+    .set_mode       = meson_clkevt_set_mode,
+};
+
+static struct irqaction meson_timer_irq = {
+    .name           = "Meson Timer Tick",
+    .flags          = IRQF_DISABLED | IRQF_TIMER | IRQF_IRQPOLL,
+    .handler        = meson_timer_interrupt,
+};
+#endif
+static struct meson_clock meson_timers[]={
+    [MESON_TIMERA]={
+        .clockevent={
+            .name           = "MESON TIMER-A",
+            .rating         = 400, /* Reasonably fast and accurate clock event */
+
+            .features       = CLOCK_EVT_FEAT_PERIODIC | CLOCK_EVT_FEAT_ONESHOT,
+            .shift          = 20,
+            .set_next_event = meson_set_next_event,
+            .set_mode       = meson_clkevt_set_mode,
+        },
+        .irq={
+            .name           = "MESON TIMER-A",
+            .flags          = IRQF_DISABLED | IRQF_TIMER | IRQF_IRQPOLL,
+            .handler        = meson_timer_interrupt,
+            .irq            =INT_TIMER_A,
+        },
+        .id=0,
+        .mux_reg=P_ISA_TIMER_MUX,
+        .reg=P_ISA_TIMERA
+    },
+    [MESON_TIMERB]=
+    {
+        .clockevent={
+            .name           = "MESON TIMER-B",
+            .rating         = meson_tick_rating, /* Reasonably fast and accurate clock event */
+
+            .features       = CLOCK_EVT_FEAT_PERIODIC | CLOCK_EVT_FEAT_ONESHOT,
+            .shift          = 20,
+            .set_next_event = meson_tick_set_next_event,
+            .set_mode       = meson_tick_set_mode,
+        },
+        .irq={
+            .name           = "MESON TIMER-B",
+            .flags          = IRQF_TIMER | IRQF_NOBALANCING,
+            .handler        = meson_timer_interrupt,
+            .irq            =INT_TIMER_B,
+        },
+        .id=1,
+        .mux_reg=P_ISA_TIMER_MUX,
+        .reg=P_ISA_TIMERB
+    },
+    [MESON_TIMERC]=
+
+    {
+        .clockevent={
+            .name           = "MESON TIMER-C",
+            .rating         = meson_tick_rating, /* Reasonably fast and accurate clock event */
+
+            .features       = CLOCK_EVT_FEAT_PERIODIC | CLOCK_EVT_FEAT_ONESHOT,
+            .shift          = 20,
+            .set_next_event = meson_set_next_event,
+            .set_mode       = meson_clkevt_set_mode,
+        },
+        .irq={
+            .name           = "MESON TIMER-C",
+            .flags          = IRQF_DISABLED | IRQF_TIMER | IRQF_IRQPOLL,
+            .handler        = meson_timer_interrupt,
+            .irq            =INT_TIMER_C,
+        },
+        .id=2,
+        .mux_reg=P_ISA_TIMER_MUX,
+        .reg=P_ISA_TIMERC
+    },
+    [MESON_TIMERD]=
+    {
+        .clockevent={
+            .name           = "MESON TIMER-D",
+            .rating         = 400, /* Reasonably fast and accurate clock event */
+            .features       = CLOCK_EVT_FEAT_PERIODIC | CLOCK_EVT_FEAT_ONESHOT,
+            .shift          = 20,
+            .set_next_event = meson_tick_set_next_event,
+            .set_mode       = meson_tick_set_mode,
+        },
+        .irq={
+            .name           = "MESON TIMER-D",
+            .flags          = IRQF_TIMER | IRQF_NOBALANCING,
+            .handler        = meson_timer_interrupt,
+            .irq            =INT_TIMER_D,
+        },
+        .id=3,
+        .mux_reg=P_ISA_TIMER_MUX,
+        .reg=P_ISA_TIMERD
+    }
+
+};
+static irqreturn_t meson_timer_interrupt(int irq, void *dev_id)
+{
+    struct clock_event_device *evt = dev_id;
+    if(evt==NULL||evt->event_handler==NULL)
+    {
+        WARN_ONCE(evt==NULL||evt->event_handler==NULL,"%p %s %p %d",evt,evt?evt->name:NULL,evt?evt->event_handler:NULL,irq);
+        return IRQ_HANDLED;
+    }
+    evt->event_handler(evt);
+	return IRQ_HANDLED;
+
+}
+static void __cpuinit meson_timer_init_device(struct clock_event_device *evt)
+{
+    evt->mult=div_sc(1000000, NSEC_PER_SEC, 20);
+    evt->max_delta_ns =
+            clockevent_delta2ns(0xfffe, evt);
+    evt->min_delta_ns=clockevent_delta2ns(1, evt);
+    evt->cpumask = cpumask_of(smp_processor_id());
+}
+static void __init meson_timer_setup(struct clock_event_device *evt, unsigned i )
+{
+    struct meson_clock * clk;
+    clk=&meson_timers[i];
+    /**
+     * Enable Timer and setting the time base;
+     */
+    aml_set_reg32_mask(clk->mux_reg,
+                (1<<(TIMER_A_ENABLE_BIT+clk->id))
+                |(1<<(TIMER_A_PERIODIC_BIT+clk->id))
+                |(TIMER_UNIT_1us << (TIMER_A_INPUT_BIT+clk->id*2))
+            );
+    aml_write_reg32(clk->reg, 9999);
+    meson_timer_init_device(&clk->clockevent);
+    printk(KERN_ERR"Global timer: %s (%p) initialized\n",clk->clockevent.name,clk);
+
+    clk->irq.dev_id=&clk->clockevent;
+    clockevents_register_device(&(clk->clockevent));
+
+    /* Set up the IRQ handler */
+    setup_irq(clk->irq.irq, &clk->irq);
+}
+static void __init meson_clockevent_init(void)
+{
+
+    /***
+     * Disable Timer A~D, and clean the time base
+     * Now all of the timer is 1us base
+     */
+    aml_clr_reg32_mask(P_ISA_TIMER_MUX,~(TIMER_E_INPUT_MASK));
+#ifdef CONFIG_MESON_TIMERA
+    meson_timer_setup(NULL,MESON_TIMERA);
+#endif
+#ifdef CONFIG_MESON_TIMERB
+    meson_timer_setup(NULL,MESON_TIMERB);
+#endif
+#ifdef CONFIG_MESON_TIMERC
+    meson_timer_setup(NULL,MESON_TIMERC);
+#endif
+#ifdef CONFIG_MESON_TIMERD
+    meson_timer_setup(NULL,MESON_TIMERD);
+#endif
+
+}
+#ifdef CONFIG_SMP
+/***********************************************************************
+ * ARM TWD System timer
+ **********************************************************************/
+
+
+#include <asm/localtimer.h>
+#ifdef CONFIG_HAVE_ARM_TWD
+#include <asm/smp_twd.h>
+int __cpuinit local_timer_setup(struct clock_event_device *evt)
+{
+
+    evt->irq = 29;
+    twd_timer_setup(evt);
+
+    return 0;
+}
+static void meson_twd_private_timer_init(void)
+{
+    twd_base=(void __iomem *)((IO_PERIPH_BASE+0x600));
+}
+#else///CONFIG_HAVE_ARM_TWD
+#if (defined CONFIG_MESON_TIMERB ) || (defined CONFIG_MESON_TIMERD )
+#error "under smp build, if you deselect HAVE_ARM_TWD , you should not enable TIMERB and TIMERD"
+#endif
+
+static void meson_tick_set_mode(enum clock_event_mode mode,
+                                  struct clock_event_device *dev)
+{
+    int timer =(2*smp_processor_id())+1;
+    meson_clkevt_set_mode(mode,&meson_timers[timer].clockevent);
+}
+static int meson_tick_set_next_event(unsigned long evt,
+                                struct clock_event_device *dev)
+{
+    int timer =2*smp_processor_id()+1;
+     return   meson_set_next_event(evt,&meson_timers[timer].clockevent);
+}
+int  __cpuinit meson_local_timer_setup(struct clock_event_device *evt)
+{
+	int cpu;
+	int timer;
+	struct meson_clock * clk;
+
+	if(!evt){
+		printk(KERN_ERR"meson_local_timer_setup: null evt!\n");
+		return -EINVAL;
+	}
+
+	cpu = smp_processor_id();
+	timer=2*cpu+1;
+
+	clk=&meson_timers[timer];
+	aml_set_reg32_mask(clk->mux_reg,
+		(1<<(TIMER_A_ENABLE_BIT+clk->id))
+		|(1<<(TIMER_A_PERIODIC_BIT+clk->id))
+		|(TIMER_UNIT_1us << (TIMER_A_INPUT_BIT+clk->id*2))
+	);
+	aml_write_reg32(clk->reg, 9999);
+	meson_timer_init_device(&(clk->clockevent));
+	printk(KERN_ERR"Local timer: %s (%p) for CPU%d initialized\n",
+		clk->clockevent.name,clk,cpu);
+
+	*evt=clk->clockevent;
+	clk->irq.dev_id=evt;
+
+	clockevents_register_device(evt);
+
+	if(cpu){
+		irq_set_affinity(clk->irq.irq, cpumask_of(cpu));
+	}
+	/* Set up the IRQ handler */
+	setup_irq(clk->irq.irq, &clk->irq);
+
+	return 0;
+}
+void  __cpuinit meson_local_timer_stop(struct clock_event_device *evt)
+{
+	//printk("Todo: meson_local_timer_stop() need implement?\n");
+	evt->set_mode(CLOCK_EVT_MODE_UNUSED, evt);
+	return;
+}
+
+struct local_timer_ops meson_local_timer_ops = {
+	.setup = meson_local_timer_setup,
+	.stop = meson_local_timer_stop,
+};
+inline int local_timer_ack(void)
+{
+    return 1;
+}
+
+
+#endif///CONFIG_HAVE_ARM_TWD
+#endif///CONFIG_SMP
+
+
+/*
+ * This sets up the system timers, clock source and clock event.
+ */
+void __init meson6tv_timer_init(void)
+{
+	meson_clocksource_init();
+	meson_clockevent_init();
+#ifdef CONFIG_SMP
+#ifdef CONFIG_HAVE_ARM_TWD
+	meson_twd_private_timer_init();
+#else
+	local_timer_register(&meson_local_timer_ops);
+#endif
+#endif
+}
+
diff --git a/arch/arm/mach-meson6tv/usbclock.c b/arch/arm/mach-meson6tv/usbclock.c
new file mode 100755
index 000000000000..3f95066bd211
--- /dev/null
+++ b/arch/arm/mach-meson6tv/usbclock.c
@@ -0,0 +1,113 @@
+/*
+ *
+ * arch/arm/mach-meson6tv/usbclock.c
+ *
+ *  Copyright (C) 2011,2012 AMLOGIC, INC.
+ *
+ *	by Victor Wan 2012.11.16 @Shanghai, China
+ *	by Victor Wan 2012.2.14 @Santa Clara, CA
+ *
+ * License terms: GNU General Public License (GPL) version 2
+ * Platform machine definition.
+ */
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/mm.h>
+#include <linux/sched.h>
+#include <linux/interrupt.h>
+#include <linux/ioport.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <linux/dma-mapping.h>
+#include <asm/mach-types.h>
+#include <asm/mach/arch.h>
+#include <asm/delay.h>
+#include <plat/platform.h>
+#include <plat/lm.h>
+#include <plat/regops.h>
+#include <mach/hardware.h>
+#include <mach/memory.h>
+#include <mach/clock.h>
+#include <mach/am_regs.h>
+#include <mach/usbclock.h>
+
+/*
+ * M chip USB clock setting
+ */
+
+/*
+ * Clock source name index must sync with chip's spec
+ * M1/M2/M3/M6/M6TV are different!
+ * This is only for M6TV
+ */
+static const char * clock_src_name[] = {
+	"XTAL input",
+	"XTAL input divided by 2",
+	"FCLK / 2",
+	"FCLK / 5"
+};
+
+int set_usb_phy_clk(struct lm_device * plmdev,int is_enable)
+{
+	int port_idx;
+	usb_peri_reg_t * peri;
+	usb_config_data_t config;
+	usb_ctrl_data_t control;
+	int clk_sel,clk_div,clk_src;
+	int time_dly = 500; //usec
+
+	if(!plmdev)
+		return -1;
+
+	port_idx = plmdev->param.usb.port_idx;
+	if(port_idx < 0 || port_idx > 3)
+		return -1;
+
+	peri = (usb_peri_reg_t *)plmdev->param.usb.phy_tune_reg;
+
+	printk(KERN_NOTICE"USB (%d) peri reg base: %x\n",port_idx,(uint32_t)peri);
+	if(is_enable){
+
+		clk_sel = plmdev->clock.sel;
+		clk_div = plmdev->clock.div;
+		clk_src = plmdev->clock.src;
+
+		config.d32 = peri->config;
+		config.b.clk_sel = clk_sel;
+		config.b.clk_div = clk_div;
+		config.b.clk_en = 1;
+		peri->config = config.d32;
+
+		printk(KERN_NOTICE"USB (%d) use clock source: %s\n",port_idx,clock_src_name[clk_sel]);
+
+		control.d32 = peri->ctrl;
+		control.b.fsel = 2;	/* PHY default is 24M (5), change to 12M (2) */
+		control.b.por = 1;
+		peri->ctrl = control.d32;
+		udelay(time_dly);
+		control.b.por = 0;
+		peri->ctrl = control.d32;
+		udelay(time_dly);
+
+		/* read back clock detected flag*/
+		control.d32 = peri->ctrl;
+		if(!control.b.clk_detected){
+			printk(KERN_ERR"USB (%d) PHY Clock not detected!\n",port_idx);
+			return -1;
+		}
+	}else{
+
+		config.d32 = peri->config;
+		config.b.clk_en = 0;
+		peri->config = config.d32;
+		control.d32 = peri->ctrl;
+		control.b.por = 1;
+		peri->ctrl = control.d32;
+	}
+	dmb();
+
+	return 0;
+}
+
+EXPORT_SYMBOL(set_usb_phy_clk);
+
diff --git a/arch/arm/plat-meson/Kconfig b/arch/arm/plat-meson/Kconfig
index 0d38c3c470ea..312066bc97c2 100755
--- a/arch/arm/plat-meson/Kconfig
+++ b/arch/arm/plat-meson/Kconfig
@@ -2,7 +2,7 @@ if PLAT_MESON
 
 menu "Amlogic Meson platform"
 	depends on PLAT_MESON
-choice 
+choice
 	prompt "Meson SoC"
 	default ARCH_MESON8
 
@@ -11,25 +11,30 @@ config ARCH_MESON6
     help
         Enable support for Amlogic Meson6 based system
 
+config ARCH_MESON6TV
+    bool "Meson6TV series"
+    help
+        Enable support for Amlogic Meson6TV based system
+
 config ARCH_MESON8
     bool "Meson8 series"
     help
         Enable support for Amlogic Meson8 based system
-        
+
 endchoice
 
-choice 
+choice
 	prompt "Interrupt Controller Select"
 	default MESON_ARM_GIC
 config MESON_IRQ
 	bool "Meson Interrupt controller"
     help
-        If SMP is opend , you should not Enable it 
+        If SMP is opend , you should not Enable it
 config MESON_ARM_GIC
 	bool "ARM Generic Interrupt Controller"
     select ARM_GIC
     help
-        Interrupt Controller from ARM Company 
+        Interrupt Controller from ARM Company
 endchoice
 config MESON_CLOCK_TICK_RATE
 	int "Clock Tick Rate"
@@ -39,29 +44,29 @@ config MESON_ARM_GIC_FIQ
 	bool "ARM Generic Interrupt Controller FIQ"
 	depends on ARM_GIC
 	help
-	 	enable ARM GIC FIQ	 
+	 	enable ARM GIC FIQ
 	 default n
-	 
+
 config MESON_SUSPEND
 	bool "Support Meson A9 domain power down"
-	depends on SUSPEND 
+	depends on SUSPEND
 	default n
 
 config SUSPEND_WATCHDOG
 	bool "Enable hardware watchdog while system halt in suspend or resume process"
 	depends on MESON_SUSPEND
 	default n
-	
+
 config MESON_SUSPEND_TEST
 	bool "Enable suspend/resume test"
 	depends on MESON_SUSPEND
 	default n
-	
+
 config SCREEN_ON_EARLY
 	bool "Turn on screen early"
-	depends on MESON_SUSPEND 
+	depends on MESON_SUSPEND
 	default n
-	
+
 config CLK81_DFS
 	bool "Scale clk81 freqence in dynamic mode"
 	default n
@@ -79,6 +84,7 @@ config MESON_CPU_EMULATOR
 		Enable support for Meson serial CPU running at VLSI Emulator
 
 source "arch/arm/mach-meson6/Kconfig"
+source "arch/arm/mach-meson6tv/Kconfig"
 source "arch/arm/mach-meson8/Kconfig"
 
 config MESON_CUSTOM_BOARD_SUPPORT
@@ -90,6 +96,7 @@ config MESON_CUSTOM_BOARD_SUPPORT
 menu "Meson development boards"
 
 source "arch/arm/mach-meson6/Kconfig.boards"
+source "arch/arm/mach-meson6tv/Kconfig.boards"
 source "arch/arm/mach-meson8/Kconfig.boards"
 
 #if MESON_CUSTOM_BOARD_SUPPORT
diff --git a/mk_m6tv.sh b/mk_m6tv.sh
new file mode 100755
index 000000000000..a82543721f9e
--- /dev/null
+++ b/mk_m6tv.sh
@@ -0,0 +1,21 @@
+#! /bin/bash
+
+make meson6tv_defconfig
+#make UIMAGE_COMPRESSION=none uImage -j
+make uImage -j12
+#make modules
+
+make meson6tv_ref.dtd
+make meson6tv_ref.dtb
+
+#cd ../root/g18
+#find .| cpio -o -H newc | gzip -9 > ../ramdisk.img
+
+#rootfs.cpio -- original buildroot rootfs, busybox
+#m8rootfs.cpio -- build from buildroot
+ROOTFS="rootfs.cpio"
+
+#cd ..
+./mkbootimg --kernel ./arch/arm/boot/uImage --ramdisk ./${ROOTFS} --second ./arch/arm/boot/dts/amlogic/meson6tv_ref.dtb --output ./m6tvboot.img
+ls -l ./m6tvboot.img
+echo "m6tvboot.img done"
-- 
2.19.0

