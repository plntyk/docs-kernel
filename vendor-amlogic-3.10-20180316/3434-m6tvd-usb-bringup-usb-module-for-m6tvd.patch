From 99cc139901ec82de4ae154d7f18a283b5674eb21 Mon Sep 17 00:00:00 2001
From: "qi.duan" <qi.duan@amlogic.com>
Date: Wed, 8 Jan 2014 16:25:44 +0800
Subject: [PATCH 3434/5965] m6tvd:usb: bringup usb module for m6tvd

usba and usbb now ok
---
 arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd   |  72 ++++++
 arch/arm/configs/meson6tvd_defconfig          |   6 +-
 arch/arm/mach-meson6tvd/Makefile              |   2 +
 .../mach-meson6tvd/board-meson6tvd-common.c   |   9 +-
 arch/arm/mach-meson6tvd/clock.c               |  16 +-
 arch/arm/mach-meson6tvd/include/mach/usb.h    |  27 +++
 .../mach-meson6tvd/include/mach/usbclock.h    | 211 ++++++++++++++++++
 arch/arm/mach-meson6tvd/usbclock.c            | 158 ++++++++-----
 drivers/amlogic/usb/dwc_otg/Makefile          |   2 +-
 9 files changed, 438 insertions(+), 65 deletions(-)
 create mode 100755 arch/arm/mach-meson6tvd/include/mach/usb.h
 create mode 100755 arch/arm/mach-meson6tvd/include/mach/usbclock.h

diff --git a/arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd b/arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd
index c2bb1fd794b3..6e802160df47 100755
--- a/arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd
@@ -180,6 +180,78 @@
 	};
 
 
+/// ***************************************************************************************
+///	-	USB Controller
+//$$ MODULE="USB Controller"
+	usb_con {
+		lm-compatible = "logicmodule-bus";
+
+//$$ DEVICE="usb_b"
+//$$ L2 PROP_U32 = "lm-periph-id"
+//$$ L2 PROP_STR = "clock-src"
+//$$ L2 PROP_U32 = "port-id"
+//$$ L2 PROP_U32 = "port-type"
+//$$ L2 PROP_U32 = "port-speed"
+//$$ L2 PROP_U32 = "port-config"
+//$$ L2 PROP_U32 = "port-dma"
+//$$ L2 PROP_U32 = "port-id-mode"
+//$$ L2 PROP_STR = "status"
+		usb_b {
+			lm-compatible = "amlogic,usb";
+			lm-periph-id = <1>; /** lm name */
+			clock-src = "usb1"; /** clock src */
+			port-id = <1>;	 /** ref to mach/usb.h */
+			port-type = <1>;	/** 0: otg, 1: host, 2: slave */
+			port-speed = <0>; /** 0: default, 1: high, 2: full */
+			port-config = <0>; /** 0: default */
+			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
+			port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
+			status = "okay";
+		};
+
+//$$ DEVICE="usb_a"
+//$$ L2 PROP_U32 = "lm-periph-id"
+//$$ L2 PROP_STR = "clock-src"
+//$$ L2 PROP_U32 = "port-id"
+//$$ L2 PROP_U32 = "port-type"
+//$$ L2 PROP_U32 = "port-speed"
+//$$ L2 PROP_U32 = "port-config"
+//$$ L2 PROP_U32 = "port-dma"
+//$$ L2 PROP_U32 = "port-id-mode"
+//$$ L2 PROP_STR = "gpio-vbus-power"
+//$$ L2 PROP_U32 = "gpio-work-mask"
+// L2 PROP_U32 = "charger_detect"
+//$$ L2 PROP_STR = "status"
+		usb_a {
+			lm-compatible = "amlogic,usb";
+			lm-periph-id = <0>; /** lm name */
+			clock-src = "usb0"; /** clock src */
+			port-id = <0>;	/** ref to mach/usb.h */
+			port-type = <1>;	/** 0: otg, 1: host, 2: slave */
+			port-speed = <0>; /** 0: default, high, 1: full */
+			port-config = <0>; /** 0: default */
+			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
+			port-id-mode = <0>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
+			//gpio-vbus-power = "GPIOD_9";
+			//gpio-work-mask = <1>; /**0: work on pulldown,1:work on pullup*/
+			status = "okay";
+		};
+
+		//usb_c{
+		//	lm-compatible = "amlogic,usb";
+		//	lm-periph-id = <2>; /** lm name */
+		//	clock-src = "usb2"; /** clock src */
+		//	port-id = <2>;	 /** ref to mach/usb.h */
+		//	port-type = <1>;	/** 0: otg, 1: host, 2: slave */
+		//	port-speed = <0>; /** 0: default, 1: high, 2: full */
+		//	port-config = <0>; /** 0: default */
+		//	port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
+		//	port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
+		//	status = "okay";
+		//};
+	};
+
+
 	i2c@c1108500 { /*I2C-A*/
 		compatible = "amlogic,aml_i2c";
 		dev_name = "i2c-A";
diff --git a/arch/arm/configs/meson6tvd_defconfig b/arch/arm/configs/meson6tvd_defconfig
index 63f943015ad5..1fc5a638092e 100755
--- a/arch/arm/configs/meson6tvd_defconfig
+++ b/arch/arm/configs/meson6tvd_defconfig
@@ -25,12 +25,12 @@ CONFIG_HIGHMEM=y
 CONFIG_VFP=y
 CONFIG_NEON=y
 CONFIG_BINFMT_MISC=y
-# CONFIG_OF_LM is not set
 # CONFIG_AML_RTC is not set
 CONFIG_AM_REMOTE=m
 # CONFIG_MESON_NEW_INPUT_REMOTE is not set
 # CONFIG_MESON_INPUT_KEYBOARD is not set
 # CONFIG_AMLOGIC_BOARD_HAS_PMU is not set
+CONFIG_AMLOGIC_USB
 CONFIG_MMC_AML=y
 # CONFIG_AMAUDIO is not set
 CONFIG_VSYNC_RDMA=y
@@ -85,7 +85,8 @@ CONFIG_SND_SOC=y
 CONFIG_SND_AML_M6_SOC=y
 CONFIG_SND_AML_M_DUMMY_CODEC=y
 # CONFIG_HID_GENERIC is not set
-# CONFIG_USB_SUPPORT is not set
+CONFIG_USB=y
+CONFIG_USB_STORAGE=y
 CONFIG_SWITCH=y
 CONFIG_RTC_CLASS=y
 CONFIG_UIO=y
@@ -131,3 +132,4 @@ CONFIG_RCU_CPU_STALL_TIMEOUT=60
 # CONFIG_FTRACE is not set
 CONFIG_CRC_T10DIF=y
 CONFIG_CRC7=y
+
diff --git a/arch/arm/mach-meson6tvd/Makefile b/arch/arm/mach-meson6tvd/Makefile
index d939767f21f4..687079c52b47 100755
--- a/arch/arm/mach-meson6tvd/Makefile
+++ b/arch/arm/mach-meson6tvd/Makefile
@@ -18,6 +18,8 @@ obj-$(CONFIG_CACHE_L2X0)			+= cache.o
 # Power Management
 obj-$(CONFIG_SUSPEND)				+= pm.o
 
+obj-$(CONFIG_AMLOGIC_USB) += usbclock.o
+
 obj-$(CONFIG_HOTPLUG_CPU)			+= hotplug.o
 obj-$(CONFIG_SMP)				+= headsmp.o smp.o
 
diff --git a/arch/arm/mach-meson6tvd/board-meson6tvd-common.c b/arch/arm/mach-meson6tvd/board-meson6tvd-common.c
index 5e3882b269b5..9ff57946a497 100755
--- a/arch/arm/mach-meson6tvd/board-meson6tvd-common.c
+++ b/arch/arm/mach-meson6tvd/board-meson6tvd-common.c
@@ -26,9 +26,12 @@
 #include <linux/reboot.h>
 #include <linux/platform_device.h>
 #include <linux/of_platform.h>
+#include <linux/amlogic/of_lm.h>
 #include <asm/mach/arch.h>
 #include <asm/mach/map.h>
 #include <mach/io.h>
+#include <linux/io.h>
+#include <plat/lm.h>
 #ifdef CONFIG_SMP
 #include <mach/smp.h>
 #endif
@@ -76,12 +79,10 @@ static struct of_device_id mxs_of_platform_bus_ids[] = {
 	{},
 };
 
-#if 0
 static struct of_device_id mxs_of_lm_bus_ids[] = {
 	{.compatible = "logicmodule-bus",},
 	{},
 };
-#endif
 
 static void meson6tv_power_off(void)
 {
@@ -95,7 +96,9 @@ static void __init meson6tv_dt_init_machine(void)
 	parent = get_device(&platform_bus);
 
 	of_platform_populate(NULL, mxs_of_platform_bus_ids, NULL, parent);
-	//of_lm_populate(NULL, mxs_of_lm_bus_ids, NULL, NULL);
+#ifdef CONFIG_OF_LM
+	of_lm_populate(NULL,mxs_of_lm_bus_ids,NULL,NULL);
+#endif
 
 	//of_platform_populate(NULL, of_default_bus_match_table,
 	//aml_meson6_auxdata_lookup, NULL);
diff --git a/arch/arm/mach-meson6tvd/clock.c b/arch/arm/mach-meson6tvd/clock.c
index e257be94eed1..6b891941e63e 100755
--- a/arch/arm/mach-meson6tvd/clock.c
+++ b/arch/arm/mach-meson6tvd/clock.c
@@ -41,6 +41,12 @@
 #include <plat/regops.h>
 #include <plat/cpufreq.h>
 #include <linux/printk.h>
+#ifdef CONFIG_AMLOGIC_USB
+#include <mach/usbclock.h>
+#endif
+#include <mach/am_regs.h>
+
+
 static DEFINE_SPINLOCK(mali_clk_lock);
 static DEFINE_SPINLOCK(clockfw_lock);
 static DEFINE_MUTEX(clock_ops_lock);
@@ -2819,19 +2825,21 @@ static int __init meson_clock_init(void)
 	//clk_mali.status = clk_status_mali;
 	CLK_PLL_CHILD_DEF(mali, fixed);
 	//clk_ops_register(&clk_mali, &mali_clk_ops);
-#if 0
+
+#ifdef CONFIG_AMLOGIC_USB
     // Add clk usb0
-    CLK_DEFINE(usb0,xtal,4,NULL,clk_msr_get,NULL,NULL,NULL);
+    CLK_DEFINE(usb0,xtal,4,NULL,clk_msr_get,clk_enable_usb,clk_disable_usb,"usb0");
     meson_clk_register(&clk_usb0,&clk_xtal);
     clk_usb0.clk_gate_reg_adr = P_USB_ADDR0;
     clk_usb0.clk_gate_reg_mask = (1<<0);
 
     // Add clk usb1
-    CLK_DEFINE(usb1,xtal,5,NULL,clk_msr_get,NULL,NULL,NULL);
+    CLK_DEFINE(usb1,xtal,5,NULL,clk_msr_get,clk_enable_usb,clk_disable_usb,"usb1");
   	meson_clk_register(&clk_usb1,&clk_xtal);
     clk_usb1.clk_gate_reg_adr = P_USB_ADDR8;
     clk_usb1.clk_gate_reg_mask = (1<<0);
-#endif
+    #endif
+
 	{
 		// Dump clocks
 		char *clks[] = {
diff --git a/arch/arm/mach-meson6tvd/include/mach/usb.h b/arch/arm/mach-meson6tvd/include/mach/usb.h
new file mode 100755
index 000000000000..6c5cf5d8dfcf
--- /dev/null
+++ b/arch/arm/mach-meson6tvd/include/mach/usb.h
@@ -0,0 +1,27 @@
+/*
+ *	arch/arm/mach-meson6/include/mach/usb.h
+ *
+ *  Copyright (C) 2013 AMLOGIC, INC.
+ *
+ * License terms: GNU General Public License (GPL) version 2
+ * Basic register address definitions in physical memory and
+ * some block defintions for core devices like the timer.
+ * copy from linux kernel
+ */
+
+#ifndef __MACH_MESSON_USB_REGS_H
+#define __MACH_MESSON_USB_REGS_H
+
+#include <mach/am_regs.h>
+
+#define MESON_USB_PORT_NUM 3
+
+#define MESON_USB_NAMES "usb0","usb1","usb2"
+#define MESON_USB_FIFOS 1024,1024,1024
+#define MESON_USB_CTRL_ADDRS      ((void *)IO_USB_A_BASE),((void *)IO_USB_B_BASE),((void *)IO_USB_C_BASE)
+#define MESON_USB_CTRL_SIZES		SZ_256K,SZ_256K,SZ_256K
+#define MESON_USB_PHY_ADDRS      ((void *)P_USB_ADDR0),((void *)P_USB_ADDR8),((void *)P_USB_ADDR16)
+#define MESON_USB_PHY_SIZES			8,8,8
+#define MESON_USB_IRQS		INT_USB_A, INT_USB_B, INT_USB_C
+
+#endif
diff --git a/arch/arm/mach-meson6tvd/include/mach/usbclock.h b/arch/arm/mach-meson6tvd/include/mach/usbclock.h
new file mode 100755
index 000000000000..803a74a9250d
--- /dev/null
+++ b/arch/arm/mach-meson6tvd/include/mach/usbclock.h
@@ -0,0 +1,211 @@
+#ifndef __USB_CLK_HEADER_
+#define __USB_CLK_HEADER_
+
+#include <plat/lm.h>
+#include <mach/clock.h>
+typedef struct usb_peri_reg {
+	volatile uint32_t config;
+	volatile uint32_t ctrl;
+	volatile uint32_t endp_intr;
+	volatile uint32_t adp_bc;
+	volatile uint32_t dbg_uart;
+	volatile uint32_t test;
+	volatile uint32_t tune;
+	volatile uint32_t reserved;
+} usb_peri_reg_t;
+
+typedef union usb_config_data {
+    /** raw register data */
+    uint32_t d32;
+    /** register bits */
+    struct {
+        unsigned clk_en:1;
+        unsigned clk_sel:3;
+        unsigned clk_div:7;
+        unsigned reserved:20;
+        unsigned test_trig:1;
+    } b;
+} usb_config_data_t;
+
+typedef union usb_ctrl_data {
+    /** raw register data */
+    uint32_t d32;
+    /** register bits */
+    struct {
+        unsigned soft_prst:1;
+        unsigned soft_hreset:1;
+        unsigned ss_scaledown_mode:2;
+        unsigned clk_det_rst:1;
+        unsigned intr_sel:1;
+        unsigned reserved:2;
+        unsigned clk_detected:1;
+        unsigned sof_sent_rcvd_tgl:1;
+        unsigned sof_toggle_out:1;
+        unsigned not_used:4;
+        unsigned por:1;
+        unsigned sleepm:1;
+        unsigned txbitstuffennh:1;
+        unsigned txbitstuffenn:1;
+        unsigned commononn:1;
+        unsigned refclksel:2;
+        unsigned fsel:3;
+        unsigned portreset:1;
+        unsigned thread_id:6;
+    } b;
+} usb_ctrl_data_t;
+
+typedef union usb_endp_intr_data {
+    /** raw register data */
+    uint32_t d32;
+    /** register bits */
+    struct {
+        unsigned int0:1;
+        unsigned int1:1;
+        unsigned int2:1;
+        unsigned int3:1;
+        unsigned int4:1;
+        unsigned int5:1;
+        unsigned int6:1;
+        unsigned int7:1;
+        unsigned int8:1;
+        unsigned int9:1;
+        unsigned int10:1;
+        unsigned int11:1;
+        unsigned int12:1;
+        unsigned int13:1;
+        unsigned int14:1;
+        unsigned int15:1;
+        unsigned int16:1;
+        unsigned int17:1;
+        unsigned int18:1;
+        unsigned int19:1;
+        unsigned int20:1;
+        unsigned int21:1;
+        unsigned int22:1;
+        unsigned int23:1;
+        unsigned int24:1;
+        unsigned int25:1;
+        unsigned int26:1;
+        unsigned int27:1;
+        unsigned int28:1;
+        unsigned int29:1;
+        unsigned int30:1;
+        unsigned int31:1;
+    } b;
+} usb_endp_intr_data_t;
+
+typedef union usb_adp_bc_data {
+    /** raw register data */
+    uint32_t d32;
+    /** register bits */
+    struct {
+	unsigned vbusvldextsel:1;
+	unsigned vbusvldext:1;
+	unsigned otgdisable:1;
+	unsigned idpullup:1;
+	unsigned drvvbus:1;
+	unsigned adp_prb_en:1;
+	unsigned adp_dischrg:1;
+	unsigned adp_chrg:1;
+	unsigned sessend:1;
+	unsigned device_sess_vld:1;
+	unsigned bvalid:1;
+	unsigned avalid:1;
+	unsigned iddig:1;
+	unsigned vbusvalid:1;
+	unsigned adp_probe:1;
+	unsigned adp_sense:1;
+	unsigned aca_enable:1;
+	unsigned dcd_enable:1;
+	unsigned vdatdetenb:1;
+	unsigned vdatsrcenb:1;
+	unsigned chrgsel:1;
+	unsigned chg_det:1;
+	unsigned aca_pin_range_c:1;
+	unsigned aca_pin_range_b:1;
+	unsigned aca_pin_range_a:1;
+	unsigned aca_pin_gnd:1;
+	unsigned aca_pin_float:1;
+	unsigned not_used:5;
+    } b;
+} usb_adp_bc_data_t;
+
+typedef union usb_dbg_uart_data {
+    /** raw register data */
+    uint32_t d32;
+    /** register bits */
+    struct {
+	unsigned bypass_sel:1;
+	unsigned bypass_dm_en:1;
+	unsigned bypass_dp_en:1;
+	unsigned bypass_dm_data:1;
+	unsigned bypass_dp_data:1;
+	unsigned fsv_minus:1;
+	unsigned fsv_plus:1;
+	unsigned burn_in_test:1;
+	unsigned loopbackenb:1;
+	unsigned set_iddq:1;
+	unsigned ate_reset:1;
+	unsigned reserved:4;
+	unsigned not_used:17;
+    } b;
+} usb_dbg_uart_data_t;
+
+typedef union phy_test_data {
+    /** raw register data */
+    uint32_t d32;
+    /** register bits */
+    struct {
+	unsigned data_in:4;
+	unsigned data_in_en:4;
+	unsigned addr:4;
+	unsigned data_out_sel:1;
+	unsigned clk:1;
+	unsigned vatestenb:2;
+	unsigned data_out:4;
+	unsigned not_used:12;
+    } b;
+} phy_test_data_t;
+
+typedef union phy_tune_data {
+    /** raw register data */
+    uint32_t d32;
+    /** register bits */
+    struct {
+	unsigned tx_res_tune:2;
+	unsigned tx_hsxv_tune:2;
+	unsigned tx_vref_tune:4;
+	unsigned tx_rise_tune:2;
+	unsigned tx_preemp_pulse_tune:1;
+	unsigned tx_preemp_amp_tune:2;
+	unsigned tx_fsls_tune:4;
+	unsigned sqrx_tune:3;
+	unsigned otg_tune:3;
+	unsigned comp_dis_tune:3;
+	unsigned not_used:6;
+    } b;
+} phy_tune_data_t;
+
+
+/*
+ * Clock source index must sync with chip's spec
+ * M1/M2/M3/M6 are different!
+ * This is only for M6
+ */
+#define USB_PHY_CLK_SEL_XTAL	0
+#define USB_PHY_CLK_SEL_XTAL_DIV_2	1
+#define USB_PHY_CLK_SEL_DDR_PLL	2
+#define USB_PHY_CLK_SEL_MPLL_0	3
+#define USB_PHY_CLK_SEL_MPLL_1	4
+#define USB_PHY_CLK_SEL_MPLL_2	5
+#define USB_PHY_CLK_SEL_FCLK_DIV_2	6
+#define USB_PHY_CLK_SEL_FCLK_DIV_3	7
+
+#define USB_BC_MODE_DISCONNECT	0	/* Disconnected */
+#define USB_BC_MODE_SDP		1	/* PC */
+#define USB_BC_MODE_DCP		2	/* Charger */
+#define USB_BC_MODE_CDP		3	/* PC + Charger */
+
+int clk_enable_usb(struct clk *clk);
+int clk_disable_usb(struct clk *clk);
+#endif
diff --git a/arch/arm/mach-meson6tvd/usbclock.c b/arch/arm/mach-meson6tvd/usbclock.c
index 3f95066bd211..a933b878f899 100755
--- a/arch/arm/mach-meson6tvd/usbclock.c
+++ b/arch/arm/mach-meson6tvd/usbclock.c
@@ -1,16 +1,16 @@
 /*
  *
- * arch/arm/mach-meson6tv/usbclock.c
+ * arch/arm/mach-meson6/usbclock.c
  *
- *  Copyright (C) 2011,2012 AMLOGIC, INC.
+ *  Copyright (C) 2013 AMLOGIC, INC.
  *
- *	by Victor Wan 2012.11.16 @Shanghai, China
- *	by Victor Wan 2012.2.14 @Santa Clara, CA
+ *	by Victor Wan 2013.3 @Shanghai
  *
  * License terms: GNU General Public License (GPL) version 2
  * Platform machine definition.
  */
 #include <linux/kernel.h>
+#include <linux/module.h>
 #include <linux/init.h>
 #include <linux/mm.h>
 #include <linux/sched.h>
@@ -22,92 +22,140 @@
 #include <asm/mach-types.h>
 #include <asm/mach/arch.h>
 #include <asm/delay.h>
-#include <plat/platform.h>
 #include <plat/lm.h>
-#include <plat/regops.h>
-#include <mach/hardware.h>
 #include <mach/memory.h>
 #include <mach/clock.h>
 #include <mach/am_regs.h>
 #include <mach/usbclock.h>
-
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
+#include <mach/mod_gate.h>
+#endif
 /*
  * M chip USB clock setting
  */
 
 /*
  * Clock source name index must sync with chip's spec
- * M1/M2/M3/M6/M6TV are different!
- * This is only for M6TV
+ * M1/M2/M3/M6 are different!
+ * This is only for M6
  */
 static const char * clock_src_name[] = {
-	"XTAL input",
-	"XTAL input divided by 2",
-	"FCLK / 2",
-	"FCLK / 5"
+    "XTAL input",
+    "XTAL input divided by 2",
+    "DDR PLL",
+    "MPLL OUT0"
+    "MPLL OUT1",
+    "MPLL OUT2",
+    "FCLK / 2",
+    "FCLK / 3"
 };
-
-int set_usb_phy_clk(struct lm_device * plmdev,int is_enable)
+static int init_count;
+int clk_enable_usb(struct clk *clk)
 {
 	int port_idx;
-	usb_peri_reg_t * peri;
+	char * clk_name;
+	usb_peri_reg_t * peri_a,* peri_b,*peri;
 	usb_config_data_t config;
 	usb_ctrl_data_t control;
 	int clk_sel,clk_div,clk_src;
 	int time_dly = 500; //usec
 
-	if(!plmdev)
+	if(!clk)
 		return -1;
 
-	port_idx = plmdev->param.usb.port_idx;
-	if(port_idx < 0 || port_idx > 3)
+	if(!init_count)
+	{
+		init_count++;
+		aml_set_reg32_bits(P_RESET1_REGISTER, 1, 2, 1);
+		//for(i = 0; i < 1000; i++)
+		//	udelay(time_dly);
+	}
+
+	clk_name = (char*)clk->priv;
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
+	switch_mod_gate_by_name(clk_name, 1);
+#endif
+	peri_a = (usb_peri_reg_t *)P_USB_ADDR0;
+	peri_b = (usb_peri_reg_t *)P_USB_ADDR8;
+
+	if(!strcmp(clk_name,"usb0")){
+		peri = peri_a;
+		port_idx = USB_PORT_IDX_A;
+	}else if(!strcmp(clk_name,"usb1")){
+		peri = peri_b;
+		port_idx = USB_PORT_IDX_B;
+	}else{
+		printk(KERN_ERR "bad usb clk name: %s\n",clk_name);
 		return -1;
+	}
 
-	peri = (usb_peri_reg_t *)plmdev->param.usb.phy_tune_reg;
 
-	printk(KERN_NOTICE"USB (%d) peri reg base: %x\n",port_idx,(uint32_t)peri);
-	if(is_enable){
+		clk_sel = USB_PHY_CLK_SEL_XTAL;
+		clk_div = 1;
+		clk_src = 24000000;
 
-		clk_sel = plmdev->clock.sel;
-		clk_div = plmdev->clock.div;
-		clk_src = plmdev->clock.src;
+	config.d32 = peri->config;
+	config.b.clk_sel = clk_sel;
+	config.b.clk_div = clk_div;
+  	config.b.clk_en = 1;
+	peri->config = config.d32;
 
-		config.d32 = peri->config;
-		config.b.clk_sel = clk_sel;
-		config.b.clk_div = clk_div;
-		config.b.clk_en = 1;
-		peri->config = config.d32;
 
-		printk(KERN_NOTICE"USB (%d) use clock source: %s\n",port_idx,clock_src_name[clk_sel]);
+	printk(KERN_NOTICE"USB (%d) use clock source: %s\n",port_idx,clock_src_name[clk_sel]);
 
-		control.d32 = peri->ctrl;
-		control.b.fsel = 2;	/* PHY default is 24M (5), change to 12M (2) */
-		control.b.por = 1;
-		peri->ctrl = control.d32;
-		udelay(time_dly);
-		control.b.por = 0;
-		peri->ctrl = control.d32;
-		udelay(time_dly);
+	control.d32 = peri->ctrl;
+	control.b.fsel = 2;	/* PHY default is 24M (5), change to 12M (2) */
+	control.b.por = 1;
+	peri->ctrl = control.d32;
+	udelay(time_dly);
+	control.b.por = 0;
+	peri->ctrl = control.d32;
+	udelay(time_dly);
 
-		/* read back clock detected flag*/
-		control.d32 = peri->ctrl;
-		if(!control.b.clk_detected){
-			printk(KERN_ERR"USB (%d) PHY Clock not detected!\n",port_idx);
-			return -1;
-		}
-	}else{
 
-		config.d32 = peri->config;
-		config.b.clk_en = 0;
-		peri->config = config.d32;
-		control.d32 = peri->ctrl;
-		control.b.por = 1;
-		peri->ctrl = control.d32;
+		/* read back clock detected flag*/
+	control.d32 = peri->ctrl;
+	if(!control.b.clk_detected){
+	    printk(KERN_ERR"USB (%d) PHY Clock not detected!\n",0);
 	}
-	dmb();
 
+
+	dmb();
 	return 0;
 }
+EXPORT_SYMBOL(clk_enable_usb);
+
+int clk_disable_usb(struct clk *clk)
+{
+	char * clk_name;
+	usb_peri_reg_t * peri_a,* peri_b,*peri;
+
+	if(!clk)
+		return -1;
+
+	clk_name = (char*)clk->priv;
+	peri_a = (usb_peri_reg_t *)P_USB_ADDR0;
+	peri_b = (usb_peri_reg_t *)P_USB_ADDR8;
 
-EXPORT_SYMBOL(set_usb_phy_clk);
+	if(!strcmp(clk_name,"usb0"))
+		peri = peri_a;
+	else if(!strcmp(clk_name,"usb1"))
+		peri = peri_b;
+	else{
+		printk(KERN_ERR "bad usb clk name: %s\n",clk_name);
+		return -1;
+	}
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
+	switch_mod_gate_by_name(clk_name, 0);
+#endif
+	//if(init_count){
+	//	init_count--;
+		//uart.d32 = peri->dbg_uart;
+		//uart.b.set_iddq = 1;
+		//peri->dbg_uart = uart.d32;
+	//}
+	dmb();
+	return 0;
+}
+EXPORT_SYMBOL(clk_disable_usb);
 
diff --git a/drivers/amlogic/usb/dwc_otg/Makefile b/drivers/amlogic/usb/dwc_otg/Makefile
index afc6290fd9ae..51ef3ffc8e2b 100755
--- a/drivers/amlogic/usb/dwc_otg/Makefile
+++ b/drivers/amlogic/usb/dwc_otg/Makefile
@@ -2,7 +2,7 @@
 #dwc_otg_dir-$(CONFIG_ARCH_MESON2) := 220/
 #dwc_otg_dir-$(CONFIG_ARCH_MESON3) := 220/
 dwc_otg_dir-$(CONFIG_ARCH_MESON6) := 310/
-dwc_otg_dir-$(CONFIG_ARCH_MESON6TV) := 294/
+dwc_otg_dir-$(CONFIG_ARCH_MESON6TVD) := 310/
 dwc_otg_dir-$(CONFIG_ARCH_MESON8) := 310/
 
 obj-$(CONFIG_USB_DWC_OTG_HCD)	+= $(dwc_otg_dir-y)
-- 
2.19.0

