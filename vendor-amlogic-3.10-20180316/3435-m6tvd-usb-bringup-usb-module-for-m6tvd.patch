From 2d99176f84afd7db4e21c18784097868dbf12be6 Mon Sep 17 00:00:00 2001
From: "qi.duan" <qi.duan@amlogic.com>
Date: Wed, 8 Jan 2014 16:51:34 +0800
Subject: [PATCH 3435/5965] m6tvd:usb: bringup usb module for m6tvd

usb c ok
---
 arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd | 24 ++++++++++-----------
 arch/arm/configs/meson6tvd_defconfig        |  3 +++
 arch/arm/mach-meson6tvd/clock.c             |  5 +++++
 arch/arm/mach-meson6tvd/usbclock.c          | 10 +++++++--
 4 files changed, 28 insertions(+), 14 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd b/arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd
index 6e802160df47..feba0af19360 100755
--- a/arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6tvd_ref.dtd
@@ -237,18 +237,18 @@
 			status = "okay";
 		};
 
-		//usb_c{
-		//	lm-compatible = "amlogic,usb";
-		//	lm-periph-id = <2>; /** lm name */
-		//	clock-src = "usb2"; /** clock src */
-		//	port-id = <2>;	 /** ref to mach/usb.h */
-		//	port-type = <1>;	/** 0: otg, 1: host, 2: slave */
-		//	port-speed = <0>; /** 0: default, 1: high, 2: full */
-		//	port-config = <0>; /** 0: default */
-		//	port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
-		//	port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
-		//	status = "okay";
-		//};
+		usb_c {
+			lm-compatible = "amlogic,usb";
+			lm-periph-id = <2>; /** lm name */
+			clock-src = "usb2"; /** clock src */
+			port-id = <2>;	 /** ref to mach/usb.h */
+			port-type = <1>;	/** 0: otg, 1: host, 2: slave */
+			port-speed = <0>; /** 0: default, 1: high, 2: full */
+			port-config = <0>; /** 0: default */
+			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
+			port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
+			status = "okay";
+			};
 	};
 
 
diff --git a/arch/arm/configs/meson6tvd_defconfig b/arch/arm/configs/meson6tvd_defconfig
index 1fc5a638092e..557b6c1816c9 100755
--- a/arch/arm/configs/meson6tvd_defconfig
+++ b/arch/arm/configs/meson6tvd_defconfig
@@ -86,7 +86,10 @@ CONFIG_SND_AML_M6_SOC=y
 CONFIG_SND_AML_M_DUMMY_CODEC=y
 # CONFIG_HID_GENERIC is not set
 CONFIG_USB=y
+CONFIG_USB_ACM=y
 CONFIG_USB_STORAGE=y
+CONFIG_USB_SERIAL=y
+CONFIG_USB_GADGET=y
 CONFIG_SWITCH=y
 CONFIG_RTC_CLASS=y
 CONFIG_UIO=y
diff --git a/arch/arm/mach-meson6tvd/clock.c b/arch/arm/mach-meson6tvd/clock.c
index 6b891941e63e..52745363c367 100755
--- a/arch/arm/mach-meson6tvd/clock.c
+++ b/arch/arm/mach-meson6tvd/clock.c
@@ -2838,6 +2838,11 @@ static int __init meson_clock_init(void)
   	meson_clk_register(&clk_usb1,&clk_xtal);
     clk_usb1.clk_gate_reg_adr = P_USB_ADDR8;
     clk_usb1.clk_gate_reg_mask = (1<<0);
+
+    CLK_DEFINE(usb2,xtal,31,NULL,clk_msr_get,clk_enable_usb,clk_disable_usb,"usb2");
+    meson_clk_register(&clk_usb2,&clk_xtal);
+    clk_usb2.clk_gate_reg_adr = P_USB_ADDR16;
+    clk_usb2.clk_gate_reg_mask = (1<<0);
     #endif
 
 	{
diff --git a/arch/arm/mach-meson6tvd/usbclock.c b/arch/arm/mach-meson6tvd/usbclock.c
index a933b878f899..b8e89f733bfa 100755
--- a/arch/arm/mach-meson6tvd/usbclock.c
+++ b/arch/arm/mach-meson6tvd/usbclock.c
@@ -54,7 +54,7 @@ int clk_enable_usb(struct clk *clk)
 {
 	int port_idx;
 	char * clk_name;
-	usb_peri_reg_t * peri_a,* peri_b,*peri;
+	usb_peri_reg_t * peri_a,* peri_b,* peri_c,*peri;
 	usb_config_data_t config;
 	usb_ctrl_data_t control;
 	int clk_sel,clk_div,clk_src;
@@ -77,6 +77,7 @@ int clk_enable_usb(struct clk *clk)
 #endif
 	peri_a = (usb_peri_reg_t *)P_USB_ADDR0;
 	peri_b = (usb_peri_reg_t *)P_USB_ADDR8;
+        peri_c = (usb_peri_reg_t *)P_USB_ADDR16;
 
 	if(!strcmp(clk_name,"usb0")){
 		peri = peri_a;
@@ -84,6 +85,9 @@ int clk_enable_usb(struct clk *clk)
 	}else if(!strcmp(clk_name,"usb1")){
 		peri = peri_b;
 		port_idx = USB_PORT_IDX_B;
+        }else if(!strcmp(clk_name,"usb2")){
+		peri = peri_c;
+		port_idx = USB_PORT_IDX_C;
 	}else{
 		printk(KERN_ERR "bad usb clk name: %s\n",clk_name);
 		return -1;
@@ -128,7 +132,7 @@ EXPORT_SYMBOL(clk_enable_usb);
 int clk_disable_usb(struct clk *clk)
 {
 	char * clk_name;
-	usb_peri_reg_t * peri_a,* peri_b,*peri;
+	usb_peri_reg_t * peri_a,* peri_b,* peri_c,*peri;
 
 	if(!clk)
 		return -1;
@@ -141,6 +145,8 @@ int clk_disable_usb(struct clk *clk)
 		peri = peri_a;
 	else if(!strcmp(clk_name,"usb1"))
 		peri = peri_b;
+        else if(!strcmp(clk_name,"usb2"))
+		peri = peri_c;
 	else{
 		printk(KERN_ERR "bad usb clk name: %s\n",clk_name);
 		return -1;
-- 
2.19.0

