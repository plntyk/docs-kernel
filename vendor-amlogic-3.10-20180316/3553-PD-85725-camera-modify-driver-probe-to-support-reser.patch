From 7c94b5c71b47ead456c2cb9e2c749b3999d3fb0e Mon Sep 17 00:00:00 2001
From: "shi.liu" <shi.liu@amlogic.com>
Date: Tue, 25 Feb 2014 15:39:55 +0800
Subject: [PATCH 3553/5965] PD #85725 camera: modify driver probe to support
 reserved memory

---
 drivers/amlogic/camera/common/vm.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/amlogic/camera/common/vm.c b/drivers/amlogic/camera/common/vm.c
index db4f29b9f94b..948ed54fc515 100755
--- a/drivers/amlogic/camera/common/vm.c
+++ b/drivers/amlogic/camera/common/vm.c
@@ -51,6 +51,7 @@
 
 #include <linux/sizes.h>
 #include <linux/dma-mapping.h>
+#include <linux/of_fdt.h>
 #include <linux/dma-contiguous.h>
 
 /*class property info.*/
@@ -1915,7 +1916,9 @@ static int vm_driver_probe(struct platform_device *pdev)
 	char* buf_start;
 	unsigned int buf_size;
 	struct resource *mem;
+    int idx;
 
+#if 0
 	if (!(mem = platform_get_resource(pdev, IORESOURCE_MEM, 0)))
 	{
 		buf_start = 0;
@@ -1924,7 +1927,20 @@ static int vm_driver_probe(struct platform_device *pdev)
 		buf_start = (char *)mem->start;
 		buf_size = mem->end - mem->start + 1;
 	}
-	set_vm_buf_info(mem->start,buf_size);
+#else
+     idx = find_reserve_block(pdev->dev.of_node->name,0);
+     if(idx < 0){
+         buf_start = 0;
+         buf_size = 0;
+         amlog_level(LOG_LEVEL_HIGH, "vm memory resource undefined.\n");
+     }
+     else
+     {
+         buf_start = (char *)get_reserve_block_addr(idx);
+         buf_size = (unsigned int)get_reserve_block_size(idx);
+     }
+#endif 
+	set_vm_buf_info(buf_start,buf_size);
 #endif
 
 
-- 
2.19.0

