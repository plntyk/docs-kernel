From aba080ec433089d166cb1e9d5710bd737a302fc1 Mon Sep 17 00:00:00 2001
From: timyao <tim.yao@amlogic.com>
Date: Mon, 17 Mar 2014 19:52:42 -0700
Subject: [PATCH 3770/5965] PD #89049. Add m6TVD 4k2k decoder.

---
 drivers/amlogic/amports/Kconfig               |   2 +-
 drivers/amlogic/amports/amstream.c            |  68 +++--
 drivers/amlogic/amports/amvdec.c              |  22 +-
 drivers/amlogic/amports/amvdec.h              |   6 +-
 drivers/amlogic/amports/encoder.c             |  26 +-
 drivers/amlogic/amports/jpegenc.c             |   7 +-
 .../amports/m6tvd/ucode/encoder/Makefile      |   2 +
 .../amports/m6tvd/ucode/encoder/encoder_mc.c  |  30 ++
 .../m6tvd/ucode/encoder/full_encoder_linux.h  | 178 +++++++++++
 .../m6tvd/ucode/encoder/half_encoder_linux.h  | 146 +++++++++
 .../amports/m6tvd/ucode/h264_4k2k/Makefile    |   2 +
 .../m6tvd/ucode/h264_4k2k/h264c_linux.h       |  60 ++++
 .../m6tvd/ucode/h264_4k2k/h264header_linux.h  | 126 ++++++++
 .../m6tvd/ucode/h264_4k2k/h264mmc_linux.h     | 208 +++++++++++++
 .../m6tvd/ucode/h264_4k2k/h264slice_linux.h   | 269 +++++++++++++++++
 .../m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.c     |  38 +++
 .../m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.h     |  30 ++
 .../amports/m8/ucode/h264_4k2k/h264c_linux.h  |   2 +-
 .../m8/ucode/h264_4k2k/h264mmc_linux.h        | 276 +++++++++---------
 drivers/amlogic/amports/streambuf.c           |   4 +-
 drivers/amlogic/amports/streambuf.h           |   2 +-
 drivers/amlogic/amports/streambuf_reg.h       |   2 +-
 drivers/amlogic/amports/vdec.c                | 170 ++++++++++-
 drivers/amlogic/amports/vdec.h                |   5 +-
 drivers/amlogic/amports/vh264_4k2k.c          | 133 +++++++--
 25 files changed, 1571 insertions(+), 243 deletions(-)
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/encoder/Makefile
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/encoder/encoder_mc.c
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/encoder/full_encoder_linux.h
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/encoder/half_encoder_linux.h
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/Makefile
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264c_linux.h
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264header_linux.h
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264mmc_linux.h
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264slice_linux.h
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.c
 create mode 100755 drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.h

diff --git a/drivers/amlogic/amports/Kconfig b/drivers/amlogic/amports/Kconfig
index 57addb8361a0..9fcc410620ce 100755
--- a/drivers/amlogic/amports/Kconfig
+++ b/drivers/amlogic/amports/Kconfig
@@ -86,7 +86,7 @@ config AM_VDEC_H264MVC
 
 config AM_VDEC_H264_4K2K
         tristate "Amlogic H264_4K2K Video Decoder"
-	depends on ARCH_MESON8
+	depends on ARCH_MESON8 || ARCH_MESON6TVD
         default y
 
         select AM_PTSSERVER
diff --git a/drivers/amlogic/amports/amstream.c b/drivers/amlogic/amports/amstream.c
index f1a428687e35..aaf16ff6671d 100755
--- a/drivers/amlogic/amports/amstream.c
+++ b/drivers/amlogic/amports/amstream.c
@@ -585,17 +585,20 @@ static  int amstream_port_init(stream_port_t *port)
             goto error1;
         }
     }
+
     if ((port->type & PORT_TYPE_VIDEO) && (port->flag & PORT_FLAG_VFORMAT)) {
-		pubuf->buf_size = 0;
-		pubuf->buf_start = 0;
-		pubuf->buf_wp = 0;
-		pubuf->buf_rp = 0;
+        pubuf->buf_size = 0;
+        pubuf->buf_start = 0;
+        pubuf->buf_wp = 0;
+        pubuf->buf_rp = 0;
+
         r = video_port_init(port, pvbuf);
         if (r < 0) {
             printk("video_port_init  failed\n");
             goto error2;
         }
     }
+
     if ((port->type & PORT_TYPE_SUB) && (port->flag & PORT_FLAG_SID)) {
         r = sub_port_init(port, psbuf);
         if (r < 0) {
@@ -627,7 +630,7 @@ static  int amstream_port_init(stream_port_t *port)
                      (port->flag & PORT_FLAG_AID) ? port->aid : 0xffff);
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
     if ((port->type & PORT_TYPE_VIDEO) && (port->vformat == VFORMAT_H264_4K2K)) {
         stbuf_vdec2_init(pvbuf);
     }
@@ -988,15 +991,6 @@ static int amstream_open(struct inode *inode, struct file *file)
     stream_port_t *s;
     stream_port_t *this = &ports[iminor(inode)];
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
-    switch_mod_gate_by_name("demux", 1);
-    switch_mod_gate_by_name("audio", 1);
-#elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
-    switch_mod_gate_by_name("demux", 1);
-    switch_mod_gate_by_name("audio", 1);
-    switch_mod_gate_by_name("vdec", 1);
-#endif
-
     if (iminor(inode) >= MAX_AMSTREAM_PORT_NUM) {
         return (-ENODEV);
     }
@@ -1013,18 +1007,27 @@ static int amstream_open(struct inode *inode, struct file *file)
         }
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
+    switch_mod_gate_by_name("demux", 1);
+
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
     CLK_GATE_ON(HIU_PARSER_TOP);
+#endif
+
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     CLK_GATE_ON(VPU_INTR);
+#endif
 
     if (this->type & PORT_TYPE_VIDEO) {
-        CLK_GATE_ON(DOS);
+        switch_mod_gate_by_name("vdec", 1);
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
         vdec_poweron(VDEC_1);
+#endif
         memset(&amstream_dec_info, 0, sizeof(amstream_dec_info));
     }
-#else
-    if (this->type & PORT_TYPE_VIDEO) {
-        memset(&amstream_dec_info, 0, sizeof(amstream_dec_info));
+
+    if (this->type & PORT_TYPE_AUDIO) {
+        switch_mod_gate_by_name("audio", 1);
     }
 #endif
 
@@ -1068,21 +1071,26 @@ static int amstream_release(struct inode *inode, struct file *file)
     }
 #endif
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
-    switch_mod_gate_by_name("audio", 0);
-    switch_mod_gate_by_name("demux", 0);
-
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
     if (this->type & PORT_TYPE_VIDEO) {
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
         vdec_poweroff(VDEC_1);
-        CLK_GATE_OFF(DOS);
+#endif
+        switch_mod_gate_by_name("vdec", 0);
     }
 
-    CLK_GATE_OFF(HIU_PARSER_TOP);
+    if (this->type & PORT_TYPE_AUDIO) {
+        switch_mod_gate_by_name("audio", 0);
+    }
+
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     CLK_GATE_OFF(VPU_INTR);
+#endif
+
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
+    CLK_GATE_OFF(HIU_PARSER_TOP);
+#endif
 
-#elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
-    switch_mod_gate_by_name("audio", 0);
-    switch_mod_gate_by_name("vdec", 0);
     switch_mod_gate_by_name("demux", 0);
 #endif 
 
@@ -1832,15 +1840,13 @@ static int  amstream_probe(struct platform_device *pdev)
         printk("amstream class create fail.\n");
         return r;
     }
+
     r = astream_dev_register();
     if (r) {
         return r;
     }
 
-
-
     r = register_chrdev(AMSTREAM_MAJOR, "amstream", &amstream_fops);
-
     if (r < 0) {
         printk("Can't allocate major for amstreaming device\n");
 
diff --git a/drivers/amlogic/amports/amvdec.c b/drivers/amlogic/amports/amvdec.c
index d4d0658d43f7..4b6739507409 100755
--- a/drivers/amlogic/amports/amvdec.c
+++ b/drivers/amlogic/amports/amvdec.c
@@ -71,7 +71,7 @@ static void amvdec_pg_enable(bool enable)
         AMVDEC_CLK_GATE_ON(IQIDCT_CLK);
         //AMVDEC_CLK_GATE_ON(VLD_CLK);
         AMVDEC_CLK_GATE_ON(AMRISC);
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
         WRITE_VREG(GCLK_EN, 0x3ff);
 #endif
     } else {
@@ -133,7 +133,7 @@ static void amvdec_pg_enable(bool enable)
     }
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 static void amvdec2_pg_enable(bool enable)
 {
     ulong timeout;
@@ -249,7 +249,7 @@ s32 amvdec_loadmc(const u32 *p)
     return ret;
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 s32 amvdec2_loadmc(const u32 *p)
 {
     ulong timeout;
@@ -304,7 +304,7 @@ s32 amvdec2_loadmc(const u32 *p)
 }
 #endif
 
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 void amhcodec_loadmc(const u32 *p)
 {
 #ifdef AMVDEC_USE_STATIC_MEMORY
@@ -372,7 +372,7 @@ void amvdec_start(void)
     WRITE_VREG(MPSR, 0x0001);
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 void amvdec2_start(void)
 {
 #ifdef CONFIG_WAKELOCK
@@ -394,7 +394,7 @@ void amvdec2_start(void)
 }
 #endif
 
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 void amhcodec_start(void)
 {
     WRITE_VREG(HCODEC_MPSR, 0x0001);
@@ -440,7 +440,7 @@ void amvdec_stop(void)
 #endif
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 void amvdec2_stop(void)
 {
     ulong timeout = jiffies + HZ;
@@ -464,7 +464,7 @@ void amvdec2_stop(void)
 }
 #endif
 
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 void amhcodec_stop(void)
 {
     WRITE_VREG(HCODEC_MPSR, 0);
@@ -481,7 +481,7 @@ void amvdec_disable(void)
     amvdec_pg_enable(false);
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 void amvdec2_enable(void)
 {
     amvdec2_pg_enable(true);
@@ -498,7 +498,7 @@ int amvdec_suspend(struct platform_device *dev, pm_message_t event)
 {
     amvdec_pg_enable(false);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
     amvdec2_pg_enable(false);
 #endif
 
@@ -509,7 +509,7 @@ int amvdec_resume(struct platform_device *dev)
 {
     amvdec_pg_enable(true);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD 
     amvdec2_pg_enable(true);
 #endif
 
diff --git a/drivers/amlogic/amports/amvdec.h b/drivers/amlogic/amports/amvdec.h
index 39ff07322732..b56d3b7ec2fe 100755
--- a/drivers/amlogic/amports/amvdec.h
+++ b/drivers/amlogic/amports/amvdec.h
@@ -22,6 +22,8 @@
 #ifndef AMVDEC_H
 #define AMVDEC_H
 
+#include <mach/cpu.h>
+
 #define UCODE_ALIGN         8
 #define UCODE_ALIGN_MASK    7UL
 
@@ -31,7 +33,7 @@ extern void amvdec_stop(void);
 extern void amvdec_enable(void);
 extern void amvdec_disable(void);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 extern  s32 amvdec2_loadmc(const u32 *p);
 extern void amvdec2_start(void);
 extern void amvdec2_stop(void);
@@ -39,7 +41,7 @@ extern void amvdec2_enable(void);
 extern void amvdec2_disable(void);
 #endif
 
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 extern void amhcodec_loadmc(const u32 *p);
 extern void amhcodec_start(void);
 extern void amhcodec_stop(void);
diff --git a/drivers/amlogic/amports/encoder.c b/drivers/amlogic/amports/encoder.c
index 9d01c0141bb5..00fc4c31d9d7 100755
--- a/drivers/amlogic/amports/encoder.c
+++ b/drivers/amlogic/amports/encoder.c
@@ -19,6 +19,7 @@
 #include <linux/spinlock.h>
 #include <mach/am_regs.h>
 #include <mach/power_gate.h>
+#include <mach/mod_gate.h>
 #include <plat/io.h>
 #include <linux/ctype.h>
 #include <linux/amlogic/amports/ptsserv.h>
@@ -1053,7 +1054,7 @@ s32 amvenc_loadmc(const u32 *p)
     return ret;
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 const u32 fix_mc[] __attribute__ ((aligned (8))) = {
     0x0809c05a, 0x06696000, 0x0c780000, 0x00000000
 };
@@ -1137,11 +1138,13 @@ static s32 avc_poweron(void)
 	data32 = 0;
 	enable_hcoder_ddr_access();
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
-	CLK_GATE_ON(DOS);
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
+	//CLK_GATE_ON(DOS);
+	switch_mod_gate_by_name("vdec", 1);
 
 	spin_lock_irqsave(&lock, flags);
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	data32 = READ_AOREG(AO_RTI_PWR_CNTL_REG0);
 	data32 = data32 & (~(0x18));
 	WRITE_AOREG(AO_RTI_PWR_CNTL_REG0, data32);
@@ -1151,6 +1154,7 @@ static s32 avc_poweron(void)
 	data32 = data32 & (~0x3); 
 	WRITE_AOREG(AO_RTI_GEN_PWR_SLEEP0, data32);
 	udelay(10);
+#endif
 #endif
 
 	WRITE_VREG(DOS_SW_RESET1, 0xffffffff);
@@ -1158,6 +1162,7 @@ static s32 avc_poweron(void)
 
 	// Enable Dos internal clock gating
 	hvdec_clock_enable();
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	//Powerup HCODEC memories
 	WRITE_VREG(DOS_MEM_PD_HCODEC, 0x0);
@@ -1167,7 +1172,7 @@ static s32 avc_poweron(void)
 	data32 = data32 & (~(0x30));
 	WRITE_AOREG(AO_RTI_GEN_PWR_ISO0, data32);
 	udelay(10);
-
+#endif
 	// Disable auto-clock gate
 	data32 = READ_VREG(DOS_GEN_CTRL0);
 	data32 = data32 | 0x1;
@@ -1186,24 +1191,29 @@ static s32 avc_poweron(void)
 
 static s32 avc_poweroff(void)
 {
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 	unsigned long flags;
 
 	spin_lock_irqsave(&lock, flags);
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	// enable HCODEC isolation
 	WRITE_AOREG(AO_RTI_GEN_PWR_ISO0, READ_AOREG(AO_RTI_GEN_PWR_ISO0) | 0x30);
 	// power off HCODEC memories
 	WRITE_VREG(DOS_MEM_PD_HCODEC, 0xffffffffUL);
+#endif
 	// disable HCODEC clock
 	hvdec_clock_disable();
+
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	// HCODEC power off
 	WRITE_AOREG(AO_RTI_GEN_PWR_SLEEP0, READ_AOREG(AO_RTI_GEN_PWR_SLEEP0) | 0x3);
-
+#endif
 	spin_unlock_irqrestore(&lock, flags);
 
 	// release DOS clk81 clock gating
-	CLK_GATE_OFF(DOS);
+	//CLK_GATE_OFF(DOS);
+	switch_mod_gate_by_name("vdec", 0);
 #else
 	hvdec_clock_disable();
 #endif
@@ -1311,8 +1321,10 @@ void amvenc_avc_stop(void)
 	debug_level(1,"amvenc_avc_stop\n");
 }
 
+#ifdef CONFIG_CMA
 static struct platform_device *this_pdev;
 static struct page *venc_pages;
+#endif
 
 static int amvenc_avc_open(struct inode *inode, struct file *file)
 {
diff --git a/drivers/amlogic/amports/jpegenc.c b/drivers/amlogic/amports/jpegenc.c
index 34cbadd29b5d..014f555c790b 100755
--- a/drivers/amlogic/amports/jpegenc.c
+++ b/drivers/amlogic/amports/jpegenc.c
@@ -19,6 +19,7 @@
 #include <linux/spinlock.h>
 #include <mach/am_regs.h>
 #include <mach/power_gate.h>
+#include <mach/mod_gate.h>
 #include <plat/io.h>
 #include <linux/ctype.h>
 #include <linux/amlogic/amports/ptsserv.h>
@@ -1348,7 +1349,8 @@ static s32 jpegenc_poweron(void)
     enable_hcoder_ddr_access();
 
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
-    CLK_GATE_ON(DOS);
+    //CLK_GATE_ON(DOS);
+    switch_mod_gate_by_name("vdec", 1);
 
     spin_lock_irqsave(&lock, flags);
 
@@ -1412,7 +1414,8 @@ static s32 jpegenc_poweroff(void)
     spin_unlock_irqrestore(&lock, flags);
 
     // release DOS clk81 clock gating
-    CLK_GATE_OFF(DOS);
+    //CLK_GATE_OFF(DOS);
+    switch_mod_gate_by_name("vdec", 0);
 #else
     jpegenc_clock_disable();
 #endif
diff --git a/drivers/amlogic/amports/m6tvd/ucode/encoder/Makefile b/drivers/amlogic/amports/m6tvd/ucode/encoder/Makefile
new file mode 100755
index 000000000000..fb2033b368dd
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/encoder/Makefile
@@ -0,0 +1,2 @@
+
+obj-y				+= encoder_mc.o 
diff --git a/drivers/amlogic/amports/m6tvd/ucode/encoder/encoder_mc.c b/drivers/amlogic/amports/m6tvd/ucode/encoder/encoder_mc.c
new file mode 100755
index 000000000000..c7271abae469
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/encoder/encoder_mc.c
@@ -0,0 +1,30 @@
+/*
+ * AMLOGIC Audio/Video streaming port driver.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the named License,
+ * or any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
+ *
+ * Author:  Brian Zhu <brian.zhu@amlogic.com>
+ *
+ */
+
+#include <linux/types.h>
+
+#define MicroCode full_encoder_mc
+#include "full_encoder_linux.h"
+
+#undef MicroCode
+#define MicroCode half_encoder_mc
+#include "half_encoder_linux.h"
+
diff --git a/drivers/amlogic/amports/m6tvd/ucode/encoder/full_encoder_linux.h b/drivers/amlogic/amports/m6tvd/ucode/encoder/full_encoder_linux.h
new file mode 100755
index 000000000000..dfb00debe447
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/encoder/full_encoder_linux.h
@@ -0,0 +1,178 @@
+const u32 MicroCode[] __attribute__((aligned(8))) = {
+	0x6810001,0x6800000,0xd000001,0x7400040,0xc0009c0,0x0000000,0xc013ec0,0x0000000,
+	0xc000e80,0x0000000,0x6bffc40,0x7c00000,0x6030400,0x0400000,0xc780ec0,0x0000000,
+	0xc780000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0xc7928c0,0x0000000,0xc78cc40,0x64d3008,0xc780900,0x0000000,0xc792900,
+	0x0000000,0xcc00000,0x0400000,0x80d1a00,0x80ac300,0x80ac400,0xcc00000,0x0000000,
+	0x64ac808,0x7c00108,0x64ac908,0x7c00148,0x64ac608,0x7c00188,0x64ac508,0x7c001c8,
+	0x64ac708,0x7c00208,0x64aca08,0x7c00388,0x64acb08,0x7c00048,0x64ace08,0x7c003c8,
+	0xcc00000,0x0000000,0xcc00000,0x0000000,0x80d2001,0x64d2008,0xbefc048,0xcc00000,
+	0x0000000,0x6432421,0xaa0c021,0x8032400,0x6699321,0x64ac021,0xaaec021,0xaa34061,
+	0xa60c0a1,0xc7816c0,0x0000000,0xa60c121,0xc784dc0,0x0000000,0xa6100e1,0x0000000,
+	0xc782980,0x0000000,0xc7ffbc0,0x0000000,0xc07f500,0x0000000,0x6bc0008,0x60d1f08,
+	0x64d1e08,0x9c087c8,0x60d1e08,0x6800008,0x6c00408,0x60d1f08,0x6800048,0x6c00408,
+	0x60d1f08,0x6a19c08,0x60d1f08,0x64d1e08,0x98087c8,0x60d1e08,0x6a10808,0x60d1f08,
+	0x6a00008,0x60d1f08,0x6a0a008,0x60d1f08,0xc07f400,0x80d2100,0x7800148,0x4404208,
+	0xc07f300,0x60d2108,0xc07f280,0x80d2100,0x7800108,0x4404208,0xc07f180,0x60d2108,
+	0xc07f100,0x80d2101,0x80d1f20,0x64d3109,0x9010209,0x400f208,0x5804208,0x4401208,
+	0x7c00308,0xc07eec0,0x60d2108,0x9210209,0x400f208,0x5804208,0x4401208,0x7c00348,
+	0xc07ed00,0x60d2108,0x80d1f30,0x80d1f30,0x64d3108,0x9210208,0x6810e09,0xa803248,
+	0xc7802c0,0x80d1f20,0x80d1f30,0xc07ea40,0x80d2100,0xc07e9c0,0x80d2100,0xc07e940,
+	0x80d2100,0xc07e8c0,0x80d2104,0x80d1f20,0x80d1f30,0x6bc0008,0x60d1f08,0x0000000,
+	0x80ac007,0x8007801,0xc7fe7c0,0x0000000,0xc07e100,0x0000000,0x6bc0008,0x60d1f08,
+	0x64d1e08,0x9c087c8,0x60d1e08,0x6800008,0x6c00408,0x60d1f08,0x6800048,0x6c00408,
+	0x60d1f08,0x6a1a008,0x60d1f08,0x64d1e08,0x98087c8,0x60d1e08,0xc07e180,0x80d2100,
+	0xc07e100,0x80d2100,0x80d1f20,0x80d1f20,0xc07e000,0x80d2100,0xc07df80,0x80d2100,
+	0xc07df00,0x80d2100,0x80d1f20,0x80d1f40,0x7800048,0xc007d40,0x441a208,0xc07dd40,
+	0x60d2108,0xc007c40,0x6800008,0xc07dc40,0x60d2108,0xc07dbc0,0x80d2100,0x80d1f20,
+	0x80d5500,0x80d1f20,0x80d1f20,0x80d1f30,0x6bc0008,0x60d1f08,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x64d1608,0xbefc108,0x0000000,0x6800008,
+	0x6e00008,0x60d1c08,0x80d1d00,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x64d1608,0xbefc108,0x0000000,0x64d1b08,0x9808648,0x60d1b08,0x64d1608,
+	0xbefc108,0x0000000,0x80ac008,0x8007801,0xc7fd340,0x0000000,0xc010400,0x0000000,
+	0x6490b08,0x9c08608,0x9c08648,0x6090b08,0x6401108,0x9c08748,0x9c08788,0x6001108,
+	0x6401008,0x9808008,0x6001008,0x9c08008,0x6001008,0xc010840,0x0000000,0xc00ff40,
+	0x0000000,0xc07c7c0,0x0000000,0x64ac408,0x4001208,0x60ac408,0x64f4908,0x9c08048,
+	0x60f4908,0x6bc0008,0x60d1f08,0x64d1e08,0x9c087c8,0x60d1e08,0x6800008,0x6c00408,
+	0x60d1f08,0x6800048,0x6c00408,0x60d1f08,0x6a19408,0x60d1f08,0x64d1e08,0x98087c8,
+	0x60d1e08,0x64d3308,0x9008248,0x7c00089,0x9108248,0x7c000c9,0x9210208,0xc07c540,
+	0x60d2108,0xc07c4c0,0x80d2107,0x64d3109,0x9010209,0x400f208,0x5804208,0x4401208,
+	0x7c00308,0x9210209,0x400f208,0x5804208,0x4401208,0x7c00348,0x6800008,0x7c00248,
+	0x60f1b08,0x7800309,0x946d209,0x60d3208,0x6940008,0x6c00008,0x2008308,0x60f2008,
+	0x6803908,0x64d3309,0x9008249,0x9508209,0x9808508,0x9808548,0x98087c8,0x60f1f08,
+	0x7800309,0x7800348,0x960f248,0x60f1e09,0xc07bc00,0x80d2100,0x7800148,0x7800189,
+	0x680040a,0x240a20a,0x3409289,0x9605248,0x60d1f09,0x78001c8,0xc07b980,0x60d2108,
+	0x7800108,0x7800209,0x680040a,0x240a20a,0x3409289,0x9605248,0x60d1f09,0x80d1f20,
+	0x80d1f20,0x64f1c08,0x9206208,0x7800049,0xc005580,0x2408248,0xc07b580,0x60d2108,
+	0x80d3d00,0x64acd08,0x60f4208,0xc0055c0,0x0000000,0x680d683,0x6813344,0x80d300f,
+	0x64d0008,0x9808008,0x9808048,0x9808088,0x9c080c8,0x9c08148,0x9c08188,0x9c081c8,
+	0x60d0008,0x64acf08,0x60f4808,0x6800289,0x78003c8,0x9485248,0x60f4009,0x80ac005,
+	0x8007801,0xc7fb000,0x0000000,0xc00eac0,0x0000000,0x64f4008,0x9c08048,0x60f4008,
+	0xc00df80,0x0000000,0x6490b08,0x9c08608,0x9808648,0x6090b08,0x6401108,0x9808748,
+	0x9c08788,0x6001108,0x6401008,0x9808008,0x6001008,0x9c08008,0x6001008,0xc00e3c0,
+	0x0000000,0xc00dac0,0x0000000,0xc07a340,0x0000000,0x64f4308,0x9c08048,0x9c080c8,
+	0x60f4308,0x64f1508,0x9c08508,0x9c084c8,0x9c08748,0x9c08448,0x9c08488,0x9c08348,
+	0x9c08308,0x9808248,0x9808008,0x60f1508,0x80d3400,0x9808488,0x9808448,0x9808348,
+	0x9808308,0x98085c8,0x9808608,0x9808648,0x9c08688,0x98086c8,0x9c08248,0x9c08008,
+	0x60f1508,0x64f4908,0x9c08048,0x9c081c8,0x9808008,0x60f4908,0x78003c9,0x5805249,
+	0x96e1209,0x5801249,0x9761209,0x98087c8,0x9808788,0x9808748,0x9808688,0x9808648,
+	0x9808608,0x9808288,0x9c08248,0x98081c8,0x9808088,0x9808048,0x60f4908,0x4801249,
+	0xaa10049,0x0000000,0xc781640,0x0000000,0x6800c08,0x6800809,0x94e8209,0x6800c09,
+	0x9608209,0x6801009,0x9708209,0x60f5608,0x6800008,0x6800009,0x9508209,0x60f5708,
+	0x680c0c8,0x6c00008,0x60f5808,0x68000c8,0x68000c9,0x9484209,0x68000c9,0x9504209,
+	0x6800049,0x9581209,0x6800009,0x95a1209,0x6800049,0x95c5209,0x60f5908,0x6800388,
+	0x6800489,0x9508209,0x6800149,0x9604209,0x68000c9,0x9684209,0x6800109,0x9704209,
+	0x6800089,0x9704209,0x60f5a08,0x6800008,0x6800009,0x9508209,0x6800809,0x9608209,
+	0x6801409,0x9708209,0x60f5b08,0x6801008,0x6800009,0x9508209,0x6801809,0x9608209,
+	0x6803009,0x9708209,0x60f5c08,0x6800608,0x6801409,0x9508209,0x6800809,0x9608209,
+	0x6801809,0x9708209,0x60f5d08,0x68000c8,0x6801809,0x948c209,0x6800249,0x9607209,
+	0x6800009,0x96e1209,0x6800c09,0x9708209,0x60f5e08,0x68000c8,0x6800009,0x9461209,
+	0x6800049,0x9481209,0x6800009,0x94a2209,0x6803009,0x950c209,0x6801c09,0x968c209,
+	0x60f5f08,0xc7807c0,0x0000000,0x6804008,0x68000c9,0x9586209,0x6800089,0x9646209,
+	0x9808608,0x9808648,0x9808688,0x98086c8,0x9808708,0x9808748,0x9808788,0x98087c8,
+	0x60f5508,0x6800c08,0x6800809,0x94e8209,0x6800c09,0x9608209,0x6801009,0x9708209,
+	0x60f5608,0x6800c08,0x6801009,0x9508209,0x60f5708,0x680c0c8,0x6c0c0c8,0x60f5808,
+	0x64acc09,0x60f4a09,0x64d3109,0x9010209,0x400f208,0x5804208,0x4401208,0x7c00308,
+	0x9210209,0x400f208,0x5804208,0x4401208,0x7c00348,0x7800309,0x7800348,0x958c248,
+	0x6499008,0x9708248,0x60f4f09,0x6bc0008,0x60d1f08,0x64d1e08,0x9c087c8,0x60d1e08,
+	0x6800008,0x6c00408,0x60d1f08,0x6800048,0x6c00408,0x60d1f08,0x6a10408,0x60d1f08,
+	0x64d1e08,0x98087c8,0x60d1e08,0x64d3308,0x9210208,0xc0773c0,0x60d2108,0xc077340,
+	0x80d2105,0x6800048,0x7c00248,0x60f1b08,0x7800309,0x946d209,0x60d3208,0x7800348,
+	0x960f248,0x60f1e09,0xc077080,0x80d2100,0x7800148,0x7800189,0x680040a,0x240a20a,
+	0x3409289,0x9605248,0x60d1f09,0x7800108,0x7800209,0x680040a,0x240a20a,0x3409289,
+	0x9605248,0x60d1f09,0x80d1f20,0x80d1f20,0x80d1f20,0x64f1d08,0x9206208,0x7800049,
+	0xc000a80,0x2408248,0xc076a80,0x60d2108,0x80d3d00,0x80d5300,0x64acd08,0x60f4208,
+	0xc001840,0x0000000,0x6810143,0x6813bc4,0x6800008,0x6c00448,0x60d3008,0x64d0008,
+	0x9c08008,0x9c08048,0x9c08088,0x9c08188,0x9c081c8,0x60d0008,0x9808008,0x9808048,
+	0x9808088,0x98080c8,0x9808148,0x9808188,0x98081c8,0x60d0008,0x6800048,0x7800309,
+	0x948c209,0x60f4b08,0x80ac005,0x8007801,0xc7f6340,0x0000000,0x0800000,0x7800008,
+	0xc7f5a40,0x6030408,0x6800009,0xb005248,0x2409209,0x5401208,0xcc00000,0x4401208,
+	0xcc00000,0x5401209,0x6bfffda,0x6c0001a,0x6800009,0x680001b,0x6c0001b,0x400071b,
+	0x680000b,0x680c00e,0x680100f,0x740039a,0x400138e,0x7400389,0x400138e,0x740039b,
+	0x400138e,0x740038b,0x400138e,0xaee004f,0x44013cf,0x690000e,0x6c0000e,0x200e30e,
+	0x680000f,0x603510e,0x680400d,0x603520d,0x6a0c00d,0x603500d,0x643500d,0x580f34d,
+	0xbef804d,0x0000000,0x40403cf,0xb611e8f,0x680800d,0xc7ffd00,0x200e34e,0x64d330d,
+	0x900834d,0x680000e,0x680100f,0xb8053cd,0x0000000,0x404038e,0xc7fff40,0x40403cf,
+	0x7c0028e,0x44013cf,0x7c002cf,0x60d371a,0x60d391b,0x60d381a,0x60d3a1b,0xcc00000,
+	0x0000000,0x8098002,0x8098000,0x6a0001d,0x6d0001d,0x6a0001e,0x6d0001e,0x6a0001f,
+	0x6d0001f,0x6a00020,0x6d00020,0x690000a,0x680001b,0x6c0001b,0x400071b,0x6800009,
+	0x680c00e,0x680064f,0x740039b,0x400138e,0x7400389,0x400138e,0x740039d,0x400138e,
+	0x740038a,0x400138e,0x740039e,0x400138e,0x740038a,0x400138e,0x740039f,0x400138e,
+	0x740038a,0x400138e,0x74003a0,0x400138e,0x740038a,0x400138e,0xaeb004f,0x44013cf,
+	0x690000e,0x6c0000e,0x200e30e,0x680000f,0x603510e,0x6803e8d,0x603520d,0x6a0c00d,
+	0x603500d,0x643500d,0x580f34d,0xbef804d,0x0000000,0x40193cf,0xb611e8f,0x6807d0d,
+	0xc7ffd00,0x200e34e,0x64d330d,0x900834d,0x680000e,0x680064f,0xb8053cd,0x0000000,
+	0x401938e,0xc7fff40,0x40193cf,0x7c0028e,0x44013cf,0x7c002cf,0x60d391b,0x60d4a1d,
+	0x60d4b1e,0x60d4c1f,0x60d4d20,0x60d4a1d,0x60d4a1d,0x60d3a1b,0x60d4e1d,0x60d4f1e,
+	0x60d501f,0x60d5120,0xcc00000,0x0000000,0xaa10008,0x64d370e,0xcb80003,0x64d390f,
+	0xc7f3440,0x0000000,0x60d371a,0x64d3510,0x908c250,0xa620009,0x60d391b,0x6bfffc9,
+	0x6c00009,0x60d3809,0x6800009,0x6c00009,0x60d3a09,0x9004250,0xaa1c249,0x80d3601,
+	0x80d3603,0x80d3605,0x80d3606,0xc780200,0x80d360f,0x80d3602,0x80d3603,0x80d3604,
+	0x80d3605,0x80d3606,0x80d360f,0x908c210,0x680c10a,0x7800289,0xa814248,0x2409248,
+	0x4401249,0x5402249,0x680c00a,0x200a289,0x740028e,0x400128a,0x581038e,0x740028e,
+	0x400128a,0x740028f,0x400128a,0x58103cf,0x740028f,0x400528a,0x78002c9,0xb40d248,
+	0x7800309,0xb40b248,0x700029a,0x400128a,0x700028e,0x961068e,0x400128a,0x700029b,
+	0x400128a,0x700028f,0xc7f25c0,0x96106cf,0x908c210,0x7800289,0x2409248,0x5402249,
+	0x680c00a,0x200a289,0x64d0009,0x9384249,0xa6f8009,0x0000000,0x64d3609,0xa6ec009,
+	0x0000000,0x64d370e,0x64d390f,0x740028e,0x400128a,0x581038e,0x740028e,0x400128a,
+	0x740028f,0x400128a,0x58103cf,0x740028f,0x400128a,0x690000e,0x6c0000e,0x200e30e,
+	0x780028f,0x54033cf,0x200e3ce,0x603510e,0x680400d,0x603520d,0x6a0c00d,0x603500d,
+	0x908c210,0x7800309,0xb830248,0x4001208,0x920c210,0x7800349,0xb82c248,0x6800008,
+	0x80d3000,0x80d1f30,0x6bc0008,0x60d1f08,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x64d1608,0xbefc108,0x0000000,0x6800008,0x6e00008,0x60d1c08,
+	0x80d1d00,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x64d1608,
+	0xbefc108,0x0000000,0x64d1b08,0x9808648,0x60d1b08,0x64d1608,0xbefc108,0x0000000,
+	0x7800188,0x4001208,0x7c00188,0x7800208,0x4002208,0x7c00208,0x80ac009,0x8007801,
+	0xc7f1040,0x0000000,0x7c00288,0x403f248,0x7c002c9,0x5403208,0x690000e,0x6c0000e,
+	0x200e30e,0x200e20e,0x680400f,0x6b0c010,0x643500d,0x580f34d,0xbef804d,0x0000000,
+	0x643530d,0x900c34d,0xa6f800d,0x0000000,0x603510e,0x603520f,0x6035010,0x643500d,
+	0x580f34d,0xbef804d,0x0000000,0xc7fe1c0,0x680c00a,0x64d4a11,0x64d4b12,0x64d4c13,
+	0x64d4d14,0x60d4a1d,0x60d4b1e,0x60d4c1f,0x60d4d20,0x64d3510,0x908c250,0xa62c009,
+	0x60d391b,0x6a00009,0x6d00009,0x60d4e09,0x60d4f09,0x60d5009,0x60d5109,0x6800009,
+	0x6c00009,0x60d3a09,0x80d5201,0x80d3607,0x80d3601,0x80d3608,0x80d3609,0x80d3604,
+	0x80d3605,0x80d3606,0x80d360f,0x908c210,0xaa10008,0x680bfca,0xc000ec0,0x4401208,
+	0x908c210,0x7800309,0xb82b248,0x0000000,0x64d0009,0x9384249,0xa6f8009,0x0000000,
+	0x64d3609,0xa6ec009,0x0000000,0x920c290,0x7800349,0xb80c24a,0x0000000,0x64d5309,
+	0xaa1c009,0x0000000,0x60d2109,0x80d2001,0x64d2009,0xbefc049,0x0000000,0xc7fe040,
+	0x0000000,0x64d390f,0x64d4a11,0x64d4b12,0x64d4c13,0x64d4d14,0xc0006c0,0x7800308,
+	0xc000e40,0x6800011,0x6a00014,0x6d00014,0x60d4d14,0xc001740,0x680c00a,0x60d4a1d,
+	0x60d4b1e,0x60d4c1f,0x60d4d20,0xc780280,0x680c28a,0x401528a,0x908c210,0x4002208,
+	0x78002c9,0xb004248,0xc0009c0,0x908c450,0x680c50a,0xc001340,0x0000000,0xc7ef280,
+	0x0000000,0x7800289,0x240a248,0x540324a,0x540128a,0x2009289,0x680c00a,0x200a289,
+	0x740028f,0x400128a,0x58103cf,0x740028f,0x400128a,0x7400291,0x400128a,0x5810451,
+	0x7400291,0x400128a,0x7400292,0x400128a,0x5810492,0x7400292,0x400128a,0x7400293,
+	0x400128a,0x58104d3,0x7400293,0x400128a,0x7400294,0x400128a,0x5810514,0xcc00000,
+	0x7400294,0x690000e,0x6c0000e,0x200e30e,0x780028f,0x540434f,0x54023cf,0x200f34f,
+	0x200e3ce,0x603510e,0x6803e8d,0x603520d,0x6a0c00d,0x603500d,0x7c00291,0x4018251,
+	0x7c002c9,0x5404251,0x5402211,0x2008248,0x690000e,0x6c0000e,0x200e30e,0x200e20e,
+	0x6803e8f,0x6b0c010,0x643500d,0x580f34d,0xbef804d,0x0000000,0x643530d,0x900c34d,
+	0xa6f800d,0x0000000,0x603510e,0x603520f,0x6035010,0x643500d,0x580f34d,0xbef804d,
+	0xcc00000,0x0000000,0x40006dc,0x700029c,0x400128a,0x7000289,0x9610709,0x400128a,
+	0x700029d,0x400128a,0x7000289,0x9610749,0x400128a,0x700029e,0x400128a,0x7000289,
+	0x9610789,0x400128a,0x700029f,0x400128a,0x7000289,0x96107c9,0x400128a,0x70002a0,
+	0x400128a,0x7000289,0xcc00000,0x9610809,0x64d1602,0x9162082,0xaa0c002,0xc7fff40,
+	0x0000000,0xc7ed800,0x0000000,0xcb80004,0x64f1f08,0x9361248,0xaa10009,0x9042248,
+	0xc7ed640,0x0000000,0xaa14009,0x680324a,0xaa0c049,0x680348a,0x680390a,0x7800088,
+	0x7800309,0xb806248,0x4001208,0x6800008,0x78000c9,0x4001249,0x7c000c9,0x7c00088,
+	0x950c288,0xa60c008,0x7800309,0x980a50a,0xa403248,0x0000000,0x980a58a,0x78000c8,
+	0xa60c008,0x60f4108,0x980a54a,0x980a7ca,0x60f1f0a,0xc7ecf00,0x0000000,0x64f4b08,
+	0x9384248,0xaa10009,0x64f4a08,0xc7ecd80,0x0000000,0x920c248,0x780034a,0xb408289,
+	0x4001249,0x960c209,0x60f4a08,0x6800048,0x7800309,0x948c209,0x60f4b08,0xc7eca80,
+	0x0000000,0x64ac10c,0x680c008,0x6094008,0x6803009,0x6804008,0xd000009,0x6094108,
+	0x6800008,0x6094008,0xcc00000,0x0000000,0xcc00000,0x0000000,0xc000a00,0x0000000,
+	0x780034a,0x400128a,0x40002ca,0x7800309,0x4001249,0x96102c9,0x609520b,0x54042ca,
+	0x968c2c9,0x609080b,0x681010a,0x6c3454a,0x609070a,0x6490b0a,0x980a00a,0x980a0ca,
+	0x6090b0a,0x9c0a00a,0x9c0a0ca,0x6090b0a,0x698000a,0x6c0000a,0x200a30a,0x609440a,
+	0x6a0000a,0x6c0000a,0x200a30a,0x609450a,0xcc00000,0x0000000,0xc0005c0,0x0000000,
+	0x8095003,0x8095000,0x6820889,0x6c00209,0xcc00000,0x6095109,0x683ffc9,0x649090a,
+	0xa21004a,0xaa0c009,0xc7fff40,0x4401249,0x6490b0a,0x980a00a,0x980a0ca,0x6090b0a,
+	0x9c0a00a,0x9c0a0ca,0x6090b0a,0xcc00000,0x0000000,0x683ffca,0x649530b,0x90012cb,
+	0x649bb09,0x920c249,0x20092c9,0xaa10009,0xaa0c00a,0xc7ffe40,0x440128a,0xcc00000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000
+};
+
+
+
+
+                   
diff --git a/drivers/amlogic/amports/m6tvd/ucode/encoder/half_encoder_linux.h b/drivers/amlogic/amports/m6tvd/ucode/encoder/half_encoder_linux.h
new file mode 100755
index 000000000000..bfa820952e56
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/encoder/half_encoder_linux.h
@@ -0,0 +1,146 @@
+const u32 MicroCode[] __attribute__((aligned(8))) ={
+	0x6810001,0x6800000,0xd000001,0x7400040,0xc0009c0,0x0000000,0xc010200,0x0000000,
+	0xc000e00,0x0000000,0x6bffc40,0x7c00000,0x6030400,0x0400000,0x69fffe2,0x6c01c22,
+	0xc780dc0,0x0000000,0xc780000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0xc78f100,0x0000000,0xc789480,0x64d3008,0xc780880,0x0000000,0xc78f140,
+	0x64f1f08,0xcc00000,0x0400000,0x80d1a00,0x80ac300,0x80ac400,0xcc00000,0x0000000,
+	0x64ac808,0x7c00108,0x64ac908,0x7c00148,0x64ac608,0x7c00188,0x64ac508,0x7c001c8,
+	0x64ac708,0x7c00208,0x64aca08,0x7c00388,0x64acb08,0x7c00048,0xcc00000,0x0000000,
+	0xcc00000,0x0000000,0x80d2001,0x64d2008,0xbefc048,0xcc00000,0x0000000,0xa614022,
+	0x0000000,0x6696022,0x69fffe2,0x6c01c22,0x44018a2,0x64ac021,0xaae4021,0xaa34061,
+	0xa60c0a1,0xc7816c0,0x0000000,0xa60c121,0xc784780,0x0000000,0xa6100e1,0x0000000,
+	0xc782980,0x0000000,0xc7ffb40,0x0000000,0xc07f500,0x0000000,0x6bc0008,0x60d1f08,
+	0x64d1e08,0x9c087c8,0x60d1e08,0x6800008,0x6c00408,0x60d1f08,0x6800048,0x6c00408,
+	0x60d1f08,0x6a19c08,0x60d1f08,0x64d1e08,0x98087c8,0x60d1e08,0x6a10808,0x60d1f08,
+	0x6a00008,0x60d1f08,0x6a0a008,0x60d1f08,0xc07f380,0x80d2100,0x7800148,0x4404208,
+	0xc07f280,0x60d2108,0xc07f200,0x80d2100,0x7800108,0x4404208,0xc07f100,0x60d2108,
+	0xc07f080,0x80d2101,0x80d1f20,0x64d3109,0x9010209,0x400f208,0x5804208,0x4401208,
+	0x7c00308,0xc07ee40,0x60d2108,0x9210209,0x400f208,0x5804208,0x4401208,0x7c00348,
+	0xc07ec80,0x60d2108,0x80d1f30,0x80d1f30,0x64d3108,0x9210208,0x6810e09,0xa803248,
+	0xc7802c0,0x80d1f20,0x80d1f30,0xc07e9c0,0x80d2100,0xc07e940,0x80d2100,0xc07e8c0,
+	0x80d2100,0xc07e840,0x80d2104,0x80d1f20,0x80d1f30,0x6bc0008,0x60d1f08,0x0000000,
+	0x80ac007,0x8007801,0xc7fe740,0x0000000,0xc07e100,0x0000000,0x6bc0008,0x60d1f08,
+	0x64d1e08,0x9c087c8,0x60d1e08,0x6800008,0x6c00408,0x60d1f08,0x6800048,0x6c00408,
+	0x60d1f08,0x6a1a008,0x60d1f08,0x64d1e08,0x98087c8,0x60d1e08,0xc07e100,0x80d2100,
+	0xc07e080,0x80d2100,0x80d1f20,0x80d1f20,0xc07df80,0x80d2100,0xc07df00,0x80d2100,
+	0xc07de80,0x80d2100,0x80d1f20,0x80d1f40,0x7800048,0xc004600,0x441a208,0xc07dcc0,
+	0x60d2108,0xc004500,0x6800008,0xc07dbc0,0x60d2108,0xc07db40,0x80d2100,0x80d1f20,
+	0x80d5500,0x80d1f20,0x80d1f20,0x80d1f30,0x6bc0008,0x60d1f08,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x64d1608,0xbefc108,0x0000000,0x6800008,
+	0x6e00008,0x60d1c08,0x80d1d00,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x64d1608,0xbefc108,0x0000000,0x64d1b08,0x9808648,0x60d1b08,0x64d1608,
+	0xbefc108,0x0000000,0x80ac008,0x8007801,0xc7fd2c0,0x0000000,0xc00c740,0x0000000,
+	0x6490b08,0x9c08608,0x9c08648,0x6090b08,0xc00cdc0,0x0000000,0xc00c4c0,0x0000000,
+	0xc07ca00,0x0000000,0x64ac408,0x4001208,0x60ac408,0x6bc0008,0x60d1f08,0x64d1e08,
+	0x9c087c8,0x60d1e08,0x6800008,0x6c00408,0x60d1f08,0x6800048,0x6c00408,0x60d1f08,
+	0x6a19408,0x60d1f08,0x64d1e08,0x98087c8,0x60d1e08,0x64d3308,0x9008248,0x7c00089,
+	0x9108248,0x7c000c9,0x9210208,0xc07c7c0,0x60d2108,0xc07c740,0x80d2107,0x64d3109,
+	0x9010209,0x400f208,0x5804208,0x4401208,0x7c00308,0x9210209,0x400f208,0x5804208,
+	0x4401208,0x7c00348,0x6800008,0x7c00248,0x60f1b08,0x7800309,0x946d209,0x60d3208,
+	0x6940008,0x6c00008,0x2008308,0x60f2008,0x6803908,0x64d3309,0x9008249,0x9508209,
+	0x9808508,0x9808548,0x98087c8,0x60f1f08,0x7800309,0x7800348,0x960f248,0x60f1e09,
+	0xc07be80,0x80d2100,0x7800148,0x7800189,0x680040a,0x240a20a,0x3409289,0x9605248,
+	0x60d1f09,0x78001c8,0xc07bc00,0x60d2108,0x7800108,0x7800209,0x680040a,0x240a20a,
+	0x3409289,0x9605248,0x60d1f09,0x80d1f20,0x80d1f20,0x64f1c08,0x9206208,0x7800049,
+	0xc002140,0x2408248,0xc07b800,0x60d2108,0x80d3d00,0xc002200,0x0000000,0x6809ec3,
+	0x80d300f,0x64d0008,0x9808008,0x9808048,0x9808088,0x60d0008,0x80ac005,0x8007801,
+	0xc7fb5c0,0x0000000,0xc00aa40,0x0000000,0x6490b08,0x9808608,0x9c08648,0x6090b08,
+	0xc00b0c0,0x0000000,0xc00a7c0,0x0000000,0xc07ad00,0x0000000,0x64f1508,0x9c08508,
+	0x9c084c8,0x9c08588,0x9c08448,0x9c08488,0x60f1508,0x9808488,0x9808448,0x98085c8,
+	0x9808608,0x98086c8,0x60f1508,0x64d3109,0x9010209,0x400f208,0x5804208,0x4401208,
+	0x7c00308,0x9210209,0x400f208,0x5804208,0x4401208,0x7c00348,0x6bc0008,0x60d1f08,
+	0x64d1e08,0x9c087c8,0x60d1e08,0x6800008,0x6c00408,0x60d1f08,0x6800048,0x6c00408,
+	0x60d1f08,0x6a10408,0x60d1f08,0x64d1e08,0x98087c8,0x60d1e08,0x64d3308,0x9210208,
+	0xc07a680,0x60d2108,0xc07a600,0x80d2105,0x6800048,0x7c00248,0x60f1b08,0x7800309,
+	0x946d209,0x60d3208,0x7800309,0x7800348,0x960f248,0x60f1e09,0xc07a300,0x80d2100,
+	0x7800148,0x7800189,0x680040a,0x240a20a,0x3409289,0x9605248,0x60d1f09,0x7800108,
+	0x7800209,0x680040a,0x240a20a,0x3409289,0x9605248,0x60d1f09,0x80d1f20,0x80d1f20,
+	0x80d1f20,0x64f1d08,0x9206208,0x7800049,0xc000640,0x2408248,0xc079d00,0x60d2108,
+	0x80d3d00,0x80d5300,0xc001480,0x0000000,0x680c983,0x6800008,0x6c00448,0x60d3008,
+	0x64d0008,0x9808008,0x9808048,0x9808088,0x60d0008,0x80ac005,0x8007801,0xc7f9a00,
+	0x0000000,0x0800000,0x7800008,0xc7f9180,0x6030408,0x6800009,0xb005248,0x2409209,
+	0x5401208,0xcc00000,0x4401208,0xcc00000,0x5401209,0x6bfffda,0x6c0001a,0x6800009,
+	0x680001b,0x6c0001b,0x400071b,0x680000b,0x680c00e,0x680100f,0x740039a,0x400138e,
+	0x7400389,0x400138e,0x740039b,0x400138e,0x740038b,0x400138e,0xaee004f,0x44013cf,
+	0x690000e,0x6c0000e,0x200e30e,0x680000f,0x603510e,0x680400d,0x603520d,0x6a0c00d,
+	0x603500d,0x643500d,0x580f34d,0xbef804d,0x0000000,0x40403cf,0xb611e8f,0x680800d,
+	0xc7ffd00,0x200e34e,0x64d330d,0x900834d,0x680000e,0x680100f,0xb8053cd,0x0000000,
+	0x404038e,0xc7fff40,0x40403cf,0x7c0028e,0x44013cf,0x7c002cf,0x60d371a,0x60d391b,
+	0x60d381a,0x60d3a1b,0xcc00000,0x0000000,0x6a0001d,0x6d0001d,0x6a0001e,0x6d0001e,
+	0x6a0001f,0x6d0001f,0x6a00020,0x6d00020,0x690000a,0x680001b,0x6c0001b,0x400071b,
+	0x6800009,0x680c00e,0x680064f,0x740039b,0x400138e,0x7400389,0x400138e,0x740039d,
+	0x400138e,0x740038a,0x400138e,0x740039e,0x400138e,0x740038a,0x400138e,0x740039f,
+	0x400138e,0x740038a,0x400138e,0x74003a0,0x400138e,0x740038a,0x400138e,0xaeb004f,
+	0x44013cf,0x690000e,0x6c0000e,0x200e30e,0x680000f,0x603510e,0x6803e8d,0x603520d,
+	0x6a0c00d,0x603500d,0x643500d,0x580f34d,0xbef804d,0x0000000,0x40193cf,0xb611e8f,
+	0x6807d0d,0xc7ffd00,0x200e34e,0x64d330d,0x900834d,0x680000e,0x680064f,0xb8053cd,
+	0x0000000,0x401938e,0xc7fff40,0x40193cf,0x7c0028e,0x44013cf,0x7c002cf,0x60d391b,
+	0x60d4a1d,0x60d4b1e,0x60d4c1f,0x60d4d20,0x60d4a1d,0x60d4a1d,0x60d3a1b,0x60d4e1d,
+	0x60d4f1e,0x60d501f,0x60d5120,0xcc00000,0x0000000,0xaa10008,0x64d370e,0xcb80003,
+	0x64d390f,0xc7f6c00,0x0000000,0x60d371a,0x64d3510,0x908c250,0xa620009,0x60d391b,
+	0x6bfffc9,0x6c00009,0x60d3809,0x6800009,0x6c00009,0x60d3a09,0x9004250,0xaa1c249,
+	0x80d3601,0x80d3603,0x80d3605,0x80d3606,0xc780200,0x80d360f,0x80d3602,0x80d3603,
+	0x80d3604,0x80d3605,0x80d3606,0x80d360f,0x908c210,0x680c10a,0x7800289,0xa814248,
+	0x2409248,0x4401249,0x5402249,0x680c00a,0x200a289,0x740028e,0x400128a,0x581038e,
+	0x740028e,0x400128a,0x740028f,0x400128a,0x58103cf,0x740028f,0x400528a,0x78002c9,
+	0xb40d248,0x7800309,0xb40b248,0x700029a,0x400128a,0x700028e,0x961068e,0x400128a,
+	0x700029b,0x400128a,0x700028f,0xc7f5d80,0x96106cf,0x908c210,0x7800289,0x2409248,
+	0x5402249,0x680c00a,0x200a289,0x64d0009,0x9384249,0xa6f8009,0x0000000,0x64d3609,
+	0xa6ec009,0x0000000,0x64d370e,0x64d390f,0x740028e,0x400128a,0x581038e,0x740028e,
+	0x400128a,0x740028f,0x400128a,0x58103cf,0x740028f,0x400128a,0x690000e,0x6c0000e,
+	0x200e30e,0x780028f,0x54033cf,0x200e3ce,0x603510e,0x680400d,0x603520d,0x6a0c00d,
+	0x603500d,0x908c210,0x7800309,0xb830248,0x4001208,0x920c210,0x7800349,0xb82c248,
+	0x6800008,0x80d3000,0x80d1f30,0x6bc0008,0x60d1f08,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x64d1608,0xbefc108,0x0000000,0x6800008,0x6e00008,
+	0x60d1c08,0x80d1d00,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x64d1608,0xbefc108,0x0000000,0x64d1b08,0x9808648,0x60d1b08,0x64d1608,0xbefc108,
+	0x0000000,0x7800188,0x4001208,0x7c00188,0x7800208,0x4002208,0x7c00208,0x80ac009,
+	0x8007801,0xc7f4800,0x0000000,0x7c00288,0x403f248,0x7c002c9,0x5403208,0x690000e,
+	0x6c0000e,0x200e30e,0x200e20e,0x680400f,0x6b0c010,0x643500d,0x580f34d,0xbef804d,
+	0x0000000,0x643530d,0x900c34d,0xa6f800d,0x0000000,0x603510e,0x603520f,0x6035010,
+	0x643500d,0x580f34d,0xbef804d,0x0000000,0xc7fe1c0,0x680c00a,0x64d4a11,0x64d4b12,
+	0x64d4c13,0x64d4d14,0x60d4a1d,0x60d4b1e,0x60d4c1f,0x60d4d20,0x64d3510,0x908c250,
+	0xa62c009,0x60d391b,0x6a00009,0x6d00009,0x60d4e09,0x60d4f09,0x60d5009,0x60d5109,
+	0x6800009,0x6c00009,0x60d3a09,0x80d5201,0x80d3607,0x80d3601,0x80d3608,0x80d3609,
+	0x80d3604,0x80d3605,0x80d3606,0x80d360f,0x908c210,0xaa10008,0x680bfca,0xc000ec0,
+	0x4401208,0x908c210,0x7800309,0xb82b248,0x0000000,0x64d0009,0x9384249,0xa6f8009,
+	0x0000000,0x64d3609,0xa6ec009,0x0000000,0x920c290,0x7800349,0xb80c24a,0x0000000,
+	0x64d5309,0xaa1c009,0x0000000,0x60d2109,0x80d2001,0x64d2009,0xbefc049,0x0000000,
+	0xc7fe040,0x0000000,0x64d390f,0x64d4a11,0x64d4b12,0x64d4c13,0x64d4d14,0xc0006c0,
+	0x7800308,0xc000e40,0x6800011,0x6a00014,0x6d00014,0x60d4d14,0xc001740,0x680c00a,
+	0x60d4a1d,0x60d4b1e,0x60d4c1f,0x60d4d20,0xc780280,0x680c28a,0x401528a,0x908c210,
+	0x4002208,0x78002c9,0xb004248,0xc0009c0,0x908c450,0x680c50a,0xc001340,0x0000000,
+	0xc7f2a40,0x0000000,0x7800289,0x240a248,0x540324a,0x540128a,0x2009289,0x680c00a,
+	0x200a289,0x740028f,0x400128a,0x58103cf,0x740028f,0x400128a,0x7400291,0x400128a,
+	0x5810451,0x7400291,0x400128a,0x7400292,0x400128a,0x5810492,0x7400292,0x400128a,
+	0x7400293,0x400128a,0x58104d3,0x7400293,0x400128a,0x7400294,0x400128a,0x5810514,
+	0xcc00000,0x7400294,0x690000e,0x6c0000e,0x200e30e,0x780028f,0x540434f,0x54023cf,
+	0x200f34f,0x200e3ce,0x603510e,0x6803e8d,0x603520d,0x6a0c00d,0x603500d,0x7c00291,
+	0x4018251,0x7c002c9,0x5404251,0x5402211,0x2008248,0x690000e,0x6c0000e,0x200e30e,
+	0x200e20e,0x6803e8f,0x6b0c010,0x643500d,0x580f34d,0xbef804d,0x0000000,0x643530d,
+	0x900c34d,0xa6f800d,0x0000000,0x603510e,0x603520f,0x6035010,0x643500d,0x580f34d,
+	0xbef804d,0xcc00000,0x0000000,0x40006dc,0x700029c,0x400128a,0x7000289,0x9610709,
+	0x400128a,0x700029d,0x400128a,0x7000289,0x9610749,0x400128a,0x700029e,0x400128a,
+	0x7000289,0x9610789,0x400128a,0x700029f,0x400128a,0x7000289,0x96107c9,0x400128a,
+	0x70002a0,0x400128a,0x7000289,0xcc00000,0x9610809,0x64d1602,0x9162082,0xaa0c002,
+	0xc7fff40,0x0000000,0xc7f0fc0,0x0000000,0x93e1248,0xaa10009,0x9042248,0xc7f0e80,
+	0x0000000,0xaa14009,0x680324a,0xaa0c049,0x680348a,0x680390a,0x7800088,0x7800309,
+	0xb806248,0x4001208,0x6800008,0x78000c9,0x4001249,0x7c000c9,0x7c00088,0x950c288,
+	0xa60c008,0x7800309,0x980a50a,0xa403248,0x0000000,0x980a58a,0x78000c8,0xa60c008,
+	0x0000000,0x980a54a,0x980a7ca,0x60f1f0a,0xc7f0740,0x0000000,0x64ac10c,0x680c008,
+	0x6094008,0x6803009,0x6804008,0xd000009,0x6094108,0x6800008,0x6094008,0xcc00000,
+	0x0000000,0xcc00000,0x0000000,0xc000a00,0x0000000,0x780034a,0x400128a,0x40002ca,
+	0x7800309,0x4001249,0x96102c9,0x609520b,0x54042ca,0x968c2c9,0x609080b,0x681010a,
+	0x6c3454a,0x609070a,0x6490b0a,0x980a00a,0x980a0ca,0x6090b0a,0x9c0a00a,0x9c0a0ca,
+	0x6090b0a,0x698000a,0x6c0000a,0x200a30a,0x609440a,0x6a0000a,0x6c0000a,0x200a30a,
+	0x609450a,0xcc00000,0x0000000,0xc0005c0,0x0000000,0x8095003,0x8095000,0x6820889,
+	0x6c00209,0xcc00000,0x6095109,0x683ffc9,0x649090a,0xa21004a,0xaa0c009,0xc7fff40,
+	0x4401249,0x6490b0a,0x980a00a,0x980a0ca,0x6090b0a,0x9c0a00a,0x9c0a0ca,0x6090b0a,
+	0xcc00000,0x0000000,0x683ffca,0x649530b,0x90012cb,0x649bb09,0x920c249,0x20092c9,
+	0xaa10009,0xaa0c00a,0xc7ffe40,0x440128a,0xcc00000,0x0000000,0x0000000,0x0000000,
+};
+
+
+
+                   
diff --git a/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/Makefile b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/Makefile
new file mode 100755
index 000000000000..50350ed79bdd
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/Makefile
@@ -0,0 +1,2 @@
+
+obj-y				+= vh264_4k2k_mc.o
diff --git a/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264c_linux.h b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264c_linux.h
new file mode 100755
index 000000000000..cea4185c5b9a
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264c_linux.h
@@ -0,0 +1,60 @@
+const u32 MicroCode[] __attribute__ ((aligned (8))) = {
+	0xc000d00,0x0000000,0x0000000,0x0000000,0xc004340,0x0000000,0x649ca01,0xa60c041,
+	0xc781200,0x0800000,0xa608081,0xc7ffe40,0xa60c0c1,0xc781a00,0x0800000,0xa608101,
+	0xc7ffd00,0xa60c141,0xc781bc0,0x0800000,0xa608181,0xc7ffbc0,0xa6081c1,0xc783900,
+	0xc7ffb00,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0xc781e80,0x0000000,0xcc00000,0x0400000,0xcb80003,0x0000000,0xcc00000,0x0400000,
+	0xc7a4440,0x0000000,0xcc00000,0x0400000,0xcc00000,0x0400000,0xc7a42c0,0x0000000,
+	0xc781b00,0x0000000,0xcc00000,0x0400000,0x6800000,0x6800001,0x7400040,0xb2fc7c1,
+	0x4001041,0x7c01bc0,0x7c01c00,0x7c01c40,0x7c01100,0x7c00c40,0x7c00c80,0x68002c0,
+	0x7c00700,0x7c006c0,0x6803fc0,0x7c01340,0x69fffc0,0x7c02180,0x7c00280,0x64c4000,
+	0x64c4201,0x2401001,0x4008041,0x7c00741,0x5810041,0x7c00781,0xcc00000,0x0000000,
+	0x649d100,0xaa18080,0x6800000,0x680f681,0xc000300,0x6800042,0x809d102,0x80c0a00,
+	0x80c2800,0x80c0002,0x6bffe80,0x6030400,0x6810003,0x809ca02,0xc7fe980,0x0400000,
+	0x6034201,0x649ce01,0x2000040,0x6034100,0x6a10000,0x6c001c0,0x6034000,0xa60c042,
+	0xc000980,0x0000000,0xa60c082,0xc000ac0,0x0000000,0xa60c0c2,0xc000a80,0x0000000,
+	0x6434000,0x580f000,0xbef8040,0xcc00000,0x0000000,0x649d100,0xaa180c0,0x6840000,
+	0x6819b81,0xc07f9c0,0x6800082,0x809d103,0x6bffd80,0x6030400,0x809ca04,0xc78e040,
+	0x0400000,0x649d100,0xaa18100,0x68c0000,0x6821401,0xc07f6c0,0x68000c2,0x809d104,
+	0x6bffe80,0x6030400,0x6810ec3,0x809ca06,0xc78dd00,0x0400000,0x6800000,0x7c012c0,
+	0x7c01540,0x6803fc0,0x7c014c0,0x7c01500,0xcc00000,0x0000000,0xcc00000,0x0000000,
+	0xcc00000,0x0000000,0xc7fe600,0x0000000,0x64c4404,0x9101104,0xa6f8004,0xc7fe4c0,
+	0x0000000,0x64c2305,0xbefc045,0xcc00000,0x64c2005,0x4001145,0x6800006,0xa20c045,
+	0x5801145,0x2405146,0xcc00000,0x0000000,0xcc00000,0x0400000,0x683ffc5,0x4401145,
+	0xb224005,0x64c4406,0x9101186,0xa6f0006,0x80c3e00,0x64c3f06,0x9002186,0xa2e0046,
+	0x0000000,0xcc00000,0x0000000,0x683ffc5,0x4401145,0xb224005,0x64c4406,0x9101186,
+	0xa6f0006,0x80c3e00,0x64c3f06,0x9002186,0xa2e0046,0x0000000,0x683ffc5,0x4401145,
+	0xb254005,0x64e0006,0x9021186,0xaaf0006,0x0000000,0x64e0f06,0x91c91c6,0xa6e0007,
+	0x90631c6,0x9003186,0xa4f51c6,0x6981807,0x64e1106,0x9010186,0xaa08006,0xa4f01c6,
+	0x64e1106,0x9210186,0xaa0c006,0xa4ec1c6,0x0000000,0x683ffc5,0x4401145,0xb210005,
+	0x6490906,0xbef4046,0x0000000,0x683ffc5,0x4401145,0xb220005,0x6495307,0x90011c7,
+	0x649bb06,0x920c186,0x20061c6,0xa6e4006,0x0000000,0x683ffc5,0x4401145,0xb210005,
+	0x6491e06,0xa6f4006,0x0000000,0x683ffc5,0x4401145,0xb210005,0x6498f06,0xa6f4006,
+	0x0000000,0xcc00000,0x0000000,0x649cd00,0xbe36000,0x0000000,0x67f2500,0x93e1040,
+	0xaa1c001,0x67f2401,0xa805001,0x0000000,0x63f2400,0xc7fdc00,0x0800000,0xc7fbf40,
+	0x0000000,0xc0016c0,0x0000000,0x649c700,0xaabc000,0xc000580,0x0000000,0xc7fd980,
+	0x0800000,0x649cd00,0xa23e000,0xc000400,0x0000000,0xc0013c0,0x0000000,0x67f2500,
+	0x93e1040,0xa620041,0x901f040,0xa618001,0x0000000,0x0800000,0xc000940,0x0000000,
+	0x0400000,0xcc00000,0x0000000,0x649c700,0xa60c000,0xcc00000,0x0000000,0x0800000,
+	0x649c700,0xa60c000,0xcc00000,0x0400000,0xc000240,0x0000000,0x67f2500,0x93e1000,
+	0xaa0c000,0xc000480,0x0000000,0xcc00000,0x0400000,0x809c700,0x9104040,0xaa0c001,
+	0x6804041,0x6806041,0x48ff000,0x4401000,0x5403000,0x2000040,0x7000001,0x9c01281,
+	0x9c012c1,0xcc00000,0x7400001,0x69a0001,0x6c00781,0x6804002,0xc0003c0,0x6a04000,
+	0x78000c1,0x63f2b01,0x7800101,0x63f2c01,0x7800281,0x63f2801,0x7800241,0x63f2701,
+	0x67f2501,0x4001041,0x63f2501,0xcc00000,0x0000000,0x6035202,0x649ce02,0x2002042,
+	0x6035102,0x6035000,0x6435001,0x580f041,0xbef8041,0x0000000,0x6435301,0x900c041,
+	0xa6f8001,0x0000000,0xcc00000,0x0000000,0x78006c0,0x7800701,0xa403040,0xcc00000,
+	0x0000000,0x649c000,0xaa0c000,0xcc00000,0x0000000,0x0800000,0x78006c0,0x7800701,
+	0xa403040,0xcc00000,0x0400000,0xc000100,0x0000000,0xcc00000,0x0400000,0x78006c0,
+	0x7000001,0x609c001,0x90c2081,0xaa0c002,0x6804002,0x6806002,0x483f041,0x5403041,
+	0x2001081,0x4001041,0x7000042,0x9121082,0x649c000,0x9501002,0x609c000,0x7000042,
+	0x9101082,0xaa0c002,0x4001041,0x4002041,0x4001081,0x7000041,0x7000082,0x9610042,
+	0x609c101,0x78006c1,0x7000041,0x90c2081,0xa62c002,0x809c200,0x483f041,0x5401041,
+	0x6802b02,0x2002042,0x7000081,0x4001082,0x7000082,0x9610081,0x609c202,0x649c002,
+	0x5408082,0x4c03082,0x609c002,0x8007401,0x78006c0,0x4001000,0x68006c1,0xb803040,
+	0x0000000,0x68002c0,0xcc00000,0x7c006c0,0x649c002,0xa6fc002,0x0000000,0x609c100,
+	0x609c201,0x809c00a,0x649cd00,0xbe0e000,0xc7800c0,0x8007001,0x8007401,0x649c000,
+	0xa6fc000,0x0000000,0xcc00000,0x0000000,0x649c007,0xa6bc007,0x0000000,0x609c105,
+	0x609c206,0x809c00a,0x649cd05,0xbe12005,0xc780140,0x8007001,0x0000000,0x8007401,
+	0x0000000,0x649c005,0xa6b4005,0x0000000,0xcc00000,0x0000000,0x0000000
+};
diff --git a/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264header_linux.h b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264header_linux.h
new file mode 100755
index 000000000000..7e49aa1ca2a5
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264header_linux.h
@@ -0,0 +1,126 @@
+const u32 MicroCode[] __attribute__ ((aligned (8))) = {
+	0x6bffd8a,0x603040a,0x0400000,0x64c430a,0x580128a,0xbaf980a,0x64c0008,0xbe44048,
+	0x0000000,0x0800000,0x6bffe8a,0x603040a,0xcc00000,0x0400000,0x64c0008,0xa2fc048,
+	0x0000000,0x64c3a08,0x9006208,0xaaec648,0x0000000,0x80c0002,0xc7ffcc0,0x0000000,
+	0xbe1c808,0x0000000,0x649d008,0x4001208,0x609d008,0xc7ffb00,0x80c0002,0xfc08200,
+	0x90a2248,0x7c01149,0x481f208,0x7c01188,0xaa10388,0xaa0c508,0xc780780,0x0000000,
+	0xfc01240,0xfc01240,0xa614508,0xaa0c049,0x6800049,0x6800149,0x7c01189,0xfc06240,
+	0xfc0a240,0x7c014c9,0x7801348,0xaa1bfc8,0xa806209,0x6800008,0x7801388,0xa805209,
+	0x6800048,0xc7ff540,0x6800049,0x7c00249,0x7c01508,0xfc03240,0xfc01240,0x7c01549,
+	0xfc01240,0x7c01589,0xfc01240,0x7801188,0xaa24148,0xaa20048,0xa608188,0xc78ab80,
+	0xaa1c1c8,0xaa183c8,0xa608208,0xc784640,0xc7ff080,0xc785d00,0x0000000,0x6800008,
+	0x7c00c88,0x6808012,0xfc10200,0x9108208,0x7c007c8,0xfc08200,0x7c00808,0xc00b100,
+	0x80c2301,0xb2087c8,0xc7fed00,0x7c00848,0x78007c8,0xb61d908,0x6800048,0x7c00888,
+	0x6800008,0x7c008c8,0xc780540,0x0000000,0xc00adc0,0x80c2301,0x7c00888,0xc00ad00,
+	0x80c2301,0xc00ac80,0x80c2301,0xfc01200,0xfc01200,0x7c008c8,0xaa24008,0x6800010,
+	0x68001c8,0x7c015c8,0x78008ce,0x7c00c8e,0x680000f,0xc0085c0,0x680000a,0xc00a900,
+	0x80c2301,0x4004208,0x7c00908,0xc00a800,0x80c2301,0x7c00948,0xaa20088,0xaa0c008,
+	0x0000000,0xc780000,0xc00a640,0x80c2301,0x4004208,0x7c00988,0xc00a540,0x80c2301,
+	0x7c009c8,0xfc01200,0x7c00a08,0xc00a400,0x80c2301,0xb20bfc8,0xc7fe000,0x4001208,
+	0x7c00a48,0xc00a280,0x80c2301,0xb20bfc8,0xc7fde80,0x4001208,0x7c00a88,0xfc01200,
+	0x7c00ac8,0xa60c008,0x6800009,0xfc01240,0x9421209,0x7c00b08,0xfc01240,0x7c00b49,
+	0xfc01200,0xaa24008,0x6800109,0x7c00c88,0xc009dc0,0x80c2301,0x7400488,0xd07ff49,
+	0x4001492,0xc780100,0x6800008,0x7c00b88,0x7c00bc8,0xfc01240,0xa610009,0x7c00c09,
+	0xc781600,0x0000000,0x7c00c89,0xfc01200,0x9421248,0x7400489,0xaa30008,0x4001492,
+	0xfc08200,0x7400488,0xa623fc8,0x4001492,0xfc10200,0x7400488,0x4001492,0xfc10200,
+	0x7400488,0x4001492,0xfc01200,0xaa0c008,0x0000000,0xfc01200,0xfc01200,0xaa1c008,
+	0x0000000,0xfc05200,0xa210048,0x0000000,0xfc10200,0xfc08200,0xfc01200,0xaa18008,
+	0x0000000,0xc009280,0x80c2301,0xc009200,0x80c2301,0xfc01200,0x7400488,0xaa3c008,
+	0x4001492,0xfc10200,0x7400488,0x4001492,0xfc10200,0x7400488,0x4001492,0xfc10200,
+	0x7400488,0x4001492,0xfc10200,0x7400488,0x4001492,0xfc01200,0x680000f,0xfc01200,
+	0xaa18008,0x94013c8,0xc007f80,0x0000000,0x90aa248,0x7c00c49,0xfc01200,0xaa1c008,
+	0x94213c8,0xc007dc0,0x0000000,0xbe0c04f,0x90aa248,0x7c00c49,0xa20c0cf,0x0000000,
+	0xfc01200,0xfc01200,0x94413c8,0xfc01200,0x94613c8,0x740048f,0x4001492,0xaa24008,
+	0x6800189,0xfc01200,0xc008640,0x80c2301,0xd07ff89,0x0000000,0x7400488,0x4001492,
+	0xc008780,0x0000000,0x7800848,0x6800049,0x3409209,0x649cb0a,0x2c0a24a,0x609cb0a,
+	0x649d209,0x9527248,0xc0099c0,0x609d209,0x7801188,0xaa0c3c8,0xc7fbe00,0x0000000,
+	0xfc01200,0xc008080,0x80c2301,0x40013c8,0x7c0130f,0x680134a,0x6800010,0xb4083d0,
+	0xc007ec0,0x80c2301,0xb6f4090,0x4001410,0x7400288,0xc7ffe80,0x400128a,0x6bfffc8,
+	0x7c013c8,0x7c01408,0x7c01448,0x7c01488,0x6800050,0xb4143d0,0xc000180,0x68013cc,
+	0xc000100,0x680140c,0xc7ffec0,0x4001410,0xc0079c0,0x80c2301,0x4000388,0x680000d,
+	0xb80238d,0xcc00000,0xc007840,0x80c2301,0xb6f004d,0x400134d,0xb6e8090,0xc7ffe40,
+	0x7400308,0x6800050,0xb4073d0,0xc07fc40,0x680144c,0xc07fbc0,0x680148c,0xc7ffec0,
+	0x4001410,0xc7fb140,0x0000000,0x64c5109,0x64c460a,0x7800788,0x5410208,0x780074b,
+	0x20082c8,0x580a208,0xe000248,0x0000000,0x0000000,0x0000000,0xf000200,0xf010240,
+	0x9708209,0x540a208,0x2008288,0x64c4309,0x2408248,0x64c4009,0x2408248,0x7c01288,
+	0x5810208,0x7c01248,0xcc00000,0x0000000,0x6800008,0x7c010c8,0x6808012,0xc006d00,
+	0x80c2301,0xb20bfc8,0xc7fa900,0x7c00cc8,0xc006bc0,0x80c2301,0x7c00d08,0x649cb09,
+	0x3809209,0xbe0c049,0xc7fa700,0x0000000,0xfc01200,0x7c00d48,0xfc01200,0x7c00d88,
+	0xc0068c0,0x80c2301,0xaa0c008,0xc7fa4c0,0x0000000,0xc006780,0x80c2301,0x7c00dc8,
+	0xc0066c0,0x80c2301,0x7c00e08,0xfc01200,0x7c00e48,0xfc02200,0x7c00e88,0xc006500,
+	0x80c2301,0xc006580,0x0000000,0x7c00ec8,0xc0063c0,0x80c2301,0xc006340,0x80c2301,
+	0xc0063c0,0x0000000,0x7c00f08,0x7c01088,0xfc01200,0x7c00f48,0xfc01200,0x7c00f88,
+	0xfc01200,0x7c00fc8,0x64c2908,0x91c2208,0xa6140c8,0x6800008,0x7c01008,0x7c01048,
+	0xc780480,0xfc01200,0x7c01008,0xfc01200,0x7c01048,0xaa20008,0x68001c8,0x7c015c8,
+	0x780104e,0x7c010ce,0x680000f,0xc003840,0x680000a,0xc005b80,0x80c2301,0xc005c00,
+	0x0000000,0x7c01088,0xc0068c0,0x0000000,0x7800cc8,0xb618808,0x6800049,0x3409209,
+	0x649cc0a,0x2c0a24a,0x609cc0a,0x649d209,0x9409248,0xc007900,0x609d209,0xc7f93c0,
+	0x0000000,0xc07e280,0x0000000,0xc005600,0x80c2301,0x7c01688,0x7801109,0xa62c009,
+	0xaa08008,0xc7f9140,0x7801189,0xaa08149,0xc7f9080,0x6800049,0x7c01109,0x649cd09,
+	0x9809209,0x609cd09,0xaa2c008,0x6800051,0x7802189,0x69fffd1,0xa402449,0xc7f8dc0,
+	0xa805248,0x6800011,0x7802088,0xa608008,0xc780000,0x7801289,0x7c01209,0x7801248,
+	0x7c011c8,0xc004e80,0x80c2301,0xaa341c8,0xaa38008,0xaa3c048,0x7c016c8,0xc004d00,
+	0x80c2301,0x7c01708,0xb630808,0x649cc09,0x3809209,0xbe24049,0xc7f8800,0x0000000,
+	0xc7ffd80,0x6800088,0xc7ffd00,0x6800148,0xc7ffc80,0x6800188,0x649d209,0x9009289,
+	0xa80620a,0x9409248,0xc006ec0,0x609d209,0xc005640,0x0000000,0x7800d08,0x649d209,
+	0x9127289,0xa80620a,0x9527248,0xc006280,0x609d209,0xc004840,0x0000000,0x7800909,
+	0xf800209,0xa614011,0x7801749,0xa803248,0x0000000,0x9811051,0x7c01748,0x7800ac8,
+	0xa61c008,0x68000ca,0xfc01200,0xaa10008,0x0000000,0xfc01200,0x4001288,0xa614011,
+	0x7801789,0xa80324a,0x0000000,0x9811091,0x7c0178a,0x7801788,0x4401208,0x7800b09,
+	0x2809248,0x9021249,0x2008248,0x7c017c8,0x7801188,0xa628148,0x0000000,0xc003d00,
+	0x80c2301,0xa614011,0x7801809,0xa803248,0x0000000,0x98110d1,0x7c01808,0x7800948,
+	0xa654008,0x7800988,0xf800208,0xa614011,0x7801849,0xa803248,0x0000000,0x9811111,
+	0x7c01848,0x7800d89,0xaa20009,0x6800008,0x7801789,0xa6140c9,0xc003740,0x80c2301,
+	0xc0037c0,0x0000000,0x7c01888,0x5810208,0x7c018c8,0x7800948,0xa608048,0xc780000,
+	0x7800fc8,0xaa10008,0x0000000,0xc003400,0x80c2301,0x7800dc8,0x7c01948,0x7800e08,
+	0x7c01988,0x6800008,0x7c01908,0x78016c8,0xaa5c188,0xaa28148,0x7801188,0xaa0c148,
+	0xc7809c0,0x0000000,0xfc01200,0x7c019c8,0xfc01200,0xc780880,0x7c01a08,0xfc01200,
+	0x6800809,0xaa14008,0x7801948,0xc002e00,0x80c2301,0x7c01948,0x9505248,0x7800b08,
+	0x96a2248,0xc780580,0x60c2109,0xfc01200,0x7c01908,0x6800809,0x96e1248,0x7801948,
+	0x9505248,0xfc01200,0xaa24008,0x7801988,0xc0029c0,0x80c2301,0x7c01948,0x9505248,
+	0xc0028c0,0x80c2301,0x7c01988,0x9605248,0x7800b08,0x96a2248,0x60c2109,0xc068bc0,
+	0x7c01651,0x809ca03,0xc7f61c0,0x6802b03,0xba0c18a,0x680020d,0x680080d,0x78015c8,
+	0xb80420a,0x400128a,0xcc00000,0x0000000,0x540138e,0x54013cf,0xfc01240,0x7400489,
+	0x4001492,0x9401389,0xaac8009,0x680020b,0x680020c,0xba0c18a,0x68003cd,0x6800fcd,
+	0xaa4400c,0x0000000,0xc002040,0x80c2301,0x7400488,0x4001492,0xc002040,0x0000000,
+	0x20082c8,0x48ff308,0xa61800c,0xaa0cfcd,0xb61418a,0xa6103cd,0xc7ff780,0x980f00f,
+	0x40002cc,0x5408410,0xbe0c04d,0x940840b,0x6c00010,0xaeac00d,0x440134d,0x78015c8,
+	0xb80320a,0xcc00000,0x0000000,0xc7ff640,0x400128a,0xba0c18a,0x680020d,0x680080d,
+	0x64e020b,0x200b34b,0x6c0004b,0x60e020b,0xba101ca,0x400128a,0xcc00000,0x0000000,
+	0x540138e,0x54013cf,0x78015c9,0xac0424a,0x6800009,0x7000489,0x4001492,0x9401389,
+	0xaab4009,0x680020b,0x680020c,0xba0c18a,0x68003cd,0x6800fcd,0xaa3800c,0x7000488,
+	0x4001492,0xc001380,0x0000000,0x20082c8,0x48ff308,0xa61800c,0xaa0cfcd,0xb61418a,
+	0xa6103cd,0xc7ff700,0x980f00f,0x40002cc,0x5408410,0xbe1004d,0x940840b,0x6c00010,
+	0x60e0210,0xaeb400d,0x440134d,0xba0c1ca,0xcc00000,0x0000000,0xc7ff680,0x400128a,
+	0xc000cc0,0x80c2301,0x4001388,0xfc08200,0xc000bc0,0x80c2301,0xc000b40,0x80c2301,
+	0xd07ff0e,0xfc01200,0xfc05200,0xcc00000,0xfc0f200,0x680000d,0x680001a,0x64c2908,
+	0xa20c408,0xc7f4540,0x0000000,0xfc08200,0xaaeffc8,0x200d20d,0x64c2908,0xa20c408,
+	0xc7f4380,0x0000000,0xfc08200,0xaaeffc8,0x201a21a,0xaa5000d,0xaa1018d,0xa61404d,
+	0xc780480,0x0000000,0x6800048,0x7c01608,0x64c0008,0xbe14208,0x64c2908,0xbe0c408,
+	0xd07ff1a,0xfc08200,0x64c0008,0xbe10208,0x64c2908,0xbe08408,0xc7ff7c0,0xc7f3dc0,
+	0x0000000,0xc7ffcc0,0xc7ffc80,0x64c2308,0xbefc048,0xcc00000,0x64c2008,0x4001208,
+	0x6800009,0xa20c048,0x5801208,0x2408209,0xcc00000,0x0000000,0x6808012,0x64c2908,
+	0x9c082c8,0x9c08308,0x7800889,0xaa0c009,0x98080c8,0x9c080c8,0x60c2908,0x78008ce,
+	0xaa3000e,0x680000f,0x680000a,0x6c0004a,0x60e020a,0x68001c8,0x7c015c8,0xc07e240,
+	0x680000a,0x680000a,0x6c0004a,0x60e020a,0x64e0008,0x96e920e,0x60e0008,0x64e0308,
+	0x950820f,0x60e0308,0x7800a48,0x60c0908,0x7800a8a,0x7800ac8,0xa60c008,0x0000000,
+	0x540128a,0x40002ca,0x7800a49,0x95082c9,0x7c0000b,0x40002ca,0x96102c9,0x609520b,
+	0x54042ca,0x968c2c9,0x609080b,0xcc00000,0x0000000,0x6808012,0x6800809,0x7800dc8,
+	0x9505248,0x7800e08,0x9605248,0x7800b08,0x96a2248,0x60c2109,0x7800f08,0x6801009,
+	0x9505248,0x60c2109,0x7801088,0x6801409,0x9505248,0x60c2109,0x780104e,0xaa2800e,
+	0x680000f,0x6801c0a,0x6c0004a,0x60e020a,0xc07d500,0x680000a,0x680000a,0x6c0004a,
+	0x60e020a,0x64e0008,0x95c920e,0x60e0008,0x64e0308,0x940820f,0x60e0308,0xcc00000,
+	0x0000000,0x6800009,0x6c00049,0x540a288,0x2009289,0x680050a,0xc001340,0x6a007cb,
+	0x7800c89,0xaa28009,0x6800009,0x6c00049,0x540a288,0x2009289,0x680400a,0x2009289,
+	0x680600a,0xc001080,0x6a0800b,0xcc00000,0x0000000,0x6800009,0x6c00049,0x540a288,
+	0x2009289,0x680050a,0xc000e40,0x6b007cb,0x7800c89,0xaa28009,0x6800009,0x6c00049,
+	0x540a288,0x2009289,0x680400a,0x2009289,0x680600a,0xc000b80,0x6b0800b,0xcc00000,
+	0x0000000,0x6900009,0x6c00049,0x5409288,0x2009289,0x680044a,0xc000940,0x6a00ccb,
+	0x78010c9,0xaa28009,0x6900009,0x6c00049,0x5409288,0x2009289,0x680100a,0x2009289,
+	0x680380a,0xc000680,0x6a0800b,0xcc00000,0x0000000,0x6900009,0x6c00049,0x5409288,
+	0x2009289,0x6800cca,0x680110a,0x680044a,0xc0003c0,0x6b00ccb,0x78010c9,0xaa28009,
+	0x6900009,0x6c00049,0x5409288,0x2009289,0x680100a,0x2009289,0x680380a,0xc000100,
+	0x6b0800b,0xcc00000,0x0000000,0x603520a,0x649ce0a,0x200a24a,0x603510a,0x603500b,
+	0x6435009,0x580f249,0xbef8049,0x0000000,0x6435309,0x900c249,0xa6f8009,0x0000000,
+	0xcc00000,0x0000000,0x0000000,0x0000000
+};
diff --git a/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264mmc_linux.h b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264mmc_linux.h
new file mode 100755
index 000000000000..550350a12f1b
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264mmc_linux.h
@@ -0,0 +1,208 @@
+const u32 MicroCode[] __attribute__ ((aligned (8))) = {
+	0x7801658,0x7801508,0xa613fc8,0x0000000,0x6800008,0x7c01508,0xa60c018,0x4000658,
+	0xc783540,0xaa0c008,0x6800049,0x6800089,0x700024a,0x780000b,0xa83c2ca,0x740024b,
+	0x649cd09,0xbe0e009,0xc780940,0x0000000,0x67f290a,0xa20c04a,0xc0180c0,0x901e28a,
+	0x7800809,0x97082c9,0x78009c9,0x96082c9,0x609c10b,0x40012c8,0x609c00b,0x8007401,
+	0x649c00b,0xa6fc00b,0x0000000,0x649c10b,0x63f2d0b,0x910828b,0x7c001ca,0x900828b,
+	0x7c0020a,0x649c20b,0x63f2e0b,0x7c0014b,0x92102cb,0x7c0018b,0xc0061c0,0x0000000,
+	0x67f2908,0x4002208,0x9c08008,0x9c087c8,0x9c08788,0xc780540,0x63f2908,0x67f2d0b,
+	0xaafc00b,0x910828b,0x7c001ca,0x900828b,0x7c0020a,0x67f2e0b,0xaae400b,0x7c0014b,
+	0x92102cb,0x7c0018b,0x83f2d00,0x83f2e00,0x67f2a08,0x4002208,0x9c08008,0x9c087c8,
+	0x9c08788,0x63f2a08,0x7801188,0xa62c148,0x7801508,0xa624008,0x6800008,0x7c01bc8,
+	0x7c01c08,0x7c01c48,0x649cd09,0xbe16009,0xc780540,0x0000000,0xc780800,0x0000000,
+	0x67f290a,0xc017280,0x901e28a,0xc009f80,0x0000000,0x67f2908,0x93c2248,0xaa100c9,
+	0xaa0c009,0xc780480,0x0000000,0x4002208,0x9c08008,0x9c087c8,0x9c08788,0xc780300,
+	0x63f2908,0x67f2a08,0xc0169c0,0x901e288,0x67f2a08,0x4002208,0x9c08008,0x9c087c8,
+	0x9c08788,0xc780080,0x63f2a08,0x6800008,0x7c000c8,0x7c00108,0x649cd09,0xbe6e009,
+	0x0000000,0x67f2a0a,0x93c220a,0xb20c048,0x901e28a,0x400128a,0x6800048,0x97c2288,
+	0x63f2a0a,0xbe2804a,0x0000000,0x67f2a0a,0x6800088,0x97c2288,0x63f2a0a,0x69fffca,
+	0x7c0218a,0xc7edec0,0x809ca01,0x901e28a,0xc016140,0x440128a,0xc016dc0,0x0000000,
+	0xc7803c0,0x0000000,0x67f290a,0x93c220a,0xb20c048,0x901e28a,0x400128a,0x6800048,
+	0x97c2288,0x63f290a,0x901e28a,0xbe1004a,0xaa0c00a,0xc015f00,0x440128a,0xc004840,
+	0x0000000,0xa26e00b,0x910820b,0xbe32008,0x780150b,0xaa0c00b,0x68000cb,0x680010b,
+	0x680004a,0x340a20a,0x6bfffc8,0x300a20a,0x70002c8,0x2808288,0x74002c8,0x649cd09,
+	0xbe2a009,0x0000000,0x67f2509,0x93e1249,0xa618009,0x0000000,0x6800009,0x98097c9,
+	0x63f2409,0x63f2509,0xc7ed280,0x809ca07,0x7c01b09,0x7c01b8a,0x7801508,0xa62c008,
+	0x900820b,0x7c02008,0x7800248,0xa60c008,0x6800048,0x7c01588,0x6800008,0x7c00248,
+	0x7801588,0x7c02048,0x649cd09,0xbe22009,0x0000000,0x67f2a0a,0x6800088,0x97c2288,
+	0x63f2a0a,0xc780300,0x83f2500,0xc015640,0x0000000,0x67f290a,0x6800088,0x97c2288,
+	0x63f290a,0xc012480,0x0000000,0xc010f00,0x0000000,0x78016c8,0xaa08088,0xc780980,
+	0x7801189,0xaa20149,0x7801149,0xaa18009,0x0000000,0xfc01240,0xaa0c009,0xc00c8c0,
+	0x0000000,0xc06ee00,0x80c2301,0xc06ee80,0x0000000,0x401a205,0x7800ec9,0x2008248,
+	0x7c01a48,0x7800f48,0xaa40008,0x680000a,0xc06eb40,0x80c2301,0xaa30045,0x9402285,
+	0xc06ea40,0x80c2301,0xc06eac0,0x0000000,0x94c4285,0xc06e900,0x80c2301,0xc06e980,
+	0x0000000,0x9444285,0x60c310a,0xc7ec040,0x809ca05,0xaa08148,0xc781240,0xaa4c019,
+	0xc008240,0x7801748,0x7801508,0xaa3c008,0x7802048,0xaa34008,0x7801548,0xaa0c008,
+	0x7901448,0x79013c8,0x6bfffc9,0xa807248,0x7801b09,0x7802008,0x4c80208,0x7400248,
+	0x4001249,0x7c01b09,0xfc01200,0xaa10008,0x7801956,0xc00cc40,0x6808011,0xaa18019,
+	0x6808008,0x7801b0a,0x7801953,0xc00aa40,0x6800012,0x7800e48,0x4000248,0xaa34008,
+	0x6094209,0xc06de00,0x80c2301,0x9484245,0xc06dd40,0x80c2301,0x9504245,0x6094209,
+	0x680c008,0x6094008,0xc012940,0x780194a,0x6494008,0x9c08248,0x6094008,0x7801148,
+	0xaa38008,0x0000000,0x7801188,0xa61c148,0x0000000,0xfc01200,0x7c019c8,0xfc01200,
+	0xc780180,0x7c01a08,0xfc01200,0xaa0c008,0xc00b180,0x0000000,0x7800d48,0xaa18008,
+	0x6800c09,0xc06d600,0x80c2301,0x9402245,0x60c2109,0xc7fe700,0x0000000,0xaa68019,
+	0xc007ac0,0x0000000,0xc007dc0,0x6808008,0x7c01fc8,0x7801b08,0x4020208,0xc008900,
+	0x7c01b48,0x7801508,0xaa3c008,0x7802048,0xaa34008,0x7801548,0xaa0c008,0x7901448,
+	0x79013c8,0x6bfffc9,0xa807248,0x7801b09,0x7802008,0x4c80208,0x7400248,0x4001249,
+	0x7c01b09,0xfc01200,0xaa10008,0x7801956,0xc00b880,0x6808011,0xaa44019,0x7801508,
+	0xaa3c008,0x7802048,0xaa34008,0x7801548,0xaa0c008,0x7901488,0x7901408,0x6bfffc9,
+	0xa807248,0x7801b49,0x7802008,0x4c80208,0x7400248,0x4001249,0x7c01b49,0xfc01200,
+	0xaa24008,0x7801b48,0x7c01b08,0x7801996,0xc00b280,0x6808811,0x7801b48,0x4420208,
+	0x7c01b08,0xaa50019,0x6808008,0x7801b0a,0x7801953,0xc008fc0,0x6800012,0x6808808,
+	0x7801b4a,0x7801993,0xc008e80,0x6800212,0xc009640,0x6808808,0x6808808,0x7000208,
+	0x5418208,0x609b308,0x649b308,0x48ff208,0x7c01a88,0x7800e88,0xa60c088,0x6800009,
+	0x6815409,0x9402248,0xa644048,0x6094209,0xc06bf40,0x80c2301,0x9484245,0xc06be80,
+	0x80c2301,0x9504245,0x6094209,0x680c008,0x6094008,0xc010a80,0x780194a,0x680d808,
+	0x6094008,0xc010980,0x780198a,0xc7fe040,0x0000000,0x7801508,0xaa0c008,0x6804049,
+	0x6806049,0x6800008,0x780020a,0x7400248,0xd07ffca,0x4008249,0xcc00000,0x0000000,
+	0xc0013c0,0x6a0200b,0x649cd09,0xa226009,0x67f2909,0xa21c049,0xc06d2c0,0x0000000,
+	0x67f2609,0x93e1249,0xaaf0009,0x0000000,0x6808009,0x680900a,0x680000c,0x7801508,
+	0xaa0c008,0x6804048,0x6806048,0x700020d,0xa20c04d,0x914238d,0xc7808c0,0xaa0c00e,
+	0xc780980,0x0000000,0xbe0e00b,0xc780b40,0x0000000,0x649cd0e,0xa24200e,0x0000000,
+	0x67f290e,0xa22004e,0x0000000,0x67f260e,0x900838e,0xa42338c,0x67f260e,0x9c0e7ce,
+	0x63f260e,0x94082cc,0xc001340,0x0000000,0xc780700,0x7c01acb,0x67f260e,0x93e138e,
+	0xa6f800e,0x0000000,0xc001140,0x94082cc,0x980b7cb,0x63f260b,0x9c0b7cb,0xc780440,
+	0x7c01acb,0x740028c,0x400128a,0x740024c,0xc780300,0x4001249,0xaa2808e,0xa61004e,
+	0x904438d,0x740028c,0x400128a,0xaa1400e,0x0000000,0x740024c,0xc780080,0x4001249,
+	0x780020d,0x440134d,0x4008208,0xb8c834c,0x400130c,0xcc00000,0x0000000,0x7801148,
+	0xa60c008,0xcc00000,0x980b38b,0x7801508,0xaa0c008,0x68000c8,0x6800108,0x649cd0c,
+	0xa23600c,0x0000000,0x67f290c,0xa22804c,0x0000000,0xc06bd00,0x0000000,0x67f260c,
+	0x93e128c,0xaaf000a,0x0000000,0xc780340,0x910828c,0x78009cc,0x400230c,0x7000209,
+	0x680000a,0xa21c049,0x5801249,0xb8fe30a,0x400128a,0xc780000,0xcc00000,0x0000000,
+	0x95082ca,0x680004c,0x340c28c,0x7000209,0x2c09309,0xcc00000,0x7400209,0x649c80e,
+	0x93e13ce,0xaa1800f,0x91083ce,0xaa1000f,0x44013cf,0x950838f,0x609c80e,0x780114e,
+	0xaa1000e,0x680000e,0xc780480,0x7c0208e,0x649c80e,0x93e13ce,0xa61000f,0x680000e,
+	0xc780300,0x7c0208e,0x780150e,0xa62400e,0x649c80e,0x91083ce,0xa6e400f,0x90083ce,
+	0x950838f,0x609c80e,0x680004e,0x7c0208e,0x6a0000e,0x60c3d0e,0x4401388,0x91083cb,
+	0x740038f,0x400138e,0x6810010,0x7801151,0xaa3c011,0x6bfffd1,0x4c0c410,0x7800151,
+	0x7800192,0x9610452,0xe0003d1,0x7801512,0xaa0c012,0x649d612,0x649d712,0xf000440,
+	0xf0103c0,0x970844f,0x2011491,0x64c3d0f,0x91613cf,0xa6f800f,0x0000000,0x60c3811,
+	0x78017d1,0x94c2411,0x7400390,0xc0091c0,0x0000000,0x7800290,0x69fff8f,0xa81640f,
+	0x78016cf,0xa62c08f,0x780150f,0xaa1000f,0x69fffcf,0xa80e40f,0xc7803c0,0xa80e40f,
+	0x7c00292,0x69fff8f,0xc7802c0,0x7c0028f,0x69fffcf,0xa80640f,0x91e13d0,0xaa0c00f,
+	0x6c00010,0x6ffffd0,0xb403412,0x680004f,0x7c0208f,0x4000812,0x7000390,0x780208f,
+	0x952140f,0xb004452,0x9c10210,0x9810210,0x4000811,0x7400390,0x80c3000,0x60c3220,
+	0x60c3212,0x60c3211,0x7801790,0xa610090,0x400138e,0xc780180,0x400138e,0x7400392,
+	0x9210492,0x400138e,0x7400392,0xa610090,0x400138e,0xc780180,0x400138e,0x7400391,
+	0x9210451,0x400138e,0x7400391,0x400138e,0x7801750,0x7400390,0x6806010,0xb40c40e,
+	0x440638e,0x6804010,0x240e40e,0x580238e,0x6802b10,0x200e40e,0x78011d0,0x7400390,
+	0x7801210,0x400138e,0x7400390,0x7801511,0xaa10011,0x900844b,0x7800212,0x2011491,
+	0x5402451,0x649c612,0x2011491,0x4000491,0x4001451,0x9508491,0x9608491,0x609b212,
+	0x609b012,0x609b112,0x4001411,0x4002451,0x9508411,0x609dc10,0x6800011,0x98117d1,
+	0x9008492,0x9688452,0x649cd12,0xa20e012,0xc7800c0,0x63f4111,0x63f4011,0xcc00000,
+	0x0000000,0x7801508,0xaa0c008,0xcc00000,0x0000000,0x680000f,0xc000340,0x680400b,
+	0x4000512,0x7800089,0x780000a,0xa405289,0x680004f,0xc000180,0x680600b,0xa6c8012,
+	0xa6c4014,0xcc00000,0x0000000,0x6800012,0x6bfffca,0x6dfffca,0x7800213,0x6bfffcd,
+	0x400134d,0xb41b4cd,0x400038d,0x400044e,0x540338e,0x200e2ce,0x400138e,0x700038c,
+	0xa21004c,0x9c0c00c,0xc7ffd80,0x740038c,0x914224c,0xa6cc049,0x910130c,0xaa0c00c,
+	0x400138e,0x400238e,0x400130e,0x700038e,0x700030c,0x961038c,0xb0ea38a,0x0000000,
+	0x6800052,0x400028e,0xc7ff980,0x4000411,0xaa0c012,0xc00a740,0x0000000,0xcc00000,
+	0x0000000,0x680004c,0x780090b,0x340c2cc,0x6808009,0x7801b0f,0xb8033c9,0xcc00000,
+	0x0000000,0x780150b,0xaa0c00b,0x680400b,0x680600b,0x700024a,0x540328a,0x200a2ca,
+	0x400628a,0x700028a,0xb00320a,0x4000349,0x240a30a,0x400134d,0xb4113cd,0x700034e,
+	0x540338e,0x200e2ce,0x400638e,0x700038e,0xb00320e,0x0000000,0x240e30e,0xb4f638a,
+	0x0000000,0x400028e,0x700024e,0x7000350,0x740034e,0xc7ffc00,0x7400250,0x4001249,
+	0xb8e53c9,0xcc00000,0x0000000,0x6808009,0x7801b0a,0x240a24a,0x78009c9,0xac0324a,
+	0xcc00000,0x0000000,0xc07f3c0,0x7801748,0x6808009,0x78009ca,0x2009289,0xcc00000,
+	0x7c01b09,0x6808009,0x7801b0f,0x780150b,0xaa0c00b,0x680400b,0x680600b,0x700024a,
+	0x540328a,0x200a2ca,0x400128a,0x700028c,0x910130c,0xaa0c00c,0x400128a,0x400228a,
+	0x400130a,0x700028a,0x700030c,0x961028c,0x4000349,0x400134d,0xb4163cd,0x700034e,
+	0x540338e,0x200e2ce,0x400138e,0x700038c,0x910130c,0xaa0c00c,0x400138e,0x400238e,
+	0x400130e,0x700038e,0x700030c,0x961038c,0xb4f138a,0x0000000,0x400028e,0x700024e,
+	0x7000350,0x740034e,0xc7ffac0,0x7400250,0xb00380a,0x0000000,0x4001208,0x4001249,
+	0xb8d73c9,0xcc00000,0x0000000,0x6808809,0x680800a,0x7801fc8,0x4401208,0xb806288,
+	0x700020b,0x740024b,0x4001249,0xc7fff00,0x4401208,0x7801fc8,0x7801b0a,0xb406288,
+	0x700020b,0x740024b,0x4001249,0xc7fff00,0x4001208,0x6808009,0x7801b0a,0x7801fc8,
+	0xb406288,0x700020b,0x740024b,0x4001249,0xc7fff00,0x4001208,0x6808808,0x7801fca,
+	0x402028a,0xb406288,0x700020b,0x740024b,0x4001249,0xc7fff00,0x4001208,0xcc00000,
+	0x0000000,0xa23600e,0x487f38e,0x400040e,0x54013d0,0x200f40f,0x40103cf,0x60c240f,
+	0x540830c,0x9405310,0x540338e,0x6804010,0xc7802c0,0x200e40e,0x201044e,0x54013d0,
+	0x200f40f,0x40103cf,0x60c240f,0x540830c,0x9405310,0x540338e,0x200e34e,0x400138e,
+	0x7000390,0x60c2210,0x90c23d0,0xaa0c0cf,0x0000000,0x40013cf,0x94a230f,0x400138e,
+	0x700038f,0x400138e,0x7000390,0x96103d0,0x60c220f,0x400138e,0x700038f,0x400138e,
+	0x7000390,0x96103d0,0xcc00000,0x60c220f,0x680000b,0x680000c,0x6800011,0x780150d,
+	0xaa1000d,0x680400d,0x680600d,0x7800211,0xb40d288,0xac0c4cb,0xc07f2c0,0x700020e,
+	0x90023cb,0xa6140cf,0x58023cb,0x200f48f,0x60c240f,0x60c220c,0x40012cb,0xc7ffd40,
+	0x4001208,0xa2280cb,0x580234b,0x200d48d,0x60c240d,0x90022cb,0x680010d,0x240b2cd,
+	0x54032cb,0x340c2cc,0x60c220c,0xcc00000,0x0000000,0x7000208,0x5403208,0x7801509,
+	0xaa0c009,0x6804009,0x6806009,0x2008248,0x700020f,0x90043cf,0x7800151,0x7800192,
+	0x9610452,0xe0003d1,0x7801512,0xaa0c012,0x649d612,0x649d712,0xf000440,0xf0103c0,
+	0x970844f,0x2011491,0x5803451,0x4001208,0x700020f,0x90c23cf,0x97c244f,0x60c3911,
+	0xcc00000,0x0000000,0xc0625c0,0x80c2301,0xaa20005,0xae18185,0xa610045,0xc0001c0,
+	0x0000000,0xc7ffe40,0xc780000,0xc780000,0xcc00000,0x0000000,0xc0622c0,0x80c2301,
+	0xa608019,0xcc00000,0x4001205,0x7801749,0x6800055,0x780090f,0x34153d5,0xb403209,
+	0x2410209,0x2010550,0x78017c8,0xb610088,0x0000000,0x2010250,0x4001410,0x6800009,
+	0x780020f,0x780150b,0xaa0c00b,0x680400b,0x680600b,0x5403289,0x200a2ca,0x400128a,
+	0x700028c,0xa21030c,0x400528a,0x700028c,0xa80540c,0x4001249,0xb8f73c9,0xcc00000,
+	0x0000000,0x440528a,0x700028c,0x9c0c0cc,0x9c0c08c,0x9c0c00c,0x740028c,0x440128a,
+	0x700028c,0x481f30c,0x7801508,0xaa0c008,0x68000c8,0x6800108,0x680004a,0x340a30a,
+	0x6bfffcc,0x300a30a,0x7000209,0x2809289,0xcc00000,0x7400209,0x7c020d1,0x7801750,
+	0x6bfffd2,0x7801513,0xaa0c013,0x6804013,0x6806013,0xc061300,0x80c2301,0xaa440c5,
+	0xaaf4019,0xae38145,0xa610005,0xc0003c0,0x0000000,0xc7ffe00,0xa610045,0xc000940,
+	0x0000000,0xc7ffd00,0xa610145,0xc000ac0,0x0000000,0xc7ffc00,0xc780000,0xc780000,
+	0xcc00000,0x0000000,0xc060dc0,0x80c2301,0x4001205,0x6800055,0x7800909,0x3415255,
+	0xb403210,0x2410210,0x2010550,0x4000510,0x78020c8,0x7801b09,0xb40c248,0x700020a,
+	0xbe1a00a,0x540328a,0x200a4ca,0x400628a,0x700028a,0xa80350a,0xc7ffe00,0x4001208,
+	0xc000780,0x0000000,0xcc00000,0x0000000,0xc060740,0x80c2301,0x4001205,0x6800055,
+	0x7800909,0x3415255,0x2010210,0xb8e8550,0xc7ff9c0,0x2410550,0xc0604c0,0x80c2301,
+	0x4001205,0x2012212,0xa628012,0x78020c8,0x7801b09,0xb407248,0x700020a,0xbe0e00a,
+	0xc7fff40,0x4001208,0xc000100,0x0000000,0xcc00000,0x0000000,0x7801b0b,0x700020f,
+	0xb00644b,0x440130b,0x700030c,0x74002cc,0xc7fff00,0x44012cb,0x740044f,0x4001451,
+	0x4000251,0x4000291,0x78020cb,0x200b58b,0x40012cb,0xac072ca,0x700028c,0xa8fe3cc,
+	0x400128a,0x740024c,0xc7ffec0,0x4001249,0x7801b09,0x4001249,0xcc00000,0x7c01b09,
+	0xc780000,0x0000000,0x780094f,0x460040f,0xc480900,0x780098f,0x6800050,0x34173d0,
+	0x5801597,0x7801bd5,0x7801c0f,0x961054f,0x7801c53,0x7801854,0xb4054d4,0x240f513,
+	0xb80758f,0xc780180,0x20155d5,0x240f4d4,0xb00358f,0xc780080,0x24155d5,0x40004d4,
+	0x780114f,0xaa1400f,0x58103d5,0x7c01bd5,0x7c01c0f,0x7c01c53,0x7801794,0xaa100d4,
+	0x20124d5,0xc780bc0,0x4000452,0x780188f,0x78018d0,0x96103d0,0xc780a80,0x20113d2,
+	0x780090f,0x6800050,0x34173d0,0x780118f,0xa61c14f,0x680000f,0x7c01c8f,0x7c01ccf,
+	0x7c01d0f,0x7c01ecf,0x7c01f0f,0x7801c96,0x7801cd5,0x7801d0f,0x961054f,0x7801754,
+	0xb403594,0x0000000,0x20155d5,0x780094f,0x460240f,0xc5000c0,0xc780000,0x0000000,
+	0x780118f,0xa61014f,0x6800012,0xc780280,0x6800011,0x2013515,0x54014d3,0x780114f,
+	0xa60c00f,0x0000000,0x44014d3,0x4000493,0x4000453,0x7c01cd5,0x58103d5,0x7c01d0f,
+	0xb803452,0x4000412,0x4000411,0x7c01d50,0x58103d0,0x7c01d8f,0x7c01dd2,0x58103d2,
+	0x7c01e0f,0x7c01e51,0x58103d1,0x7c01e8f,0x7801754,0xcc00000,0x7c01c94,0x7801148,
+	0xaa1c008,0x6808008,0x78009c9,0x4001249,0x2009209,0x7801b08,0xb403248,0xcc00000,
+	0x0000000,0x6808009,0x7801b0f,0x780150b,0xaa0c00b,0x680400b,0x680600b,0x700024a,
+	0x400040a,0x540328a,0x200a2ca,0x400128a,0x700028c,0x910130c,0xaa0c00c,0x400128a,
+	0x400228a,0x400130a,0x700028a,0x700030c,0x961028c,0x4000349,0x400134d,0xb4143cd,
+	0x700034e,0x400044e,0x540338e,0x200e2ce,0x400138e,0x700038c,0x910130c,0xaa0c00c,
+	0x400138e,0x400238e,0x400130e,0x700038e,0x700030c,0x961038c,0xb0f038a,0x0000000,
+	0x400028e,0xc7ffb40,0x4000411,0xc000100,0x780150f,0xcc00000,0x0000000,0xaa0c00f,
+	0x680400b,0x680600b,0x5403390,0x200e2ce,0x400138e,0x700038c,0xbe0804c,0xa24830c,
+	0x9c0c0cc,0x9c0c08c,0x9c0c00c,0x740038c,0x440138e,0x700038c,0x481f30c,0xaa0c00f,
+	0x68000c8,0x6800108,0x680004a,0x340a30a,0x6bfffcc,0x300a30a,0x7000209,0x2809289,
+	0x7400209,0xcc00000,0x0000000,0x6809008,0x78001c9,0x4001249,0x2009209,0x7801b88,
+	0xb403248,0xcc00000,0x0000000,0x6809009,0x7801b8f,0x780150b,0xaa0c00b,0x680400b,
+	0x680600b,0x700024a,0x400040a,0x540328a,0x200a2ca,0x400128a,0x700028c,0xa21804c,
+	0x0000000,0x4001249,0xb8f73c9,0xcc00000,0x0000000,0x910130c,0xaa0c00c,0x400128a,
+	0x400228a,0x400130a,0x700028a,0x700030c,0x961028c,0x4000349,0x400134d,0xb4153cd,
+	0x700034e,0x400044e,0x540338e,0x200e2ce,0x400138e,0x700038c,0xbee004c,0x910130c,
+	0xaa0c00c,0x400138e,0x400238e,0x400130e,0x700038e,0x700030c,0x961038c,0xb0ef38a,
+	0x0000000,0x400028e,0xc7ffb00,0x4000411,0xc000180,0x780150f,0xaa08011,0xc7ff680,
+	0xcc00000,0x0000000,0x6800011,0xaa0c00f,0x680400b,0x680600b,0x5403390,0x200e2ce,
+	0x400138e,0x700038d,0x400030d,0x980d2cd,0x9c0d28d,0x9c0d0cd,0x9c0d08d,0x9c0d00d,
+	0x740038d,0xa21c30c,0x980d00d,0x740038d,0x6800051,0x440138e,0x700038c,0x481f30c,
+	0x94c240f,0x780070b,0x74002d0,0x40012cb,0x68006cc,0xb80330b,0x0000000,0x68002cb,
+	0x78006cc,0xa40c30b,0x0000000,0x649c70c,0xaa0c00c,0xc05da00,0x0000000,0x649c00c,
+	0xaa0c00c,0xc7ffe80,0x0000000,0xc05e900,0x0000000,0xcc00000,0x7c0070b,0x680000b,
+	0x400128a,0xfc01200,0xaa20048,0x680004c,0x6494208,0x9084208,0x340c20c,0x540830c,
+	0xc780340,0x609410c,0xc05afc0,0x80c2301,0xc05b040,0x0000000,0x4000305,0xc05ae80,
+	0x80c2301,0xc05af00,0x0000000,0x950914c,0x6094105,0xfc01200,0xaa24048,0x680004c,
+	0x6494208,0x9104208,0x340c20c,0x540830c,0x609410c,0xc780600,0x609410c,0xc05aa80,
+	0x80c2301,0xc05ab00,0x0000000,0x4000305,0xc05a940,0x80c2301,0xc05a9c0,0x0000000,
+	0x950914c,0x6094105,0xc05a7c0,0x80c2301,0xc05a840,0x0000000,0x4000305,0xc05a680,
+	0x80c2301,0xc05a700,0x0000000,0x950914c,0x6094105,0x40012cb,0xb8cb28b,0xcc00000,
+	0x0000000,0x67f290b,0x901e30b,0xac0428c,0xb8fd28c,0x93c230b,0xbaec08c,0xcc00000,
+	0x0000000,0xc05be00,0x0000000,0x67f2a0b,0x901e30b,0xac0428c,0xb8fb28c,0x93c230b,
+	0xbae408c,0xcc00000,0x0000000,0x67f2a0b,0xa21804b,0x901e30b,0xb8fd28c,0xac0328c,
+	0x93c230b,0xa6e80cc,0xcc00000,0x0000000,0x69a0009,0x6c00789,0x680400a,0xc000bc0,
+	0x6a0400b,0x78000c9,0x63f2b09,0x7800109,0x63f2c09,0x7800289,0x63f2809,0x7800249,
+	0x63f2709,0x7801c49,0x63f2309,0x7801bc9,0x7801c0a,0x961024a,0x63f2209,0x7801cc9,
+	0x7801d0a,0x961024a,0x63f2109,0xcc00000,0x0000000,0x69a0009,0x6c00789,0x680400a,
+	0xc000580,0x6b0400b,0x67f2b09,0x7c000c9,0x67f2c09,0x7c00109,0x67f2809,0x7c00289,
+	0x67f2709,0x7c00249,0x67f2309,0x7c01c49,0x67f2209,0x7c01bc9,0x9210249,0x7c01c09,
+	0x67f2109,0x7c01cc9,0x9210249,0x7c01d09,0xcc00000,0x0000000,0x603520a,0x649ce0a,
+	0x200a24a,0x603510a,0x603500b,0x6435009,0x580f249,0xbef8049,0x0000000,0x6435309,
+	0x900c249,0xa6f8009,0x0000000,0xcc00000,0x0000000,0x0000000,0x0000000
+};
diff --git a/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264slice_linux.h b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264slice_linux.h
new file mode 100755
index 000000000000..1a55101402cd
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/h264slice_linux.h
@@ -0,0 +1,269 @@
+const u32 MicroCode[] __attribute__ ((aligned (8))) = {
+	0x7801651,0x6840009,0x6098409,0x8098400,0x8002a09,0x8002b17,0x6830009,0x6032609,
+	0x8032261,0x8032101,0x7800f88,0x64e0e09,0x9401248,0x60e0e09,0x7800a49,0x4401249,
+	0x7c025c9,0x680006c,0x7800d49,0xaa10009,0x6800009,0x687ffc9,0x680002c,0x7c02889,
+	0x6800809,0x7801948,0x9505248,0x7801988,0x9605248,0x7800b08,0x96a2248,0x7801908,
+	0x96e1248,0x60c2109,0x7800b48,0xaa10008,0x5401208,0x7800ac9,0x9441209,0x7801009,
+	0x9401209,0x7c02a48,0x6800009,0x7c02a89,0x7c02989,0x7801689,0x7c02ac9,0xaa10011,
+	0x6800016,0xc001300,0x0000000,0x6800008,0x60c2108,0xc001b40,0x0000000,0x80c0001,
+	0x8030504,0xc7ef2c0,0x0400000,0x6bfd98a,0x603040a,0x0400000,0x64c430a,0x580128a,
+	0xbaf980a,0x64c0008,0xbe3c048,0x0000000,0x0800000,0x6bffe8a,0x603040a,0xcc00000,
+	0x0400000,0xc780000,0xc780000,0xc780000,0x0000000,0xbef9008,0x0000000,0xc78c400,
+	0x680000a,0xaa4c048,0xbeed208,0x683ffcb,0xaadc00b,0x44012cb,0x64e0f08,0x9003248,
+	0x9063288,0xb40324a,0x240a24a,0x400828a,0xba180ca,0xaedc0ca,0x80c3e00,0x64c3f08,
+	0x9002208,0xa6cc0c8,0xcb80024,0x0000000,0x649cd0a,0xa21a00a,0x67f290a,0xa21004a,
+	0x69fffca,0xc78be00,0x7c0218a,0x680000a,0x7802088,0xaa18008,0xaa0c011,0x0000000,
+	0x680004a,0xc78bc00,0x0000000,0x7800b08,0xaa14388,0x78016c8,0xaa08088,0xc784a80,
+	0xc788040,0xaa08088,0xc7833c0,0xc7871c0,0x0000000,0x649c908,0x4001208,0x609c908,
+	0x6800015,0x7c02115,0x7c02155,0x7c02195,0x7c021d5,0x7c02215,0x6803fc8,0x7c02288,
+	0x6800008,0x7c02348,0x7c023c8,0x7c02408,0x7c02448,0x7c02488,0x78025c8,0x4001208,
+	0x7c02608,0x6800048,0x60e0c08,0x7c027c8,0x7c02648,0x6800008,0x7c02808,0x68003c8,
+	0x7c02688,0x6805c08,0x60c2108,0x80c2170,0x6800088,0x7c02748,0xc016b00,0x0000000,
+	0xcc00000,0x0000000,0x780280b,0xa6fc00b,0x0000000,0x6a0002b,0x6c007ab,0x690002a,
+	0x649cd08,0xbe1a008,0x6c007aa,0x6a0002b,0x6c00eeb,0x680002a,0x6c00eea,0xc016b40,
+	0x0000000,0xc017040,0x0000000,0x6900009,0x649cd08,0xbe12008,0x6c000c9,0x6800009,
+	0x6c00809,0x78016c8,0x5c0c289,0x6819d64,0xaa18088,0x6800009,0x68166e4,0xaa0c148,
+	0x6800049,0x6800089,0x7c02589,0x7801788,0x94c2248,0x60c0409,0x7c026ca,0x6800008,
+	0x7c02788,0x7800a8b,0x7800ac8,0xa630008,0x780178a,0xaa280ca,0x54012cb,0x58012cb,
+	0x6490708,0x9808088,0x98080c8,0x6090708,0x6495108,0x98083c8,0x6095108,0x7c0270b,
+	0x7800b08,0x944220a,0x7c00b08,0xa640388,0x68000ca,0x6495108,0x940420a,0x9808648,
+	0x6095108,0x6490708,0x9808448,0x6090708,0x6498e08,0x9808788,0x6098e08,0x78016c8,
+	0xaa0c088,0x6818d64,0x6814ee4,0xc00c340,0x0000000,0x7800d48,0xa610008,0x7801a48,
+	0xc780b00,0x60c0a08,0xfc07200,0x80c2940,0x7801a48,0x9808188,0x98083c8,0x60c0a08,
+	0x9c083c8,0x9808388,0xc00c500,0x60c0a08,0x7802589,0x64c0a08,0x91c2208,0xa6f8008,
+	0x780289b,0x6c0001b,0x680001c,0x6c0001c,0x680001d,0x6c0001d,0x680001e,0x6c0001e,
+	0x6bfffdf,0xa628009,0x7800b08,0x680030a,0xaa18388,0x7c0284a,0x680018a,0x7c0284a,
+	0xcc00000,0x60c0715,0xcc00000,0x680030a,0xaa18388,0x7c0284a,0x680018a,0x7c0284a,
+	0xcc00000,0x60c0715,0xcc00000,0x0000000,0xc00bc80,0x80c0600,0x780289b,0x6c0001b,
+	0x680001c,0x6c0001c,0x680001d,0x6c0001d,0x680001e,0x6c0001e,0x6bfffdf,0x7802589,
+	0xa628009,0x7800b08,0x680030a,0xaa18388,0x7c0284a,0x680018a,0x7c0284a,0xcc00000,
+	0x60c0715,0xcc00000,0x680030a,0xaa18388,0x7c0284a,0x680018a,0x7c0284a,0xcc00000,
+	0x60c0715,0xcc00000,0x0000000,0x64c031b,0x64c031c,0x64c031d,0x64c031e,0x64c271f,
+	0xa224055,0x78028c8,0x7c02908,0x4000817,0x4000858,0x4000899,0x40008da,0xc781400,
+	0x60c0715,0x683ffc8,0x4401208,0xaa0c008,0x780280b,0xa6f400b,0x68000cb,0x7802948,
+	0x95102c8,0x7802108,0x97082c8,0x6031e0b,0xaa08008,0xc780b00,0x80c0700,0x7802889,
+	0x6c00009,0x60c0209,0x6800009,0x6c00009,0x60c0209,0x6800009,0x6c00009,0x60c0209,
+	0x6800009,0x6c00009,0x60c0209,0x6bfffca,0x60c0320,0x60c0321,0x60c0322,0x60c0323,
+	0x7802909,0x961024a,0x60c2709,0x80c0701,0x7802889,0x6c00009,0x60c0209,0x6800009,
+	0x6c00009,0x60c0209,0x6800009,0x6c00009,0x60c0209,0x6800009,0x6c00009,0x60c0209,
+	0x60c0317,0x60c0318,0x60c0319,0x60c031a,0x78028cb,0x96102ca,0x60c270b,0xc780580,
+	0x60c0715,0x64c270a,0x921028a,0x60c0320,0x60c0321,0x60c0322,0x60c0323,0x7802909,
+	0x961024a,0x60c2709,0x80c0701,0x64c270a,0x921028a,0x60c0317,0x60c0318,0x60c0319,
+	0x60c031a,0x78028c9,0x961024a,0x60c2709,0x60c0715,0x6431e0a,0xbefc04a,0x7802a48,
+	0x4c30208,0xc780b40,0x60c2508,0x64c031b,0x64c031c,0x64c031d,0x64c031e,0x64c271f,
+	0x60c0715,0x921029f,0x7802108,0xa638008,0x7802889,0x6c00009,0x60c0209,0x6800009,
+	0x6c00009,0x60c0209,0x6800009,0x6c00009,0x60c0209,0x6800009,0x6c00009,0x60c0209,
+	0x6bfffca,0x60c0317,0x60c0318,0x60c0319,0x60c031a,0x78028c9,0x961024a,0x60c2709,
+	0x7802a48,0x4c30208,0x60c2508,0x683ffca,0x780280b,0xaa0c00b,0xa6f800a,0x440128a,
+	0x68000cb,0x780294a,0x95102ca,0x780210a,0x97082ca,0x6031e0b,0x7802a8c,0x7802688,
+	0x7c029c8,0x64c2308,0x9304248,0xa6f8009,0x90a1248,0x9024208,0x9521209,0xaa0c00c,
+	0x7c02688,0xc781640,0xaa6002c,0xa65c008,0xa62406c,0x64c200a,0x91942ca,0xba4c20b,
+	0x44022cb,0x959428b,0x60c060a,0xc7803c0,0x68000ac,0xa6240ac,0x64c060a,0x91832ca,
+	0xae2814b,0x40022cb,0x958328b,0x60c060a,0xc780180,0x68000ec,0x900f2ca,0xae0c04b,
+	0xc780080,0x680006c,0xaa64248,0x60c2508,0xaa64288,0xaa58348,0xaa1c049,0xaa58388,
+	0xa60c008,0xc7801c0,0x0000000,0x80c2605,0x80c2606,0x80c2602,0x80c260f,0x80c2603,
+	0x7802749,0xaa100c9,0x680008a,0xc782940,0x7c0274a,0x780280c,0xa6fc00c,0x0000000,
+	0x7c02789,0xc7827c0,0x7c0274a,0x80c2602,0x80c260f,0x80c2603,0x7802749,0xaa50089,
+	0x68000ca,0x7802109,0xaa0c009,0xc782540,0x7c0274a,0xaa08725,0xbef4055,0x683ffcc,
+	0x78027c9,0x64e0c0a,0x901028a,0xb804289,0xaa0c00c,0xc7ffec0,0x440130c,0x6800089,
+	0x68000ca,0x680180c,0x60c210c,0x683ffcd,0xaa2c00d,0x64e110c,0x910130c,0xa6f400c,
+	0x440134d,0x64e110c,0x910130c,0xa6e400c,0x780280c,0xa6dc00c,0x0000000,0x7c02789,
+	0xc781e00,0x7c0274a,0x6800008,0x7c02688,0x60c2508,0x6431e08,0xbefc048,0x68fdfc8,
+	0x6fcffc8,0x64e0407,0x2807207,0xc7ff140,0x60e0408,0x64c031b,0x64c031c,0x64c271f,
+	0xa228055,0x78028c8,0x7c02908,0x4000817,0x4000858,0x60c0715,0x7802a48,0x4c30208,
+	0xc781500,0x60c2508,0x7802108,0xa658008,0x80c0700,0x7802889,0x6c00009,0x60c0209,
+	0x80c0200,0x6bfffca,0x60c0320,0x60c0321,0x780290b,0x96102ca,0x60c270b,0x80c0701,
+	0x60c0209,0x80c0200,0x60c0317,0x60c0318,0x78028cb,0x96102ca,0x60c270b,0xc780480,
+	0x60c0715,0x64c270a,0x921028a,0x60c0320,0x60c0321,0x7802909,0x961024a,0x60c2709,
+	0x80c0701,0x64c270a,0x921028a,0x60c0317,0x60c0318,0x78028c9,0x961024a,0x60c2709,
+	0x60c0715,0x7802a48,0x4c30208,0x60c2508,0x780280b,0xa6fc00b,0x68000cb,0x780294a,
+	0x95102ca,0x780210a,0x97082ca,0xc780840,0x6031e0b,0x64c031b,0x64c031c,0x64c271f,
+	0x60c0715,0x921029f,0x7802108,0xa618008,0x7802889,0x6c00009,0x60c0209,0x80c0200,
+	0x6bfffca,0x60c0317,0x60c0318,0x78028c9,0x961024a,0x60c2709,0x7802a48,0x4c30208,
+	0x60c2508,0x683ffca,0x440128a,0xaa0c00a,0x780280b,0xa6f400b,0x68000cb,0x780294a,
+	0x95102ca,0x780210a,0x97082ca,0x6031e0b,0x7802688,0x7c029c8,0x64c2308,0x9304248,
+	0xa6f8009,0x9024208,0x7c02688,0xaa10288,0x60c2508,0x80c2602,0x80c260f,0x80c2603,
+	0x4c00208,0x9808208,0x60c2108,0x7802348,0xaa14008,0x6a01009,0xaa0c048,0x6a22009,
+	0x6a40009,0x6431e0a,0xbefc04a,0x6c00109,0x7800b0a,0xa66838a,0xa264055,0x78029cb,
+	0xaa1c00b,0x780278b,0x0800000,0x78027ca,0x400128a,0x7c027ca,0x0400000,0xb61408b,
+	0x0000000,0x80c2170,0xc780880,0x80c260e,0x683ffcb,0x44012cb,0xaa0c00b,0x780280a,
+	0xa6f400a,0x78027ca,0x440128a,0xc009680,0x7c027ca,0xc7805c0,0x8030580,0x780280a,
+	0xa6fc00a,0x0000000,0x60e0509,0x7802789,0x680180a,0x9502289,0x60c210a,0x80c260e,
+	0x6800089,0x7c02388,0xba0c088,0x4001208,0x6800008,0x7c02348,0x7802108,0x7c02248,
+	0x78029c8,0x7c02a08,0x7c02809,0x8030580,0x7802948,0xaa14725,0x4001208,0x7802149,
+	0xa20c049,0x0000000,0x7c02948,0x683ffc9,0x64c2308,0x9304208,0xaa2c008,0x0000000,
+	0x80c3e01,0x64c3f08,0x93e1208,0xaae4008,0xb6e0049,0x4401249,0x6bfffc9,0xc7f5700,
+	0x7c02ac9,0x64c2b08,0x60c2b08,0x780228e,0xba13fce,0x6800009,0xc7810c0,0x7c02289,
+	0x6808009,0xba1070e,0x400028e,0x441c28a,0x680c009,0x54032ca,0x200b28b,0x20092c9,
+	0x740025f,0x4001249,0x921031b,0x740024c,0x4001249,0x740025b,0x4001249,0x740025c,
+	0x4001249,0x921031c,0x740024c,0x4001249,0x740025d,0x4001249,0x921031d,0x740024c,
+	0x4001249,0x740025e,0x4001249,0x921031e,0x740024c,0x7800a49,0xac07949,0x780210b,
+	0xaa38725,0x400030b,0x780214b,0xc7802c0,0x942f2cc,0xa61000b,0xaa14725,0x780214b,
+	0xa20c04b,0xa6146ca,0x40012ce,0xb60c70e,0x680000b,0x680070b,0x7c0228b,0xb012949,
+	0xaa0800b,0xa64070b,0x78022cb,0xa20c04b,0x6a0800c,0x6a0c00c,0x649ce0b,0x200a2ea,
+	0x780230d,0x54092cd,0x200b28b,0x603510b,0x6803f0b,0x603520b,0x603500c,0xc007340,
+	0x0000000,0x7800b08,0xa610388,0x7802108,0xc780e40,0x0000000,0x4001208,0x7c02108,
+	0x7802189,0x4001249,0x7c02189,0x7800a49,0xb84a248,0x6800008,0x7c02108,0xc002c40,
+	0x0000000,0x7802149,0xae0c049,0x4401249,0x6800009,0x649cd0a,0xa21a00a,0x0000000,
+	0x67f410a,0x954a289,0xc780140,0x63f410a,0x67f400a,0x954a289,0x63f400a,0x7802149,
+	0x4001249,0x780270a,0xb404289,0x7c02149,0xc780c80,0x0000000,0x680004a,0xc002240,
+	0x0000000,0xc065680,0x0000000,0xaa3800a,0x649cd0a,0xa21e00a,0x67f290a,0x83f4100,
+	0x68000c9,0x97c2289,0xc7801c0,0x63f290a,0x83f4000,0x67f2a0a,0x68000c9,0x97c2289,
+	0x63f2a0a,0x8032100,0x809ca01,0xc7f3440,0x6802b03,0x7802149,0xbe10049,0x4001209,
+	0xc780580,0x7c02148,0x4401209,0x7c02148,0x7802108,0x4001208,0x7c02108,0x7802189,
+	0x4001249,0x7c02189,0x7800a49,0xb80b248,0x6800008,0x7c02108,0x7802149,0x4002249,
+	0x780270a,0xb805289,0x7c02149,0x6800008,0xc7ff480,0x7c02188,0x64c3b08,0x920c208,
+	0xb20ca08,0x680204b,0x7c02a8b,0x7802108,0x9508548,0x780214a,0x940854a,0x7800a4a,
+	0xb01494a,0x6808009,0xa628725,0xc780a40,0x0000000,0x780214b,0xa20c04b,0x50012cb,
+	0x4001208,0x5401208,0xc780a40,0x940120b,0x4001208,0xa418288,0x780228a,0x7802148,
+	0xa27c048,0x400220a,0xc780380,0x6800008,0xaa7c725,0x780214b,0xa2bc04b,0x40012c8,
+	0xa4ed28b,0xc780680,0x6800008,0xaa14725,0x6800008,0x7802148,0x5001208,0x4801208,
+	0xb60c70a,0x6808009,0x680c009,0xc780400,0x0000000,0xa628048,0x400220a,0x7802148,
+	0xbe1c048,0x400220a,0xc7ffd80,0x6800048,0xaabc008,0x780228a,0x400120a,0xba10708,
+	0xb6ace08,0x680c009,0x441c208,0x5403288,0x200a20a,0x2009289,0x700024a,0x7c028ca,
+	0x4001249,0x700024a,0x4001249,0x7000257,0x96105ca,0x4001249,0x7000258,0x4001249,
+	0x700024a,0x961060a,0x4001249,0x7000259,0x4001249,0x700024a,0x961064a,0x4001249,
+	0x700025a,0x4001249,0x700024a,0x961068a,0x6bfda8a,0x603040a,0xcc00000,0x0400000,
+	0x7802808,0xa6fc008,0x0000000,0x64c0008,0xa2f0048,0x64c3d08,0x580a208,0xbef80c8,
+	0x6a00008,0x60c3d08,0x64c3d08,0x580a208,0xbef80c8,0x0000000,0xcc00000,0x0000000,
+	0x78016c8,0xaa0c188,0xcc00000,0x0000000,0x649cd08,0xa20e008,0xc7800c0,0x67f4008,
+	0x67f4108,0x93e1248,0xaae0009,0x9288248,0x7801a8a,0xa4f5289,0x914a208,0x78025c9,
+	0xb60c689,0x6800049,0x6800109,0xb4ef248,0xc7ffc00,0x0000000,0x7801648,0xaa18008,
+	0x78016c8,0xa614088,0x0000000,0x8098002,0x80980f0,0xc780a80,0x80c2400,0x64c2208,
+	0x9305248,0x93a22c8,0x9205288,0x92a2308,0x540230c,0x2c0b30b,0x9105388,0x91a2308,
+	0x540430c,0x2c0b30b,0x90053c8,0x90a2308,0x540630c,0x2c0b30b,0x78016c8,0xa63c188,
+	0x80c2408,0x64c2208,0x480330b,0xaa340cc,0x0000000,0x480f2cb,0x9305388,0x93a2308,
+	0x540430c,0x2c0b30b,0x92053c8,0x92a2308,0x540630c,0x2c0b30b,0xc780280,0x0000000,
+	0x48032cb,0x9305288,0x93a2308,0x540230c,0x2c0b30b,0xc7800c0,0x0000000,0xc780600,
+	0x5418249,0x609b309,0x649b309,0x541828a,0x609b30a,0x649b30a,0x541838e,0x609b30e,
+	0x649b30e,0x54183cf,0x609b30f,0x649b30f,0x8098002,0x6bfffcc,0x541030c,0x6bfffcd,
+	0x2c0d30d,0x609820d,0x480330b,0xa6540cc,0x0000000,0xc7800c0,0x0000000,0xc7806c0,
+	0x5410309,0x581030c,0x5410349,0x2c0d30d,0x609810d,0x540430b,0x609800c,0xa813289,
+	0x0000000,0x541030a,0x581030c,0x541034a,0x2c0d30d,0x609820d,0xc780300,0x0000000,
+	0x5410309,0x581030c,0x541034a,0x2c0d30d,0x609810d,0x540430b,0x4c0430c,0x609800c,
+	0xc7800c0,0x0000000,0xc780380,0x480330b,0x541830c,0x2c0c24c,0x483034b,0x541434d,
+	0x2c0d38d,0xa80734c,0x0000000,0x541030e,0x581030c,0x541034f,0x2c0d30d,0x609820d,
+	0x7800b0c,0xa60c38c,0x6800725,0x5801965,0x6bfffcc,0x680001b,0x7802897,0x6800018,
+	0x680001c,0x6800019,0x680001d,0x680001a,0x680001e,0x4000817,0x4000858,0x4000899,
+	0x40008da,0x680800b,0x680070f,0x74002cc,0x40012cb,0x74002db,0x40012cb,0x74002d7,
+	0x40012cb,0x74002d8,0x40012cb,0x74002dc,0x40012cb,0x74002d9,0x40012cb,0x74002dd,
+	0x40012cb,0x74002da,0x40012cb,0x74002de,0xd07fbcf,0x40012cb,0x7c028cc,0x7c0290c,
+	0x961030c,0x80c0700,0x60c270c,0x96105db,0x60c0217,0x961061c,0x780258f,0xaa1800f,
+	0x60c0218,0x961065d,0x60c0219,0x961069e,0x60c021a,0x80c0701,0x60c270c,0x60c0217,
+	0xaa1000f,0x60c0218,0x60c0219,0x60c021a,0x7800a4f,0xb00894f,0x649ce09,0x200826a,
+	0x6035108,0x6803f08,0x6035208,0x6a08008,0x6035008,0x7802108,0xa60c008,0x6803fc8,
+	0x7c02288,0x6800008,0x7c02948,0xac0b94f,0x7802288,0xb613fc8,0xba0c708,0x441c208,
+	0x7c02288,0x6435008,0x580f208,0xbef8048,0xcc00000,0x0000000,0x6435008,0x580f208,
+	0xbef8048,0x0000000,0x6435308,0x900c208,0xa6f8008,0x0000000,0x649ce09,0x200826a,
+	0x6035108,0x6803f08,0x6035208,0x6b0c008,0x6035008,0x5401225,0xac0520f,0x6800088,
+	0x7c022c8,0xc7ff8c0,0x7c02308,0x681000a,0x20092aa,0x649ce0a,0x2009289,0x54012a5,
+	0x200a94a,0x680008b,0x7c022cb,0x68000cb,0x6435008,0x580f208,0xbef8048,0x6803f08,
+	0x6035109,0x6035208,0x6a08008,0x6035008,0xac0328f,0xc7ff3c0,0x7c0230b,0x6808008,
+	0x2009209,0x200a94a,0xc7ffc80,0x40012cb,0x400134d,0x480f34d,0x7c0230d,0x980c38c,
+	0x78022cd,0x54092cd,0x200ba8b,0x649ce0a,0x200b28b,0x400134d,0x480f34d,0x7c022cd,
+	0x643500d,0x580f34d,0xbef804d,0x0000000,0x643530d,0x900c34d,0xa6f800d,0x0000000,
+	0x603510b,0x6803f0b,0x603520b,0xc7fed80,0x603500c,0x780234c,0xa60c00c,0x440120c,
+	0x6800088,0xaa14008,0x6a01009,0xaa0c048,0x6a22009,0x6a40009,0x6c00109,0x60e0509,
+	0x7c02388,0x7802789,0x680180a,0x9502289,0x60c210a,0x80c260e,0x680004a,0x7c0298a,
+	0x7802109,0x7c02249,0x78029c9,0x7c02a09,0x6800089,0xcc00000,0x7c02809,0xcc00000,
+	0x0400000,0x64e1226,0x91e19a6,0xbef0066,0x7802826,0xaa480a6,0xc782c40,0x6800027,
+	0x6c04027,0x78029a9,0x97c19e9,0x60e1227,0x7802167,0xa210067,0x40005ab,0x6900016,
+	0x2016ad6,0x649ce26,0x2016996,0x6800026,0x7c027a6,0xc7825c0,0x6800126,0x78027a7,
+	0xaa080a7,0xc781340,0x7802628,0xaeb00a8,0x78029a9,0xaa50725,0x7802266,0x54069a6,
+	0x7802168,0x5801a28,0xbe10068,0x40009eb,0x6900027,0x2027ae7,0x649ce28,0x2027a27,
+	0x20269e6,0x44409a6,0x60e1326,0xaa48029,0x40c05a6,0x6805c28,0x60c2128,0xc780380,
+	0x4040596,0x54059a6,0x7802168,0xbe10068,0x40009eb,0x6900027,0x2027ae7,0x649ce28,
+	0x2027a27,0x20269e6,0x44209a6,0x60e1326,0x40605a6,0x78023a8,0xaa14028,0x6a2c227,
+	0xaa0c068,0x6a2c027,0x6a2c127,0xaa10029,0x6c04027,0x68003e6,0x95069e6,0x97c19e9,
+	0x60e1227,0x6800026,0x7c027a6,0x6800126,0xc781dc0,0x7c02826,0x78023e7,0x7802428,
+	0x96109e8,0x7802868,0x2427a27,0x2427a27,0x78029a9,0xaa0c029,0x2427a27,0x2427a27,
+	0x78026e6,0x54099a6,0x20269e6,0x54039e6,0x649ce28,0x2027a27,0x60e1327,0x78023a8,
+	0xaa34028,0x6a44227,0xaa2c068,0x6a44027,0xc780240,0x6a44127,0xa64c0e7,0x78027e6,
+	0x64e0c28,0x9010a28,0xb8e4a26,0xcc00000,0x0400000,0xaa10029,0x6c0c027,0x68005e6,
+	0x95069e6,0x97c19e9,0x60e1227,0x6800016,0x6800026,0x7c027a6,0x6800166,0xc781300,
+	0x7c02826,0x7802667,0xaa1c027,0x44019e7,0x7c02667,0x7802627,0x44019e7,0xc780f80,
+	0x7c02627,0x7802467,0x7c024e7,0x78024a6,0x7c02526,0x96109e6,0x78026e6,0x54099a6,
+	0x20269e6,0x7802868,0x2027a27,0x7c02467,0x92109e7,0x7c024a7,0x54039e6,0x649ce28,
+	0x2027a27,0x60e1327,0x78023a8,0xaa14028,0x6a16227,0xaa0c068,0x6a16027,0x6a16127,
+	0x7802a28,0xaa30028,0x78027e6,0x64e0c28,0x9010a28,0xb806a26,0x78024e8,0x7c02468,
+	0x7802528,0xc7fd780,0x7c024a8,0x40019a6,0x7c027e6,0x7c02567,0x6c00027,0x60e1227,
+	0x6800066,0xc780680,0x7c02826,0xba58126,0x78029a7,0xa608027,0xc7ff2c0,0x78027e7,
+	0x40019e7,0x7c027e7,0xaa0c126,0x6800027,0x80c2170,0xc780300,0x7c029a7,0xa6d0066,
+	0x7802627,0xaa30027,0x44019e7,0xb228067,0x7c02627,0x7802766,0xaa0c0e6,0x0000000,
+	0x80c2170,0x6800026,0x7c02826,0xcc00000,0x0400000,0xc780540,0x0000000,0xa610026,
+	0x40005ab,0x6900016,0x2016ad6,0x649ce28,0xc780b40,0x2016a16,0xaa0c725,0x90a8996,
+	0x90c7996,0x7800a68,0xb827a26,0xa8f4a26,0x91c1996,0xa62c026,0x40005ab,0x6900016,
+	0xc780200,0x2016ad6,0x78023e7,0x7802428,0xaa74016,0x96109e8,0xc7ffc00,0x0000000,
+	0x649ce28,0x2016a16,0x78026e6,0x54099a6,0x7802868,0x2427a27,0x20269e6,0x54039e6,
+	0x649ce26,0x20279a7,0x60e1327,0x7802566,0x90049e6,0xaa14027,0x6a14226,0xaa0c127,
+	0x6a14026,0x6a14126,0x6c08026,0x60e0d16,0xaa0c725,0x4020596,0x4020596,0xc7ff300,
+	0x60e1226,0x78026e6,0x54099a6,0x20269e6,0x7802868,0x2027a27,0x7c023e7,0x92109e7,
+	0x7c02427,0x54039e6,0x649ce26,0x20279a7,0x60e1327,0x7802566,0xa618016,0x9c261e6,
+	0x60e1226,0x68000e6,0xc7fee40,0x7c02826,0x6c08026,0x60e0d16,0xaae8725,0x4020596,
+	0xc7ffe00,0x4020596,0x64e120a,0x91e128a,0xbef804a,0x64e000a,0x64e030b,0x64e0e0c,
+	0x64e0c0d,0x680100e,0x609840e,0x8098400,0x680020e,0xd00000e,0x0000000,0x60e000a,
+	0x60e030b,0x60e0e0c,0xcc00000,0x60e0c0d,0xc000d00,0x0000000,0x681010a,0x6c3474a,
+	0x609070a,0x6490b0a,0x980a00a,0x980a0ca,0x6090b0a,0x9c0a00a,0x9c0a0ca,0x6090b0a,
+	0x649ce0b,0x200a2eb,0x609440a,0x690000a,0x200aaca,0x649ce0b,0x200a2ca,0x609450a,
+	0xcc00000,0x0000000,0xc000b40,0x0000000,0x8095007,0x8095000,0x6800049,0x7800a4b,
+	0x68002ca,0xb00328b,0x0000000,0x6800009,0x6498e0b,0x97c12c9,0x6098e0b,0x6497f09,
+	0x68000cb,0x970224b,0x6097f09,0x6820889,0x6c00209,0x6095109,0x7800a4b,0xb20c2cb,
+	0x680040b,0x6800c0b,0x6495109,0x970624b,0x9809649,0x6095109,0xcc00000,0x0000000,
+	0x683ffc9,0x649090a,0xa21004a,0xaa0c009,0xc7fff40,0x4401249,0x6490b0a,0x980a00a,
+	0x980a0ca,0x6090b0a,0x9c0a00a,0x9c0a0ca,0x6090b0a,0xcc00000,0x0000000,0x683ffca,
+	0x649530b,0x90012cb,0x649bb09,0x920c249,0x20092c9,0xaa10009,0xaa0c00a,0xc7ffe40,
+	0x440128a,0xcc00000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x6bff7c0,0x6032400,0x0400000,0xc780000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,0x0000000,
+	0xcc00000,0x0400000,0xcc00000,0x0400000,0xcc00000,0x0400000,0xcc00000,0x0400000,
+	0xcc00000,0x0400000,0xc780200,0x6431e07,0xcc00000,0x0400000,0xcc00000,0x0400000,
+	0xcc00000,0x0400000,0x9027207,0xa668048,0x68fdfca,0x6fcffca,0x64e0408,0x2808288,
+	0x9110287,0x64c0909,0xac0924a,0xb80324a,0xc7801c0,0x9808688,0x400128a,0x98083c8,
+	0xa40324a,0x440128a,0x98086c8,0xaa1000a,0x9308287,0xa60c00a,0x400128a,0x9808388,
+	0xb80324a,0x0000000,0x98081c8,0xc780080,0x60e0408,0x8031e00,0xcc00000,0x0400000,
+	0x0000000,0x0000000
+};
diff --git a/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.c b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.c
new file mode 100755
index 000000000000..2da32dccaad7
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.c
@@ -0,0 +1,38 @@
+/*
+ * AMLOGIC Audio/Video streaming port driver.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the named License,
+ * or any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
+ *
+ * Author:  Tim Yao <timyao@amlogic.com>
+ *
+ */
+
+#include <linux/types.h>
+
+#define MicroCode vh264_4k2k_mc
+#include "h264c_linux.h"
+
+#undef MicroCode
+#define MicroCode vh264_4k2k_header_mc
+#include "h264header_linux.h"
+
+#undef MicroCode
+#define MicroCode vh264_4k2k_mmco_mc
+#include "h264mmc_linux.h"
+
+#undef MicroCode
+#define MicroCode vh264_4k2k_slice_mc
+#include "h264slice_linux.h"
+
diff --git a/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.h b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.h
new file mode 100755
index 000000000000..c7fa365e81ea
--- /dev/null
+++ b/drivers/amlogic/amports/m6tvd/ucode/h264_4k2k/vh264_4k2k_mc.h
@@ -0,0 +1,30 @@
+/*
+ * AMLOGIC Audio/Video streaming port driver.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the named License,
+ * or any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
+ *
+ * Author:  Tim Yao <timyao@amlogic.com>
+ *
+ */
+
+#ifndef VH264_4K2K_MC_H
+#define VH264_4K2K_MC_H
+
+extern const u32 vh264_4k2k_mc[0x1000];
+extern const u32 vh264_4k2k_header_mc[0x400];
+extern const u32 vh264_4k2k_mmco_mc[0x800];
+extern const u32 vh264_4k2k_slice_mc[0x1000];
+
+#endif
diff --git a/drivers/amlogic/amports/m8/ucode/h264_4k2k/h264c_linux.h b/drivers/amlogic/amports/m8/ucode/h264_4k2k/h264c_linux.h
index de453dfd799d..4d416bd36493 100755
--- a/drivers/amlogic/amports/m8/ucode/h264_4k2k/h264c_linux.h
+++ b/drivers/amlogic/amports/m8/ucode/h264_4k2k/h264c_linux.h
@@ -14,7 +14,7 @@ const u32 MicroCode[] __attribute__ ((aligned (8))) = {
 	0x6034201,0x649ce01,0x2000040,0x6034100,0x6a10000,0x6c001c0,0x6034000,0xa60c042,
 	0xc000980,0x0000000,0xa60c082,0xc000ac0,0x0000000,0xa60c0c2,0xc000a80,0x0000000,
 	0x6434000,0x580f000,0xbef8040,0xcc00000,0x0000000,0x649d100,0xaa180c0,0x6840000,
-	0x6819b01,0xc07f9c0,0x6800082,0x809d103,0x6bffd80,0x6030400,0x809ca04,0xc78e040,
+	0x6819a81,0xc07f9c0,0x6800082,0x809d103,0x6bffd80,0x6030400,0x809ca04,0xc78e040,
 	0x0400000,0x649d100,0xaa18100,0x68c0000,0x6821401,0xc07f6c0,0x68000c2,0x809d104,
 	0x6bffe80,0x6030400,0x6810ec3,0x809ca06,0xc78dd00,0x0400000,0x6800000,0x7c012c0,
 	0x7c01540,0x6803fc0,0x7c014c0,0x7c01500,0xcc00000,0x0000000,0xcc00000,0x0000000,
diff --git a/drivers/amlogic/amports/m8/ucode/h264_4k2k/h264mmc_linux.h b/drivers/amlogic/amports/m8/ucode/h264_4k2k/h264mmc_linux.h
index ee3f61aa36d5..e505934620de 100755
--- a/drivers/amlogic/amports/m8/ucode/h264_4k2k/h264mmc_linux.h
+++ b/drivers/amlogic/amports/m8/ucode/h264_4k2k/h264mmc_linux.h
@@ -1,7 +1,7 @@
 const u32 MicroCode[] __attribute__ ((aligned (8))) = {
 	0x7801658,0x7801508,0xa613fc8,0x0000000,0x6800008,0x7c01508,0xa60c018,0x4000658,
 	0xc783540,0xaa0c008,0x6800049,0x6800089,0x700024a,0x780000b,0xa83c2ca,0x740024b,
-	0x649cd09,0xbe0e009,0xc780940,0x0000000,0x67f290a,0xa20c04a,0xc018040,0x901e28a,
+	0x649cd09,0xbe0e009,0xc780940,0x0000000,0x67f290a,0xa20c04a,0xc017fc0,0x901e28a,
 	0x7800809,0x97082c9,0x78009c9,0x96082c9,0x609c10b,0x40012c8,0x609c00b,0x8007401,
 	0x649c00b,0xa6fc00b,0x0000000,0x649c10b,0x63f2d0b,0x910828b,0x7c001ca,0x900828b,
 	0x7c0020a,0x649c20b,0x63f2e0b,0x7c0014b,0x92102cb,0x7c0018b,0xc0061c0,0x0000000,
@@ -10,50 +10,50 @@ const u32 MicroCode[] __attribute__ ((aligned (8))) = {
 	0x92102cb,0x7c0018b,0x83f2d00,0x83f2e00,0x67f2a08,0x4002208,0x9c08008,0x9c087c8,
 	0x9c08788,0x63f2a08,0x7801188,0xa62c148,0x7801508,0xa624008,0x6800008,0x7c01bc8,
 	0x7c01c08,0x7c01c48,0x649cd09,0xbe16009,0xc780540,0x0000000,0xc780800,0x0000000,
-	0x67f290a,0xc017200,0x901e28a,0xc009f00,0x0000000,0x67f2908,0x93c2248,0xaa100c9,
+	0x67f290a,0xc017180,0x901e28a,0xc009e80,0x0000000,0x67f2908,0x93c2248,0xaa100c9,
 	0xaa0c009,0xc780480,0x0000000,0x4002208,0x9c08008,0x9c087c8,0x9c08788,0xc780300,
-	0x63f2908,0x67f2a08,0xc016940,0x901e288,0x67f2a08,0x4002208,0x9c08008,0x9c087c8,
+	0x63f2908,0x67f2a08,0xc0168c0,0x901e288,0x67f2a08,0x4002208,0x9c08008,0x9c087c8,
 	0x9c08788,0xc780080,0x63f2a08,0x6800008,0x7c000c8,0x7c00108,0x649cd09,0xbe6e009,
 	0x0000000,0x67f2a0a,0x93c220a,0xb20c048,0x901e28a,0x400128a,0x6800048,0x97c2288,
 	0x63f2a0a,0xbe2804a,0x0000000,0x67f2a0a,0x6800088,0x97c2288,0x63f2a0a,0x69fffca,
-	0x7c0218a,0xc7edec0,0x809ca01,0x901e28a,0xc0160c0,0x440128a,0xc016d40,0x0000000,
+	0x7c0218a,0xc7edec0,0x809ca01,0x901e28a,0xc016040,0x440128a,0xc016cc0,0x0000000,
 	0xc7803c0,0x0000000,0x67f290a,0x93c220a,0xb20c048,0x901e28a,0x400128a,0x6800048,
-	0x97c2288,0x63f290a,0x901e28a,0xbe1004a,0xaa0c00a,0xc015e80,0x440128a,0xc004840,
+	0x97c2288,0x63f290a,0x901e28a,0xbe1004a,0xaa0c00a,0xc015e00,0x440128a,0xc004840,
 	0x0000000,0xa26e00b,0x910820b,0xbe32008,0x780150b,0xaa0c00b,0x68000cb,0x680010b,
 	0x680004a,0x340a20a,0x6bfffc8,0x300a20a,0x70002c8,0x2808288,0x74002c8,0x649cd09,
 	0xbe2a009,0x0000000,0x67f2509,0x93e1249,0xa618009,0x0000000,0x6800009,0x98097c9,
 	0x63f2409,0x63f2509,0xc7ed280,0x809ca07,0x7c01b09,0x7c01b8a,0x7801508,0xa62c008,
 	0x900820b,0x7c02008,0x7800248,0xa60c008,0x6800048,0x7c01588,0x6800008,0x7c00248,
 	0x7801588,0x7c02048,0x649cd09,0xbe22009,0x0000000,0x67f2a0a,0x6800088,0x97c2288,
-	0x63f2a0a,0xc780300,0x83f2500,0xc0155c0,0x0000000,0x67f290a,0x6800088,0x97c2288,
-	0x63f290a,0xc012400,0x0000000,0xc010e80,0x0000000,0x78016c8,0xaa08088,0xc780980,
-	0x7801189,0xaa20149,0x7801149,0xaa18009,0x0000000,0xfc01240,0xaa0c009,0xc00c840,
+	0x63f2a0a,0xc780300,0x83f2500,0xc015540,0x0000000,0x67f290a,0x6800088,0x97c2288,
+	0x63f290a,0xc012380,0x0000000,0xc010e00,0x0000000,0x78016c8,0xaa08088,0xc780980,
+	0x7801189,0xaa20149,0x7801149,0xaa18009,0x0000000,0xfc01240,0xaa0c009,0xc00c7c0,
 	0x0000000,0xc06ee00,0x80c2301,0xc06ee80,0x0000000,0x401a205,0x7800ec9,0x2008248,
 	0x7c01a48,0x7800f48,0xaa40008,0x680000a,0xc06eb40,0x80c2301,0xaa30045,0x9402285,
 	0xc06ea40,0x80c2301,0xc06eac0,0x0000000,0x94c4285,0xc06e900,0x80c2301,0xc06e980,
 	0x0000000,0x9444285,0x60c310a,0xc7ec040,0x809ca05,0xaa08148,0xc781240,0xaa4c019,
-	0xc0081c0,0x7801748,0x7801508,0xaa3c008,0x7802048,0xaa34008,0x7801548,0xaa0c008,
+	0xc008140,0x7801748,0x7801508,0xaa3c008,0x7802048,0xaa34008,0x7801548,0xaa0c008,
 	0x7901448,0x79013c8,0x6bfffc9,0xa807248,0x7801b09,0x7802008,0x4c80208,0x7400248,
-	0x4001249,0x7c01b09,0xfc01200,0xaa10008,0x7801956,0xc00cbc0,0x6808011,0xaa18019,
-	0x6808008,0x7801b0a,0x7801953,0xc00a9c0,0x6800012,0x7800e48,0x4000248,0xaa34008,
+	0x4001249,0x7c01b09,0xfc01200,0xaa10008,0x7801956,0xc00cb40,0x6808011,0xaa18019,
+	0x6808008,0x7801b0a,0x7801953,0xc00a940,0x6800012,0x7800e48,0x4000248,0xaa34008,
 	0x6094209,0xc06de00,0x80c2301,0x9484245,0xc06dd40,0x80c2301,0x9504245,0x6094209,
-	0x680c008,0x6094008,0xc0128c0,0x780194a,0x6494008,0x9c08248,0x6094008,0x7801148,
+	0x680c008,0x6094008,0xc012840,0x780194a,0x6494008,0x9c08248,0x6094008,0x7801148,
 	0xaa38008,0x0000000,0x7801188,0xa61c148,0x0000000,0xfc01200,0x7c019c8,0xfc01200,
-	0xc780180,0x7c01a08,0xfc01200,0xaa0c008,0xc00b100,0x0000000,0x7800d48,0xaa18008,
+	0xc780180,0x7c01a08,0xfc01200,0xaa0c008,0xc00b080,0x0000000,0x7800d48,0xaa18008,
 	0x6800c09,0xc06d600,0x80c2301,0x9402245,0x60c2109,0xc7fe700,0x0000000,0xaa68019,
-	0xc007a40,0x0000000,0xc007d40,0x6808008,0x7c01fc8,0x7801b08,0x4020208,0xc008880,
+	0xc0079c0,0x0000000,0xc007cc0,0x6808008,0x7c01fc8,0x7801b08,0x4020208,0xc008800,
 	0x7c01b48,0x7801508,0xaa3c008,0x7802048,0xaa34008,0x7801548,0xaa0c008,0x7901448,
 	0x79013c8,0x6bfffc9,0xa807248,0x7801b09,0x7802008,0x4c80208,0x7400248,0x4001249,
-	0x7c01b09,0xfc01200,0xaa10008,0x7801956,0xc00b800,0x6808011,0xaa44019,0x7801508,
+	0x7c01b09,0xfc01200,0xaa10008,0x7801956,0xc00b780,0x6808011,0xaa44019,0x7801508,
 	0xaa3c008,0x7802048,0xaa34008,0x7801548,0xaa0c008,0x7901488,0x7901408,0x6bfffc9,
 	0xa807248,0x7801b49,0x7802008,0x4c80208,0x7400248,0x4001249,0x7c01b49,0xfc01200,
-	0xaa24008,0x7801b48,0x7c01b08,0x7801996,0xc00b200,0x6808811,0x7801b48,0x4420208,
-	0x7c01b08,0xaa50019,0x6808008,0x7801b0a,0x7801953,0xc008f40,0x6800012,0x6808808,
-	0x7801b4a,0x7801993,0xc008e00,0x6800212,0xc0095c0,0x6808808,0x6808808,0x7000208,
+	0xaa24008,0x7801b48,0x7c01b08,0x7801996,0xc00b180,0x6808811,0x7801b48,0x4420208,
+	0x7c01b08,0xaa50019,0x6808008,0x7801b0a,0x7801953,0xc008ec0,0x6800012,0x6808808,
+	0x7801b4a,0x7801993,0xc008d80,0x6800212,0xc009540,0x6808808,0x6808808,0x7000208,
 	0x5418208,0x609b308,0x649b308,0x48ff208,0x7c01a88,0x7800e88,0xa60c088,0x6800009,
 	0x6815409,0x9402248,0xa644048,0x6094209,0xc06bf40,0x80c2301,0x9484245,0xc06be80,
-	0x80c2301,0x9504245,0x6094209,0x680c008,0x6094008,0xc010a00,0x780194a,0x680d808,
-	0x6094008,0xc010900,0x780198a,0xc7fe040,0x0000000,0x7801508,0xaa0c008,0x6804049,
+	0x80c2301,0x9504245,0x6094209,0x680c008,0x6094008,0xc010980,0x780194a,0x680d808,
+	0x6094008,0xc010880,0x780198a,0xc7fe040,0x0000000,0x7801508,0xaa0c008,0x6804049,
 	0x6806049,0x6800008,0x780020a,0x7400248,0xd07ffca,0x4008249,0xcc00000,0x0000000,
 	0xc0013c0,0x6a0200b,0x649cd09,0xa226009,0x67f2909,0xa21c049,0xc06d2c0,0x0000000,
 	0x67f2609,0x93e1249,0xaaf0009,0x0000000,0x6808009,0x680900a,0x680000c,0x7801508,
@@ -77,7 +77,7 @@ const u32 MicroCode[] __attribute__ ((aligned (8))) = {
 	0x740038f,0x400138e,0x6810010,0x7801151,0xaa3c011,0x6bfffd1,0x4c0c410,0x7800151,
 	0x7800192,0x9610452,0xe0003d1,0x7801512,0xaa0c012,0x649d612,0x649d712,0xf000440,
 	0xf0103c0,0x970844f,0x2011491,0x64c3d0f,0x91613cf,0xa6f800f,0x0000000,0x60c3811,
-	0x78017d1,0x94c2411,0x7400390,0xc009140,0x0000000,0x7800290,0x69fff8f,0xa81640f,
+	0x78017d1,0x94c2411,0x7400390,0xc0090c0,0x0000000,0x7800290,0x69fff8f,0xa81640f,
 	0x78016cf,0xa62c08f,0x780150f,0xaa1000f,0x69fffcf,0xa80e40f,0xc7803c0,0xa80e40f,
 	0x7c00292,0x69fff8f,0xc7802c0,0x7c0028f,0x69fffcf,0xa80640f,0x91e13d0,0xaa0c00f,
 	0x6c00010,0x6ffffd0,0xb403412,0x680004f,0x7c0208f,0x4000812,0x7000390,0x780208f,
@@ -87,122 +87,122 @@ const u32 MicroCode[] __attribute__ ((aligned (8))) = {
 	0x9210451,0x400138e,0x7400391,0x400138e,0x7801750,0x7400390,0x6806010,0xb40c40e,
 	0x440638e,0x6804010,0x240e40e,0x580238e,0x6802b10,0x200e40e,0x78011d0,0x7400390,
 	0x7801210,0x400138e,0x7400390,0x7801511,0xaa10011,0x900844b,0x7800212,0x2011491,
-	0x5401491,0x2011491,0x649c612,0x2011491,0x4000491,0x4001451,0x9508491,0x4001451,
-	0x9608491,0x609b212,0x609b012,0x609b112,0x6800011,0x98117d1,0x9008492,0x9688452,
-	0x649cd12,0xa20e012,0xc7800c0,0x63f4111,0x63f4011,0xcc00000,0x0000000,0x7801508,
-	0xaa0c008,0xcc00000,0x0000000,0x680000f,0xc000340,0x680400b,0x4000512,0x7800089,
-	0x780000a,0xa405289,0x680004f,0xc000180,0x680600b,0xa6c8012,0xa6c4014,0xcc00000,
-	0x0000000,0x6800012,0x6bfffca,0x6dfffca,0x7800213,0x6bfffcd,0x400134d,0xb41b4cd,
-	0x400038d,0x400044e,0x540338e,0x200e2ce,0x400138e,0x700038c,0xa21004c,0x9c0c00c,
-	0xc7ffd80,0x740038c,0x914224c,0xa6cc049,0x910130c,0xaa0c00c,0x400138e,0x400238e,
-	0x400130e,0x700038e,0x700030c,0x961038c,0xb0ea38a,0x0000000,0x6800052,0x400028e,
-	0xc7ff980,0x4000411,0xaa0c012,0xc00a740,0x0000000,0xcc00000,0x0000000,0x680004c,
-	0x780090b,0x340c2cc,0x6808009,0x7801b0f,0xb8033c9,0xcc00000,0x0000000,0x780150b,
-	0xaa0c00b,0x680400b,0x680600b,0x700024a,0x540328a,0x200a2ca,0x400628a,0x700028a,
-	0xb00320a,0x4000349,0x240a30a,0x400134d,0xb4113cd,0x700034e,0x540338e,0x200e2ce,
-	0x400638e,0x700038e,0xb00320e,0x0000000,0x240e30e,0xb4f638a,0x0000000,0x400028e,
-	0x700024e,0x7000350,0x740034e,0xc7ffc00,0x7400250,0x4001249,0xb8e53c9,0xcc00000,
-	0x0000000,0x6808009,0x7801b0a,0x240a24a,0x78009c9,0xac0324a,0xcc00000,0x0000000,
-	0xc07f3c0,0x7801748,0x6808009,0x78009ca,0x2009289,0xcc00000,0x7c01b09,0x6808009,
-	0x7801b0f,0x780150b,0xaa0c00b,0x680400b,0x680600b,0x700024a,0x540328a,0x200a2ca,
-	0x400128a,0x700028c,0x910130c,0xaa0c00c,0x400128a,0x400228a,0x400130a,0x700028a,
-	0x700030c,0x961028c,0x4000349,0x400134d,0xb4163cd,0x700034e,0x540338e,0x200e2ce,
+	0x5401451,0x649c612,0x2011491,0x4000491,0x4001451,0x9508491,0x9608491,0x609b212,
+	0x609b012,0x609b112,0x6800011,0x98117d1,0x9008492,0x9688452,0x649cd12,0xa20e012,
+	0xc7800c0,0x63f4111,0x63f4011,0xcc00000,0x0000000,0x7801508,0xaa0c008,0xcc00000,
+	0x0000000,0x680000f,0xc000340,0x680400b,0x4000512,0x7800089,0x780000a,0xa405289,
+	0x680004f,0xc000180,0x680600b,0xa6c8012,0xa6c4014,0xcc00000,0x0000000,0x6800012,
+	0x6bfffca,0x6dfffca,0x7800213,0x6bfffcd,0x400134d,0xb41b4cd,0x400038d,0x400044e,
+	0x540338e,0x200e2ce,0x400138e,0x700038c,0xa21004c,0x9c0c00c,0xc7ffd80,0x740038c,
+	0x914224c,0xa6cc049,0x910130c,0xaa0c00c,0x400138e,0x400238e,0x400130e,0x700038e,
+	0x700030c,0x961038c,0xb0ea38a,0x0000000,0x6800052,0x400028e,0xc7ff980,0x4000411,
+	0xaa0c012,0xc00a740,0x0000000,0xcc00000,0x0000000,0x680004c,0x780090b,0x340c2cc,
+	0x6808009,0x7801b0f,0xb8033c9,0xcc00000,0x0000000,0x780150b,0xaa0c00b,0x680400b,
+	0x680600b,0x700024a,0x540328a,0x200a2ca,0x400628a,0x700028a,0xb00320a,0x4000349,
+	0x240a30a,0x400134d,0xb4113cd,0x700034e,0x540338e,0x200e2ce,0x400638e,0x700038e,
+	0xb00320e,0x0000000,0x240e30e,0xb4f638a,0x0000000,0x400028e,0x700024e,0x7000350,
+	0x740034e,0xc7ffc00,0x7400250,0x4001249,0xb8e53c9,0xcc00000,0x0000000,0x6808009,
+	0x7801b0a,0x240a24a,0x78009c9,0xac0324a,0xcc00000,0x0000000,0xc07f3c0,0x7801748,
+	0x6808009,0x78009ca,0x2009289,0xcc00000,0x7c01b09,0x6808009,0x7801b0f,0x780150b,
+	0xaa0c00b,0x680400b,0x680600b,0x700024a,0x540328a,0x200a2ca,0x400128a,0x700028c,
+	0x910130c,0xaa0c00c,0x400128a,0x400228a,0x400130a,0x700028a,0x700030c,0x961028c,
+	0x4000349,0x400134d,0xb4163cd,0x700034e,0x540338e,0x200e2ce,0x400138e,0x700038c,
+	0x910130c,0xaa0c00c,0x400138e,0x400238e,0x400130e,0x700038e,0x700030c,0x961038c,
+	0xb4f138a,0x0000000,0x400028e,0x700024e,0x7000350,0x740034e,0xc7ffac0,0x7400250,
+	0xb00380a,0x0000000,0x4001208,0x4001249,0xb8d73c9,0xcc00000,0x0000000,0x6808809,
+	0x680800a,0x7801fc8,0x4401208,0xb806288,0x700020b,0x740024b,0x4001249,0xc7fff00,
+	0x4401208,0x7801fc8,0x7801b0a,0xb406288,0x700020b,0x740024b,0x4001249,0xc7fff00,
+	0x4001208,0x6808009,0x7801b0a,0x7801fc8,0xb406288,0x700020b,0x740024b,0x4001249,
+	0xc7fff00,0x4001208,0x6808808,0x7801fca,0x402028a,0xb406288,0x700020b,0x740024b,
+	0x4001249,0xc7fff00,0x4001208,0xcc00000,0x0000000,0xa23600e,0x487f38e,0x400040e,
+	0x54013d0,0x200f40f,0x40103cf,0x60c240f,0x540830c,0x9405310,0x540338e,0x6804010,
+	0xc7802c0,0x200e40e,0x201044e,0x54013d0,0x200f40f,0x40103cf,0x60c240f,0x540830c,
+	0x9405310,0x540338e,0x200e34e,0x400138e,0x7000390,0x60c2210,0x90c23d0,0xaa0c0cf,
+	0x0000000,0x40013cf,0x94a230f,0x400138e,0x700038f,0x400138e,0x7000390,0x96103d0,
+	0x60c220f,0x400138e,0x700038f,0x400138e,0x7000390,0x96103d0,0xcc00000,0x60c220f,
+	0x680000b,0x680000c,0x6800011,0x780150d,0xaa1000d,0x680400d,0x680600d,0x7800211,
+	0xb40d288,0xac0c4cb,0xc07f2c0,0x700020e,0x90023cb,0xa6140cf,0x58023cb,0x200f48f,
+	0x60c240f,0x60c220c,0x40012cb,0xc7ffd40,0x4001208,0xa2280cb,0x580234b,0x200d48d,
+	0x60c240d,0x90022cb,0x680010d,0x240b2cd,0x54032cb,0x340c2cc,0x60c220c,0xcc00000,
+	0x0000000,0x7000208,0x5403208,0x7801509,0xaa0c009,0x6804009,0x6806009,0x2008248,
+	0x700020f,0x90043cf,0x7800151,0x7800192,0x9610452,0xe0003d1,0x7801512,0xaa0c012,
+	0x649d612,0x649d712,0xf000440,0xf0103c0,0x970844f,0x2011491,0x5803451,0x4001208,
+	0x700020f,0x90c23cf,0x97c244f,0x60c3911,0xcc00000,0x0000000,0xc0626c0,0x80c2301,
+	0xaa20005,0xae18185,0xa610045,0xc0001c0,0x0000000,0xc7ffe40,0xc780000,0xc780000,
+	0xcc00000,0x0000000,0xc0623c0,0x80c2301,0xa608019,0xcc00000,0x4001205,0x7801749,
+	0x6800055,0x780090f,0x34153d5,0xb403209,0x2410209,0x2010550,0x78017c8,0xb610088,
+	0x0000000,0x2010250,0x4001410,0x6800009,0x780020f,0x780150b,0xaa0c00b,0x680400b,
+	0x680600b,0x5403289,0x200a2ca,0x400128a,0x700028c,0xa21030c,0x400528a,0x700028c,
+	0xa80540c,0x4001249,0xb8f73c9,0xcc00000,0x0000000,0x440528a,0x700028c,0x9c0c0cc,
+	0x9c0c08c,0x9c0c00c,0x740028c,0x440128a,0x700028c,0x481f30c,0x7801508,0xaa0c008,
+	0x68000c8,0x6800108,0x680004a,0x340a30a,0x6bfffcc,0x300a30a,0x7000209,0x2809289,
+	0xcc00000,0x7400209,0x7c020d1,0x7801750,0x6bfffd2,0x7801513,0xaa0c013,0x6804013,
+	0x6806013,0xc061400,0x80c2301,0xaa440c5,0xaaf4019,0xae38145,0xa610005,0xc0003c0,
+	0x0000000,0xc7ffe00,0xa610045,0xc000940,0x0000000,0xc7ffd00,0xa610145,0xc000ac0,
+	0x0000000,0xc7ffc00,0xc780000,0xc780000,0xcc00000,0x0000000,0xc060ec0,0x80c2301,
+	0x4001205,0x6800055,0x7800909,0x3415255,0xb403210,0x2410210,0x2010550,0x4000510,
+	0x78020c8,0x7801b09,0xb40c248,0x700020a,0xbe1a00a,0x540328a,0x200a4ca,0x400628a,
+	0x700028a,0xa80350a,0xc7ffe00,0x4001208,0xc000780,0x0000000,0xcc00000,0x0000000,
+	0xc060840,0x80c2301,0x4001205,0x6800055,0x7800909,0x3415255,0x2010210,0xb8e8550,
+	0xc7ff9c0,0x2410550,0xc0605c0,0x80c2301,0x4001205,0x2012212,0xa628012,0x78020c8,
+	0x7801b09,0xb407248,0x700020a,0xbe0e00a,0xc7fff40,0x4001208,0xc000100,0x0000000,
+	0xcc00000,0x0000000,0x7801b0b,0x700020f,0xb00644b,0x440130b,0x700030c,0x74002cc,
+	0xc7fff00,0x44012cb,0x740044f,0x4001451,0x4000251,0x4000291,0x78020cb,0x200b58b,
+	0x40012cb,0xac072ca,0x700028c,0xa8fe3cc,0x400128a,0x740024c,0xc7ffec0,0x4001249,
+	0x7801b09,0x4001249,0xcc00000,0x7c01b09,0xc780000,0x0000000,0x780094f,0x460040f,
+	0xc480900,0x780098f,0x6800050,0x34173d0,0x5801597,0x7801bd5,0x7801c0f,0x961054f,
+	0x7801c53,0x7801854,0xb4054d4,0x240f513,0xb80758f,0xc780180,0x20155d5,0x240f4d4,
+	0xb00358f,0xc780080,0x24155d5,0x40004d4,0x780114f,0xaa1400f,0x58103d5,0x7c01bd5,
+	0x7c01c0f,0x7c01c53,0x7801794,0xaa100d4,0x20124d5,0xc780bc0,0x4000452,0x780188f,
+	0x78018d0,0x96103d0,0xc780a80,0x20113d2,0x780090f,0x6800050,0x34173d0,0x780118f,
+	0xa61c14f,0x680000f,0x7c01c8f,0x7c01ccf,0x7c01d0f,0x7c01ecf,0x7c01f0f,0x7801c96,
+	0x7801cd5,0x7801d0f,0x961054f,0x7801754,0xb403594,0x0000000,0x20155d5,0x780094f,
+	0x460240f,0xc5000c0,0xc780000,0x0000000,0x780118f,0xa61014f,0x6800012,0xc780280,
+	0x6800011,0x2013515,0x54014d3,0x780114f,0xa60c00f,0x0000000,0x44014d3,0x4000493,
+	0x4000453,0x7c01cd5,0x58103d5,0x7c01d0f,0xb803452,0x4000412,0x4000411,0x7c01d50,
+	0x58103d0,0x7c01d8f,0x7c01dd2,0x58103d2,0x7c01e0f,0x7c01e51,0x58103d1,0x7c01e8f,
+	0x7801754,0xcc00000,0x7c01c94,0x7801148,0xaa1c008,0x6808008,0x78009c9,0x4001249,
+	0x2009209,0x7801b08,0xb403248,0xcc00000,0x0000000,0x6808009,0x7801b0f,0x780150b,
+	0xaa0c00b,0x680400b,0x680600b,0x700024a,0x400040a,0x540328a,0x200a2ca,0x400128a,
+	0x700028c,0x910130c,0xaa0c00c,0x400128a,0x400228a,0x400130a,0x700028a,0x700030c,
+	0x961028c,0x4000349,0x400134d,0xb4143cd,0x700034e,0x400044e,0x540338e,0x200e2ce,
 	0x400138e,0x700038c,0x910130c,0xaa0c00c,0x400138e,0x400238e,0x400130e,0x700038e,
-	0x700030c,0x961038c,0xb4f138a,0x0000000,0x400028e,0x700024e,0x7000350,0x740034e,
-	0xc7ffac0,0x7400250,0xb00380a,0x0000000,0x4001208,0x4001249,0xb8d73c9,0xcc00000,
-	0x0000000,0x6808809,0x680800a,0x7801fc8,0x4401208,0xb806288,0x700020b,0x740024b,
-	0x4001249,0xc7fff00,0x4401208,0x7801fc8,0x7801b0a,0xb406288,0x700020b,0x740024b,
-	0x4001249,0xc7fff00,0x4001208,0x6808009,0x7801b0a,0x7801fc8,0xb406288,0x700020b,
-	0x740024b,0x4001249,0xc7fff00,0x4001208,0x6808808,0x7801fca,0x402028a,0xb406288,
-	0x700020b,0x740024b,0x4001249,0xc7fff00,0x4001208,0xcc00000,0x0000000,0xa23600e,
-	0x487f38e,0x400040e,0x54013d0,0x200f40f,0x40103cf,0x60c240f,0x540830c,0x9405310,
-	0x540338e,0x6804010,0xc7802c0,0x200e40e,0x201044e,0x54013d0,0x200f40f,0x40103cf,
-	0x60c240f,0x540830c,0x9405310,0x540338e,0x200e34e,0x400138e,0x7000390,0x60c2210,
-	0x90c23d0,0xaa0c0cf,0x0000000,0x40013cf,0x94a230f,0x400138e,0x700038f,0x400138e,
-	0x7000390,0x96103d0,0x60c220f,0x400138e,0x700038f,0x400138e,0x7000390,0x96103d0,
-	0xcc00000,0x60c220f,0x680000b,0x680000c,0x6800011,0x780150d,0xaa1000d,0x680400d,
-	0x680600d,0x7800211,0xb40d288,0xac0c4cb,0xc07f2c0,0x700020e,0x90023cb,0xa6140cf,
-	0x58023cb,0x200f48f,0x60c240f,0x60c220c,0x40012cb,0xc7ffd40,0x4001208,0xa2280cb,
-	0x580234b,0x200d48d,0x60c240d,0x90022cb,0x680010d,0x240b2cd,0x54032cb,0x340c2cc,
-	0x60c220c,0xcc00000,0x0000000,0x7000208,0x5403208,0x7801509,0xaa0c009,0x6804009,
-	0x6806009,0x2008248,0x700020f,0x90043cf,0x7800151,0x7800192,0x9610452,0xe0003d1,
-	0x7801512,0xaa0c012,0x649d612,0x649d712,0xf000440,0xf0103c0,0x970844f,0x2011491,
-	0x5803451,0x4001208,0x700020f,0x90c23cf,0x97c244f,0x60c3911,0xcc00000,0x0000000,
-	0xc062640,0x80c2301,0xaa20005,0xae18185,0xa610045,0xc0001c0,0x0000000,0xc7ffe40,
-	0xc780000,0xc780000,0xcc00000,0x0000000,0xc062340,0x80c2301,0xa608019,0xcc00000,
-	0x4001205,0x7801749,0x6800055,0x780090f,0x34153d5,0xb403209,0x2410209,0x2010550,
-	0x78017c8,0xb610088,0x0000000,0x2010250,0x4001410,0x6800009,0x780020f,0x780150b,
-	0xaa0c00b,0x680400b,0x680600b,0x5403289,0x200a2ca,0x400128a,0x700028c,0xa21030c,
-	0x400528a,0x700028c,0xa80540c,0x4001249,0xb8f73c9,0xcc00000,0x0000000,0x440528a,
-	0x700028c,0x9c0c0cc,0x9c0c08c,0x9c0c00c,0x740028c,0x440128a,0x700028c,0x481f30c,
-	0x7801508,0xaa0c008,0x68000c8,0x6800108,0x680004a,0x340a30a,0x6bfffcc,0x300a30a,
-	0x7000209,0x2809289,0xcc00000,0x7400209,0x7c020d1,0x7801750,0x6bfffd2,0x7801513,
-	0xaa0c013,0x6804013,0x6806013,0xc061380,0x80c2301,0xaa440c5,0xaaf4019,0xae38145,
-	0xa610005,0xc0003c0,0x0000000,0xc7ffe00,0xa610045,0xc000940,0x0000000,0xc7ffd00,
-	0xa610145,0xc000ac0,0x0000000,0xc7ffc00,0xc780000,0xc780000,0xcc00000,0x0000000,
-	0xc060e40,0x80c2301,0x4001205,0x6800055,0x7800909,0x3415255,0xb403210,0x2410210,
-	0x2010550,0x4000510,0x78020c8,0x7801b09,0xb40c248,0x700020a,0xbe1a00a,0x540328a,
-	0x200a4ca,0x400628a,0x700028a,0xa80350a,0xc7ffe00,0x4001208,0xc000780,0x0000000,
-	0xcc00000,0x0000000,0xc0607c0,0x80c2301,0x4001205,0x6800055,0x7800909,0x3415255,
-	0x2010210,0xb8e8550,0xc7ff9c0,0x2410550,0xc060540,0x80c2301,0x4001205,0x2012212,
-	0xa628012,0x78020c8,0x7801b09,0xb407248,0x700020a,0xbe0e00a,0xc7fff40,0x4001208,
-	0xc000100,0x0000000,0xcc00000,0x0000000,0x7801b0b,0x700020f,0xb00644b,0x440130b,
-	0x700030c,0x74002cc,0xc7fff00,0x44012cb,0x740044f,0x4001451,0x4000251,0x4000291,
-	0x78020cb,0x200b58b,0x40012cb,0xac072ca,0x700028c,0xa8fe3cc,0x400128a,0x740024c,
-	0xc7ffec0,0x4001249,0x7801b09,0x4001249,0xcc00000,0x7c01b09,0xc780000,0x0000000,
-	0x780094f,0x460040f,0xc480900,0x780098f,0x6800050,0x34173d0,0x5801597,0x7801bd5,
-	0x7801c0f,0x961054f,0x7801c53,0x7801854,0xb4054d4,0x240f513,0xb80758f,0xc780180,
-	0x20155d5,0x240f4d4,0xb00358f,0xc780080,0x24155d5,0x40004d4,0x780114f,0xaa1400f,
-	0x58103d5,0x7c01bd5,0x7c01c0f,0x7c01c53,0x7801794,0xaa100d4,0x20124d5,0xc780bc0,
-	0x4000452,0x780188f,0x78018d0,0x96103d0,0xc780a80,0x20113d2,0x780090f,0x6800050,
-	0x34173d0,0x780118f,0xa61c14f,0x680000f,0x7c01c8f,0x7c01ccf,0x7c01d0f,0x7c01ecf,
-	0x7c01f0f,0x7801c96,0x7801cd5,0x7801d0f,0x961054f,0x7801754,0xb403594,0x0000000,
-	0x20155d5,0x780094f,0x460240f,0xc5000c0,0xc780000,0x0000000,0x780118f,0xa61014f,
-	0x6800012,0xc780280,0x6800011,0x2013515,0x54014d3,0x780114f,0xa60c00f,0x0000000,
-	0x44014d3,0x4000493,0x4000453,0x7c01cd5,0x58103d5,0x7c01d0f,0xb803452,0x4000412,
-	0x4000411,0x7c01d50,0x58103d0,0x7c01d8f,0x7c01dd2,0x58103d2,0x7c01e0f,0x7c01e51,
-	0x58103d1,0x7c01e8f,0x7801754,0xcc00000,0x7c01c94,0x7801148,0xaa1c008,0x6808008,
-	0x78009c9,0x4001249,0x2009209,0x7801b08,0xb403248,0xcc00000,0x0000000,0x6808009,
-	0x7801b0f,0x780150b,0xaa0c00b,0x680400b,0x680600b,0x700024a,0x400040a,0x540328a,
-	0x200a2ca,0x400128a,0x700028c,0x910130c,0xaa0c00c,0x400128a,0x400228a,0x400130a,
-	0x700028a,0x700030c,0x961028c,0x4000349,0x400134d,0xb4143cd,0x700034e,0x400044e,
-	0x540338e,0x200e2ce,0x400138e,0x700038c,0x910130c,0xaa0c00c,0x400138e,0x400238e,
-	0x400130e,0x700038e,0x700030c,0x961038c,0xb0f038a,0x0000000,0x400028e,0xc7ffb40,
-	0x4000411,0xc000100,0x780150f,0xcc00000,0x0000000,0xaa0c00f,0x680400b,0x680600b,
-	0x5403390,0x200e2ce,0x400138e,0x700038c,0xbe0804c,0xa24830c,0x9c0c0cc,0x9c0c08c,
-	0x9c0c00c,0x740038c,0x440138e,0x700038c,0x481f30c,0xaa0c00f,0x68000c8,0x6800108,
-	0x680004a,0x340a30a,0x6bfffcc,0x300a30a,0x7000209,0x2809289,0x7400209,0xcc00000,
-	0x0000000,0x6809008,0x78001c9,0x4001249,0x2009209,0x7801b88,0xb403248,0xcc00000,
-	0x0000000,0x6809009,0x7801b8f,0x780150b,0xaa0c00b,0x680400b,0x680600b,0x700024a,
-	0x400040a,0x540328a,0x200a2ca,0x400128a,0x700028c,0xa21804c,0x0000000,0x4001249,
-	0xb8f73c9,0xcc00000,0x0000000,0x910130c,0xaa0c00c,0x400128a,0x400228a,0x400130a,
-	0x700028a,0x700030c,0x961028c,0x4000349,0x400134d,0xb4153cd,0x700034e,0x400044e,
-	0x540338e,0x200e2ce,0x400138e,0x700038c,0xbee004c,0x910130c,0xaa0c00c,0x400138e,
-	0x400238e,0x400130e,0x700038e,0x700030c,0x961038c,0xb0ef38a,0x0000000,0x400028e,
-	0xc7ffb00,0x4000411,0xc000180,0x780150f,0xaa08011,0xc7ff680,0xcc00000,0x0000000,
-	0x6800011,0xaa0c00f,0x680400b,0x680600b,0x5403390,0x200e2ce,0x400138e,0x700038d,
-	0x400030d,0x980d2cd,0x9c0d28d,0x9c0d0cd,0x9c0d08d,0x9c0d00d,0x740038d,0xa21c30c,
-	0x980d00d,0x740038d,0x6800051,0x440138e,0x700038c,0x481f30c,0x94c240f,0x780070b,
-	0x74002d0,0x40012cb,0x68006cc,0xb80330b,0x0000000,0x68002cb,0x78006cc,0xa40c30b,
-	0x0000000,0x649c70c,0xaa0c00c,0xc05da80,0x0000000,0x649c00c,0xaa0c00c,0xc7ffe80,
-	0x0000000,0xc05e980,0x0000000,0xcc00000,0x7c0070b,0x680000b,0x400128a,0xfc01200,
-	0xaa20048,0x680004c,0x6494208,0x9084208,0x340c20c,0x540830c,0xc780340,0x609410c,
-	0xc05b040,0x80c2301,0xc05b0c0,0x0000000,0x4000305,0xc05af00,0x80c2301,0xc05af80,
-	0x0000000,0x950914c,0x6094105,0xfc01200,0xaa24048,0x680004c,0x6494208,0x9104208,
-	0x340c20c,0x540830c,0x609410c,0xc780600,0x609410c,0xc05ab00,0x80c2301,0xc05ab80,
-	0x0000000,0x4000305,0xc05a9c0,0x80c2301,0xc05aa40,0x0000000,0x950914c,0x6094105,
-	0xc05a840,0x80c2301,0xc05a8c0,0x0000000,0x4000305,0xc05a700,0x80c2301,0xc05a780,
-	0x0000000,0x950914c,0x6094105,0x40012cb,0xb8cb28b,0xcc00000,0x0000000,0x67f290b,
-	0x901e30b,0xac0428c,0xb8fd28c,0x93c230b,0xbaec08c,0xcc00000,0x0000000,0xc05be80,
-	0x0000000,0x67f2a0b,0x901e30b,0xac0428c,0xb8fb28c,0x93c230b,0xbae408c,0xcc00000,
-	0x0000000,0x67f2a0b,0xa21804b,0x901e30b,0xb8fd28c,0xac0328c,0x93c230b,0xa6e80cc,
-	0xcc00000,0x0000000,0x69a0009,0x6c00789,0x680400a,0xc000bc0,0x6a0400b,0x78000c9,
-	0x63f2b09,0x7800109,0x63f2c09,0x7800289,0x63f2809,0x7800249,0x63f2709,0x7801c49,
-	0x63f2309,0x7801bc9,0x7801c0a,0x961024a,0x63f2209,0x7801cc9,0x7801d0a,0x961024a,
-	0x63f2109,0xcc00000,0x0000000,0x69a0009,0x6c00789,0x680400a,0xc000580,0x6b0400b,
-	0x67f2b09,0x7c000c9,0x67f2c09,0x7c00109,0x67f2809,0x7c00289,0x67f2709,0x7c00249,
-	0x67f2309,0x7c01c49,0x67f2209,0x7c01bc9,0x9210249,0x7c01c09,0x67f2109,0x7c01cc9,
-	0x9210249,0x7c01d09,0xcc00000,0x0000000,0x603520a,0x649ce0a,0x200a24a,0x603510a,
-	0x603500b,0x6435009,0x580f249,0xbef8049,0x0000000,0x6435309,0x900c249,0xa6f8009,
-	0x0000000,0xcc00000,0x0000000,0x0000000,0x0000000
+	0x700030c,0x961038c,0xb0f038a,0x0000000,0x400028e,0xc7ffb40,0x4000411,0xc000100,
+	0x780150f,0xcc00000,0x0000000,0xaa0c00f,0x680400b,0x680600b,0x5403390,0x200e2ce,
+	0x400138e,0x700038c,0xbe0804c,0xa24830c,0x9c0c0cc,0x9c0c08c,0x9c0c00c,0x740038c,
+	0x440138e,0x700038c,0x481f30c,0xaa0c00f,0x68000c8,0x6800108,0x680004a,0x340a30a,
+	0x6bfffcc,0x300a30a,0x7000209,0x2809289,0x7400209,0xcc00000,0x0000000,0x6809008,
+	0x78001c9,0x4001249,0x2009209,0x7801b88,0xb403248,0xcc00000,0x0000000,0x6809009,
+	0x7801b8f,0x780150b,0xaa0c00b,0x680400b,0x680600b,0x700024a,0x400040a,0x540328a,
+	0x200a2ca,0x400128a,0x700028c,0xa21804c,0x0000000,0x4001249,0xb8f73c9,0xcc00000,
+	0x0000000,0x910130c,0xaa0c00c,0x400128a,0x400228a,0x400130a,0x700028a,0x700030c,
+	0x961028c,0x4000349,0x400134d,0xb4153cd,0x700034e,0x400044e,0x540338e,0x200e2ce,
+	0x400138e,0x700038c,0xbee004c,0x910130c,0xaa0c00c,0x400138e,0x400238e,0x400130e,
+	0x700038e,0x700030c,0x961038c,0xb0ef38a,0x0000000,0x400028e,0xc7ffb00,0x4000411,
+	0xc000180,0x780150f,0xaa08011,0xc7ff680,0xcc00000,0x0000000,0x6800011,0xaa0c00f,
+	0x680400b,0x680600b,0x5403390,0x200e2ce,0x400138e,0x700038d,0x400030d,0x980d2cd,
+	0x9c0d28d,0x9c0d0cd,0x9c0d08d,0x9c0d00d,0x740038d,0xa21c30c,0x980d00d,0x740038d,
+	0x6800051,0x440138e,0x700038c,0x481f30c,0x94c240f,0x780070b,0x74002d0,0x40012cb,
+	0x68006cc,0xb80330b,0x0000000,0x68002cb,0x78006cc,0xa40c30b,0x0000000,0x649c70c,
+	0xaa0c00c,0xc05db00,0x0000000,0x649c00c,0xaa0c00c,0xc7ffe80,0x0000000,0xc05ea00,
+	0x0000000,0xcc00000,0x7c0070b,0x680000b,0x400128a,0xfc01200,0xaa20048,0x680004c,
+	0x6494208,0x9084208,0x340c20c,0x540830c,0xc780340,0x609410c,0xc05b0c0,0x80c2301,
+	0xc05b140,0x0000000,0x4000305,0xc05af80,0x80c2301,0xc05b000,0x0000000,0x950914c,
+	0x6094105,0xfc01200,0xaa24048,0x680004c,0x6494208,0x9104208,0x340c20c,0x540830c,
+	0x609410c,0xc780600,0x609410c,0xc05ab80,0x80c2301,0xc05ac00,0x0000000,0x4000305,
+	0xc05aa40,0x80c2301,0xc05aac0,0x0000000,0x950914c,0x6094105,0xc05a8c0,0x80c2301,
+	0xc05a940,0x0000000,0x4000305,0xc05a780,0x80c2301,0xc05a800,0x0000000,0x950914c,
+	0x6094105,0x40012cb,0xb8cb28b,0xcc00000,0x0000000,0x67f290b,0x901e30b,0xac0428c,
+	0xb8fd28c,0x93c230b,0xbaec08c,0xcc00000,0x0000000,0xc05bf00,0x0000000,0x67f2a0b,
+	0x901e30b,0xac0428c,0xb8fb28c,0x93c230b,0xbae408c,0xcc00000,0x0000000,0x67f2a0b,
+	0xa21804b,0x901e30b,0xb8fd28c,0xac0328c,0x93c230b,0xa6e80cc,0xcc00000,0x0000000,
+	0x69a0009,0x6c00789,0x680400a,0xc000bc0,0x6a0400b,0x78000c9,0x63f2b09,0x7800109,
+	0x63f2c09,0x7800289,0x63f2809,0x7800249,0x63f2709,0x7801c49,0x63f2309,0x7801bc9,
+	0x7801c0a,0x961024a,0x63f2209,0x7801cc9,0x7801d0a,0x961024a,0x63f2109,0xcc00000,
+	0x0000000,0x69a0009,0x6c00789,0x680400a,0xc000580,0x6b0400b,0x67f2b09,0x7c000c9,
+	0x67f2c09,0x7c00109,0x67f2809,0x7c00289,0x67f2709,0x7c00249,0x67f2309,0x7c01c49,
+	0x67f2209,0x7c01bc9,0x9210249,0x7c01c09,0x67f2109,0x7c01cc9,0x9210249,0x7c01d09,
+	0xcc00000,0x0000000,0x603520a,0x649ce0a,0x200a24a,0x603510a,0x603500b,0x6435009,
+	0x580f249,0xbef8049,0x0000000,0x6435309,0x900c249,0xa6f8009,0x0000000,0xcc00000,
+	0x0000000,0x0000000,0x0000000
 };
diff --git a/drivers/amlogic/amports/streambuf.c b/drivers/amlogic/amports/streambuf.c
index 871fd6e10696..e8951a027065 100755
--- a/drivers/amlogic/amports/streambuf.c
+++ b/drivers/amlogic/amports/streambuf.c
@@ -178,7 +178,7 @@ u32 stbuf_space(struct stream_buf_s *buf)
     /* reserved space for safe write, the parser fifo size is 1024byts, so reserve it */
     int size = (buf->canusebuf_size- _READ_ST_REG(LEVEL)) ;
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
     if ((buf->type == BUF_TYPE_VIDEO) && (vdec_on(VDEC_2))) {
         if ((_READ_VDEC2_ST_REG(START_PTR) == _READ_ST_REG(START_PTR)) &&
             (_READ_VDEC2_ST_REG(END_PTR)   == _READ_ST_REG(END_PTR))   &&
@@ -268,7 +268,7 @@ s32 stbuf_init(struct stream_buf_s *buf)
     return 0;
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 void stbuf_vdec2_init(struct stream_buf_s *buf)
 {
     _WRITE_VDEC2_ST_REG(CONTROL, 0);
diff --git a/drivers/amlogic/amports/streambuf.h b/drivers/amlogic/amports/streambuf.h
index 7b5cd3f164e8..b346554fba3b 100755
--- a/drivers/amlogic/amports/streambuf.h
+++ b/drivers/amlogic/amports/streambuf.h
@@ -98,7 +98,7 @@ extern u32 stbuf_sub_start_get(void);
 extern u32 stbuf_userdata_start_get(void);
 extern stream_buf_t* get_stream_buffer(int id);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 extern void stbuf_vdec2_init(struct stream_buf_s *buf);
 #endif
 
diff --git a/drivers/amlogic/amports/streambuf_reg.h b/drivers/amlogic/amports/streambuf_reg.h
index d164463fe579..738e2b5e8f85 100755
--- a/drivers/amlogic/amports/streambuf_reg.h
+++ b/drivers/amlogic/amports/streambuf_reg.h
@@ -52,7 +52,7 @@
 #define _READ_ST_REG(r) \
     (__raw_readl((volatile void __iomem *)(buf->reg_base+(r<<2))))
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 #define _READ_VDEC2_ST_REG(r) \
     (__raw_readl((volatile void __iomem *)(buf->reg_base + DOS_REG_ADDR(VDEC2_VLD_MEM_VIFIFO_START_PTR) - DOS_REG_ADDR(VLD_MEM_VIFIFO_START_PTR) + (r<<2))))
 #define _WRITE_VDEC2_ST_REG(r, val) \
diff --git a/drivers/amlogic/amports/vdec.c b/drivers/amlogic/amports/vdec.c
index 900de70f92e4..e75c57c623ab 100755
--- a/drivers/amlogic/amports/vdec.c
+++ b/drivers/amlogic/amports/vdec.c
@@ -37,9 +37,7 @@
 #include <linux/of_fdt.h>
 #include <linux/module.h>
 
-#include <linux/platform_device.h>
-
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6TVD
 #include "amvdec.h"
 #endif
 
@@ -119,7 +117,76 @@ HHI_VDEC_CLK_CNTL
     HCODEC_255M(); \
     HCODEC_CLOCK_ON();
 
-#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6TV) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6TVD))
+#elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
+
+/*
+HHI_VDEC_CLK_CNTL..
+bits,9~11:
+0x106d[11:9] :
+0 for fclk_div2,  1GHz
+1 for fclk_div3,  2G/3Hz
+2 for fclk_div5, 2G/5Hz
+3 for fclk_div7, 2G/7HZ
+
+4 for mp1_clk_out
+5 for ddr_pll_clk
+
+bit0~6: div N=bit[0-7]+1
+bit8: vdec.gate
+*/
+#define VDEC1_166M() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, (0 << 9) | (1 << 8) | (5), 0, 16)
+#define VDEC2_166M() WRITE_MPEG_REG(HHI_VDEC2_CLK_CNTL, (0 << 9) | (1 << 8) | (5))
+
+#define VDEC1_200M() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, (0 << 9) | (1 << 8) | (4), 0, 16)
+#define VDEC2_200M() WRITE_MPEG_REG(HHI_VDEC2_CLK_CNTL, (0 << 9) | (1 << 8) | (4))
+
+#define VDEC1_250M() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, (0 << 9) | (1 << 8) | (3), 0, 16)
+#define VDEC2_250M() WRITE_MPEG_REG(HHI_VDEC2_CLK_CNTL, (0 << 9) | (1 << 8) | (3))
+#define HCODEC_250M() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, (0 << 9) | (1 << 8) | (3), 16, 16)
+
+#define VDEC1_333M() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, (0 << 9) | (1 << 8) | (2), 0, 16)
+#define VDEC2_333M() WRITE_MPEG_REG(HHI_VDEC2_CLK_CNTL, (0 << 9) | (1 << 8) | (2))
+
+#define VDEC1_CLOCK_ON()   WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 1, 8, 1); \
+                           WRITE_VREG_BITS(DOS_GCLK_EN0, 0x3ff, 0, 10)
+#define VDEC2_CLOCK_ON()   WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 1, 8, 1); \
+                           WRITE_VREG(DOS_GCLK_EN1, 0x3ff)
+#define HCODEC_CLOCK_ON()  WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 1, 24, 1); \
+                           WRITE_VREG_BITS(DOS_GCLK_EN0, 0x7fff, 12, 15)
+#define VDEC1_CLOCK_OFF()  WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL,  0, 8, 1)
+#define VDEC2_CLOCK_OFF()  WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 0, 8, 1)
+#define HCODEC_CLOCK_OFF() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 0, 24, 1)
+
+#define vdec_clock_enable() \
+    VDEC1_CLOCK_OFF(); \
+    VDEC1_250M(); \
+    VDEC1_CLOCK_ON(); \
+    clock_level = 0;
+
+#define vdec_clock_hi_enable() \
+    VDEC1_CLOCK_OFF(); \
+    VDEC1_250M(); \
+    VDEC1_CLOCK_ON(); \
+    clock_level = 1;
+
+#define vdec2_clock_enable() \
+    VDEC2_CLOCK_OFF(); \
+    VDEC2_250M(); \
+    VDEC2_CLOCK_ON(); \
+    clock_level2 = 0;
+
+#define vdec2_clock_hi_enable() \
+    VDEC2_CLOCK_OFF(); \
+    VDEC2_250M(); \
+    VDEC2_CLOCK_ON(); \
+    clock_level2 = 1;
+
+#define hcodec_clock_enable() \
+    HCODEC_CLOCK_OFF(); \
+    HCODEC_250M(); \
+    HCODEC_CLOCK_ON();
+
+#elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TV
 
 /*
 HHI_VDEC_CLK_CNTL..
@@ -195,7 +262,7 @@ bit8: vdec.gate
 #define SUPPORT_VCODEC_NUM  1
 static int inited_vcodec_num = 0;
 static int clock_level;
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 static int clock_level2;
 #endif
 static struct platform_device *vdec_device = NULL;
@@ -447,6 +514,80 @@ bool vdec_on(vdec_type_t core)
     return ret;
 }
 
+#elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
+void vdec_poweron(vdec_type_t core)
+{
+    ulong flags;
+
+    spin_lock_irqsave(&lock, flags);
+
+    if (core == VDEC_1) {
+        // vdec1 soft reset
+        WRITE_VREG(DOS_SW_RESET0, 0xfffffffc);
+        WRITE_VREG(DOS_SW_RESET0, 0);
+        // enable vdec1 clock
+        vdec_clock_enable();
+        // reset DOS top registers
+        WRITE_VREG(DOS_VDEC_MCRCC_STALL_CTRL, 0);
+    } else if (core == VDEC_2) {
+        // vdec2 soft reset
+        WRITE_VREG(DOS_SW_RESET2, 0xffffffff);
+        WRITE_VREG(DOS_SW_RESET2, 0);
+        // enable vdec2 clock
+        vdec2_clock_enable();
+        // reset DOS top registers
+        WRITE_VREG(DOS_VDEC2_MCRCC_STALL_CTRL, 0);
+    } else if (core == VDEC_HCODEC) {
+        // hcodec soft reset
+        WRITE_VREG(DOS_SW_RESET1, 0xffffffff);
+        WRITE_VREG(DOS_SW_RESET1, 0);
+        // enable hcodec clock
+        hcodec_clock_enable();
+    }
+
+    spin_unlock_irqrestore(&lock, flags);
+}
+
+void vdec_poweroff(vdec_type_t core)
+{
+    ulong flags;
+
+    spin_lock_irqsave(&lock, flags);
+
+    if (core == VDEC_1) {
+        // disable vdec1 clock
+        VDEC1_CLOCK_OFF();
+    } else if (core == VDEC_2) {
+        // disable vdec2 clock
+        VDEC2_CLOCK_OFF();
+    } else if (core == VDEC_HCODEC) {
+        // disable hcodec clock
+        HCODEC_CLOCK_OFF();
+    }
+
+    spin_unlock_irqrestore(&lock, flags);
+}
+
+bool vdec_on(vdec_type_t core)
+{
+    bool ret = false;
+
+    if (core == VDEC_1) {
+        if (READ_MPEG_REG(HHI_VDEC_CLK_CNTL) & 0x100) {
+            ret = true;
+        }
+    } else if (core == VDEC_2) {
+        if (READ_MPEG_REG(HHI_VDEC2_CLK_CNTL) & 0x100) {
+            ret = true;
+        }
+    } else if (core == VDEC_HCODEC) {
+        if (READ_MPEG_REG(HHI_VDEC_CLK_CNTL) & 0x1000000) {
+            ret = true;
+        }
+    }
+
+    return ret;
+}
 #endif
 
 void vdec_power_mode(int level)
@@ -475,7 +616,7 @@ void vdec_power_mode(int level)
     spin_unlock_irqrestore(&lock, flags);
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 void vdec2_power_mode(int level)
 {
     /* todo: add level routines for clock adjustment per chips */
@@ -527,13 +668,13 @@ static ssize_t amrisc_regs_show(struct class *class, struct class_attribute *att
     unsigned  val;
 	unsigned long flags;
 
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
     spin_lock_irqsave(&lock, flags);
-	if(!vdec_on(VDEC_1)){
-		spin_unlock_irqrestore(&lock, flags);
-		pbuf += sprintf(pbuf, "amrisc not power off\n");
-		return (pbuf - buf);
-	}
+    if (!vdec_on(VDEC_1)) {
+        spin_unlock_irqrestore(&lock, flags);
+        pbuf += sprintf(pbuf, "amrisc not power off\n");
+        return (pbuf - buf);
+    }
 #elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
     switch_mod_gate_by_type(MOD_VDEC, 1);
 #endif
@@ -543,7 +684,7 @@ static ssize_t amrisc_regs_show(struct class *class, struct class_attribute *att
         pbuf += sprintf(pbuf, "%s(%#x)\t:%#x(%d)\n",
                         regs[i].name, regs[i].offset, val, val);
     }
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
     spin_unlock_irqrestore(&lock, flags);
 #elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
     switch_mod_gate_by_type(MOD_VDEC, 0);
@@ -579,6 +720,7 @@ static int  vdec_probe(struct platform_device *pdev)
 {
     s32 r;
     static struct resource res;
+
     r = class_register(&vdec_class);
     if (r) {
         printk("vdec class create fail.\n");
@@ -598,7 +740,7 @@ static int  vdec_probe(struct platform_device *pdev)
 
     vdec_set_resource(&res, &pdev->dev);
 
-#if MESON_CPU_TYPE < MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE < MESON_CPU_TYPE_MESON6TVD
     /* default to 250MHz */
     vdec_clock_hi_enable();
 #endif
diff --git a/drivers/amlogic/amports/vdec.h b/drivers/amlogic/amports/vdec.h
index 270ac6e57144..9dc440338370 100755
--- a/drivers/amlogic/amports/vdec.h
+++ b/drivers/amlogic/amports/vdec.h
@@ -21,9 +21,10 @@
 
 #ifndef VDEC_H
 #define VDEC_H
-#include <mach/am_regs.h>
+
 #include <linux/platform_device.h>
 
+#include <mach/cpu.h>
 
 extern void vdec_set_decinfo(void *p);
 extern int vdec_set_resource(struct resource *s, struct device *p);
@@ -35,7 +36,7 @@ s32 vdec_dev_register(void);
 s32 vdec_dev_unregister(void);
 void vdec_power_mode(int level);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 
 typedef enum {
     VDEC_1,
diff --git a/drivers/amlogic/amports/vh264_4k2k.c b/drivers/amlogic/amports/vh264_4k2k.c
index 383736860d68..07d859a7c81f 100755
--- a/drivers/amlogic/amports/vh264_4k2k.c
+++ b/drivers/amlogic/amports/vh264_4k2k.c
@@ -37,13 +37,19 @@
 #include <linux/dma-contiguous.h>
 
 #include <mach/am_regs.h>
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 #include <mach/vpu.h>
+#endif
 #include "vdec_reg.h"
 
 #include "vdec.h"
 #include "amvdec.h"
 #include "vh264_4k2k_mc.h"
 
+#if  MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6TVD
+#define DOUBLE_WRITE
+#endif
+
 #define DRIVER_NAME "amvdec_h264_4k2k"
 #define MODULE_NAME "amvdec_h264_4k2k"
 
@@ -104,8 +110,6 @@ static void (*probe_callback)(void) = NULL;
 static void (*remove_callback)(void) = NULL;
 static struct device *cma_dev;
 
-#define CBCR_MERGE
-
 #ifdef DUAL_PROT
 #define MAILBOX_COMMAND         AV_SCRATCH_0
 #define MAILBOX_DATA_0          AV_SCRATCH_1
@@ -346,7 +350,7 @@ static const char *reg_name[] = {
 static unsigned work_space_adr, decoder_buffer_start, decoder_buffer_end;
 static unsigned reserved_buffer;
 
-#define DECODE_BUFFER_NUM_MAX    16
+#define DECODE_BUFFER_NUM_MAX    32
 #define DISPLAY_BUFFER_NUM       6
 
 #define video_domain_addr(adr) (adr&0x7fffffff)
@@ -354,12 +358,18 @@ static unsigned reserved_buffer;
 
 typedef struct {
     unsigned int y_addr;
-    unsigned int u_addr;
-    unsigned int v_addr;
+    unsigned int uv_addr;
+#ifdef DOUBLE_WRITE
+    unsigned int y_dw_addr;
+    unsigned int uv_dw_addr;
+#endif
 
     int y_canvas_index;
-    int u_canvas_index;
-    int v_canvas_index;
+    int uv_canvas_index;
+#ifdef DOUBLE_WRITE
+    int y_dw_canvas_index;
+    int uv_dw_canvas_index;
+#endif
 
     struct page *alloc_pages;
     int alloc_count;
@@ -367,10 +377,17 @@ typedef struct {
 
 static buffer_spec_t buffer_spec[DECODE_BUFFER_NUM_MAX+DISPLAY_BUFFER_NUM];
 
+#ifdef DOUBLE_WRITE
+#define spec2canvas(x)  \
+    (((x)->uv_dw_canvas_index << 16) | \
+     ((x)->uv_dw_canvas_index << 8)  | \
+     ((x)->y_dw_canvas_index << 0))
+#else
 #define spec2canvas(x)  \
-    (((x)->v_canvas_index << 16) | \
-     ((x)->u_canvas_index << 8)  | \
+    (((x)->uv_canvas_index << 16) | \
+     ((x)->uv_canvas_index << 8)  | \
      ((x)->y_canvas_index << 0))
+#endif
 
 #define VF_POOL_SIZE        32
 
@@ -387,8 +404,13 @@ static void set_frame_info(vframe_t *vf)
 {
     unsigned int ar;
 
+#ifdef DOUBLE_WRITE
+    vf->width = frame_width / 2;
+    vf->height = frame_height / 2;
+#else
     vf->width = frame_width;
     vf->height = frame_height;
+#endif
     vf->duration = frame_dur;
     vf->duration_pulldown = 0;
 
@@ -488,8 +510,8 @@ int init_canvas(int start_addr, long dpb_size, int dpb_number, int mb_width, int
     mutex_lock(&vh264_4k2k_mutex);
     
     for (i=0; i<dpb_number; i++) {
-        WRITE_VREG(canvas_addr++, index | ((index+1)<<8) | ((index+2)<<16));
-        WRITE_VREG(vdec2_canvas_addr++, index | ((index+1)<<8) | ((index+2)<<16));
+        WRITE_VREG(canvas_addr++, index | ((index+1)<<8) | ((index+1)<<16));
+        WRITE_VREG(vdec2_canvas_addr++, index | ((index+1)<<8) | ((index+1)<<16));
 
         if (((dpb_addr + (mb_total << 8) + (mb_total << 7)) >= decoder_buffer_end) && (!use_alloc)) {
             printk("start alloc for %d/%d\n", i, dpb_number);
@@ -497,7 +519,11 @@ int init_canvas(int start_addr, long dpb_size, int dpb_number, int mb_width, int
         }
 
         if (use_alloc) {
+#ifdef DOUBLE_WRITE
+            int page_count = PAGE_ALIGN((mb_total << 8) + (mb_total << 7) + (mb_total << 6) + (mb_total << 5)) / PAGE_SIZE;
+#else
             int page_count = PAGE_ALIGN((mb_total << 8) + (mb_total << 7)) / PAGE_SIZE;
+#endif
 
             if (buffer_spec[i].alloc_pages) {
                 if (page_count != buffer_spec[i].alloc_count) {
@@ -535,6 +561,9 @@ int init_canvas(int start_addr, long dpb_size, int dpb_number, int mb_width, int
 
             addr = dpb_addr;
             dpb_addr += dpb_size;
+#ifdef DOUBLE_WRITE
+            dpb_addr += dpb_size/4;
+#endif
         }
 
         if (((addr + 7) >> 3) == disp_addr) {
@@ -552,10 +581,9 @@ int init_canvas(int start_addr, long dpb_size, int dpb_number, int mb_width, int
 
         addr += mb_total << 8;
         index++;
-        buffer_spec[i].u_addr = addr;
-        buffer_spec[i].u_canvas_index = index;
 
-#ifdef CBCR_MERGE
+        buffer_spec[i].uv_addr = addr;
+        buffer_spec[i].uv_canvas_index = index;
         canvas_config(index,
                   addr,
                   mb_width << 4,
@@ -563,14 +591,12 @@ int init_canvas(int start_addr, long dpb_size, int dpb_number, int mb_width, int
                   CANVAS_ADDR_NOWRAP,
                   CANVAS_BLKMODE_32X32);
 
+        addr += mb_total << 7;
         index++;
 
-        buffer_spec[i].v_addr = addr;
-        buffer_spec[i].v_canvas_index = index;
-
-        index++;
-        addr += mb_total << 7;
-#else
+#ifdef DOUBLE_WRITE
+        buffer_spec[i].y_dw_addr = addr;
+        buffer_spec[i].y_dw_canvas_index = index;
         canvas_config(index,
                   addr,
                   mb_width << 3,
@@ -580,24 +606,24 @@ int init_canvas(int start_addr, long dpb_size, int dpb_number, int mb_width, int
 
         addr += mb_total << 6;
         index++;
-        buffer_spec[i].v_addr = addr;
-        buffer_spec[i].v_canvas_index = index;
+
+        buffer_spec[i].uv_dw_addr = addr;
+        buffer_spec[i].uv_dw_canvas_index = index;
         canvas_config(index,
                   addr,
                   mb_width << 3,
-                  mb_height << 3,
+                  mb_height << 2,
                   CANVAS_ADDR_NOWRAP,
                   CANVAS_BLKMODE_32X32);
 
-
-        addr += mb_total << 6;
+        addr += mb_total << 5;
         index++;
 #endif
     }
 
     mutex_unlock(&vh264_4k2k_mutex);
 
-    printk("H264 4k2k decoder canvas allocation successful, %d CMA blocks allocated\n", alloc_count);
+    printk("H264 4k2k decoder canvas allocation successful, %d CMA blocks allocated, canvas %d-%d\n", alloc_count, AMVDEC_H264_4K2K_CANVAS_INDEX, index-1);
 
     return 0;
 }
@@ -793,9 +819,7 @@ static irqreturn_t vh264_4k2k_isr(int irq, void *dev_id)
 
             vf->index = display_buff_id;
             vf->type = VIDTYPE_PROGRESSIVE | VIDTYPE_VIU_FIELD;
-#ifdef CBCR_MERGE
             vf->type |= VIDTYPE_VIU_NV21;
-#endif
             vf->canvas0Addr = vf->canvas1Addr = spec2canvas(&buffer_spec[display_buff_id]);
             set_frame_info(vf);
 
@@ -864,6 +888,7 @@ printk("M->S,[%d] %s = 0x%x\n",ret, reg_name[ret], READ_VREG(MAILBOX_DATA_1));
     return IRQ_HANDLED;
 }
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 static irqreturn_t vh264_4k2k_vdec2_isr(int irq, void *dev_id)
 {
     int ret = READ_VREG(VDEC2_MAILBOX_COMMAND);
@@ -926,6 +951,7 @@ printk("S->M,[%d] %s = 0x%x\n", ret, reg_name[ret], READ_VREG(VDEC2_MAILBOX_DATA
 
     return IRQ_HANDLED;
 }
+#endif
 
 static void vh264_4k2k_put_timer_func(unsigned long arg)
 {
@@ -1134,11 +1160,15 @@ static void H264_DECODE2_INIT(void)
 static void vh264_4k2k_prot_init(void)
 {
     /* clear mailbox interrupt */
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     WRITE_VREG(VDEC2_ASSIST_MBOX0_CLR_REG, 1);
+#endif
     WRITE_VREG(VDEC_ASSIST_MBOX1_CLR_REG, 1);
 
     /* enable mailbox interrupt */
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     WRITE_VREG(VDEC2_ASSIST_MBOX0_MASK, 1);
+#endif
     WRITE_VREG(VDEC_ASSIST_MBOX1_MASK, 1);
 
     /* disable PSCALE for hardware sharing */
@@ -1197,15 +1227,47 @@ static void vh264_4k2k_prot_init(void)
     WRITE_VREG(ALLOC_INFO_1, 0);
 #endif
 
-#ifdef CBCR_MERGE
     SET_VREG_MASK(MDEC_PIC_DC_CTRL, 1<<17);
     SET_VREG_MASK(VDEC2_MDEC_PIC_DC_CTRL, 1<<17);
-#endif
 
     WRITE_VREG(MDEC_PIC_DC_THRESH, 0x404038aa);
     WRITE_VREG(VDEC2_MDEC_PIC_DC_THRESH, 0x404038aa);
 
     amvenc_dos_top_reg_fix();
+
+#ifdef DOUBLE_WRITE
+    WRITE_VREG(MDEC_DOUBLEW_CFG0, (0   << 31) | // half y address
+                                  (1   << 30) | // 0:No Merge 1:Automatic Merge
+                                  (0   << 28) | // Field Picture, 0x:no skip 10:top only 11:bottom only
+                                  (0   << 27) | // Source from, 1:MCW 0:DBLK
+                                  (0   << 24) | // Endian Control for Chroma
+                                  (0   << 18) | // DMA ID
+                                  (0   << 12) | // DMA Burst Number
+                                  (0   << 11) | // DMA Urgent
+                                  (0   << 10) | // 1:Round 0:Truncation
+                                  (1   <<  9) | // Size by vertical,   0:original size 1: 1/2 shrunken size
+                                  (1   <<  8) | // Size by horizontal, 0:original size 1: 1/2 shrunken size
+                                  (0   <<  6) | // Pixel sel by vertical,   0x:1/2 10:up 11:down
+                                  (0   <<  4) | // Pixel sel by horizontal, 0x:1/2 10:left 11:right
+                                  (0   <<  1) | // Endian Control for Luma
+                                  (1   <<  0)); // Double Write Enable
+
+    WRITE_VREG(VDEC2_MDEC_DOUBLEW_CFG0, (0   << 31) | // half y address
+                                  (1   << 30) | // 0:No Merge 1:Automatic Merge
+                                  (0   << 28) | // Field Picture, 0x:no skip 10:top only 11:bottom only
+                                  (0   << 27) | // Source from, 1:MCW 0:DBLK
+                                  (0   << 24) | // Endian Control for Chroma
+                                  (0   << 18) | // DMA ID
+                                  (0   << 12) | // DMA Burst Number
+                                  (0   << 11) | // DMA Urgent
+                                  (0   << 10) | // 1:Round 0:Truncation
+                                  (1   <<  9) | // Size by vertical,   0:original size 1: 1/2 shrunken size
+                                  (1   <<  8) | // Size by horizontal, 0:original size 1: 1/2 shrunken size
+                                  (0   <<  6) | // Pixel sel by vertical,   0x:1/2 10:up 11:down
+                                  (0   <<  4) | // Pixel sel by horizontal, 0x:1/2 10:left 11:right
+                                  (0   <<  1) | // Endian Control for Luma
+                                  (1   <<  0)); // Double Write Enable
+#endif
 }
 
 static void vh264_4k2k_local_init(void)
@@ -1311,6 +1373,7 @@ static s32 vh264_4k2k_init(void)
         return -ENOENT;
     }
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     if (request_irq(INT_VDEC2, vh264_4k2k_vdec2_isr,
                     IRQF_SHARED, "vh264_4k2k-vdec2-irq", (void *)vh264_4k2k_dec_id2)) {
         printk("vh264_4k2k irq register error.\n");
@@ -1319,6 +1382,7 @@ static s32 vh264_4k2k_init(void)
         amvdec2_disable();
         return -ENOENT;
     }
+#endif
 
     stat |= STAT_ISR_REG;
 
@@ -1369,7 +1433,9 @@ static int vh264_4k2k_stop(void)
         WRITE_VREG(VDEC_ASSIST_MBOX1_MASK, 0);
         WRITE_VREG(VDEC2_ASSIST_MBOX0_MASK, 0);
         free_irq(INT_VDEC, (void *)vh264_4k2k_dec_id);
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
         free_irq(INT_VDEC2, (void *)vh264_4k2k_dec_id2);
+#endif
         stat &= ~STAT_ISR_REG;
     }
 
@@ -1383,6 +1449,11 @@ static int vh264_4k2k_stop(void)
         stat &= ~STAT_VF_HOOK;
     }
 
+#ifdef DOUBLE_WRITE
+    WRITE_VREG(MDEC_DOUBLEW_CFG0, 0);
+    WRITE_VREG(VDEC2_MDEC_DOUBLEW_CFG0, 0);
+#endif
+
     amvdec_disable();
     amvdec2_disable();
 
@@ -1442,7 +1513,9 @@ static int amvdec_h264_4k2k_probe(struct platform_device *pdev)
         return -ENODEV;
     }
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     request_vpu_clk_vmod(360000000, VPU_VIU_VD1);
+#endif
 
     if (probe_callback) {
         probe_callback();
-- 
2.19.0

