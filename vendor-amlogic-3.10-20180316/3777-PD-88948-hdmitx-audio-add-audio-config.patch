From 2e606b8179b5a95ba0286503d94ed8d72f36d1c3 Mon Sep 17 00:00:00 2001
From: "zongdong.jiao" <zongdong.jiao@amlogic.com>
Date: Wed, 19 Mar 2014 19:28:08 +0800
Subject: [PATCH 3777/5965] PD #88948: hdmitx: audio: add audio config

In order to dynamically control hdmi audio, execute
echo AUDIO_MODE > /sys/class/amhdmitx/amhdmitx0/config
AUDIO_MODE can be:
audio_off  : disable hdmi audio output
audio_on   : enable hdmi audio output
audio_auto : if sink doesn't support current audio format, then
             hdmi tx will disable hdmi audio output. EXCEPT PCM.
---
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c  | 11 ++++--
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c        | 38 ++++++++++++++++---
 .../linux/amlogic/hdmi_tx/hdmi_tx_module.h    |  1 +
 3 files changed, 42 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
index 439d47f9d50a..2baba2f6ce6b 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
@@ -2063,6 +2063,10 @@ static int hdmitx_set_audmode(struct hdmi_tx_dev_s* hdmitx_device, Hdmi_tx_audio
     
     hdmi_print(INF, AUD "audio channel num is %d\n", hdmitx_device->cur_audio_param.channel_num);
 
+    hdmi_wr_reg(TX_PACKET_CONTROL_2, hdmi_rd_reg(TX_PACKET_CONTROL_2) & (~(1<<3)));
+    hdmi_wr_reg(TX_SYS5_TX_SOFT_RESET_1, 0x30);     // reset audio master & sample
+    hdmi_wr_reg(TX_SYS5_TX_SOFT_RESET_1, 0x00);
+
     if(!hdmi_audio_off_flag){
         hdmi_audio_init(i2s_to_spdif_flag);
     }
@@ -2229,7 +2233,7 @@ static int hdmitx_set_audmode(struct hdmi_tx_dev_s* hdmitx_device, Hdmi_tx_audio
     hdmi_wr_reg(TX_SYS1_ACR_N_0, (audio_N_para&0xff)); // N[7:0]
     hdmi_wr_reg(TX_SYS1_ACR_N_1, (audio_N_para>>8)&0xff); // N[15:8]
     hdmi_wr_reg(TX_SYS1_ACR_N_2, (audio_N_tolerance<<4)|((audio_N_para>>16)&0xf)); // N[19:16]
-    hdmi_wr_reg(TX_AUDIO_CONTROL,   hdmi_rd_reg(TX_AUDIO_CONTROL)|0x1); 
+    hdmi_wr_reg(TX_AUDIO_CONTROL,   hdmi_rd_reg(TX_AUDIO_CONTROL)|0x1);
 
     hdmi_wr_reg(TX_SYS0_ACR_CTS_0, 0);      //audio_CTS & 0xff);
     hdmi_wr_reg(TX_SYS0_ACR_CTS_1, 0);      //(audio_CTS>>8) & 0xff);
@@ -2905,9 +2909,10 @@ static int hdmitx_cntl_config(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigne
     case CONF_AUDIO_MUTE_OP:
         if(argv == AUDIO_MUTE) {
             hdmi_wr_reg(TX_AUDIO_PACK, 0x00); // disable audio sample packets
+            hdmi_wr_reg(TX_PACKET_CONTROL_2, hdmi_rd_reg(TX_PACKET_CONTROL_2) | (1<<3));
         }
-        if(argv == AUDIO_UNMUTE) {
-            hdmi_wr_reg(TX_AUDIO_PACK, 0x01); // disable audio sample packets
+        if((argv == AUDIO_UNMUTE) && (hdmitx_device->tx_aud_cfg == 1)) {
+            hdmitx_device->audio_param_update_flag = 1;
         }
         break;
     case CONF_VIDEO_BLANK_OP:
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index 5ebff3c02b02..4b78e8c3ace2 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -615,12 +615,24 @@ static ssize_t store_config(struct device * dev, struct device_attribute *attr,
             hdmi_set_3d(&hdmitx_device, 0xf, 0);
         }
     }
-    else if(strncmp(buf, "audio", 5)==0){
-        if(buf[5] == '0') {
+    else if(strncmp(buf, "audio_", 6)==0) {
+        if(strncmp(buf+6, "off", 3) == 0) {
+            hdmitx_device.tx_aud_cfg = 0;
             hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_AUDIO_MUTE_OP, AUDIO_MUTE);
+            hdmi_print(IMP, AUD "configure off\n");
         }
-        else if(buf[5] == '1') {
+        else if(strncmp(buf+6, "on", 2) == 0) {
+            hdmitx_device.tx_aud_cfg = 1;
             hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_AUDIO_MUTE_OP, AUDIO_UNMUTE);
+            hdmi_print(IMP, AUD "configure on\n");
+        }
+        else if(strncmp(buf+6, "auto", 4) == 0) {
+            // auto mode. if sink doesn't support current audio format, then no audio output
+            hdmitx_device.tx_aud_cfg = 2;
+            hdmi_print(IMP, AUD "configure auto\n");
+        }
+        else {
+            hdmi_print(ERR, AUD "configure error\n");
         }
     }
     return 16;
@@ -967,6 +979,8 @@ static struct notifier_block hdmitx_notifier_nb_a = {
 };
 static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long cmd , void *para)
 {
+    int i, audio_check = 0;
+    rx_cap_t* pRXCap = &(hdmitx_device.RXCap);
     struct snd_pcm_substream *substream =(struct snd_pcm_substream*)para;
     Hdmi_tx_audio_para_t* audio_param = &(hdmitx_device.cur_audio_param);
     audio_fs_t n_rate = aud_samp_rate_map(substream->runtime->rate);
@@ -994,9 +1008,21 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
         audio_param->channel_num = substream->runtime->channels - 1;
         hdmitx_device.audio_param_update_flag = 1;
     }
-
+    if(hdmitx_device.tx_aud_cfg == 2) {
+        hdmi_print(INF, AUD "auto mode\n");
+        // Detect whether Rx is support current audio format
+        for(i = 0; i < pRXCap->AUD_count; i++){
+            if(pRXCap->RxAudioCap[i].audio_format_code == cmd)
+            audio_check = 1;
+        }
+        if((!audio_check) && (cmd != AOUT_EVENT_IEC_60958_PCM)) {      // sink don't support current audio mode
+            printk("Sink not support this audio format %d\n", cmd);
+            hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_AUDIO_MUTE_OP, AUDIO_MUTE);
+            hdmitx_device.audio_param_update_flag = 0;
+        }
+    }
     if(hdmitx_device.audio_param_update_flag == 0)
-        printk("HDMI: no audio update\n");
+        hdmi_print(INF, AUD "no update\n");
 
     return 0;
 }
@@ -1016,6 +1042,8 @@ static int hdmi_task_handle(void *data)
     //When init hdmi, clear the hdmitx module edid ram and edid buffer.
     hdmitx_edid_ram_buffer_clear(hdmitx_device);
 
+    hdmitx_device->tx_aud_cfg = 1; // default audio configure is on
+
     hdmitx_device->HWOp.SetupIRQ(hdmitx_device);
     if(init_flag&INIT_FLAG_POWERDOWN){
         hdmitx_device->HWOp.SetDispMode(hdmitx_device, NULL); //power down
diff --git a/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h b/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
index db5b7ef6096c..3632e6c06bba 100644
--- a/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
+++ b/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
@@ -115,6 +115,7 @@ typedef struct hdmi_tx_dev_s {
     unsigned int  cec_func_config;
     unsigned int  cec_init_ready;
     unsigned int  tv_cec_support;
+    unsigned int  tx_aud_cfg; /* 0, off; 1, on */
     unsigned int  tv_no_edid;           // For some un-well-known TVs, no edid at all
     unsigned int  hpd_lock;
     unsigned int  output_blank_flag;    // if equals to 1, means current video & audio output are blank
-- 
2.19.0

