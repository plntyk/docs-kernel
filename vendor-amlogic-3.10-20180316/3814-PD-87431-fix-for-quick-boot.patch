From 592e6415aec3dd21b6558c1976c09965cbfc94b6 Mon Sep 17 00:00:00 2001
From: "wenbiao.zhang" <wenbiao.zhang@amlogic.com>
Date: Mon, 24 Mar 2014 17:40:12 +0800
Subject: [PATCH 3814/5965] PD #87431: fix for quick boot:     remove useless
 config in dtd and config     reset driver read/write property

---
 arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd  | 547 ++++++++---------
 arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd  | 571 +++++++++---------
 arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd  | 484 +++++++--------
 .../arm/boot/dts/amlogic/meson8_k101_512M.dtd | 424 ++++++-------
 arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd  | 302 +++++----
 arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd  | 184 +++---
 arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd | 388 ++++++++----
 arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd | 422 +++++++++----
 arch/arm/configs/meson8_defconfig             |  12 +-
 arch/arm/mach-meson8/clock.c                  |   2 +-
 drivers/amlogic/amaudio/amaudio.c             |   6 +-
 drivers/amlogic/amports/subtitle.c            |  24 +-
 drivers/amlogic/amports/tsync.c               |  18 +-
 drivers/amlogic/amports/video.c               |  10 +-
 drivers/amlogic/amports/video2.c              |   6 +-
 drivers/amlogic/audiodsp/audiodsp_module.c    |   8 +-
 drivers/amlogic/display/osd/osd_main.c        |  30 +-
 drivers/amlogic/display/osd_ext/osd_main.c    |   6 +-
 drivers/amlogic/display/vout/vout_serve.h     |   2 +-
 drivers/amlogic/display/vout2/vout_serve.h    |   2 +-
 drivers/amlogic/dvb_tv/aml_dvb.c              |  12 +-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c        |  10 +-
 drivers/amlogic/ppmgr/ppmgr_drv.c             |  10 +-
 drivers/amlogic/vfm/vfm.c                     |   2 +-
 24 files changed, 1902 insertions(+), 1580 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
index 17fb28d98c87..31d3d71b34e3 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
@@ -480,19 +480,19 @@ sdio{
 //$$ L3 PROP_U32 = "max_req_size"
 //$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_U32 = "card_type"
-        emmc{
-            status = "ok";
-            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "emmc";
-            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /**128KB*/
-            gpio_dat3 = "BOOT_3";
-            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
-        };
+//        emmc{
+//            status = "ok";
+//            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            f_max_w = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };
 
 //$$ DEVICE="sdio"
 //$$ L2 PROP_STR = "status"
@@ -757,17 +757,17 @@ sdio{
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
-        axp202 { /* PMU for AXP */
-            compatible = "axp_mfd";                             /* for driver probe, must have          */
-            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x34>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        axp202 { /* PMU for AXP */
+//            compatible = "axp_mfd";                             /* for driver probe, must have          */
+//            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x34>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_aml1212"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -777,17 +777,17 @@ sdio{
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
-        aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
-            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x35>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        aml1212{                                                /* PMU for AML1212, see comment above   */
+//            compatible = "aml_pmu";                             /* for driver probe, must have          */
+//            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x35>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_rn5t618"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1092,24 +1092,24 @@ sdio{
 //$$ L2 PROP_U32 = "dsi_lane_num"
 //$$ L2 PROP_U32 2 = "dsi_bit_rate_min_max"
 //$$ L2 PROP_U32 2 = "dsi_sleep_out_display_on_delay"
-	lcd_B080XAN01:lcd_B080XAN01{	//k101
-		model_name="B080XAN01";	/** lcd model name */
-		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
-
-		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
-		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
-
-		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	lcd_B080XAN01:lcd_B080XAN01{	//k101
+//		model_name="B080XAN01";	/** lcd model name */
+//		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) *///
 
-        dsi_lane_num=<4>;/** mipi dsi data lane number */
-        dsi_bit_rate_min_max=<500 600>;/** range of mipi dsi data lane bit rate(unit: MHz) */
-        dsi_sleep_out_display_on_delay=<20 20>; /** mipi dsi basic delay: (unit: ms) */
-	};
+//		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
+//		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
+
+//		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+
+//        dsi_lane_num=<4>;/** mipi dsi data lane number */
+//        dsi_bit_rate_min_max=<500 600>;/** range of mipi dsi data lane bit rate(unit: MHz) */
+//        dsi_sleep_out_display_on_delay=<20 20>; /** mipi dsi basic delay: (unit: ms) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_CLAP070NJ02>
 //$$ L2 PROP_STR = "model_name"
@@ -1122,20 +1122,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"
-	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
-		model_name="CLAP070NJ02";	/** lcd model name */
-		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
+//		model_name="CLAP070NJ02";	/** lcd model name */
+//		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
-		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
+//		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
 //$$ L2 PROP_STR = "model_name"
@@ -1148,20 +1148,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"
-	lcd_TN070TN92:lcd_TN070TN92{	//800*480
-		model_name="TN070TN92";	/** lcd model name */
-		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_TN070TN92:lcd_TN070TN92{	//800*480
+//		model_name="TN070TN92";	/** lcd model name */
+//		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
-		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
+//		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
 //$$ L2 PROP_STR = "model_name"
@@ -1174,20 +1174,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"	
-	lcd_LP097X02:lcd_LP097X02{	//g24
-		model_name="LP097X02";	/** lcd model name */
-		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_LP097X02:lcd_LP097X02{	//g24
+//		model_name="LP097X02";	/** lcd model name */
+//		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
-		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
+//		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ DEVICE="lcd_extern"
 //$$ L2 PROP_STR = "status"
@@ -1221,23 +1221,23 @@ sdio{
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        stk831x{
-            dev_name = "stk831x";
-            status = "okay";
-            address = <0x3d>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        stk831x{
+//            dev_name = "stk831x";
+//            status = "okay";
+//            address = <0x3d>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 
 //$$ DEVICE="mma7660"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        mma7660{
-            dev_name = "mma7660";
-            status = "okay";
-            address = <0x4c>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        mma7660{
+//            dev_name = "mma7660";
+//            status = "okay";
+//            address = <0x4c>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 
 //$$ DEVICE="mma8452"
 //$$ L2 PROP_STR = "status"
@@ -1257,24 +1257,24 @@ sdio{
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 = "acc_dir"
-        mma865x{
-            dev_name = "mma865x";
-            status = "okay";
-            address = <0x1d>;
-            i2c_bus = "i2c_bus_b";
-            acc_dir = <0x1111>;
-        };
+//        mma865x{
+//            dev_name = "mma865x";
+//            status = "okay";
+//            address = <0x1d>;
+//            i2c_bus = "i2c_bus_b";
+//            acc_dir = <0x1111>;
+//        };
 
 //$$ DEVICE="afa750"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        afa750{
-            dev_name = "afa750";
-            status = "okay";
-            address = <0x3c>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        afa750{
+//            dev_name = "afa750";
+//            status = "okay";
+//            address = <0x3c>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 };
 
 
@@ -1342,31 +1342,31 @@ sdio{
 
     aml_audio_codec{
         compatible = "amlogic,audio_codec";
-        rt5616:rt5616{
-            codec_name = "rt5616";
-            i2c_addr = <0x1B>;
-            i2c_bus = "i2c_bus_d";
-            id_reg = <0x00>;
-            id_val = <0x21>;
-            capless = <0>;
-            status = "okay";
-        };
-        rt5631:rt5631{
-            codec_name = "rt5631";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            id_reg = <0x00>;
-            id_val = <0x01>;
-            capless = <0>;
-            status = "disable";      
-        };  
-        wm8960:wm8960{
-            codec_name = "wm8960";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            capless = <1>;
-	    status = "disable";
-        };
+//        rt5616:rt5616{
+//            codec_name = "rt5616";
+//            i2c_addr = <0x1B>;
+//            i2c_bus = "i2c_bus_d";
+//            id_reg = <0x00>;
+//            id_val = <0x21>;
+//            capless = <0>;
+//            status = "okay";
+//        };
+//        rt5631:rt5631{
+//            codec_name = "rt5631";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            id_reg = <0x00>;
+//            id_val = <0x01>;
+//            capless = <0>;
+//            status = "disable";      
+//        };  
+//        wm8960:wm8960{
+//            codec_name = "wm8960";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            capless = <1>;
+//	    status = "disable";
+//        };
     };
 
 //$$ DEVICE="aml_m8_sound_card"
@@ -1420,8 +1420,8 @@ sdio{
 		pinctrl-0 = <&aml_cam_gpio_pins> ;
 		pinctrl-1 = <&aml_cam_csi_pins> ;
 
-///	-	gc0308
-//$$ DEVICE = "gc0308"
+///	-	gc2035
+//$$ DEVICE="gc2035"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1430,20 +1430,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_0{
-			cam_name = "gc0308";
-			front_back = <0>;
+        cam_0{
+			cam_name = "gc2035";
+			front_back = <1>;
 			i2c_bus = "i2c_bus_d";
 			gpio_pwdn = "GPIOH_6";
 			gpio_rst = "GPIOH_4";
 			mirror_flip = <1>;
-			vertical_flip = <0>;
+			vertical_flip = <0>;	
 			bt_path = "gpio";
 			status = "okay";
-		};	
-
-///	-	gt2005
-//$$ DEVICE="gt2005"
+		};
+		
+///	-	ov5640
+//$$ DEVICE="ov5640"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1453,19 +1453,19 @@ sdio{
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
 		cam_1{
-			cam_name = "gt2005";
-			front_back = <1>;
+			cam_name = "ov5640";
+			front_back = <0>;
 			i2c_bus = "i2c_bus_d";
 			gpio_pwdn = "GPIOH_5";
 			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;
+			mirror_flip = <1>;
+			vertical_flip = <0>;	
 			bt_path = "gpio";
 			status = "okay";
-		};	
-
-///	-	gc0328
-//$$ DEVICE="gc0328"
+		};
+		
+///	-	ov5647
+//$$ DEVICE="ov5647"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1474,20 +1474,22 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        cam_2{
-			cam_name = "gc0328";
+		cam_2{
+			cam_name = "ov5647";
 			front_back = <0>;
 			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
+			gpio_pwdn = "GPIOH_5";
 			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
+			mirror_flip = <1>;
 			vertical_flip = <0>;	
+			config_path = "/system/etc/camera_isp_cfg/ov5647_k100";
+			vcm_mode = <1>;
 			bt_path = "gpio";
 			status = "okay";
 		};
-
-///	-	gc2035
-//$$ DEVICE="gc2035"
+		
+///	-	gc0308
+//$$ DEVICE = "gc0308"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1496,20 +1498,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        cam_3{
-			cam_name = "gc2035";
-			front_back = <1>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <1>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_3{
+//			cam_name = "gc0308";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <1>;
+//			vertical_flip = <0>;
+//			bt_path = "gpio";
+//			status = "okay";
+//		};	
 
-///	-	ov5640
-//$$ DEVICE="ov5640"
+///	-	gt2005
+//$$ DEVICE="gt2005"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1518,20 +1520,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_4{
-			cam_name = "ov5640";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <1>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_4{
+//			cam_name = "gt2005";
+//			front_back = <1>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;
+//			bt_path = "gpio";
+//			status = "okay";
+//		};	
 
-///	-	hi253
-//$$ DEVICE="hi253"
+///	-	gc0328
+//$$ DEVICE="gc0328"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1540,20 +1542,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_5{
-			cam_name = "hi253";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//        cam_5{
+//			cam_name = "gc0328";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
-///	-	ov5647
-//$$ DEVICE="ov5647"
+///	-	hi253
+//$$ DEVICE="hi253"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1562,19 +1564,18 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_6{
-			cam_name = "ov5647";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <1>;
-			vertical_flip = <0>;	
-			config_path = "/system/etc/camera_isp_cfg/ov5647_k100";
-			vcm_mode = <1>;
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_6{
+//			cam_name = "hi253";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
+
  ///	-	hm2057
 //$$ DEVICE="hm2057"
 //$$ L2 PROP_STR = "status"
@@ -1585,17 +1586,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"    
-            	 cam_7{
-			cam_name = "hm2057";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//            	 cam_7{
+//			cam_name = "hm2057";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 //$$ DEVICE="sp0a19"
 //$$ L2 PROP_STR = "status"
@@ -1606,17 +1607,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        cam_8{
-			cam_name = "sp0a19";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//        cam_8{
+//			cam_name = "sp0a19";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 
 ///	-	hm5065
@@ -1629,17 +1630,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_9{
-			cam_name = "hm5065";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_9{
+//			cam_name = "hm5065";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 
 ///	-    sp1628
@@ -1652,17 +1653,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_10{
-			cam_name = "sp1628";
-			front_back = <1>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_10{
+//			cam_name = "sp1628";
+//			front_back = <1>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 	};	
 
 /// ***************************************************************************************
@@ -1931,21 +1932,21 @@ sdio{
 //$$ L3 PROP_U32 ="yres"
 //$$ L3 PROP_U32 ="pol"
 //$$ L3 PROP_STR = "fw_file"
-		touch_ft5x06:ft5x06{
-			touch_name = "ft5x06";
-			status = "okay";
-			i2c_bus = "i2c_bus_a";
-			reg = <0x38>;
-			ic_type = <0>;
-			irq = <0>;
-			gpio_interrupt = "GPIOZ_7";
-			gpio_reset = "GPIOZ_6";
-			xres = <1024>;
-			yres = <600>;
-			pol = <0x1>;
-			fw_file = "/etc/touch/ft5x06.fw";
+//		touch_ft5x06:ft5x06{
+//			touch_name = "ft5x06";
+//			status = "okay";
+//			i2c_bus = "i2c_bus_a";
+//			reg = <0x38>;
+//			ic_type = <0>;
+//			irq = <0>;
+//			gpio_interrupt = "GPIOZ_7";
+//			gpio_reset = "GPIOZ_6";
+//			xres = <1024>;
+//			yres = <600>;
+//			pol = <0x1>;
+//			fw_file = "/etc/touch/ft5x06.fw";
 						
-		};
+//		};
 
 //$$ DEVICE = "touch_gt9xx"
 //$$ L2 PROP_STR = "status"
diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
index 4818a0cd9589..f0105686b79b 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
@@ -490,19 +490,19 @@ sdio{
 //$$ L3 PROP_U32 = "max_req_size"
 //$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_U32 = "card_type"
-        emmc{
-            status = "ok";
-            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "emmc";
-            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /**128KB*/
-            gpio_dat3 = "BOOT_3";
-            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
-        };
+//        emmc{
+//            status = "ok";
+//            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            f_max_w = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };
 
 //$$ DEVICE="sdio"
 //$$ L2 PROP_STR = "status"
@@ -767,17 +767,17 @@ sdio{
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
-        axp202 { /* PMU for AXP */
-            compatible = "axp_mfd";                             /* for driver probe, must have          */
-            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x34>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        axp202 { /* PMU for AXP */
+//            compatible = "axp_mfd";                             /* for driver probe, must have          */
+//            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x34>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_aml1212"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -787,17 +787,17 @@ sdio{
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
-        aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
-            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x35>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        aml1212{                                                /* PMU for AML1212, see comment above   */
+//            compatible = "aml_pmu";                             /* for driver probe, must have          */
+//            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x35>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_rn5t618"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1102,24 +1102,24 @@ sdio{
 //$$ L2 PROP_U32 = "dsi_lane_num"
 //$$ L2 PROP_U32 2 = "dsi_bit_rate_min_max"
 //$$ L2 PROP_U32 2 = "dsi_sleep_out_display_on_delay"
-	lcd_B080XAN01:lcd_B080XAN01{	//k101
-		model_name="B080XAN01";	/** lcd model name */
-		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
-
-		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
-		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
-
-		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	lcd_B080XAN01:lcd_B080XAN01{	//k101
+//		model_name="B080XAN01";	/** lcd model name */
+//		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<119 159>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<6 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) *///
 
-        dsi_lane_num=<4>;/** mipi dsi data lane number */
-        dsi_bit_rate_min_max=<500 600>;/** range of mipi dsi data lane bit rate(unit: MHz) */
-        dsi_sleep_out_display_on_delay=<20 20>; /** mipi dsi basic delay: (unit: ms) */
-	};
+//		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
+//		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
+
+//		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+
+//        dsi_lane_num=<4>;/** mipi dsi data lane number */
+//        dsi_bit_rate_min_max=<500 600>;/** range of mipi dsi data lane bit rate(unit: MHz) */
+//        dsi_sleep_out_display_on_delay=<20 20>; /** mipi dsi basic delay: (unit: ms) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_CLAP070NJ02>
 //$$ L2 PROP_STR = "model_name"
@@ -1132,20 +1132,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"
-	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
-		model_name="CLAP070NJ02";	/** lcd model name */
-		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
+//		model_name="CLAP070NJ02";	/** lcd model name */
+//		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
-		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
+//		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
 //$$ L2 PROP_STR = "model_name"
@@ -1158,20 +1158,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"
-	lcd_TN070TN92:lcd_TN070TN92{	//800*480
-		model_name="TN070TN92";	/** lcd model name */
-		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_TN070TN92:lcd_TN070TN92{	//800*480
+//		model_name="TN070TN92";	/** lcd model name */
+//		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
-		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
+//		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
 //$$ L2 PROP_STR = "model_name"
@@ -1184,20 +1184,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"	
-	lcd_LP097X02:lcd_LP097X02{	//g24
-		model_name="LP097X02";	/** lcd model name */
-		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_LP097X02:lcd_LP097X02{	//g24
+//		model_name="LP097X02";	/** lcd model name */
+//		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
-		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
+//		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ DEVICE="lcd_extern"
 //$$ L2 PROP_STR = "status"
@@ -1231,23 +1231,23 @@ sdio{
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        stk831x{
-            dev_name = "stk831x";
-            status = "okay";
-            address = <0x3d>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        stk831x{
+//            dev_name = "stk831x";
+//            status = "okay";
+//            address = <0x3d>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 
 //$$ DEVICE="mma7660"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        mma7660{
-            dev_name = "mma7660";
-            status = "okay";
-            address = <0x4c>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        mma7660{
+//            dev_name = "mma7660";
+//            status = "okay";
+//            address = <0x4c>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 
 //$$ DEVICE="mma8452"
 //$$ L2 PROP_STR = "status"
@@ -1267,24 +1267,24 @@ sdio{
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 = "acc_dir"
-        mma865x{
-            dev_name = "mma865x";
-            status = "okay";
-            address = <0x1d>;
-            i2c_bus = "i2c_bus_b";
-            acc_dir = <0x1111>;
-        };
+//        mma865x{
+//            dev_name = "mma865x";
+//            status = "okay";
+//            address = <0x1d>;
+//            i2c_bus = "i2c_bus_b";
+//            acc_dir = <0x1111>;
+//        };
 
 //$$ DEVICE="afa750"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        afa750{
-            dev_name = "afa750";
-            status = "okay";
-            address = <0x3c>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        afa750{
+//            dev_name = "afa750";
+//            status = "okay";
+//            address = <0x3c>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 };
 
 
@@ -1352,31 +1352,31 @@ sdio{
 
     aml_audio_codec{
         compatible = "amlogic,audio_codec";
-        rt5616:rt5616{
-            codec_name = "rt5616";
-            i2c_addr = <0x1B>;
-            i2c_bus = "i2c_bus_d";
-            id_reg = <0x00>;
-            id_val = <0x21>;
-            capless = <0>;
-            status = "okay";
-        };
-        rt5631:rt5631{
-            codec_name = "rt5631";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            id_reg = <0x00>;
-            id_val = <0x01>;
-            capless = <0>;
-            status = "disable";      
-        };  
-        wm8960:wm8960{
-            codec_name = "wm8960";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            capless = <1>;
-	    status = "disable";
-        };
+//        rt5616:rt5616{
+//            codec_name = "rt5616";
+//            i2c_addr = <0x1B>;
+//            i2c_bus = "i2c_bus_d";
+//            id_reg = <0x00>;
+//            id_val = <0x21>;
+//            capless = <0>;
+//            status = "okay";
+//        };
+//        rt5631:rt5631{
+//            codec_name = "rt5631";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            id_reg = <0x00>;
+//            id_val = <0x01>;
+//            capless = <0>;
+//            status = "disable";      
+//        };  
+//        wm8960:wm8960{
+//            codec_name = "wm8960";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            capless = <1>;
+//	    status = "disable";
+//        };
     };
 
 //$$ DEVICE="aml_m8_sound_card"
@@ -1430,8 +1430,8 @@ sdio{
 		pinctrl-0 = <&aml_cam_gpio_pins> ;
 		pinctrl-1 = <&aml_cam_csi_pins> ;
 
-///	-	gc0308
-//$$ DEVICE = "gc0308"
+///	-	gc2035
+//$$ DEVICE="gc2035"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1440,20 +1440,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_0{
-			cam_name = "gc0308";
-			front_back = <0>;
+        cam_0{
+			cam_name = "gc2035";
+			front_back = <1>;
 			i2c_bus = "i2c_bus_d";
 			gpio_pwdn = "GPIOH_6";
 			gpio_rst = "GPIOH_4";
 			mirror_flip = <1>;
-			vertical_flip = <0>;
+			vertical_flip = <0>;	
 			bt_path = "gpio";
 			status = "okay";
-		};	
-
-///	-	gt2005
-//$$ DEVICE="gt2005"
+		};
+		
+///	-	ov5640
+//$$ DEVICE="ov5640"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1463,19 +1463,19 @@ sdio{
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
 		cam_1{
-			cam_name = "gt2005";
-			front_back = <1>;
+			cam_name = "ov5640";
+			front_back = <0>;
 			i2c_bus = "i2c_bus_d";
 			gpio_pwdn = "GPIOH_5";
 			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;
+			mirror_flip = <1>;
+			vertical_flip = <0>;	
 			bt_path = "gpio";
 			status = "okay";
-		};	
-
-///	-	gc0328
-//$$ DEVICE="gc0328"
+		};
+		
+///	-	ov5647
+//$$ DEVICE="ov5647"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1484,20 +1484,22 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        cam_2{
-			cam_name = "gc0328";
+		cam_2{
+			cam_name = "ov5647";
 			front_back = <0>;
 			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
+			gpio_pwdn = "GPIOH_5";
 			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
+			mirror_flip = <1>;
 			vertical_flip = <0>;	
+			config_path = "/system/etc/camera_isp_cfg/ov5647_k100";
+			vcm_mode = <1>;
 			bt_path = "gpio";
 			status = "okay";
 		};
-
-///	-	gc2035
-//$$ DEVICE="gc2035"
+		
+///	-	gc0308
+//$$ DEVICE = "gc0308"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1506,20 +1508,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        cam_3{
-			cam_name = "gc2035";
-			front_back = <1>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <1>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_3{
+//			cam_name = "gc0308";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <1>;
+//			vertical_flip = <0>;
+//			bt_path = "gpio";
+//			status = "okay";
+//		};	
 
-///	-	ov5640
-//$$ DEVICE="ov5640"
+///	-	gt2005
+//$$ DEVICE="gt2005"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1528,20 +1530,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_4{
-			cam_name = "ov5640";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <1>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_4{
+//			cam_name = "gt2005";
+//			front_back = <1>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;
+//			bt_path = "gpio";
+//			status = "okay";
+//		};	
 
-///	-	hi253
-//$$ DEVICE="hi253"
+///	-	gc0328
+//$$ DEVICE="gc0328"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1550,20 +1552,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_5{
-			cam_name = "hi253";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//        cam_5{
+//			cam_name = "gc0328";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
-///	-	ov5647
-//$$ DEVICE="ov5647"
+///	-	hi253
+//$$ DEVICE="hi253"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1572,19 +1574,18 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_6{
-			cam_name = "ov5647";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <1>;
-			vertical_flip = <0>;	
-			config_path = "/system/etc/camera_isp_cfg/ov5647_k100";
-			vcm_mode = <1>;
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_6{
+//			cam_name = "hi253";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
+
  ///	-	hm2057
 //$$ DEVICE="hm2057"
 //$$ L2 PROP_STR = "status"
@@ -1595,17 +1596,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"    
-            	 cam_7{
-			cam_name = "hm2057";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//            	 cam_7{
+//			cam_name = "hm2057";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 //$$ DEVICE="sp0a19"
 //$$ L2 PROP_STR = "status"
@@ -1616,18 +1617,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        cam_8{
-			cam_name = "sp0a19";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
-
+//        cam_8{
+//			cam_name = "sp0a19";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 ///	-	hm5065
 //$$ DEVICE="hm5065"
@@ -1639,18 +1639,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_9{
-			cam_name = "hm5065";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
-
+//		cam_9{
+//			cam_name = "hm5065";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 ///	-    sp1628
 //$$ DEVICE="sp1628"
@@ -1662,17 +1661,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_10{
-			cam_name = "sp1628";
-			front_back = <1>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_10{
+//			cam_name = "sp1628";
+//			front_back = <1>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 ///	-    bf3720
 //$$ DEVICE="bf3720"
@@ -1684,17 +1683,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_11{
-			cam_name = "bf3720";
-			front_back = <1>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_11{
+//			cam_name = "bf3720";
+//			front_back = <1>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 	};	
 
 /// ***************************************************************************************
@@ -1963,21 +1962,21 @@ sdio{
 //$$ L3 PROP_U32 ="yres"
 //$$ L3 PROP_U32 ="pol"
 //$$ L3 PROP_STR = "fw_file"
-		touch_ft5x06:ft5x06{
-			touch_name = "ft5x06";
-			status = "okay";
-			i2c_bus = "i2c_bus_a";
-			reg = <0x38>;
-			ic_type = <0>;
-			irq = <0>;
-			gpio_interrupt = "GPIOZ_7";
-			gpio_reset = "GPIOZ_6";
-			xres = <1024>;
-			yres = <600>;
-			pol = <0x1>;
-			fw_file = "/etc/touch/ft5x06.fw";
+//		touch_ft5x06:ft5x06{
+//			touch_name = "ft5x06";
+//			status = "okay";
+//			i2c_bus = "i2c_bus_a";
+//			reg = <0x38>;
+//			ic_type = <0>;
+//			irq = <0>;
+//			gpio_interrupt = "GPIOZ_7";
+//			gpio_reset = "GPIOZ_6";
+//			xres = <1024>;
+//			yres = <600>;
+//			pol = <0x1>;
+//			fw_file = "/etc/touch/ft5x06.fw";
 						
-		};
+//		};
 
 //$$ DEVICE = "touch_gt9xx"
 //$$ L2 PROP_STR = "status"
diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
index 1e96de733623..5c088716426c 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
@@ -433,19 +433,19 @@ sdio{
 //$$ L3 PROP_U32 = "max_req_size"
 //$$ L2 PROP_STR = "gpio_dat3"       	
 //$$ L2 PROP_U32 = "card_type"
-        emmc{
-            status = "ok";
-            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "emmc";
-            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /**128KB*/
-            gpio_dat3 = "BOOT_3";
-            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
-        };
+//        emmc{
+//            status = "ok";
+//            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            f_max_w = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };
 
     };
 
@@ -689,17 +689,17 @@ sdio{
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
-        axp202 { /* PMU for AXP */
-            compatible = "axp_mfd";                             /* for driver probe, must have          */
-            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x34>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        axp202 { /* PMU for AXP */
+//            compatible = "axp_mfd";                             /* for driver probe, must have          */
+//            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x34>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_aml1212"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -709,17 +709,17 @@ sdio{
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
-        aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
-            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x35>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        aml1212{                                                /* PMU for AML1212, see comment above   */
+//            compatible = "aml_pmu";                             /* for driver probe, must have          */
+//            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x35>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_rn5t618"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1018,20 +1018,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"		
-	lcd_LP097QX1:lcd_LP097QX1{	//k100
-		model_name="LP097QX1";	/** lcd model name */
-		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_LP097QX1:lcd_LP097QX1{	//k100
+//		model_name="LP097QX1";	/** lcd model name */
+//		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
-		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
+//		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
 //$$ L2 PROP_STR = "model_name"
@@ -1083,36 +1083,36 @@ sdio{
 //$$ L2 PROP_U32 = "dsi_transfer_mode"
 //$$ L2 PROP_U32 18 = "dsi_power_on_cmd"
 //$$ L2 PROP_U32 2 = "dsi_sleep_out_display_on_delay"
-lcd_LD070WX4:lcd_LD070WX4{
-		model_name="LD070WX4";	/** lcd model name */
-		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<94 151>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
-
-		resolution=<800 1280>;	/** horizontal resolution, vertical resolution */
-		period=<864 1315>;		/** horizontal period(htotal), vertical period(vtotal) */
-
-		clock_hz_pol=<56800000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<4 48>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-		vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
-
-        dsi_lane_num=<4>;/** mipi dsi data lane number */
-        dsi_bit_rate_min_max=<400 500>;/** range of mipi dsi data lane bit rate(unit: MHz) */
-        dsi_transfer_mode=<0>;/** mipi dsi transfer mode: (0=command mode, 1=video mode) */
-        dsi_power_on_cmd =< 0x01  0x0
-                            0xFF  0x20
-                            0xAE  0x0B 
-                            0xEE  0xEA 
-                            0xEF  0x5F 
-                            0xF2  0x68 
-                            0xEE  0x0 
-                            0xEF  0x0 
-                            0xFF  0xFF
-                          >;/** special power on command, 2 data is a pair(reg, value), if the first valu is 0xff, second value is delay time(unit: ms), ending flag is 0xff,0xff.*/
-        dsi_sleep_out_display_on_delay=<200 100>; /** mipi dsi basic delay: (unit: ms) */
-	};
+//lcd_LD070WX4:lcd_LD070WX4{
+//		model_name="LD070WX4";	/** lcd model name */
+//		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<94 151>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 0>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+
+//		resolution=<800 1280>;	/** horizontal resolution, vertical resolution */
+//		period=<864 1315>;		/** horizontal period(htotal), vertical period(vtotal) */
+
+//		clock_hz_pol=<56800000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<4 48>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//		vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
+
+//        dsi_lane_num=<4>;/** mipi dsi data lane number */
+//        dsi_bit_rate_min_max=<400 500>;/** range of mipi dsi data lane bit rate(unit: MHz) */
+//        dsi_transfer_mode=<0>;/** mipi dsi transfer mode: (0=command mode, 1=video mode) */
+//        dsi_power_on_cmd =< 0x01  0x0
+//                            0xFF  0x20
+//                            0xAE  0x0B 
+//                            0xEE  0xEA 
+//                            0xEF  0x5F 
+//                            0xF2  0x68 
+//                            0xEE  0x0 
+//                            0xEF  0x0 
+//                            0xFF  0xFF
+//                          >;/** special power on command, 2 data is a pair(reg, value), if the first valu is 0xff, second value is delay time(unit: ms), ending flag is 0xff,0xff.*/
+//        dsi_sleep_out_display_on_delay=<200 100>; /** mipi dsi basic delay: (unit: ms) */
+//	};
 
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_CLAP070NJ02>
@@ -1126,20 +1126,20 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"
-	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
-		model_name="CLAP070NJ02";	/** lcd model name */
-		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
+//		model_name="CLAP070NJ02";	/** lcd model name */
+//		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
-		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
+//		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
 //$$ L2 PROP_STR = "model_name"
@@ -1152,20 +1152,20 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"
-	lcd_TN070TN92:lcd_TN070TN92{	//800*480
-		model_name="TN070TN92";	/** lcd model name */
-		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_TN070TN92:lcd_TN070TN92{	//800*480
+//		model_name="TN070TN92";	/** lcd model name */
+//		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
-		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
+//		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
 //$$ L2 PROP_STR = "model_name"
@@ -1178,20 +1178,20 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"	
-	lcd_LP097X02:lcd_LP097X02{	//g24
-		model_name="LP097X02";	/** lcd model name */
-		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_LP097X02:lcd_LP097X02{	//g24
+//		model_name="LP097X02";	/** lcd model name */
+//		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
-		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
+//		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_CLAA101FP05XG>
 //$$ L2 PROP_STR = "model_name"
@@ -1207,24 +1207,24 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 = "dsi_lane_num"
 //$$ L2 PROP_U32 = "pclk_lanebyteclk_factor"
 //$$ L2 PROP_U32 2 = "dsi_bit_rate_min_max"
-	lcd_CLAA101FP05XG:lcd_CLAA101FP05XG{
-		model_name="CLAA101FP05XG";	/** lcd model name */
-		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<216 135>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_CLAA101FP05XG:lcd_CLAA101FP05XG{
+//		model_name="CLAA101FP05XG";	/** lcd model name */
+//		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<216 135>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
-		resolution=<1920 1200>;	/** horizontal resolution, vertical resolution */
-		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1920 1200>;	/** horizontal resolution, vertical resolution */
+//		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
-		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
-        dsi_lane_num=<4>;/** mipi dsi data lane number */
-        dsi_bit_rate_min_max=<900 1000>;/** range of mipi dsi data lane bit rate(unit: MHz) */
-        pclk_lanebyteclk_factor =<15>;/** special adjust, default is 0 */
-	};
+//        dsi_lane_num=<4>;/** mipi dsi data lane number */
+//        dsi_bit_rate_min_max=<900 1000>;/** range of mipi dsi data lane bit rate(unit: MHz) */
+//        pclk_lanebyteclk_factor =<15>;/** special adjust, default is 0 */
+//	};
 
 //$$ DEVICE="lcd_extern"
 //$$ L2 PROP_STR = "status"
@@ -1257,36 +1257,36 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        stk831x{
-            dev_name = "stk831x";
-            status = "okay";
-            address = <0x3d>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        stk831x{
+//            dev_name = "stk831x";
+//            status = "okay";
+//            address = <0x3d>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 
 //$$ DEVICE="mma7660"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        mma7660{
-            dev_name = "mma7660";
-            status = "okay";
-            address = <0x4c>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        mma7660{
+//            dev_name = "mma7660";
+//            status = "okay";
+//            address = <0x4c>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 
 //$$ DEVICE="mma8452"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 = "acc_dir"
-        mma8452{
-            dev_name = "mma8452";
-            status = "okay";
-            address = <0x1c>;
-            i2c_bus = "i2c_bus_b";
-            acc_dir = <0x0101>;
-        };
+//        mma8452{
+//            dev_name = "mma8452";
+//            status = "okay";
+//            address = <0x1c>;
+//            i2c_bus = "i2c_bus_b";
+//            acc_dir = <0x0101>;
+//        };
 
 //$$ DEVICE="mma865x"
 //$$ L2 PROP_STR = "status"
@@ -1305,12 +1305,12 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        afa750{
-            dev_name = "afa750";
-            status = "okay";
-            address = <0x3c>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        afa750{
+//            dev_name = "afa750";
+//            status = "okay";
+//            address = <0x3c>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 };
 
 /// ***************************************************************************************
@@ -1377,31 +1377,31 @@ lcd_LD070WX4:lcd_LD070WX4{
 
     aml_audio_codec{
         compatible = "amlogic,audio_codec";
-        rt5616:rt5616{
-            codec_name = "rt5616";
-            i2c_addr = <0x1B>;
-            i2c_bus = "i2c_bus_d";
-            id_reg = <0x00>;
-            id_val = <0x21>;
-            capless = <0>;
-            status = "okay";
-        };
-        rt5631:rt5631{
-            codec_name = "rt5631";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            id_reg = <0x00>;
-            id_val = <0x01>;
-            capless = <0>;
-            status = "disable";      
-        };  
-        wm8960:wm8960{
-            codec_name = "wm8960";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            capless = <1>;
-	    status = "disable";
-        };
+//        rt5616:rt5616{
+//            codec_name = "rt5616";
+//            i2c_addr = <0x1B>;
+//            i2c_bus = "i2c_bus_d";
+//            id_reg = <0x00>;
+//            id_val = <0x21>;
+//            capless = <0>;
+//            status = "okay";
+//        };
+//        rt5631:rt5631{
+//            codec_name = "rt5631";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            id_reg = <0x00>;
+//            id_val = <0x01>;
+//            capless = <0>;
+//            status = "disable";      
+//        };  
+//        wm8960:wm8960{
+//            codec_name = "wm8960";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            capless = <1>;
+//	    status = "disable";
+//        };
     };
 
 //$$ DEVICE="aml_m8_sound_card"
@@ -1480,8 +1480,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 			status = "okay";
 		};
 
-///	-	ov5640
-//$$ DEVICE="ov5640"
+///	-	gc2035
+//$$ DEVICE="gc2035"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1490,20 +1490,20 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_1{
-			cam_name = "ov5640";
+        	cam_1{
+			cam_name = "gc2035";
 			front_back = <0>;
 			i2c_bus = "i2c_bus_d";
 			gpio_pwdn = "GPIOH_6";
 			gpio_rst = "GPIOH_4";
-			mirror_flip = <1>;
+			mirror_flip = <0>;
 			vertical_flip = <0>;	
 			bt_path = "gpio";
-			status = "okay";	
+			status = "okay";
 		};
 
-///	-	gc2035
-//$$ DEVICE="gc2035"
+///	-	ov5640
+//$$ DEVICE="ov5640"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1512,17 +1512,17 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        	cam_2{
-			cam_name = "gc2035";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_2{
+//			cam_name = "ov5640";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <1>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";	
+//		};
 
  ///	-	hm2057
 //$$ DEVICE="hm2057"
@@ -1534,17 +1534,18 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"    
-            	 cam_3{
-			cam_name = "hm2057";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//            	 cam_3{
+//			cam_name = "hm2057";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
+
 //$$ DEVICE="sp0a19"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
@@ -1554,17 +1555,18 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        cam_4{
-			cam_name = "sp0a19";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//        cam_4{
+//			cam_name = "sp0a19";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
+
 ///	-	hm5065
 //$$ DEVICE="hm5065"
 //$$ L2 PROP_STR = "status"
@@ -1575,17 +1577,17 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_5{
-			cam_name = "hm5065";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_5{
+//			cam_name = "hm5065";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 ///	-    sp1628
 //$$ DEVICE="sp1628"
@@ -1597,17 +1599,17 @@ lcd_LD070WX4:lcd_LD070WX4{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_6{
-			cam_name = "sp1628";
-			front_back = <1>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_6{
+//			cam_name = "sp1628";
+//			front_back = <1>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 	};	
 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
index 7edbdfed761f..5d4e41f946c9 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
@@ -434,19 +434,19 @@ sdio{
 //$$ L3 PROP_U32 = "max_req_size"
 //$$ L2 PROP_STR = "gpio_dat3"       	
 //$$ L2 PROP_U32 = "card_type"
-        emmc{
-            status = "ok";
-            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "emmc";
-            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /**128KB*/
-            gpio_dat3 = "BOOT_3";
-            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
-        };
+//        emmc{
+//            status = "ok";
+//            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            f_max_w = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };
 
     };
 
@@ -690,17 +690,17 @@ sdio{
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
-        axp202 { /* PMU for AXP */
-            compatible = "axp_mfd";                             /* for driver probe, must have          */
-            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x34>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        axp202 { /* PMU for AXP */
+//            compatible = "axp_mfd";                             /* for driver probe, must have          */
+//            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x34>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_aml1212"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -710,17 +710,17 @@ sdio{
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
-        aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
-            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x35>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        aml1212{                                                /* PMU for AML1212, see comment above   */
+//            compatible = "aml_pmu";                             /* for driver probe, must have          */
+//            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x35>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_rn5t618"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1019,20 +1019,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"		
-	lcd_LP097QX1:lcd_LP097QX1{	//k100
-		model_name="LP097QX1";	/** lcd model name */
-		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_LP097QX1:lcd_LP097QX1{	//k100
+//		model_name="LP097QX1";	/** lcd model name */
+//		interface="edp";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
-		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<2048 1536>;	/** horizontal resolution, vertical resolution */
+//		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_B080XAN01>
 //$$ L2 PROP_STR = "model_name"
@@ -1078,20 +1078,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"
-	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
-		model_name="CLAP070NJ02";	/** lcd model name */
-		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_CLAP070NJ02:lcd_CLAP070NJ02{	//g33
+//		model_name="CLAP070NJ02";	/** lcd model name */
+//		interface="ttl";			/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<154 86>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
-		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1024 600>;	/** horizontal resolution, vertical resolution */
+//		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_TN070TN92>
 //$$ L2 PROP_STR = "model_name"
@@ -1104,20 +1104,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"
-	lcd_TN070TN92:lcd_TN070TN92{	//800*480
-		model_name="TN070TN92";	/** lcd model name */
-		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_TN070TN92:lcd_TN070TN92{	//800*480
+//		model_name="TN070TN92";	/** lcd model name */
+//		interface="ttl";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<154 86>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
-		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<800 480>;	/** horizontal resolution, vertical resolution */
+//		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_LP097X02>
 //$$ L2 PROP_STR = "model_name"
@@ -1130,20 +1130,20 @@ sdio{
 //$$ L2 PROP_U32 2 = "hsync_width_backporch"
 //$$ L2 PROP_U32 2 = "vsync_width_backporch"
 //$$ L2 PROP_U32 2 = "pol_hsync_vsync"	
-	lcd_LP097X02:lcd_LP097X02{	//g24
-		model_name="LP097X02";	/** lcd model name */
-		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_LP097X02:lcd_LP097X02{	//g24
+//		model_name="LP097X02";	/** lcd model name */
+//		interface="lvds";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<197 147>;	/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<6 0>;	/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 		
-		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
-		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1024 768>;	/** horizontal resolution, vertical resolution */
+//		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
-		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
-	};
+//		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//	};
 
 //$$ MATCH "lcd_model_config_match" = <&lcd_CLAA101FP05XG>
 //$$ L2 PROP_STR = "model_name"
@@ -1159,24 +1159,24 @@ sdio{
 //$$ L2 PROP_U32 = "dsi_lane_num"
 //$$ L2 PROP_U32 = "pclk_lanebyteclk_factor"
 //$$ L2 PROP_U32 2 = "dsi_bit_rate_min_max"
-	lcd_CLAA101FP05XG:lcd_CLAA101FP05XG{
-		model_name="CLAA101FP05XG";	/** lcd model name */
-		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
-		active_area=<216 135>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
-		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+//	lcd_CLAA101FP05XG:lcd_CLAA101FP05XG{
+//		model_name="CLAA101FP05XG";	/** lcd model name */
+//		interface="mipi";		/** lcd_interface(mipi, lvds, edp, ttl) */
+//		active_area=<216 135>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+//		lcd_bits_option=<8 1>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
 
-		resolution=<1920 1200>;	/** horizontal resolution, vertical resolution */
-		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
+//		resolution=<1920 1200>;	/** horizontal resolution, vertical resolution */
+//		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
-		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
-		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+//		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+//		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
+//		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
-        dsi_lane_num=<4>;/** mipi dsi data lane number */
-        dsi_bit_rate_min_max=<900 1000>;/** range of mipi dsi data lane bit rate(unit: MHz) */
-        pclk_lanebyteclk_factor =<15>;/** special adjust, default is 0 */
-	};
+//        dsi_lane_num=<4>;/** mipi dsi data lane number */
+//        dsi_bit_rate_min_max=<900 1000>;/** range of mipi dsi data lane bit rate(unit: MHz) */
+//        pclk_lanebyteclk_factor =<15>;/** special adjust, default is 0 */
+//	};
 
 //$$ DEVICE="lcd_extern"
 //$$ L2 PROP_STR = "status"
@@ -1209,36 +1209,36 @@ sdio{
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        stk831x{
-            dev_name = "stk831x";
-            status = "okay";
-            address = <0x3d>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        stk831x{
+//            dev_name = "stk831x";
+//            status = "okay";
+//            address = <0x3d>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 
 //$$ DEVICE="mma7660"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        mma7660{
-            dev_name = "mma7660";
-            status = "okay";
-            address = <0x4c>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        mma7660{
+//            dev_name = "mma7660";
+//            status = "okay";
+//            address = <0x4c>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 
 //$$ DEVICE="mma8452"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 = "acc_dir"
-        mma8452{
-            dev_name = "mma8452";
-            status = "okay";
-            address = <0x1c>;
-            i2c_bus = "i2c_bus_b";
-            acc_dir = <0x0101>;
-        };
+//        mma8452{
+//            dev_name = "mma8452";
+//            status = "okay";
+//            address = <0x1c>;
+//            i2c_bus = "i2c_bus_b";
+//            acc_dir = <0x0101>;
+//        };
 
 //$$ DEVICE="mma865x"
 //$$ L2 PROP_STR = "status"
@@ -1257,12 +1257,12 @@ sdio{
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "address"
 //$$ L2 PROP_STR = "i2c_bus"
-        afa750{
-            dev_name = "afa750";
-            status = "okay";
-            address = <0x3c>;
-            i2c_bus = "i2c_bus_b";
-        };
+//        afa750{
+//            dev_name = "afa750";
+//            status = "okay";
+//            address = <0x3c>;
+//            i2c_bus = "i2c_bus_b";
+//        };
 };
 
 /// ***************************************************************************************
@@ -1329,31 +1329,31 @@ sdio{
 
     aml_audio_codec{
         compatible = "amlogic,audio_codec";
-        rt5616:rt5616{
-            codec_name = "rt5616";
-            i2c_addr = <0x1B>;
-            i2c_bus = "i2c_bus_d";
-            id_reg = <0x00>;
-            id_val = <0x21>;
-            capless = <0>;
-            status = "okay";
-        };
-        rt5631:rt5631{
-            codec_name = "rt5631";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            id_reg = <0x00>;
-            id_val = <0x01>;
-            capless = <0>;
-            status = "disable";      
-        };  
-        wm8960:wm8960{
-            codec_name = "wm8960";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            capless = <1>;
-	    status = "disable";
-        };
+//        rt5616:rt5616{
+//            codec_name = "rt5616";
+//            i2c_addr = <0x1B>;
+//            i2c_bus = "i2c_bus_d";
+//            id_reg = <0x00>;
+//            id_val = <0x21>;
+//            capless = <0>;
+//            status = "okay";
+//        };
+//        rt5631:rt5631{
+//            codec_name = "rt5631";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            id_reg = <0x00>;
+//            id_val = <0x01>;
+//            capless = <0>;
+//            status = "disable";      
+//        };  
+//        wm8960:wm8960{
+//            codec_name = "wm8960";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            capless = <1>;
+//	    status = "disable";
+//        };
     };
 
 //$$ DEVICE="aml_m8_sound_card"
@@ -1432,8 +1432,8 @@ sdio{
 			status = "okay";
 		};
 
-///	-	ov5640
-//$$ DEVICE="ov5640"
+///	-	gc2035
+//$$ DEVICE="gc2035"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1442,20 +1442,20 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_1{
-			cam_name = "ov5640";
+        	cam_1{
+			cam_name = "gc2035";
 			front_back = <0>;
 			i2c_bus = "i2c_bus_d";
 			gpio_pwdn = "GPIOH_6";
 			gpio_rst = "GPIOH_4";
-			mirror_flip = <1>;
+			mirror_flip = <0>;
 			vertical_flip = <0>;	
 			bt_path = "gpio";
-			status = "okay";	
+			status = "okay";
 		};
 
-///	-	gc2035
-//$$ DEVICE="gc2035"
+///	-	ov5640
+//$$ DEVICE="ov5640"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1464,17 +1464,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        	cam_2{
-			cam_name = "gc2035";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_2{
+//			cam_name = "ov5640";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <1>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";	
+//		};
 
  ///	-	hm2057
 //$$ DEVICE="hm2057"
@@ -1486,17 +1486,18 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"    
-            	 cam_3{
-			cam_name = "hm2057";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//            	 cam_3{
+//			cam_name = "hm2057";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
+
 //$$ DEVICE="sp0a19"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
@@ -1506,17 +1507,18 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-        cam_4{
-			cam_name = "sp0a19";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//        cam_4{
+//			cam_name = "sp0a19";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
+
 ///	-	hm5065
 //$$ DEVICE="hm5065"
 //$$ L2 PROP_STR = "status"
@@ -1527,17 +1529,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_5{
-			cam_name = "hm5065";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_5{
+//			cam_name = "hm5065";
+//			front_back = <0>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_5";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 ///	-    sp1628
 //$$ DEVICE="sp1628"
@@ -1549,17 +1551,17 @@ sdio{
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
-		cam_6{
-			cam_name = "sp1628";
-			front_back = <1>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;	
-			bt_path = "gpio";
-			status = "okay";
-		};
+//		cam_6{
+//			cam_name = "sp1628";
+//			front_back = <1>;
+//			i2c_bus = "i2c_bus_d";
+//			gpio_pwdn = "GPIOH_6";
+//			gpio_rst = "GPIOH_4";
+//			mirror_flip = <0>;
+//			vertical_flip = <0>;	
+//			bt_path = "gpio";
+//			status = "okay";
+//		};
 
 	};	
 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
index 02aae50c37d1..0df6fb414f4f 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200_1G.dtd
@@ -468,19 +468,19 @@ sdio{
 //$$ L3 PROP_U32 = "max_req_size"
 //$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_U32 = "card_type"
-        emmc{
-            status = "ok";
-            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "emmc";
-            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /**128KB*/
-            gpio_dat3 = "BOOT_3";
-            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
-        };
+//        emmc{
+//            status = "ok";
+//            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            f_max_w = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };
 
 //$$ DEVICE="sdio"
 //$$ L2 PROP_STR = "status"
@@ -643,17 +643,17 @@ sdio{
 //$$ L3 PROP_U32 2="reg"
 //$$ L3 PROP_STR = "pinctrl-names"
 //$$ L2 PROP_CHOICE "I2C_B_pin_match" = "pinctrl-0"	
-	i2c@c11087c0{ /*I2C-B*/
-		compatible = "amlogic,aml_i2c";
-		dev_name = "i2c-B";
-		status = "ok";
-		reg = <0xc11087c0 0x20>;
-		device_id = <2>;
-		pinctrl-names="default";
-		pinctrl-0=<&b_i2c_master>;
-		#address-cells = <1>;
-		#size-cells = <0>;
- 	};
+//	i2c@c11087c0{ /*I2C-B*/
+//		compatible = "amlogic,aml_i2c";
+//		dev_name = "i2c-B";
+//		status = "ok";
+//		reg = <0xc11087c0 0x20>;
+//		device_id = <2>;
+//		pinctrl-names="default";
+//		pinctrl-0=<&b_i2c_master>;
+//		#address-cells = <1>;
+//		#size-cells = <0>;
+// 	};
 
 //$$ DEVICE="I2C_C"
 //$$ L2 PROP_STR = "status"
@@ -676,17 +676,17 @@ sdio{
 //$$ L3 PROP_U32 2="reg"
 //$$ L3 PROP_STR = "pinctrl-names"
 //$$ L2 PROP_CHOICE "I2C_D_pin_match" = "pinctrl-0"	
-	i2c@c1108d20{ /*I2C-D*/
-		compatible = "amlogic,aml_i2c";
-		dev_name = "i2c-D";
-		status = "ok";
-		reg = <0xc1108d20 0x20>;
-		device_id = <4>;
-		pinctrl-names="default";
-		pinctrl-0=<&d_i2c_master>;
-		#address-cells = <1>;
-		#size-cells = <0>;
-	};
+//	i2c@c1108d20{ /*I2C-D*/
+//		compatible = "amlogic,aml_i2c";
+//		dev_name = "i2c-D";
+//		status = "ok";
+//		reg = <0xc1108d20 0x20>;
+//		device_id = <4>;
+//		pinctrl-names="default";
+//		pinctrl-0=<&d_i2c_master>;
+//		#address-cells = <1>;
+//		#size-cells = <0>;
+//	};
 
 /// ***************************************************************************************
 ///	-	Power
@@ -750,16 +750,16 @@ sdio{
 //$$ L2 PROP_U32 = "ddr_voltage"
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_STR = "status"
-        axp202 { /* PMU for AXP */
-            compatible = "axp_mfd";                             /* for driver probe, must have          */
-            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x34>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        axp202 { /* PMU for AXP */
+//            compatible = "axp_mfd";                             /* for driver probe, must have          */
+//            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x34>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_aml1212"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -768,16 +768,16 @@ sdio{
 //$$ L2 PROP_U32 = "ddr_voltage"
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_STR = "status"
-        aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
-            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x35>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        aml1212{                                                /* PMU for AML1212, see comment above   */
+//            compatible = "aml_pmu";                             /* for driver probe, must have          */
+//            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x35>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_rn5t618"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1038,31 +1038,31 @@ sdio{
 
     aml_audio_codec{
         compatible = "amlogic,audio_codec";
-        rt5616:rt5616{
-            codec_name = "rt5616";
-            i2c_addr = <0x1B>;
-            i2c_bus = "i2c_bus_d";
-            id_reg = <0x00>;
-            id_val = <0x21>;
-            capless = <0>;
-            status = "okay";
-        };
-        rt5631:rt5631{
-            codec_name = "rt5631";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            id_reg = <0x00>;
-            id_val = <0x01>;
-            capless = <0>;
-            status = "disable";      
-        };  
-        wm8960:wm8960{
-            codec_name = "wm8960";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            capless = <1>;
-	    status = "disable";
-        };
+//        rt5616:rt5616{
+//            codec_name = "rt5616";
+//            i2c_addr = <0x1B>;
+//            i2c_bus = "i2c_bus_d";
+//            id_reg = <0x00>;
+//            id_val = <0x21>;
+//            capless = <0>;
+//            status = "okay";
+//        };
+//        rt5631:rt5631{
+//            codec_name = "rt5631";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            id_reg = <0x00>;
+//            id_val = <0x01>;
+//            capless = <0>;
+//            status = "disable";      
+//        };  
+//        wm8960:wm8960{
+//            codec_name = "wm8960";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            capless = <1>;
+//	    status = "disable";
+//        };
     };
 
 //$$ DEVICE="aml_m8_sound_card"
@@ -1536,71 +1536,69 @@ sdio{
             amlogic,pullup=<1>;
             amlogic,pullupen=<1>;
         };
-        
-        sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins{
-            amlogic,setmask=<2 0x00000030>;         /*sdhc b*/
-            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
-                                4 0x7c000000        /*sdhc c*/
-                                2 0x0000fc00        /*sdio b*/
-                                8 0x00000600>;      /*UART*/
-            amlogic,pins = "CARD_2","CARD_3"; /* CARD_2:CLK, CARD_3:CMD */
-            amlogic,enable-output=<1>; /* 0:output, 1:input */
-            amlogic,pullup=<1>;
-            amlogic,pullupen=<1>;
-        };
-        sdhc_sd_all_pins:sdhc_sd_all_pins{
-            amlogic,setmask=<2 0x000000f0>;         /*sdhc b*/
-            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
-                                4 0x7c000000        /*sdhc c*/
-                                2 0x0000fc00        /*sdio b*/
-                                8 0x00000600>;      /*UART*/
-            amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
-            amlogic,enable-output=<1>; /* 0:output, 1:input */
-            amlogic,pullup=<1>;
-            amlogic,pullupen=<1>;
-        };
 
-        sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins{
-            amlogic,setmask=<4 0x0c000000>;         /*bit[26-27] */
-            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
-                                5 0x00007c00        /*sdhc a*/
-                                6 0x3f000000>;        /*sdio c*/
-            amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
-            amlogic,enable-output=<1>; /** 0:output, 1:input */
-            amlogic,pullup=<1>;
-            amlogic,pullupen=<1>;
-        };
-        sdhc_emmc_all_pins:sdhc_emmc_all_pins{
-            amlogic,setmask=<4 0x7c000000>;         /*sdhc c*/
-            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
-                                5 0x00007c00        /*sdhc a*/
-                                6 0x3f000000>;        /*sdio c*/
-            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4","BOOT_5","BOOT_6","BOOT_7","BOOT_16","BOOT_17";
-            amlogic,enable-output=<1>; /** 0:output, 1:input */
-            amlogic,pullup=<1>;
-            amlogic,pullupen=<1>;
-        };
-
-        sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins{
-            amlogic,setmask=<5 0x00000c00>;         /*sdhc a bit[10-11] */
-            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
-                                4 0x7c000000        /*sdhc c */
-                                8 0x0000003f>;        /*sdio a*/
-            amlogic,pins = "GPIOX_8","GPIOX_9"; /** BOOT_16:CMD, BOOT_17:CLK */
-            amlogic,enable-output=<1>; /** 0:output, 1:input */
-            amlogic,pullup=<1>;
-            amlogic,pullupen=<1>;
-        };
-        sdhc_sdio_all_pins:sdhc_sdio_all_pins{
-            amlogic,setmask=<5 0x00006c00>;         /*sdhc a*/
-            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
-                                4 0x7c000000        /*sdhc c */
-                                8 0x0000003f>;        /*sdio a*/
-            amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
-            amlogic,enable-output=<1>; /** 0:output, 1:input */
-            amlogic,pullup=<1>;
-            amlogic,pullupen=<1>;
-        };
+//        sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins{
+//            amlogic,setmask=<2 0x00000030>;         /*sdhc b*/
+//            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+//                                4 0x7c000000        /*sdhc c*/
+//                                2 0x0000fc00        /*sdio b*/
+//                                8 0x00000600>;      /*UART*/
+//            amlogic,pins = "CARD_2","CARD_3"; /* CARD_2:CLK, CARD_3:CMD */
+//            amlogic,enable-output=<1>; /* 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sd_all_pins:sdhc_sd_all_pins{
+//            amlogic,setmask=<2 0x000000f0>;         /*sdhc b*/
+//            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+//                                4 0x7c000000        /*sdhc c*/
+//                                2 0x0000fc00        /*sdio b*/
+//                                8 0x00000600>;      /*UART*/
+//            amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
+//            amlogic,enable-output=<1>; /* 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins{
+//            amlogic,setmask=<4 0x0c000000>;         /*bit[26-27] */
+//            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+//                                5 0x00007c00        /*sdhc a*/
+//                                6 0x3f000000>;        /*sdio c*/
+//            amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_emmc_all_pins:sdhc_emmc_all_pins{
+//            amlogic,setmask=<4 0x7c000000>;         /*sdhc c*/
+//            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+//                                5 0x00007c00        /*sdhc a*/
+//                                6 0x3f000000>;        /*sdio c*/
+//            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4","BOOT_5","BOOT_6","BOOT_7","BOOT_16","BOOT_17";
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins{
+//            amlogic,setmask=<5 0x00000c00>;         /*sdhc a bit[10-11] */
+//            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+//                                4 0x7c000000        /*sdhc c */
+//                                8 0x0000003f>;        /*sdio a*/
+//            amlogic,pins = "GPIOX_8","GPIOX_9"; /** BOOT_16:CMD, BOOT_17:CLK */
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sdio_all_pins:sdhc_sdio_all_pins{
+//            amlogic,setmask=<5 0x00006c00>;         /*sdhc a*/
+//            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+//                                4 0x7c000000        /*sdhc c */
+//                                8 0x0000003f>;        /*sdio a*/
+//            amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
 
 //$$ MATCH "I2C_AO_pin_match" = "&ao_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
@@ -1633,10 +1631,10 @@ sdio{
 //$$ MATCH "I2C_B_pin_match" = "&b_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_STR 2 = "amlogic,pins"
-		b_i2c_master:b_i2c{
-			amlogic,setmask=<5 0xc000000>;
-			amlogic,pins="GPIOZ_2","GPIOZ_3";
-		};
+//		b_i2c_master:b_i2c{
+//			amlogic,setmask=<5 0xc000000>;
+//			amlogic,pins="GPIOZ_2","GPIOZ_3";
+//		};
 
 // MATCH "I2C_C_pin_match" = "&c_i2c_master"
 // L2 PROP_U32 2 = "amlogic,setmask"
@@ -1655,10 +1653,10 @@ sdio{
 //$$ MATCH "I2C_D_pin_match" = "&d_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_STR 2 = "amlogic,pins"
-		d_i2c_master:d_i2c{
-			amlogic,setmask=<4 0xc>;
-			amlogic,pins="GPIOH_7","GPIOH_8";
-		};
+//		d_i2c_master:d_i2c{
+//			amlogic,setmask=<4 0xc>;
+//			amlogic,pins="GPIOH_7","GPIOH_8";
+//		};
 
 //$$ MATCH "remote_pin_0_match" = "&remote_pins"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
index 99a8c706801e..3696bb5c9a7f 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200_v1.dtd
@@ -225,16 +225,16 @@ void root_func(){
 //$$ L2 PROP_U32 2 = "reg"
 //$$ L2 PROP_U32 = "irq"
 //$$ L2 PROP_U32 = "vdin_id"
-    vdin1{
-        compatible = "amlogic,vdin";
-        dev_name = "vdin1";
-        status = "ok";
-        reserve-memory = <0x01000000>;
-	miracast_size = <1920 1080>;//1920x1080x2x4=17M
-	reserve-iomap = "true";
-        irq = <117>;
-        vdin_id = <1>;
-	};
+//    vdin1{
+//        compatible = "amlogic,vdin";
+//        dev_name = "vdin1";
+//        status = "ok";
+//        reserve-memory = <0x01000000>;
+//	  miracast_size = <1920 1080>;//1920x1080x2x4=17M
+//	  reserve-iomap = "true";
+//        irq = <117>;
+//        vdin_id = <1>;
+//	};
 
 /// ***************************************************************************************
 ///	-	DISP&MM-AMLVIDEO2
@@ -242,13 +242,13 @@ void root_func(){
 //$$ DEVICE="amlvideo2"
 //$$ L2 PROP_STR = "status"
 //$$ L3 PROP_U32 2 ="reg"
-    amlvideo2{
-		compatible = "amlogic,amlvideo2";
-		dev_name = "amlvideo2.0";
-		status = "okay";
-		reserve-memory = <0x01000000>;
-		reserve-iomap = "true";
-	};
+//    amlvideo2{
+//		compatible = "amlogic,amlvideo2";
+//		dev_name = "amlvideo2.0";
+//		status = "okay";
+//		reserve-memory = <0x01800000>;
+//		reserve-iomap = "true";
+//	};
 
 /// ***************************************************************************************
 ///	-	ION
@@ -538,17 +538,17 @@ sdio{
 //$$ L3 PROP_U32 2="reg"
 //$$ L3 PROP_STR = "pinctrl-names"
 //$$ L2 PROP_CHOICE "I2C_B_pin_match" = "pinctrl-0"	
-	i2c@c11087c0{ /*I2C-B*/
-		compatible = "amlogic,aml_i2c";
-		dev_name = "i2c-B";
-		status = "ok";
-		reg = <0xc11087c0 0x20>;
-		device_id = <2>;
-		pinctrl-names="default";
-		pinctrl-0=<&b_i2c_master>;
-		#address-cells = <1>;
-		#size-cells = <0>;
- 	};
+//	i2c@c11087c0{ /*I2C-B*/
+//		compatible = "amlogic,aml_i2c";
+//		dev_name = "i2c-B";
+//		status = "ok";
+//		reg = <0xc11087c0 0x20>;
+//		device_id = <2>;
+//		pinctrl-names="default";
+//		pinctrl-0=<&b_i2c_master>;
+//		#address-cells = <1>;
+//		#size-cells = <0>;
+// 	};
 
 //$$ DEVICE="I2C_C"
 //$$ L2 PROP_STR = "status"
@@ -571,17 +571,17 @@ sdio{
 //$$ L3 PROP_U32 2="reg"
 //$$ L3 PROP_STR = "pinctrl-names"
 //$$ L2 PROP_CHOICE "I2C_D_pin_match" = "pinctrl-0"	
-	i2c@c1108d20{ /*I2C-D*/
-		compatible = "amlogic,aml_i2c";
-		dev_name = "i2c-D";
-		status = "ok";
-		reg = <0xc1108d20 0x20>;
-		device_id = <4>;
-		pinctrl-names="default";
-		pinctrl-0=<&d_i2c_master>;
-		#address-cells = <1>;
-		#size-cells = <0>;
-	};
+//	i2c@c1108d20{ /*I2C-D*/
+//		compatible = "amlogic,aml_i2c";
+//		dev_name = "i2c-D";
+//		status = "ok";
+//		reg = <0xc1108d20 0x20>;
+//		device_id = <4>;
+//		pinctrl-names="default";
+//		pinctrl-0=<&d_i2c_master>;
+//		#address-cells = <1>;
+//		#size-cells = <0>;
+//	};
 
 /// ***************************************************************************************
 ///	-	Power
@@ -645,16 +645,16 @@ sdio{
 //$$ L2 PROP_U32 = "ddr_voltage"
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_STR = "status"
-        axp202 { /* PMU for AXP */
-            compatible = "axp_mfd";                             /* for driver probe, must have          */
-            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x34>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        axp202 { /* PMU for AXP */
+//            compatible = "axp_mfd";                             /* for driver probe, must have          */
+//            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x34>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_aml1212"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -663,16 +663,16 @@ sdio{
 //$$ L2 PROP_U32 = "ddr_voltage"
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_STR = "status"
-        aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
-            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x35>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        aml1212{                                                /* PMU for AML1212, see comment above   */
+//            compatible = "aml_pmu";                             /* for driver probe, must have          */
+//            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x35>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_rn5t618"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -933,31 +933,31 @@ sdio{
 
     aml_audio_codec{
         compatible = "amlogic,audio_codec";
-        rt5616:rt5616{
-            codec_name = "rt5616";
-            i2c_addr = <0x1B>;
-            i2c_bus = "i2c_bus_d";
-            id_reg = <0x00>;
-            id_val = <0x21>;
-            capless = <0>;
-            status = "okay";
-        };
-        rt5631:rt5631{
-            codec_name = "rt5631";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            id_reg = <0x00>;
-            id_val = <0x01>;
-            capless = <0>;
-            status = "disable";      
-        };  
-        wm8960:wm8960{
-            codec_name = "wm8960";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            capless = <1>;
-	    status = "disable";
-        };
+//        rt5616:rt5616{
+//            codec_name = "rt5616";
+//            i2c_addr = <0x1B>;
+//            i2c_bus = "i2c_bus_d";
+//            id_reg = <0x00>;
+//            id_val = <0x21>;
+//            capless = <0>;
+//            status = "okay";
+//        };
+//        rt5631:rt5631{
+//            codec_name = "rt5631";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            id_reg = <0x00>;
+//            id_val = <0x01>;
+//            capless = <0>;
+//            status = "disable";      
+//        };  
+//        wm8960:wm8960{
+//            codec_name = "wm8960";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            capless = <1>;
+//	    status = "disable";
+//        };
     };
 
 //$$ DEVICE="aml_m8_sound_card"
@@ -1438,10 +1438,10 @@ sdio{
 //$$ MATCH "I2C_B_pin_match" = "&b_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_STR 2 = "amlogic,pins"
-		b_i2c_master:b_i2c{
-			amlogic,setmask=<5 0xc000000>;
-			amlogic,pins="GPIOZ_2","GPIOZ_3";
-		};
+//		b_i2c_master:b_i2c{
+//			amlogic,setmask=<5 0xc000000>;
+//			amlogic,pins="GPIOZ_2","GPIOZ_3";
+//		};
 
 // MATCH "I2C_C_pin_match" = "&c_i2c_master"
 // L2 PROP_U32 2 = "amlogic,setmask"
@@ -1460,10 +1460,10 @@ sdio{
 //$$ MATCH "I2C_D_pin_match" = "&d_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_STR 2 = "amlogic,pins"
-		d_i2c_master:d_i2c{
-			amlogic,setmask=<4 0xc>;
-			amlogic,pins="GPIOH_7","GPIOH_8";
-		};
+//		d_i2c_master:d_i2c{
+//			amlogic,setmask=<4 0xc>;
+//			amlogic,pins="GPIOH_7","GPIOH_8";
+//		};
 
 //$$ MATCH "remote_pin_0_match" = "&remote_pins"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd
index 49195fb47378..6e0929bb4533 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd
@@ -506,6 +506,103 @@ sdio{
         };
     };
 
+//    sdhc{
+//        compatible = "amlogic,aml_sdhc";
+//        dev_name = "aml_sdhc.0";
+//        reg = <0xc1108e00 0x3c>;
+//        pinctrl-names = "sdhc_sd_clk_cmd_pins", "sdhc_sd_all_pins", "sdhc_emmc_clk_cmd_pins", "sdhc_emmc_all_pins", "sdhc_sdio_clk_cmd_pins", "sdhc_sdio_all_pins";
+//        pinctrl-0 = <&sdhc_sd_clk_cmd_pins>;
+//        pinctrl-1 = <&sdhc_sd_all_pins>;
+//        pinctrl-2 = <&sdhc_emmc_clk_cmd_pins>;
+//        pinctrl-3 = <&sdhc_emmc_all_pins>;
+//        pinctrl-4 = <&sdhc_sdio_clk_cmd_pins>;
+//        pinctrl-5 = <&sdhc_sdio_all_pins>;
+//        //pinctrl-6 = <&sd_1bit_pins>;
+
+//$$ DEVICE="sd"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 3 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "f_max_w"
+//$$ L3 PROP_U32 = "max_req_size"
+//$$ L2 PROP_STR = "gpio_dat3"
+//$$ L2 PROP_STR = "jtag_pin"
+//$$ L2 PROP_STR = "gpio_cd"
+//$$ L2 PROP_STR = "gpio_ro"
+//$$ L2 PROP_U32 = "irq_in"
+//$$ L2 PROP_U32 = "irq_out"
+//$$ L2 PROP_U32 = "card_type"
+        // sd{
+        //     status = "okay";
+        //     port = <4>;          /**0:sdhc_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+        //     pinname = "sd";
+        //     ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
+        //     caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED","MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104";
+        //     f_min = <300000>;
+        //     f_max = <100000000>;
+        //     max_req_size = <0x20000>;          /**128KB*/
+        //     gpio_dat3 = "CARD_4";
+        //     //jtag_pin = "CARD_0";
+        //     gpio_cd = "CARD_6";
+        //     //gpio_ro = "GPIOZ_0";
+        //     irq_in = <3>;
+        //     irq_out = <5>;
+        //     card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
+
+//$$ DEVICE="emmc"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 4 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "f_max_w"
+//$$ L3 PROP_U32 = "max_req_size"
+//$$ L2 PROP_STR = "gpio_dat3"
+//$$ L2 PROP_U32 = "card_type"
+//        emmc{
+//            status = "okay";
+//            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };   
+
+//$$ DEVICE="sdio"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 4 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "max_req_size"    
+//$$ L2 PROP_U32 = "card_type"    
+        // sdio{
+        //     status = "okay";
+        //     port = <3>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+        //     pinname = "sdio";
+        //     ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
+        //     caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE", "MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104";
+        //     f_min = <300000>;
+        //     f_max = <100000000>;
+        //     max_req_size = <0x20000>;          /**128KB*/
+        //     card_type = <3>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
+//    };
+    
+
 /// ***************************************************************************************
 ///	-	I2C
 //$$ MODULE="I2C"
@@ -547,17 +644,17 @@ sdio{
 //$$ L3 PROP_U32 2="reg"
 //$$ L3 PROP_STR = "pinctrl-names"
 //$$ L2 PROP_CHOICE "I2C_B_pin_match" = "pinctrl-0"	
-	i2c@c11087c0{ /*I2C-B*/
-		compatible = "amlogic,aml_i2c";
-		dev_name = "i2c-B";
-		status = "ok";
-		reg = <0xc11087c0 0x20>;
-		device_id = <2>;
-		pinctrl-names="default";
-		pinctrl-0=<&b_i2c_master>;
-		#address-cells = <1>;
-		#size-cells = <0>;
- 	};
+//	i2c@c11087c0{ /*I2C-B*/
+//		compatible = "amlogic,aml_i2c";
+//		dev_name = "i2c-B";
+//		status = "ok";
+//		reg = <0xc11087c0 0x20>;
+//		device_id = <2>;
+//		pinctrl-names="default";
+//		pinctrl-0=<&b_i2c_master>;
+//		#address-cells = <1>;
+//		#size-cells = <0>;
+// 	};
 
 //$$ DEVICE="I2C_C"
 //$$ L2 PROP_STR = "status"
@@ -580,17 +677,17 @@ sdio{
 //$$ L3 PROP_U32 2="reg"
 //$$ L3 PROP_STR = "pinctrl-names"
 //$$ L2 PROP_CHOICE "I2C_D_pin_match" = "pinctrl-0"	
-	i2c@c1108d20{ /*I2C-D*/
-		compatible = "amlogic,aml_i2c";
-		dev_name = "i2c-D";
-		status = "ok";
-		reg = <0xc1108d20 0x20>;
-		device_id = <4>;
-		pinctrl-names="default";
-		pinctrl-0=<&d_i2c_master>;
-		#address-cells = <1>;
-		#size-cells = <0>;
-	};
+//	i2c@c1108d20{ /*I2C-D*/
+//		compatible = "amlogic,aml_i2c";
+//		dev_name = "i2c-D";
+//		status = "ok";
+//		reg = <0xc1108d20 0x20>;
+//		device_id = <4>;
+//		pinctrl-names="default";
+//		pinctrl-0=<&d_i2c_master>;
+//		#address-cells = <1>;
+//		#size-cells = <0>;
+//	};
 
 /// ***************************************************************************************
 ///	-	Power
@@ -654,16 +751,16 @@ sdio{
 //$$ L2 PROP_U32 = "ddr_voltage"
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_STR = "status"
-        axp202 { /* PMU for AXP */
-            compatible = "axp_mfd";                             /* for driver probe, must have          */
-            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x34>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        axp202 { /* PMU for AXP */
+//            compatible = "axp_mfd";                             /* for driver probe, must have          */
+//            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x34>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_aml1212"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -672,16 +769,16 @@ sdio{
 //$$ L2 PROP_U32 = "ddr_voltage"
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_STR = "status"
-        aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
-            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x35>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        aml1212{                                                /* PMU for AML1212, see comment above   */
+//            compatible = "aml_pmu";                             /* for driver probe, must have          */
+//            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x35>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_rn5t618"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -817,27 +914,27 @@ sdio{
 //$$ L3 PROP_STR ="plat-names"
 //$$ L2 PROP_U32 = "plat-num"
 //$$ L2 PROP_CHOICE "plat-part-0_match" = "plat-part-0"
-	nand{
-		compatible = "amlogic,aml_nand";
-		dev_name = "nand";
-		status = "ok";
-		reg = <0xd0048600 0x24>;
-		pinctrl-names = "nand_rb_mod","nand_norb_mod";
-		pinctrl-0 = <&nand_input_state &conf_nand_state &nand_base>;
-		pinctrl-1 = <&nand_input_state &conf_nand_state &nand_base>;
-		device_id = <0>;
-		plat-names = "nandnormal";
-		plat-num = <1>;
-		plat-part-0 = <&normal>;
+//	nand{
+//		compatible = "amlogic,aml_nand";
+//		dev_name = "nand";
+//		status = "ok";
+//		reg = <0xd0048600 0x24>;
+//		pinctrl-names = "nand_rb_mod","nand_norb_mod";
+//		pinctrl-0 = <&nand_input_state &conf_nand_state &nand_base>;
+//		pinctrl-1 = <&nand_input_state &conf_nand_state &nand_base>;
+//		device_id = <0>;
+//		plat-names = "nandnormal";
+//		plat-num = <1>;
+//		plat-part-0 = <&normal>;
 
 //$$ MATCH "plat-part-0_match" = <&normal>
 //$$ L2 PROP_STR 4 = "enable_pad"
 //$$ L2 PROP_STR = "busy_pad"
-		normal: normal{
-			enable_pad ="ce0","ce1","ce2","ce3";
-			busy_pad = "rb0";
-		};
-	};
+//		normal: normal{
+//			enable_pad ="ce0","ce1","ce2","ce3";
+//			busy_pad = "rb0";
+//		};
+//	};
 
 /// ***************************************************************************************
 ///	-	Efuse
@@ -943,31 +1040,31 @@ sdio{
 
     aml_audio_codec{
         compatible = "amlogic,audio_codec";
-        rt5616:rt5616{
-            codec_name = "rt5616";
-            i2c_addr = <0x1B>;
-            i2c_bus = "i2c_bus_d";
-            id_reg = <0x00>;
-            id_val = <0x21>;
-            capless = <0>;
-            status = "okay";
-        };
-        rt5631:rt5631{
-            codec_name = "rt5631";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            id_reg = <0x00>;
-            id_val = <0x01>;
-            capless = <0>;
-            status = "disable";      
-        };  
-        wm8960:wm8960{
-            codec_name = "wm8960";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            capless = <1>;
-	    status = "disable";
-        };
+//        rt5616:rt5616{
+//            codec_name = "rt5616";
+//            i2c_addr = <0x1B>;
+//            i2c_bus = "i2c_bus_d";
+//            id_reg = <0x00>;
+//            id_val = <0x21>;
+//            capless = <0>;
+//            status = "okay";
+//        };
+//        rt5631:rt5631{
+//            codec_name = "rt5631";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            id_reg = <0x00>;
+//            id_val = <0x01>;
+//            capless = <0>;
+//            status = "disable";      
+//        };  
+//        wm8960:wm8960{
+//            codec_name = "wm8960";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            capless = <1>;
+//	    status = "disable";
+//        };
     };
 
 //$$ DEVICE="aml_m8_sound_card"
@@ -1227,39 +1324,39 @@ sdio{
 //$$ MATCH "Nand_pin_1_match" = "&nand_input_state"
 //$$ L2 PROP_STR 18 = "amlogic,pins"
 //$$ L2 PROP_U32 = "amlogic,enable-output"
-		nand_input_state:nand_input{
-			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
-						"BOOT_5","BOOT_6","BOOT_7","BOOT_12","BOOT_13",
-						"BOOT_8","BOOT_9","BOOT_10","BOOT_11",
-						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
-			amlogic,enable-output=<1>;
-		};
+//		nand_input_state:nand_input{
+//			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
+//						"BOOT_5","BOOT_6","BOOT_7","BOOT_12","BOOT_13",
+//						"BOOT_8","BOOT_9","BOOT_10","BOOT_11",
+//						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
+//			amlogic,enable-output=<1>;
+//		};
 		
 //$$ MATCH "Nand_pin_0_match" = "&conf_nand_state"
 //$$ MATCH "Nand_pin_1_match" = "&conf_nand_state"
 //$$ L2 PROP_STR 9 = "amlogic,pins"
 //$$ L2 PROP_U32 = "amlogic,pullup"
-		conf_nand_state: conf_nand{
-			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
-						"BOOT_5","BOOT_6","BOOT_7","BOOT_15";
-			amlogic,pullup=<0>;
-		};
+//		conf_nand_state: conf_nand{
+//			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
+//						"BOOT_5","BOOT_6","BOOT_7","BOOT_15";
+//			amlogic,pullup=<0>;
+//		};
 		
 //$$ MATCH "Nand_pin_0_match" = "&nand_base"
 //$$ MATCH "Nand_pin_1_match" = "&nand_base"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
 //$$ L2 PROP_STR 17 = "amlogic,pins"
-		nand_base: nand{
-			amlogic,setmask=<2 0x7fe0000>;
-			amlogic,clrmask=<	5 0xe
-							6 0x3f000000
-							4 0x7c000000>;
-			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
-						"BOOT_5","BOOT_6","BOOT_7","BOOT_8","BOOT_9",
-						"BOOT_10","BOOT_12","BOOT_13",
-						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
-		};
+//		nand_base: nand{
+//			amlogic,setmask=<2 0x7fe0000>;
+//			amlogic,clrmask=<	5 0xe
+//							6 0x3f000000
+//							4 0x7c000000>;
+//			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
+//						"BOOT_5","BOOT_6","BOOT_7","BOOT_8","BOOT_9",
+//						"BOOT_10","BOOT_12","BOOT_13",
+//						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
+//		};
 		
 //$$ MATCH "Card_pin_0_match" = "&sdhc_b_pins"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
@@ -1417,6 +1514,69 @@ sdio{
             amlogic,pullupen=<1>;
         };
 
+//        sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins{
+//            amlogic,setmask=<2 0x00000030>;         /*sdhc b*/
+//            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+//                                4 0x7c000000        /*sdhc c*/
+//                                2 0x0000fc00        /*sdio b*/
+//                                8 0x00000600>;      /*UART*/
+//            amlogic,pins = "CARD_2","CARD_3"; /* CARD_2:CLK, CARD_3:CMD */
+//            amlogic,enable-output=<1>; /* 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sd_all_pins:sdhc_sd_all_pins{
+//            amlogic,setmask=<2 0x000000f0>;         /*sdhc b*/
+//            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+//                                4 0x7c000000        /*sdhc c*/
+//                                2 0x0000fc00        /*sdio b*/
+//                                8 0x00000600>;      /*UART*/
+//            amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
+//            amlogic,enable-output=<1>; /* 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins{
+//            amlogic,setmask=<4 0x0c000000>;         /*bit[26-27] */
+//            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+//                                5 0x00007c00        /*sdhc a*/
+//                                6 0x3f000000>;        /*sdio c*/
+//            amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_emmc_all_pins:sdhc_emmc_all_pins{
+//            amlogic,setmask=<4 0x7c000000>;         /*sdhc c*/
+//            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+//                                5 0x00007c00        /*sdhc a*/
+//                                6 0x3f000000>;        /*sdio c*/
+//            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4","BOOT_5","BOOT_6","BOOT_7","BOOT_16","BOOT_17";
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins{
+//            amlogic,setmask=<5 0x00000c00>;         /*sdhc a bit[10-11] */
+//            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+//                                4 0x7c000000        /*sdhc c */
+//                                8 0x0000003f>;        /*sdio a*/
+//            amlogic,pins = "GPIOX_8","GPIOX_9"; /** BOOT_16:CMD, BOOT_17:CLK */
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sdio_all_pins:sdhc_sdio_all_pins{
+//            amlogic,setmask=<5 0x00006c00>;         /*sdhc a*/
+//            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+//                                4 0x7c000000        /*sdhc c */
+//                                8 0x0000003f>;        /*sdio a*/
+//            amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+
 //$$ MATCH "I2C_AO_pin_match" = "&ao_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_U32 2 = "amlogic,clrmask"
@@ -1448,10 +1608,10 @@ sdio{
 //$$ MATCH "I2C_B_pin_match" = "&b_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_STR 2 = "amlogic,pins"
-		b_i2c_master:b_i2c{
-			amlogic,setmask=<5 0xc000000>;
-			amlogic,pins="GPIOZ_2","GPIOZ_3";
-		};
+//		b_i2c_master:b_i2c{
+//			amlogic,setmask=<5 0xc000000>;
+//			amlogic,pins="GPIOZ_2","GPIOZ_3";
+//		};
 
 // MATCH "I2C_C_pin_match" = "&c_i2c_master"
 // L2 PROP_U32 2 = "amlogic,setmask"
@@ -1470,10 +1630,10 @@ sdio{
 //$$ MATCH "I2C_D_pin_match" = "&d_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_STR 2 = "amlogic,pins"
-		d_i2c_master:d_i2c{
-			amlogic,setmask=<4 0xc>;
-			amlogic,pins="GPIOH_7","GPIOH_8";
-		};
+//		d_i2c_master:d_i2c{
+//			amlogic,setmask=<4 0xc>;
+//			amlogic,pins="GPIOH_7","GPIOH_8";
+//		};
 
 //$$ MATCH "remote_pin_0_match" = "&remote_pins"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd b/arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd
index 735aec426c92..94da72eaff6c 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd
@@ -224,16 +224,16 @@ void root_func(){
 //$$ L2 PROP_U32 2 = "reg"
 //$$ L2 PROP_U32 = "irq"
 //$$ L2 PROP_U32 = "vdin_id"
-    vdin1{
-        compatible = "amlogic,vdin";
-        dev_name = "vdin1";
-        status = "ok";
-        reserve-memory = <0x01000000>;
-	miracast_size = <1920 1080>;//1920x1080x2x4=17M
-	reserve-iomap = "true";
-        irq = <117>;
-        vdin_id = <1>;
-	};
+//    vdin1{
+//        compatible = "amlogic,vdin";
+//        dev_name = "vdin1";
+//        status = "ok";
+//        reserve-memory = <0x01000000>;
+//	  miracast_size = <1920 1080>;//1920x1080x2x4=17M
+//	  reserve-iomap = "true";
+//        irq = <117>;
+//        vdin_id = <1>;
+//	};
 
 /// ***************************************************************************************
 ///	-	DISP&MM-AMLVIDEO2
@@ -241,13 +241,13 @@ void root_func(){
 //$$ DEVICE="amlvideo2"
 //$$ L2 PROP_STR = "status"
 //$$ L3 PROP_U32 2 ="reg"
-    amlvideo2{
-		compatible = "amlogic,amlvideo2";
-		dev_name = "amlvideo2.0";
-		status = "okay";
-		reserve-memory = <0x01000000>;
-		reserve-iomap = "true";
-	};
+//    amlvideo2{
+//		compatible = "amlogic,amlvideo2";
+//		dev_name = "amlvideo2.0";
+//		status = "okay";
+//		reserve-memory = <0x01800000>;
+//		reserve-iomap = "true";
+//	};
 
 /// ***************************************************************************************
 ///	-	ION
@@ -496,6 +496,103 @@ sdio{
         };
     };
 
+//    sdhc{
+//        compatible = "amlogic,aml_sdhc";
+//        dev_name = "aml_sdhc.0";
+//        reg = <0xc1108e00 0x3c>;
+//        pinctrl-names = "sdhc_sd_clk_cmd_pins", "sdhc_sd_all_pins", "sdhc_emmc_clk_cmd_pins", "sdhc_emmc_all_pins", "sdhc_sdio_clk_cmd_pins", "sdhc_sdio_all_pins";
+//        pinctrl-0 = <&sdhc_sd_clk_cmd_pins>;
+//        pinctrl-1 = <&sdhc_sd_all_pins>;
+//        pinctrl-2 = <&sdhc_emmc_clk_cmd_pins>;
+//        pinctrl-3 = <&sdhc_emmc_all_pins>;
+//        pinctrl-4 = <&sdhc_sdio_clk_cmd_pins>;
+//        pinctrl-5 = <&sdhc_sdio_all_pins>;
+//        //pinctrl-6 = <&sd_1bit_pins>;
+
+//$$ DEVICE="sd"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 3 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "f_max_w"
+//$$ L3 PROP_U32 = "max_req_size"
+//$$ L2 PROP_STR = "gpio_dat3"
+//$$ L2 PROP_STR = "jtag_pin"
+//$$ L2 PROP_STR = "gpio_cd"
+//$$ L2 PROP_STR = "gpio_ro"
+//$$ L2 PROP_U32 = "irq_in"
+//$$ L2 PROP_U32 = "irq_out"
+//$$ L2 PROP_U32 = "card_type"
+        // sd{
+        //     status = "okay";
+        //     port = <4>;          /**0:sdhc_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+        //     pinname = "sd";
+        //     ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
+        //     caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED","MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104";
+        //     f_min = <300000>;
+        //     f_max = <100000000>;
+        //     max_req_size = <0x20000>;          /**128KB*/
+        //     gpio_dat3 = "CARD_4";
+        //     //jtag_pin = "CARD_0";
+        //     gpio_cd = "CARD_6";
+        //     //gpio_ro = "GPIOZ_0";
+        //     irq_in = <3>;
+        //     irq_out = <5>;
+        //     card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
+
+//$$ DEVICE="emmc"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 4 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "f_max_w"
+//$$ L3 PROP_U32 = "max_req_size"
+//$$ L2 PROP_STR = "gpio_dat3"
+//$$ L2 PROP_U32 = "card_type"
+//        emmc{
+//            status = "okay";
+//            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };   
+
+//$$ DEVICE="sdio"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 4 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "max_req_size"    
+//$$ L2 PROP_U32 = "card_type"    
+        // sdio{
+        //     status = "okay";
+        //     port = <3>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+        //     pinname = "sdio";
+        //     ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
+        //     caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE", "MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104";
+        //     f_min = <300000>;
+        //     f_max = <100000000>;
+        //     max_req_size = <0x20000>;          /**128KB*/
+        //     card_type = <3>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
+//    };
+    
+
 /// ***************************************************************************************
 ///	-	I2C
 //$$ MODULE="I2C"
@@ -537,17 +634,17 @@ sdio{
 //$$ L3 PROP_U32 2="reg"
 //$$ L3 PROP_STR = "pinctrl-names"
 //$$ L2 PROP_CHOICE "I2C_B_pin_match" = "pinctrl-0"	
-	i2c@c11087c0{ /*I2C-B*/
-		compatible = "amlogic,aml_i2c";
-		dev_name = "i2c-B";
-		status = "ok";
-		reg = <0xc11087c0 0x20>;
-		device_id = <2>;
-		pinctrl-names="default";
-		pinctrl-0=<&b_i2c_master>;
-		#address-cells = <1>;
-		#size-cells = <0>;
- 	};
+//	i2c@c11087c0{ /*I2C-B*/
+//		compatible = "amlogic,aml_i2c";
+//		dev_name = "i2c-B";
+//		status = "ok";
+//		reg = <0xc11087c0 0x20>;
+//		device_id = <2>;
+//		pinctrl-names="default";
+//		pinctrl-0=<&b_i2c_master>;
+//		#address-cells = <1>;
+//		#size-cells = <0>;
+// 	};
 
 //$$ DEVICE="I2C_C"
 //$$ L2 PROP_STR = "status"
@@ -570,17 +667,17 @@ sdio{
 //$$ L3 PROP_U32 2="reg"
 //$$ L3 PROP_STR = "pinctrl-names"
 //$$ L2 PROP_CHOICE "I2C_D_pin_match" = "pinctrl-0"	
-	i2c@c1108d20{ /*I2C-D*/
-		compatible = "amlogic,aml_i2c";
-		dev_name = "i2c-D";
-		status = "ok";
-		reg = <0xc1108d20 0x20>;
-		device_id = <4>;
-		pinctrl-names="default";
-		pinctrl-0=<&d_i2c_master>;
-		#address-cells = <1>;
-		#size-cells = <0>;
-	};
+//	i2c@c1108d20{ /*I2C-D*/
+//		compatible = "amlogic,aml_i2c";
+//		dev_name = "i2c-D";
+//		status = "ok";
+//		reg = <0xc1108d20 0x20>;
+//		device_id = <4>;
+//		pinctrl-names="default";
+//		pinctrl-0=<&d_i2c_master>;
+//		#address-cells = <1>;
+//		#size-cells = <0>;
+//	};
 
 /// ***************************************************************************************
 ///	-	Power
@@ -644,16 +741,16 @@ sdio{
 //$$ L2 PROP_U32 = "ddr_voltage"
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_STR = "status"
-        axp202 { /* PMU for AXP */
-            compatible = "axp_mfd";                             /* for driver probe, must have          */
-            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x34>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        axp202 { /* PMU for AXP */
+//            compatible = "axp_mfd";                             /* for driver probe, must have          */
+//            sub_type = "axp20_mfd";                             /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x34>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_aml1212"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -662,16 +759,16 @@ sdio{
 //$$ L2 PROP_U32 = "ddr_voltage"
 //$$ L2 PROP_U32 = "vddao_voltage"
 //$$ L2 PROP_STR = "status"
-        aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
-            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
-            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
-            reg = <0x35>;                                       /** device i2c address, must have        */
-            soft_limit_to99 = <0>;                              /** optional                             */
-            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
-            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            status = "disable";                                 /** status of pmu, only one should be OK */
-        };
+//        aml1212{                                                /* PMU for AML1212, see comment above   */
+//            compatible = "aml_pmu";                             /* for driver probe, must have          */
+//            sub_type = "aml1212";                               /** sub type of pmu family, must have    */
+//            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+//            reg = <0x35>;                                       /** device i2c address, must have        */
+//            soft_limit_to99 = <0>;                              /** optional                             */
+//            ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
+//            vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
+//            status = "disable";                                 /** status of pmu, only one should be OK */
+//        };
 //$$ DEVICE = "Pmu_rn5t618"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -807,27 +904,27 @@ sdio{
 //$$ L3 PROP_STR ="plat-names"
 //$$ L2 PROP_U32 = "plat-num"
 //$$ L2 PROP_CHOICE "plat-part-0_match" = "plat-part-0"
-	nand{
-		compatible = "amlogic,aml_nand";
-		dev_name = "nand";
-		status = "ok";
-		reg = <0xd0048600 0x24>;
-		pinctrl-names = "nand_rb_mod","nand_norb_mod";
-		pinctrl-0 = <&nand_input_state &conf_nand_state &nand_base>;
-		pinctrl-1 = <&nand_input_state &conf_nand_state &nand_base>;
-		device_id = <0>;
-		plat-names = "nandnormal";
-		plat-num = <1>;
-		plat-part-0 = <&normal>;
+//	nand{
+//		compatible = "amlogic,aml_nand";
+//		dev_name = "nand";
+//		status = "ok";
+//		reg = <0xd0048600 0x24>;
+//		pinctrl-names = "nand_rb_mod","nand_norb_mod";
+//		pinctrl-0 = <&nand_input_state &conf_nand_state &nand_base>;
+//		pinctrl-1 = <&nand_input_state &conf_nand_state &nand_base>;
+//		device_id = <0>;
+//		plat-names = "nandnormal";
+//		plat-num = <1>;
+//		plat-part-0 = <&normal>;
 
 //$$ MATCH "plat-part-0_match" = <&normal>
 //$$ L2 PROP_STR 4 = "enable_pad"
 //$$ L2 PROP_STR = "busy_pad"
-		normal: normal{
-			enable_pad ="ce0","ce1","ce2","ce3";
-			busy_pad = "rb0";
-		};
-	};
+//		normal: normal{
+//			enable_pad ="ce0","ce1","ce2","ce3";
+//			busy_pad = "rb0";
+//		};
+//	};
 
 /// ***************************************************************************************
 ///	-	Efuse
@@ -933,31 +1030,31 @@ sdio{
 
     aml_audio_codec{
         compatible = "amlogic,audio_codec";
-        rt5616:rt5616{
-            codec_name = "rt5616";
-            i2c_addr = <0x1B>;
-            i2c_bus = "i2c_bus_d";
-            id_reg = <0x00>;
-            id_val = <0x21>;
-            capless = <0>;
-            status = "okay";
-        };
-        rt5631:rt5631{
-            codec_name = "rt5631";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            id_reg = <0x00>;
-            id_val = <0x01>;
-            capless = <0>;
-            status = "disable";      
-        };  
-        wm8960:wm8960{
-            codec_name = "wm8960";
-            i2c_addr = <0x1A>;
-            i2c_bus = "i2c_bus_b";
-            capless = <1>;
-	    status = "disable";
-        };
+//        rt5616:rt5616{
+//            codec_name = "rt5616";
+//            i2c_addr = <0x1B>;
+//            i2c_bus = "i2c_bus_d";
+//            id_reg = <0x00>;
+//            id_val = <0x21>;
+//            capless = <0>;
+//            status = "okay";
+//        };
+//        rt5631:rt5631{
+//            codec_name = "rt5631";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            id_reg = <0x00>;
+//            id_val = <0x01>;
+//            capless = <0>;
+//            status = "disable";      
+//        };  
+//        wm8960:wm8960{
+//            codec_name = "wm8960";
+//            i2c_addr = <0x1A>;
+//            i2c_bus = "i2c_bus_b";
+//            capless = <1>;
+//	    status = "disable";
+//        };
     };
 
 //$$ DEVICE="aml_m8_sound_card"
@@ -1217,39 +1314,39 @@ sdio{
 //$$ MATCH "Nand_pin_1_match" = "&nand_input_state"
 //$$ L2 PROP_STR 18 = "amlogic,pins"
 //$$ L2 PROP_U32 = "amlogic,enable-output"
-		nand_input_state:nand_input{
-			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
-						"BOOT_5","BOOT_6","BOOT_7","BOOT_12","BOOT_13",
-						"BOOT_8","BOOT_9","BOOT_10","BOOT_11",
-						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
-			amlogic,enable-output=<1>;
-		};
+//		nand_input_state:nand_input{
+//			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
+//						"BOOT_5","BOOT_6","BOOT_7","BOOT_12","BOOT_13",
+//						"BOOT_8","BOOT_9","BOOT_10","BOOT_11",
+//						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
+//			amlogic,enable-output=<1>;
+//		};
 		
 //$$ MATCH "Nand_pin_0_match" = "&conf_nand_state"
 //$$ MATCH "Nand_pin_1_match" = "&conf_nand_state"
 //$$ L2 PROP_STR 9 = "amlogic,pins"
 //$$ L2 PROP_U32 = "amlogic,pullup"
-		conf_nand_state: conf_nand{
-			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
-						"BOOT_5","BOOT_6","BOOT_7","BOOT_15";
-			amlogic,pullup=<0>;
-		};
+//		conf_nand_state: conf_nand{
+//			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
+//						"BOOT_5","BOOT_6","BOOT_7","BOOT_15";
+//			amlogic,pullup=<0>;
+//		};
 		
 //$$ MATCH "Nand_pin_0_match" = "&nand_base"
 //$$ MATCH "Nand_pin_1_match" = "&nand_base"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
 //$$ L2 PROP_STR 17 = "amlogic,pins"
-		nand_base: nand{
-			amlogic,setmask=<2 0x7fe0000>;
-			amlogic,clrmask=<	5 0xe
-							6 0x3f000000
-							4 0x7c000000>;
-			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
-						"BOOT_5","BOOT_6","BOOT_7","BOOT_8","BOOT_9",
-						"BOOT_10","BOOT_12","BOOT_13",
-						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
-		};
+//		nand_base: nand{
+//			amlogic,setmask=<2 0x7fe0000>;
+//			amlogic,clrmask=<	5 0xe
+//							6 0x3f000000
+//							4 0x7c000000>;
+//			amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4",
+//						"BOOT_5","BOOT_6","BOOT_7","BOOT_8","BOOT_9",
+//						"BOOT_10","BOOT_12","BOOT_13",
+//						"BOOT_14","BOOT_15","BOOT_16","BOOT_17";
+//		};
 		
 //$$ MATCH "Card_pin_0_match" = "&sdhc_b_pins"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
@@ -1407,6 +1504,69 @@ sdio{
             amlogic,pullupen=<1>;
         };
 
+//        sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins{
+//            amlogic,setmask=<2 0x00000030>;         /*sdhc b*/
+//            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+//                                4 0x7c000000        /*sdhc c*/
+//                                2 0x0000fc00        /*sdio b*/
+//                                8 0x00000600>;      /*UART*/
+//            amlogic,pins = "CARD_2","CARD_3"; /* CARD_2:CLK, CARD_3:CMD */
+//            amlogic,enable-output=<1>; /* 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sd_all_pins:sdhc_sd_all_pins{
+//            amlogic,setmask=<2 0x000000f0>;         /*sdhc b*/
+//            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+//                                4 0x7c000000        /*sdhc c*/
+//                                2 0x0000fc00        /*sdio b*/
+//                                8 0x00000600>;      /*UART*/
+//            amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
+//            amlogic,enable-output=<1>; /* 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins{
+//            amlogic,setmask=<4 0x0c000000>;         /*bit[26-27] */
+//            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+//                                5 0x00007c00        /*sdhc a*/
+//                                6 0x3f000000>;        /*sdio c*/
+//            amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_emmc_all_pins:sdhc_emmc_all_pins{
+//            amlogic,setmask=<4 0x7c000000>;         /*sdhc c*/
+//            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+//                                5 0x00007c00        /*sdhc a*/
+//                                6 0x3f000000>;        /*sdio c*/
+//            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4","BOOT_5","BOOT_6","BOOT_7","BOOT_16","BOOT_17";
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins{
+//            amlogic,setmask=<5 0x00000c00>;         /*sdhc a bit[10-11] */
+//            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+//                                4 0x7c000000        /*sdhc c */
+//                                8 0x0000003f>;        /*sdio a*/
+//            amlogic,pins = "GPIOX_8","GPIOX_9"; /** BOOT_16:CMD, BOOT_17:CLK */
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+//        sdhc_sdio_all_pins:sdhc_sdio_all_pins{
+//            amlogic,setmask=<5 0x00006c00>;         /*sdhc a*/
+//            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+//                                4 0x7c000000        /*sdhc c */
+//                                8 0x0000003f>;        /*sdio a*/
+//            amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
+//            amlogic,enable-output=<1>; /** 0:output, 1:input */
+//            amlogic,pullup=<1>;
+//            amlogic,pullupen=<1>;
+//        };
+
 //$$ MATCH "I2C_AO_pin_match" = "&ao_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_U32 2 = "amlogic,clrmask"
@@ -1438,10 +1598,10 @@ sdio{
 //$$ MATCH "I2C_B_pin_match" = "&b_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_STR 2 = "amlogic,pins"
-		b_i2c_master:b_i2c{
-			amlogic,setmask=<5 0xc000000>;
-			amlogic,pins="GPIOZ_2","GPIOZ_3";
-		};
+//		b_i2c_master:b_i2c{
+//			amlogic,setmask=<5 0xc000000>;
+//			amlogic,pins="GPIOZ_2","GPIOZ_3";
+//		};
 
 // MATCH "I2C_C_pin_match" = "&c_i2c_master"
 // L2 PROP_U32 2 = "amlogic,setmask"
@@ -1460,10 +1620,10 @@ sdio{
 //$$ MATCH "I2C_D_pin_match" = "&d_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
 //$$ L2 PROP_STR 2 = "amlogic,pins"
-		d_i2c_master:d_i2c{
-			amlogic,setmask=<4 0xc>;
-			amlogic,pins="GPIOH_7","GPIOH_8";
-		};
+//		d_i2c_master:d_i2c{
+//			amlogic,setmask=<4 0xc>;
+//			amlogic,pins="GPIOH_7","GPIOH_8";
+//		};
 
 //$$ MATCH "remote_pin_0_match" = "&remote_pins"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
diff --git a/arch/arm/configs/meson8_defconfig b/arch/arm/configs/meson8_defconfig
index 5007095342b7..4f55ec5d1834 100644
--- a/arch/arm/configs/meson8_defconfig
+++ b/arch/arm/configs/meson8_defconfig
@@ -217,7 +217,7 @@ CONFIG_AM_ENCODER=y
 CONFIG_AM_JPEG_ENCODER=y
 CONFIG_AM_TV_OUTPUT2=y
 CONFIG_FB_AM=y
-CONFIG_FB_OSD2_CURSOR=y
+CONFIG_FB_OSD2_CURSOR=n
 CONFIG_FB_OSD2_DEFAULT_WIDTH=32
 CONFIG_FB_OSD2_DEFAULT_HEIGHT=32
 CONFIG_FB_OSD2_DEFAULT_WIDTH_VIRTUAL=32
@@ -302,14 +302,14 @@ CONFIG_USB_SERIAL_OPTION=y
 CONFIG_USB_GADGET=y
 CONFIG_USB_GADGET_DWC_OTG=y
 CONFIG_USB_G_ANDROID=y
-CONFIG_MMC_DEBUG=y
+CONFIG_MMC_DEBUG=n
 CONFIG_UIO=y
 CONFIG_UIO_PDRV=y
 CONFIG_UIO_PDRV_GENIRQ=y
 CONFIG_STAGING=y
 CONFIG_ZSMALLOC=y
 CONFIG_ZRAM=y
-CONFIG_ZRAM_DEBUG=y
+CONFIG_ZRAM_DEBUG=n
 CONFIG_ANDROID=y
 CONFIG_ANDROID_BINDER_IPC=y
 CONFIG_ASHMEM=y
@@ -324,7 +324,7 @@ CONFIG_EXT3_FS_SECURITY=y
 CONFIG_EXT4_FS=y
 CONFIG_EXT4_FS_POSIX_ACL=y
 CONFIG_EXT4_FS_SECURITY=y
-CONFIG_EXT4_DEBUG=y
+CONFIG_EXT4_DEBUG=n
 CONFIG_QUOTA=y
 CONFIG_QFMT_V2=y
 CONFIG_FUSE_FS=y
@@ -344,10 +344,10 @@ CONFIG_PRINTK_TIME=y
 CONFIG_MAGIC_SYSRQ=y
 CONFIG_READABLE_ASM=y
 CONFIG_DEBUG_FS=y
-CONFIG_DEBUG_SECTION_MISMATCH=y
+CONFIG_DEBUG_SECTION_MISMATCH=n
 CONFIG_SCHEDSTATS=y
 CONFIG_TIMER_STATS=y
-CONFIG_DEBUG_INFO=y
+CONFIG_DEBUG_INFO=n
 CONFIG_SECURITY=y
 CONFIG_SECURITY_NETWORK=y
 CONFIG_SECURITY_SELINUX=y
diff --git a/arch/arm/mach-meson8/clock.c b/arch/arm/mach-meson8/clock.c
index b7ba93a02565..a01896ea515b 100755
--- a/arch/arm/mach-meson8/clock.c
+++ b/arch/arm/mach-meson8/clock.c
@@ -1663,7 +1663,7 @@ static ssize_t freq_limit_show(struct class *cla, struct class_attribute *attr,
 
 
 static struct class_attribute freq_limit_class_attrs[] = {
-	__ATTR(limit, S_IRWXU, freq_limit_show, freq_limit_store),
+	__ATTR(limit, S_IRUGO|S_IWUSR|S_IWGRP, freq_limit_show, freq_limit_store),
 	__ATTR_NULL,
 };
 
diff --git a/drivers/amlogic/amaudio/amaudio.c b/drivers/amlogic/amaudio/amaudio.c
index 30a913258c6c..db6104b9c043 100755
--- a/drivers/amlogic/amaudio/amaudio.c
+++ b/drivers/amlogic/amaudio/amaudio.c
@@ -1956,9 +1956,9 @@ static struct class_attribute amaudio_attrs[]={
   __ATTR(enable_debug_print, S_IRUGO | S_IWUSR, show_enable_debug, store_enable_debug),
   __ATTR(enable_debug_dump, S_IRUGO | S_IWUSR, show_enable_dump, store_enable_dump),
   __ATTR_RO(amaudio_runtime),
-  __ATTR(audio_channels_mask, S_IRUGO | S_IWUSR, show_audio_channels_mask, store_audio_channels_mask),
-  __ATTR(enable_resample, S_IRUGO | S_IWUSR, show_enable_resample, store_enable_resample),
-  __ATTR(resample_type, S_IRUGO | S_IWUSR, show_resample_type, store_resample_type),
+  __ATTR(audio_channels_mask, S_IRUGO | S_IWUSR | S_IWGRP, show_audio_channels_mask, store_audio_channels_mask),
+  __ATTR(enable_resample, S_IRUGO | S_IWUSR | S_IWGRP, show_enable_resample, store_enable_resample),
+  __ATTR(resample_type, S_IRUGO | S_IWUSR | S_IWGRP, show_resample_type, store_resample_type),
   __ATTR(resample_delta, S_IRUGO | S_IWUSR, show_resample_delta, store_resample_delta),
   __ATTR(dac_mute_const, S_IRUGO | S_IWUSR, dac_mute_const_show, dac_mute_const_store),
   __ATTR_RO(output_enable),
diff --git a/drivers/amlogic/amports/subtitle.c b/drivers/amlogic/amports/subtitle.c
index 0f70180bfd18..38e509baf347 100755
--- a/drivers/amlogic/amports/subtitle.c
+++ b/drivers/amlogic/amports/subtitle.c
@@ -422,18 +422,18 @@ static ssize_t store_subtype(struct class *class,
 }
 
 static struct class_attribute subtitle_class_attrs[] = {
-    __ATTR(enable,     S_IRUGO | S_IWUSR, show_enable,  store_enable),
-    __ATTR(total,     S_IRUGO | S_IWUSR, show_total,  store_total),
-    __ATTR(width,     S_IRUGO | S_IWUSR, show_width,  store_width),
-    __ATTR(height,     S_IRUGO | S_IWUSR, show_height,  store_height),
-    __ATTR(type,     S_IRUGO | S_IWUSR, show_type,  store_type),
-    __ATTR(curr,     S_IRUGO | S_IWUSR, show_curr,  store_curr),
-    __ATTR(index,     S_IRUGO | S_IWUSR, show_index,  store_index),
-    __ATTR(size,     S_IRUGO | S_IWUSR, show_size,  store_size),
-    __ATTR(data,     S_IRUGO | S_IWUSR, show_data,  store_data),
-    __ATTR(startpts,     S_IRUGO | S_IWUSR, show_startpts,  store_startpts),
-    __ATTR(fps,     S_IRUGO | S_IWUSR, show_fps,  store_fps),
-    __ATTR(subtype,     S_IRUGO | S_IWUSR, show_subtype,  store_subtype),
+    __ATTR(enable,     S_IRUGO | S_IWUSR | S_IWGRP, show_enable,  store_enable),
+    __ATTR(total,     S_IRUGO | S_IWUSR | S_IWGRP, show_total,  store_total),
+    __ATTR(width,     S_IRUGO | S_IWUSR | S_IWGRP, show_width,  store_width),
+    __ATTR(height,     S_IRUGO | S_IWUSR | S_IWGRP, show_height,  store_height),
+    __ATTR(type,     S_IRUGO | S_IWUSR | S_IWGRP, show_type,  store_type),
+    __ATTR(curr,     S_IRUGO | S_IWUSR | S_IWGRP, show_curr,  store_curr),
+    __ATTR(index,     S_IRUGO | S_IWUSR | S_IWGRP, show_index,  store_index),
+    __ATTR(size,     S_IRUGO | S_IWUSR | S_IWGRP, show_size,  store_size),
+    __ATTR(data,     S_IRUGO | S_IWUSR | S_IWGRP, show_data,  store_data),
+    __ATTR(startpts,     S_IRUGO | S_IWUSR | S_IWGRP, show_startpts,  store_startpts),
+    __ATTR(fps,     S_IRUGO | S_IWUSR | S_IWGRP, show_fps,  store_fps),
+    __ATTR(subtype,     S_IRUGO | S_IWUSR | S_IWGRP, show_subtype,  store_subtype),
 	__ATTR(reset, 	S_IRUGO | S_IWUSR, show_reset,  store_reset),
     __ATTR_NULL
 };
diff --git a/drivers/amlogic/amports/tsync.c b/drivers/amlogic/amports/tsync.c
index 815e6adff83b..ca51a1cbbaf9 100755
--- a/drivers/amlogic/amports/tsync.c
+++ b/drivers/amlogic/amports/tsync.c
@@ -1397,20 +1397,20 @@ static ssize_t show_last_checkin_apts(struct class *class,
 }
 
 static struct class_attribute tsync_class_attrs[] = {
-    __ATTR(pts_video,  S_IRUGO | S_IWUSR, show_vpts,    store_vpts),
-    __ATTR(pts_audio,  S_IRUGO | S_IWUSR, show_apts,    store_apts),
-    __ATTR(pts_pcrscr, S_IRUGO | S_IWUSR, show_pcrscr,  store_pcrscr),
-    __ATTR(event,      S_IRUGO | S_IWUSR, NULL,         store_event),
-    __ATTR(mode,       S_IRUGO | S_IWUSR, show_mode,    NULL),
-    __ATTR(enable,     S_IRUGO | S_IWUSR, show_enable,  store_enable),
-    __ATTR(pcr_recover, S_IRUGO | S_IWUSR, show_pcr_recover,  store_pcr_recover),
+    __ATTR(pts_video,  S_IRUGO | S_IWUSR | S_IWGRP, show_vpts,    store_vpts),
+    __ATTR(pts_audio,  S_IRUGO | S_IWUSR | S_IWGRP, show_apts,    store_apts),
+    __ATTR(pts_pcrscr, S_IRUGO | S_IWUSR | S_IWGRP, show_pcrscr,  store_pcrscr),
+    __ATTR(event,      S_IRUGO | S_IWUSR | S_IWGRP, NULL,         store_event),
+    __ATTR(mode,       S_IRUGO | S_IWUSR | S_IWGRP, show_mode,    NULL),
+    __ATTR(enable,     S_IRUGO | S_IWUSR | S_IWGRP, show_enable,  store_enable),
+    __ATTR(pcr_recover, S_IRUGO | S_IWUSR | S_IWGRP, show_pcr_recover,  store_pcr_recover),
     __ATTR(discontinue, S_IRUGO | S_IWUSR, show_discontinue,  store_discontinue),
     __ATTR(debug_pts_checkin, S_IRUGO | S_IWUSR, show_debug_pts_checkin,  store_debug_pts_checkin),
     __ATTR(debug_pts_checkout, S_IRUGO | S_IWUSR, show_debug_pts_checkout,  store_debug_pts_checkout),
     __ATTR(debug_video_pts, S_IRUGO | S_IWUSR, show_debug_vpts,  store_debug_vpts),
     __ATTR(debug_audio_pts, S_IRUGO | S_IWUSR, show_debug_apts,  store_debug_apts),
-    __ATTR(av_threshold_min, S_IRUGO | S_IWUSR, show_av_threshold_min,  store_av_threshold_min),
-    __ATTR(av_threshold_max, S_IRUGO | S_IWUSR, show_av_threshold_max,  store_av_threshold_max),
+    __ATTR(av_threshold_min, S_IRUGO | S_IWUSR | S_IWGRP, show_av_threshold_min,  store_av_threshold_min),
+    __ATTR(av_threshold_max, S_IRUGO | S_IWUSR | S_IWGRP, show_av_threshold_max,  store_av_threshold_max),
     __ATTR(last_checkin_apts, S_IRUGO | S_IWUSR, show_last_checkin_apts, NULL),
     __ATTR_NULL
 };
diff --git a/drivers/amlogic/amports/video.c b/drivers/amlogic/amports/video.c
index 7f4d518fb80b..b61ce21d18f4 100755
--- a/drivers/amlogic/amports/video.c
+++ b/drivers/amlogic/amports/video.c
@@ -4532,7 +4532,7 @@ static ssize_t video_angle_store(struct class *cla, struct class_attribute *attr
 
 static struct class_attribute amvideo_class_attrs[] = {
     __ATTR(axis,
-    S_IRUGO | S_IWUSR,
+    S_IRUGO | S_IWUSR | S_IWGRP,
     video_axis_show,
     video_axis_store),
     __ATTR(crop,
@@ -4544,19 +4544,19 @@ static struct class_attribute amvideo_class_attrs[] = {
     video_global_offset_show,
     video_global_offset_store),
     __ATTR(screen_mode,
-    S_IRUGO | S_IWUSR,
+    S_IRUGO | S_IWUSR | S_IWGRP,
     video_screen_mode_show,
     video_screen_mode_store),
     __ATTR(blackout_policy,
-    S_IRUGO | S_IWUSR,
+    S_IRUGO | S_IWUSR | S_IWGRP,
     video_blackout_policy_show,
     video_blackout_policy_store),
     __ATTR(disable_video,
-    S_IRUGO | S_IWUSR,
+    S_IRUGO | S_IWUSR | S_IWGRP,
     video_disable_show,
     video_disable_store),
     __ATTR(zoom,
-    S_IRUGO | S_IWUSR,
+    S_IRUGO | S_IWUSR | S_IWGRP,
     video_zoom_show,
     video_zoom_store),
     __ATTR(brightness,
diff --git a/drivers/amlogic/amports/video2.c b/drivers/amlogic/amports/video2.c
index 6af7687d5266..b407404f0eed 100755
--- a/drivers/amlogic/amports/video2.c
+++ b/drivers/amlogic/amports/video2.c
@@ -2696,7 +2696,7 @@ static struct class_attribute amvideo_class_attrs[] = {
     video_axis_show,
     video_axis_store),
     __ATTR(screen_mode,
-    S_IRUGO | S_IWUSR,
+    S_IRUGO | S_IWUSR | S_IWGRP,
     video_screen_mode_show,
     video_screen_mode_store),
     __ATTR(blackout_policy,
@@ -2708,7 +2708,7 @@ static struct class_attribute amvideo_class_attrs[] = {
     video_disable_show,
     video_disable_store),
     __ATTR(zoom,
-    S_IRUGO | S_IWUSR,
+    S_IRUGO | S_IWUSR | S_IWGRP,
     video_zoom_show,
     video_zoom_store),
     __ATTR(brightness,
@@ -2724,7 +2724,7 @@ static struct class_attribute amvideo_class_attrs[] = {
     video_saturation_show,
     video_saturation_store),
     __ATTR(clone,
-    S_IRUGO | S_IWUSR,
+    S_IRUGO | S_IWUSR | S_IWGRP,
     video_clone_show,
     video_clone_store),
     __ATTR_RO(device_resolution),
diff --git a/drivers/amlogic/audiodsp/audiodsp_module.c b/drivers/amlogic/audiodsp/audiodsp_module.c
index 2e322a89c318..6cdd1665aca5 100755
--- a/drivers/amlogic/audiodsp/audiodsp_module.c
+++ b/drivers/amlogic/audiodsp/audiodsp_module.c
@@ -1009,14 +1009,14 @@ static struct class_attribute audiodsp_attrs[]={
 #ifdef CONFIG_ARCH_MESON1    
     __ATTR_RO(codec_mips),
 #endif    
-    __ATTR(codec_fatal_err, S_IRUGO | S_IWUSR, codec_fatal_err_show, codec_fatal_err_store),
+    __ATTR(codec_fatal_err, S_IRUGO | S_IWUSR | S_IWGRP, codec_fatal_err_show, codec_fatal_err_store),
     __ATTR_RO(swap_buf_ptr),
     __ATTR_RO(dsp_working_status),
-    __ATTR(digital_raw, S_IRUGO | S_IWUSR, digital_raw_show, digital_raw_store),
-    __ATTR(digital_codec, S_IRUGO | S_IWUSR, digital_codec_show, digital_codec_store),
+    __ATTR(digital_raw, S_IRUGO | S_IWUSR | S_IWGRP, digital_raw_show, digital_raw_store),
+     __ATTR(digital_codec, S_IRUGO | S_IWUSR | S_IWGRP, digital_codec_show, digital_codec_store),
     __ATTR(dec_option, S_IRUGO | S_IWUSR, dec_option_show, dec_option_store),
     __ATTR(print_flag, S_IRUGO | S_IWUSR, print_flag_show, print_flag_store),
-    __ATTR(ac3_drc_control, S_IRUGO | S_IWUSR, ac3_drc_control_show, ac3_drc_control_store),
+    __ATTR(ac3_drc_control, S_IRUGO | S_IWUSR | S_IWGRP, ac3_drc_control_show, ac3_drc_control_store),
     __ATTR(dsp_debug, S_IRUGO | S_IWUSR, dsp_debug_show, dsp_debug_store),
     __ATTR(dts_dec_control, S_IRUGO | S_IWUSR, dts_dec_control_show, dts_dec_control_store),   
     __ATTR(skip_rawbytes, S_IRUGO | S_IWUSR, skip_rawbytes_show, skip_rawbytes_store),
diff --git a/drivers/amlogic/display/osd/osd_main.c b/drivers/amlogic/display/osd/osd_main.c
index 23f22d780cb1..3e08910f6edd 100755
--- a/drivers/amlogic/display/osd/osd_main.c
+++ b/drivers/amlogic/display/osd/osd_main.c
@@ -1421,29 +1421,29 @@ static int __init osd_info_setup(char *str)
 __setup("osd_reverse=", osd_info_setup);
 
 static struct device_attribute osd_attrs[] = {
-	__ATTR(scale, S_IRUGO|S_IWUSR, show_scale, store_scale),
-	__ATTR(order, S_IRUGO|S_IWUSR, show_order, store_order),
+	__ATTR(scale, S_IRUGO|S_IWUSR|S_IWGRP, show_scale, store_scale),
+	__ATTR(order, S_IRUGO|S_IWUSR|S_IWGRP, show_order, store_order),
 	__ATTR(enable_3d, S_IRUGO|S_IWUSR, show_enable_3d, store_enable_3d),
 	__ATTR(preblend_enable,S_IRUGO|S_IWUSR, show_preblend_enable, store_preblend_enable),
-	__ATTR(free_scale, S_IRUGO|S_IWUSR, show_free_scale, store_free_scale),
+	__ATTR(free_scale, S_IRUGO|S_IWUSR|S_IWGRP, show_free_scale, store_free_scale),
 	__ATTR(scale_axis, S_IRUGO|S_IWUSR, show_scale_axis, store_scale_axis),
-	__ATTR(scale_width, S_IRUGO|S_IWUSR, show_scale_width, store_scale_width),
-	__ATTR(scale_height, S_IRUGO|S_IWUSR, show_scale_height, store_scale_height),
+	__ATTR(scale_width, S_IRUGO|S_IWUSR|S_IWGRP, show_scale_width, store_scale_width),
+	__ATTR(scale_height, S_IRUGO|S_IWUSR|S_IWGRP, show_scale_height, store_scale_height),
     __ATTR(color_key, S_IRUGO|S_IWUSR, show_color_key, store_color_key),
-    __ATTR(enable_key, S_IRUGO|S_IWUSR, show_enable_key, store_enable_key),
-    __ATTR(enable_key_onhold, S_IRUGO|S_IWUSR, show_enable_key_onhold, store_enable_key_onhold),
+    __ATTR(enable_key, S_IRUGO|S_IWUSR|S_IWGRP, show_enable_key, store_enable_key),
+    __ATTR(enable_key_onhold, S_IRUGO|S_IWUSR|S_IWGRP, show_enable_key_onhold, store_enable_key_onhold),
 	__ATTR(block_windows, S_IRUGO|S_IWUSR, show_block_windows, store_block_windows),
-	__ATTR(block_mode, S_IRUGO|S_IWUSR, show_block_mode, store_block_mode),
-	__ATTR(free_scale_axis, S_IRUGO|S_IWUSR, show_free_scale_axis, store_free_scale_axis),
-	__ATTR(request2XScale, S_IRUGO|S_IWUSR, show_request_2xscale, store__request_2xscale),
+	__ATTR(block_mode, S_IRUGO|S_IWUSR|S_IWGRP, show_block_mode, store_block_mode),
+	__ATTR(free_scale_axis, S_IRUGO|S_IWUSR|S_IWGRP, show_free_scale_axis, store_free_scale_axis),
+	__ATTR(request2XScale, S_IRUGO|S_IWUSR|S_IWGRP, show_request_2xscale, store__request_2xscale),
 	__ATTR(osd_info_msg, S_IRUGO|S_IWUSR, NULL, store_osd_info),
 	__ATTR(video_hole, S_IRUGO|S_IWUSR, show_video_hole, store__video_hole),
-	__ATTR(window_axis, S_IRUGO|S_IWUSR, show_window_axis, store_window_axis),
-	__ATTR(freescale_mode, S_IRUGO|S_IWUSR, show_freescale_mode, store_freescale_mode),
+	__ATTR(window_axis, S_IRUGO|S_IWUSR|S_IWGRP, show_window_axis, store_window_axis),
+	__ATTR(freescale_mode, S_IRUGO|S_IWUSR|S_IWGRP, show_freescale_mode, store_freescale_mode),
 	__ATTR(flush_rate, S_IRUGO|S_IWUSR, show_flush_rate, NULL),
-	__ATTR(prot_on, S_IRUGO|S_IWUSR, show_rotate_on, store_rotate_on),
-	__ATTR(prot_angle, S_IRUGO|S_IWUSR, show_rotate_angle, store_rotate_angle),
-	__ATTR(prot_canvas, S_IRUGO|S_IWUSR, show_prot_canvas, store_prot_canvas),
+	__ATTR(prot_on, S_IRUGO|S_IWUSR|S_IWGRP, show_rotate_on, store_rotate_on),
+	__ATTR(prot_angle, S_IRUGO|S_IWUSR|S_IWGRP, show_rotate_angle, store_rotate_angle),
+	__ATTR(prot_canvas, S_IRUGO|S_IWUSR|S_IWGRP, show_prot_canvas, store_prot_canvas),
 	__ATTR(osd_reverse, S_IRUGO|S_IWUSR, show_osd_reverse, store_osd_reverse),
 	__ATTR(prot_state, S_IRUGO|S_IWUSR, show_prot_state, NULL),
 	__ATTR(osd_antiflicker, S_IRUGO|S_IWUSR, show_antiflicker, store_antiflicker),
diff --git a/drivers/amlogic/display/osd_ext/osd_main.c b/drivers/amlogic/display/osd_ext/osd_main.c
index 9a76eade5c7d..c9b442e606c8 100755
--- a/drivers/amlogic/display/osd_ext/osd_main.c
+++ b/drivers/amlogic/display/osd_ext/osd_main.c
@@ -1270,7 +1270,7 @@ static struct device_attribute osd_ext_attrs[] = {
 	__ATTR(order, S_IRUGO | S_IWUSR, show_order, store_order),
 	__ATTR(enable_3d, S_IRUGO | S_IWUSR, show_enable_3d, store_enable_3d),
 	__ATTR(preblend_enable, S_IRUGO | S_IWUSR, show_preblend_enable, store_preblend_enable),
-	__ATTR(free_scale, S_IRUGO | S_IWUSR, show_free_scale, store_free_scale),
+	__ATTR(free_scale, S_IRUGO | S_IWUSR | S_IWGRP, show_free_scale, store_free_scale),
 	__ATTR(scale_axis, S_IRUGO|S_IWUSR, show_scale_axis, store_scale_axis),
 	__ATTR(scale_width, S_IRUGO | S_IWUSR, show_scale_width, store_scale_width),
 	__ATTR(scale_height, S_IRUGO | S_IWUSR, show_scale_height, store_scale_height),
@@ -1285,9 +1285,9 @@ static struct device_attribute osd_ext_attrs[] = {
 	__ATTR(video_hole, S_IRUGO | S_IWUSR, show_video_hole, store__video_hole),
 	__ATTR(window_axis, S_IRUGO|S_IWUSR, show_window_axis, store_window_axis),
 	__ATTR(freescale_mode, S_IRUGO|S_IWUSR, show_freescale_mode, store_freescale_mode),
-	__ATTR(clone, S_IRUGO|S_IWUSR, show_clone, store_clone),
+	__ATTR(clone, S_IRUGO|S_IWUSR|S_IWGRP, show_clone, store_clone),
 	__ATTR(angle, S_IRUGO|S_IWUSR, show_angle, store_angle),
-	__ATTR(prot_on, S_IRUGO|S_IWUSR, show_rotate_on, store_rotate_on),
+	__ATTR(prot_on, S_IRUGO|S_IWUSR|S_IWGRP, show_rotate_on, store_rotate_on),
 	__ATTR(prot_angle, S_IRUGO|S_IWUSR, show_rotate_angle, store_rotate_angle),
 	__ATTR(prot_canvas, S_IRUGO|S_IWUSR, show_prot_canvas, store_prot_canvas),
 };
diff --git a/drivers/amlogic/display/vout/vout_serve.h b/drivers/amlogic/display/vout/vout_serve.h
index 981257b54580..b9e465ce81a3 100755
--- a/drivers/amlogic/display/vout/vout_serve.h
+++ b/drivers/amlogic/display/vout/vout_serve.h
@@ -67,7 +67,7 @@ static ssize_t  aml_vout_attr_##name##_store(struct class *cla,  struct class_at
 	return strnlen(buf, count);				\
 }											\
 struct  class_attribute  class_vout_attr_##name =  \
-__ATTR(name, S_IRUGO|S_IWUSR, aml_vout_attr_##name##_show, aml_vout_attr_##name##_store) ; 
+__ATTR(name, S_IRUGO|S_IWUSR|S_IWGRP, aml_vout_attr_##name##_show, aml_vout_attr_##name##_store) ; 
 /*****************************************************************
 **
 **	function  declare  part 
diff --git a/drivers/amlogic/display/vout2/vout_serve.h b/drivers/amlogic/display/vout2/vout_serve.h
index 836991ce1219..bd0aac5afade 100755
--- a/drivers/amlogic/display/vout2/vout_serve.h
+++ b/drivers/amlogic/display/vout2/vout_serve.h
@@ -65,7 +65,7 @@ static ssize_t  aml_vout_attr_##name##_store(struct class *cla,  struct class_at
 	return strnlen(buf, count);				\
 }											\
 struct  class_attribute  class_vout2_attr_##name =  \
-__ATTR(name, S_IRUGO|S_IWUSR, aml_vout_attr_##name##_show, aml_vout_attr_##name##_store) ; 
+__ATTR(name, S_IRUGO|S_IWUSR|S_IWGRP, aml_vout_attr_##name##_show, aml_vout_attr_##name##_store) ; 
 /*****************************************************************
 **
 **	function  declare  part 
diff --git a/drivers/amlogic/dvb_tv/aml_dvb.c b/drivers/amlogic/dvb_tv/aml_dvb.c
index 8b10ce949630..cd7e2cf3d753 100755
--- a/drivers/amlogic/dvb_tv/aml_dvb.c
+++ b/drivers/amlogic/dvb_tv/aml_dvb.c
@@ -1038,11 +1038,11 @@ static struct dvb_device dvbdev_dsc = {
 
 static struct class_attribute aml_stb_class_attrs[] = {
 	__ATTR(hw_setting, S_IRUGO|S_IWUSR, stb_show_hw_setting, stb_store_hw_setting),
-	__ATTR(source,  S_IRUGO | S_IWUSR, stb_show_source, stb_store_source),
+	__ATTR(source,  S_IRUGO | S_IWUSR | S_IWGRP, stb_show_source, stb_store_source),
 	__ATTR(dsc_source,  S_IRUGO | S_IWUSR, dsc_show_source, dsc_store_source),
 	__ATTR(tso_source,  S_IRUGO | S_IWUSR, tso_show_source, tso_store_source),
 #define DEMUX_SOURCE_ATTR_DECL(i)\
-		__ATTR(demux##i##_source,  S_IRUGO | S_IWUSR, demux##i##_show_source, demux##i##_store_source)
+		__ATTR(demux##i##_source,  S_IRUGO | S_IWUSR | S_IWGRP, demux##i##_show_source, demux##i##_store_source)
 #define DEMUX_FREE_FILTERS_ATTR_DECL(i)\
 		__ATTR(demux##i##_free_filters,  S_IRUGO | S_IWUSR, demux##i##_show_free_filters, NULL)
 #define DEMUX_FILTER_USERS_ATTR_DECL(i)\
@@ -1078,9 +1078,9 @@ static struct class_attribute aml_stb_class_attrs[] = {
 	DEMUX_CHANNEL_ACTIVITY_ATTR_DECL(2),
 #endif
 #define ASYNCFIFO_SOURCE_ATTR_DECL(i)\
-		__ATTR(asyncfifo##i##_source,  S_IRUGO | S_IWUSR, asyncfifo##i##_show_source, asyncfifo##i##_store_source)
+		__ATTR(asyncfifo##i##_source,  S_IRUGO | S_IWUSR | S_IWGRP, asyncfifo##i##_show_source, asyncfifo##i##_store_source)
 #define ASYNCFIFO_FLUSHSIZE_ATTR_DECL(i)\
-		__ATTR(asyncfifo##i##_flush_size,  S_IRUGO | S_IWUSR, asyncfifo##i##_show_flush_size, asyncfifo##i##_store_flush_size)
+		__ATTR(asyncfifo##i##_flush_size,  S_IRUGO | S_IWUSR | S_IWGRP, asyncfifo##i##_show_flush_size, asyncfifo##i##_store_flush_size)
 #if ASYNCFIFO_COUNT>0
 	ASYNCFIFO_SOURCE_ATTR_DECL(0),
 	ASYNCFIFO_FLUSHSIZE_ATTR_DECL(0),
@@ -1090,8 +1090,8 @@ static struct class_attribute aml_stb_class_attrs[] = {
 	ASYNCFIFO_FLUSHSIZE_ATTR_DECL(1),
 #endif
 	__ATTR(demux_reset,  S_IRUGO | S_IWUSR, NULL, demux_do_reset),
-	__ATTR(video_pts,  S_IRUGO | S_IWUSR, demux_show_video_pts, NULL),
-	__ATTR(audio_pts,  S_IRUGO | S_IWUSR, demux_show_audio_pts, NULL),
+	__ATTR(video_pts,  S_IRUGO | S_IWUSR | S_IWGRP, demux_show_video_pts, NULL),
+	__ATTR(audio_pts,  S_IRUGO | S_IWUSR | S_IWGRP, demux_show_audio_pts, NULL),
 	__ATTR(first_video_pts,  S_IRUGO | S_IWUSR, demux_show_first_video_pts, NULL),
 	__ATTR(first_audio_pts,  S_IRUGO | S_IWUSR, demux_show_first_audio_pts, NULL),
 	__ATTR(free_dscs,  S_IRUGO | S_IWUSR, dsc_show_free_dscs, NULL),
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index 4b78e8c3ace2..09b7a7cb4c5c 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -808,21 +808,21 @@ void hdmi_print(int dbg_lvl, const char *fmt, ...)
     }
 }
 
-static DEVICE_ATTR(disp_mode, S_IWUSR | S_IRUGO, show_disp_mode, store_disp_mode);
+static DEVICE_ATTR(disp_mode, S_IWUSR | S_IRUGO | S_IWGRP, show_disp_mode, store_disp_mode);
 static DEVICE_ATTR(aud_mode, S_IWUSR | S_IRUGO, show_aud_mode, store_aud_mode);
 static DEVICE_ATTR(edid, S_IWUSR | S_IRUGO, show_edid, store_edid);
-static DEVICE_ATTR(config, S_IWUSR | S_IRUGO, show_config, store_config);
+static DEVICE_ATTR(config, S_IWUSR | S_IRUGO | S_IWGRP, show_config, store_config);
 static DEVICE_ATTR(debug, S_IWUSR | S_IRUGO, NULL, store_debug);
 static DEVICE_ATTR(disp_cap, S_IWUSR | S_IRUGO, show_disp_cap, NULL);
 static DEVICE_ATTR(aud_cap, S_IWUSR | S_IRUGO, show_aud_cap, NULL);
-static DEVICE_ATTR(aud_ch, S_IWUSR | S_IRUGO, show_aud_ch, store_aud_ch);
+static DEVICE_ATTR(aud_ch, S_IWUSR | S_IRUGO | S_IWGRP, show_aud_ch, store_aud_ch);
 static DEVICE_ATTR(disp_cap_3d, S_IWUSR | S_IRUGO, show_disp_cap_3d, NULL);
 static DEVICE_ATTR(hdcp_ksv_info, S_IWUSR | S_IRUGO, show_hdcp_ksv_info, NULL);
 static DEVICE_ATTR(hpd_state, S_IWUSR | S_IRUGO, show_hpd_state, NULL);
 static DEVICE_ATTR(cec, S_IWUSR | S_IRUGO, show_cec, store_cec);
-static DEVICE_ATTR(cec_config, S_IWUSR | S_IRUGO , show_cec_config, store_cec_config);
+static DEVICE_ATTR(cec_config, S_IWUSR | S_IRUGO | S_IWGRP, show_cec_config, store_cec_config);
 //static DEVICE_ATTR(cec_config, S_IWUGO | S_IRUGO , NULL, store_cec_config);
-static DEVICE_ATTR(cec_lang_config, S_IWUSR | S_IRUGO , show_cec_lang_config, store_cec_lang_config);
+static DEVICE_ATTR(cec_lang_config, S_IWUSR | S_IRUGO | S_IWGRP, show_cec_lang_config, store_cec_lang_config);
 
 /*****************************
 *    hdmitx display client interface
diff --git a/drivers/amlogic/ppmgr/ppmgr_drv.c b/drivers/amlogic/ppmgr/ppmgr_drv.c
index b65f57260d66..4b9900d3fb39 100755
--- a/drivers/amlogic/ppmgr/ppmgr_drv.c
+++ b/drivers/amlogic/ppmgr/ppmgr_drv.c
@@ -844,7 +844,7 @@ static struct class_attribute ppmgr_class_attrs[] = {
            show_ppmgr_info,
            NULL),
     __ATTR(angle,
-           S_IRUGO | S_IWUSR,
+           S_IRUGO | S_IWUSR | S_IWGRP,
            angle_read,
            angle_write),
     __ATTR(rect,
@@ -857,7 +857,7 @@ static struct class_attribute ppmgr_class_attrs[] = {
            bypass_write),
 
     __ATTR(disp,
-           S_IRUGO | S_IWUSR,
+           S_IRUGO | S_IWUSR | S_IWGRP,
            disp_read,
            disp_write),
 
@@ -867,16 +867,16 @@ static struct class_attribute ppmgr_class_attrs[] = {
            orientation_write),
 #ifdef CONFIG_POST_PROCESS_MANAGER_PPSCALER
     __ATTR(ppscaler,
-           S_IRUGO | S_IWUSR,
+           S_IRUGO | S_IWUSR | S_IWGRP,
            ppscaler_read,
            ppscaler_write),
     __ATTR(ppscaler_rect,
-           S_IRUGO | S_IWUSR,
+           S_IRUGO | S_IWUSR | S_IWGRP,
            ppscaler_rect_read,
            ppscaler_rect_write),
 #endif
        __ATTR(vtarget,
-           S_IRUGO | S_IWUSR,
+           S_IRUGO | S_IWUSR | S_IWGRP,
            receiver_read,
            receiver_write),
 #ifdef CONFIG_POST_PROCESS_MANAGER_3D_PROCESS
diff --git a/drivers/amlogic/vfm/vfm.c b/drivers/amlogic/vfm/vfm.c
index fba5f95acd4b..29157286b322 100755
--- a/drivers/amlogic/vfm/vfm.c
+++ b/drivers/amlogic/vfm/vfm.c
@@ -401,7 +401,7 @@ static ssize_t vfm_map_store(struct class *class,
 	return count;
 }
 
-static CLASS_ATTR(map, 0644, vfm_map_show, vfm_map_store);
+static CLASS_ATTR(map, 0664, vfm_map_show, vfm_map_store);
 
 static struct class vfm_class = {
 	.name = CLS_NAME,
-- 
2.19.0

