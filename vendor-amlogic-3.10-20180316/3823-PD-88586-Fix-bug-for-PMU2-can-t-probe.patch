From b0d961d395f43552b4a3d15a3a1f7e7518b1c988 Mon Sep 17 00:00:00 2001
From: "tao.zeng" <tao.zeng@amlogic.com>
Date: Wed, 26 Mar 2014 19:53:21 +0800
Subject: [PATCH 3823/5965] PD #88586: Fix bug for PMU2 can't probe.

---
 drivers/amlogic/power/aml_pmu/Kconfig        |  5 -----
 drivers/amlogic/power/aml_pmu/aml1216-sply.c | 12 ++++++------
 drivers/amlogic/power/aml_pmu/aml1218-sply.c | 12 ++++++------
 drivers/amlogic/power/aml_pmu/aml_pmu.c      | 13 +++++++------
 4 files changed, 19 insertions(+), 23 deletions(-)

diff --git a/drivers/amlogic/power/aml_pmu/Kconfig b/drivers/amlogic/power/aml_pmu/Kconfig
index 0affe961dd9f..f652e79900f0 100755
--- a/drivers/amlogic/power/aml_pmu/Kconfig
+++ b/drivers/amlogic/power/aml_pmu/Kconfig
@@ -7,9 +7,6 @@ menuconfig AML_PMU
     ---help---
         say yes if you want add Amlogic power management unit support
 if AML_PMU
-choice 
-    prompt "AML PMU type"
-    default AML1212
 
 config AML1212
     bool "AML1212 driver"
@@ -26,6 +23,4 @@ config AML1218
     ---help---
         drivers for amlogic pmu AML1218 
 
-endchoice
-
 endif #AML_PMU
diff --git a/drivers/amlogic/power/aml_pmu/aml1216-sply.c b/drivers/amlogic/power/aml_pmu/aml1216-sply.c
index b487ef652e9b..063fbc005831 100755
--- a/drivers/amlogic/power/aml_pmu/aml1216-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1216-sply.c
@@ -77,12 +77,12 @@ extern int dwc_otg_charger_detect_unregister_notifier(struct notifier_block *nb)
 
 static int aml1216_update_state(struct aml_charger *charger);
 
-uint32_t charge_timeout = 0;
-int      re_charge_cnt  = 0;
-int      current_dir    = -1;
-int      power_flag     = 0;
-int      pmu_version    = 0;
-int      chg_status_reg  = 0;
+static uint32_t charge_timeout = 0;
+static int      re_charge_cnt  = 0;
+static int      current_dir    = -1;
+static int      power_flag     = 0;
+static int      pmu_version    = 0;
+static int      chg_status_reg  = 0;
 
 int aml1216_get_battery_voltage(void)
 {
diff --git a/drivers/amlogic/power/aml_pmu/aml1218-sply.c b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
index cc424580c819..e9d61f69d807 100755
--- a/drivers/amlogic/power/aml_pmu/aml1218-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
@@ -77,12 +77,12 @@ extern int dwc_otg_charger_detect_unregister_notifier(struct notifier_block *nb)
 
 static int aml1218_update_state(struct aml_charger *charger);
 
-uint32_t charge_timeout = 0;
-int      re_charge_cnt  = 0;
-int      current_dir    = -1;
-int      power_flag     = 0;
-int      pmu_version    = 0;
-int      chg_status_reg  = 0;
+static uint32_t charge_timeout = 0;
+static int      re_charge_cnt  = 0;
+static int      current_dir    = -1;
+static int      power_flag     = 0;
+static int      pmu_version    = 0;
+static int      chg_status_reg  = 0;
 
 int aml1218_get_battery_voltage(void)
 {
diff --git a/drivers/amlogic/power/aml_pmu/aml_pmu.c b/drivers/amlogic/power/aml_pmu/aml_pmu.c
index 0a8a658b14a5..63801c151cd5 100755
--- a/drivers/amlogic/power/aml_pmu/aml_pmu.c
+++ b/drivers/amlogic/power/aml_pmu/aml_pmu.c
@@ -149,6 +149,7 @@ static int setup_platform_pmu_init_data(struct device_node *node, struct amlogic
 static struct i2c_device_id *find_id_table_by_name(const struct i2c_device_id *look_table, char *name)
 {
     while (look_table->name && look_table->name[0]) {
+        printk("table name:%s, name:%s\n", look_table->name, name);
         if (!strcmp(look_table->name, name)) {
             return (struct i2c_device_id *)look_table;
         }
@@ -161,7 +162,7 @@ static struct amlogic_pmu_init *init_data;
 
 #if defined(CONFIG_AML_DVFS) && defined(CONFIG_AML1216)
 extern struct aml_pmu_driver aml1216_pmu_driver;
-static int convert_id_to_dcdc(uint32_t id)
+static int aml_1216_convert_id_to_dcdc(uint32_t id)
 {
     int dcdc = 0; 
     switch (id) {
@@ -185,7 +186,7 @@ static int convert_id_to_dcdc(uint32_t id)
 
 static int aml1216_set_voltage(uint32_t id, uint32_t min_uV, uint32_t max_uV)
 {
-    int dcdc = convert_id_to_dcdc(id);
+    int dcdc = aml_1216_convert_id_to_dcdc(id);
     uint32_t vol = 0;
     
     if (min_uV > max_uV) {
@@ -200,7 +201,7 @@ static int aml1216_set_voltage(uint32_t id, uint32_t min_uV, uint32_t max_uV)
 
 static int aml1216_get_voltage(uint32_t id, uint32_t *uV)
 {
-    int dcdc = convert_id_to_dcdc(id);
+    int dcdc = aml_1216_convert_id_to_dcdc(id);
 
     if (dcdc >= 1 && dcdc <= 3) {
         return aml1216_get_dcdc_voltage(dcdc, uV);    
@@ -220,7 +221,7 @@ struct aml_dvfs_driver aml1216_dvfs_driver = {
 
 #if defined(CONFIG_AML_DVFS) && defined(CONFIG_AML1218)
 extern struct aml_pmu_driver aml1218_pmu_driver;
-static int convert_id_to_dcdc(uint32_t id)
+static int aml_1218_convert_id_to_dcdc(uint32_t id)
 {
     int dcdc = 0; 
     switch (id) {
@@ -244,7 +245,7 @@ static int convert_id_to_dcdc(uint32_t id)
 
 static int aml1218_set_voltage(uint32_t id, uint32_t min_uV, uint32_t max_uV)
 {
-    int dcdc = convert_id_to_dcdc(id);
+    int dcdc = aml_1218_convert_id_to_dcdc(id);
     uint32_t vol = 0;
     
     if (min_uV > max_uV) {
@@ -259,7 +260,7 @@ static int aml1218_set_voltage(uint32_t id, uint32_t min_uV, uint32_t max_uV)
 
 static int aml1218_get_voltage(uint32_t id, uint32_t *uV)
 {
-    int dcdc = convert_id_to_dcdc(id);
+    int dcdc = aml_1218_convert_id_to_dcdc(id);
 
     if (dcdc >= 1 && dcdc <= 3) {
         return aml1218_get_dcdc_voltage(dcdc, uV);    
-- 
2.19.0

