From 7296955c64e9d101a1550a9c08bb38233eb980cf Mon Sep 17 00:00:00 2001
From: "zongdong.jiao" <zongdong.jiao@amlogic.com>
Date: Wed, 26 Mar 2014 23:41:35 +0800
Subject: [PATCH 3824/5965] PD #89643: hdmitx: audio: fix audio mute after
 switch mode

---
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c  |  9 +++---
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c        | 28 +++++++++++++++++--
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_hdcp.c   |  1 +
 .../linux/amlogic/hdmi_tx/hdmi_tx_module.h    |  2 ++
 4 files changed, 34 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
index 1df5a3332eda..d1248f409c5e 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
@@ -1691,7 +1691,7 @@ static void hdmi_audio_init(unsigned char spdif_flag)
     tmp_add_data  = tx_i2s_8_channel ? 0xff : 0x03;
     hdmi_wr_reg(TX_AUDIO_SAMPLE, tmp_add_data); // Channel valid for up to 8 channels, 1 bit per channel.
 
-    hdmi_wr_reg(TX_AUDIO_PACK, 0x01); // Enable audio sample packets
+    hdmi_wr_reg(TX_AUDIO_PACK, 0x00); // Enable audio sample packets
 
     // Set N = 4096 (N is not measured, N must be configured so as to be a reference to clock_meter)
     hdmi_wr_reg(TX_SYS1_ACR_N_0, 0x00); // N[7:0]
@@ -2911,10 +2911,11 @@ static int hdmitx_cntl_config(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigne
     case CONF_AUDIO_MUTE_OP:
         if(argv == AUDIO_MUTE) {
             hdmi_wr_reg(TX_AUDIO_PACK, 0x00); // disable audio sample packets
-            hdmi_wr_reg(TX_PACKET_CONTROL_2, hdmi_rd_reg(TX_PACKET_CONTROL_2) | (1<<3));
+            //hdmi_wr_reg(TX_PACKET_CONTROL_2, hdmi_rd_reg(TX_PACKET_CONTROL_2) | (1<<3));
         }
-        if((argv == AUDIO_UNMUTE) && (hdmitx_device->tx_aud_cfg == 1)) {
-            hdmitx_device->audio_param_update_flag = 1;
+        if((argv == AUDIO_UNMUTE) && (hdmitx_device->tx_aud_cfg != 0)) {
+            hdmi_wr_reg(TX_AUDIO_PACK, 0x01);
+            //hdmitx_device->audio_param_update_flag = 1;
         }
         break;
     case CONF_VIDEO_BLANK_OP:
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index 09b7a7cb4c5c..d4a90296ba51 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -581,7 +581,22 @@ static ssize_t store_edid(struct device * dev, struct device_attribute *attr, co
 static ssize_t show_config(struct device * dev, struct device_attribute *attr, char * buf)
 {
     int pos=0;
+    unsigned char *aud_conf;
+    switch(hdmitx_device.tx_aud_cfg) {
+    case 0:
+        aud_conf = "off";
+        break;
+    case 1:
+        aud_conf = "on";
+        break;
+    case 2:
+        aud_conf = "auto";
+        break;
+    default:
+        aud_conf = "none";
+    }
     pos += snprintf(buf+pos, PAGE_SIZE, "disp switch (force or edid): %s\r\n", (hdmitx_device.disp_switch_config==DISP_SWITCH_FORCE)?"force":"edid");
+    pos += snprintf(buf+pos, PAGE_SIZE, "audio config: %s\r\n", aud_conf);
     return pos;
 }
 
@@ -987,6 +1002,7 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
     audio_sample_size_t n_size = aud_size_map(substream->runtime->sample_bits);
 
     hdmitx_device.audio_param_update_flag = 0;
+    hdmitx_device.audio_notify_flag = 0;
 
     if(audio_param->sample_rate != n_rate) {
         audio_param->sample_rate = n_rate;
@@ -1016,14 +1032,15 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
             audio_check = 1;
         }
         if((!audio_check) && (cmd != AOUT_EVENT_IEC_60958_PCM)) {      // sink don't support current audio mode
-            printk("Sink not support this audio format %d\n", cmd);
+            printk("Sink not support this audio format %lu\n", cmd);
             hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_AUDIO_MUTE_OP, AUDIO_MUTE);
             hdmitx_device.audio_param_update_flag = 0;
         }
     }
     if(hdmitx_device.audio_param_update_flag == 0)
         hdmi_print(INF, AUD "no update\n");
-
+    else
+        hdmitx_device.audio_notify_flag = 1;
     return 0;
 }
 
@@ -1085,6 +1102,13 @@ static int hdmi_task_handle(void *data)
         if((!hdmi_audio_off_flag)&&(hdmitx_device->audio_param_update_flag)) {
             if(hdmitx_device->hpd_state == 1) {     // plug-in & update audio param
                 hdmitx_set_audio(hdmitx_device, &(hdmitx_device->cur_audio_param), hdmi_ch);
+                if((hdmitx_device->audio_notify_flag == 1) || (hdmitx_device->audio_step == 1)) {
+                    hdmitx_device->audio_notify_flag = 0;
+                    hdmitx_device->audio_step = 0;
+#ifndef CONFIG_AML_HDMI_TX_HDCP
+                    hdmitx_device->HWOp.CntlConfig(hdmitx_device, CONF_AUDIO_MUTE_OP, AUDIO_UNMUTE);
+#endif
+                }
                 hdmitx_device->audio_param_update_flag = 0;
                 hdmi_print(INF, AUD "set audio param\n");
             }
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_hdcp.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_hdcp.c
index 8553425e1436..d8f336325298 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_hdcp.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_hdcp.c
@@ -122,6 +122,7 @@ static int hdmitx_hdcp_task(void *data)
 #else
             hdmitx_device->HWOp.CntlConfig(hdmitx_device, CONF_VIDEO_BLANK_OP, VIDEO_UNBLANK);
             hdmitx_device->HWOp.CntlConfig(hdmitx_device, CONF_AUDIO_MUTE_OP, AUDIO_UNMUTE);
+            hdmitx_device->audio_step = 1;
 #endif
         }
         msleep(100);
diff --git a/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h b/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
index 3632e6c06bba..8e092b624497 100644
--- a/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
+++ b/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
@@ -119,6 +119,8 @@ typedef struct hdmi_tx_dev_s {
     unsigned int  tv_no_edid;           // For some un-well-known TVs, no edid at all
     unsigned int  hpd_lock;
     unsigned int  output_blank_flag;    // if equals to 1, means current video & audio output are blank
+    unsigned int  audio_notify_flag;
+    unsigned int  audio_step;
     hdmi_mo_s hpd;
     hdmi_mo_s hdcp;
 }hdmitx_dev_t;
-- 
2.19.0

