From 777416509f8e8df070af40b2382f35b588b1b600 Mon Sep 17 00:00:00 2001
From: "jets.yan" <jets.yan@amlogic.com>
Date: Tue, 1 Apr 2014 22:12:23 +0800
Subject: [PATCH 3860/5965] PD #89799: add cvbs trimming for m8.

---
 arch/arm/mach-meson8/include/mach/tvregs.h | 38 ------------------
 drivers/amlogic/display/vout/tvconf.c      | 17 ++++++++
 drivers/amlogic/display/vout/tvoutc.c      | 46 +++++++++++++++++++++-
 3 files changed, 61 insertions(+), 40 deletions(-)

diff --git a/arch/arm/mach-meson8/include/mach/tvregs.h b/arch/arm/mach-meson8/include/mach/tvregs.h
index fd8796ceb478..dfe3a57f12db 100755
--- a/arch/arm/mach-meson8/include/mach/tvregs.h
+++ b/arch/arm/mach-meson8/include/mach/tvregs.h
@@ -60,8 +60,6 @@ static const  reg_t tvreg_vclk_hd[]={
 };
 
 static const  reg_t tvregs_720p[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,  },
 
     {P_HHI_VID_CLK_CNTL,           0x0,},
@@ -129,8 +127,6 @@ static const  reg_t tvregs_720p[] = {
 };
 
 static const  reg_t tvregs_720p_50hz[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,  },
     {P_HHI_VID_CLK_CNTL,           0x0,},
     {P_HHI_VID_PLL_CNTL2,          0x814d3928},
@@ -218,8 +214,6 @@ static const  reg_t tvregs_720p_50hz[] = {
 };
 
 static const reg_t tvregs_480i[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,            0xff,  },
 
     {P_HHI_VID_CLK_CNTL,           0x0,       },
@@ -282,8 +276,6 @@ static const reg_t tvregs_480i[] = {
 };
 
 static const reg_t tvregs_480cvbs[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,            0xff,  },
 
     {P_HHI_VID_CLK_CNTL,           0x0,       },
@@ -345,15 +337,11 @@ static const reg_t tvregs_480cvbs[] = {
     {P_ENCI_VIDEO_SAT,               0x7        },
     {P_VENC_VDAC_DAC0_FILT_CTRL0,    0x1        },
     {P_VENC_VDAC_DAC0_FILT_CTRL1,    0xfc48     },
-    //{P_HHI_VDAC_CNTL0,               0x650001   },
-    //{P_HHI_VDAC_CNTL1,               0x1        },
     {P_ENCI_MACV_N0,                 0x0        },
     {MREG_END_MARKER,              0      }
 };
 
 static const reg_t tvregs_480p[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,  },
     {P_HHI_VID_CLK_CNTL,           0x0,       },
     {P_HHI_VID_PLL_CNTL,           0x2001042d,},
@@ -423,8 +411,6 @@ static const reg_t tvregs_480p[] = {
 };
 
 static const reg_t tvregs_576i[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,               0xff,      },
 
     {P_HHI_VID_CLK_CNTL,           0x0,       },
@@ -487,8 +473,6 @@ static const reg_t tvregs_576i[] = {
 };
 
 static const reg_t tvregs_576cvbs[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,               0xff,      },
 
     {P_HHI_VID_CLK_CNTL,           0x0,       },
@@ -550,15 +534,11 @@ static const reg_t tvregs_576cvbs[] = {
     {P_ENCI_VIDEO_SAT,                  0x7        },
     {P_VENC_VDAC_DAC0_FILT_CTRL0,       0x1        },
     {P_VENC_VDAC_DAC0_FILT_CTRL1,       0xfc48     },
-    //{P_HHI_VDAC_CNTL0,                  0x650001   },
-    //{P_HHI_VDAC_CNTL1,                  0x1        },
     {P_ENCI_MACV_N0,                    0x0        },
     {MREG_END_MARKER,                 0          }
 };
 
 static const reg_t tvregs_576p[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,      },
     {P_HHI_VID_CLK_CNTL,           0x0,       },
     {P_HHI_VID_PLL_CNTL,           0x2001042d,},
@@ -628,8 +608,6 @@ static const reg_t tvregs_576p[] = {
 };
 
 static const reg_t tvregs_1080i[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,  },
 //	{VCLK_HD},
     {P_HHI_VID_CLK_CNTL,           0x0,},
@@ -695,8 +673,6 @@ static const reg_t tvregs_1080i[] = {
 };
 
 static const reg_t tvregs_1080i_50hz[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,  },
 //	{VCLK_HD},
     {P_HHI_VID_CLK_CNTL,           0x0,},
@@ -784,8 +760,6 @@ static const reg_t tvregs_1080i_50hz[] = {
 };
 
 static const reg_t tvregs_1080p[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,  },
 
     {P_HHI_VID_CLK_CNTL,           0x0,},
@@ -847,8 +821,6 @@ static const reg_t tvregs_1080p[] = {
 };
 
 static const reg_t tvregs_1080p_50hz[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,  },
     {P_HHI_VID_CLK_CNTL,           0x0,},
     {P_HHI_VID_PLL_CNTL2,          0x814d3928},
@@ -937,8 +909,6 @@ static const reg_t tvregs_1080p_50hz[] = {
 };
 
 static const reg_t tvregs_1080p_24hz[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_VENC_VDAC_SETTING,          0xff,  },
     {P_HHI_VID_CLK_CNTL,           0x0,},
     {P_HHI_VID_PLL_CNTL2,          0x814d3928},
@@ -1027,8 +997,6 @@ static const reg_t tvregs_1080p_24hz[] = {
 };
 
 static const reg_t tvregs_4k2k_30hz[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_ENCP_VIDEO_MODE,             0x4040}, // Enable Hsync and equalization pulse switch in center; bit[14] cfg_de_v = 1
     {P_ENCP_VIDEO_MODE_ADV,         0x0008}, // Sampling rate: 1
     {P_ENCP_VIDEO_YFP1_HTIME,       140},
@@ -1062,8 +1030,6 @@ static const reg_t tvregs_4k2k_30hz[] = {
 };
 
 static const reg_t tvregs_4k2k_25hz[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_ENCP_VIDEO_MODE,             0x4040}, // Enable Hsync and equalization pulse switch in center; bit[14] cfg_de_v = 1
     {P_ENCP_VIDEO_MODE_ADV,         0x0008}, // Sampling rate: 1
     {P_ENCP_VIDEO_YFP1_HTIME,       140},
@@ -1097,8 +1063,6 @@ static const reg_t tvregs_4k2k_25hz[] = {
 };
 
 static const reg_t tvregs_4k2k_24hz[] = {
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_ENCP_VIDEO_MODE,             0x4040}, // Enable Hsync and equalization pulse switch in center; bit[14] cfg_de_v = 1
     {P_ENCP_VIDEO_MODE_ADV,         0x0008}, // Sampling rate: 1
     {P_ENCP_VIDEO_YFP1_HTIME,       140},
@@ -1133,8 +1097,6 @@ static const reg_t tvregs_4k2k_24hz[] = {
 };
 
 static const reg_t tvregs_4k2k_smpte[] = {      //24hz
-    {P_HHI_VDAC_CNTL0,               0x0   },
-    {P_HHI_VDAC_CNTL1,               0x8   },
     {P_ENCP_VIDEO_MODE,             0x4040}, // Enable Hsync and equalization pulse switch in center; bit[14] cfg_de_v = 1
     {P_ENCP_VIDEO_MODE_ADV,         0x0008}, // Sampling rate: 1
     {P_ENCP_VIDEO_YFP1_HTIME,       140},
diff --git a/drivers/amlogic/display/vout/tvconf.c b/drivers/amlogic/display/vout/tvconf.c
index 316bb226927b..3ec4b8f6566b 100755
--- a/drivers/amlogic/display/vout/tvconf.c
+++ b/drivers/amlogic/display/vout/tvconf.c
@@ -575,6 +575,23 @@ static __exit void tv_exit_module(void)
 	amlog_mask_level(LOG_MASK_INIT,LOG_LEVEL_HIGH,"exit tv module\r\n");
 }
 
+#ifdef CONFIG_ARCH_MESON8
+extern void cvbs_config_vdac(unsigned int flag, unsigned int cfg);
+
+static int __init vdac_config_bootargs_setup(char* line)
+{
+    unsigned int cfg = 0x00;
+
+    printk("cvbs trimming line = %s\n", line);
+    cfg = simple_strtoul(line, NULL, 16);
+
+    cvbs_config_vdac(cfg&0xff, (cfg&0xff00)>>8);
+
+    return 1;
+}
+
+__setup("vdaccfg=", vdac_config_bootargs_setup);
+#endif
 
 arch_initcall(tv_init_module);
 module_exit(tv_exit_module);
diff --git a/drivers/amlogic/display/vout/tvoutc.c b/drivers/amlogic/display/vout/tvoutc.c
index 00a246fb40b5..19e3490f7e4f 100755
--- a/drivers/amlogic/display/vout/tvoutc.c
+++ b/drivers/amlogic/display/vout/tvoutc.c
@@ -283,6 +283,45 @@ static int uboot_display_already(tvmode_t mode)
     */
 }
 
+#ifdef CONFIG_ARCH_MESON8
+static unsigned int vdac_cfg_valid = 0, vdac_cfg_value = 0;
+void cvbs_config_vdac(unsigned int flag, unsigned int cfg)
+{
+	vdac_cfg_value = cfg&0x7;
+
+	// flag 1/0 for validity of vdac config
+	if( (flag&0xc0) == 0x80 )
+		vdac_cfg_valid = 1;
+	else
+		vdac_cfg_valid = 0;
+
+	return ;
+}
+static void cvbs_cntl_output(unsigned int open)
+{
+	unsigned int cntl0=0, cntl1=0;
+	
+	if( open == 0 )// close
+	{
+		cntl0 = 0;
+		cntl1 = 8;
+		printk("cvbs close = 0x%x, 0x%x\n", cntl0, cntl1);
+		WRITE_MPEG_REG(HHI_VDAC_CNTL0, cntl0);
+		WRITE_MPEG_REG(HHI_VDAC_CNTL1, cntl1);
+	}
+	else if( open == 1 )// open
+	{
+		cntl0 = 0x1;
+		cntl1 = (vdac_cfg_valid==0)?0:vdac_cfg_value;
+		printk("cvbs open = 0x%x, 0x%x\n", cntl0, cntl1);
+		WRITE_MPEG_REG(HHI_VDAC_CNTL1, cntl1);
+		WRITE_MPEG_REG(HHI_VDAC_CNTL0, cntl0);
+	}
+
+	return ;
+}
+#endif
+
 int tvoutc_setmode(tvmode_t mode)
 {
     const  reg_t *s;
@@ -312,6 +351,10 @@ int tvoutc_setmode(tvmode_t mode)
             return 0;
         }
     }
+
+#ifdef CONFIG_ARCH_MESON8
+    cvbs_cntl_output(0);
+#endif
     while (MREG_END_MARKER != s->reg)
         setreg(s++);
     printk("%s[%d]\n", __func__, __LINE__);
@@ -390,8 +433,7 @@ printk(" clk_util_clk_msr 29 = %d\n", clk_util_clk_msr(29));
 	{
 		msleep(1000);
 
-		aml_write_reg32(P_HHI_VDAC_CNTL0,0x650001);
-		aml_write_reg32(P_HHI_VDAC_CNTL1,0x1);
+		cvbs_cntl_output(1);
 	}
 #endif
 //while(1);
-- 
2.19.0

