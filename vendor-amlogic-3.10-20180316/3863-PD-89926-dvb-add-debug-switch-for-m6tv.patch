From 72447b087e6601885e8c4c0cc68c64d824a54dcf Mon Sep 17 00:00:00 2001
From: "Shijie.rong" <shijie.rong@amlogic.com>
Date: Wed, 2 Apr 2014 13:55:41 +0800
Subject: [PATCH 3863/5965] PD #89926: dvb: add debug switch for m6tv

---
 drivers/amlogic/dvb_tv/aml_fe.c               |  2 +-
 drivers/amlogic/dvb_tv/amldemod/amlfrontend.c | 10 +--
 drivers/amlogic/dvb_tv/amldemod/demod_func.c  | 70 +++++++++++++------
 drivers/media/dvb-core/dvb_frontend.c         | 11 ++-
 4 files changed, 61 insertions(+), 32 deletions(-)

diff --git a/drivers/amlogic/dvb_tv/aml_fe.c b/drivers/amlogic/dvb_tv/aml_fe.c
index ad37655aed9e..20dda7457047 100755
--- a/drivers/amlogic/dvb_tv/aml_fe.c
+++ b/drivers/amlogic/dvb_tv/aml_fe.c
@@ -48,7 +48,7 @@
 
 MODULE_PARM_DESC(debug_fe, "\n\t\t Enable frontend debug information");
 static int debug_fe = 1;
-module_param(debug_fe, int, S_IRUGO);
+module_param(debug_fe, int, 0644);
 
 #define AFC_BEST_LOCK      50
 #define ATV_AFC_1_0MHZ   1000000
diff --git a/drivers/amlogic/dvb_tv/amldemod/amlfrontend.c b/drivers/amlogic/dvb_tv/amldemod/amlfrontend.c
index e63493749030..d61a6f5eda72 100755
--- a/drivers/amlogic/dvb_tv/amldemod/amlfrontend.c
+++ b/drivers/amlogic/dvb_tv/amldemod/amlfrontend.c
@@ -45,8 +45,8 @@
 	}while(0)
 
 MODULE_PARM_DESC(debug_aml, "\n\t\t Enable frontend debug information");
-static int debug_aml = 1;
-module_param(debug_aml, int, S_IRUGO);
+static int debug_aml = 0;
+module_param(debug_aml, int, 0644);
 
 #define pr_error(fmt, args...) printk("M6_DEMOD: "fmt, ## args)
 
@@ -320,7 +320,7 @@ static int amdemod_stat_islock(struct aml_fe_dev *dev, int mode)
 			}
 	}else if (mode==4){
 		/*DTMB*/
-			printk("DTMB lock status is %lu\n",((apb_read_reg(DTMB_BASE+(0x0e3<<2))>>12)&0x1));
+			pr_dbg("DTMB lock status is %lu\n",((apb_read_reg(DTMB_BASE+(0x0e3<<2))>>12)&0x1));
 			return (apb_read_reg(DTMB_BASE+(0x0e3<<2))>>12)&0x1;
 	}
 	return 0;
@@ -1021,7 +1021,7 @@ static int m6_demod_dtmb_set_frontend(struct dvb_frontend *fe)
 	demod_i2c.tuner=dev->drv->id;
 	demod_i2c.addr=dev->i2c_addr;
 	times = 2;
-	printk("m6_demod_dtmb_set_frontend,freq is %d\n",c->frequency);
+	pr_dbg("m6_demod_dtmb_set_frontend,freq is %d\n",c->frequency);
 	memset(&param, 0, sizeof(param));
 	param.ch_freq = c->frequency/1000;
 
@@ -1074,7 +1074,7 @@ static int m6_demod_dtmb_get_frontend(struct dvb_frontend *fe)
 	struct dtv_frontend_properties *c = &fe->dtv_property_cache;
 	struct aml_fe *afe = fe->demodulator_priv;
 	*c = afe->params;
-	pr_dbg("[get frontend]c->frequency is %d\n",c->frequency);
+//	pr_dbg("[get frontend]c->frequency is %d\n",c->frequency);
 	return 0;
 }
 
diff --git a/drivers/amlogic/dvb_tv/amldemod/demod_func.c b/drivers/amlogic/dvb_tv/amldemod/demod_func.c
index 406699509423..62d51ebf37fb 100755
--- a/drivers/amlogic/dvb_tv/amldemod/demod_func.c
+++ b/drivers/amlogic/dvb_tv/amldemod/demod_func.c
@@ -21,8 +21,8 @@
 #define pr_error(fmt, args...) printk("FE: " fmt, ## args)
 
 MODULE_PARM_DESC(debug_demod, "\n\t\t Enable frontend debug information");
-static int debug_demod = 1;
-module_param(debug_demod, int, S_IRUGO);
+static int debug_demod = 0;
+module_param(debug_demod, int, 0644);
 
 //8vsb
 static atsc_cfg_t list_8vsb[22] = {
@@ -885,6 +885,29 @@ void dtmb_initial(struct aml_demod_sta *demod_sta)
 
 }
 
+int dtmb_information()
+{
+	int tps;
+	tps = dtmb_read_reg(0xe5);
+	pr_dbg("¡¾FSM ¡¿: %x %x %x %x  \n",dtmb_read_reg(0xd7),dtmb_read_reg(0xd6),dtmb_read_reg(0xd5),dtmb_read_reg(0xd4));
+	pr_dbg("¡¾AGC ¡¿: agc_power %d, dagc_power %3d, dagc_gain %3d mobi_det_power %d \n",
+		(-(((dtmb_read_reg(0xd9) >> 22) & 0x1ff) / 16)),
+		((dtmb_read_reg(0xda) >> 0) & 0x3f),
+		((dtmb_read_reg(0xda) >> 8) & 0x3ff),
+		(dtmb_read_reg(0xf1)>>8) & 0x7ffff);
+	pr_dbg("¡¾TPS ¡¿ SC or MC %2d,f_r %2d qam_nr %2d intlv %2d cr %2d constl %2d,\n",
+		(dtmb_read_reg(0xe6) >> 24) & 0x1,
+		(tps >> 22) &0x1,
+		(tps >> 21) &0x1,
+		(tps >> 20) &0x1,
+		(tps >> 18) &0x3,
+		(tps >> 16) &0x3);
+
+
+
+}
+
+
 int dtmb_read_snr(void){
 	int tmp,che_snr,snr,snr_avg,fec_lock,reg_46;
 	int fsm_state,fec_ldpc_it_avg,local_state,fbe_in_num,SC_mode,time_eq;
@@ -895,7 +918,7 @@ int dtmb_read_snr(void){
     int ctrl_che_working_state,pm_change,constell;
 	mobile_times = 0;
 	pm_change = 0;
-	 
+
 	tmp=dtmb_read_reg(0x0e3);
 	fec_ldpc_it_avg = dtmb_read_reg(0xdd) & 0xffff;
 	fec_bch_add = dtmb_read_reg(0xdf);
@@ -908,11 +931,12 @@ int dtmb_read_snr(void){
     if(snr_avg >= 2048)
         snr_avg = snr_avg - 4096;
     snr_avg = snr_avg / 32;
+    dtmb_information();
 	pr_dbg("[dtmb] snr is %d,snr_avg is %d,fec_lock is %d,fec_bch_add is %d,fec_ldpc_it_avg is %d\n",snr,snr_avg,fec_lock,fec_bch_add,fec_ldpc_it_avg/256);
-	ctrl_che_working_state = (dtmb_read_reg(0xf1) >> 28) & 0x3;   
+	ctrl_che_working_state = (dtmb_read_reg(0xf1) >> 28) & 0x3;
     if(((snr_avg < 1  && ctrl_che_working_state == 0) || (snr < 1  && ctrl_che_working_state == 1)) && fec_lock) { // false lock, reset
 //	if((snr_avg<=0)&&(fec_lock==1)){
-		printk("reset dtmb\n");
+		pr_dbg("reset dtmb\n");
 		dtmb_reset();
 		return 0;
 	}else{
@@ -920,7 +944,7 @@ int dtmb_read_snr(void){
 			 pr_dbg("-----------  lock ! ------------ \n");
 			 return 1;
 		 }else{
-			fsm_state = dtmb_read_reg(0xd7) & 0xf;      
+			fsm_state = dtmb_read_reg(0xd7) & 0xf;
             local_state = 2;
 			time_cnt=0;
 			 while(fsm_state < 8 && time_cnt < 10) {// state change to pm
@@ -938,7 +962,7 @@ int dtmb_read_snr(void){
 		     	  fec_ldpc_it_avg = dtmb_read_reg(0xdd) & 0xffff;
 
 			  	  mobi_det_power = (dtmb_read_reg(0xf1)>>8) & 0x7ffff;
-                     	  
+
              	  if(mobi_det_power > 10) {
              	      mobile_times = 8;
              	      dtmb_write_reg(0x46, (dtmb_read_reg(0x46) & 0xfffffff9) + (1 << 1)); // set mobile mode
@@ -950,7 +974,7 @@ int dtmb_read_snr(void){
              	          dtmb_write_reg(0x46, (dtmb_read_reg(0x46) & 0xfffffff9)); // set static mode
              	       //   dtmb_write_reg(0x50, 0x1120);
              	          mobile_times = 0;
-             	      }    
+             	      }
              	  }
 
 				  if((fbe_in_num > 360) && (pm_change == 0)) {// two path mode, test distance.
@@ -963,8 +987,8 @@ int dtmb_read_snr(void){
              	      dtmb_write_reg(0x5c, 0x00000320);
              	      pm_change = 0;
              	  }
-                         	      
-		     	  
+
+
 		     	  local_state = 4;
 		     	  pr_dbg("*************** local_state = %d ************ \n", local_state);
 		     	  if(mobile_times > 0)
@@ -972,7 +996,7 @@ int dtmb_read_snr(void){
 		     	  if(time_eq){  // in time_eq mode
 		     	      local_state = 5;
 		     	      pr_dbg("*************** local_state = %d ************ \n", local_state);
-		     	      
+
 		     	      if(SC_mode == 1 || fbe_in_num < 30){ // MC mode or not two path mode, restore normal mode
 		     	          dtmb_write_reg(0x2e, 0x131a747d);  // cancel timing-loop
 		     	          dtmb_write_reg(0xd, 0x141a0320); // increase interleaver0 waiting time.
@@ -982,9 +1006,9 @@ int dtmb_read_snr(void){
 		                pr_dbg(" ------------ normal mode -------------\n");
 		                local_state = 6;
 		                pr_dbg("*************** local_state = %d ************ \n", local_state);
-		                
+
 		     	      }
-		        } 
+		        }
 		        else {
 		            local_state = 7;
 		            pr_dbg("*************** local_state = %d ************ \n", local_state);
@@ -992,7 +1016,7 @@ int dtmb_read_snr(void){
 		            if((SC_mode == 0) && (fbe_in_num > 30) && (fec_ldpc_it_avg > 640)&& (constell > 1)/*2.5*256*/) { // switch to time_eq mode
 		                ddc_phase  = dtmb_read_reg(0x15) & 0x1ffffff;
 		                icfo_phase = dtmb_read_reg(0xe0) & 0xfffff;
-		                fcfo_phase = dtmb_read_reg(0xe1) & 0xfffff;          
+		                fcfo_phase = dtmb_read_reg(0xe1) & 0xfffff;
 		                if(icfo_phase > (1<<19))
 		                    icfo_phase -= (1<<20);
 		                if(fcfo_phase > (1<<19))
@@ -1000,7 +1024,7 @@ int dtmb_read_snr(void){
 		                ddc_phase_new = ddc_phase + icfo_phase*4 + fcfo_phase;
 		                //printf("before is DDC_phase %x, now is %x \n", ddc_phase, ddc_phase_new);
 		                dtmb_write_reg(0x15, ddc_phase_new);
-		                
+
 		                //printf("switch to time_eq configure : 0 -- No, 1 -- yes");
 		                //scanf("%d", &tmp);
 		                tmp = 1;
@@ -1010,15 +1034,15 @@ int dtmb_read_snr(void){
 		                    reg_46 = dtmb_read_reg(0x46);
 		                    reg_46 = reg_46 | ((1<<20) + (1<<16));           // bypass fe and set time_eq
 		                    dtmb_write_reg(0x46, reg_46);
-		                    
+
 		                    reg_6b = dtmb_read_reg(0x6b);
 		                    reg_6b = (reg_6b &~(0x3<<16)) | (1<<17);           // set tune auto
 		                    dtmb_write_reg(0x6b, reg_6b);
-		                } 
-		                pr_dbg(" ------------ time_eq mode -------------\n");  
-		                local_state = 8; 
+		                }
+		                pr_dbg(" ------------ time_eq mode -------------\n");
+		                local_state = 8;
 		                pr_dbg("*************** local_state = %d ************ \n", local_state);
-		                dtmb_reset();  
+		                dtmb_reset();
 						msleep(300);
 	                        }
 	                    }
@@ -1026,18 +1050,18 @@ int dtmb_read_snr(void){
                         {
                             local_state = 9;
                             pr_dbg("*************** local_state = %d ************ \n", local_state);
-                            
+
                             dtmb_register_reset();
                         //    dtmb_write_reg(0x49,memstart); //set memory
                             dtmb_write_reg(0x10,0x52); //set memory
                             dtmb_write_reg(0xd, 0x141a0320); // increase interleaver0 waiting time.
                             dtmb_write_reg(0xc, 0x41444400); // shorten che waiting time.
                             dtmb_write_reg(0x47,0x33202);
-							dtmb_write_reg(0x18,0x000a1316); // shorten mobile detect time.					     
+							dtmb_write_reg(0x18,0x000a1316); // shorten mobile detect time.
 				            dtmb_write_reg(0x15,0x0199999A); // shift -5M.
 				            dtmb_write_reg(0x2f,0x13064263); // speed up src
 				            pm_change = 0;
-                        }  
+                        }
 
 		 }
 
diff --git a/drivers/media/dvb-core/dvb_frontend.c b/drivers/media/dvb-core/dvb_frontend.c
index 7e50ff89f5d0..69900257e71a 100755
--- a/drivers/media/dvb-core/dvb_frontend.c
+++ b/drivers/media/dvb-core/dvb_frontend.c
@@ -54,6 +54,8 @@ static int dvb_powerdown_on_sleep = 1;
 static int dvb_mfe_wait_time = 5;
 static int dvb_afc_debug=0;
 static int disable_set_frotend_param=0;
+static int dvb_dtv_debug=0;
+
 
 module_param_named(frontend_debug, dvb_frontend_debug, int, 0644);
 MODULE_PARM_DESC(frontend_debug, "Turn on/off frontend core debugging (default:off).");
@@ -71,9 +73,14 @@ module_param(dvb_afc_debug, int, 0644);
 MODULE_PARM_DESC( dvb_afc_debug,"vb_afc_debug \n");
 module_param(disable_set_frotend_param, int, 0644);
 MODULE_PARM_DESC( disable_set_frotend_param,"disable_set_frotend_param \n");
+module_param(dvb_dtv_debug, int, 0644);
+MODULE_PARM_DESC( dvb_dtv_debug,"vb_afc_debug \n");
+
 
 #define dprintk if (dvb_frontend_debug) printk
 #define pr_afc  if(dvb_afc_debug)printk
+#define dtvprintk  if(dvb_dtv_debug)printk
+
 
 #define FESTATE_IDLE 1
 #define FESTATE_RETUNE 2
@@ -253,7 +260,6 @@ static void dvb_frontend_add_event(struct dvb_frontend *fe, fe_status_t status)
 	e = &events->events[events->eventw];
 	e->status = status;
 	e->parameters = fepriv->parameters_out;
-	printk("[get frontend2] freq is %d\n",e->parameters.frequency);
 	events->eventw = wp;
 
 	mutex_unlock(&events->mtx);
@@ -295,7 +301,6 @@ static int dvb_frontend_get_event(struct dvb_frontend *fe,
 	mutex_lock(&events->mtx);
 	*event = events->events[events->eventr];
 	events->eventr = (events->eventr + 1) % MAX_EVENT;
-	printk("[get frontend1] freq is %d\n",event->parameters.frequency);
 	mutex_unlock(&events->mtx);
 
 	return 0;
@@ -1587,7 +1592,7 @@ static int dtv_property_legacy_params_sync(struct dvb_frontend *fe,
 
 	p->frequency = c->frequency;
 	p->inversion = c->inversion;
-	printk("[get frontend]p is %d\n",p->frequency);
+	dtvprintk("[get frontend]p is %d\n",p->frequency);
 	switch (dvbv3_type(c->delivery_system)) {
 	case DVBV3_UNKNOWN:
 		dev_err(fe->dvb->device,
-- 
2.19.0

