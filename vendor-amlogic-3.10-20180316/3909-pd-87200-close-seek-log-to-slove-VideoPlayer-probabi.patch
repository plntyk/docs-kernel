From 7b262607b0bb61ee60f1f2acd0000f792a8efe5d Mon Sep 17 00:00:00 2001
From: "gangfeng.xu" <gangfeng.xu@amlogic.com>
Date: Tue, 8 Apr 2014 18:29:30 +0800
Subject: [PATCH 3909/5965] pd #87200:close seek log to slove VideoPlayer
 probabilistic exit issue

---
 arch/arm/mach-meson8/vpu.c                |  2 +-
 drivers/amlogic/amports/amstream.c        |  6 +++---
 drivers/amlogic/amports/vdec.c            |  4 ++--
 drivers/amlogic/amports/vh264.c           | 14 +++++++-------
 drivers/amlogic/deinterlace/deinterlace.c | 10 +++++-----
 drivers/amlogic/vfm/vfm.c                 |  2 +-
 6 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/arch/arm/mach-meson8/vpu.c b/arch/arm/mach-meson8/vpu.c
index f177a75dc921..c8adf4e713cd 100755
--- a/arch/arm/mach-meson8/vpu.c
+++ b/arch/arm/mach-meson8/vpu.c
@@ -503,7 +503,7 @@ void switch_vpu_mem_pd_vmod(unsigned int vmod, int flag)
 	else {
 		printk("switch_vpu_mem_pd: unsupport vpu mod\n");
 	}
-	printk("switch_vpu_mem_pd: %s %s\n", vpu_mod_table[vpu_mod - VPU_MOD_START], ((flag > 0) ? "OFF" : "ON"));
+	//printk("switch_vpu_mem_pd: %s %s\n", vpu_mod_table[vpu_mod - VPU_MOD_START], ((flag > 0) ? "OFF" : "ON"));
 	spin_unlock_irqrestore(&vpu_mem_lock, flags);
 }
 //***********************************************//
diff --git a/drivers/amlogic/amports/amstream.c b/drivers/amlogic/amports/amstream.c
index fc8d93891802..dc1dba24db4f 100755
--- a/drivers/amlogic/amports/amstream.c
+++ b/drivers/amlogic/amports/amstream.c
@@ -341,13 +341,13 @@ static void amstream_change_vbufsize(stream_port_t *port,struct stream_buf_s *pv
         if (port->vformat == VFORMAT_H264_4K2K){				
             pvbuf->buf_size = pvbuf->default_buf_size;
 
-            printk(" amstream_change_vbufsize 4k2k bufsize[0x%x] defaultsize[0x%x]\n",bufs[BUF_TYPE_VIDEO].buf_size,pvbuf->default_buf_size);
+            //printk(" amstream_change_vbufsize 4k2k bufsize[0x%x] defaultsize[0x%x]\n",bufs[BUF_TYPE_VIDEO].buf_size,pvbuf->default_buf_size);
         }else if((pvbuf->default_buf_size > MAX_STREAMBUFFER_SIZE)&& (port->vformat != VFORMAT_H264_4K2K)) {
             pvbuf->buf_size = MAX_STREAMBUFFER_SIZE;
 
-            printk(" amstream_change_vbufsize MAX_STREAMBUFFER_SIZE-[0x%x] defaultsize-[0x%x] vformat-[%d]\n",bufs[BUF_TYPE_VIDEO].buf_size,pvbuf->default_buf_size,port->vformat);
+            //printk(" amstream_change_vbufsize MAX_STREAMBUFFER_SIZE-[0x%x] defaultsize-[0x%x] vformat-[%d]\n",bufs[BUF_TYPE_VIDEO].buf_size,pvbuf->default_buf_size,port->vformat);
         } else {
-            printk(" amstream_change_vbufsize bufsize[0x%x] defaultbufsize [0x%x] \n",bufs[BUF_TYPE_VIDEO].buf_size,pvbuf->default_buf_size);	
+            //printk(" amstream_change_vbufsize bufsize[0x%x] defaultbufsize [0x%x] \n",bufs[BUF_TYPE_VIDEO].buf_size,pvbuf->default_buf_size);	
         }
 
         reset_canuse_buferlevel(10000);
diff --git a/drivers/amlogic/amports/vdec.c b/drivers/amlogic/amports/vdec.c
index be958be6b42c..36b288e3f183 100755
--- a/drivers/amlogic/amports/vdec.c
+++ b/drivers/amlogic/amports/vdec.c
@@ -345,7 +345,7 @@ s32 vdec_init(vformat_t vf)
         return -ENOMEM;
     }
 
-    printk("vdec_device allocate %s\n", vdec_device_name[vf]);
+    //printk("vdec_device allocate %s\n", vdec_device_name[vf]);
     vdec_device = platform_device_alloc(vdec_device_name[vf], -1);
 
     if (!vdec_device) {
@@ -362,7 +362,7 @@ s32 vdec_init(vformat_t vf)
         goto error;
     }
 
-    printk("Adding platform device for video decoder\n");
+    //printk("Adding platform device for video decoder\n");
     r = platform_device_add(vdec_device);
 
     if (r) {
diff --git a/drivers/amlogic/amports/vh264.c b/drivers/amlogic/amports/vh264.c
index c7a22b757d08..bc727ae0ddb8 100755
--- a/drivers/amlogic/amports/vh264.c
+++ b/drivers/amlogic/amports/vh264.c
@@ -48,7 +48,7 @@
 #define MODULE_NAME "amvdec_h264"
 
 #define HANDLE_H264_IRQ
-#define DEBUG_PTS
+//#define DEBUG_PTS
 #define DROP_B_FRAME_FOR_1080P_50_60FPS
 
 #define RATE_MEASURE_NUM 8
@@ -709,10 +709,10 @@ static void vh264_set_params(void)
 
     if (aspect_ratio_info_present_flag) {
         if (aspect_ratio_idc == EXTEND_SAR) {
-            printk("v264dec: aspect_ratio_idc = EXTEND_SAR, aspect_ratio_info = 0x%x\n", aspect_ratio_info);
+            //printk("v264dec: aspect_ratio_idc = EXTEND_SAR, aspect_ratio_info = 0x%x\n", aspect_ratio_info);
             h264_ar = div_u64(256ULL * (aspect_ratio_info >> 16) * frame_height, (aspect_ratio_info & 0xffff) * frame_width);
         } else {
-            printk("v264dec: aspect_ratio_idc = %d\n", aspect_ratio_idc);
+            //printk("v264dec: aspect_ratio_idc = %d\n", aspect_ratio_idc);
 
             switch (aspect_ratio_idc) {
             case 1:
@@ -1389,7 +1389,7 @@ static void vh264_prot_init(void)
     }
 
 #if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
-    printk("vh264 meson8 prot init\n");
+    //printk("vh264 meson8 prot init\n");
     WRITE_VREG(MDEC_PIC_DC_THRESH, 0x404038aa);
 #endif
 }
@@ -1481,7 +1481,7 @@ static s32 vh264_init(void)
         return -ENOMEM;
     }
 
-    printk("\nvh264_init\n");
+    //printk("\nvh264_init\n");
     init_timer(&recycle_timer);
 
     stat |= STAT_TIMER_INIT;
@@ -1762,7 +1762,7 @@ static int amvdec_h264_probe(struct platform_device *pdev)
 {
     struct resource *mem;
     mutex_lock(&vh264_mutex);
-    printk("amvdec_h264 probe start.\n");
+    //printk("amvdec_h264 probe start.\n");
 
     if (!(mem = platform_get_resource(pdev, IORESOURCE_MEM, 0))) {
         printk("\namvdec_h264 memory resource undefined.\n");
@@ -1792,7 +1792,7 @@ static int amvdec_h264_probe(struct platform_device *pdev)
 
     atomic_set(&vh264_active, 1);
 
-    printk("amvdec_h264 probe end.\n");
+    //printk("amvdec_h264 probe end.\n");
     mutex_unlock(&vh264_mutex);
     return 0;
 }
diff --git a/drivers/amlogic/deinterlace/deinterlace.c b/drivers/amlogic/deinterlace/deinterlace.c
index 609301ff4865..40d7b74f92d1 100755
--- a/drivers/amlogic/deinterlace/deinterlace.c
+++ b/drivers/amlogic/deinterlace/deinterlace.c
@@ -2614,9 +2614,9 @@ static int di_init_buf(int width, int height, unsigned char prog_flag)
         }
     }
 
-    printk("%s: version %s, prog_proc_type %d, buf start 0x%x, size 0x%x, buf(w%d,h%d) cur num %d (available %d,  total %d) \n",
-        __func__, version_s, di_pre_stru.prog_proc_type, (unsigned int)di_mem_start,
-        (unsigned int)di_mem_size, width, canvas_height, local_buf_num_valid, local_buf_num_available, local_buf_num);
+//    printk("%s: version %s, prog_proc_type %d, buf start 0x%x, size 0x%x, buf(w%d,h%d) cur num %d (available %d,  total %d) \n",
+//        __func__, version_s, di_pre_stru.prog_proc_type, (unsigned int)di_mem_start,
+//        (unsigned int)di_mem_size, width, canvas_height, local_buf_num_valid, local_buf_num_available, local_buf_num);
 
     return 0;
 }
@@ -3897,11 +3897,11 @@ static unsigned char pre_de_buf_config(void)
             	di_pre_stru.di_chan2_buf_dup_p->pre_ref_count = 0;
                 di_pre_stru.di_chan2_buf_dup_p = NULL;
             }
-//#ifdef DI_DEBUG
+#ifdef DI_DEBUG
             printk("%s: source change: 0x%x/%d/%d/%d=>0x%x/%d/%d/%d\n", __func__,
                 di_pre_stru.cur_inp_type, di_pre_stru.cur_width, di_pre_stru.cur_height, di_pre_stru.cur_source_type,
                 di_buf->vframe->type, di_buf->vframe->width, di_buf->vframe->height, di_buf->vframe->source_type);
-//#endif
+#endif
             di_pre_stru.cur_width = di_buf->vframe->width;
             di_pre_stru.cur_height= di_buf->vframe->height;
             di_pre_stru.cur_prog_flag = is_progressive(di_buf->vframe);
diff --git a/drivers/amlogic/vfm/vfm.c b/drivers/amlogic/vfm/vfm.c
index 29157286b322..da492bb6f7ce 100755
--- a/drivers/amlogic/vfm/vfm.c
+++ b/drivers/amlogic/vfm/vfm.c
@@ -48,7 +48,7 @@ typedef struct{
 vfm_map_t* vfm_map[VFM_MAP_COUNT];
 static int vfm_map_num = 0;
 
-int vfm_debug_flag = 1;
+int vfm_debug_flag = 0; //1;
 
 void vf_update_active_map(void)
 {
-- 
2.19.0

