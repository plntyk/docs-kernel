From 582993a9d88e6621005d4596436677c809368443 Mon Sep 17 00:00:00 2001
From: Jerry Cao <jerry.cao@amlogic.com>
Date: Thu, 17 Apr 2014 14:51:22 -0700
Subject: [PATCH 3934/5965] Fix compilation warning when TrustZone is enabled.

This is squash commit of the following 2 commits:

	f4f1467bbccc30a8011607a26c0f1d52e92358ad
	13ad442c2b71818813d1d4b8773a4bc7d5e5b175
---
 arch/arm/mach-meson8/include/mach/meson-secure.h | 12 ++++++------
 arch/arm/mach-meson8/meson-secure.c              | 12 +++++++-----
 2 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-meson8/include/mach/meson-secure.h b/arch/arm/mach-meson8/include/mach/meson-secure.h
index fccb47290a4a..eace291edc14 100755
--- a/arch/arm/mach-meson8/include/mach/meson-secure.h
+++ b/arch/arm/mach-meson8/include/mach/meson-secure.h
@@ -48,8 +48,8 @@
 #define TRUSTZONE_MON_CORE_WR_STATUS1_INDEX     0x206
 #define TRUSTZONE_MON_CORE_BOOTADDR_INDEX       0x207
 #define TRUSTZONE_MON_CORE_DDR_INDEX            0x208
-#define TRUSTZONE_MON_CORE_RD_SOC_REV1				0x209
-#define TRUSTZONE_MON_CORE_RD_SOC_REV2				0x20A
+#define TRUSTZONE_MON_CORE_RD_SOC_REV1          0x209
+#define TRUSTZONE_MON_CORE_RD_SOC_REV2          0x20A
 
 #define TRUSTZONE_MON_SUSPNED_FIRMWARE          0x300
 #define TRUSTZONE_MON_SAVE_CPU_GIC              0x400
@@ -82,8 +82,8 @@ extern uint32_t meson_secure_reg_read(uint32_t addr);
 extern uint32_t meson_secure_reg_write(uint32_t addr, uint32_t val);
 extern u32 meson_read_socrev1(void);
 extern u32 meson_read_socrev2(void);
-extern uint32_t meson_secure_mem_size(vold);
-extern uint32_t meson_secure_mem_end(vold);
+extern uint32_t meson_secure_mem_size(void);
+extern uint32_t meson_secure_mem_end(void);
 
 // efuse HAL_API arg
 struct efuse_hal_api_arg{
@@ -109,8 +109,8 @@ struct memconfig_hal_api_arg{
 	unsigned int memconfigbuf_count;
 };
 #define MEMCONFIG_NUM	2
-extern int meson_trustzone_memconfig();
-extern unsigned int meson_trustzone_getmemsecure_size();
+extern int meson_trustzone_memconfig(void);
+extern unsigned int meson_trustzone_getmemsecure_size(void);
 extern int meson_trustzone_getmemconfig(unsigned char* name, unsigned int* startphyaddr, unsigned int* endphyaddr);
 
 #endif
diff --git a/arch/arm/mach-meson8/meson-secure.c b/arch/arm/mach-meson8/meson-secure.c
index ebc10774133f..23687aca94ca 100755
--- a/arch/arm/mach-meson8/meson-secure.c
+++ b/arch/arm/mach-meson8/meson-secure.c
@@ -35,7 +35,7 @@
 #endif
 #include <linux/sched.h>
 
-#define MESON_SECURE_DEBUG 1
+#define MESON_SECURE_DEBUG 0
 #ifdef MESON_SECURE_DEBUG
 #define TZDBG(fmt, args...) printk("meson-secure: " fmt, ## args);
 #else
@@ -67,7 +67,7 @@ int meson_secure_memblock(unsigned startaddr, unsigned endaddr, struct secure_me
 */
 
 struct memconfig memsecure[MEMCONFIG_NUM] = {0};
-int meson_trustzone_memconfig()
+int meson_trustzone_memconfig(void)
 {
 	int ret;
 	struct memconfig_hal_api_arg arg;
@@ -90,7 +90,7 @@ int meson_trustzone_memconfig()
 	return ret;
 }
 
-unsigned int meson_trustzone_getmemsecure_size()
+unsigned int meson_trustzone_getmemsecure_size(void)
 {
 	unsigned int size = 0;
 	int i;
@@ -164,6 +164,7 @@ uint32_t meson_secure_reg_read(uint32_t addr)
 
 	return ret;
 }
+EXPORT_SYMBOL(meson_secure_reg_read);
 
 uint32_t meson_secure_reg_write(uint32_t addr, uint32_t val)
 {
@@ -178,13 +179,14 @@ uint32_t meson_secure_reg_write(uint32_t addr, uint32_t val)
 
 	return ret;
 }
+EXPORT_SYMBOL(meson_secure_reg_write);
 
-uint32_t meson_secure_mem_size(vold)
+uint32_t meson_secure_mem_size(void)
 {
 	return MESON_TRUSTZONE_MEM_SIZE;
 }
 
-uint32_t meson_secure_mem_end(vold)
+uint32_t meson_secure_mem_end(void)
 {
 	return (MESON_TRUSTZONE_MEM_START + MESON_TRUSTZONE_MEM_SIZE);
 }
-- 
2.19.0

