From e11759350ba8d203b86c9f8f98fa7edf10e1ff39 Mon Sep 17 00:00:00 2001
From: "tao.zeng" <tao.zeng@amlogic.com>
Date: Fri, 18 Apr 2014 16:53:02 +0800
Subject: [PATCH 3937/5965] PD #83628: driver update for PMU3(AML1218)

1. enable RAMP control for dcdc regulator;
2. dump registers of audio part for debug;
---
 drivers/amlogic/power/aml_pmu/aml1218-rw.c   | 18 ++++++++----------
 drivers/amlogic/power/aml_pmu/aml1218-sply.c |  9 ++++++---
 2 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/drivers/amlogic/power/aml_pmu/aml1218-rw.c b/drivers/amlogic/power/aml_pmu/aml1218-rw.c
index 3cd370dd8830..86872b58ee14 100755
--- a/drivers/amlogic/power/aml_pmu/aml1218-rw.c
+++ b/drivers/amlogic/power/aml_pmu/aml1218-rw.c
@@ -344,17 +344,15 @@ int aml1218_set_dcdc_voltage(int dcdc, uint32_t voltage)
     }
     idx_to   = find_idx(start, voltage, step, range);
     idx_cur  = (val & 0x7e) >> 1;
-    while (idx_cur != idx_to) {
-        if (idx_cur < idx_to) {                                 // adjust to target voltage step by step
-            idx_cur++;    
-        } else {
-            idx_cur--;
-        }
-        val &= ~0x7e;
-        val |= (idx_cur << 1);
-        aml1218_write(addr, val);
-        udelay(50);                                             // atleast delay 100uS
+
+    step = idx_cur - idx_to;
+    if (step < 0) {
+        step = -step;
     }
+    val &= ~0x7e;
+    val |= (idx_to << 1);
+    aml1218_write(addr, val);
+    udelay(20 * step);
     dcdc_val[dcdc] = val;
     return 0;
 }
diff --git a/drivers/amlogic/power/aml_pmu/aml1218-sply.c b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
index 2e71497313c3..819d4fa22009 100755
--- a/drivers/amlogic/power/aml_pmu/aml1218-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
@@ -1025,10 +1025,13 @@ void aml1218_dump_all_register(void)
 {
     uint8_t val[16];
     int     i;
+    int     addr_table[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 
+                            17, 18, 19, 20, 21, 22, 23, 24, 34, 35, 36, 37};
+
     printk("[AML1218] DUMP ALL REGISTERS:\n");
-    for (i = 0; i < 24; i++) {
-        aml1218_reads(i*16, val, 16);
-        printk("0x%03x - %03x: ", i * 16, i * 16 + 15);
+    for (i = 0; i < ARRAY_SIZE(addr_table); i++) {
+        aml1218_reads(addr_table[i] * 16, val, 16);
+        printk("0x%03x - %03x: ", addr_table[i] * 16, addr_table[i] * 16 + 15);
         printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
         printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
         printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
-- 
2.19.0

