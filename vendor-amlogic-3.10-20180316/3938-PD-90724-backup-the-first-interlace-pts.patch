From e237b3d4c94358d50fe34e63c9c3a64024d784db Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Fri, 18 Apr 2014 17:20:23 +0800
Subject: [PATCH 3938/5965] PD #90724:backup the first interlace pts.

---
 drivers/amlogic/deinterlace/deinterlace.c | 24 ++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/drivers/amlogic/deinterlace/deinterlace.c b/drivers/amlogic/deinterlace/deinterlace.c
index 533b43c00f48..668988987e5a 100755
--- a/drivers/amlogic/deinterlace/deinterlace.c
+++ b/drivers/amlogic/deinterlace/deinterlace.c
@@ -177,7 +177,7 @@ static dev_t di_id;
 static struct class *di_class;
 
 #define INIT_FLAG_NOT_LOAD 0x80
-static char version_s[] = "2014-04-16a";
+static char version_s[] = "2014-04-18a";
 static unsigned char boot_init_flag=0;
 static int receiver_is_amvideo = 1;
 
@@ -3897,11 +3897,11 @@ static unsigned char pre_de_buf_config(void)
             	di_pre_stru.di_chan2_buf_dup_p->pre_ref_count = 0;
                 di_pre_stru.di_chan2_buf_dup_p = NULL;
             }
-#ifdef DI_DEBUG
+//#ifdef DI_DEBUG
             printk("%s: source change: 0x%x/%d/%d/%d=>0x%x/%d/%d/%d\n", __func__,
                 di_pre_stru.cur_inp_type, di_pre_stru.cur_width, di_pre_stru.cur_height, di_pre_stru.cur_source_type,
                 di_buf->vframe->type, di_buf->vframe->width, di_buf->vframe->height, di_buf->vframe->source_type);
-#endif
+//#endif
             di_pre_stru.cur_width = di_buf->vframe->width;
             di_pre_stru.cur_height= di_buf->vframe->height;
             di_pre_stru.cur_prog_flag = is_progressive(di_buf->vframe);
@@ -5353,7 +5353,9 @@ static void force_bob_vframe(di_buf_t* di_buf)
     di_buf->di_buf[0] = di_buf->di_buf_dup_p[0];
     di_buf->di_buf[1] = NULL;
     queue_out(di_buf->di_buf[0]);
-
+    if(frame_count == 0){
+        di_post_stru.start_pts = di_buf->vframe->pts;      
+    }
     di_lock_irqfiq_save(irq_flag2, fiq_flag);
     if((frame_count<start_frame_drop_count) ||
        (((di_buf->di_buf_dup_p[1]->vframe->type & VIDTYPE_TYPEMASK)==VIDTYPE_INTERLACE_TOP)
@@ -5367,6 +5369,11 @@ static void force_bob_vframe(di_buf_t* di_buf)
         recycle_vframe_type_post_print(di_buf, __func__, __LINE__);
 #endif
     } else {
+    	if(frame_count == start_frame_drop_count){ 
+            if((di_post_stru.start_pts != 0) && (di_buf->vframe->pts == 0))
+                di_buf->vframe->pts = di_post_stru.start_pts;
+            di_post_stru.start_pts = 0;
+        }
         queue_in(di_buf, QUEUE_POST_READY);
     }
     di_unlock_irqfiq_restore(irq_flag2, fiq_flag);
@@ -5524,7 +5531,9 @@ static int process_post_vframe(void)
                         di_buf->di_buf[0] = di_buf->di_buf_dup_p[0];
                         di_buf->di_buf[1] = NULL;
                         queue_out(di_buf->di_buf[0]);
-
+			if(frame_count == 0){
+                            di_post_stru.start_pts = di_buf->vframe->pts;      
+                    	}
                         di_lock_irqfiq_save(irq_flag2, fiq_flag);
                         if((frame_count<start_frame_drop_count)||
                             (di_buf->di_buf_dup_p[0]->throw_flag)||(di_buf->di_buf_dup_p[1]->throw_flag)||
@@ -5536,6 +5545,11 @@ static int process_post_vframe(void)
 #endif
                         }
                         else{
+			    if(frame_count == start_frame_drop_count){ 
+                                if((di_post_stru.start_pts != 0) && (di_buf->vframe->pts == 0))
+                                    di_buf->vframe->pts = di_post_stru.start_pts;
+                                di_post_stru.start_pts = 0;
+                            }
                             queue_in(di_buf, QUEUE_POST_READY);
                         }
                         frame_count++;
-- 
2.19.0

