From b6deb04f1a82006cb2076151153b22ff73c62714 Mon Sep 17 00:00:00 2001
From: "tao.zeng" <tao.zeng@amlogic.com>
Date: Tue, 22 Apr 2014 10:11:53 +0800
Subject: [PATCH 3940/5965] PD #83628: update PMU2/PMU3 driver

---
 drivers/amlogic/power/aml_pmu/aml1212-sply.c | 38 ++++++++++++++------
 drivers/amlogic/power/aml_pmu/aml1216-sply.c | 38 ++++++++++++++------
 drivers/amlogic/power/aml_pmu/aml1218-sply.c | 38 ++++++++++++++------
 drivers/amlogic/power/ricoh/rn5t618-sply.c   | 37 +++++++++++++------
 4 files changed, 110 insertions(+), 41 deletions(-)

diff --git a/drivers/amlogic/power/aml_pmu/aml1212-sply.c b/drivers/amlogic/power/aml_pmu/aml1212-sply.c
index 4527a14edfe8..3dcc4eb8a7bd 100755
--- a/drivers/amlogic/power/aml_pmu/aml1212-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1212-sply.c
@@ -1421,26 +1421,44 @@ static int aml1212_update_status(struct aml_charger *charger)
     return 0;
 }
 
-void dump_pmu_register(void)
+void dump_pmu_register(char *buf)
 {
     uint8_t val[16];
     int     i;
-    printk("[AML_PMU] DUMP ALL REGISTERS\n");
+    int     size = 0;
+
+    if (!buf) {
+        printk("[AML_PMU] DUMP ALL REGISTERS\n");
+        for (i = 0; i < 16; i++) {
+            aml_pmu_reads(i*16, val, 16);
+            printk("0x%02x - %02x: ", i * 16, i * 16 + 15);
+            printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
+            printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
+            printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
+            printk("%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
+        }
+        return 0;
+    }
+    
+    size += sprintf(buf + size, "%s", "[AML_PMU] DUMP ALL REGISTERS\n");
     for (i = 0; i < 16; i++) {
         aml_pmu_reads(i*16, val, 16);
-        printk("0x%02x - %02x: ", i * 16, i * 16 + 15);
-        printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
-        printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
-        printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
-        printk("%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
+        size += sprintf(buf + size, "0x%02x - %02x: ", i * 16, i * 16 + 15);
+        size += sprintf(buf + size, "%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
     }
+    return size;
 }
 EXPORT_SYMBOL_GPL(dump_pmu_register);
 
 static ssize_t dump_pmu_regs_show(struct device *dev, struct device_attribute *attr, char *buf)
 {
-    dump_pmu_register();
-    return sprintf(buf, "[AML_PMU] DUMP ALL REGISTERS OVER!\n"); 
+    int size;
+    size = dump_pmu_register(buf);
+    size += sprintf(buf, "%s", "[AML_PMU] DUMP ALL REGISTERS OVER!\n"); 
+    return size;
 }
 static ssize_t dump_pmu_regs_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
@@ -1896,7 +1914,7 @@ static int aml_pmu_battery_probe(struct platform_device *pdev)
     aml_pmu_set_gpio(1, 0);                                 // open LCD backlight, test
     aml_pmu_set_gpio(2, 0);                                 // open VCCx2, test
 
-    dump_pmu_register();
+    dump_pmu_register(NULL);
 #ifdef CONFIG_RESET_TO_SYSTEM
     pmu_reboot_nb.notifier_call = aml_pmu_reboot_notifier;
     ret = register_reboot_notifier(&pmu_reboot_nb);
diff --git a/drivers/amlogic/power/aml_pmu/aml1216-sply.c b/drivers/amlogic/power/aml_pmu/aml1216-sply.c
index 21153c37f179..de13245a38ff 100755
--- a/drivers/amlogic/power/aml_pmu/aml1216-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1216-sply.c
@@ -1022,25 +1022,43 @@ static ssize_t clear_rtc_mem_store(struct device *dev, struct device_attribute *
     return count; 
 }
 
-void aml1216_dump_all_register(void)
+int aml1216_dump_all_register(char *buf)
 {
     uint8_t val[16];
     int     i;
-    printk("[AML1216] DUMP ALL REGISTERS:\n");
+    int     size = 0;
+
+    if (!buf) {
+        printk("[AML1216] DUMP ALL REGISTERS:\n");
+        for (i = 0; i < 24; i++) {
+            aml1216_reads(i*16, val, 16);
+            printk("0x%03x - %03x: ", i * 16, i * 16 + 15);
+            printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
+            printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
+            printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
+            printk("%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
+        }
+        return 0;
+    }
+
+    size += sprintf(buf + size, "%s", "[AML1216] DUMP ALL REGISTERS:\n");
     for (i = 0; i < 24; i++) {
         aml1216_reads(i*16, val, 16);
-        printk("0x%03x - %03x: ", i * 16, i * 16 + 15);
-        printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
-        printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
-        printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
-        printk("%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
+        size += sprintf(buf + size, "0x%03x - %03x: ", i * 16, i * 16 + 15);
+        size += sprintf(buf + size, "%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
     }
+    return size;
 }
 
 static ssize_t dump_pmu_regs_show(struct device *dev, struct device_attribute *attr, char *buf)
 {
-    aml1216_dump_all_register();
-    return sprintf(buf, "[AML1216] DUMP ALL REGISTERS OVER!\n"); 
+    int size;
+    size = aml1216_dump_all_register(buf);
+    size += sprintf(buf + size, "%s", "[AML1216] DUMP ALL REGISTERS OVER!\n"); 
+    return size;
 }
 static ssize_t dump_pmu_regs_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
@@ -1525,7 +1543,7 @@ static int aml1216_battery_probe(struct platform_device *pdev)
         power_supply_changed(&supply->batt);                    // update battery status
     }
     
-    aml1216_dump_all_register();
+    aml1216_dump_all_register(NULL);
 	AML1216_DBG("call %s exit, ret:%d", __func__, ret);
     return ret;
 
diff --git a/drivers/amlogic/power/aml_pmu/aml1218-sply.c b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
index 819d4fa22009..f5e12451d1c3 100755
--- a/drivers/amlogic/power/aml_pmu/aml1218-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
@@ -1021,28 +1021,44 @@ static ssize_t clear_rtc_mem_store(struct device *dev, struct device_attribute *
     return count; 
 }
 
-void aml1218_dump_all_register(void)
+int aml1218_dump_all_register(char *buf)
 {
     uint8_t val[16];
-    int     i;
+    int     i, size = 0;
     int     addr_table[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 
                             17, 18, 19, 20, 21, 22, 23, 24, 34, 35, 36, 37};
 
-    printk("[AML1218] DUMP ALL REGISTERS:\n");
+    if (!buf) {
+        printk("[AML1218] DUMP ALL REGISTERS:\n");
+        for (i = 0; i < ARRAY_SIZE(addr_table); i++) {
+            aml1218_reads(addr_table[i] * 16, val, 16);
+            printk("0x%03x - %03x: ", addr_table[i] * 16, addr_table[i] * 16 + 15);
+            printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
+            printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
+            printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
+            printk("%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
+        }
+        return 0;
+    }
+
+    size += sprintf(buf + size, "%s", "[AML1218] DUMP ALL REGISTERS:\n");
     for (i = 0; i < ARRAY_SIZE(addr_table); i++) {
         aml1218_reads(addr_table[i] * 16, val, 16);
-        printk("0x%03x - %03x: ", addr_table[i] * 16, addr_table[i] * 16 + 15);
-        printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
-        printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
-        printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
-        printk("%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
+        size += sprintf(buf + size, "0x%03x - %03x: ", addr_table[i] * 16, addr_table[i] * 16 + 15);
+        size += sprintf(buf + size, "%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
     }
+    return size;
 }
 
 static ssize_t dump_pmu_regs_show(struct device *dev, struct device_attribute *attr, char *buf)
 {
-    aml1218_dump_all_register();
-    return sprintf(buf, "[AML1218] DUMP ALL REGISTERS OVER!\n"); 
+    int size;
+    size = aml1218_dump_all_register(buf);
+    size += sprintf(buf + size, "%s", "[AML1218] DUMP ALL REGISTERS OVER!\n"); 
+    return size;
 }
 static ssize_t dump_pmu_regs_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
@@ -1503,7 +1519,7 @@ static int aml1218_battery_probe(struct platform_device *pdev)
         power_supply_changed(&supply->batt);                    // update battery status
     }
     
-    aml1218_dump_all_register();
+    aml1218_dump_all_register(NULL);
 	AML1218_DBG("call %s exit, ret:%d", __func__, ret);
     return ret;
 
diff --git a/drivers/amlogic/power/ricoh/rn5t618-sply.c b/drivers/amlogic/power/ricoh/rn5t618-sply.c
index b74192b14783..85aa43d1df79 100755
--- a/drivers/amlogic/power/ricoh/rn5t618-sply.c
+++ b/drivers/amlogic/power/ricoh/rn5t618-sply.c
@@ -989,25 +989,42 @@ static ssize_t charge_timeout_store(struct device *dev, struct device_attribute
     return count; 
 }
 
-void rn5t618_dump_all_register(void)
+int rn5t618_dump_all_register(char *buf)
 {
     uint8_t val[16];
     int     i;
-    printk("[RN5T618] DUMP ALL REGISTERS:\n");
+    int     size = 0;
+
+    if (!buf) {
+        printk("[RN5T618] DUMP ALL REGISTERS:\n");
+        for (i = 0; i < 16; i++) {
+            rn5t618_reads(i*16, val, 16);
+            printk("0x%02x - %02x: ", i * 16, i * 16 + 15);
+            printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
+            printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
+            printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
+            printk("%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
+        }
+        return 0;
+    }
+    size += sprintf(buf + size, "%s", "[RN5T618] DUMP ALL REGISTERS:\n");
     for (i = 0; i < 16; i++) {
         rn5t618_reads(i*16, val, 16);
-        printk("0x%02x - %02x: ", i * 16, i * 16 + 15);
-        printk("%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
-        printk("%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
-        printk("%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
-        printk("%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
+        size += sprintf(buf + size, "0x%02x - %02x: ", i * 16, i * 16 + 15);
+        size += sprintf(buf + size, "%02x %02x %02x %02x ",   val[0],  val[1],  val[2],  val[3]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x   ", val[4],  val[5],  val[6],  val[7]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x ",   val[8],  val[9],  val[10], val[11]);
+        size += sprintf(buf + size, "%02x %02x %02x %02x\n",  val[12], val[13], val[14], val[15]);
     }
+    return size;
 }
 
 static ssize_t dump_pmu_regs_show(struct device *dev, struct device_attribute *attr, char *buf)
 {
-    rn5t618_dump_all_register();
-    return sprintf(buf, "[RN5T618] DUMP ALL REGISTERS OVER!\n"); 
+    int size;
+    size = rn5t618_dump_all_register(buf);
+    size += sprintf(buf + size, "%s", "[RN5T618] DUMP ALL REGISTERS OVER!\n"); 
+    return size;
 }
 static ssize_t dump_pmu_regs_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
@@ -1608,7 +1625,7 @@ static int rn5t618_battery_probe(struct platform_device *pdev)
     rn5t618_set_bits(0x0012, 0x40, 0x40);                       // enable watchdog
     rn5t618_feed_watchdog();
 #endif
-    rn5t618_dump_all_register();
+    rn5t618_dump_all_register(NULL);
 	RICOH_DBG("call %s exit, ret:%d", __func__, ret);
     return ret;
 
-- 
2.19.0

