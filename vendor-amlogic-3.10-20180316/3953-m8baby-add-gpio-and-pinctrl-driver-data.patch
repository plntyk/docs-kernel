From dfb6ed6ec05413ab4c9220a21dd620ecfbe3d223 Mon Sep 17 00:00:00 2001
From: xu xing <xing.xu@amlogic.com>
Date: Wed, 23 Apr 2014 18:54:12 +0800
Subject: [PATCH 3953/5965] m8baby: add gpio and pinctrl driver data

---
 arch/arm/boot/dts/amlogic/meson8b_skt.dtd |  45 +--
 arch/arm/mach-meson8b/gpio.c              | 434 ++++++++++++----------
 arch/arm/mach-meson8b/include/mach/gpio.h | 249 +++++++------
 arch/arm/mach-meson8b/pinctrl.c           | 110 +++---
 drivers/amlogic/pinctrl/pinctrl-amlogic.c |   2 +-
 5 files changed, 411 insertions(+), 429 deletions(-)
 mode change 100644 => 100755 arch/arm/mach-meson8b/gpio.c
 mode change 100644 => 100755 arch/arm/mach-meson8b/pinctrl.c

diff --git a/arch/arm/boot/dts/amlogic/meson8b_skt.dtd b/arch/arm/boot/dts/amlogic/meson8b_skt.dtd
index 56728ab34a7c..0bc6eaa4fffc 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_skt.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_skt.dtd
@@ -492,7 +492,6 @@ void root_func(){
 		reg = <0xc1108500 0x20>;
 		device_id = <1>;
 		pinctrl-names="default";
-		pinctrl-0=<&a_i2c_master>;
 		#address-cells = <1>;
 		#size-cells = <0>;
 		use_pio = <0>;
@@ -511,7 +510,6 @@ void root_func(){
 		reg = <0xc11087c0 0x20>;
 		device_id = <2>;
 		pinctrl-names="default";
-		pinctrl-0=<&b_i2c_master>;
 		#address-cells = <1>;
 		#size-cells = <0>;
 		use_pio = <0>;
@@ -1365,7 +1363,7 @@ void root_func(){
 //$$ MODULE="GPIO"
 //$$ DEVICE="m8-gpio"
 	gpio:gpio{
-		compatible = "amlogic,m8-gpio";
+		compatible = "amlogic,m8b-gpio";
 		dev_name = "gpio";
 		#gpio-cells=<2>;
 	};
@@ -1375,7 +1373,7 @@ void root_func(){
 //$$ MODULE="Pinmux"
 //$$ DEVICE="pinmux-m8"
     pinmux{ 
-		compatible = "amlogic,pinmux-m8";
+		compatible = "amlogic,pinmux-m8b";
 		dev_name = "pinmux";
 		#pinmux-cells=<2>;    
     
@@ -1608,45 +1606,6 @@ void root_func(){
 			amlogic,pins="GPIOAO_4","GPIOAO_5";
 		};
 		
-//$$ MATCH "I2C_A_pin_match" = "&a_i2c_master"
-//$$ L2 PROP_U32 2 = "amlogic,setmask"
-//$$ L2 PROP_U32 2 = "amlogic,clrmask"
-//$$ L2 PROP_STR 2 = "amlogic,pins"
-		a_i2c_master:a_i2c{
-//			amlogic,setmask=<5 0xc0000000>;
-//			amlogic,clrmask=<9 0x58000 7 3000000>;
-//			amlogic,pins="GPIOZ_0","GPIOZ_1";
-
-//			amlogic,setmask=<5 0x300>;
-//			amlogic,clrmask=<6 0x900 8 11000>;
-//			amlogic,pins="GPIOZ_9","GPIOZ_10";
-
-			amlogic,setmask=<5 0xc0>;
-			amlogic,clrmask=<6 0xc0 8 0xc000>;
-			amlogic,pins="GPIOZ_11","GPIOZ_12";
-		};
-		
-//$$ MATCH "I2C_B_pin_match" = "&b_i2c_master"
-//$$ L2 PROP_U32 2 = "amlogic,setmask"
-//$$ L2 PROP_STR 2 = "amlogic,pins"
-		b_i2c_master:b_i2c{
-			amlogic,setmask=<5 0xc000000>;
-			amlogic,pins="GPIOZ_2","GPIOZ_3";
-		};
-
-// MATCH "I2C_C_pin_match" = "&c_i2c_master"
-// L2 PROP_U32 2 = "amlogic,setmask"
-// L2 PROP_U32 2 = "amlogic,clrmask"
-// L2 PROP_STR 2 = "amlogic,pins"	
-//		c_i2c_master:c_i2c{
-//			amlogic,setmask=<5 0x3000000>;
-//			amlogic,clrmask=<6 0xc000>;
-//			amlogic,pins="GPIOZ_4","GPIOZ_5";
-
-//			amlogic,setmask=<1 0xc000>;
-//			amlogic,clrmask=<1 0xc0400 3 0x6 9 0x300>;
-//			amlogic,pins="GPIOY_0","GPIOY_1";
-//		};
 
 //$$ MATCH "I2C_D_pin_match" = "&d_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
diff --git a/arch/arm/mach-meson8b/gpio.c b/arch/arm/mach-meson8b/gpio.c
old mode 100644
new mode 100755
index 8128a8c8dc50..8f989f50e775
--- a/arch/arm/mach-meson8b/gpio.c
+++ b/arch/arm/mach-meson8b/gpio.c
@@ -33,11 +33,14 @@
 #include <linux/gpio.h>
 #include <linux/amlogic/aml_gpio_consumer.h>
 #include <linux/amlogic/gpio-amlogic.h>
+#define AO 10
 unsigned p_gpio_oen_addr[]={
 	P_PREG_PAD_GPIO0_EN_N,
 	P_PREG_PAD_GPIO1_EN_N,
 	P_PREG_PAD_GPIO2_EN_N,
 	P_PREG_PAD_GPIO3_EN_N,
+	P_PREG_PAD_GPIO4_EN_N,
+	P_PREG_PAD_GPIO5_EN_N,
 	P_AO_GPIO_O_EN_N,
 };
 static unsigned p_gpio_output_addr[]={
@@ -45,6 +48,8 @@ static unsigned p_gpio_output_addr[]={
 	P_PREG_PAD_GPIO1_O,
 	P_PREG_PAD_GPIO2_O,
 	P_PREG_PAD_GPIO3_O,
+	P_PREG_PAD_GPIO4_O,
+	P_PREG_PAD_GPIO5_O,
 	P_AO_GPIO_O_EN_N,
 };
 static unsigned p_gpio_input_addr[]={
@@ -52,9 +57,11 @@ static unsigned p_gpio_input_addr[]={
 	P_PREG_PAD_GPIO1_I,
 	P_PREG_PAD_GPIO2_I,
 	P_PREG_PAD_GPIO3_I,
+	P_PREG_PAD_GPIO4_I,
+	P_PREG_PAD_GPIO5_I,
 	P_AO_GPIO_I,
 };
-extern int m8_pin_to_pullup(unsigned int pin ,unsigned int *reg,unsigned int *bit,unsigned int *bit_en);
+extern int m8b_pin_to_pullup(unsigned int pin ,unsigned int *reg,unsigned int *bit,unsigned int *bit_en);
 
 extern struct amlogic_set_pullup pullup_ops;
 extern unsigned p_pull_up_addr[];
@@ -96,175 +103,163 @@ enum gpio_reg_type
 }
 
 #define P_PIN_MUX_REG(reg,bit) ((reg<<5)|bit)
-static unsigned int gpio_to_pin[][5]={
-	[GPIOAO_0]={P_PIN_MUX_REG(10,26),P_PIN_MUX_REG(10,12),NONE,NONE,NONE,},
-	[GPIOAO_1]={P_PIN_MUX_REG(10,25),P_PIN_MUX_REG(10,11),NONE,NONE,NONE,},
-	[GPIOAO_2]={P_PIN_MUX_REG(10,10),NONE,NONE,NONE,NONE,},
-	[GPIOAO_3]={P_PIN_MUX_REG(10,9),NONE,NONE,NONE,NONE,},
-	[GPIOAO_4]={P_PIN_MUX_REG(10,2),P_PIN_MUX_REG(10,24),P_PIN_MUX_REG(10,6),NONE,NONE,},
-	[GPIOAO_5]={P_PIN_MUX_REG(10,23),P_PIN_MUX_REG(10,5),P_PIN_MUX_REG(10,1),NONE,NONE,},
-	[GPIOAO_6]={P_PIN_MUX_REG(10,18),NONE,NONE,NONE,NONE,},
-	[GPIOAO_7]={P_PIN_MUX_REG(10,0),NONE,NONE,NONE,NONE,},
-	[GPIOAO_8]={P_PIN_MUX_REG(10,30),NONE,NONE,NONE,NONE,},
-	[GPIOAO_9]={P_PIN_MUX_REG(10,29),NONE,NONE,NONE,NONE,},
-	[GPIOAO_10]={P_PIN_MUX_REG(10,28),NONE,NONE,NONE,NONE,},
-	[GPIOAO_11]={P_PIN_MUX_REG(10,27),NONE,NONE,NONE,NONE,},
-	[GPIOAO_12]={P_PIN_MUX_REG(10,17),NONE,NONE,NONE,NONE,},
-	[GPIOAO_13]={P_PIN_MUX_REG(10,31),NONE,NONE,NONE,NONE,},
-	[GPIOZ_0]={P_PIN_MUX_REG(5,31),P_PIN_MUX_REG(9,18),P_PIN_MUX_REG(7,25),P_PIN_MUX_REG(9,16),NONE,},
-	[GPIOZ_1]={P_PIN_MUX_REG(9,15),P_PIN_MUX_REG(5,30),P_PIN_MUX_REG(7,24),NONE,NONE,},
-	[GPIOZ_2]={P_PIN_MUX_REG(5,27),NONE,NONE,NONE,NONE,},
-	[GPIOZ_3]={P_PIN_MUX_REG(5,26),NONE,NONE,NONE,NONE,},
-	[GPIOZ_4]={P_PIN_MUX_REG(5,25),P_PIN_MUX_REG(6,15),NONE,NONE,NONE,},
-	[GPIOZ_5]={P_PIN_MUX_REG(5,24),P_PIN_MUX_REG(6,14),NONE,NONE,NONE,},
-	[GPIOZ_6]={P_PIN_MUX_REG(6,13),P_PIN_MUX_REG(3,21),P_PIN_MUX_REG(3,21),NONE,NONE,},
-	[GPIOZ_7]={P_PIN_MUX_REG(6,12),P_PIN_MUX_REG(2,0),P_PIN_MUX_REG(7,23),NONE,NONE,},
-	[GPIOZ_8]={P_PIN_MUX_REG(2,1),P_PIN_MUX_REG(6,9),P_PIN_MUX_REG(6,10),P_PIN_MUX_REG(7,22),NONE,},
-	[GPIOZ_9]={P_PIN_MUX_REG(5,9),P_PIN_MUX_REG(6,11),P_PIN_MUX_REG(8,16),NONE,NONE,},
-	[GPIOZ_10]={P_PIN_MUX_REG(6,8),P_PIN_MUX_REG(5,8),P_PIN_MUX_REG(8,12),NONE,NONE,},
-	[GPIOZ_11]={P_PIN_MUX_REG(6,7),P_PIN_MUX_REG(8,15),P_PIN_MUX_REG(5,7),NONE,NONE,},
-	[GPIOZ_12]={P_PIN_MUX_REG(6,6),P_PIN_MUX_REG(5,6),P_PIN_MUX_REG(8,14),NONE,NONE,},
-	[GPIOZ_13]={P_PIN_MUX_REG(6,5),P_PIN_MUX_REG(8,13),NONE,NONE,NONE,},
-	[GPIOZ_14]={P_PIN_MUX_REG(9,17),P_PIN_MUX_REG(8,17),NONE,NONE,NONE,},
-	[GPIOH_0]={P_PIN_MUX_REG(1,26),NONE,NONE,NONE,NONE,},
-	[GPIOH_1]={P_PIN_MUX_REG(1,25),NONE,NONE,NONE,NONE,},
-	[GPIOH_2]={P_PIN_MUX_REG(1,24),NONE,NONE,NONE,NONE,},
-	[GPIOH_3]={P_PIN_MUX_REG(9,13),P_PIN_MUX_REG(1,23),NONE,NONE,NONE,},
-	[GPIOH_4]={P_PIN_MUX_REG(9,12),NONE,NONE,NONE,NONE,},
-	[GPIOH_5]={P_PIN_MUX_REG(9,11),NONE,NONE,NONE,NONE,},
-	[GPIOH_6]={P_PIN_MUX_REG(9,10),NONE,NONE,NONE,NONE,},
-	[GPIOH_7]={P_PIN_MUX_REG(4,3),NONE,NONE,NONE,NONE,},
-	[GPIOH_8]={P_PIN_MUX_REG(4,2),NONE,NONE,NONE,NONE,},
-	[GPIOH_9]={P_PIN_MUX_REG(4,1),P_PIN_MUX_REG(4,1),NONE,NONE,NONE,},
-	[BOOT_0]={P_PIN_MUX_REG(4,30),P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(6,29),NONE,NONE,},
-	[BOOT_1]={P_PIN_MUX_REG(4,29),P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(6,28),NONE,NONE,},
-	[BOOT_2]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(6,27),P_PIN_MUX_REG(4,29),NONE,NONE,},
-	[BOOT_3]={P_PIN_MUX_REG(4,29),P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(6,26),NONE,NONE,},
-	[BOOT_4]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,28),NONE,NONE,NONE,},
-	[BOOT_5]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,28),NONE,NONE,NONE,},
-	[BOOT_6]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,28),NONE,NONE,NONE,},
-	[BOOT_7]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,28),NONE,NONE,NONE,},
-	[BOOT_8]={P_PIN_MUX_REG(2,25),NONE,NONE,NONE,NONE,},
-	[BOOT_9]={P_PIN_MUX_REG(2,24),NONE,NONE,NONE,NONE,},
-	[BOOT_10]={P_PIN_MUX_REG(2,17),NONE,NONE,NONE,NONE,},
-	[BOOT_11]={P_PIN_MUX_REG(2,21),P_PIN_MUX_REG(5,1),NONE,NONE,NONE,},
-	[BOOT_12]={P_PIN_MUX_REG(2,20),P_PIN_MUX_REG(5,3),NONE,NONE,NONE,},
-	[BOOT_13]={P_PIN_MUX_REG(2,19),P_PIN_MUX_REG(5,2),NONE,NONE,NONE,},
-	[BOOT_14]={P_PIN_MUX_REG(2,18),NONE,NONE,NONE,NONE,},
-	[BOOT_15]={P_PIN_MUX_REG(2,27),NONE,NONE,NONE,NONE,},
-	[BOOT_16]={P_PIN_MUX_REG(6,25),P_PIN_MUX_REG(2,23),P_PIN_MUX_REG(4,27),NONE,NONE,},
-	[BOOT_17]={P_PIN_MUX_REG(2,22),P_PIN_MUX_REG(4,26),P_PIN_MUX_REG(6,24),NONE,NONE,},
-	[BOOT_18]={P_PIN_MUX_REG(5,0),NONE,NONE,NONE,NONE,},	
-	[CARD_0]={P_PIN_MUX_REG(2,14),P_PIN_MUX_REG(2,6),NONE,NONE,NONE,},
-	[CARD_1]={P_PIN_MUX_REG(2,7),P_PIN_MUX_REG(2,15),NONE,NONE,NONE,},
-	[CARD_2]={P_PIN_MUX_REG(2,11),P_PIN_MUX_REG(2,5),NONE,NONE,NONE,},
-	[CARD_3]={P_PIN_MUX_REG(2,4),P_PIN_MUX_REG(2,10),NONE,NONE,NONE,},
-	[CARD_4]={P_PIN_MUX_REG(2,6),P_PIN_MUX_REG(2,12),P_PIN_MUX_REG(8,10),NONE,NONE,},
-	[CARD_5]={P_PIN_MUX_REG(2,13),P_PIN_MUX_REG(8,9),P_PIN_MUX_REG(2,6),NONE,NONE,},
-	[CARD_6]={NONE,NONE,NONE,NONE,NONE,},
-	[GPIODV_0]={P_PIN_MUX_REG(8,27),P_PIN_MUX_REG(7,0),P_PIN_MUX_REG(0,1),P_PIN_MUX_REG(0,6),NONE,},
-	[GPIODV_1]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,1),P_PIN_MUX_REG(0,1),NONE,NONE,},
-	[GPIODV_2]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,2),P_PIN_MUX_REG(0,0),NONE,NONE,},
-	[GPIODV_3]={P_PIN_MUX_REG(0,0),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,3),NONE,NONE,},
-	[GPIODV_4]={P_PIN_MUX_REG(0,0),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,4),NONE,NONE,},
-	[GPIODV_5]={P_PIN_MUX_REG(7,5),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(0,0),NONE,NONE,},
-	[GPIODV_6]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,6),P_PIN_MUX_REG(0,0),NONE,NONE,},
-	[GPIODV_7]={P_PIN_MUX_REG(0,0),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,7),NONE,NONE,},
-	[GPIODV_8]={P_PIN_MUX_REG(8,26),P_PIN_MUX_REG(0,3),P_PIN_MUX_REG(7,8),P_PIN_MUX_REG(0,6),NONE,},
-	[GPIODV_9]={P_PIN_MUX_REG(7,28),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,9),P_PIN_MUX_REG(0,3),P_PIN_MUX_REG(3,24),},
-	[GPIODV_10]={P_PIN_MUX_REG(7,10),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(0,2),NONE,NONE,},
-	[GPIODV_11]={P_PIN_MUX_REG(7,11),P_PIN_MUX_REG(0,2),P_PIN_MUX_REG(0,6),NONE,NONE,},
-	[GPIODV_12]={P_PIN_MUX_REG(0,2),P_PIN_MUX_REG(7,12),P_PIN_MUX_REG(0,6),NONE,NONE,},
-	[GPIODV_13]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,13),P_PIN_MUX_REG(0,2),NONE,NONE,},
-	[GPIODV_14]={P_PIN_MUX_REG(7,14),P_PIN_MUX_REG(0,2),P_PIN_MUX_REG(0,6),NONE,NONE,},
-	[GPIODV_15]={P_PIN_MUX_REG(7,15),P_PIN_MUX_REG(0,2),P_PIN_MUX_REG(0,6),NONE,NONE,},
-	[GPIODV_16]={P_PIN_MUX_REG(0,5),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(8,25),P_PIN_MUX_REG(7,16),NONE,},
-	[GPIODV_17]={P_PIN_MUX_REG(7,17),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(0,5),NONE,NONE,},
-	[GPIODV_18]={P_PIN_MUX_REG(0,4),P_PIN_MUX_REG(0,6),NONE,NONE,NONE,},
-	[GPIODV_19]={P_PIN_MUX_REG(0,4),P_PIN_MUX_REG(0,6),NONE,NONE,NONE,},
-	[GPIODV_20]={P_PIN_MUX_REG(0,4),P_PIN_MUX_REG(0,6),NONE,NONE,NONE,},
-	[GPIODV_21]={P_PIN_MUX_REG(0,4),P_PIN_MUX_REG(0,6),NONE,NONE,NONE,},
-	[GPIODV_22]={P_PIN_MUX_REG(0,4),P_PIN_MUX_REG(0,6),NONE,NONE,NONE,},
-	[GPIODV_23]={P_PIN_MUX_REG(0,4),P_PIN_MUX_REG(0,6),NONE,NONE,NONE,},
-	[GPIODV_24]={P_PIN_MUX_REG(0,9),P_PIN_MUX_REG(0,19),P_PIN_MUX_REG(0,21),P_PIN_MUX_REG(6,23),P_PIN_MUX_REG(8,24),},
-	[GPIODV_25]={P_PIN_MUX_REG(6,22),P_PIN_MUX_REG(0,20),P_PIN_MUX_REG(0,8),P_PIN_MUX_REG(8,23),P_PIN_MUX_REG(0,18),},
-	[GPIODV_26]={P_PIN_MUX_REG(6,21),P_PIN_MUX_REG(8,21),P_PIN_MUX_REG(0,7),P_PIN_MUX_REG(8,22),P_PIN_MUX_REG(8,20),},
-	[GPIODV_27]={P_PIN_MUX_REG(0,10),P_PIN_MUX_REG(6,20),P_PIN_MUX_REG(8,28),P_PIN_MUX_REG(8,19),NONE,},
-	[GPIODV_28]={P_PIN_MUX_REG(7,27),P_PIN_MUX_REG(3,26),NONE,NONE,NONE,},
-	[GPIODV_29]={P_PIN_MUX_REG(7,26),P_PIN_MUX_REG(3,25),NONE,NONE,NONE,},
-	[GPIOY_0]={P_PIN_MUX_REG(1,19),P_PIN_MUX_REG(1,10),P_PIN_MUX_REG(3,2),P_PIN_MUX_REG(9,9),P_PIN_MUX_REG(1,15),},
-	[GPIOY_1]={P_PIN_MUX_REG(9,8),P_PIN_MUX_REG(3,1),P_PIN_MUX_REG(1,18),P_PIN_MUX_REG(1,14),P_PIN_MUX_REG(1,19),},
-	[GPIOY_2]={P_PIN_MUX_REG(3,18),P_PIN_MUX_REG(1,8),P_PIN_MUX_REG(1,17),NONE,NONE,},
-	[GPIOY_3]={P_PIN_MUX_REG(1,16),P_PIN_MUX_REG(1,7),NONE,NONE,NONE,},
-	[GPIOY_4]={P_PIN_MUX_REG(4,25),P_PIN_MUX_REG(3,3),P_PIN_MUX_REG(1,6),NONE,NONE,},
-	[GPIOY_5]={P_PIN_MUX_REG(4,24),P_PIN_MUX_REG(3,15),P_PIN_MUX_REG(1,5),P_PIN_MUX_REG(9,7),NONE,},
-	[GPIOY_6]={P_PIN_MUX_REG(4,23),P_PIN_MUX_REG(3,16),P_PIN_MUX_REG(1,3),P_PIN_MUX_REG(1,4),P_PIN_MUX_REG(9,6),},
-	[GPIOY_7]={P_PIN_MUX_REG(4,22),P_PIN_MUX_REG(1,2),P_PIN_MUX_REG(9,5),P_PIN_MUX_REG(1,1),P_PIN_MUX_REG(3,17),},
-	[GPIOY_8]={P_PIN_MUX_REG(3,0),P_PIN_MUX_REG(1,0),P_PIN_MUX_REG(9,4),NONE,NONE,},
-	[GPIOY_9]={P_PIN_MUX_REG(1,11),P_PIN_MUX_REG(9,3),P_PIN_MUX_REG(3,4),NONE,NONE,},
-	[GPIOY_10]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(9,3),NONE,NONE,NONE,},
-	[GPIOY_11]={P_PIN_MUX_REG(9,3),P_PIN_MUX_REG(3,5),NONE,NONE,NONE,},
-	[GPIOY_12]={P_PIN_MUX_REG(9,3),P_PIN_MUX_REG(3,5),NONE,NONE,NONE,},
-	[GPIOY_13]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(9,3),NONE,NONE,NONE,},
-	[GPIOY_14]={P_PIN_MUX_REG(9,2),P_PIN_MUX_REG(3,5),NONE,NONE,NONE,},
-	[GPIOY_15]={P_PIN_MUX_REG(9,1),P_PIN_MUX_REG(3,5),NONE,NONE,NONE,},
-	[GPIOY_16]={P_PIN_MUX_REG(9,0),P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(9,14),P_PIN_MUX_REG(7,29),NONE,},
-	[GPIOX_0]={P_PIN_MUX_REG(8,5),P_PIN_MUX_REG(5,14),NONE,NONE,NONE,},
-	[GPIOX_1]={P_PIN_MUX_REG(5,13),P_PIN_MUX_REG(8,4),NONE,NONE,NONE,},
-	[GPIOX_2]={P_PIN_MUX_REG(8,3),P_PIN_MUX_REG(5,13),NONE,NONE,NONE,},
-	[GPIOX_3]={P_PIN_MUX_REG(8,2),P_PIN_MUX_REG(5,13),NONE,NONE,NONE,},
-	[GPIOX_4]={P_PIN_MUX_REG(5,12),P_PIN_MUX_REG(3,30),P_PIN_MUX_REG(4,17),NONE,NONE,},
-	[GPIOX_5]={P_PIN_MUX_REG(3,29),P_PIN_MUX_REG(5,12),P_PIN_MUX_REG(4,16),NONE,NONE,},
-	[GPIOX_6]={P_PIN_MUX_REG(5,12),P_PIN_MUX_REG(4,15),P_PIN_MUX_REG(3,28),NONE,NONE,},
-	[GPIOX_7]={P_PIN_MUX_REG(5,12),P_PIN_MUX_REG(4,14),P_PIN_MUX_REG(3,27),NONE,NONE,},
-	[GPIOX_8]={P_PIN_MUX_REG(8,1),P_PIN_MUX_REG(5,11),NONE,NONE,NONE,},
-	[GPIOX_9]={P_PIN_MUX_REG(5,10),P_PIN_MUX_REG(8,0),NONE,NONE,NONE,},
-	[GPIOX_10]={P_PIN_MUX_REG(7,31),P_PIN_MUX_REG(3,22),P_PIN_MUX_REG(9,19),NONE,NONE,},
-	[GPIOX_11]={P_PIN_MUX_REG(3,14),P_PIN_MUX_REG(7,30),P_PIN_MUX_REG(2,3),P_PIN_MUX_REG(3,23),P_PIN_MUX_REG(3,23),},
-	[GPIOX_12]={P_PIN_MUX_REG(3,13),P_PIN_MUX_REG(4,13),NONE,NONE,NONE,},
-	[GPIOX_13]={P_PIN_MUX_REG(4,12),P_PIN_MUX_REG(3,12),NONE,NONE,NONE,},
-	[GPIOX_14]={P_PIN_MUX_REG(3,12),P_PIN_MUX_REG(4,11),NONE,NONE,NONE,},
-	[GPIOX_15]={P_PIN_MUX_REG(3,12),P_PIN_MUX_REG(4,10),NONE,NONE,NONE,},
-	[GPIOX_16]={P_PIN_MUX_REG(4,9),P_PIN_MUX_REG(4,21),P_PIN_MUX_REG(3,12),P_PIN_MUX_REG(4,5),NONE,},
-	[GPIOX_17]={P_PIN_MUX_REG(3,12),P_PIN_MUX_REG(4,8),P_PIN_MUX_REG(4,4),P_PIN_MUX_REG(4,20),NONE,},
-	[GPIOX_18]={P_PIN_MUX_REG(4,7),P_PIN_MUX_REG(4,19),P_PIN_MUX_REG(3,12),NONE,NONE,},
-	[GPIOX_19]={P_PIN_MUX_REG(4,18),P_PIN_MUX_REG(4,6),P_PIN_MUX_REG(3,12),NONE,NONE,},
-	[GPIOX_20]={NONE,NONE,NONE,NONE,NONE,},
-	[GPIOX_21]={NONE,NONE,NONE,NONE,NONE,},
-	[GPIO_BSD_EN]={NONE,NONE,NONE,NONE,NONE,},
-	[GPIO_TEST_N]={P_PIN_MUX_REG(9,19),NONE,NONE,NONE,NONE,},
+static unsigned int gpio_to_pin[][6]={
+	[GPIOX_0]={P_PIN_MUX_REG(8,5),P_PIN_MUX_REG(5,14),P_PIN_MUX_REG(9,24),NONE,NONE,NONE,},
+	[GPIOX_1]={P_PIN_MUX_REG(8,4),P_PIN_MUX_REG(5,13),P_PIN_MUX_REG(9,23),NONE,NONE,NONE,},
+	[GPIOX_2]={P_PIN_MUX_REG(8,3),P_PIN_MUX_REG(5,13),P_PIN_MUX_REG(9,22),NONE,NONE,NONE,},
+	[GPIOX_3]={P_PIN_MUX_REG(8,2),P_PIN_MUX_REG(5,13),P_PIN_MUX_REG(9,21),NONE,NONE,NONE,},
+	[GPIOX_4]={P_PIN_MUX_REG(5,29),P_PIN_MUX_REG(5,12),P_PIN_MUX_REG(3,30),P_PIN_MUX_REG(4,17),NONE,NONE,},
+	[GPIOX_5]={P_PIN_MUX_REG(5,28),P_PIN_MUX_REG(5,12),P_PIN_MUX_REG(3,29),P_PIN_MUX_REG(4,16),NONE,NONE,},
+	[GPIOX_6]={P_PIN_MUX_REG(5,28),P_PIN_MUX_REG(5,12),P_PIN_MUX_REG(3,28),P_PIN_MUX_REG(4,15),P_PIN_MUX_REG(5,9),NONE,},
+	[GPIOX_7]={P_PIN_MUX_REG(5,28),P_PIN_MUX_REG(5,12),P_PIN_MUX_REG(3,27),P_PIN_MUX_REG(4,14),P_PIN_MUX_REG(5,8),NONE,},
+	[GPIOX_8]={P_PIN_MUX_REG(8,1),P_PIN_MUX_REG(5,11),P_PIN_MUX_REG(6,19),P_PIN_MUX_REG(4,22),P_PIN_MUX_REG(3,6),NONE,},
+	[GPIOX_9]={P_PIN_MUX_REG(8,0),P_PIN_MUX_REG(5,10),P_PIN_MUX_REG(6,18),P_PIN_MUX_REG(4,24),P_PIN_MUX_REG(3,7),NONE,},
+	[GPIOX_10]={P_PIN_MUX_REG(3,22),P_PIN_MUX_REG(7,31),P_PIN_MUX_REG(9,19),P_PIN_MUX_REG(6,17),P_PIN_MUX_REG(4,23),P_PIN_MUX_REG(3,8),},
+	[GPIOX_11]={P_PIN_MUX_REG(3,20),P_PIN_MUX_REG(7,30),P_PIN_MUX_REG(3,14),P_PIN_MUX_REG(2,3),NONE,NONE,},
+	[GPIOX_12]={P_PIN_MUX_REG(4,13),P_PIN_MUX_REG(3,13),NONE,NONE,NONE,NONE,},
+	[GPIOX_13]={P_PIN_MUX_REG(4,12),P_PIN_MUX_REG(3,12),NONE,NONE,NONE,NONE,},
+	[GPIOX_14]={P_PIN_MUX_REG(4,11),P_PIN_MUX_REG(3,12),NONE,NONE,NONE,NONE,},
+	[GPIOX_15]={P_PIN_MUX_REG(4,10),P_PIN_MUX_REG(3,12),NONE,NONE,NONE,NONE,},
+	[GPIOX_16]={P_PIN_MUX_REG(4,9),P_PIN_MUX_REG(3,12),P_PIN_MUX_REG(4,21),P_PIN_MUX_REG(4,5),NONE,NONE,},
+	[GPIOX_17]={P_PIN_MUX_REG(4,8),P_PIN_MUX_REG(3,12),P_PIN_MUX_REG(4,20),P_PIN_MUX_REG(4,4),NONE,NONE,},
+	[GPIOX_18]={P_PIN_MUX_REG(4,7),P_PIN_MUX_REG(3,12),P_PIN_MUX_REG(4,19),NONE,NONE,NONE,},
+	[GPIOX_19]={P_PIN_MUX_REG(4,6),P_PIN_MUX_REG(3,12),P_PIN_MUX_REG(4,18),NONE,NONE,NONE,},
+	[GPIOX_20]={P_PIN_MUX_REG(6,16),P_PIN_MUX_REG(4,25),P_PIN_MUX_REG(3,9),NONE,NONE,NONE,},
+	[GPIOX_21]={NONE,NONE,NONE,NONE,NONE,NONE,},
+	[GPIOY_0]={P_PIN_MUX_REG(3,2),P_PIN_MUX_REG(9,9),NONE,NONE,NONE,NONE,},
+	[GPIOY_1]={P_PIN_MUX_REG(3,1),P_PIN_MUX_REG(9,8),NONE,NONE,NONE,NONE,},
+	[GPIOY_2]={P_PIN_MUX_REG(1,17),P_PIN_MUX_REG(1,8),P_PIN_MUX_REG(1,9),NONE,NONE,NONE,},
+	[GPIOY_3]={P_PIN_MUX_REG(1,16),P_PIN_MUX_REG(1,7),P_PIN_MUX_REG(3,18),NONE,NONE,NONE,},
+	[GPIOY_4]={P_PIN_MUX_REG(1,19),P_PIN_MUX_REG(1,10),P_PIN_MUX_REG(3,3),NONE,NONE,NONE,},
+	[GPIOY_5]={P_PIN_MUX_REG(1,18),P_PIN_MUX_REG(1,5),P_PIN_MUX_REG(1,11),NONE,NONE,NONE,},
+	[GPIOY_6]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(9,6),NONE,NONE,NONE,NONE,},
+	[GPIOY_7]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(9,5),NONE,NONE,NONE,NONE,},
+	[GPIOY_8]={P_PIN_MUX_REG(3,0),P_PIN_MUX_REG(9,4),NONE,NONE,NONE,NONE,},
+	[GPIOY_9]={P_PIN_MUX_REG(3,4),P_PIN_MUX_REG(9,3),NONE,NONE,NONE,NONE,},
+	[GPIOY_10]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(9,3),NONE,NONE,NONE,NONE,},
+	[GPIOY_11]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(9,3),NONE,NONE,NONE,NONE,},
+	[GPIOY_12]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(9,3),NONE,NONE,NONE,NONE,},
+	[GPIOY_13]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(5,7),P_PIN_MUX_REG(9,3),NONE,NONE,NONE,},
+	[GPIOY_14]={P_PIN_MUX_REG(3,5),P_PIN_MUX_REG(5,6),P_PIN_MUX_REG(9,2),NONE,NONE,NONE,},
+	[GPIOY_15]={P_PIN_MUX_REG(9,15),NONE,NONE,NONE,NONE,NONE,},
+	[GPIOY_16]={P_PIN_MUX_REG(9,14),P_PIN_MUX_REG(7,29),NONE,NONE,NONE,NONE,},
+	[GPIODV_0]={P_PIN_MUX_REG(0,1),P_PIN_MUX_REG(8,27),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,0),NONE,NONE,},
+	[GPIODV_1]={P_PIN_MUX_REG(0,1),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,1),NONE,NONE,NONE,},
+	[GPIODV_2]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,2),NONE,NONE,NONE,NONE,},
+	[GPIODV_3]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,3),NONE,NONE,NONE,NONE,},
+	[GPIODV_4]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,4),NONE,NONE,NONE,NONE,},
+	[GPIODV_5]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,5),NONE,NONE,NONE,NONE,},
+	[GPIODV_6]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,6),NONE,NONE,NONE,NONE,},
+	[GPIODV_7]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,7),NONE,NONE,NONE,NONE,},
+	[GPIODV_8]={P_PIN_MUX_REG(0,3),P_PIN_MUX_REG(8,26),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,8),NONE,NONE,},
+	[GPIODV_9]={P_PIN_MUX_REG(0,3),P_PIN_MUX_REG(7,28),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,9),P_PIN_MUX_REG(3,24),NONE,},
+	[GPIODV_10]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,10),NONE,NONE,NONE,NONE,},
+	[GPIODV_11]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,11),NONE,NONE,NONE,NONE,},
+	[GPIODV_12]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,12),NONE,NONE,NONE,NONE,},
+	[GPIODV_13]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,13),NONE,NONE,NONE,NONE,},
+	[GPIODV_14]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,14),NONE,NONE,NONE,NONE,},
+	[GPIODV_15]={P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,15),NONE,NONE,NONE,NONE,},
+	[GPIODV_16]={P_PIN_MUX_REG(0,5),P_PIN_MUX_REG(8,25),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,16),NONE,NONE,},
+	[GPIODV_17]={P_PIN_MUX_REG(0,5),P_PIN_MUX_REG(0,6),P_PIN_MUX_REG(7,17),NONE,NONE,NONE,},
+	[GPIODV_18]={P_PIN_MUX_REG(0,6),NONE,NONE,NONE,NONE,NONE,},
+	[GPIODV_19]={P_PIN_MUX_REG(0,6),NONE,NONE,NONE,NONE,NONE,},
+	[GPIODV_20]={P_PIN_MUX_REG(0,6),NONE,NONE,NONE,NONE,NONE,},
+	[GPIODV_21]={P_PIN_MUX_REG(0,6),NONE,NONE,NONE,NONE,NONE,},
+	[GPIODV_22]={P_PIN_MUX_REG(0,6),NONE,NONE,NONE,NONE,NONE,},
+	[GPIODV_23]={P_PIN_MUX_REG(0,6),NONE,NONE,NONE,NONE,NONE,},
+	[GPIODV_24]={P_PIN_MUX_REG(0,19),P_PIN_MUX_REG(0,21),P_PIN_MUX_REG(8,24),P_PIN_MUX_REG(0,9),P_PIN_MUX_REG(6,23),P_PIN_MUX_REG(9,31),},
+	[GPIODV_25]={P_PIN_MUX_REG(0,18),P_PIN_MUX_REG(0,20),P_PIN_MUX_REG(8,23),P_PIN_MUX_REG(0,8),P_PIN_MUX_REG(6,22),P_PIN_MUX_REG(9,30),},
+	[GPIODV_26]={P_PIN_MUX_REG(8,22),P_PIN_MUX_REG(8,21),P_PIN_MUX_REG(8,20),P_PIN_MUX_REG(0,7),P_PIN_MUX_REG(6,21),P_PIN_MUX_REG(9,29),},
+	[GPIODV_27]={P_PIN_MUX_REG(8,19),P_PIN_MUX_REG(8,28),P_PIN_MUX_REG(0,10),P_PIN_MUX_REG(6,20),P_PIN_MUX_REG(9,28),NONE,},
+	[GPIODV_28]={P_PIN_MUX_REG(3,26),P_PIN_MUX_REG(7,27),P_PIN_MUX_REG(9,27),NONE,NONE,NONE,},
+	[GPIODV_29]={P_PIN_MUX_REG(3,25),P_PIN_MUX_REG(7,26),P_PIN_MUX_REG(7,25),P_PIN_MUX_REG(9,26),NONE,NONE,},
+	[CARD_0]={P_PIN_MUX_REG(2,14),P_PIN_MUX_REG(2,6),NONE,NONE,NONE,NONE,},
+	[CARD_1]={P_PIN_MUX_REG(2,15),P_PIN_MUX_REG(2,7),NONE,NONE,NONE,NONE,},
+	[CARD_2]={P_PIN_MUX_REG(2,11),P_PIN_MUX_REG(2,5),NONE,NONE,NONE,NONE,},
+	[CARD_3]={P_PIN_MUX_REG(2,10),P_PIN_MUX_REG(2,4),NONE,NONE,NONE,NONE,},
+	[CARD_4]={P_PIN_MUX_REG(2,12),P_PIN_MUX_REG(2,6),P_PIN_MUX_REG(8,10),P_PIN_MUX_REG(8,8),NONE,NONE,},
+	[CARD_5]={P_PIN_MUX_REG(2,13),P_PIN_MUX_REG(2,6),P_PIN_MUX_REG(8,9),P_PIN_MUX_REG(8,7),NONE,NONE,},
+	[CARD_6]={NONE,NONE,NONE,NONE,NONE,NONE,},
+	[BOOT_0]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,30),P_PIN_MUX_REG(6,29),NONE,NONE,NONE,},
+	[BOOT_1]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,29),P_PIN_MUX_REG(6,28),NONE,NONE,NONE,},
+	[BOOT_2]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,29),P_PIN_MUX_REG(6,27),NONE,NONE,NONE,},
+	[BOOT_3]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,29),P_PIN_MUX_REG(6,26),NONE,NONE,NONE,},
+	[BOOT_4]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,28),NONE,NONE,NONE,NONE,},
+	[BOOT_5]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,28),NONE,NONE,NONE,NONE,},
+	[BOOT_6]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,28),NONE,NONE,NONE,NONE,},
+	[BOOT_7]={P_PIN_MUX_REG(2,26),P_PIN_MUX_REG(4,28),NONE,NONE,NONE,NONE,},
+	[BOOT_8]={P_PIN_MUX_REG(2,25),P_PIN_MUX_REG(7,19),P_PIN_MUX_REG(6,31),NONE,NONE,NONE,},
+	[BOOT_9]={P_PIN_MUX_REG(2,24),NONE,NONE,NONE,NONE,NONE,},
+	[BOOT_10]={P_PIN_MUX_REG(2,17),P_PIN_MUX_REG(7,18),P_PIN_MUX_REG(6,30),NONE,NONE,NONE,},
+	[BOOT_11]={P_PIN_MUX_REG(2,21),P_PIN_MUX_REG(5,1),NONE,NONE,NONE,NONE,},
+	[BOOT_12]={P_PIN_MUX_REG(2,20),P_PIN_MUX_REG(5,3),NONE,NONE,NONE,NONE,},
+	[BOOT_13]={P_PIN_MUX_REG(2,19),P_PIN_MUX_REG(5,2),NONE,NONE,NONE,NONE,},
+	[BOOT_14]={P_PIN_MUX_REG(2,18),NONE,NONE,NONE,NONE,NONE,},
+	[BOOT_15]={P_PIN_MUX_REG(2,27),NONE,NONE,NONE,NONE,NONE,},
+	[BOOT_16]={P_PIN_MUX_REG(2,23),P_PIN_MUX_REG(4,27),P_PIN_MUX_REG(6,25),NONE,NONE,NONE,},
+	[BOOT_17]={P_PIN_MUX_REG(2,22),P_PIN_MUX_REG(4,26),P_PIN_MUX_REG(6,24),NONE,NONE,NONE,},
+	[BOOT_18]={P_PIN_MUX_REG(2,28),P_PIN_MUX_REG(5,0),NONE,NONE,NONE,NONE,},
+	[GPIOH_0]={P_PIN_MUX_REG(1,26),P_PIN_MUX_REG(8,11),P_PIN_MUX_REG(1,4),NONE,NONE,NONE,},
+	[GPIOH_1]={P_PIN_MUX_REG(1,25),P_PIN_MUX_REG(8,12),P_PIN_MUX_REG(1,3),P_PIN_MUX_REG(1,2),NONE,NONE,},
+	[GPIOH_2]={P_PIN_MUX_REG(1,24),P_PIN_MUX_REG(1,1),NONE,NONE,NONE,NONE,},
+	[GPIOH_3]={P_PIN_MUX_REG(1,23),P_PIN_MUX_REG(9,13),P_PIN_MUX_REG(1,0),P_PIN_MUX_REG(5,27),NONE,NONE,},
+	[GPIOH_4]={P_PIN_MUX_REG(9,12),P_PIN_MUX_REG(8,18),P_PIN_MUX_REG(5,26),NONE,NONE,NONE,},
+	[GPIOH_5]={P_PIN_MUX_REG(7,21),P_PIN_MUX_REG(9,11),P_PIN_MUX_REG(8,18),P_PIN_MUX_REG(5,25),P_PIN_MUX_REG(6,15),NONE,},
+	[GPIOH_6]={P_PIN_MUX_REG(7,20),P_PIN_MUX_REG(9,10),P_PIN_MUX_REG(8,17),P_PIN_MUX_REG(5,24),P_PIN_MUX_REG(6,14),NONE,},
+	[GPIOH_7]={P_PIN_MUX_REG(8,17),P_PIN_MUX_REG(4,3),P_PIN_MUX_REG(6,13),NONE,NONE,NONE,},
+	[GPIOH_8]={P_PIN_MUX_REG(8,16),P_PIN_MUX_REG(4,2),P_PIN_MUX_REG(6,12),NONE,NONE,NONE,},
+	[GPIOH_9]={P_PIN_MUX_REG(4,1),P_PIN_MUX_REG(8,16),P_PIN_MUX_REG(6,11),NONE,NONE,NONE,},
+	[GPIOAO_0]={P_PIN_MUX_REG(AO,12),P_PIN_MUX_REG(AO,26),NONE,NONE,NONE,NONE,},
+	[GPIOAO_1]={P_PIN_MUX_REG(AO,11),P_PIN_MUX_REG(AO,25),NONE,NONE,NONE,NONE,},
+	[GPIOAO_2]={P_PIN_MUX_REG(AO,10),P_PIN_MUX_REG(AO,8),NONE,NONE,NONE,NONE,},
+	[GPIOAO_3]={P_PIN_MUX_REG(AO,9),P_PIN_MUX_REG(AO,22),P_PIN_MUX_REG(AO,7),NONE,NONE,NONE,},
+	[GPIOAO_4]={P_PIN_MUX_REG(AO,6),P_PIN_MUX_REG(AO,2),P_PIN_MUX_REG(AO,24),NONE,NONE,NONE,},
+	[GPIOAO_5]={P_PIN_MUX_REG(AO,5),P_PIN_MUX_REG(AO,1),P_PIN_MUX_REG(AO,23),NONE,NONE,NONE,},
+	[GPIOAO_6]={P_PIN_MUX_REG(AO,18),P_PIN_MUX_REG(AO,16),P_PIN_MUX_REG(1,13),NONE,NONE,NONE,},
+	[GPIOAO_7]={P_PIN_MUX_REG(AO,0),P_PIN_MUX_REG(AO,21),NONE,NONE,NONE,NONE,},
+	[GPIOAO_8]={P_PIN_MUX_REG(AO,30),NONE,NONE,NONE,NONE,NONE,},
+	[GPIOAO_9]={P_PIN_MUX_REG(AO,29),P_PIN_MUX_REG(1,15),NONE,NONE,NONE,NONE,},
+	[GPIOAO_10]={P_PIN_MUX_REG(AO,28),P_PIN_MUX_REG(1,14),NONE,NONE,NONE,NONE,},
+	[GPIOAO_11]={P_PIN_MUX_REG(AO,27),NONE,NONE,NONE,NONE,NONE,},
+	[GPIOAO_12]={P_PIN_MUX_REG(AO,17),NONE,NONE,NONE,NONE,NONE,},
+	[GPIOAO_13]={P_PIN_MUX_REG(AO,31),P_PIN_MUX_REG(AO,19),NONE,NONE,NONE,NONE,},
+	[DIF_TTL_0_P]={P_PIN_MUX_REG(0,24),P_PIN_MUX_REG(6,0),NONE,NONE,NONE,NONE,},
+	[DIF_TTL_0_N]={P_PIN_MUX_REG(0,24),P_PIN_MUX_REG(6,1),NONE,NONE,NONE,NONE,},
+	[DIF_TTL_1_P]={P_PIN_MUX_REG(0,24),P_PIN_MUX_REG(6,2),NONE,NONE,NONE,NONE,},
+	[DIF_TTL_1_N]={P_PIN_MUX_REG(0,24),P_PIN_MUX_REG(6,3),NONE,NONE,NONE,NONE,},
+	[DIF_TTL_2_P]={P_PIN_MUX_REG(0,25),P_PIN_MUX_REG(6,4),P_PIN_MUX_REG(7,22),NONE,NONE,NONE,},
+	[DIF_TTL_2_N]={P_PIN_MUX_REG(0,25),P_PIN_MUX_REG(6,5),P_PIN_MUX_REG(7,23),NONE,NONE,NONE,},
+	[DIF_TTL_3_P]={P_PIN_MUX_REG(0,25),P_PIN_MUX_REG(6,6),NONE,NONE,NONE,NONE,},
+	[DIF_TTL_3_N]={P_PIN_MUX_REG(0,25),P_PIN_MUX_REG(6,8),NONE,NONE,NONE,NONE,},
+	[DIF_TTL_4_P]={P_PIN_MUX_REG(0,25),P_PIN_MUX_REG(6,9),NONE,NONE,NONE,NONE,},
+	[DIF_TTL_4_N]={P_PIN_MUX_REG(0,25),P_PIN_MUX_REG(6,10),NONE,NONE,NONE,NONE,},
+	[HDMI_TTL_0_P]={P_PIN_MUX_REG(0,22),NONE,NONE,NONE,NONE,NONE,},
+	[HDMI_TTL_0_N]={P_PIN_MUX_REG(0,22),NONE,NONE,NONE,NONE,NONE,},
+	[HDMI_TTL_1_P]={P_PIN_MUX_REG(0,22),NONE,NONE,NONE,NONE,NONE,},
+	[HDMI_TTL_1_N]={P_PIN_MUX_REG(0,22),NONE,NONE,NONE,NONE,NONE,},
+	[HDMI_TTL_2_P]={P_PIN_MUX_REG(0,22),NONE,NONE,NONE,NONE,NONE,},
+	[HDMI_TTL_2_N]={P_PIN_MUX_REG(0,22),NONE,NONE,NONE,NONE,NONE,},
+	[HDMI_TTL_CK_P]={P_PIN_MUX_REG(0,23),NONE,NONE,NONE,NONE,NONE,},
+	[HDMI_TTL_CK_N]={P_PIN_MUX_REG(0,23),NONE,NONE,NONE,NONE,NONE,},
+	[GPIO_BSD_EN]={NONE,NONE,NONE,NONE,NONE,NONE,},
+	[GPIO_TEST_N]={P_PIN_MUX_REG(9,19),NONE,NONE,NONE,NONE,NONE,},
 };
 struct amlogic_gpio_desc amlogic_pins[]=
 {
-	PIN_AOMAP(GPIOAO_0,4,0,4,16,4,0),
-	PIN_AOMAP(GPIOAO_1,4,1,4,17,4,1),
-	PIN_AOMAP(GPIOAO_2,4,2,4,18,4,2),
-	PIN_AOMAP(GPIOAO_3,4,3,4,19,4,3),
-	PIN_AOMAP(GPIOAO_4,4,4,4,20,4,4),
-	PIN_AOMAP(GPIOAO_5,4,5,4,21,4,5),
-	PIN_AOMAP(GPIOAO_6,4,6,4,22,4,6),
-	PIN_AOMAP(GPIOAO_7,4,7,4,23,4,7),
-	PIN_AOMAP(GPIOAO_8,4,8,4,24,4,8),
-	PIN_AOMAP(GPIOAO_9,4,9,4,25,4,9),
-	PIN_AOMAP(GPIOAO_10,4,10,4,26,4,10),
-	PIN_AOMAP(GPIOAO_11,4,11,4,27,4,11),
-	PIN_AOMAP(GPIOAO_12,4,12,4,28,4,12),
-	PIN_AOMAP(GPIOAO_13,4,13,4,29,4,13),
-	PIN_MAP(GPIOZ_0,1,17),
-	PIN_MAP(GPIOZ_1,1,18),
-	PIN_MAP(GPIOZ_2,1,19),
-	PIN_MAP(GPIOZ_3,1,20),
-	PIN_MAP(GPIOZ_4,1,21),
-	PIN_MAP(GPIOZ_5,1,22),
-	PIN_MAP(GPIOZ_6,1,23),
-	PIN_MAP(GPIOZ_7,1,24),
-	PIN_MAP(GPIOZ_8,1,25),
-	PIN_MAP(GPIOZ_9,1,26),
-	PIN_MAP(GPIOZ_10,1,27),
-	PIN_MAP(GPIOZ_11,1,28),
-	PIN_MAP(GPIOZ_12,1,29),
-	PIN_MAP(GPIOZ_13,1,30),
-	PIN_MAP(GPIOZ_14,1,31),
+	PIN_AOMAP(GPIOAO_0,6,0,6,16,6,0),
+	PIN_AOMAP(GPIOAO_1,6,1,6,17,6,1),
+	PIN_AOMAP(GPIOAO_2,6,2,6,18,6,2),
+	PIN_AOMAP(GPIOAO_3,6,3,6,19,6,3),
+	PIN_AOMAP(GPIOAO_4,6,4,6,20,6,4),
+	PIN_AOMAP(GPIOAO_5,6,5,6,21,6,5),
+	PIN_AOMAP(GPIOAO_6,6,6,6,22,6,6),
+	PIN_AOMAP(GPIOAO_7,6,7,6,23,6,7),
+	PIN_AOMAP(GPIOAO_8,6,8,6,24,6,8),
+	PIN_AOMAP(GPIOAO_9,6,9,6,25,6,9),
+	PIN_AOMAP(GPIOAO_10,6,10,6,26,6,10),
+	PIN_AOMAP(GPIOAO_11,6,11,6,27,6,11),
+	PIN_AOMAP(GPIOAO_12,6,12,6,28,6,12),
+	PIN_AOMAP(GPIOAO_13,6,13,6,29,6,13),
 	PIN_MAP(GPIOH_0,3,19),
 	PIN_MAP(GPIOH_1,3,20),
 	PIN_MAP(GPIOH_2,3,21),
@@ -370,6 +365,24 @@ struct amlogic_gpio_desc amlogic_pins[]=
 	PIN_MAP(GPIOX_19,0,19),
 	PIN_MAP(GPIOX_20,0,20),
 	PIN_MAP(GPIOX_21,0,21),
+	PIN_MAP(DIF_TTL_0_P,4,12),
+	PIN_MAP(DIF_TTL_0_N,4,13),
+	PIN_MAP(DIF_TTL_1_P,4,14),
+	PIN_MAP(DIF_TTL_1_N,4,15),
+	PIN_MAP(DIF_TTL_2_P,4,16),
+	PIN_MAP(DIF_TTL_2_N,4,17),
+	PIN_MAP(DIF_TTL_3_P,4,18),
+	PIN_MAP(DIF_TTL_3_N,4,19),
+	PIN_MAP(DIF_TTL_4_P,4,20),
+	PIN_MAP(DIF_TTL_4_N,4,21),
+	PIN_MAP(HDMI_TTL_0_P,4,22),
+	PIN_MAP(HDMI_TTL_0_N,4,23),
+	PIN_MAP(HDMI_TTL_1_P,4,24),
+	PIN_MAP(HDMI_TTL_1_N,4,25),
+	PIN_MAP(HDMI_TTL_2_P,4,26),
+	PIN_MAP(HDMI_TTL_2_N,4,27),
+	PIN_MAP(HDMI_TTL_CK_P,4,28),
+	PIN_MAP(HDMI_TTL_CK_N,4,29),
 	PIN_AOMAP(GPIO_BSD_EN,0,30,0,31,0,0x1f),
 	PIN_AOMAP(GPIO_TEST_N,0,0,4,31,0,0),
 };
@@ -412,7 +425,7 @@ int gpio_amlogic_to_irq(struct gpio_chip *chip,unsigned offset)
 				0x10001, /*GPIO_IRQ_FALLING*/
 				};
 	 /*set trigger type*/
-	if(offset>GPIO_MAX)
+	if(offset>GPIOX_21)
 		return -1;
 	aml_clrset_reg32_bits(P_GPIO_INTR_EDGE_POL,0x10001<<irq_bank,type[irq_type]<<irq_bank);
 	printk(" reg:%x,clearmask=%x,setmask=%x\n",(P_GPIO_INTR_EDGE_POL&0xffff)>>2,0x10001<<irq_bank,(aml_read_reg32(P_GPIO_INTR_EDGE_POL)>>irq_bank)&0x10001);
@@ -511,6 +524,18 @@ int gpio_amlogic_name_to_num(const char *name)
 		return GPIO_BSD_EN;
 	if(!strcmp(name,"GPIO_TEST_N"))
 		return GPIO_TEST_N;
+	if (sscanf(name, "DIF_TTL_%d_P", &num))
+		return DIF_TTL_0_P+num*2;
+	if (sscanf(name, "DIF_TTL_%d_N", &num))
+		return DIF_TTL_0_N+num*2;
+	if (sscanf(name, "HDMI_TTL_%d_P", &num))
+		return HDMI_TTL_0_P+num*2;
+	if (sscanf(name, "HDMI_TTL_%d_N", &num))
+		return HDMI_TTL_0_N+num*2;
+	if(!strcmp(name,"HDMI_TTL_CK_P"))
+		return HDMI_TTL_CK_P;
+	if(!strcmp(name,"HDMI_TTL_CK_N"))
+		return HDMI_TTL_CK_N;
 	len=strlen(name);
 	p=kzalloc(len+1,GFP_KERNEL);
 	start=p;
@@ -531,20 +556,18 @@ int gpio_amlogic_name_to_num(const char *name)
 	p=start;
 	if(!strcmp(p,"GPIOAO"))
 		num=num+0;
-	else if(!strcmp(p,"GPIOZ"))
-		num=num+14;
 	else if(!strcmp(p,"GPIOH"))
-		num=num+29;
+		num=num+14;
 	else if(!strcmp(p,"BOOT"))
-		num=num+39;
+		num=num+24;
 	else if(!strcmp(p,"CARD"))
-		num=num+58;
+		num=num+43;
 	else if(!strcmp(p,"GPIODV"))
-		num=num+65;
+		num=num+50;
 	else if(!strcmp(p,"GPIOY"))
-		num=num+95;
+		num=num+80;
 	else if(!strcmp(p,"GPIOX"))
-		num=num+112;
+		num=num+97;
 	else
 		num= -1;	
 	kzfree(start);
@@ -565,7 +588,7 @@ static struct gpio_chip amlogic_gpio_chip={
 static const struct of_device_id amlogic_gpio_match[] = 
 {
 	{
-	.compatible = "amlogic,m8-gpio",
+	.compatible = "amlogic,m8b-gpio",
 	},
 	{ },
 };
@@ -576,10 +599,10 @@ struct amlogic_gpio_platform_data
 	struct device_node	*of_node; /* associated device tree node */
 };
 
-static int m8_set_pullup(unsigned int pin,unsigned int val,unsigned int pullen)
+static int m8b_set_pullup(unsigned int pin,unsigned int val,unsigned int pullen)
 {
 	unsigned int reg=0,bit=0,bit_en=0,ret;
-	ret=m8_pin_to_pullup(pin,&reg,&bit,&bit_en);
+	ret=m8b_pin_to_pullup(pin,&reg,&bit,&bit_en);
 	if(!ret)
 	{
 		if(pullen){
@@ -610,23 +633,24 @@ static int amlogic_gpio_probe(struct platform_device *pdev)
 	amlogic_gpio_chip.base=0;
 	amlogic_gpio_chip.ngpio=ARRAY_SIZE(amlogic_pins);
 	gpiochip_add(&amlogic_gpio_chip);
-	pullup_ops.meson_set_pullup=m8_set_pullup;
+	pullup_ops.meson_set_pullup=m8b_set_pullup;
 	dev_info(&pdev->dev, "Probed amlogic GPIO driver\n");
 #ifdef gpio_dump
-	int i;
-	for(i=0;i<GPIO_TEST_N;i++)
+	int gi;
+	for(gi=0;gi<GPIO_MAX;gi++)
 		printk("%s,amlogic_pins[%d]=%d,%d,out en reg=%x,bit=%d,out val reg=%x,bit=%d,input reg=%x,bit=%d\n",
-		amlogic_pins[i].name,i,amlogic_pins[i].num,
-		gpio_amlogic_name_to_num(amlogic_pins[i].name),
-		(p_gpio_oen_addr[GPIO_REG(amlogic_pins[i].out_en_reg_bit)]&0xffff)>>2,
-		GPIO_BIT(amlogic_pins[i].out_en_reg_bit),
-		(p_gpio_output_addr[GPIO_REG(amlogic_pins[i].out_value_reg_bit)]&0xffff)>>2,
-		GPIO_BIT(amlogic_pins[i].out_value_reg_bit),
-		(p_gpio_input_addr[GPIO_REG(amlogic_pins[i].input_value_reg_bit)]&0xffff)>>2,
-		GPIO_BIT(amlogic_pins[i].input_value_reg_bit)
+		amlogic_pins[gi].name,gi,amlogic_pins[gi].num,
+		gpio_amlogic_name_to_num(amlogic_pins[gi].name),
+		(p_gpio_oen_addr[GPIO_REG(amlogic_pins[gi].out_en_reg_bit)]&0xffff)>>2,
+		GPIO_BIT(amlogic_pins[gi].out_en_reg_bit),
+		(p_gpio_output_addr[GPIO_REG(amlogic_pins[gi].out_value_reg_bit)]&0xffff)>>2,
+		GPIO_BIT(amlogic_pins[gi].out_value_reg_bit),
+		(p_gpio_input_addr[GPIO_REG(amlogic_pins[gi].input_value_reg_bit)]&0xffff)>>2,
+		GPIO_BIT(amlogic_pins[gi].input_value_reg_bit)
 	);
 #endif
 #ifdef irq_dump
+
 	for(i=GPIO_IRQ0;i<GPIO_IRQ7+1;i++){
 		gpio_flag=AML_GPIO_IRQ(i,FILTER_NUM7,GPIO_IRQ_HIGH);
 		gpio_amlogic_to_irq(NULL,50);
@@ -639,26 +663,26 @@ static int amlogic_gpio_probe(struct platform_device *pdev)
 #endif
 #ifdef pull_dump
 
-	int reg,bit,enbit,i;
-	for(i=0;i<GPIO_TEST_N;i++){
-		m8_pin_to_pullup(i,&reg,&bit,&enbit);
+	int preg,pbit,penbit,pi;
+	for(pi=0;pi<GPIO_TEST_N;pi++){
+		m8b_pin_to_pullup(pi,&preg,&pbit,&penbit);
 		printk("%s \t,pull up en reg:%x \t,enbit:%d \t,==,pull up reg:%x \t,bit:%d \t\n",
-			amlogic_pins[i].name,
-			(p_pull_upen_addr[reg]&0xffff)>>2,
-			enbit,
-			(p_pull_up_addr[reg]&0xffff)>>2,
-			bit);
+			amlogic_pins[pi].name,
+			(p_pull_upen_addr[preg]&0xffff)>>2,
+			penbit,
+			(p_pull_up_addr[preg]&0xffff)>>2,
+			pbit);
 	}
 #endif
 #ifdef dire_dump
-extern int m8_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit);
-	int reg,bit,i;
-	for(i=0;i<GPIO_TEST_N;i++){
-		m8_pin_map_to_direction(i,&reg,&bit);
+extern int m8b_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit);
+	int dreg,dbit,di;
+	for(di=0;di<GPIO_TEST_N;di++){
+		m8b_pin_map_to_direction(di,&dreg,&dbit);
 		printk("%s \t,output en reg:%x \t,enbit:%d \t\n",
-			amlogic_pins[i].name,
-			(p_gpio_oen_addr[reg]&0xffff)>>2,
-			bit);
+			amlogic_pins[di].name,
+			(p_gpio_oen_addr[dreg]&0xffff)>>2,
+			dbit);
 	}
 #endif
 	return 0;
diff --git a/arch/arm/mach-meson8b/include/mach/gpio.h b/arch/arm/mach-meson8b/include/mach/gpio.h
index 33141be1a05f..154b69e0a379 100644
--- a/arch/arm/mach-meson8b/include/mach/gpio.h
+++ b/arch/arm/mach-meson8b/include/mach/gpio.h
@@ -15,129 +15,132 @@ typedef enum {
 	GPIOAO_11=11,
 	GPIOAO_12=12,
 	GPIOAO_13=13,
-	GPIOZ_0=14,
-	GPIOZ_1=15,
-	GPIOZ_2=16,
-	GPIOZ_3=17,
-	GPIOZ_4=18,
-	GPIOZ_5=19,
-	GPIOZ_6=20,
-	GPIOZ_7=21,
-	GPIOZ_8=22,
-	GPIOZ_9=23,
-	GPIOZ_10=24,
-	GPIOZ_11=25,
-	GPIOZ_12=26,
-	GPIOZ_13=27,
-	GPIOZ_14=28,
-	GPIOH_0=29,
-	GPIOH_1=30,
-	GPIOH_2=31,
-	GPIOH_3=32,
-	GPIOH_4=33,
-	GPIOH_5=34,
-	GPIOH_6=35,
-	GPIOH_7=36,
-	GPIOH_8=37,
-	GPIOH_9=38,
-	BOOT_0=39,
-	BOOT_1=40,
-	BOOT_2=41,
-	BOOT_3=42,
-	BOOT_4=43,
-	BOOT_5=44,
-	BOOT_6=45,
-	BOOT_7=46,
-	BOOT_8=47,
-	BOOT_9=48,
-	BOOT_10=49,
-	BOOT_11=50,
-	BOOT_12=51,
-	BOOT_13=52,
-	BOOT_14=53,
-	BOOT_15=54,
-	BOOT_16=55,
-	BOOT_17=56,
-	BOOT_18=57,
-	CARD_0=58,
-	CARD_1=59,
-	CARD_2=60,
-	CARD_3=61,
-	CARD_4=62,
-	CARD_5=63,
-	CARD_6=64,
-	GPIODV_0=65,
-	GPIODV_1=66,
-	GPIODV_2=67,
-	GPIODV_3=68,
-	GPIODV_4=69,
-	GPIODV_5=70,
-	GPIODV_6=71,
-	GPIODV_7=72,
-	GPIODV_8=73,
-	GPIODV_9=74,
-	GPIODV_10=75,
-	GPIODV_11=76,
-	GPIODV_12=77,
-	GPIODV_13=78,
-	GPIODV_14=79,
-	GPIODV_15=80,
-	GPIODV_16=81,
-	GPIODV_17=82,
-	GPIODV_18=83,
-	GPIODV_19=84,
-	GPIODV_20=85,
-	GPIODV_21=86,
-	GPIODV_22=87,
-	GPIODV_23=88,
-	GPIODV_24=89,
-	GPIODV_25=90,
-	GPIODV_26=91,
-	GPIODV_27=92,
-	GPIODV_28=93,
-	GPIODV_29=94,
-	GPIOY_0=95,
-	GPIOY_1=96,
-	GPIOY_2=97,
-	GPIOY_3=98,
-	GPIOY_4=99,
-	GPIOY_5=100,
-	GPIOY_6=101,
-	GPIOY_7=102,
-	GPIOY_8=103,
-	GPIOY_9=104,
-	GPIOY_10=105,
-	GPIOY_11=106,
-	GPIOY_12=107,
-	GPIOY_13=108,
-	GPIOY_14=109,
-	GPIOY_15=110,
-	GPIOY_16=111,
-	GPIOX_0=112,
-	GPIOX_1=113,
-	GPIOX_2=114,
-	GPIOX_3=115,
-	GPIOX_4=116,
-	GPIOX_5=117,
-	GPIOX_6=118,
-	GPIOX_7=119,
-	GPIOX_8=120,
-	GPIOX_9=121,
-	GPIOX_10=122,
-	GPIOX_11=123,
-	GPIOX_12=124,
-	GPIOX_13=125,
-	GPIOX_14=126,
-	GPIOX_15=127,
-	GPIOX_16=128,
-	GPIOX_17=129,
-	GPIOX_18=130,
-	GPIOX_19=131,
-	GPIOX_20=132,
-	GPIOX_21=133,
-	GPIO_BSD_EN=134,
-	GPIO_TEST_N=135,
-	GPIO_MAX=136,
+	GPIOH_0=14,
+	GPIOH_1=15,
+	GPIOH_2=16,
+	GPIOH_3=17,
+	GPIOH_4=18,
+	GPIOH_5=19,
+	GPIOH_6=20,
+	GPIOH_7=21,
+	GPIOH_8=22,
+	GPIOH_9=23,
+	BOOT_0=24,
+	BOOT_1=25,
+	BOOT_2=26,
+	BOOT_3=27,
+	BOOT_4=28,
+	BOOT_5=29,
+	BOOT_6=30,
+	BOOT_7=31,
+	BOOT_8=32,
+	BOOT_9=33,
+	BOOT_10=34,
+	BOOT_11=35,
+	BOOT_12=36,
+	BOOT_13=37,
+	BOOT_14=38,
+	BOOT_15=39,
+	BOOT_16=40,
+	BOOT_17=41,
+	BOOT_18=42,
+	CARD_0=43,
+	CARD_1=44,
+	CARD_2=45,
+	CARD_3=46,
+	CARD_4=47,
+	CARD_5=48,
+	CARD_6=49,
+	GPIODV_0=50,
+	GPIODV_1=51,
+	GPIODV_2=52,
+	GPIODV_3=53,
+	GPIODV_4=54,
+	GPIODV_5=55,
+	GPIODV_6=56,
+	GPIODV_7=57,
+	GPIODV_8=58,
+	GPIODV_9=59,
+	GPIODV_10=60,
+	GPIODV_11=61,
+	GPIODV_12=62,
+	GPIODV_13=63,
+	GPIODV_14=64,
+	GPIODV_15=65,
+	GPIODV_16=66,
+	GPIODV_17=67,
+	GPIODV_18=68,
+	GPIODV_19=69,
+	GPIODV_20=70,
+	GPIODV_21=71,
+	GPIODV_22=72,
+	GPIODV_23=73,
+	GPIODV_24=74,
+	GPIODV_25=75,
+	GPIODV_26=76,
+	GPIODV_27=77,
+	GPIODV_28=78,
+	GPIODV_29=79,
+	GPIOY_0=80,
+	GPIOY_1=81,
+	GPIOY_2=82,
+	GPIOY_3=83,
+	GPIOY_4=84,
+	GPIOY_5=85,
+	GPIOY_6=86,
+	GPIOY_7=87,
+	GPIOY_8=88,
+	GPIOY_9=89,
+	GPIOY_10=90,
+	GPIOY_11=91,
+	GPIOY_12=92,
+	GPIOY_13=93,
+	GPIOY_14=94,
+	GPIOY_15=95,
+	GPIOY_16=96,
+	GPIOX_0=97,
+	GPIOX_1=98,
+	GPIOX_2=99,
+	GPIOX_3=100,
+	GPIOX_4=101,
+	GPIOX_5=102,
+	GPIOX_6=103,
+	GPIOX_7=104,
+	GPIOX_8=105,
+	GPIOX_9=106,
+	GPIOX_10=107,
+	GPIOX_11=108,
+	GPIOX_12=109,
+	GPIOX_13=110,
+	GPIOX_14=111,
+	GPIOX_15=112,
+	GPIOX_16=113,
+	GPIOX_17=114,
+	GPIOX_18=115,
+	GPIOX_19=116,
+	GPIOX_20=117,
+	GPIOX_21=118,
+	DIF_TTL_0_P=119,
+	DIF_TTL_0_N=120,
+	DIF_TTL_1_P=121,
+	DIF_TTL_1_N=122,
+	DIF_TTL_2_P=123,
+	DIF_TTL_2_N=124,
+	DIF_TTL_3_P=125,
+	DIF_TTL_3_N=126,
+	DIF_TTL_4_P=127,
+	DIF_TTL_4_N=128,
+	HDMI_TTL_0_P=129,
+	HDMI_TTL_0_N=130,
+	HDMI_TTL_1_P=131,
+	HDMI_TTL_1_N=132,
+	HDMI_TTL_2_P=133,
+	HDMI_TTL_2_N=134,
+	HDMI_TTL_CK_P=135,
+	HDMI_TTL_CK_N=136,
+	GPIO_BSD_EN=137,
+	GPIO_TEST_N=138,
+	GPIO_MAX=139,
 }gpio_t;
 	
 enum {
diff --git a/arch/arm/mach-meson8b/pinctrl.c b/arch/arm/mach-meson8b/pinctrl.c
old mode 100644
new mode 100755
index b77668cba17e..df71dbbe88e3
--- a/arch/arm/mach-meson8b/pinctrl.c
+++ b/arch/arm/mach-meson8b/pinctrl.c
@@ -53,7 +53,7 @@ unsigned p_pull_upen_addr[]={
 };
 
 /* Pad names for the pinmux subsystem */
-const static struct pinctrl_pin_desc m8_pads[] = {
+const static struct pinctrl_pin_desc m8b_pads[] = {
 	PINCTRL_PIN(GPIOAO_0,"GPIOAO_0"),
 	PINCTRL_PIN(GPIOAO_1,"GPIOAO_1"),
 	PINCTRL_PIN(GPIOAO_2,"GPIOAO_2"),
@@ -68,21 +68,6 @@ const static struct pinctrl_pin_desc m8_pads[] = {
 	PINCTRL_PIN(GPIOAO_11,"GPIOAO_11"),
 	PINCTRL_PIN(GPIOAO_12,"GPIOAO_12"),
 	PINCTRL_PIN(GPIOAO_13,"GPIOAO_13"),
-	PINCTRL_PIN(GPIOZ_0,"GPIOZ_0"),
-	PINCTRL_PIN(GPIOZ_1,"GPIOZ_1"),
-	PINCTRL_PIN(GPIOZ_2,"GPIOZ_2"),
-	PINCTRL_PIN(GPIOZ_3,"GPIOZ_3"),
-	PINCTRL_PIN(GPIOZ_4,"GPIOZ_4"),
-	PINCTRL_PIN(GPIOZ_5,"GPIOZ_5"),
-	PINCTRL_PIN(GPIOZ_6,"GPIOZ_6"),
-	PINCTRL_PIN(GPIOZ_7,"GPIOZ_7"),
-	PINCTRL_PIN(GPIOZ_8,"GPIOZ_8"),
-	PINCTRL_PIN(GPIOZ_9,"GPIOZ_9"),
-	PINCTRL_PIN(GPIOZ_10,"GPIOZ_10"),
-	PINCTRL_PIN(GPIOZ_11,"GPIOZ_11"),
-	PINCTRL_PIN(GPIOZ_12,"GPIOZ_12"),
-	PINCTRL_PIN(GPIOZ_13,"GPIOZ_13"),
-	PINCTRL_PIN(GPIOZ_14,"GPIOZ_14"),
 	PINCTRL_PIN(GPIOH_0,"GPIOH_0"),
 	PINCTRL_PIN(GPIOH_1,"GPIOH_1"),
 	PINCTRL_PIN(GPIOH_2,"GPIOH_2"),
@@ -188,10 +173,27 @@ const static struct pinctrl_pin_desc m8_pads[] = {
 	PINCTRL_PIN(GPIOX_19,"GPIOX_19"),
 	PINCTRL_PIN(GPIOX_20,"GPIOX_20"),
 	PINCTRL_PIN(GPIOX_21,"GPIOX_21"),
-	PINCTRL_PIN(GPIO_BSD_EN,"GPIO_BSD_EN"),
-	PINCTRL_PIN(GPIO_TEST_N,"GPIO_TEST_N"),
+	PINCTRL_PIN(DIF_TTL_0_P,"DIF_TTL_0_P"),
+	PINCTRL_PIN(DIF_TTL_0_N,"DIF_TTL_0_N"),
+	PINCTRL_PIN(DIF_TTL_1_P,"DIF_TTL_1_P"),
+	PINCTRL_PIN(DIF_TTL_1_N,"DIF_TTL_1_N"),
+	PINCTRL_PIN(DIF_TTL_2_P,"DIF_TTL_2_P"),
+	PINCTRL_PIN(DIF_TTL_2_N,"DIF_TTL_2_N"),
+	PINCTRL_PIN(DIF_TTL_3_P,"DIF_TTL_3_P"),
+	PINCTRL_PIN(DIF_TTL_3_N,"DIF_TTL_3_N"),
+	PINCTRL_PIN(DIF_TTL_4_P,"DIF_TTL_4_P"),
+	PINCTRL_PIN(DIF_TTL_4_N,"DIF_TTL_4_N"),
+	PINCTRL_PIN(HDMI_TTL_0_P,"HDMI_TTL_0_P"),
+	PINCTRL_PIN(HDMI_TTL_0_N,"HDMI_TTL_0_N"),
+	PINCTRL_PIN(HDMI_TTL_1_P,"HDMI_TTL_1_P"),
+	PINCTRL_PIN(HDMI_TTL_1_N,"HDMI_TTL_1_N"),
+	PINCTRL_PIN(HDMI_TTL_2_P,"HDMI_TTL_2_P"),
+	PINCTRL_PIN(HDMI_TTL_2_N,"HDMI_TTL_2_N"),
+	PINCTRL_PIN(HDMI_TTL_CK_P,"HDMI_TTL_CK_P"),
+	PINCTRL_PIN(HDMI_TTL_CK_N,"HDMI_TTL_CK_N"),
+
 };
-int m8_pin_to_pullup(unsigned int pin ,unsigned int *reg,unsigned int *bit,unsigned int *bit_en)
+int m8b_pin_to_pullup(unsigned int pin ,unsigned int *reg,unsigned int *bit,unsigned int *bit_en)
 {
 	if(pin<=GPIOAO_13)
 	{
@@ -199,12 +201,6 @@ int m8_pin_to_pullup(unsigned int pin ,unsigned int *reg,unsigned int *bit,unsig
 		*bit=pin+16;
 		*bit_en=pin;
 	}
-	else if (pin<=GPIOZ_14)
-	{
-		*reg=1;
-		*bit=pin-GPIOZ_0;
-		*bit_en=*bit;
-	}
 	else if(pin<=GPIOH_9)
 	{
 		*reg=1;
@@ -241,7 +237,7 @@ int m8_pin_to_pullup(unsigned int pin ,unsigned int *reg,unsigned int *bit,unsig
 		*bit=pin-GPIOX_0;
 		*bit_en=*bit;
 	}
-	else if(pin<=GPIO_TEST_N)
+	else if(pin == GPIO_TEST_N)
 	{
 		*reg=5;
 		*bit=pin-GPIO_TEST_N+14;
@@ -252,18 +248,13 @@ int m8_pin_to_pullup(unsigned int pin ,unsigned int *reg,unsigned int *bit,unsig
 	return 0;
 
 }
-int m8_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit)
+int m8b_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit)
 {
 	if(pin<=GPIOAO_13)
 	{
-		*reg=4;
+		*reg=6;
 		*bit=pin;
 	}
-	else if (pin<=GPIOZ_14)
-	{
-		*reg=1;
-		*bit=pin-GPIOZ_0+17;
-	}
 	else if(pin<=GPIOH_9)
 	{
 		*reg=3;
@@ -294,6 +285,11 @@ int m8_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit
 		*reg=0;
 		*bit=pin-GPIOX_0;
 	}
+	else if(pin<=HDMI_TTL_CK_N)
+	{
+		*reg=4;
+		*bit=pin-DIF_TTL_0_P+12;
+	}
 	//else if(pin<=GPIO_TEST_N)
 	//{
 		//*reg=5;
@@ -303,12 +299,12 @@ int m8_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit
 		return -1;
 	return 0;
 }
-static int m8_set_pullup(unsigned int pin,unsigned int config)
+static int m8b_set_pullup(unsigned int pin,unsigned int config)
 {
 	unsigned int reg=0,bit=0,bit_en=0,ret;
 	u16 pullarg = AML_PINCONF_UNPACK_PULL_ARG(config);
 	u16 pullen = AML_PINCONF_UNPACK_PULL_EN(config);
-	ret=m8_pin_to_pullup(pin,&reg,&bit,&bit_en);
+	ret=m8b_pin_to_pullup(pin,&reg,&bit,&bit_en);
 	if(!ret)
 	{
 		if(pullen){
@@ -327,50 +323,50 @@ static int m8_set_pullup(unsigned int pin,unsigned int config)
 	return ret;
 }
 
-static struct amlogic_pinctrl_soc_data m8_pinctrl = {
-	.pins = m8_pads,
-	.npins = ARRAY_SIZE(m8_pads),
-	.meson_set_pullup=m8_set_pullup,
-	.pin_map_to_direction=m8_pin_map_to_direction,
+static struct amlogic_pinctrl_soc_data m8b_pinctrl = {
+	.pins = m8b_pads,
+	.npins = ARRAY_SIZE(m8b_pads),
+	.meson_set_pullup=m8b_set_pullup,
+	.pin_map_to_direction=m8b_pin_map_to_direction,
 };
-static struct of_device_id m8_pinctrl_of_table[]=
+static struct of_device_id m8b_pinctrl_of_table[]=
 {
 	{
-		.compatible="amlogic,pinmux-m8",
+		.compatible="amlogic,pinmux-m8b",
 	},
 	{},
 };
 
-static int  m8_pmx_probe(struct platform_device *pdev)
+static int  m8b_pmx_probe(struct platform_device *pdev)
 {
-	return amlogic_pmx_probe(pdev,&m8_pinctrl);
+	return amlogic_pmx_probe(pdev,&m8b_pinctrl);
 }
 
-static int  m8_pmx_remove(struct platform_device *pdev)
+static int  m8b_pmx_remove(struct platform_device *pdev)
 {
 	return amlogic_pmx_remove(pdev);
 }
 
-static struct platform_driver m8_pmx_driver = {
+static struct platform_driver m8b_pmx_driver = {
 	.driver = {
-		.name = "pinmux-m8",
+		.name = "pinmux-m8b",
 		.owner = THIS_MODULE,
-		.of_match_table=of_match_ptr(m8_pinctrl_of_table),
+		.of_match_table=of_match_ptr(m8b_pinctrl_of_table),
 	},
-	.probe = m8_pmx_probe,
-	.remove = m8_pmx_remove,
+	.probe = m8b_pmx_probe,
+	.remove = m8b_pmx_remove,
 };
 
-static int __init m8_pmx_init(void)
+static int __init m8b_pmx_init(void)
 {
-	return platform_driver_register(&m8_pmx_driver);
+	return platform_driver_register(&m8b_pmx_driver);
 }
-arch_initcall(m8_pmx_init);
+arch_initcall(m8b_pmx_init);
 
-static void __exit m8_pmx_exit(void)
+static void __exit m8b_pmx_exit(void)
 {
-	platform_driver_unregister(&m8_pmx_driver);
+	platform_driver_unregister(&m8b_pmx_driver);
 }
-module_exit(m8_pmx_exit);
-MODULE_DESCRIPTION("m8 pin control driver");
+module_exit(m8b_pmx_exit);
+MODULE_DESCRIPTION("m8b pin control driver");
 MODULE_LICENSE("GPL v2");
diff --git a/drivers/amlogic/pinctrl/pinctrl-amlogic.c b/drivers/amlogic/pinctrl/pinctrl-amlogic.c
index 61492896877f..67c14091fd3f 100755
--- a/drivers/amlogic/pinctrl/pinctrl-amlogic.c
+++ b/drivers/amlogic/pinctrl/pinctrl-amlogic.c
@@ -471,7 +471,7 @@ static int amlogic_pinctrl_parse_group(struct platform_device *pdev,
 			ret=amlogic_gpio_name_map_num(gpioname);
 			if(ret<0){
 				ret= -EINVAL;
-				dev_err(&pdev->dev, "change name to num  error\n");
+				dev_err(&pdev->dev, "%s change name to num  error\n",gpioname);
 				goto err;
 			}
 			g->pins[i]=ret;
-- 
2.19.0

