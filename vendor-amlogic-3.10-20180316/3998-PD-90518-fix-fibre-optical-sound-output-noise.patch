From f93c5065b530ee0713decfbe7aae534af05ff4a7 Mon Sep 17 00:00:00 2001
From: "shuai.li" <shuai.li@amlogic.com>
Date: Fri, 25 Apr 2014 13:50:18 +0800
Subject: [PATCH 3998/5965] PD#90518: fix fibre-optical sound output noise

---
 sound/soc/aml/m6/aml_audio_hw.h |  5 ++++-
 sound/soc/aml/m6/aml_pcm.c      | 24 ++++++++++++------------
 2 files changed, 16 insertions(+), 13 deletions(-)

diff --git a/sound/soc/aml/m6/aml_audio_hw.h b/sound/soc/aml/m6/aml_audio_hw.h
index 378b36feb745..65cac6ca020b 100644
--- a/sound/soc/aml/m6/aml_audio_hw.h
+++ b/sound/soc/aml/m6/aml_audio_hw.h
@@ -188,10 +188,13 @@ unsigned int audio_hdmi_init_ready(void);
 /*OVERCLOCK == 1,our SOC privide 512fs mclk,OVERCLOCK == 0 ,256fs*/
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TV
 #define OVERCLOCK 0
-#define IEC958_OVERCLOCK 1
 #else
 #define OVERCLOCK 1
 #endif
+/*IEC958 overclock is used after M8*/
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+#define IEC958_OVERCLOCK 1
+#endif
 
 #if (OVERCLOCK == 1)
 #define MCLKFS_RATIO 512
diff --git a/sound/soc/aml/m6/aml_pcm.c b/sound/soc/aml/m6/aml_pcm.c
index 8f8d28b5f200..f35ecd127ca8 100755
--- a/sound/soc/aml/m6/aml_pcm.c
+++ b/sound/soc/aml/m6/aml_pcm.c
@@ -549,7 +549,7 @@ static void aml_hw_iec958_init(void)
 	if(IEC958_mode_codec == 4)  //dd+
 		WRITE_MPEG_REG_BITS(AIU_CLK_CTRL, 0, 4, 2); // 4x than i2s
 	else
-#if OVERCLOCK == 1 || IEC958_OVERCLOCK == 1	
+#if OVERCLOCK == 1 || IEC958_OVERCLOCK == 1
 		WRITE_MPEG_REG_BITS(AIU_CLK_CTRL, 3, 4, 2);//512fs divide 4 == 128fs
 #else
 		WRITE_MPEG_REG_BITS(AIU_CLK_CTRL, 1, 4, 2); //256fs divide 2 == 128fs
@@ -624,8 +624,8 @@ static int aml_pcm_prepare(struct snd_pcm_substream *substream)
 			s->sample_rate	=	AUDIO_CLK_FREQ_441;
 			break;
 	};
-	// iec958 and i2s clock are separated after M6TV
-#if MESON_CPU_TYPE <= MESON_CPU_TYPE_MESON6TV	
+	// iec958 and i2s clock are separated since M8
+#if MESON_CPU_TYPE < MESON_CPU_TYPE_MESON8
 	audio_set_clk(s->sample_rate, AUDIO_CLK_256FS);
 	audio_util_set_dac_format(AUDIO_ALGOUT_DAC_FORMAT_DSP);
 #else
@@ -634,7 +634,7 @@ static int aml_pcm_prepare(struct snd_pcm_substream *substream)
 	audio_util_set_dac_i2s_format(AUDIO_ALGOUT_DAC_FORMAT_DSP);
 	audio_util_set_dac_958_format(AUDIO_ALGOUT_DAC_FORMAT_DSP);
 #endif
-	
+
 	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK){
 			aml_hw_i2s_init(runtime);
 		  aml_hw_iec958_init();
@@ -695,7 +695,7 @@ static int aml_pcm_trigger(struct snd_pcm_substream *substream,
 
 #if USE_HRTIMER == 0
 	  del_timer_sync(&prtd->timer);
-#endif      
+#endif
 	  spin_lock(&s->lock);
 #if USE_HRTIMER == 0
 	  prtd->timer.expires = jiffies + 1;
@@ -827,7 +827,7 @@ static enum hrtimer_restart aml_pcm_hrtimer_callback(struct hrtimer* timer)
   audio_stream_t* s = &prtd->s;
   struct snd_pcm_substream* substream = prtd->substream;
   struct snd_pcm_runtime* runtime= substream->runtime;
-  
+
   unsigned int last_ptr, size;
   unsigned long flag;
   //printk("------------->hrtimer start\n");
@@ -988,14 +988,14 @@ static int aml_pcm_open(struct snd_pcm_substream *substream)
 	}
 
 	prtd->substream = substream;
-#if USE_HRTIMER == 0    
+#if USE_HRTIMER == 0
 	prtd->timer.function = &aml_pcm_timer_callback;
 	prtd->timer.data = (unsigned long)substream;
 	init_timer(&prtd->timer);
 #else
     hrtimer_init(&prtd->hrtimer,CLOCK_MONOTONIC, HRTIMER_MODE_REL);
     prtd->hrtimer.function = aml_pcm_hrtimer_callback;
-    hrtimer_start(&prtd->hrtimer, ns_to_ktime(HRTIMER_PERIOD), HRTIMER_MODE_REL); 
+    hrtimer_start(&prtd->hrtimer, ns_to_ktime(HRTIMER_PERIOD), HRTIMER_MODE_REL);
 
 
     printk("hrtimer inited..\n");
@@ -1087,7 +1087,7 @@ static int aml_pcm_copy_playback(struct snd_pcm_runtime *runtime, int channel,
         if(pos % align){
           printk("audio data unaligned: pos=%d, n=%d, align=%d\n", (int)pos, n, align);
         }
-		
+
 		if(runtime->channels == 8){
 			int32_t *lf, *cf, *rf, *ls, *rs, *lef, *sbl, *sbr;
 			lf  = to;
@@ -1150,7 +1150,7 @@ static int aml_pcm_copy_capture(struct snd_pcm_runtime *runtime, int channel,
     int i = 0, j = 0;
     unsigned int t1, t2;
     char *hwbuf = runtime->dma_area + frames_to_bytes(runtime, pos)*2;
-    unsigned char r_shift = 8;	
+    unsigned char r_shift = 8;
     if(audioin_mode&SPDIFIN_MODE) //spdif in
     {
     	r_shift = 12;
@@ -1241,7 +1241,7 @@ static int aml_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
 	int ret = 0;
        struct snd_soc_card *card = rtd->card;
-       struct snd_pcm *pcm =rtd->pcm ;  
+       struct snd_pcm *pcm =rtd->pcm ;
 	if (!card->dev->dma_mask)
 		card->dev->dma_mask = &aml_pcm_dmamask;
 	if (!card->dev->coherent_dma_mask)
@@ -1586,7 +1586,7 @@ static int aml_soc_platform_probe(struct platform_device *pdev)
 	if(pdev->dev.platform_data){
 		audioin_mode = *(unsigned *)pdev->dev.platform_data;
 		printk("AML soc audio in mode =============   %d \n",audioin_mode);
-	}	
+	}
 	return snd_soc_register_platform(&pdev->dev, &aml_soc_platform);
 }
 
-- 
2.19.0

