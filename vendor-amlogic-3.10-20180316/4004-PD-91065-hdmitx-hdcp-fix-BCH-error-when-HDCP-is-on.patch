From 4a40f52429fc184e13fd0d198a462731d20b4837 Mon Sep 17 00:00:00 2001
From: "zongdong.jiao" <zongdong.jiao@amlogic.com>
Date: Wed, 30 Apr 2014 22:18:14 +0800
Subject: [PATCH 4004/5965] PD #91065: hdmitx: hdcp: fix BCH error when HDCP is
 on

Fixed modes: 1080p50hz, 4k2k30hz, 4k2k25hz, 4k2k24hz, 4k2ksmpte
---
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c  | 104 +++++++++++++++---
 .../mach-meson8/include/mach/hdmi_tx_reg.h    |   3 +
 2 files changed, 91 insertions(+), 16 deletions(-)

diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
index cde8b4b803d3..09885c4ca273 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
@@ -474,7 +474,7 @@ static void hdmi_tvenc4k2k_set(Hdmi_tx_video_para_t* param)
         vs_adjust   = 1;
     } else {
         hs_begin    = de_h_end + front_porch_venc;
-        vs_adjust   = 0;
+        vs_adjust   = 1;
     }
     hs_end  = modulo(hs_begin + hsync_pixels_venc,   total_pixels_venc);
     aml_write_reg32(P_ENCP_DVI_HSO_BEGIN,  hs_begin);
@@ -1264,19 +1264,81 @@ void hdmi_hw_init(hdmitx_dev_t* hdmitx_device)
     delay_us(10);
 }    
 
-#ifdef CONFIG_ARCH_MESON6
-// TODO, need test in m8
-// When 1080p50hz output, we shall manually configure
+#ifdef CONFIG_AML_HDMI_TX_HDCP
+// When have below format output, we shall manually configure
 // bolow register to get stable Video Timing.
-static void hdmi_reconfig_packet_setting(void)
+static void hdmi_reconfig_packet_setting(HDMI_Video_Codes_t vic)
 {
-    hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_1, 0x01);
-    hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_2, 0x12);
-    hdmi_wr_reg(TX_PACKET_ALLOC_EOF_1, 0x10);
-    hdmi_wr_reg(TX_PACKET_ALLOC_EOF_2, 0x12);
-    hdmi_wr_reg(TX_PACKET_ALLOC_SOF_1, 0xb6);
-    hdmi_wr_reg(TX_PACKET_ALLOC_SOF_2, 0x11);
-    hdmi_wr_reg(TX_PACKET_CONTROL_1, (hdmi_rd_reg(TX_PACKET_CONTROL_1)) | (1 << 7));    // bit[7]: forced_packet_timing
+    switch(vic) {
+    case HDMI_1080p50:
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0x3a);         //0x7e
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_1, 0x01);    //0x78
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_2, 0x12);    //0x79
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_1, 0x10);       //0x7a
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_2, 0x12);       //0x7b
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_0, 0x01);       //0x81
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_1, 0x00);       //0x82
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_2, 0x0a);       //0x83
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_1, 0xb6);       //0x7c
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_2, 0x11);       //0x7d
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0xba);         //0x7e
+        break;
+    case HDMI_4k2k_30:
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0x3a);         //0x7e
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_1, 0x01);    //0x78
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_2, 0x0f);    //0x79
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_1, 0x3a);       //0x7a
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_2, 0x12);       //0x7b
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_0, 0x01);       //0x81
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_1, 0x00);       //0x82
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_2, 0x0a);       //0x83
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_1, 0x60);       //0x7c
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_2, 0x52);       //0x7d
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0xba);         //0x7e
+        break;
+    case HDMI_4k2k_25:
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0x3a);         //0x7e
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_1, 0x01);    //0x78
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_2, 0x12);    //0x79
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_1, 0x44);       //0x7a
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_2, 0x12);       //0x7b
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_0, 0x01);       //0x81
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_1, 0x00);       //0x82
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_2, 0x0a);       //0x83
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_1, 0xda);       //0x7c
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_2, 0x52);       //0x7d
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0xba);         //0x7e
+        break;
+    case HDMI_4k2k_24:
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0x3a);         //0x7e
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_1, 0x01);    //0x78
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_2, 0x12);    //0x79
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_1, 0x47);       //0x7a
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_2, 0x12);       //0x7b
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_0, 0x01);       //0x81
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_1, 0x00);       //0x82
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_2, 0x0a);       //0x83
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_1, 0xf8);       //0x7c
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_2, 0x52);       //0x7d
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0xba);         //0x7e
+        break;
+    case HDMI_4k2k_smpte_24:
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0x3a);         //0x7e
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_1, 0x01);    //0x78
+        hdmi_wr_reg(TX_PACKET_ALLOC_ACTIVE_2, 0x12);    //0x79
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_1, 0x47);       //0x7a
+        hdmi_wr_reg(TX_PACKET_ALLOC_EOF_2, 0x12);       //0x7b
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_0, 0x01);       //0x81
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_1, 0x00);       //0x82
+        hdmi_wr_reg(TX_CORE_ALLOC_VSYNC_2, 0x0a);       //0x83
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_1, 0xf8);       //0x7c
+        hdmi_wr_reg(TX_PACKET_ALLOC_SOF_2, 0x52);       //0x7d
+        hdmi_wr_reg(TX_PACKET_CONTROL_1, 0xba);         //0x7e
+        break;
+    default:
+        break;
+    }
+    hdmi_print(IMP, SYS "reconfig packet setting done\n");
 }
 #endif
 
@@ -1387,6 +1449,9 @@ static void hdmi_hw_reset(hdmitx_dev_t* hdmitx_device, Hdmi_tx_video_para_t *par
     //tmp_add_data[1]   = 1'b1 ;  // sys_trigger_config_semi_manu
     //tmp_add_data[0]   = 1'b0 ;  // Rsrv
 
+    tmp_add_data = 58;
+    hdmi_wr_reg(TX_PACKET_CONTROL_1, tmp_add_data);
+
     tmp_add_data = 0x0c; // for hdcp, can not use 0x0e 
     hdmi_wr_reg(TX_HDCP_EDID_CONFIG, tmp_add_data);
     
@@ -1627,10 +1692,8 @@ static void hdmi_hw_reset(hdmitx_dev_t* hdmitx_device, Hdmi_tx_video_para_t *par
             hdmi_wr_reg(TX_SYS5_TX_SOFT_RESET_2, 0x00);        
         }
     }
-#ifdef CONFIG_ARCH_MESON6       //todo
-    if(param->VIC == HDMI_1080p50) {
-        hdmi_reconfig_packet_setting();  // For 1080p50hz only
-    }
+#ifdef CONFIG_AML_HDMI_TX_HDCP
+    hdmi_reconfig_packet_setting(param->VIC);
 #endif
 }
 
@@ -2845,6 +2908,15 @@ static int hdmitx_cntl_ddc(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned a
         break;
     case DDC_HDCP_OP:
         if(argv == HDCP_ON) {
+#ifdef CONFIG_AML_HDMI_TX_HDCP
+            // check if bit7 is enable, if not, enable first
+            if(hdmi_rd_reg(TX_PACKET_CONTROL_1) & (1 << 7)) {
+                hdmi_print(IMP, SYS "already configure PACKET_CONTROL\n");// do nothing
+            }
+            else {
+                hdmi_reconfig_packet_setting(hdmitx_device->cur_VIC);
+            }
+#endif
             hdmi_set_reg_bits(TX_HDCP_MODE, 1, 7, 1);
         }
         if(argv == HDCP_OFF) {
diff --git a/arch/arm/mach-meson8/include/mach/hdmi_tx_reg.h b/arch/arm/mach-meson8/include/mach/hdmi_tx_reg.h
index 96f6919272a4..46888c8b7a1b 100644
--- a/arch/arm/mach-meson8/include/mach/hdmi_tx_reg.h
+++ b/arch/arm/mach-meson8/include/mach/hdmi_tx_reg.h
@@ -222,6 +222,9 @@ typedef struct {
 #define TX_CORE_CALIB_VALUE       TX_BASE_ADDR+0x0F7 
 
 #define TX_CORE_EDID_CONFIG_MORE  TX_BASE_ADDR+0x080
+#define TX_CORE_ALLOC_VSYNC_0     TX_BASE_ADDR+0x081
+#define TX_CORE_ALLOC_VSYNC_1     TX_BASE_ADDR+0x082
+#define TX_CORE_ALLOC_VSYNC_2     TX_BASE_ADDR+0x083
 
 // HDCP shadow register
 #define TX_HDCP_SHW_BKSV_0        TX_BASE_ADDR+0x100 
-- 
2.19.0

