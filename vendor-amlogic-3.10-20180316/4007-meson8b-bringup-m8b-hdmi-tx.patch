From 5182dc06678c911b51c35375a5a547a433f85138 Mon Sep 17 00:00:00 2001
From: "zongdong.jiao" <zongdong.jiao@amlogic.com>
Date: Tue, 6 May 2014 23:26:05 +0800
Subject: [PATCH 4007/5965] meson8b: bringup m8b hdmi tx

---
 arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c | 44 +++++++++++++++++--
 drivers/amlogic/display/vout/enc_clk_config.c | 24 +++++-----
 include/linux/amlogic/vout/enc_clk_config.h   |  2 +-
 3 files changed, 53 insertions(+), 17 deletions(-)

diff --git a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
index cde8b4b803d3..1bab28f3ae73 100755
--- a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
@@ -3042,6 +3042,7 @@ void HDMITX_Meson_Init(hdmitx_dev_t* hdmitx_device)
     hdmitx_device->HWOp.CntlPacket = hdmitx_cntl;
     hdmitx_device->HWOp.CntlConfig = hdmitx_cntl_config;
     hdmitx_device->HWOp.CntlMisc = hdmitx_cntl_misc;
+printk("%s[%d]\n", __func__, __LINE__);
                                                                   //     1=Map data pins from Venc to Hdmi Tx as RGB mode.
     // --------------------------------------------------------
     // Configure HDMI TX analog, and use HDMI PLL to generate TMDS clock
@@ -3049,13 +3050,48 @@ void HDMITX_Meson_Init(hdmitx_dev_t* hdmitx_device)
     // Enable APB3 fail on error
 //    WRITE_APB_REG(HDMI_CNTL_PORT, READ_APB_REG(HDMI_CNTL_PORT)|(1<<15)); //APB3 err_en
 //\\ TODO
-    aml_set_reg32_bits(P_PAD_PULL_UP_EN_REG1, 0, 16, 1);       // Disable GPIOH_0 internal pull-up register
-    aml_write_reg32(P_HHI_HDMI_CLK_CNTL, aml_read_reg32(P_HHI_HDMI_CLK_CNTL)| (1 << 8));
-    aml_write_reg32(P_HDMI_CTRL_PORT, aml_read_reg32(P_HDMI_CTRL_PORT)|(1<<15)); //APB3 err_en
-    hdmi_wr_reg(0x10, 0xff);
+    //aml_set_reg32_bits(P_PAD_PULL_UP_EN_REG1, 0, 16, 1);       // Disable GPIOH_0 internal pull-up register
+    //aml_write_reg32(P_HHI_HDMI_CLK_CNTL, aml_read_reg32(P_HHI_HDMI_CLK_CNTL)| (1 << 8));
+    //aml_write_reg32(P_HDMI_CTRL_PORT, aml_read_reg32(P_HDMI_CTRL_PORT)|(1<<15)); //APB3 err_en
+//    hdmi_wr_reg(0x10, 0xff);
+printk("%s[%d]\n", __func__, __LINE__);
+    aml_set_reg32_bits(P_HHI_HDMI_CLK_CNTL, 0x0, 9, 2);
+    aml_set_reg32_bits(P_HHI_HDMI_CLK_CNTL, 0x0, 0, 6);
+    aml_set_reg32_bits(P_HHI_HDMI_CLK_CNTL, 0x1, 8, 1);
+    aml_set_reg32_bits(P_HHI_GCLK_MPEG2, 0x3, 3, 2);
+    aml_set_reg32_bits(P_HHI_MEM_PD_REG0, 0x0, 8, 8);
+    aml_set_reg32_bits(P_HHI_VPU_MEM_PD_REG0, 0x0, 0, 32);
+    aml_set_reg32_bits(P_HHI_VPU_MEM_PD_REG1, 0x0, 0, 32);
+// Powerup VPU_HDMI
+    aml_write_reg32(P_AO_RTI_GEN_PWR_SLEEP0, aml_read_reg32(P_AO_RTI_GEN_PWR_SLEEP0) & (~(0x1<<8))); // [8] power on
+    aml_write_reg32(P_HHI_VPU_MEM_PD_REG0, 0x00000000 );
+    aml_write_reg32(P_HHI_VPU_MEM_PD_REG1, 0x00000000 );
+    aml_write_reg32(P_HHI_MEM_PD_REG0, aml_read_reg32(P_HHI_MEM_PD_REG0) & (~(0xff << 8))); // MEM-PD
+     
+    // Wait some time
+    msleep(2);
+
+    // Reset VIU + VENC
+    // Reset VENCI + VENCP + VDAC + VENCL
+    // Reset HDMI-APB + HDMI-SYS + HDMI-TX + HDMI-CEC
+    aml_write_reg32(P_RESET0_MASK, aml_read_reg32(P_RESET0_MASK) & (~((0x1 << 5) | (0x1<<10))));
+    aml_write_reg32(P_RESET4_MASK, aml_read_reg32(P_RESET4_MASK) & (~((0x1 << 6) | (0x1<<7) | (0x1<<9) | (0x1<<13))));
+    aml_write_reg32(P_RESET2_MASK, aml_read_reg32(P_RESET2_MASK) & (~((0x1 << 2) | (0x1<<3) | (0x1<<11) | (0x1<<15))));
+    aml_write_reg32(P_RESET2_REGISTER, ((0x1 << 2) | (0x1<<3) | (0x1<<11) | (0x1<<15)));
+    aml_write_reg32(P_RESET4_REGISTER, ((0x1 << 6) | (0x1<<7) | (0x1<<9) | (0x1<<13)));
+    aml_write_reg32(P_RESET0_REGISTER, ((0x1 << 5) | (0x1<<10)));
+    aml_write_reg32(P_RESET4_REGISTER, ((0x1 << 6) | (0x1<<7) | (0x1<<9) | (0x1<<13)));
+    aml_write_reg32(P_RESET2_REGISTER, ((0x1 << 2) | (0x1<<3) | (0x1<<11) | (0x1<<15)));
+    aml_write_reg32(P_RESET0_MASK, aml_read_reg32(P_RESET0_MASK) | ((0x1 << 5) | (0x1<<10)));
+    aml_write_reg32(P_RESET4_MASK, aml_read_reg32(P_RESET4_MASK) | ((0x1 << 6) | (0x1<<7) | (0x1<<9) | (0x1<<13)));
+    aml_write_reg32(P_RESET2_MASK, aml_read_reg32(P_RESET2_MASK) | ((0x1 << 2) | (0x1<<3) | (0x1<<11) | (0x1<<15)));
+
+    // Remove VPU_HDMI ISO
+    aml_write_reg32(P_AO_RTI_GEN_PWR_SLEEP0, aml_read_reg32(P_AO_RTI_GEN_PWR_SLEEP0) & (~(0x1<<9))); // [9] VPU_HDMI
 
     /**/    
     hdmi_hw_init(hdmitx_device);
+printk("%s[%d]\n", __func__, __LINE__);
 }    
 
 void hdmi_set_audio_para(int para)
diff --git a/drivers/amlogic/display/vout/enc_clk_config.c b/drivers/amlogic/display/vout/enc_clk_config.c
index 4678571058fc..377dfcca084e 100755
--- a/drivers/amlogic/display/vout/enc_clk_config.c
+++ b/drivers/amlogic/display/vout/enc_clk_config.c
@@ -31,7 +31,7 @@
 
 static void set_hpll_clk_out(unsigned clk)
 {
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     printk("config HPLL\n");
     aml_write_reg32(P_HHI_VID_PLL_CNTL2, 0x69c88000);
     aml_write_reg32(P_HHI_VID_PLL_CNTL3, 0xca563823);
@@ -41,13 +41,13 @@ static void set_hpll_clk_out(unsigned clk)
     aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c31e8b);
 #endif
     switch(clk){
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
         case 2970:
             aml_write_reg32(P_HHI_VID_PLL_CNTL2, 0x59c84e00);
             aml_write_reg32(P_HHI_VID_PLL_CNTL3, 0xce49c822);
             aml_write_reg32(P_HHI_VID_PLL_CNTL4, 0x4123b100);
             aml_write_reg32(P_HHI_VID_PLL_CNTL5, 0x00012385);
-            
+
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x6000043d);
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x4000043d);
             printk("waiting HPLL lock\n");
@@ -60,7 +60,7 @@ static void set_hpll_clk_out(unsigned clk)
             break;
 #endif
         case 1488:
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x6000043d);
     aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x4000043d);
     printk("waiting HPLL lock[%d]\n", __LINE__);
@@ -75,7 +75,7 @@ static void set_hpll_clk_out(unsigned clk)
 #endif
             break;
         case 1080:
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x6000042d);
     aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x4000042d);
 #endif
@@ -93,7 +93,7 @@ static void set_hpll_clk_out(unsigned clk)
             WRITE_CBUS_REG(HHI_VID_PLL_CNTL, 0x43e);
             break;
         case 1296:
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
             aml_write_reg32(P_HHI_VID_PLL_CNTL2, 0x59c88000);
             aml_write_reg32(P_HHI_VID_PLL_CNTL3, 0xca49b022);
             aml_write_reg32(P_HHI_VID_PLL_CNTL4, 0x0023b100);
@@ -106,7 +106,7 @@ static void set_hpll_clk_out(unsigned clk)
         default:
             break;
     }
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     // P_HHI_HDMI_PHY_CNTL1     bit[1]: enable clock    bit[0]: soft reset
 #define RESET_HDMI_PHY()                        \
     aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 3);   \
@@ -140,7 +140,7 @@ static void set_hpll_hdmi_od(unsigned div)
     }
 }
 
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
 static void set_hpll_lvds_od(unsigned div)
 {
     switch(div) {
@@ -169,7 +169,7 @@ int set_viu_path(unsigned viu_channel_sel, viu_type_e viu_type_sel)
     if((viu_channel_sel > 2) || (viu_channel_sel == 0))
         return -1;
 
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     printk("VPU_VIU_VENC_MUX_CTRL: 0x%x\n", aml_read_reg32(P_VPU_VIU_VENC_MUX_CTRL));
     if(viu_channel_sel == 1){
         aml_set_reg32_bits(P_VPU_VIU_VENC_MUX_CTRL, viu_type_sel, 0, 2);
@@ -214,7 +214,7 @@ static void set_vid_pll_div(unsigned div)
     // Gate enable
     WRITE_CBUS_REG_BITS(HHI_VID_DIVIDER_CNTL, 1, 16, 1);
 #endif
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     // Gate disable
     aml_set_reg32_bits(P_HHI_VID_DIVIDER_CNTL, 0, 16, 1);
     switch(div){
@@ -321,7 +321,7 @@ static enc_clk_val_t setting_enc_clk_val[] = {
     {VMODE_SVGA, 1058, 2, 1, VIU_ENCP, 10, 1, 2, 1, -1, -1, -1,  1,  1},
     {VMODE_XGA, 1085, 1, 1, VIU_ENCP, 5, 1, 1, 1, -1, -1, -1,  1,  1},
 #endif
-#ifdef CONFIG_ARCH_MESON8       // add hpll_lvds_od
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     {VMODE_480I,       1080, 4, 1, 1, VIU_ENCI,  5, 4, 2,-1,  2, -1, -1,  2,  -1},
     {VMODE_480CVBS,    1296, 4, 1, 1, VIU_ENCI,  6, 4, 2,-1,  2, -1, -1,  2,  -1},
     {VMODE_480P,       1080, 4, 1, 1, VIU_ENCP,  5, 4, 2, 1, -1, -1, -1,  1,  -1},
@@ -359,7 +359,7 @@ void set_vmode_clk(vmode_t mode)
     }
     set_viu_path(p_enc[j].viu_path, p_enc[j].viu_type);
     set_hpll_clk_out(p_enc[j].hpll_clk_out);
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     set_hpll_lvds_od(p_enc[j].hpll_lvds_od);
 #endif
     set_hpll_hdmi_od(p_enc[j].hpll_hdmi_od);
diff --git a/include/linux/amlogic/vout/enc_clk_config.h b/include/linux/amlogic/vout/enc_clk_config.h
index 6199cd11083d..821f20e5a236 100755
--- a/include/linux/amlogic/vout/enc_clk_config.h
+++ b/include/linux/amlogic/vout/enc_clk_config.h
@@ -18,7 +18,7 @@ typedef struct enc_clk_val{
     vmode_t mode;
     unsigned hpll_clk_out;
     unsigned hpll_hdmi_od;
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
     unsigned hpll_lvds_od;
 #endif
     unsigned viu_path;
-- 
2.19.0

