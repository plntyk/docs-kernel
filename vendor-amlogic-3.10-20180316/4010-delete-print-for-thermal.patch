From baae31edfce069b9f9a3276ee265048ff22b1004 Mon Sep 17 00:00:00 2001
From: xu xing <xing.xu@amlogic.com>
Date: Wed, 7 May 2014 14:52:58 +0800
Subject: [PATCH 4010/5965] delete print for thermal

---
 drivers/amlogic/thermal/amlogic_thermal.c | 2 +-
 drivers/thermal/cpu_cooling.c             | 8 ++++----
 drivers/thermal/cpucore_cooling.c         | 6 +++---
 drivers/thermal/gpu_cooling.c             | 8 ++++----
 drivers/thermal/gpucore_cooling.c         | 6 +++---
 drivers/thermal/step_wise.c               | 2 +-
 drivers/thermal/thermal_core.c            | 2 +-
 7 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/drivers/amlogic/thermal/amlogic_thermal.c b/drivers/amlogic/thermal/amlogic_thermal.c
index f5d8f4bfe2a2..07f35b7e7b09 100755
--- a/drivers/amlogic/thermal/amlogic_thermal.c
+++ b/drivers/amlogic/thermal/amlogic_thermal.c
@@ -352,7 +352,7 @@ static int amlogic_get_temp(struct thermal_zone_device *thermal,
 	*temp=aa;
 #else
 	*temp = (unsigned long)get_cpu_temp();
-	printk(KERN_DEBUG "========  temp=%ld\n",*temp);
+	pr_debug( "========  temp=%ld\n",*temp);
 #endif
 	return 0;
 }
diff --git a/drivers/thermal/cpu_cooling.c b/drivers/thermal/cpu_cooling.c
index 5dae03e22d7e..fa47f87c9e91 100755
--- a/drivers/thermal/cpu_cooling.c
+++ b/drivers/thermal/cpu_cooling.c
@@ -276,7 +276,7 @@ static int cpufreq_apply_cooling(struct cpufreq_cooling_device *cpufreq_device,
 	struct cpumask *mask = &cpufreq_device->allowed_cpus;
 	unsigned int cpu = cpumask_any(mask);
 
-	printk(KERN_DEBUG "cpufreq_device->cpufreq_state=%d,cooling_state=%ld\n",cpufreq_device->cpufreq_state,cooling_state);
+	pr_debug("cpufreq_device->cpufreq_state=%d,cooling_state=%ld\n",cpufreq_device->cpufreq_state,cooling_state);
 	/* Check if the old cooling action is same as new cooling action */
 	//if (cpufreq_device->cpufreq_state == cooling_state)
 		//return 0;
@@ -321,13 +321,13 @@ static int cpufreq_thermal_notifier(struct notifier_block *nb,
 		max_freq = notify_device->cpufreq_val;
 	else
 		return 0;
-	printk(KERN_DEBUG "policy->max=%d,max_freq=%ld\n",policy->max,max_freq);
+	pr_debug("policy->max=%d,max_freq=%ld\n",policy->max,max_freq);
 	/* Never exceed user_policy.max */
 	if (max_freq > policy->user_policy.max)
 		max_freq = policy->user_policy.max;
 	if (policy->max != max_freq)
 		cpufreq_verify_within_limits(policy, 0, max_freq);
-	printk(KERN_DEBUG "policy->max=%d\n",policy->max);
+	pr_debug(KERN_DEBUG "policy->max=%d\n",policy->max);
 	return 0;
 }
 
@@ -376,7 +376,7 @@ static int cpufreq_get_cur_state(struct thermal_cooling_device *cdev,
 				 unsigned long *state)
 {
 	*state=cpufreq_cooling_get_level(0,cpufreq_quick_get_max(0));
-	printk(KERN_DEBUG "*state=%ld\n",*state);
+	pr_debug( "*state=%ld\n",*state);
 	return 0;
 }
 
diff --git a/drivers/thermal/cpucore_cooling.c b/drivers/thermal/cpucore_cooling.c
index c0fab873069a..8d847faec7dd 100755
--- a/drivers/thermal/cpucore_cooling.c
+++ b/drivers/thermal/cpucore_cooling.c
@@ -104,7 +104,7 @@ static int cpucore_get_max_state(struct thermal_cooling_device *cdev,
 {
 	struct cpucore_cooling_device *cpucore_device = cdev->devdata;
 	*state=cpucore_device->max_cpu_core_num;
-	printk(KERN_DEBUG "max cpu core=%d\n",*state);
+	pr_debug( "max cpu core=%d\n",*state);
 	return 0;
 }
 
@@ -123,7 +123,7 @@ static int cpucore_get_cur_state(struct thermal_cooling_device *cdev,
 {
 	struct cpucore_cooling_device *cpucore_device = cdev->devdata;
 	*state=cpucore_device->cpucore_state;
-	printk(KERN_DEBUG "current state=%d\n",*state);
+	pr_debug( "current state=%d\n",*state);
 	return 0;
 }
 
@@ -144,7 +144,7 @@ static int cpucore_set_cur_state(struct thermal_cooling_device *cdev,
 	int set_max_num;
 	cpucore_device->cpucore_state=state;
 	set_max_num=cpucore_device->max_cpu_core_num-state;
-	printk(KERN_DEBUG "need set max cpu num=%d,state=%d\n",set_max_num,state);
+	pr_debug( "need set max cpu num=%d,state=%d\n",set_max_num,state);
 	cpufreq_set_max_cpu_num(set_max_num);
 	return 0;
 }
diff --git a/drivers/thermal/gpu_cooling.c b/drivers/thermal/gpu_cooling.c
index e61f4d21b45b..2dc6ab3a7386 100755
--- a/drivers/thermal/gpu_cooling.c
+++ b/drivers/thermal/gpu_cooling.c
@@ -91,7 +91,7 @@ static int gpufreq_get_max_state(struct thermal_cooling_device *cdev,
 	struct gpufreq_cooling_device *gpufreq_device = cdev->devdata;
 	if(gpufreq_device->get_gpu_max_level)
 		*state = (unsigned long)(gpufreq_device->get_gpu_max_level());
-	printk(KERN_DEBUG "default max state=%ld\n",*state);
+	pr_debug( "default max state=%ld\n",*state);
 	return 0;
 }
 
@@ -112,7 +112,7 @@ static int gpufreq_get_cur_state(struct thermal_cooling_device *cdev,
 	//*state = gpufreq_device->gpufreq_state;
 	if(gpufreq_device->get_gpu_current_max_level)
 		*state = gpufreq_device->get_gpu_current_max_level();
-	printk(KERN_DEBUG "current max state=%ld\n",*state);
+	pr_debug( "current max state=%ld\n",*state);
 	return 0;
 }
 
@@ -132,14 +132,14 @@ static int gpufreq_set_cur_state(struct thermal_cooling_device *cdev,
 	struct gpufreq_cooling_device *gpufreq_device = cdev->devdata;
 	unsigned long max_state;
 	int ret;
-	printk(KERN_DEBUG "state=%ld,gpufreq_device->gpufreq_state=%d\n",state,gpufreq_device->gpufreq_state);
+	pr_debug( "state=%ld,gpufreq_device->gpufreq_state=%d\n",state,gpufreq_device->gpufreq_state);
 	//if (gpufreq_device->gpufreq_state == state)
 		//return 0;
 	gpufreq_device->gpufreq_state = state;
 	ret=gpufreq_get_max_state(cdev,&max_state);
 	state=max_state-1-state;
 	
-	printk(KERN_DEBUG "state=%ld,gpufreq_device->gpufreq_state=%d\n",state,gpufreq_device->gpufreq_state);
+	pr_debug( "state=%ld,gpufreq_device->gpufreq_state=%d\n",state,gpufreq_device->gpufreq_state);
 	if(state>=0 && state<=max_state){
 		if (gpufreq_device->set_gpu_freq_idx)
 			gpufreq_device->set_gpu_freq_idx((unsigned int)state);
diff --git a/drivers/thermal/gpucore_cooling.c b/drivers/thermal/gpucore_cooling.c
index f893429c80a2..870482a61f83 100755
--- a/drivers/thermal/gpucore_cooling.c
+++ b/drivers/thermal/gpucore_cooling.c
@@ -104,7 +104,7 @@ static int gpucore_get_max_state(struct thermal_cooling_device *cdev,
 {
 	struct gpucore_cooling_device *gpucore_device = cdev->devdata;
 	*state=gpucore_device->max_gpu_core_num;
-	printk( "max Gpu core=%d\n",*state);
+	pr_debug( "max Gpu core=%d\n",*state);
 	return 0;
 }
 
@@ -123,7 +123,7 @@ static int gpucore_get_cur_state(struct thermal_cooling_device *cdev,
 {
 	struct gpucore_cooling_device *gpucore_device = cdev->devdata;
 	*state=gpucore_device->gpucore_state;
-	printk(KERN_DEBUG "current state=%d\n",*state);
+	pr_debug( "current state=%d\n",*state);
 	return 0;
 }
 
@@ -145,7 +145,7 @@ static int gpucore_set_cur_state(struct thermal_cooling_device *cdev,
 	gpucore_device->gpucore_state=state;
 	set_max_num=gpucore_device->max_gpu_core_num-state;
 	gpucore_device->set_max_pp_num((unsigned int)set_max_num);
-	printk(KERN_DEBUG "need set max cpu num=%d,state=%d\n",set_max_num,state);
+	pr_debug( "need set max cpu num=%d,state=%d\n",set_max_num,state);
 	return 0;
 }
 
diff --git a/drivers/thermal/step_wise.c b/drivers/thermal/step_wise.c
index db47fef97622..3c21a3ce7e17 100755
--- a/drivers/thermal/step_wise.c
+++ b/drivers/thermal/step_wise.c
@@ -95,7 +95,7 @@ static unsigned long get_target_state(struct thermal_instance *instance,
 		break;
 	}
 
-	printk(KERN_DEBUG "instance:%s,trend=%d,throttle=%d,instace->target=%ld,cur_state=%d,next_target=%d\n",
+	pr_debug( "instance:%s,trend=%d,throttle=%d,instace->target=%ld,cur_state=%d,next_target=%d\n",
 		instance->name,
 		trend,
 		throttle,
diff --git a/drivers/thermal/thermal_core.c b/drivers/thermal/thermal_core.c
index 417a8d20bb8e..a50fa5b984aa 100755
--- a/drivers/thermal/thermal_core.c
+++ b/drivers/thermal/thermal_core.c
@@ -1446,7 +1446,7 @@ void thermal_cdev_update(struct thermal_cooling_device *cdev)
 			continue;
 		if (instance->target > target)
 			target = instance->target;
-		printk(KERN_DEBUG "instance->target=%d,target=%d\n",instance->target,target);
+		pr_debug( "instance->target=%d,target=%d\n",instance->target,target);
 	}
 	mutex_unlock(&cdev->lock);
 	cdev->ops->set_cur_state(cdev, target);
-- 
2.19.0

