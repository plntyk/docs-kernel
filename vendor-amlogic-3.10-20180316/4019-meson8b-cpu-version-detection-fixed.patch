From e21f1efee9fddea61dfb0bb43fc94192fff4515d Mon Sep 17 00:00:00 2001
From: Victor Wan <victor.wan@amlogic.com>
Date: Thu, 8 May 2014 21:49:33 +0800
Subject: [PATCH 4019/5965] meson8b: cpu version detection fixed

---
 arch/arm/mach-meson8b/clock.c |  1 -
 arch/arm/mach-meson8b/cpu.c   | 30 +++++++++++++++++++-----------
 arch/arm/mach-meson8b/smp.c   |  2 +-
 3 files changed, 20 insertions(+), 13 deletions(-)
 mode change 100644 => 100755 arch/arm/mach-meson8b/cpu.c

diff --git a/arch/arm/mach-meson8b/clock.c b/arch/arm/mach-meson8b/clock.c
index 82c264295b22..d4a2f28279b6 100755
--- a/arch/arm/mach-meson8b/clock.c
+++ b/arch/arm/mach-meson8b/clock.c
@@ -1755,7 +1755,6 @@ static int __init meson_clock_init(void)
 				"pll_sys",
 				"pll_fixed",
 				"pll_vid",
-				"pll_hpll",
 				"pll_ddr",
 				"a9_clk",
 				"clk81",
diff --git a/arch/arm/mach-meson8b/cpu.c b/arch/arm/mach-meson8b/cpu.c
old mode 100644
new mode 100755
index 8529a9c9a58a..b733a06a2c69
--- a/arch/arm/mach-meson8b/cpu.c
+++ b/arch/arm/mach-meson8b/cpu.c
@@ -1,7 +1,7 @@
 /*
  * arch/arm/mach-meson8b/cpu.c
  *
- * Copyright (C) 2013 Amlogic, Inc.
+ * Copyright (C) 2014 Amlogic, Inc.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -30,23 +30,31 @@
 static int meson_cpu_version[MESON_CPU_VERSION_LVL_MAX];
 int __init meson_cpu_version_init(void)
 {
-	unsigned int  *version_map;	
-	unsigned int version;	
+	unsigned int version,ver;
+	unsigned int  *version_map;
 
 	meson_cpu_version[MESON_CPU_VERSION_LVL_MAJOR] = 
 		aml_read_reg32(P_ASSIST_HW_REV);
 
 	version_map = (unsigned int *)IO_BOOTROM_BASE;
-	version = version_map[1];
-	printk(KERN_INFO "chip version=%x\n", version);	
+	meson_cpu_version[MESON_CPU_VERSION_LVL_MISC] = version_map[1];
+
+	version = aml_read_reg32(P_METAL_REVISION);
 	switch (version) {		
-		/*case 0x000025e2:			
-			meson_cpu_version[MESON_CPU_VERSION_LVL_MINOR] = 0xA;		
-			break;	*/	
-		default:/*changed?*/			
-			meson_cpu_version[MESON_CPU_VERSION_LVL_MINOR] = 0xA;
+		case 0x11111111:
+			ver = 0xA;
+			break;
+		default:/*changed?*/
+			ver = 0xB;
 			break;
-	}	
+	}
+	meson_cpu_version[MESON_CPU_VERSION_LVL_MINOR] = ver;
+	printk(KERN_INFO "Meson chip version = Rev%X (%X:%X - %X:%X)\n", ver,
+		meson_cpu_version[MESON_CPU_VERSION_LVL_MAJOR],
+		meson_cpu_version[MESON_CPU_VERSION_LVL_MINOR],
+		meson_cpu_version[MESON_CPU_VERSION_LVL_PACK],
+		meson_cpu_version[MESON_CPU_VERSION_LVL_MISC]
+		);
 
 	return 0;
 }
diff --git a/arch/arm/mach-meson8b/smp.c b/arch/arm/mach-meson8b/smp.c
index 3d23fbc988fc..a1374f1294d3 100755
--- a/arch/arm/mach-meson8b/smp.c
+++ b/arch/arm/mach-meson8b/smp.c
@@ -127,7 +127,7 @@ int __cpuinit meson_boot_secondary(unsigned int cpu, struct task_struct *idle)
 	 * the holding pen - release it, then wait for it to flag
 	 * that it has been released by resetting pen_release.
 	 */
-	printk("write pen_release: %d\n",cpu_logical_map(cpu));
+	//printk("write pen_release: %d\n",cpu_logical_map(cpu));
 	write_pen_release(cpu_logical_map(cpu));
 
 #ifndef CONFIG_MESON_TRUSTZONE
-- 
2.19.0

