From bfd211db97e42f107b46d71d4bebc748a1b490c8 Mon Sep 17 00:00:00 2001
From: "chunhai.guo" <chunhai.guo@amlogic.com>
Date: Mon, 12 May 2014 16:15:49 +0800
Subject: [PATCH 4054/5965] eMMC HS200 mode support for SDHC controller

Add SDHC clock tuning to support eMMC HS200 mode.
Add HS200 capability in DTD to enable HS200 mode.
---
 arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd | 133 +++++++++---------
 drivers/amlogic/mmc/aml_sdhc_m8.c             |  29 ++--
 drivers/amlogic/mmc/amlsd.h                   |   2 +-
 3 files changed, 83 insertions(+), 81 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd
index d2ce08c4d560..834cc056dad4 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200b_1G.dtd
@@ -584,14 +584,15 @@ sdio{
 //            status = "okay";
 //            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
-//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
 //            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps2 = "MMC_CAP2_HS200_1_8V_SDR";
 //            f_min = <300000>;
-//            f_max = <50000000>;
+//            f_max = <100000000>;
 //            max_req_size = <0x20000>;          /**128KB*/
 //            gpio_dat3 = "BOOT_3";
 //            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
-//        };   
+//        };  
 
 //$$ DEVICE="sdio"
 //$$ L2 PROP_STR = "status"
@@ -1548,69 +1549,71 @@ sdio{
             amlogic,pullup=<1>;
             amlogic,pullupen=<1>;
         };
+        
+        sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins{
+            amlogic,setmask=<2 0x00000030>;         /*sdhc b*/
+            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+                                4 0x7c000000        /*sdhc c*/
+                                2 0x0000fc00        /*sdio b*/
+                                8 0x00000600>;      /*UART*/
+            amlogic,pins = "CARD_2","CARD_3"; /* CARD_2:CLK, CARD_3:CMD */
+            amlogic,enable-output=<1>; /* 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+        sdhc_sd_all_pins:sdhc_sd_all_pins{
+            amlogic,setmask=<2 0x000000f0>;         /*sdhc b*/
+            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+                                4 0x7c000000        /*sdhc c*/
+                                2 0x0000fc00        /*sdio b*/
+                                8 0x00000600>;      /*UART*/
+            amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
+            amlogic,enable-output=<1>; /* 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
 
-//        sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins{
-//            amlogic,setmask=<2 0x00000030>;         /*sdhc b*/
-//            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
-//                                4 0x7c000000        /*sdhc c*/
-//                                2 0x0000fc00        /*sdio b*/
-//                                8 0x00000600>;      /*UART*/
-//            amlogic,pins = "CARD_2","CARD_3"; /* CARD_2:CLK, CARD_3:CMD */
-//            amlogic,enable-output=<1>; /* 0:output, 1:input */
-//            amlogic,pullup=<1>;
-//            amlogic,pullupen=<1>;
-//        };
-//        sdhc_sd_all_pins:sdhc_sd_all_pins{
-//            amlogic,setmask=<2 0x000000f0>;         /*sdhc b*/
-//            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
-//                                4 0x7c000000        /*sdhc c*/
-//                                2 0x0000fc00        /*sdio b*/
-//                                8 0x00000600>;      /*UART*/
-//            amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
-//            amlogic,enable-output=<1>; /* 0:output, 1:input */
-//            amlogic,pullup=<1>;
-//            amlogic,pullupen=<1>;
-//        };
-//        sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins{
-//            amlogic,setmask=<4 0x0c000000>;         /*bit[26-27] */
-//            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
-//                                5 0x00007c00        /*sdhc a*/
-//                                6 0x3f000000>;        /*sdio c*/
-//            amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
-//            amlogic,enable-output=<1>; /** 0:output, 1:input */
-//            amlogic,pullup=<1>;
-//            amlogic,pullupen=<1>;
-//        };
-//        sdhc_emmc_all_pins:sdhc_emmc_all_pins{
-//            amlogic,setmask=<4 0x7c000000>;         /*sdhc c*/
-//            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
-//                                5 0x00007c00        /*sdhc a*/
-//                                6 0x3f000000>;        /*sdio c*/
-//            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4","BOOT_5","BOOT_6","BOOT_7","BOOT_16","BOOT_17";
-//            amlogic,enable-output=<1>; /** 0:output, 1:input */
-//            amlogic,pullup=<1>;
-//            amlogic,pullupen=<1>;
-//        };
-//        sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins{
-//            amlogic,setmask=<5 0x00000c00>;         /*sdhc a bit[10-11] */
-//            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
-//                                4 0x7c000000        /*sdhc c */
-//                                8 0x0000003f>;        /*sdio a*/
-//            amlogic,pins = "GPIOX_8","GPIOX_9"; /** BOOT_16:CMD, BOOT_17:CLK */
-//            amlogic,enable-output=<1>; /** 0:output, 1:input */
-//            amlogic,pullup=<1>;
-//            amlogic,pullupen=<1>;
-//        };
-//        sdhc_sdio_all_pins:sdhc_sdio_all_pins{
-//            amlogic,setmask=<5 0x00006c00>;         /*sdhc a*/
-//            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
-//                                4 0x7c000000        /*sdhc c */
-//                                8 0x0000003f>;        /*sdio a*/
-//            amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
-//            amlogic,enable-output=<1>; /** 0:output, 1:input */
-//            amlogic,pullup=<1>;
-//            amlogic,pullupen=<1>;
-//        };
+        sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins{
+            amlogic,setmask=<4 0x0c000000>;         /*bit[26-27] */
+            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+                                5 0x00007c00        /*sdhc a*/
+                                6 0x3f000000>;        /*sdio c*/
+            amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
+            amlogic,enable-output=<1>; /** 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+        sdhc_emmc_all_pins:sdhc_emmc_all_pins{
+            amlogic,setmask=<4 0x7c000000>;         /*sdhc c*/
+            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+                                5 0x00007c00        /*sdhc a*/
+                                6 0x3f000000>;        /*sdio c*/
+            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4","BOOT_5","BOOT_6","BOOT_7","BOOT_16","BOOT_17";
+            amlogic,enable-output=<1>; /** 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+
+        sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins{
+            amlogic,setmask=<5 0x00000c00>;         /*sdhc a bit[10-11] */
+            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+                                4 0x7c000000        /*sdhc c */
+                                8 0x0000003f>;        /*sdio a*/
+            amlogic,pins = "GPIOX_8","GPIOX_9"; /** BOOT_16:CMD, BOOT_17:CLK */
+            amlogic,enable-output=<1>; /** 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+        sdhc_sdio_all_pins:sdhc_sdio_all_pins{
+            amlogic,setmask=<5 0x00006c00>;         /*sdhc a*/
+            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+                                4 0x7c000000        /*sdhc c */
+                                8 0x0000003f>;        /*sdio a*/
+            amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
+            amlogic,enable-output=<1>; /** 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
 
 //$$ MATCH "I2C_AO_pin_match" = "&ao_i2c_master"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
diff --git a/drivers/amlogic/mmc/aml_sdhc_m8.c b/drivers/amlogic/mmc/aml_sdhc_m8.c
index 76ea26053766..524c6afad850 100755
--- a/drivers/amlogic/mmc/aml_sdhc_m8.c
+++ b/drivers/amlogic/mmc/aml_sdhc_m8.c
@@ -342,9 +342,9 @@ static int aml_sdhc_execute_tuning (struct mmc_host *mmc, u32 opcode)
 	struct aml_tuning_data tuning_data;
 	int err = -ENOSYS;
 
-    if (pdata->port != PORT_SDHC_A) { // debug
-        return 0;
-    }
+    // if ((pdata->port != PORT_SDHC_A) && (pdata->port != PORT_SDHC_C)) { // debug
+        // return 0;
+    // }
 
     if (pdata->is_tuned) { // have been tuned
         writel(pdata->tune_phase, host->base + SDHC_CLK2);
@@ -354,18 +354,17 @@ static int aml_sdhc_execute_tuning (struct mmc_host *mmc, u32 opcode)
         return 0;
     }
 
-	// if (opcode == MMC_SEND_TUNING_BLOCK_HS200) {
-		// if (mmc->ios.bus_width == MMC_BUS_WIDTH_8) {
-			// tuning_data.blk_pattern = tuning_blk_pattern_8bit;
-			// tuning_data.blksz = sizeof(tuning_blk_pattern_8bit);
-		// } else if (mmc->ios.bus_width == MMC_BUS_WIDTH_4) {
-			// tuning_data.blk_pattern = tuning_blk_pattern_4bit;
-			// tuning_data.blksz = sizeof(tuning_blk_pattern_4bit);
-		// } else {
-			// return -EINVAL;
-		// }
-	// } else 
-    if (opcode == MMC_SEND_TUNING_BLOCK) {
+    if (opcode == MMC_SEND_TUNING_BLOCK_HS200) {
+        if (mmc->ios.bus_width == MMC_BUS_WIDTH_8) {
+            tuning_data.blk_pattern = tuning_blk_pattern_8bit;
+            tuning_data.blksz = sizeof(tuning_blk_pattern_8bit);
+        } else if (mmc->ios.bus_width == MMC_BUS_WIDTH_4) {
+            tuning_data.blk_pattern = tuning_blk_pattern_4bit;
+            tuning_data.blksz = sizeof(tuning_blk_pattern_4bit);
+        } else {
+            return -EINVAL;
+        }
+    } else if (opcode == MMC_SEND_TUNING_BLOCK) {
 		tuning_data.blk_pattern = tuning_blk_pattern_4bit;
 		tuning_data.blksz = sizeof(tuning_blk_pattern_4bit);
 	} else {
diff --git a/drivers/amlogic/mmc/amlsd.h b/drivers/amlogic/mmc/amlsd.h
index 826a660d4ff8..d06699ea80f1 100755
--- a/drivers/amlogic/mmc/amlsd.h
+++ b/drivers/amlogic/mmc/amlsd.h
@@ -7,7 +7,7 @@
 #define AML_MMC_MAJOR_VERSION   1
 #define AML_MMC_MINOR_VERSION   05
 #define AML_MMC_VERSION         ((AML_MMC_MAJOR_VERSION << 8) | AML_MMC_MINOR_VERSION)
-#define AML_MMC_VER_MESSAGE     "2014-01-16: sdhc eMMC run at 8bit@50MHz ok"
+#define AML_MMC_VER_MESSAGE     "2014-05-12: sdhc eMMC tuning support"
 
 extern unsigned sdhc_debug;
 extern unsigned sdio_debug;
-- 
2.19.0

