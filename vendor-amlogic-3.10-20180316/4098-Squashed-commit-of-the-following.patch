From 8a836b0989de1bff6d4ddccccb4203625b73a40c Mon Sep 17 00:00:00 2001
From: Sandy lUo <sandy.luo@amlogic.com>
Date: Thu, 15 May 2014 14:28:45 +0800
Subject: [PATCH 4098/5965] Squashed commit of the following:

commit 4d02dec90da53444ce21ebf8bce76d67fa7bec4b
Author: kele.bai <kele.bai@amlogic.com>
Date:   Wed Apr 30 15:00:51 2014 +0800

    PD #90982:clear unreg_req_flag2 only in timer irq.

commit 29c9b03d28e601da173748a1b0f1e1f1745d3fb2
Author: sunny.luo <sunny.luo@amlogic.com>
Date:   Thu May 15 11:09:10 2014 +0800

    M8 baby m101/m102 touch can work

commit 96ff9b4a8e6b8ddfba190287a1a826c787719cff
Merge: 07cae83 72ca229
Author: tao.dong <tao.dong@amlogic.com>
Date:   Thu May 15 10:57:17 2014 +0800

    Merge branch 'amlogic-3.10-bringup' of git://10.8.9.5/kernel/common into amlogic-3.10-bringup

commit 07cae83e0d31c90cb007abd4a4baef29329168ad
Author: kele.bai <kele.bai@amlogic.com>
Date:   Wed May 14 22:01:03 2014 +0800

    PD #91784: protect de post process.

commit 72ca2290be461bc3b0be905f9c6739ff5c637934
Author: lei.qian <Lei.Qian@amlogic.com>
Date:   Thu May 15 10:10:45 2014 +0800

    [m200]: merge EMMC, PMU3, framebuffer

commit 9ed54d4dc6b6f44af8ada077b440b4ebb7e22b42
Author: kele.bai <kele.bai@amlogic.com>
Date:   Wed May 14 15:37:07 2014 +0800

    PD #91784:add protect for normal di post mtnp.

commit 31f1286ae5e194a7577511339ffc7bc34e6297ee
Author: timyao <tim.yao@amlogic.com>
Date:   Wed May 14 18:10:30 2014 -0700

    PD #90783-7 Fix HEVC vframe PTS settings to use lookup value for AV sync control.

commit e995f696401dde7072edf842db73b901ef8bb3a5
Author: zhenfei.li <zhenfei.li@amlogic>
Date:   Wed May 14 19:23:02 2014 +0800

    m8 baby M101:camera can work

commit 493acd494d3cef3b6e4cb7574beddb13b1107fe0
Author: alex.deng <alex.deng@amlogic.com>
Date:   Wed May 14 16:38:37 2014 +0800

    m8 baby m102:g-sensor MC3230 can work

commit aa3b57c5def099c74e438eb64f54232d96c0c1c4
Author: Evoke Zhang <evoke.zhang@amlogic.com>
Date:   Wed May 14 15:01:36 2014 +0800

    m8 baby m102:LVDS can work

commit 0ed644d7a2ca525bb62d56501ab48e40cd6731b0
Author: benlong.zhou <benlong.zhou@amlogic.com>
Date:   Thu May 8 17:26:08 2014 +0800

    PD #91607: thermal/cvbs support new efuse version

    Thermal support v2,v5
    CVBS support v1,v2,v5

    Conflicts:

    	drivers/amlogic/input/saradc/saradc.c

commit 74a3cdb2a13b731dfff58850489057a35ff192b7
Author: timyao <tim.yao@amlogic.com>
Date:   Tue May 13 19:31:33 2014 -0700

    PD #90783-6 Fix amstream bufs prints for HEVC port.

commit 5b3baca57c032748095990f5a9fe15e14950d9a7
Author: timyao <tim.yao@amlogic.com>
Date:   Tue May 13 21:08:30 2014 -0700

    PD #90783-5 Fix HEVC stream buffer end address setting.

commit cd3d20421f0e4aac2d50fc77cd1ca6ef88af713d
Author: Rain Zhang-CA <rainzhang@wonton.(none)>
Date:   Tue May 13 18:26:03 2014 -0700

    PD #90783-4 HEVC decoder supports non-seamless play.

commit adb315207b928d85b8d199b71485c9dc4058a8bd
Author: zhenfei.li <zhenfei.li@amlogic>
Date:   Wed May 14 11:18:54 2014 +0800

    m101:camera can work

commit d912587e258c497b5b8eab519811b9becb4e6f69
Author: chunhai.guo <chunhai.guo@amlogic.com>
Date:   Tue May 13 16:54:49 2014 +0800

    PD #91161: Avoid interference of voltage jitter while card is been inserted
---
 .../boot/dts/amlogic/meson8b_m101_512M.dtd    |  188 +-
 arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd |  629 +-
 arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd |  382 +-
 arch/arm/configs/meson8b_defconfig            |    7 +
 drivers/amlogic/amports/amstream.c            |   41 +-
 .../amlogic/amports/m8/ucode/h265/vh265_mc.c  |  979 +--
 drivers/amlogic/amports/ptsserv.c             |  103 +-
 drivers/amlogic/amports/streambuf.c           |    2 +-
 drivers/amlogic/amports/tsdemux.c             |    2 +-
 drivers/amlogic/amports/vh265.c               |   54 +-
 drivers/amlogic/camera/common/cam_prober.c    |   15 +-
 drivers/amlogic/deinterlace/deinterlace.c     |   16 +-
 drivers/amlogic/display/vout/edp_drv.c        |    2 +-
 drivers/amlogic/display/vout/edp_drv.h        |    2 +-
 drivers/amlogic/display/vout/lcdoutc.c        |  517 +-
 drivers/amlogic/display/vout/tvconf.c         |    2 +-
 drivers/amlogic/display/vout/tvoutc.c         |   30 +-
 drivers/amlogic/efuse/efuse_hw.c              |   19 +-
 drivers/amlogic/input/saradc/saradc.c         |   32 +-
 drivers/amlogic/input/touchscreen/Makefile    |    1 +
 .../input/touchscreen/gslx680/Makefile        |    9 +
 .../touchscreen/gslx680/amlogic_gslX680.c     | 1252 ++++
 .../input/touchscreen/gslx680/gsl_point_id    |  Bin 0 -> 22072 bytes
 .../input/touchscreen/gslx680/main_1680E.h    | 5385 +++++++++++++++++
 .../input/touchscreen/gslx680/main_3670.h     | 5253 ++++++++++++++++
 drivers/amlogic/mmc/amlsd.c                   |   24 +-
 drivers/amlogic/thermal/amlogic_thermal.c     |   14 +-
 include/linux/amlogic/amports/canvas.h        |    4 +-
 include/linux/amlogic/saradc.h                |    7 +-
 include/linux/amlogic/vout/lcdoutc.h          |   15 +-
 30 files changed, 13649 insertions(+), 1337 deletions(-)
 create mode 100755 drivers/amlogic/input/touchscreen/gslx680/Makefile
 create mode 100755 drivers/amlogic/input/touchscreen/gslx680/amlogic_gslX680.c
 create mode 100755 drivers/amlogic/input/touchscreen/gslx680/gsl_point_id
 create mode 100755 drivers/amlogic/input/touchscreen/gslx680/main_1680E.h
 create mode 100755 drivers/amlogic/input/touchscreen/gslx680/main_3670.h

diff --git a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
index 9a65dee72ae0..bb06dc048f41 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
@@ -210,14 +210,17 @@ void root_func(){
 //$$ L2 PROP_U32 2 = "reg"
 //$$ L2 PROP_U32 = "irq"
 //$$ L2 PROP_U32 = "vdin_id"
-//    vdin0{
-//       compatible = "amlogic,vdin";
-//        dev_name = "vdin0";
-//        status = "ok";
-//	 reserve-memory = <0x04000000>;
-//        irq = <115>;
-//        vdin_id = <0>;
-//	};
+    vdin0{
+        compatible = "amlogic,vdin";
+        dev_name = "vdin0";
+        status = "ok";
+	reserve-memory = <0x04000000>;
+	camera_size = <1600 1200>;//camera is gc2035,the picture resolution is 1600x1200;so 1600x1200x2x4=16M
+	 reserve-iomap = "true";
+        irq = <115>;
+        vdin_id = <0>;
+	};
+
 	
 //$$ DEVICE="vdin1"
 //$$ L2 PROP_STR = "status"
@@ -254,13 +257,13 @@ void root_func(){
 //$$ MODULE = "DISP&MM-Video Input Manager"
 //$$ DEVICE="vm"
 //$$ L2 PROP_STR = "status"
-//    vm{
-//		compatible = "amlogic,vm";
-//		dev_name = "vm.0";
-//		status = "okay";
-//		reserve-memory = <0x01800000>;
-//		reserve-iomap = "true";
-//	};
+    vm{
+		compatible = "amlogic,vm";
+		dev_name = "vm.0";
+		status = "okay";
+		reserve-memory = <0x01800000>;
+		reserve-iomap = "true";
+	};
 
 /// ***************************************************************************************
 ///	-	ION
@@ -481,8 +484,14 @@ void root_func(){
 		#size-cells = <0>;
 		use_pio = <0>;
 		master_i2c_speed = <300000>;
+		i2c@40{
+			compatible = "amlogic,gslX680new";
+			status = "okay";
+			reg = <0x40>;
+		};
 	};
 	
+	
 //$$ DEVICE="I2C_B"
 //$$ L2 PROP_STR = "status"
 //$$ L3 PROP_U32 2="reg"
@@ -532,7 +541,7 @@ void root_func(){
 		reg = <0xc1108d20 0x20>;
 		device_id = <4>;
 		pinctrl-names="default";
-//		pinctrl-0=<&d_i2c_master>;
+		pinctrl-0=<&d_i2c_master>;
 		#address-cells = <1>;
 		#size-cells = <0>;
 		use_pio = <0>;
@@ -1072,71 +1081,7 @@ void root_func(){
 ///	-	Touch
 //$$ MODULE="Touch"
 //$$ DEVICE = "touch"
-//$$ L2 PROP_STR = "status"
-    touch{
-        compatible = "amlogic,aml_touch";
-        status = "okay";
-        #address-cells = <1>;
-        #size-cells = <0>;
-	
-//$$ DEVICE = "touch_ft5x06"
-//$$ L2 PROP_STR = "status"
-//$$ L3 PROP_STR = "i2c_bus"
-//$$ L3 PROP_U32 ="reg"
-//$$ L3 PROP_U32 ="ic_type"
-//$$ L3 PROP_U32 ="irq"
-//$$ L3 PROP_STR = "gpio_interrupt"
-//$$ L3 PROP_STR = "gpio_reset"
-//$$ L3 PROP_U32 ="xres"
-//$$ L3 PROP_U32 ="yres"
-//$$ L3 PROP_U32 ="pol"
-//$$ L3 PROP_STR = "fw_file"
-				touch_ft5x06:ft5x06{
-					touch_name = "ft5x06";
-					
-					i2c_bus = "i2c_bus_a";
-					reg = <0x38>;
-					ic_type = <0>;
-					irq = <0>;
-					gpio_interrupt = "GPIOA_16";
-					gpio_reset = "GPIOC_3";
-					xres = <1024>;
-					yres = <600>;
-					pol = <0x1>;
-					fw_file = "/etc/touch/ft5x06.fw";
-				};
-//$$ DEVICE = "touch_gslx680"
-//$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR = "touch_name"
-//$$ L3 PROP_STR = "i2c_bus"
-//$$ L3 PROP_U32 ="ic_type"
-//$$ L3 PROP_U32 ="irq"
-//$$ L3 PROP_U32 ="irq_edge"
-//$$ L3 PROP_STR = "gpio_interrupt"
-//$$ L3 PROP_STR = "gpio_reset"
-//$$ L3 PROP_U32 ="xres"
-//$$ L3 PROP_U32 ="yres"
-//$$ L3 PROP_U32 ="pol"
-//$$ L3 PROP_U32 ="max_num"
-//$$ L3 PROP_STR = "fw_file"
-				touch_gslx680:gslx680{
-					touch_name = "gslx680";
-					i2c_bus = "i2c_bus_a";
-					status = "okay";
-					reg = <0x40>;
-					ic_type = <0>;
-					irq = <1>;
-					irq_edge = "GPIO_IRQ_RISING";
-					gpio_interrupt = "GPIOA_16";
-					gpio_reset = "GPIOC_3";
-					xres = <1024>;
-					yres = <600>;
-					pol = <0x4>;
-					max_num = <5>;
-					fw_file = "/etc/touch/gslx680.fw";
-				};
-   };
-
+//$$ L2 PROP_STR = "status"	
 
 /// ***************************************************************************************
 /// -   Audio
@@ -1299,12 +1244,10 @@ void root_func(){
 	aml_cams{
 		compatible = "amlogic,cams_prober";
 		status = "okay";
-		pinctrl-names = "gpio","csi";
+		pinctrl-names = "gpio";
 		pinctrl-0 = <&aml_cam_gpio_pins> ;
-		pinctrl-1 = <&aml_cam_csi_pins> ;
-
-///	-	gc2035
-//$$ DEVICE="gc2035"
+///	-	sp0838
+//$$ DEVICE = "sp0838"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1314,32 +1257,56 @@ void root_func(){
 //$$ L2 PROP_U32 = "vertical_flip"
 //$$ L2 PROP_STR = "bt_path"
         	cam_0{
-			cam_name = "gc2035";
-			front_back = <1>;
+			cam_name = "sp0838";
+			front_back = <0>;
 			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_5";
+			gpio_pwdn = "GPIOH_6";
 			gpio_rst = "GPIOH_4";
 			mirror_flip = <1>;
 			vertical_flip = <0>;	
-			bt_path = "gpio";
 			status = "okay";
 		};
-		
+///	-	gc0308
+//$$ DEVICE = "gc0308"
+//$$ L2 PROP_STR = "status"
+//$$ L2 PROP_U32 = "front_back"
+//$$ L2 PROP_STR = "i2c_bus"
+//$$ L2 PROP_STR = "gpio_pwdn"
+//$$ L2 PROP_STR = "gpio_rst"
+//$$ L2 PROP_U32 = "mirror_flip"
+//$$ L2 PROP_U32 = "vertical_flip"
+//$$ L2 PROP_STR = "bt_path"
+		cam_1{
+			cam_name = "gc0308";
+			front_back = <0>;
+			i2c_bus = "i2c_bus_d";
+			gpio_pwdn = "GPIOH_6";
+			gpio_rst = "GPIOH_4";
+			mirror_flip = <1>;
+			vertical_flip = <0>;
+			status = "okay";
+		};
+///	-	gc0328
+//$$ DEVICE="gc0328"
+//$$ L2 PROP_STR = "status"
+//$$ L2 PROP_U32 = "front_back"
+//$$ L2 PROP_STR = "i2c_bus"
+//$$ L2 PROP_STR = "gpio_pwdn"
+//$$ L2 PROP_STR = "gpio_rst"
+//$$ L2 PROP_U32 = "mirror_flip"
+//$$ L2 PROP_U32 = "vertical_flip"
+//$$ L2 PROP_STR = "bt_path"
 		cam_2{
-			cam_name = "ar0833";
+			cam_name = "gc0328";
 			front_back = <0>;
 			i2c_bus = "i2c_bus_d";
 			gpio_pwdn = "GPIOH_6";
 			gpio_rst = "GPIOH_4";
 			mirror_flip = <0>;
 			vertical_flip = <0>;
-			config_path = "/system/etc/camera_isp_cfg/ar0833_skt";
-			mclk = <12000>;
-			bt_path = "csi";
-			interface = "mipi";
-			clk_channel = "a";
 			status = "okay";
 		};
+	
 	};	
 
 /// ***************************************************************************************
@@ -1799,17 +1766,13 @@ void root_func(){
 //$$ L2 PROP_U32 4 = "amlogic,setmask"
 //$$ L2 PROP_STR 10 = "amlogic,pins"	
         aml_cam_gpio_pins: aml_cam_gpio_pins{
-			amlogic,setmask=<3 0x80000
+			amlogic,setmask=<3 0x40000
 					         9 0x37c>;
-			amlogic,pins = "GPIOH_9","GPIOY_6","GPIOY_7","GPIOY_8","GPIOY_9","GPIOY_10","GPIOY_11","GPIOY_12","GPIOY_13","GPIOY_14";
-		};
-		
-//$$ MATCH "Camera_pin_1_match" = "&aml_cam_csi_pins"
-//$$ L2 PROP_U32 2 = "amlogic,setmask"
-//$$ L2 PROP_STR = "amlogic,pins"	
-		aml_cam_csi_pins: aml_cam_csi_pins{
-			amlogic,setmask=<3 0x80000>;
-			amlogic,pins = "GPIOH_9";
+			amlogic,clrmask=<1 0x10080
+					 3 0x37
+					 5 0xc0>;
+			amlogic,pins = "GPIOY_0","GPIOY_1","GPIOY_3","GPIOY_6","GPIOY_7","GPIOY_8","GPIOY_9","GPIOY_10","GPIOY_11","GPIOY_12","GPIOY_13","GPIOY_14";
+
 		};
 
 //$$ MATCH "I2C_AO_pin_match" = "&ao_i2c_master"
@@ -1849,10 +1812,13 @@ void root_func(){
 // MATCH "I2C_D_pin_match" = "&d_i2c_master"
 // L2 PROP_U32 2 = "amlogic,setmask"
 // L2 PROP_STR 2 = "amlogic,pins"
-//		d_i2c_master:d_i2c{
-//			amlogic,setmask=<4 0xc>;
-//			amlogic,pins="GPIOH_7","GPIOH_8";
-//		};
+		d_i2c_master:d_i2c{
+			amlogic,setmask=<4 0xc>;
+			amlogic,clrmask=<0 0x480 
+			                 6 0x3000
+			                 8 0x30000>;
+			amlogic,pins="GPIOH_7","GPIOH_8";
+		};
 
 //$$ MATCH "remote_pin_0_match" = "&remote_pins"
 //$$ L2 PROP_U32 2 = "amlogic,setmask"
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
index 8059a4a5709d..fb623812ddb1 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
@@ -77,9 +77,18 @@ void root_func(){
 	memory{
 		device_type = "memory";
 		aml_reserved_start = <0x06000000>; /**reserved memory start */
-		aml_reserved_end = <0x05000000>;/**reserved memory end : dtb start for uboot*/
+		aml_reserved_end = <0x05000000>;/**reserved memory end */
 		phys_offset = <0x00000000>;
 		linux,total-memory = <0x40000000>;
+
+        #address-cells = <1>;
+        #size-cells = <1>;
+
+        cma_0:region@0 {
+           region_name = "cma_0";
+           reg = <0 0x02700000>;
+           linux,contiguous-region;
+        };
 	};
 /// ***************************************************************************************
 ///	-	GIC
@@ -104,7 +113,7 @@ void root_func(){
 		compatible = "amlogic,vpu";
 		dev_name = "vpu";	
 		status = "ok";
-		clk_level = <7>;
+		clk_level = <4>;
 		/**    	0: 106.25M		1: 127.5M		2: 159.375M
 				3: 182.15M		4: 212.5M		5: 255M
 		    	6: 318.75M		7: 364.3M					 */
@@ -122,10 +131,10 @@ void root_func(){
 		compatible = "amlogic,mesonfb";
 		dev_name = "mesonfb";
 		status = "okay";
-	   	reserve-memory = <0x01000000  0x00100000>;
+        reserve-memory = <0x0900000  0x00100000>;//9M+1M=10M
 	   	reserve-iomap = "true";
-        vmode = <3>; /**0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P 3:VMODE_1080P*/
- 		display_size_default = <1920 1080 1920 2160 32>;
+        vmode = <1>; /**0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P 3:VMODE_1080P*/
+        display_size_default = <768 1024 768 3072 32>;//1024x768x4x3==0x0900000,9MB
 	};
 
 //$$ DEVICE="deinterlace"
@@ -134,9 +143,8 @@ void root_func(){
     deinterlace{
 		compatible = "amlogic,deinterlace";
 		dev_name = "deinterlace";
-		status = "ok";
-		reserve-memory = <0x02300000>; 	 
-
+		status = "disable";
+		reserve-memory = <0x0800000>; //8x1920x1088x3/2=8M
 	};
 
 /// ***************************************************************************************
@@ -149,7 +157,7 @@ void root_func(){
 		compatible = "amlogic,mesonstream";
 		dev_name = "mesonstream.0";
 		status = "okay";
-		reserve-memory = <0x02000000>;
+		reserve-memory = <0x00a00000>;//10M,you can use 8M if memory isn't enough
 		reserve-iomap = "true";
 	};
 
@@ -163,8 +171,8 @@ void root_func(){
                 compatible = "amlogic,vdec";
                 dev_name = "vdec.0";
                 status = "okay";
-                reserve-memory = <0x10000000>;
-                reserve-iomap = "true";
+                reserve-memory = <0x02000000>;//32M
+		reserve-iomap = "true";
         };
 
 /// ***************************************************************************************
@@ -177,7 +185,8 @@ void root_func(){
 		compatible = "amlogic,ppmgr";
 		dev_name = "ppmgr";
 		status = "okay";
-		reserve-memory = <0x03000000>;
+		reserve-memory = <0x01000000>;//16M
+		reserve-iomap = "true";
 	};
 
 /// ***************************************************************************************
@@ -190,23 +199,9 @@ void root_func(){
 		compatible = "amlogic,amvenc_avc";
 		dev_name = "amvenc_avc.0";
 		status = "okay";
-		reserve-memory = <0x00f00000>;
+        linux,contiguous-region = <&cma_0>;
 		reserve-iomap = "true";
 	};
-
-/// ***************************************************************************************
-///	-	DISP&MM-BT656
-//$$ MODULE = "DISP&MM-BT656"
-//$$ DEVICE="amvdec_656in"
-//$$ L2 PROP_STR = "status"
-//$$ L2 PROP_U32 2 = "reg"
-//    amvdec_656in{
-//		compatible = "amlogic,amvdec_656in";
-//		dev_name = "amvdec_656in";
-//		status = "ok";
-//		reg = <0x1a600000 0x00100000>;
-//	};
-//	
 /// ***************************************************************************************
 ///	-	DISP&MM-VDIN
 //$$ MODULE = "DISP&MM-VDIN"
@@ -215,28 +210,30 @@ void root_func(){
 //$$ L2 PROP_U32 2 = "reg"
 //$$ L2 PROP_U32 = "irq"
 //$$ L2 PROP_U32 = "vdin_id"
-    vdin0{
-        compatible = "amlogic,vdin";
-        dev_name = "vdin0";
-        status = "ok";
-	 reserve-memory = <0x04000000>;
-        irq = <115>;
-        vdin_id = <0>;
-	};
+//    vdin0{
+//       compatible = "amlogic,vdin";
+//        dev_name = "vdin0";
+//        status = "ok";
+//	 reserve-memory = <0x04000000>;
+//        irq = <115>;
+//        vdin_id = <0>;
+//	};
 	
 //$$ DEVICE="vdin1"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 2 = "reg"
 //$$ L2 PROP_U32 = "irq"
 //$$ L2 PROP_U32 = "vdin_id"
-    vdin1{
-        compatible = "amlogic,vdin";
-        dev_name = "vdin1";
-        status = "ok";
-	 reserve-memory = <0x04000000>;
-        irq = <117>;
-        vdin_id = <1>;
-	};
+//    vdin1{
+//        compatible = "amlogic,vdin";
+//       dev_name = "vdin1";
+//        status = "ok";
+//        reserve-memory = <0x01000000>;
+//	  miracast_size = <1920 1080>;//1920x1080x2x4=17M
+//	  reserve-iomap = "true";
+//        irq = <117>;
+//        vdin_id = <1>;
+//	};
 
 /// ***************************************************************************************
 ///	-	DISP&MM-AMLVIDEO2
@@ -244,26 +241,26 @@ void root_func(){
 //$$ DEVICE="amlvideo2"
 //$$ L2 PROP_STR = "status"
 //$$ L3 PROP_U32 2 ="reg"
-    amlvideo2{
-		compatible = "amlogic,amlvideo2";
-		dev_name = "amlvideo2.0";
-		status = "okay";
-		reserve-memory = <0x01800000>;
-		reserve-iomap = "true";
-	};
+//    amlvideo2{
+//		compatible = "amlogic,amlvideo2";
+//		dev_name = "amlvideo2.0";
+//		status = "okay";
+//		reserve-memory = <0x01800000>;
+//		reserve-iomap = "true";
+//	};
 
 /// ***************************************************************************************
 ///	-	DISP&MM-Video Input Manager
 //$$ MODULE = "DISP&MM-Video Input Manager"
 //$$ DEVICE="vm"
 //$$ L2 PROP_STR = "status"
-    vm{
-		compatible = "amlogic,vm";
-		dev_name = "vm.0";
-		status = "okay";
-		reserve-memory = <0x01800000>;
-		reserve-iomap = "true";
-	};
+//    vm{
+//		compatible = "amlogic,vm";
+//		dev_name = "vm.0";
+//		status = "okay";
+//		reserve-memory = <0x01800000>;
+//		reserve-iomap = "true";
+//	};
 
 /// ***************************************************************************************
 ///	-	ION
@@ -276,7 +273,7 @@ void root_func(){
         status = "ok";
         share-memory-name = "ppmgr0";
         share-memory-offset = <0>;
-        share-memory-size = <0x03000000>;
+        share-memory-size = <0x01000000>;//ion_dev use same buffer with ppmgr0
     };
 /// ***************************************************************************************
 ///	-	DISP&MM-Vout
@@ -429,19 +426,20 @@ void root_func(){
 //$$ L3 PROP_U32 = "max_req_size"
 //$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_U32 = "card_type"
-        emmc{
-            status = "ok";
-            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "emmc";
-            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /**128KB*/
-            gpio_dat3 = "BOOT_3";
-            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
-        };
+//        emmc{
+//            status = "ok";
+//            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            f_max_w = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };
+
     };
 
 /// ***************************************************************************************
@@ -483,6 +481,12 @@ void root_func(){
 		#size-cells = <0>;
 		use_pio = <0>;
 		master_i2c_speed = <300000>;
+		
+		i2c@40{
+			compatible = "amlogic,gslX680new";
+			status = "okay";
+			reg = <0x40>;
+		};		
 	};
 	
 //$$ DEVICE="I2C_B"
@@ -557,7 +561,7 @@ void root_func(){
 //$$ L2 PROP_U32 16*3 = "dvfs_table"
         vcck_dvfs {
             dvfs_id     = <1>;                                  /** must be value of (1 << n)            */
-            table_count = <14>;                                 /** must be correct count for dvfs_table */
+            table_count = <12>;                                 /** must be correct count for dvfs_table */
             dvfs_table  = <
             /* NOTE: frequent in this table must be ascending order */
             /* frequent(Khz)    min_uV      max_uV                  */
@@ -573,8 +577,6 @@ void root_func(){
                 1200000        1025000     1025000
                 1416000        1075000     1075000
                 1608000        1150000     1150000
-                1800000        1175000     1175000
-                1992000        1200000     1200000
             >;
         };
     };
@@ -839,15 +841,213 @@ void root_func(){
 			port-config = <0>; /** 0: default */
 			port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
 			port-id-mode = <0>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
-//			gpio-vbus-power = "GPIOZ_1";
+			gpio-vbus-power = "PMU";
 			gpio-work-mask	= <1>; /**0: work on pulldown,1:work on pullup*/
 			status = "okay";
 		};
 	};
 
+/// ***************************************************************************************
+///	-	LCD
+//$$ MODULE="LCD"
+//$$ DEVICE="backlight"
+//$$ L2 PROP_STR = "status"
+//$$ L2 PROP_CHOICE "Bl_pin_0_match" = "pinctrl-0"
+//$$ L2 PROP_CHOICE "Bl_pin_1_match" = "pinctrl-1"
+//$$ L2 PROP_U32 2= "bl_level_default_uboot_kernel"
+//$$ L2 PROP_U32 2= "bl_level_middle_mapping"
+//$$ L2 PROP_U32 2= "bl_level_max_min"
+//$$ L2 PROP_U32 = "bl_power_on_delay"
+//$$ L2 PROP_U32 = "bl_ctrl_method"
+//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
+//$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
+//$$ L2 PROP_U32 = "bl_pwm_freq"
+//$$ L2 PROP_U32 2 = "bl_pwm_duty_max_min"
+//$$ L2 PROP_U32 = "bl_pwm_combo_high_low_level_switch"
+//$$ L2 PROP_STR 2 = "bl_pwm_combo_high_port_method"
+//$$ L2 PROP_STR 2 = "bl_pwm_combo_low_port_method"
+//$$ L2 PROP_U32 3 = "bl_pwm_combo_high_freq_duty_max_min"
+//$$ L2 PROP_U32 3 = "bl_pwm_combo_low_freq_duty_max_min"
+    backlight{
+		compatible = "amlogic,backlight";
+		dev_name = "backlight";
+		status = "okay";
+		pinctrl-names = "default","pwm_combo";
+		pinctrl-0 = <&lcd_backlight_pins>;	/** pwm_default pinmux */
+		pinctrl-1 = <&lcd_backlight_combo_pins>;	/** pwm_combo pinmux */
+		
+		bl_level_default_uboot_kernel=<10 102>;	/** default brightness level for uboot & kernel */
+		bl_level_middle_mapping=<128 102>;	/** brightness middle level mapping to a new level*/
+		bl_level_max_min=<255 10>;	/** brightness level max & min, must match the rootfs setting*/
+		
+		/* backlight power ctrl */
+		bl_power_on_delay=<200>; /** delay time before backlight power on(unit: ms) */
+		bl_ctrl_method=<4>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive, 3=pwm_combo. 4=extern. decided by hardware design) */
+		
+		bl_gpio_port="GPIODV_28";	/** backlight control gpio port */
+		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
+		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
+		bl_pwm_freq=<300000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
+		bl_pwm_duty_max_min=<90 30>;	/** brightness diminig duty_max, duty_min : (unit: %, positive logic, only for pwm control method) */
+		
+		/** backlight pwm_combo control: low_duty_max is always active for level_high, and high_duty_min is always active for level_low */
+		bl_pwm_combo_high_low_level_switch=<220>;	/** backlight pwm_combo control switch level */
+		bl_pwm_combo_high_port_method="PWM_C","1";	/** backlight pwm_combo high port name, pwm control method(1=pwm_negative, 2=pwm_positive) */
+		bl_pwm_combo_low_port_method="PWM_D","2";	/** backlight pwm_combo low port name, pwm control method(1=pwm_negative, 2=pwm_positive) */
+		bl_pwm_combo_high_freq_duty_max_min=<300000 96 89>;	/** backlight pwm_combo level_high port frequency(unit: Hz), duty_max, duty_min : (unit: %, positive logic) */
+		bl_pwm_combo_low_freq_duty_max_min=<10000 100 10>;	/** backlight pwm_combo level_low port frequency(unit: Hz), duty_max, duty_min : (unit: %, positive logic) */
+	};
+
+//******************************************************************************
+//bl extern
+//Notice: only one dev support
+//******************************************************************************
+//$$ DEVICE = "bl_extern_pmu_aml1218"
+//$$ L2 PROP_STR = "status"
+//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_U32 = "type"
+//$$ L2 PROP_U32 2 = "dim_max_min"
+	bl_extern_pmu_aml1218{
+		compatible = "amlogic,bl_pmu_aml1218";
+		dev_name ="bl_pmu_aml1218";
+		status = "okay"; /** "disabled" or "okay" */
+
+		gpio_enable = "GPIODV_28"; /** "n" for none */
+		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
+		dim_max_min = <0x1 0x1b>;
+	};
+
+//******************************************************************************
+	lcd{
+		compatible = "amlogic,lcd";
+		dev_name = "lcd";
+		status = "okay";
+		pinctrl-names = "ttl_6bit_hvsync_de_on","ttl_6bit_hvsync_on","ttl_6bit_de_on","ttl_8bit_hvsync_de_on","ttl_8bit_hvsync_on","ttl_8bit_de_on",
+						"ttl_6bit_hvsync_de_off","ttl_8bit_hvsync_de_off";
+		pinctrl-0 = <&lcd_ttl_rgb_6bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_on &lcd_ttl_de_pins_on>;
+		pinctrl-1 = <&lcd_ttl_rgb_6bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_on &lcd_ttl_de_pins_off>;
+		pinctrl-2 = <&lcd_ttl_rgb_6bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_off &lcd_ttl_de_pins_on>;
+		pinctrl-3 = <&lcd_ttl_rgb_8bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_on &lcd_ttl_de_pins_on>;
+		pinctrl-4 = <&lcd_ttl_rgb_8bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_on &lcd_ttl_de_pins_off>;
+		pinctrl-5 = <&lcd_ttl_rgb_8bit_pins_on &lcd_ttl_clk_pins_on &lcd_ttl_hvsync_pins_off &lcd_ttl_de_pins_on>;
+		pinctrl-6 = <&lcd_ttl_rgb_6bit_pins_off &lcd_ttl_clk_pins_off &lcd_ttl_hvsync_pins_off &lcd_ttl_de_pins_off>;
+		pinctrl-7 = <&lcd_ttl_rgb_8bit_pins_off &lcd_ttl_clk_pins_off &lcd_ttl_hvsync_pins_off &lcd_ttl_de_pins_off>;
+		
+		lcd_model_name ="lcd_IVO785H4026172";	/** lcd model name for uboot driver */
+		lcd_model_config = <&lcd_IVO785H4026172>;	/** choose panel model config */
+		lcd_bits_user=<6>;	/** user defined lcd bits(6 or 8, decided by hardware design; only valid when lcd_bits_option=1) */
+		
+		/* below configs are decided by hardware design, you can modify them if needed. */
+		ttl_rb_bit_swap=<0 0>;	/** ttl rb_swap, bit_swap : (0=normal, 1=swap) */
+		lvds_channel_pn_swap=<0>;	/** lvds channel pn swap(0=normal, 1=swap) */
+		
+		/* recommend settings, you can modify them if needed. */
+		valid_hvsync_de=<1 1>;	/** hvsync_signal_valid, DE_signal_valid : (0=disable signal, 1=enable signal) */
+		hsign_hoffset_vsign_voffset=<0 0 0 0>;	/** hsign, hoffset, vsign, voffset :("sign-offset" is a pair. sign: 0=positive, 1=negative) */
+		
+		dither_user_ctrl=<0 0x600>;	/**  dither_user(0=auto setting, 1=user define), dither_ctrl(user defined dither control, only valid when user_define=1) */
+		vadj_brightness_contrast_saturation=<0x0 0x80 0x100>;	/** video adjust brightness, contrast, saturation */
+		
+		gamma_en_revert=<1 0>;	/** gamma_en(0=disable gamma table, 1=enable gamma table), gamma_table_revert(0=normal, 1=revert) */
+		gamma_multi_rgb_coeff=<0 100 100 100>;	/** gamma_multi(0=single gamma, RGB are same, 1=multi gamma, RGB are different), gamma_r_coeff(%), gamma_g_coeff(%), gamma_b_coeff(%) */
+		/** if gamma_multi=1, there must be 3 gamma tables, named as gamma_table_r, gamma_table_g, gamma_table_b */
+		gamma_table=<0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 
+				32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 
+				64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 
+				96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 
+				128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 
+				160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 
+				192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 
+				224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255>;
+		
+		/* default settings, don't modify them unless there is display problem */
+		clock_spread_spectrum=<0>;	/** ss_level(0=disable, 1=0.5%, 2=1%, 3=1.5%, 4=2%) */
+		clock_auto_generation=<1>;	/** clk_auto_generation(0=use customer clock parameters, as clk_pll_div_clk_ctrl defined, 1=auto generate clock parameters by lcd_clock) */
+		clk_pll_div_clk_ctrl=<0x20445 0x18803 0x02ee1101>;	/** pll_ctrl, div_ctrl, clk_ctrl : (only valid when clk_auto_generation=0) */
+		lvds_vswing=<1>;	/** lvds_vswing_level(default level=1, support level 0,1,2,3,4) */
+		lvds_user_repack=<0 0>;	/** lvds_repack_user(0=auto setting, 1=user define), lvds_repack(0=JEIDA mode data mapping, 1=VESA mode data mapping. only valid when lvds_repack_user=1) */
+		rgb_base_coeff=<0xf0 0x74a>;	/** rgb_base, rgb_coeff */
+
+		//lcd power ctrl	//support up to 15 steps for each sequence
+		power_on_uboot="n","n","n";	/** only for uboot, ahead of lcd_power_on, no need config delay */
+		power_on_step_1="cpu","GPIODV_29","0";	/** gpio_type(support 3 types: cpu, pmu, signal), gpio_name(upper-case, valid when gpio_type is cpu or pmu), gpio_value(0=output_low, 1=output_high, 2=input. valid when gpio_type is cpu or pmu) */
+		power_on_step_2="signal","n","n";	/** gpio_type(support 3 types: cpu, pmu, signal), gpio_name(upper-case, valid when gpio_type is cpu or pmu), gpio_value(0=output_low, 1=output_high, 2=input. valid when gpio_type is cpu or pmu) */
+		power_on_delay=<100 10>;	/** power on delay after each step */
+		power_off_step_1="signal";	/** gpio_type(support 3 types: cpu, pmu, signal), gpio_name(upper-case, valid when gpio_type is cpu or pmu), gpio_value(0=output_low, 1=output_high, 2=input. valid when gpio_type is cpu or pmu) */
+		power_off_step_2="cpu","GPIODV_29","0";	/** gpio_type(support 3 types: cpu, pmu, signal), gpio_name(upper-case, valid when gpio_type is cpu or pmu), gpio_value(0=output_low, 1=output_high, 2=input. valid when gpio_type is cpu or pmu) */
+		power_off_delay=<20 1000>;	/** power off delay after each step */
+		power_off_uboot="n","n","n";	/** only for uboot, at the end of lcd_power_off, no need config delay */
+	};
+
+//$$ MATCH "lcd_model_config_match" = <&lcd_IVO785H4026172>
+//$$ L2 PROP_STR = "model_name"
+//$$ L2 PROP_STR = "interface"
+//$$ L2 PROP_U32 2 = "active_area"
+//$$ L2 PROP_U32 2 = "lcd_bits_option"
+//$$ L2 PROP_U32 2 = "resolution"
+//$$ L2 PROP_U32 2 = "period"
+//$$ L2 PROP_U32 2 = "clock_hz_pol"
+//$$ L2 PROP_U32 2 = "hsync_width_backporch"
+//$$ L2 PROP_U32 2 = "vsync_width_backporch"
+//$$ L2 PROP_U32 2 = "pol_hsync_vsync"
+	lcd_IVO785H4026172:lcd_IVO785H4026172{
+		model_name="IVO785H4026172";	/** lcd model name */
+		interface="lvds";			/** lcd_interface(mipi, lvds, ttl) */
+		active_area=<120 160>;		/** lcd active_area or display_area horizontal size, vertical size : (unit in mm, you can find them on the home page of lcd spec) */
+		lcd_bits_option=<8 0>;		/** lcd_bits(6,8), bits_option(0=only support one mode as lcd_bits define, 1=both support 6/8bit) */
+		
+		resolution=<768 1024>;	/** horizontal resolution, vertical resolution */
+		period=<928 1065>;		/** horizontal period(htotal), vertical period(vtotal) */
+		
+		clock_hz_pol=<59300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
+		hsync_width_backporch=<10 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
+		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
+	};
+
+//******************************************************************************
+///     -       Sensors
+//$$ MODULE="Sensors"
+//$$ DEVICE="sensor"
+//$$ L2 PROP_STR = "status"
+    sensor{
+		compatible = "amlogic,aml_sensor";
+		status = "okay";
+
+//$$ DEVICE="mc32x0"
+//$$ L2 PROP_STR = "status"
+//$$ L2 PROP_U32 = "address"
+//$$ L2 PROP_STR = "i2c_bus"
+        mc32x0{
+            dev_name = "mc32x0";
+            status = "okay";
+            address = <0x4c>;
+            i2c_bus = "i2c_bus_b";
+            acc_dir = <0x1000>;
+        };
+//$$ DEVICE="mma7660"
+//$$ L2 PROP_STR = "status"
+//$$ L2 PROP_U32 = "address"
+//$$ L2 PROP_STR = "i2c_bus"
+//        mma7660{
+//            dev_name = "mma7660";
+//            status = "okay";
+//            address = <0x4c>;
+//            i2c_bus = "i2c_bus_b";
+//       };
+
+
+	};
 
 
 
+/// ***************************************************************************************
+///	-	Touch
+//$$ MODULE="Touch"
+//$$ DEVICE = "touch"
+//$$ L2 PROP_STR = "status"
+
 /// ***************************************************************************************
 /// -   Audio
 //$$ MODULE="Audio"
@@ -960,7 +1160,7 @@ void root_func(){
     aml_m8_sound_card{
         compatible = "sound_card, aml_snd_m8";
         aml,sound_card = "AML-M8AUDIO";
-        aml,codec_dai = "AML-M8","rt5616-aif1","rt5631-hifi","wm8960-hifi";
+        aml,codec_dai = "AML-M8","rt5616-aif1","rt5631-hifi","wm8960-hifi","pmu3-hifi";
         //aml,codec_name = "aml_m8_codec.0","rt5616.4-001b";
         //aml,audio-codec = <&rt5616>;
         aml,audio-routing-rt5616 = 
@@ -977,8 +1177,19 @@ void root_func(){
             "HP","HP_R",
             "MICBIAS","MAIN MIC",
             "LINPUT1","MICBIAS";
+        aml,audio-routing-amlpmu3 = 
+            "Ext Spk","LINEOUTL1",
+            "Ext Spk","LINEOUTR1",
+            "HP","HP_L",
+            "HP","HP_R",
+            "Mic Bias1","MAIN MIC",
+            "LINEINLP","Mic Bias1";
+        sleep_time = <130>;
         mute_gpio = "GPIO_BSD_EN";
-        //mute_inv;
+        I2S_MCLK = "GPIOAO_8";
+        I2S_SCLK = "GPIOAO_9";
+        I2S_LRCLK = "GPIOAO_10";
+        I2S_ODAT = "GPIOAO_11";
         hp_paraments = <800 300 0 5 1>;
         pinctrl-names = "aml_snd_m8";
         pinctrl-0 = <&audio_pins>;
@@ -1002,8 +1213,8 @@ void root_func(){
 		pinctrl-0 = <&aml_cam_gpio_pins> ;
 		pinctrl-1 = <&aml_cam_csi_pins> ;
 
-///	-	ar0543
-//$$ DEVICE="ar0543"
+///	-	gc2035
+//$$ DEVICE="gc2035"
 //$$ L2 PROP_STR = "status"
 //$$ L2 PROP_U32 = "front_back"
 //$$ L2 PROP_STR = "i2c_bus"
@@ -1011,51 +1222,16 @@ void root_func(){
 //$$ L2 PROP_STR = "gpio_rst"
 //$$ L2 PROP_U32 = "mirror_flip"
 //$$ L2 PROP_U32 = "vertical_flip"
-//$$ L2 PROP_STR = "config_path"
-//$$ L2 PROP_U32 = "mclk"
 //$$ L2 PROP_STR = "bt_path"
-//$$ L2 PROP_STR = "interface"
-//$$ L2 PROP_STR = "clk_channel"
-		cam_0{
-			cam_name = "ar0543";
-			front_back = <0>;
-			i2c_bus = "i2c_bus_d";
-			gpio_pwdn = "GPIOH_6";
-			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
-			vertical_flip = <0>;
-			config_path = "/system/etc/camera_isp_cfg/ar0543_skt";
-			mclk = <12000>;
-			bt_path = "csi";
-			interface = "mipi";
-			clk_channel = "a";
-			status = "okay";
-		};
-
-///	-	ov5647
-//$$ DEVICE="ov5647"
-//$$ L2 PROP_STR = "status"
-//$$ L2 PROP_U32 = "front_back"
-//$$ L2 PROP_STR = "i2c_bus"
-//$$ L2 PROP_STR = "gpio_pwdn"
-//$$ L2 PROP_STR = "gpio_rst"
-//$$ L2 PROP_U32 = "mirror_flip"
-//$$ L2 PROP_U32 = "vertical_flip"
-//$$ L2 PROP_STR = "bt_path"
-//$$ L2 PROP_STR = "interface"
-//$$ L2 PROP_STR = "clk_channel"
-		cam_1{
-			cam_name = "ov5647";
-			front_back = <0>;
+        	cam_0{
+			cam_name = "gc2035";
+			front_back = <1>;
 			i2c_bus = "i2c_bus_d";
 			gpio_pwdn = "GPIOH_5";
 			gpio_rst = "GPIOH_4";
-			mirror_flip = <0>;
+			mirror_flip = <1>;
 			vertical_flip = <0>;	
-			config_path = "/system/etc/camera_isp_cfg/ov5647_cw0767";
-			bt_path = "csi";
-			interface = "mipi";
-			clk_channel = "b";
+			bt_path = "gpio";
 			status = "okay";
 		};
 		
@@ -1117,71 +1293,28 @@ void root_func(){
     adc_keypad{
 		compatible = "amlogic,adc_keypad";
 		status = "okay";
-		key_name = "menu", "vol-","vol+", "esc", "home";
-		key_num = <5>;
-		key_code = <139 114 115 1 102>;
-		key_chan = <0 0 0 0 0>;
-		key_val = <0 143 271 393 468>; //voltage=0/252/478/692/824mV, val=voltage/1800mV*1023
-		key_tolerance = <40 40 40 40 40>;
-	};
-
-//$$ DEVICE="meson-remote"
-//$$ L2 PROP_STR = "status"
-//$$ L2 PROP_U32 = "ao_baseaddr"
-//$$ L2 PROP_STR = "pinctrl-names"
-//$$ L2 PROP_CHOICE "remote_pin_0_match" = "pinctrl-0"
-    meson-remote{
-		compatible = "amlogic,aml_remote";
-		dev_name = "meson-remote";
-		status = "ok";
-		ao_baseaddr = <0xf3100480>;
-		pinctrl-names="default";
-		pinctrl-0=<&remote_pins>;
+		key_name = "vol-","vol+";
+		key_num = <2>;
+		key_code = <114 115>;
+		key_chan = <0 0>;
+		key_val = <144 267>;
+		key_tolerance = <40 40>;
 	};
 
 /// ***************************************************************************************
-///	-	Spi
-//$$ MODULE="Spi"
-//$$ DEVICE="spi"
+///	-	WiFi
+//$$ MODULE="WiFi"
+//$$ DEVICE="wifi_power"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_U32 2 = "reg"
-//$$ L2 PROP_STR = "pinctrl-names"
-//$$ L2 PROP_CHOICE "Spi_pin_0_match" = "pinctrl-0"
-//$$ L2 PROP_U32 = "nr-parts"
-//$$ L2 PROP_CHOICE "Spi_nr-part-0_match" = "nr-part-0"
-//$$ L2 PROP_CHOICE "Spi_nr-part-1_match" = "nr-part-1"
-    spi@cc000000{
-		compatible = "amlogic,apollo_spi_nor";
-		status = "ok";
-		reg = <0xcc000000 0x04000000>;
-		pinctrl-names = "default";
-		pinctrl-0 = <&aml_spi_nor_pins>;
-
-		nr-parts = <2>;
-		nr-part-0 = <&bootloader>;
-		nr-part-1 = <&ubootenv>;
-
-//$$ MATCH "Spi_nr-part-0_match" = <&bootloader>
-//$$ L2 PROP_STR = "name"
-//$$ L2 PROP_U32 = "offset"
-//$$ L2 PROP_U32 = "size"
-		bootloader:bootloader{
-			name = "bootloader";
-			offset = <0>;
-			size = <0x60000>;
-		};
-
-//$$ MATCH "Spi_nr-part-1_match" = <&ubootenv>
-//$$ L2 PROP_STR = "name"
-//$$ L2 PROP_U32 = "offset"
-//$$ L2 PROP_U32 = "size"
-		ubootenv:ubootenv{
-			name = "ubootenv";
-		      offset = <0x100000>;
-		      size = <0x10000>;
-		};
-	};
-	
+//$$ L2 PROP_STR = "power_gpio"
+	wifi_power{
+            compatible = "amlogic,wifi_power";
+            dev_name = "wifi_power";
+            status = "okay";
+            power_gpio = "GPIOAO_6";
+            power_gpio2 = "GPIOX_11";
+	};  
+    
 /// ***************************************************************************************
 ///	-	Nand
 //$$ MODULE="Nand"
@@ -1323,49 +1456,7 @@ void root_func(){
 		};
 	};
 
-/// ***************************************************************************************
-///	-	HDMI
-//$$ MODULE="HDMI"
-//$$ DEVICE="amhdmitx"
-//$$ L2 PROP_STR = "status"
-//$$ L2 PROP_CHOICE "HDMI_vend-data_match" = "vend-data"
-//$$ L2 PROP_CHOICE "HDMI_pwr-ctrl_match" = "pwr-ctrl"
-    amhdmitx{
-		compatible = "amlogic,amhdmitx";
-		dev_name = "amhdmitx";
-		status = "ok";
-        vend-data = <&vend_data>;
-        pwr-ctrl = <&pwr_ctrl>;
-        
-//$$ MATCH "HDMI_vend-data_match" = <&vend_data>
-//$$ L2 PROP_STR = "vendor_name"
-//$$ L2 PROP_U32 = "vendor_id"
-//$$ L2 PROP_STR = "product_desc"
-//$$ L2 PROP_STR = "cec_osd_string"        
-        vend_data: vend_data{
-            vendor_name = "Amlogic";           /* Max Chars: 8     */
-            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
-            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
-            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
-        };
-        
-//$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
-//$$ L2 PROP_STR = "pwr_5v_on"
-//$$ L2 PROP_STR = "pwr_5v_off"
-//$$ L2 PROP_STR = "pwr_3v3_on"
-//$$ L2 PROP_STR = "pwr_3v3_off"
-//$$ L2 PROP_STR = "pwr_hpll_vdd_on"
-//$$ L2 PROP_STR = "pwr_hpll_vdd_off"
-        pwr_ctrl: pwr_ctrl{
-            pwr_5v_on = "";
-            pwr_5v_off = "";
-            pwr_3v3_on = "";
-            pwr_3v3_off = "";
-            pwr_hpll_vdd_on = "";
-            pwr_hpll_vdd_off = "";
-        };
-	};
-
+	
 /// ***************************************************************************************
 ///	-	PowerManager
 //$$ MODULE="PowerManager"
@@ -1376,6 +1467,7 @@ void root_func(){
 		dev_name = "aml_pm_m8";
 		status = "okay";
 	};
+	
 
 /// ***************************************************************************************
 ///	-	Cpufreq
@@ -1685,14 +1777,10 @@ void root_func(){
 //$$ L2 PROP_U32 10 = "amlogic,clrmask"
 //$$ L2 PROP_STR 6 = "amlogic,pins"
         audio_pins:audio_pin{
-            amlogic,setmask=<1 0x80
-                             1 0x75>;
-            amlogic,clrmask=<1 0x10000
-                             1 0x0a
-                             3 0x389
-                             4 0x3c00000
-                             9 0xd>;
-            amlogic,pins = "GPIOY_3","GPIOY_4","GPIOY_5","GPIOY_6","GPIOY_7","GPIOY_8";
+            amlogic,setmask=<10 0x78000000
+                              1 0x2000>;   // I2s_in
+            amlogic,clrmask=<10 0x80018000>;
+            amlogic,pins = "GPIOAO_8","GPIOAO_9","GPIOAO_10","GPIOAO_11","GPIOAO_6";
         };
 
 //$$ MATCH "Spi_pin_0_match" = "&aml_spi_nor_pins"
@@ -1705,5 +1793,84 @@ void root_func(){
 			amlogic,pins = "BOOT_11","BOOT_12","BOOT_13","BOOT_18";
 		};
 	};
+	
+//$$ MATCH "Bl_pin_0_match" = "&lcd_backlight_pins"
+//$$ L2 PROP_U32 2 = "amlogic,setmask"
+//$$ L2 PROP_U32 4 = "amlogic,clrmask"
+//$$ L2 PROP_STR = "amlogic,pins"
+		lcd_backlight_pins:lcd_backlight{
+			amlogic,setmask=<3 0x01000000>;
+			amlogic,clrmask=<0 0x00000048 7 0x10000200>;
+			amlogic,pins = "GPIODV_9";
+		};
+		
+//$$ MATCH "Bl_pin_1_match" = "&lcd_backlight_combo_pins"
+//$$ L2 PROP_U32 2 = "amlogic,setmask"
+//$$ L2 PROP_U32 6 = "amlogic,clrmask"
+//$$ L2 PROP_STR 2 = "amlogic,pins"
+		lcd_backlight_combo_pins:lcd_backlight_combo{
+			amlogic,setmask=<3 0x05000000>;
+			amlogic,clrmask=<0 0x48 7 0x18000200 9 0x08000000>;
+			amlogic,pins = "GPIODV_9","GPIODV_28";
+		};
+		
+		lcd_ttl_hvsync_pins_on:lcd_ttl_hvsync_on{
+			amlogic,setmask=<1 0x00000011>;
+			amlogic,clrmask=<1 0x04800000 5 0x08000000 8 0x00000800 9 0x00002000>;
+			amlogic,pins = "GPIOH_0","GPIOH_3";
+		};
+		lcd_ttl_hvsync_pins_off:lcd_ttl_hvsync_off{
+			amlogic,clrmask=<1 0x04800011 5 0x08000000 8 0x00000800 9 0x00002000>;
+			amlogic,pins = "GPIOH_0","GPIOH_3";
+			amlogic,enable-output=<1>;
+		};
+		lcd_ttl_de_pins_on:lcd_ttl_de_on{
+			amlogic,setmask=<1 0x00000002>;
+			amlogic,clrmask=<1 0x01000000>;
+			amlogic,pins = "GPIOH_2";
+		};
+		lcd_ttl_de_pins_off:lcd_ttl_de_off{
+			amlogic,clrmask=<1 0x01000002>;
+			amlogic,pins = "GPIOH_2";
+			amlogic,enable-output=<1>;
+		};
+		lcd_ttl_clk_pins_on:lcd_ttl_clk_on{
+			amlogic,setmask=<1 0x00000004>;
+			amlogic,clrmask=<1 0x02000008 8 0x00001000>;
+			amlogic,pins = "GPIOH_1";
+		};
+		lcd_ttl_clk_pins_off:lcd_ttl_clk_off{
+			amlogic,clrmask=<1 0x0200000c 8 0x00001000>;
+			amlogic,pins = "GPIOH_1";
+			amlogic,enable-output=<1>;
+		};
+		lcd_ttl_rgb_8bit_pins_on:lcd_ttl_rgb_8bit_on{
+			amlogic,setmask=<0 0x03c00000 8 0x00070000>;
+			amlogic,clrmask=<4 0x0000000e 5 0x07000000 6 0x0000ff7f 7 0x00f00000 9 0x00001c00>;
+			amlogic,pins = "GPIOH_4","GPIOH_5","DIF_TTL_4_N","DIF_TTL_4_P","DIF_TTL_3_N","DIF_TTL_3_P","DIF_TTL_2_N","DIF_TTL_2_P",		//R0~R7
+						"GPIOH_6","GPIOH_7","DIF_TTL_1_N","DIF_TTL_1_P","DIF_TTL_0_N","DIF_TTL_0_P","HDMI_TTL_CK_N","HDMI_TTL_CK_P",	//G0~G7
+						"GPIOH_8","GPIOH_9","HDMI_TTL_2_N","HDMI_TTL_2_P","HDMI_TTL_1_N","HDMI_TTL_1_P","HDMI_TTL_0_N","HDMI_TTL_0_P";	//B0~B7
+		};
+		lcd_ttl_rgb_8bit_pins_off:lcd_ttl_rgb_8bit_off{
+			amlogic,clrmask=<0 0x03c00000 4 0x0000000e 5 0x07000000 6 0x0000ff7f 7 0x00f00000 8 0x00070000 9 0x00001c00>;
+			amlogic,pins = "GPIOH_4","GPIOH_5","DIF_TTL_4_N","DIF_TTL_4_P","DIF_TTL_3_N","DIF_TTL_3_P","DIF_TTL_2_N","DIF_TTL_2_P",		//R0~R7
+						"GPIOH_6","GPIOH_7","DIF_TTL_1_N","DIF_TTL_1_P","DIF_TTL_0_N","DIF_TTL_0_P","HDMI_TTL_CK_N","HDMI_TTL_CK_P",	//G0~G7
+						"GPIOH_8","GPIOH_9","HDMI_TTL_2_N","HDMI_TTL_2_P","HDMI_TTL_1_N","HDMI_TTL_1_P","HDMI_TTL_0_N","HDMI_TTL_0_P";	//B0~B7
+			amlogic,enable-output=<1>;
+		};
+		lcd_ttl_rgb_6bit_pins_on:lcd_ttl_rgb_6bit_on{
+			amlogic,setmask=<0 0x03c00000>;
+			amlogic,clrmask=<6 0x0000077f 7 0x00c00000>;
+			amlogic,pins = "DIF_TTL_4_N","DIF_TTL_4_P","DIF_TTL_3_N","DIF_TTL_3_P","DIF_TTL_2_N","DIF_TTL_2_P",		//R2~R7
+						"DIF_TTL_1_N","DIF_TTL_1_P","DIF_TTL_0_N","DIF_TTL_0_P","HDMI_TTL_CK_N","HDMI_TTL_CK_P",	//G2~G7
+						"HDMI_TTL_2_N","HDMI_TTL_2_P","HDMI_TTL_1_N","HDMI_TTL_1_P","HDMI_TTL_0_N","HDMI_TTL_0_P";	//B2~B7
+		};
+		lcd_ttl_rgb_6bit_pins_off:lcd_ttl_rgb_6bit_off{
+			amlogic,clrmask=<0 0x03c00000 6 0x0000077f 7 0x00c00000>;
+			amlogic,pins = "DIF_TTL_4_N","DIF_TTL_4_P","DIF_TTL_3_N","DIF_TTL_3_P","DIF_TTL_2_N","DIF_TTL_2_P",		//R2~R7
+						"DIF_TTL_1_N","DIF_TTL_1_P","DIF_TTL_0_N","DIF_TTL_0_P","HDMI_TTL_CK_N","HDMI_TTL_CK_P",	//G2~G7
+						"HDMI_TTL_2_N","HDMI_TTL_2_P","HDMI_TTL_1_N","HDMI_TTL_1_P","HDMI_TTL_0_N","HDMI_TTL_0_P";	//B2~B7
+			amlogic,enable-output=<1>;
+		};
 
 }; /* end of / */
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
index 158fd7e10a1c..16f427ea4bfd 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
@@ -122,10 +122,10 @@ void root_func(){
 		compatible = "amlogic,mesonfb";
 		dev_name = "mesonfb";
 		status = "okay";
-	   	reserve-memory = <0x01000000  0x00100000>;
+	   	reserve-memory = <0x01800000  0x00100000>;
 	   	reserve-iomap = "true";
-        vmode = <3>; /**0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P 3:VMODE_1080P*/
- 		display_size_default = <1920 1080 1920 2160 32>;
+		vmode = <3>; /**0:VMODE_720P 1:VMODE_LCD  2:VMODE_LVDS_1080P 3:VMODE_1080P*/
+ 		display_size_default = <1920 1080 1920 3240 32>; //1920*1080*4*3 = 0x17BB000
 	};
 
 //$$ DEVICE="deinterlace"
@@ -417,6 +417,96 @@ void root_func(){
             card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
 
+//$$ DEVICE="emmc"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 4 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "f_max_w"
+//$$ L3 PROP_U32 = "max_req_size"
+//$$ L2 PROP_STR = "gpio_dat3"
+//$$ L2 PROP_U32 = "card_type"
+//        emmc{
+//            status = "ok";
+//            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+//            pinname = "emmc";
+//            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            f_min = <300000>;
+//            f_max = <50000000>;
+//            f_max_w = <50000000>;
+//            max_req_size = <0x20000>;          /**128KB*/
+//            gpio_dat3 = "BOOT_3";
+//            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+//        };
+    };
+
+/// ***************************************************************************************
+///	-	MMC
+//$$ MODULE="MMC"
+//$$ DEVICE="aml_sdhc"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 2 ="reg"
+//$$ L2 PROP_STR 6 = "pinctrl-names"
+//$$ L2 PROP_CHOICE "sdhc_pin_0_match" = "pinctrl-0"
+//$$ L2 PROP_CHOICE "sdhc_pin_1_match" = "pinctrl-1"
+//$$ L2 PROP_CHOICE "sdhc_pin_2_match" = "pinctrl-2"
+//$$ L2 PROP_CHOICE "sdhc_pin_3_match" = "pinctrl-3"
+//$$ L2 PROP_CHOICE "sdhc_pin_4_match" = "pinctrl-4"
+//$$ L2 PROP_CHOICE "sdjc_pin_5_match" = "pinctrl-5"
+// L2 PROP_CHOICE "sdhc_pin_6_match" = "pinctrl-6"
+    sdhc{
+        compatible = "amlogic,aml_sdhc";
+        dev_name = "aml_sdhc.0";
+        status = "okay";
+        reg = <0xc1108e00 0x3c>;
+        pinctrl-names = "sdhc_sd_clk_cmd_pins", "sdhc_sd_all_pins", "sdhc_emmc_clk_cmd_pins", "sdhc_emmc_all_pins", "sdhc_sdio_clk_cmd_pins", "sdhc_sdio_all_pins";
+        pinctrl-0 = <&sdhc_sd_clk_cmd_pins>;
+        pinctrl-1 = <&sdhc_sd_all_pins>;
+        pinctrl-2 = <&sdhc_emmc_clk_cmd_pins>;
+        pinctrl-3 = <&sdhc_emmc_all_pins>;
+        pinctrl-4 = <&sdhc_sdio_clk_cmd_pins>;
+        pinctrl-5 = <&sdhc_sdio_all_pins>;
+        //pinctrl-6 = <&sd_1bit_pins>;
+
+//$$ DEVICE="sd"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 3 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "f_max_w"
+//$$ L3 PROP_U32 = "max_req_size"
+//$$ L2 PROP_STR = "gpio_dat3"
+//$$ L2 PROP_STR = "jtag_pin"
+//$$ L2 PROP_STR = "gpio_cd"
+//$$ L2 PROP_STR = "gpio_ro"
+//$$ L2 PROP_U32 = "irq_in"
+//$$ L2 PROP_U32 = "irq_out"
+//$$ L2 PROP_U32 = "card_type"
+        // sd{
+        //     status = "okay";
+        //     port = <4>;          /**0:sdhc_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+        //     pinname = "sd";
+        //     ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
+        //     caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED","MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104";
+        //     f_min = <300000>;
+        //     f_max = <100000000>;
+        //     max_req_size = <0x20000>;          /**128KB*/
+        //     gpio_dat3 = "CARD_4";
+        //     //jtag_pin = "CARD_0";
+        //     gpio_cd = "CARD_6";
+        //     //gpio_ro = "GPIOZ_0";
+        //     irq_in = <3>;
+        //     irq_out = <5>;
+        //     card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
+
 //$$ DEVICE="emmc"
 //$$ L2 PROP_STR = "status"
 //$$ L3 PROP_U32 = "port"
@@ -430,18 +520,39 @@ void root_func(){
 //$$ L2 PROP_STR = "gpio_dat3"
 //$$ L2 PROP_U32 = "card_type"
         emmc{
-            status = "ok";
-            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+            status = "okay";
+            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
+            f_max = <40000000>;
             max_req_size = <0x20000>;          /**128KB*/
             gpio_dat3 = "BOOT_3";
-            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
+
+//$$ DEVICE="sdio"
+//$$ L2 PROP_STR = "status"
+//$$ L3 PROP_U32 = "port"
+//$$ L2 PROP_STR = "pinname"
+//$$ L3 PROP_U32 = "ocr_avail"
+//$$ L2 PROP_STR 4 = "caps"
+//$$ L3 PROP_U32 = "f_min"
+//$$ L3 PROP_U32 = "f_max"
+//$$ L3 PROP_U32 = "max_req_size"
+//$$ L2 PROP_U32 = "card_type"
+        // sdio{
+        //     status = "okay";
+        //     port = <3>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+        //     pinname = "sdio";
+        //     ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
+        //     caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE", "MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104";
+        //     f_min = <300000>;
+        //     f_max = <100000000>;
+        //     max_req_size = <0x20000>;          /**128KB*/
+        //     card_type = <3>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
     };
 
 /// ***************************************************************************************
@@ -595,95 +706,6 @@ void root_func(){
                       0     154     0x04>;
     };
 
-//$$ DEVICE="Battery_parameter"
-//$$ MATCH "battery_parameter_match" = <&battery_parameter>
-//$$ L2 PROP_STR = "status"
-//$$ L2 PROP_U32 = "pmu_twi_id"
-//$$ L2 PROP_U32 = "pmu_irq_id"
-//$$ L2 PROP_U32 = "pmu_twi_addr"
-//$$ L2 PROP_U32 = "pmu_battery_rdc"
-//$$ L2 PROP_U32 = "pmu_battery_cap"
-//$$ L2 PROP_U32 = "pmu_battery_technology"
-//$$ L2 PROP_STR = "pmu_battery_name"
-//$$ L2 PROP_U32 = "pmu_init_chgvol"
-//$$ L2 PROP_U32 = "pmu_init_chgend_rate"
-//$$ L2 PROP_U32 = "pmu_init_chg_enabled"
-//$$ L2 PROP_U32 = "pmu_init_adc_freq"
-//$$ L2 PROP_U32 = "pmu_init_adc_freqc"
-//$$ L2 PROP_U32 = "pmu_init_chg_pretime"
-//$$ L2 PROP_U32 = "pmu_init_chg_csttime"
-//$$ L2 PROP_U32 = "pmu_init_chgcur"
-//$$ L2 PROP_U32 = "pmu_suspend_chgcur"
-//$$ L2 PROP_U32 = "pmu_resume_chgcur"
-//$$ L2 PROP_U32 = "pmu_shutdown_chgcur"
-//$$ L2 PROP_U32 = "pmu_usbcur_limit"
-//$$ L2 PROP_U32 = "pmu_usbcur"
-//$$ L2 PROP_U32 = "pmu_usbvol_limit"
-//$$ L2 PROP_U32 = "pmu_usbvol"
-//$$ L2 PROP_U32 = "pmu_pwroff_vol"
-//$$ L2 PROP_U32 = "pmu_pwron_vol"
-//$$ L2 PROP_U32 = "pmu_pekoff_time"
-//$$ L2 PROP_U32 = "pmu_pekoff_en"
-//$$ L2 PROP_U32 = "pmu_peklong_time"
-//$$ L2 PROP_U32 = "pmu_pwrok_time"
-//$$ L2 PROP_U32 = "pmu_pwrnoe_time"
-//$$ L2 PROP_U32 = "pmu_intotp_en"
-//$$ L2 PROP_U32 = "pmu_pekon_time"
-//$$ L2 PROP_U32 = "pmu_charge_efficiency"
-//$$ L2 PROP_U32 16*3 ="pmu_bat_curve"
-    battery_parameter:battery_parameter{
-        status = "okay";
-        pmu_twi_id = <2>;                   /** PMU i2c bus                          */
-        pmu_irq_id = <0>;                   /** INT_WATCHDOG                         */
-        pmu_twi_addr = <0x32>;              /** PMU i2c addr                         */
-        pmu_battery_rdc = <94>;             /** battery internal resistor            */
-        pmu_battery_cap = <9250>;           /** battery capacity                     */
-        pmu_battery_technology = <4>;       /** POWER_SUPPLY_TECHNOLOGY_LiFe         */
-        pmu_battery_name = "PTI PL336078";  /** battery name                         */
-        pmu_init_chgvol = <4200000>;        /** target charge voltage                */
-        pmu_init_chgend_rate = <10>;        /** set initial charing end current rate */
-        pmu_init_chg_enabled = <1>;         /** set initial charing enabled          */
-        pmu_init_adc_freq = <25>;           /** set initial adc frequency            */
-        pmu_init_adc_freqc = <100>;         /** set initial coulomb adc coufrequency */
-        pmu_init_chg_pretime = <80>;        /** set initial pre-charging time        */
-        pmu_init_chg_csttime = <300>;       /** set initial rapid-charging time      */
-        pmu_init_chgcur = <300000>;         /** set initial charging current limite  */
-        pmu_suspend_chgcur = <1300000>;     /** set suspend charging current limite  */
-        pmu_resume_chgcur = <300000>;       /** set resume charging current limite   */
-        pmu_shutdown_chgcur = <1300000>;    /** set shutdown charging current limite */
-        pmu_usbcur_limit = <1>;             /** enable usb current limit?            */
-        pmu_usbcur = <500>;                 /** usb limit current value if enabled   */
-        pmu_usbvol_limit = <1>;             /** enable usb vbus voltage limit        */
-        pmu_usbvol = <4400>;                /** voltage limit value if enabled       */
-        pmu_pwroff_vol = <3200>;            /** hardware force power off voltage     */
-        pmu_pwron_vol = <2900>;             /** power on when battery voltage above  */
-        pmu_pekoff_time = <6000>;           /** long press to power off system       */
-        pmu_pekoff_en  = <1>;               /** enable long press to PWR OFF system  */
-        pmu_peklong_time = <1500>;          /** threshold to detect long press       */
-        pmu_pwrok_time   = <64>;            /** delay to detect pwr ok signal        */
-        pmu_pwrnoe_time = <2000>;           /**                                      */
-        pmu_intotp_en = <1>;                /** over temperature protection enable   */
-        pmu_pekon_time = <128>;             /** powerkey hold time for power on      */
-        pmu_charge_efficiency = <99>;       /** efficient of charging                */
-        pmu_bat_curve = <
-         /* ocv, charge, discharge */
-            3132      0       0
-            3273      0       0
-            3414      0       0
-            3555      0       0  
-            3625      1       3  
-            3660      2       7  
-            3696      7      14 
-            3731     12      22 
-            3766     18      37 
-            3801     37      49 
-            3836     51      57
-            3872     57      63
-            3942     69      73
-            4012     80      82
-            4083     89      90
-            4153    100     100>;
-	};
 
     pmu {
         compatible = "amlogic, aml_pmu_prober";                 /* fixed for pmu driver, don't change   */
@@ -706,7 +728,6 @@ void root_func(){
             soft_limit_to99 = <0>;                              /** optional                             */
             ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
             vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
             status = "disable";                                 /** status of pmu, only one should be OK */
         };
 //$$ DEVICE = "Pmu_aml1212"
@@ -719,14 +740,13 @@ void root_func(){
 //$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
 //$$ L2 PROP_STR = "status"
         aml1212{                                                /* PMU for AML1212, see comment above   */
-            compatible = "aml_pmu";                             /* for driver probe, must have          */
+            compatible = "amlogic_pmu";                         /** for driver probe, must have          */
             sub_type = "aml1212";                               /** sub type of pmu family, must have    */
             i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
             reg = <0x35>;                                       /** device i2c address, must have        */
             soft_limit_to99 = <0>;                              /** optional                             */
             ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
             vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
             status = "disable";                                 /** status of pmu, only one should be OK */
         };
 //$$ DEVICE = "Pmu_rn5t618"
@@ -746,10 +766,47 @@ void root_func(){
             soft_limit_to99 = <0>;                              /** optional                             */
             ddr_voltage   = <1500000>;                          /** default voltage for DDR, optional    */
             vddao_voltage = <1200000>;                          /** default voltage for AO, optional     */
-            board_battery = <&battery_parameter>;               /** battery parameter used, must have    */
-            vbus_dcin_short_connect = <1>;
+            vbus_dcin_short_connect = <0>;
+            status = "disable";                                 /** status of pmu, only one should be OK */
+        };
+    
+//$$ DEVICE = "Pmu_aml1216"
+//$$ L2 PROP_STR = "sub_type"
+//$$ L2 PROP_STR = "i2c_bus"
+//$$ L2 PROP_U32 = "reg"
+//$$ L2 PROP_U32 = "soft_limit_to99"
+//$$ L2 PROP_U32 = "ddr_voltage"
+//$$ L2 PROP_U32 = "vddao_voltage"
+//$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
+//$$ L2 PROP_STR = "status"
+        aml1216{
+            compatible = "amlogic_pmu";                         /** compatible to amlogic PMU            */
+            sub_type = "aml1216_pmu";                           /** sub type of pmu family, must have    */
+            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+            reg = <0x35>;                                       /** device i2c address, must have        */
+            soft_limit_to99 = <0>;                              /** optional                             */
+            vbus_dcin_short_connect = <0>;
             status = "disable";                                 /** status of pmu, only one should be OK */
         };
+
+//$$ DEVICE = "Pmu_aml1218"
+//$$ L2 PROP_STR = "sub_type"
+//$$ L2 PROP_STR = "i2c_bus"
+//$$ L2 PROP_U32 = "reg"
+//$$ L2 PROP_U32 = "soft_limit_to99"
+//$$ L2 PROP_U32 = "ddr_voltage"
+//$$ L2 PROP_U32 = "vddao_voltage"
+//$$ L2 PROP_CHOICE "battery_parameter_match" = "board_battery"
+//$$ L2 PROP_STR = "status"
+        aml1218{
+            compatible = "amlogic_pmu";                         /** compatible to amlogic PMU            */
+            sub_type = "aml1218_pmu";                           /** sub type of pmu family, must have    */
+            i2c_bus = "i2c_bus_ao";                             /** attached i2c bus, must have          */
+            reg = <0x35>;                                       /** device i2c address, must have        */
+            soft_limit_to99 = <0>;                              /** optional                             */
+            vbus_dcin_short_connect = <0>;
+            status = "okay";                                    /** status of pmu, only one should be OK */
+        };
     };
 
 /// ***************************************************************************************
@@ -1540,11 +1597,11 @@ void root_func(){
 //$$ L2 PROP_U32 = "amlogic,pullup"
 //$$ L2 PROP_U32 = "amlogic,pullupen"      
         emmc_all_pins:emmc_all_pins{
-            amlogic,setmask=<6 0x3f000000>;         /*sdio c*/
-            amlogic,clrmask=<2 0x04c0fc00           /*sdio b & nand*/
+            amlogic,setmask=<6 0xfc000000>;         /*sdio c*/
+            amlogic,clrmask=<2 0x06c2fc00           /*sdio b & nand*/
                                 8 0x0000003f        /*sdio a*/
                                 4 0x6c000000>;        /*sdhc c*/
-            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_16","BOOT_17";
+            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_8","BOOT_10";
             amlogic,enable-output=<1>; /** 0:output, 1:input */
             amlogic,pullup=<1>;
             amlogic,pullupen=<1>;
@@ -1558,16 +1615,121 @@ void root_func(){
 //$$ L2 PROP_U32 = "amlogic,pullup"
 //$$ L2 PROP_U32 = "amlogic,pullupen"
         emmc_clk_cmd_pins:emmc_clk_cmd_pins{
-            amlogic,setmask=<6 0x03000000>;         /*bit[24-25] */
-            amlogic,clrmask=<2 0x04c0fc00           /*sdio b & nand*/
+            amlogic,setmask=<6 0xc0000000>;         /*bit[30-31] */
+            amlogic,clrmask=<2 0x06c2fc00           /*sdio b & nand   nand bit17 bit25*/ 
                                 8 0x0000003f        /*sdio a*/
-                                4 0x6c000000>;        /*sdhc c*/
-            amlogic,pins = "BOOT_16","BOOT_17"; /** BOOT_16:CMD, BOOT_17:CLK */
+                                7 0xc0000>;        /*sdhc c bit 18-19*/
+            amlogic,pins = "BOOT_8","BOOT_10"; /** BOOT_10:CMD, BOOT_8:CLK */
             amlogic,enable-output=<1>; /** 0:output, 1:input */
             amlogic,pullup=<1>;
             amlogic,pullupen=<1>;
         };
 
+//$$ MATCH "sdhc_pin_0_match" = "&sdhc_sd_clk_cmd_pins"
+//$$ L2 PROP_U32 2 = "amlogic,setmask"
+//$$ L2 PROP_U32 4*2 = "amlogic,clrmask"
+//$$ L2 PROP_STR 2 = "amlogic,pins"
+//$$ L2 PROP_U32 = "amlogic,enable-output"
+//$$ L2 PROP_U32 = "amlogic,pullup"
+//$$ L2 PROP_U32 = "amlogic,pullupen"
+        sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins{
+            amlogic,setmask=<2 0x00000030>;         /*sdhc b*/
+            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+                                4 0x7c000000        /*sdhc c*/
+                                2 0x0000fc00        /*sdio b*/
+                                8 0x00000600>;      /*UART*/
+            amlogic,pins = "CARD_2","CARD_3"; /* CARD_2:CLK, CARD_3:CMD */
+            amlogic,enable-output=<1>; /* 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+//$$ MATCH "sdhc_pin_1_match" = "&sdhc_sd_all_pins"
+//$$ L2 PROP_U32 2 = "amlogic,setmask"
+//$$ L2 PROP_U32 4*2 = "amlogic,clrmask"
+//$$ L2 PROP_STR 6 = "amlogic,pins"
+//$$ L2 PROP_U32 = "amlogic,enable-output"
+//$$ L2 PROP_U32 = "amlogic,pullup"
+//$$ L2 PROP_U32 = "amlogic,pullupen"
+        sdhc_sd_all_pins:sdhc_sd_all_pins{
+            amlogic,setmask=<2 0x000000f0>;         /*sdhc b*/
+            amlogic,clrmask=<5 0x00007c00           /*sdhc a*/
+                                4 0x7c000000        /*sdhc c*/
+                                2 0x0000fc00        /*sdio b*/
+                                8 0x00000600>;      /*UART*/
+            amlogic,pins="CARD_0","CARD_1","CARD_2","CARD_3","CARD_4","CARD_5";
+            amlogic,enable-output=<1>; /* 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+//$$ MATCH "sdhc_pin_2_match" = "&sdhc_emmc_clk_cmd_pins"
+//$$ L2 PROP_U32 2 = "amlogic,setmask"
+//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
+//$$ L2 PROP_STR 2 = "amlogic,pins"
+//$$ L2 PROP_U32 = "amlogic,enable-output"
+//$$ L2 PROP_U32 = "amlogic,pullup"
+//$$ L2 PROP_U32 = "amlogic,pullupen"
+        sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins{
+            amlogic,setmask=<7 0xc0000>;         /*bit[18-19] */
+            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+                                5 0x00007c00        /*sdhc a*/
+                                6 0xff000000>;        /*sdio c*/
+            amlogic,pins = "BOOT_8","BOOT_10"; /** BOOT_10:CMD, BOOT_8:CLK */
+            amlogic,enable-output=<1>; /** 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+//$$ MATCH "sdhc_pin_3_match" = "&sdhc_emmc_all_pins"
+//$$ L2 PROP_U32 2 = "amlogic,setmask"
+//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
+//$$ L2 PROP_STR 10 = "amlogic,pins"
+//$$ L2 PROP_U32 = "amlogic,enable-output"
+//$$ L2 PROP_U32 = "amlogic,pullup"
+//$$ L2 PROP_U32 = "amlogic,pullupen"
+        sdhc_emmc_all_pins:sdhc_emmc_all_pins{
+            amlogic,setmask=<4 0x70000000
+                             7 0xc0000>;         /*sdhc c*/
+            amlogic,clrmask=<2 0x04c000f0           /*sdhc b & nand*/
+                                5 0x00007c00        /*sdhc a*/
+                                6 0xff000000>;        /*sdio c*/
+            amlogic,pins = "BOOT_0","BOOT_1","BOOT_2","BOOT_3","BOOT_4","BOOT_5","BOOT_6","BOOT_7","BOOT_8","BOOT_10";
+            amlogic,enable-output=<1>; /** 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+//$$ MATCH "sdhc_pin_4_match" = "&sdhc_sdio_clk_cmd_pins"
+//$$ L2 PROP_U32 2 = "amlogic,setmask"
+//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
+//$$ L2 PROP_STR 2 = "amlogic,pins"
+//$$ L2 PROP_U32 = "amlogic,enable-output"
+//$$ L2 PROP_U32 = "amlogic,pullup"
+//$$ L2 PROP_U32 = "amlogic,pullupen"
+        sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins{
+            amlogic,setmask=<5 0x00000c00>;         /*sdhc a bit[10-11] */
+            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+                                4 0x7c000000        /*sdhc c */
+                                8 0x0000003f>;        /*sdio a*/
+            amlogic,pins = "GPIOX_8","GPIOX_9"; /** BOOT_16:CMD, BOOT_17:CLK */
+            amlogic,enable-output=<1>; /** 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
+//$$ MATCH "sdhc_pin_5_match" = "&sdhc_sdio_all_pins"
+//$$ L2 PROP_U32 2 = "amlogic,setmask"
+//$$ L2 PROP_U32 3*2 = "amlogic,clrmask"
+//$$ L2 PROP_STR 6 = "amlogic,pins"
+//$$ L2 PROP_U32 = "amlogic,enable-output"
+//$$ L2 PROP_U32 = "amlogic,pullup"
+//$$ L2 PROP_U32 = "amlogic,pullupen"
+        sdhc_sdio_all_pins:sdhc_sdio_all_pins{
+            amlogic,setmask=<5 0x00006c00>;         /*sdhc a*/
+            amlogic,clrmask=<2 0x058000f0           /*sdhc b*/
+                                4 0x7c000000        /*sdhc c */
+                                8 0x0000003f>;        /*sdio a*/
+            amlogic,pins = "GPIOX_0","GPIOX_1","GPIOX_2","GPIOX_3","GPIOX_8","GPIOX_9";
+            amlogic,enable-output=<1>; /** 0:output, 1:input */
+            amlogic,pullup=<1>;
+            amlogic,pullupen=<1>;
+        };
 //$$ MATCH "Camera_pin_0_match" = "&aml_cam_gpio_pins"
 //$$ L2 PROP_U32 4 = "amlogic,setmask"
 //$$ L2 PROP_STR 10 = "amlogic,pins"	
diff --git a/arch/arm/configs/meson8b_defconfig b/arch/arm/configs/meson8b_defconfig
index be6b65dc6999..7f62cb65e20c 100755
--- a/arch/arm/configs/meson8b_defconfig
+++ b/arch/arm/configs/meson8b_defconfig
@@ -322,3 +322,10 @@ CONFIG_DEBUG_INFO=y
 CONFIG_CRC_T10DIF=y
 CONFIG_CRC7=y
 CONFIG_AM_LCD_OUTPUT=y
+CONFIG_VIDEO_AMLOGIC_CAPTURE=y
+CONFIG_AMLOGIC_CAPTURE_FRAME_ROTATE=y
+CONFIG_AMLOGIC_VM_DISABLE_VIDEOLAYER=y
+#CONFIG_VIDEO_AMLOGIC_CAPTURE_GC0308=y
+#CONFIG_VIDEO_AMLOGIC_CAPTURE_GC0328=y
+CONFIG_VIDEO_AMLOGIC_CAPTURE_SP0838=y
+
diff --git a/drivers/amlogic/amports/amstream.c b/drivers/amlogic/amports/amstream.c
index 8596669ab443..6f97c89da08c 100755
--- a/drivers/amlogic/amports/amstream.c
+++ b/drivers/amlogic/amports/amstream.c
@@ -1783,11 +1783,12 @@ static ssize_t bufs_show(struct class *class, struct class_attribute *attr, char
         /*buf stats*/
 
         pbuf += sprintf(pbuf, "\tbuf addr:%#x\n", p->buf_start);
-        if (p->type != BUF_TYPE_SUBTITLE) {
 
+        if (p->type != BUF_TYPE_SUBTITLE) {
             pbuf += sprintf(pbuf, "\tbuf size:%#x\n", p->buf_size);
             pbuf += sprintf(pbuf, "\tbuf canusesize:%#x\n", p->canusebuf_size);
             pbuf += sprintf(pbuf, "\tbuf regbase:%#lx\n", p->reg_base);
+
             if (p->reg_base && p->flag & BUF_FLAG_IN_USE) {
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
                 switch_mod_gate_by_name("vdec", 1);
@@ -1798,7 +1799,7 @@ static ssize_t bufs_show(struct class *class, struct class_attribute *attr, char
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
                 switch_mod_gate_by_name("vdec", 0);
 #endif
-            }else {
+            } else {
                 pbuf += sprintf(pbuf, "\tbuf no used.\n");
             }
         } else {
@@ -1820,23 +1821,27 @@ static ssize_t bufs_show(struct class *class, struct class_attribute *attr, char
 
         pbuf += sprintf(pbuf, "\tbuf first_stamp:%#x\n", p->first_tstamp);
         pbuf += sprintf(pbuf, "\tbuf wcnt:%#x\n\n", p->wcnt);
-		
-		pbuf += sprintf(pbuf, "\tbuf max_buffer_delay_ms:%dms\n", p->max_buffer_delay_ms);
-		{
-			int calc_delayms=0;
-			u32 bitrate=0,avg_bitrate=0;
-			calc_delayms=calculation_stream_delayed_ms(p->type,&bitrate,&avg_bitrate);
-			if(calc_delayms>=0){
-		    	pbuf += sprintf(pbuf, "\tbuf current delay:%dms\n",calc_delayms);
-		    	pbuf += sprintf(pbuf, "\tbuf bitrate latest:%dbps,avg:%dbps\n",bitrate,avg_bitrate);
-		    	pbuf += sprintf(pbuf, "\tbuf time after last pts:%d ms\n",
-                      calculation_stream_ext_delayed_ms(p->type));
-				pbuf += sprintf(pbuf, "\tbuf time after last write data :%d ms\n",
-					  (int)(jiffies_64 - p->last_write_jiffies64)*1000/HZ);
-
-			}
-		}
+        pbuf += sprintf(pbuf, "\tbuf max_buffer_delay_ms:%dms\n", p->max_buffer_delay_ms);
+
+        if (p->reg_base && p->flag & BUF_FLAG_IN_USE) {
+            int calc_delayms=0;
+            u32 bitrate=0,avg_bitrate=0;
+
+            calc_delayms = calculation_stream_delayed_ms(p->type, &bitrate, &avg_bitrate);
+
+            if (calc_delayms>=0) {
+                pbuf += sprintf(pbuf, "\tbuf current delay:%dms\n",calc_delayms);
+                pbuf += sprintf(pbuf, "\tbuf bitrate latest:%dbps,avg:%dbps\n",bitrate,avg_bitrate);
+                pbuf += sprintf(pbuf, "\tbuf time after last pts:%d ms\n",
+
+                calculation_stream_ext_delayed_ms(p->type));
+
+                pbuf += sprintf(pbuf, "\tbuf time after last write data :%d ms\n",
+                                (int)(jiffies_64 - p->last_write_jiffies64)*1000/HZ);
+            }
+        }
     }
+
     return pbuf - buf;
 }
 
diff --git a/drivers/amlogic/amports/m8/ucode/h265/vh265_mc.c b/drivers/amlogic/amports/m8/ucode/h265/vh265_mc.c
index 891124484cce..02678036375f 100755
--- a/drivers/amlogic/amports/m8/ucode/h265/vh265_mc.c
+++ b/drivers/amlogic/amports/m8/ucode/h265/vh265_mc.c
@@ -23,501 +23,510 @@
 
 const u32 vh265_mc[] __attribute__((aligned(8))) = {
 0x06810001,0x06800000,0x0d000001,0x07400040,0x0c000900,0x00000000,
-0x06bffe40,0x07c00000,0x06030400,0x00400000,0x0800c0ff,0x0c02dbc0,
+0x06bffe40,0x07c00000,0x06030400,0x00400000,0x0800c0ff,0x0c02de80,
 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
 0x00000000,0x00000000,0x00000000,0x0c7ffd80,0x00000000,0x00000000,
 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
-0x00000000,0x00000000,0x0c7a2000,0x00000000,0x0c79c100,0x06412108,
-0x0c780480,0x00000000,0x0cc00000,0x00400000,0x0800c000,0x08002515,
+0x00000000,0x00000000,0x0c7a22c0,0x00000000,0x0c79c3c0,0x06412108,
+0x0c780500,0x00000000,0x0cc00000,0x00400000,0x0800c000,0x08002515,
 0x08002608,0x06bfbb80,0x06ffbfc0,0x06070500,0x06070600,0x06070700,
-0x06803fc0,0x07c00140,0x07c00780,0x07c01480,0x0cc00000,0x00000000,
-0x06bfff88,0x06030408,0x00400000,0x0640c008,0x0a6181c8,0x00000000,
-0x0c02aec0,0x00000000,0x0c79b580,0x0800c0ff,0x0aa0c048,0x0c781e00,
-0x00000000,0x06410108,0x09021208,0x0a6f8008,0x00000000,0x0640c808,
-0x06013408,0x08013503,0x06413508,0x090e1208,0x0a6f8008,0x00000000,
-0x08013500,0x06410c08,0x08010e90,0x09326208,0x0aa0c808,0x0c79b040,
-0x0800c0fe,0x06410c08,0x08010e90,0x09384288,0x09223248,0x07c00189,
-0x09201248,0x07c001c9,0x08010e90,0x07800148,0x0a805288,0x07c0010a,
-0x0aa0ffc8,0x0c023ac0,0x05407308,0x0780010a,0x07c0014a,0x06410c08,
-0x08010e88,0x09305248,0x07c00209,0x06410c08,0x08010e90,0x09210248,
-0x07c00249,0x06410c08,0x08010e90,0x09210248,0x07c00289,0x06410c08,
-0x08010e84,0x08010e90,0x08010e90,0x08010e8c,0x06410c08,0x08010e88,
-0x09308248,0x07c002c9,0x0780018b,0x0aa3800b,0x00000000,0x06410c0a,
-0x08010e90,0x0aa2800b,0x093e124a,0x0aa08009,0x0c780000,0x093c124a,
-0x0aa08009,0x0c780000,0x0540228a,0x0c7ffe00,0x044012cb,0x06410c08,
-0x08010e81,0x093e1248,0x0780018b,0x0ae000cb,0x0a60c009,0x0680000a,
-0x0780018a,0x0ac0a2ca,0x00000000,0x0c01a140,0x0400c24a,0x0c01a0c0,
-0x0401024a,0x0c01a040,0x0401424a,0x0c7ffe00,0x0400128a,0x08010e86,
-0x06806008,0x06010e08,0x06410f08,0x0befc0c8,0x09118208,0x0aa08008,
-0x0c780000,0x06410c08,0x08010e81,0x093e1248,0x0aa40009,0x08010e90,
-0x08010e90,0x08010e90,0x08010e90,0x06410c08,0x08010e81,0x093e1248,
-0x0aa0c009,0x0c019a40,0x06800049,0x0c0199c0,0x06800049,0x0aa0c008,
-0x0c780000,0x00000000,0x08010e81,0x0c799740,0x0800c0ff,0x0aa0c088,
-0x0c78a380,0x00000000,0x06410c08,0x08010e90,0x09326208,0x0aa0c848,
-0x0c799500,0x0800c0fe,0x06410c08,0x08010e88,0x09384288,0x09323248,
-0x07c00609,0x09301248,0x07c00649,0x07800148,0x0a808288,0x07c0010a,
-0x0c022000,0x05407308,0x0780010a,0x07c0014a,0x0c022b80,0x0540730a,
-0x06410c08,0x08010e88,0x09305248,0x07c00689,0x06410c08,0x08010e90,
-0x09210248,0x07c006c9,0x06410c08,0x08010e90,0x09210248,0x07c00709,
-0x06410c08,0x08010e84,0x08010e90,0x08010e90,0x08010e8c,0x06410c08,
-0x08010e88,0x09308248,0x07c00749,0x0780060b,0x0aa3800b,0x00000000,
-0x06410c0a,0x08010e90,0x0aa2800b,0x093e124a,0x0aa08009,0x0c780000,
-0x093c124a,0x0aa08009,0x0c780000,0x0540228a,0x0c7ffe00,0x044012cb,
-0x0c018880,0x06800049,0x07800789,0x0a805209,0x07c00108,0x0aa0ffc9,
-0x0c021a40,0x05407309,0x07800108,0x07c00788,0x0c018600,0x068007c9,
-0x0c018580,0x06800809,0x0c018500,0x06800849,0x07800808,0x07800849,
-0x09610209,0x06012308,0x06410c08,0x08010e81,0x093e1248,0x0aa24009,
-0x0c018280,0x06800049,0x0c018200,0x06800049,0x0c018180,0x06800049,
-0x0c018100,0x06800049,0x0c018080,0x06800889,0x0c018000,0x068008c9,
-0x0c017f80,0x06800909,0x06410c08,0x08010e81,0x093e1248,0x0780060b,
-0x0ae000cb,0x0a60c009,0x0680000a,0x0780060a,0x0ac0a2ca,0x00000000,
-0x0c017c80,0x0402524a,0x0c017c00,0x0402924a,0x0c017b80,0x0402d24a,
-0x0c7ffe00,0x0400128a,0x0c017a80,0x06800c49,0x07800c49,0x07c00cc9,
-0x0c017980,0x06800c89,0x07800c49,0x07800c88,0x02009209,0x07c00d09,
-0x07800d08,0x0a6300c8,0x07800809,0x0403f249,0x05806249,0x07c00dc9,
-0x07800849,0x0403f249,0x05806249,0x07c00e09,0x08040640,0x0c780900,
-0x06820e20,0x0a630088,0x07800809,0x0401f249,0x05805249,0x07c00dc9,
-0x07800849,0x0401f249,0x05805249,0x07c00e09,0x08040620,0x0c780600,
-0x068213a0,0x0a630048,0x07800809,0x0400f249,0x05804249,0x07c00dc9,
-0x07800849,0x0400f249,0x05804249,0x07c00e09,0x08040610,0x0c780300,
-0x06821be0,0x07800809,0x04007249,0x05803249,0x07c00dc9,0x07800849,
-0x04007249,0x05803249,0x07c00e09,0x08040608,0x06822720,0x07800dc8,
-0x07800e09,0x0e000248,0x00000000,0x00000000,0x06800009,0x0f000200,
-0x04401208,0x0aa10008,0x05801208,0x0c7fff80,0x04001249,0x07c01409,
-0x07800809,0x0780084a,0x0960f24a,0x06040209,0x07800dc9,0x07800e0a,
-0x0960c24a,0x06040309,0x08040400,0x0c0166c0,0x06800049,0x07800049,
-0x07c00d49,0x0c0165c0,0x06800089,0x07800049,0x07800088,0x02009209,
-0x07c00d89,0x0c016440,0x06800e89,0x0c0163c0,0x06800ec9,0x06410c08,
-0x08010e81,0x093e1248,0x0aa38009,0x07c00f09,0x06410c08,0x08010e81,
-0x093e1248,0x0aa0c009,0x0c0016c0,0x00000000,0x07800788,0x0aa0c008,
-0x068f000c,0x069f000c,0x0c020c00,0x00000000,0x06410c08,0x08010e83,
-0x093e1248,0x07c00f49,0x093c1248,0x07c00f89,0x093a1248,0x0aa58009,
-0x06800009,0x06410c08,0x08010e88,0x09384248,0x04001249,0x07c01009,
-0x09304248,0x04001249,0x07c01049,0x0c015ac0,0x06801089,0x0c015a40,
-0x068010c9,0x07801089,0x02008248,0x07c010c8,0x06410c08,0x08010e81,
-0x093e1248,0x07c01109,0x06800049,0x07c00fc9,0x0c015780,0x06801149,
-0x0680000e,0x0780114f,0x044013cf,0x0aa1000f,0x058013cf,0x0c7fff80,
-0x0400138e,0x07c0118e,0x0780114f,0x0680000e,0x0b4143ce,0x00000000,
-0x0480f20e,0x05404208,0x0680800d,0x0200d20d,0x0c002580,0x00000000,
-0x0480f20e,0x0aa1c3c8,0x00000000,0x0400120e,0x0b4043c8,0x00000000,
-0x0c780100,0x00000000,0x0c004600,0x00000000,0x0c7ffb80,0x0400138e,
-0x06410c08,0x08010e81,0x093e1248,0x07c011c9,0x0aa10009,0x0c014e40,
-0x06801209,0x0a600008,0x06410c08,0x08010e83,0x093e1248,0x07c01249,
-0x093c1248,0x07c01289,0x093a1248,0x0aa0c009,0x0c004a80,0x00000000,
-0x08010e81,0x0c7949c0,0x0800c0ff,0x068c8408,0x06c41508,0x06070508,
-0x06070608,0x06070708,0x0680000b,0x0680000a,0x06410c08,0x08010e81,
-0x093e1248,0x0aa08009,0x0c780f00,0x0c014740,0x06800049,0x0aa140cb,
-0x0400e3ca,0x0ba0c0ca,0x0680038f,0x068003cf,0x0a60c00b,0x0c780180,
-0x0647050d,0x0a60c04b,0x0c7800c0,0x0647060d,0x0647070d,0x0aa38008,
-0x0400038f,0x0aa300cb,0x0680000e,0x0240f20a,0x0aa2410f,0x0920438d,
-0x0aa1c0cf,0x0918438d,0x0aa1408f,0x0910438d,0x0aa0c04f,0x0908438d,
-0x0900438d,0x0a61c0cb,0x0a60c00a,0x0c7800c0,0x0970434e,0x0978434e,
-0x0c780ec0,0x0607070d,0x0aa1c00a,0x0aa2004a,0x0aa2408a,0x0aa280ca,
-0x0aa2c10a,0x0c7802c0,0x0968434e,0x0c780240,0x0940434e,0x0c7801c0,
-0x0948434e,0x0c780140,0x0950434e,0x0c7800c0,0x0958434e,0x0960434e,
-0x0aa1000b,0x0aa1404b,0x0c7809c0,0x0607070d,0x0c780940,0x0607050d,
-0x0c7808c0,0x0607060d,0x0ba2c08b,0x0680020c,0x0c0139c0,0x06800049,
-0x04008308,0x0aa0c08b,0x0680f808,0x0680f988,0x02008288,0x06070208,
-0x0607040c,0x0aa1c00b,0x0680e008,0x0aa1404b,0x06800008,0x0aa0c08b,
-0x06806008,0x0680c008,0x0680040e,0x0aa1000b,0x0540424a,0x0680100e,
-0x0540624a,0x02008248,0x06070208,0x0680004d,0x0c0133c0,0x06800049,
-0x0200c20c,0x048ff30c,0x0607040c,0x0b8fb38d,0x0400134d,0x0ba0c0cb,
-0x06800149,0x06800049,0x0b40324a,0x0c7fe6c0,0x0400128a,0x0b60c0cb,
-0x0c7fe5c0,0x040012cb,0x0cc00000,0x00000000,0x0aa1400e,0x06800009,
-0x06410c08,0x08010e81,0x093e1248,0x0a608009,0x0c781540,0x07801149,
-0x0a40624e,0x0440144e,0x0c012b00,0x06800049,0x0c002500,0x02411211,
-0x0480f451,0x05404451,0x06808008,0x02011211,0x06800010,0x06800012,
-0x06410c08,0x08010e81,0x093e1288,0x0c0127c0,0x06800049,0x0aa1000a,
-0x040014c8,0x06800009,0x024134c9,0x0b60c412,0x06a0000b,0x0700044b,
-0x04001451,0x04001492,0x0200c2d3,0x091e12cb,0x0900e30c,0x06410c08,
-0x08010e81,0x093e1288,0x095c130a,0x0a62000a,0x06410c08,0x08010e81,
-0x093e1288,0x0a61000a,0x0a62400b,0x0c7ffb80,0x00000000,0x0740034c,
-0x0400134d,0x04001410,0x0a60c00b,0x0c7ffa00,0x00000000,0x0b60c410,
-0x06a00008,0x07400348,0x0ae08050,0x0c780780,0x0440134d,0x07000351,
-0x0900e451,0x091a1491,0x06900013,0x0aa0c012,0x02012453,0x02412453,
-0x0680004c,0x0b41240c,0x0241130d,0x07000451,0x0900e451,0x091a12d1,
-0x06900013,0x0aa0c00b,0x0200b453,0x0240b453,0x0b4072d2,0x0241130d,
-0x0400048b,0x0700044b,0x07000353,0x0740034b,0x07400453,0x0c7ffc00,
-0x0400130c,0x0c7ff8c0,0x04401410,0x0cc00000,0x00000000,0x0c0116c0,
-0x06800049,0x0c011640,0x06800089,0x06800010,0x0680000a,0x0680000b,
-0x0780004c,0x0b41130b,0x0c011480,0x068000c9,0x0240a20a,0x0440128a,
-0x06410c08,0x08010e81,0x093e1248,0x0900e20a,0x095c1209,0x07400348,
-0x0400134d,0x04001410,0x0bacc410,0x040012cb,0x0cc00000,0x00000000,
-0x0680000a,0x0680000b,0x0780008c,0x0b41130b,0x0c010f80,0x068000c9,
-0x0200a20a,0x0400128a,0x06410c08,0x08010e81,0x093e1248,0x0900e20a,
+0x06803fc0,0x07c00140,0x07c00780,0x07c01480,0x0640d000,0x07c03380,
+0x0cc00000,0x00000000,0x06bfff88,0x06030408,0x00400000,0x0640c008,
+0x0a6181c8,0x00000000,0x0c02b100,0x00000000,0x0c79b7c0,0x0800c0ff,
+0x0aa0c048,0x0c781ec0,0x00000000,0x06410108,0x09021208,0x0a6f8008,
+0x00000000,0x0640c808,0x06013408,0x08013503,0x06413508,0x090e1208,
+0x0a6f8008,0x00000000,0x08013500,0x06410c08,0x08010e90,0x09326208,
+0x0aa0c808,0x0c79b280,0x0800c0fe,0x07803348,0x09808008,0x07c03348,
+0x06410c08,0x08010e90,0x09384288,0x09223248,0x07c00189,0x09201248,
+0x07c001c9,0x08010e90,0x07800148,0x0a805288,0x07c0010a,0x0aa0ffc8,
+0x0c023c40,0x05407308,0x0780010a,0x07c0014a,0x06410c08,0x08010e88,
+0x09305248,0x07c00209,0x06410c08,0x08010e90,0x09210248,0x07c00249,
+0x06410c08,0x08010e90,0x09210248,0x07c00289,0x06410c08,0x08010e84,
+0x08010e90,0x08010e90,0x08010e8c,0x06410c08,0x08010e88,0x09308248,
+0x07c002c9,0x0780018b,0x0aa3800b,0x00000000,0x06410c0a,0x08010e90,
+0x0aa2800b,0x093e124a,0x0aa08009,0x0c780000,0x093c124a,0x0aa08009,
+0x0c780000,0x0540228a,0x0c7ffe00,0x044012cb,0x06410c08,0x08010e81,
+0x093e1248,0x0780018b,0x0ae000cb,0x0a60c009,0x0680000a,0x0780018a,
+0x0ac0a2ca,0x00000000,0x0c01a2c0,0x0400c24a,0x0c01a240,0x0401024a,
+0x0c01a1c0,0x0401424a,0x0c7ffe00,0x0400128a,0x08010e86,0x06806008,
+0x06010e08,0x06410f08,0x0befc0c8,0x09118208,0x0aa08008,0x0c780000,
+0x06410c08,0x08010e81,0x093e1248,0x0aa40009,0x08010e90,0x08010e90,
+0x08010e90,0x08010e90,0x06410c08,0x08010e81,0x093e1248,0x0aa0c009,
+0x0c019bc0,0x06800049,0x0c019b40,0x06800049,0x0aa0c008,0x0c780000,
+0x00000000,0x08010e81,0x0c7998c0,0x0800c0ff,0x0aa0c088,0x0c78a440,
+0x00000000,0x06410c08,0x08010e90,0x09326208,0x0aa0c848,0x0c799680,
+0x0800c0fe,0x07803348,0x09808048,0x07c03348,0x06410c08,0x08010e88,
+0x09384288,0x09323248,0x07c00609,0x09301248,0x07c00649,0x07800148,
+0x0a808288,0x07c0010a,0x0c0220c0,0x05407308,0x0780010a,0x07c0014a,
+0x0c022c40,0x0540730a,0x06410c08,0x08010e88,0x09305248,0x07c00689,
+0x06410c08,0x08010e90,0x09210248,0x07c006c9,0x06410c08,0x08010e90,
+0x09210248,0x07c00709,0x06410c08,0x08010e84,0x08010e90,0x08010e90,
+0x08010e8c,0x06410c08,0x08010e88,0x09308248,0x07c00749,0x0780060b,
+0x0aa3800b,0x00000000,0x06410c0a,0x08010e90,0x0aa2800b,0x093e124a,
+0x0aa08009,0x0c780000,0x093c124a,0x0aa08009,0x0c780000,0x0540228a,
+0x0c7ffe00,0x044012cb,0x0c018940,0x06800049,0x07800789,0x0a805209,
+0x07c00108,0x0aa0ffc9,0x0c021b00,0x05407309,0x07800108,0x07c00788,
+0x0c0186c0,0x068007c9,0x0c018640,0x06800809,0x0c0185c0,0x06800849,
+0x07800808,0x07800849,0x09610209,0x06012308,0x06410c08,0x08010e81,
+0x093e1248,0x0aa24009,0x0c018340,0x06800049,0x0c0182c0,0x06800049,
+0x0c018240,0x06800049,0x0c0181c0,0x06800049,0x0c018140,0x06800889,
+0x0c0180c0,0x068008c9,0x0c018040,0x06800909,0x06410c08,0x08010e81,
+0x093e1248,0x0780060b,0x0ae000cb,0x0a60c009,0x0680000a,0x0780060a,
+0x0ac0a2ca,0x00000000,0x0c017d40,0x0402524a,0x0c017cc0,0x0402924a,
+0x0c017c40,0x0402d24a,0x0c7ffe00,0x0400128a,0x0c017b40,0x06800c49,
+0x07800c49,0x07c00cc9,0x0c017a40,0x06800c89,0x07800c49,0x07800c88,
+0x02009209,0x07c00d09,0x07800d08,0x0a6300c8,0x07800809,0x0403f249,
+0x05806249,0x07c00dc9,0x07800849,0x0403f249,0x05806249,0x07c00e09,
+0x08040640,0x0c780900,0x068210e0,0x0a630088,0x07800809,0x0401f249,
+0x05805249,0x07c00dc9,0x07800849,0x0401f249,0x05805249,0x07c00e09,
+0x08040620,0x0c780600,0x06821660,0x0a630048,0x07800809,0x0400f249,
+0x05804249,0x07c00dc9,0x07800849,0x0400f249,0x05804249,0x07c00e09,
+0x08040610,0x0c780300,0x06821ea0,0x07800809,0x04007249,0x05803249,
+0x07c00dc9,0x07800849,0x04007249,0x05803249,0x07c00e09,0x08040608,
+0x068229e0,0x07800dc8,0x07800e09,0x0e000248,0x00000000,0x00000000,
+0x06800009,0x0f000200,0x04401208,0x0aa10008,0x05801208,0x0c7fff80,
+0x04001249,0x07c01409,0x07800809,0x0780084a,0x0960f24a,0x06040209,
+0x07800dc9,0x07800e0a,0x0960c24a,0x06040309,0x08040400,0x0c016780,
+0x06800049,0x07800049,0x07c00d49,0x0c016680,0x06800089,0x07800049,
+0x07800088,0x02009209,0x07c00d89,0x0c016500,0x06800e89,0x0c016480,
+0x06800ec9,0x06410c08,0x08010e81,0x093e1248,0x0aa38009,0x07c00f09,
+0x06410c08,0x08010e81,0x093e1248,0x0aa0c009,0x0c0016c0,0x00000000,
+0x07800788,0x0aa0c008,0x068f000c,0x069f000c,0x0c020cc0,0x00000000,
+0x06410c08,0x08010e83,0x093e1248,0x07c00f49,0x093c1248,0x07c00f89,
+0x093a1248,0x0aa58009,0x06800009,0x06410c08,0x08010e88,0x09384248,
+0x04001249,0x07c01009,0x09304248,0x04001249,0x07c01049,0x0c015b80,
+0x06801089,0x0c015b00,0x068010c9,0x07801089,0x02008248,0x07c010c8,
+0x06410c08,0x08010e81,0x093e1248,0x07c01109,0x06800049,0x07c00fc9,
+0x0c015840,0x06801149,0x0680000e,0x0780114f,0x044013cf,0x0aa1000f,
+0x058013cf,0x0c7fff80,0x0400138e,0x07c0118e,0x0780114f,0x0680000e,
+0x0b4143ce,0x00000000,0x0480f20e,0x05404208,0x0680800d,0x0200d20d,
+0x0c002580,0x00000000,0x0480f20e,0x0aa1c3c8,0x00000000,0x0400120e,
+0x0b4043c8,0x00000000,0x0c780100,0x00000000,0x0c004600,0x00000000,
+0x0c7ffb80,0x0400138e,0x06410c08,0x08010e81,0x093e1248,0x07c011c9,
+0x0aa10009,0x0c014f00,0x06801209,0x0a600008,0x06410c08,0x08010e83,
+0x093e1248,0x07c01249,0x093c1248,0x07c01289,0x093a1248,0x0aa0c009,
+0x0c004a80,0x00000000,0x08010e81,0x0c794a80,0x0800c0ff,0x068c8408,
+0x06c41508,0x06070508,0x06070608,0x06070708,0x0680000b,0x0680000a,
+0x06410c08,0x08010e81,0x093e1248,0x0aa08009,0x0c780f00,0x0c014800,
+0x06800049,0x0aa140cb,0x0400e3ca,0x0ba0c0ca,0x0680038f,0x068003cf,
+0x0a60c00b,0x0c780180,0x0647050d,0x0a60c04b,0x0c7800c0,0x0647060d,
+0x0647070d,0x0aa38008,0x0400038f,0x0aa300cb,0x0680000e,0x0240f20a,
+0x0aa2410f,0x0920438d,0x0aa1c0cf,0x0918438d,0x0aa1408f,0x0910438d,
+0x0aa0c04f,0x0908438d,0x0900438d,0x0a61c0cb,0x0a60c00a,0x0c7800c0,
+0x0970434e,0x0978434e,0x0c780ec0,0x0607070d,0x0aa1c00a,0x0aa2004a,
+0x0aa2408a,0x0aa280ca,0x0aa2c10a,0x0c7802c0,0x0968434e,0x0c780240,
+0x0940434e,0x0c7801c0,0x0948434e,0x0c780140,0x0950434e,0x0c7800c0,
+0x0958434e,0x0960434e,0x0aa1000b,0x0aa1404b,0x0c7809c0,0x0607070d,
+0x0c780940,0x0607050d,0x0c7808c0,0x0607060d,0x0ba2c08b,0x0680020c,
+0x0c013a80,0x06800049,0x04008308,0x0aa0c08b,0x0680f808,0x0680f988,
+0x02008288,0x06070208,0x0607040c,0x0aa1c00b,0x0680e008,0x0aa1404b,
+0x06800008,0x0aa0c08b,0x06806008,0x0680c008,0x0680040e,0x0aa1000b,
+0x0540424a,0x0680100e,0x0540624a,0x02008248,0x06070208,0x0680004d,
+0x0c013480,0x06800049,0x0200c20c,0x048ff30c,0x0607040c,0x0b8fb38d,
+0x0400134d,0x0ba0c0cb,0x06800149,0x06800049,0x0b40324a,0x0c7fe6c0,
+0x0400128a,0x0b60c0cb,0x0c7fe5c0,0x040012cb,0x0cc00000,0x00000000,
+0x0aa1400e,0x06800009,0x06410c08,0x08010e81,0x093e1248,0x0a608009,
+0x0c781540,0x07801149,0x0a40624e,0x0440144e,0x0c012bc0,0x06800049,
+0x0c002500,0x02411211,0x0480f451,0x05404451,0x06808008,0x02011211,
+0x06800010,0x06800012,0x06410c08,0x08010e81,0x093e1288,0x0c012880,
+0x06800049,0x0aa1000a,0x040014c8,0x06800009,0x024134c9,0x0b60c412,
+0x06a0000b,0x0700044b,0x04001451,0x04001492,0x0200c2d3,0x091e12cb,
+0x0900e30c,0x06410c08,0x08010e81,0x093e1288,0x095c130a,0x0a62000a,
+0x06410c08,0x08010e81,0x093e1288,0x0a61000a,0x0a62400b,0x0c7ffb80,
+0x00000000,0x0740034c,0x0400134d,0x04001410,0x0a60c00b,0x0c7ffa00,
+0x00000000,0x0b60c410,0x06a00008,0x07400348,0x0ae08050,0x0c780780,
+0x0440134d,0x07000351,0x0900e451,0x091a1491,0x06900013,0x0aa0c012,
+0x02012453,0x02412453,0x0680004c,0x0b41240c,0x0241130d,0x07000451,
+0x0900e451,0x091a12d1,0x06900013,0x0aa0c00b,0x0200b453,0x0240b453,
+0x0b4072d2,0x0241130d,0x0400048b,0x0700044b,0x07000353,0x0740034b,
+0x07400453,0x0c7ffc00,0x0400130c,0x0c7ff8c0,0x04401410,0x0cc00000,
+0x00000000,0x0c011780,0x06800049,0x0c011700,0x06800089,0x06800010,
+0x0680000a,0x0680000b,0x0780004c,0x0b41130b,0x0c011540,0x068000c9,
+0x0240a20a,0x0440128a,0x06410c08,0x08010e81,0x093e1248,0x0900e20a,
 0x095c1209,0x07400348,0x0400134d,0x04001410,0x0bacc410,0x040012cb,
-0x0cc00000,0x00000000,0x06a00008,0x07400348,0x0cc00000,0x00000000,
-0x0580424e,0x07c01449,0x05409249,0x0640c208,0x02008248,0x06035108,
-0x06808008,0x06035208,0x06a08008,0x06035008,0x06435008,0x0580f208,
-0x0bef8048,0x00000000,0x06435308,0x0900c208,0x0a6f8008,0x00000000,
-0x0cc00000,0x00000000,0x05804251,0x07801448,0x0a80e209,0x07c01449,
-0x05409249,0x0640c208,0x02008248,0x06035108,0x06808008,0x06035208,
-0x06b08008,0x06035008,0x06435008,0x0580f208,0x0bef8048,0x00000000,
-0x0cc00000,0x00000000,0x06410c08,0x08010e81,0x093e1248,0x0aa1c009,
-0x00000000,0x06410c08,0x08010e88,0x09301248,0x07c012c9,0x0aa03fc9,
+0x0cc00000,0x00000000,0x0680000a,0x0680000b,0x0780008c,0x0b41130b,
+0x0c011040,0x068000c9,0x0200a20a,0x0400128a,0x06410c08,0x08010e81,
+0x093e1248,0x0900e20a,0x095c1209,0x07400348,0x0400134d,0x04001410,
+0x0bacc410,0x040012cb,0x0cc00000,0x00000000,0x06a00008,0x07400348,
+0x0cc00000,0x00000000,0x0580424e,0x07c01449,0x05409249,0x0640c208,
+0x02008248,0x06035108,0x06808008,0x06035208,0x06a08008,0x06035008,
+0x06435008,0x0580f208,0x0bef8048,0x00000000,0x06435308,0x0900c208,
+0x0a6f8008,0x00000000,0x0cc00000,0x00000000,0x05804251,0x07801448,
+0x0a80e209,0x07c01449,0x05409249,0x0640c208,0x02008248,0x06035108,
+0x06808008,0x06035208,0x06b08008,0x06035008,0x06435008,0x0580f208,
+0x0bef8048,0x00000000,0x0cc00000,0x00000000,0x06410c08,0x08010e81,
+0x093e1248,0x0aa1c009,0x00000000,0x06410c08,0x08010e88,0x09301248,
+0x07c012c9,0x0aa03fc9,0x06410c08,0x08010e81,0x093e1248,0x0aa08009,
+0x0c780000,0x06410c08,0x08010e81,0x093e1248,0x0aa08009,0x0c780000,
 0x06410c08,0x08010e81,0x093e1248,0x0aa08009,0x0c780000,0x06410c08,
-0x08010e81,0x093e1248,0x0aa08009,0x0c780000,0x06410c08,0x08010e81,
-0x093e1248,0x0aa08009,0x0c780000,0x06410c08,0x08010e81,0x093e1248,
-0x093c1248,0x093a1248,0x09381248,0x0aa24009,0x0c00f900,0x06801309,
-0x0c00f880,0x06801349,0x0c00f800,0x06801389,0x0c00f780,0x068013c9,
-0x06410c08,0x08010e81,0x093e1248,0x0aa08009,0x0c780000,0x06410c08,
-0x08010e81,0x093e1248,0x0aa08009,0x0c780000,0x0cc00000,0x00000000,
-0x0aa0c0c8,0x0c782ec0,0x00000000,0x06410c08,0x08010e90,0x09326208,
-0x0aa0c888,0x0c78f140,0x0800c0fe,0x0c00f1c0,0x06800049,0x07801489,
-0x0a805209,0x07c00108,0x0aa0ffc9,0x0c019440,0x05407309,0x07800108,
-0x07c01488,0x0c00ef40,0x068014c9,0x0780078a,0x0a808288,0x07c00108,
-0x0c018140,0x0540730a,0x0780010a,0x07c0078a,0x0c018bc0,0x0540730a,
-0x06410c08,0x08010e87,0x093e1248,0x07c01509,0x093c1248,0x07c01549,
-0x09363248,0x07c01589,0x09341248,0x07c015c9,0x09321248,0x07c01609,
-0x0c00e980,0x06801649,0x04001208,0x07c01648,0x0c00e880,0x06801689,
-0x04001208,0x07c01688,0x0c00e940,0x068016c9,0x0401a208,0x07c016c8,
-0x06410c08,0x08010e83,0x093e1248,0x07c01709,0x093c1248,0x07c01749,
-0x093a1248,0x07c01789,0x0aa10009,0x06800008,0x0c00e400,0x068017c9,
-0x07c017c8,0x0c00e500,0x06801809,0x0c00e480,0x06801849,0x06410c08,
-0x08010e86,0x093e1248,0x07c01889,0x093c1248,0x07c018c9,0x093a1248,
-0x07c01909,0x09381248,0x07c01949,0x09361248,0x07c01989,0x09341248,
-0x07c01cc9,0x0aa0c009,0x0c0141c0,0x00000000,0x06800048,0x07c01c88,
-0x07801988,0x0a608008,0x0c780a80,0x0c00dcc0,0x06801a09,0x07800dc8,
-0x07c01a88,0x0c00dbc0,0x06801a49,0x07800e08,0x07c01b88,0x06410c08,
-0x08010e81,0x093e1248,0x07c019c9,0x0aa14009,0x0c014600,0x00000000,
-0x0c780580,0x00000000,0x07801a0b,0x0ae0010b,0x0680000a,0x0b4072ca,
-0x0c00d780,0x0406a24a,0x04001208,0x07400248,0x0c7ffec0,0x0400128a,
-0x07801a4b,0x0ae0010b,0x0680000a,0x0b4072ca,0x0c00d500,0x0406e24a,
-0x04001208,0x07400248,0x0c7ffec0,0x0400128a,0x06410c08,0x08010e81,
-0x093e1248,0x07c01c89,0x06410c08,0x08010e82,0x093e1248,0x07c01d09,
-0x093c1248,0x0a618009,0x07c01d49,0x07c01d89,0x07c01dc9,0x0c780340,
-0x07c01e09,0x06410c08,0x08010e82,0x093e1248,0x07c01d49,0x093c1248,
-0x0a618009,0x07c01d89,0x0c00cfc0,0x06801dc9,0x0c00cf40,0x06801e09,
-0x06410c08,0x08010e81,0x093e1248,0x0a628009,0x07800f08,0x0aa28008,
-0x078014c8,0x0aa0c008,0x068f000c,0x069f000c,0x0c0189c0,0x00000000,
-0x0c7800c0,0x0c077f80,0x00000000,0x06410c08,0x08010e81,0x093e1248,
-0x07c01e49,0x0c00c840,0x06801e89,0x04002208,0x07c01e88,0x06410c08,
-0x08010e81,0x093e1248,0x07c01ec9,0x08010e81,0x0c019000,0x00000000,
-0x0c78c480,0x0800c0ff,0x0aa0c108,0x0c786b40,0x00000000,0x06410c08,
-0x08010e90,0x09326208,0x0b210548,0x07c01f08,0x0c78c200,0x0800c0fe,
-0x06410c08,0x08010e81,0x093e1248,0x07c01f49,0x07801f08,0x0ba1c408,
-0x06800009,0x0ae14548,0x06800009,0x06410c08,0x08010e81,0x093e1248,
-0x07c01f89,0x0c00bf40,0x06800049,0x07801489,0x0a808248,0x07c00108,
-0x0c016200,0x05407309,0x07800108,0x07c01488,0x0c017440,0x05407308,
-0x078014c8,0x07800789,0x0a808248,0x07c00108,0x0c014ec0,0x05407309,
-0x07800109,0x07c00789,0x0c015940,0x05407309,0x07801f48,0x06800009,
-0x0aa10008,0x07c02009,0x0c780440,0x07c01fc9,0x07801508,0x0aa14008,
-0x06800009,0x06410c08,0x08010e81,0x093e1248,0x07c02009,0x07801409,
-0x06410c08,0x0680080a,0x0240a24a,0x098091c9,0x06010e09,0x03808288,
-0x07c01fc8,0x07802008,0x0aa0c008,0x0c784a40,0x00000000,0x0c01b640,
-0x00000000,0x07801588,0x0aa0c008,0x098081c8,0x06010e08,0x0c00b240,
-0x06802049,0x07801548,0x0aa14008,0x06800049,0x06410c08,0x08010e81,
-0x093e1248,0x07c02089,0x07801f09,0x0aa084c9,0x0a610509,0x06800008,
-0x0c781600,0x07c020c8,0x06410c08,0x07800909,0x04004249,0x0680080a,
-0x0240a24a,0x098091c9,0x06010e09,0x03808288,0x07c020c8,0x06410c08,
-0x08010e81,0x093e1248,0x0a614009,0x0680400d,0x0c077d80,0x0780114e,
-0x0c780600,0x07801189,0x06410c08,0x068007ca,0x0240a24a,0x098091c9,
-0x06010e09,0x03808288,0x05801208,0x07c02108,0x0c07a280,0x04000448,
-0x0480f211,0x05404208,0x06808009,0x02009209,0x0680400d,0x06800008,
-0x0700024a,0x0740034a,0x0400134d,0x04001208,0x0baf0408,0x04001249,
-0x078011c8,0x0a608008,0x0c7808c0,0x0780120a,0x0aa1400a,0x0680000b,
-0x0c00a300,0x06800049,0x040002c8,0x0c00a240,0x06800049,0x0200c20b,
-0x0aa6400c,0x0ac052cc,0x07801208,0x0ba50048,0x0c780000,0x00000000,
-0x06410c08,0x07800909,0x04004249,0x0680080a,0x0240a24a,0x098091c9,
-0x06010e09,0x03808288,0x06410c08,0x08010e81,0x093e1248,0x06410c08,
-0x08010e81,0x093e1248,0x0aa0c009,0x0c009c40,0x06800049,0x0c7ffa40,
-0x0440130c,0x0c0196c0,0x00000000,0x07801248,0x0aa14008,0x06800009,
-0x06410c08,0x08010e81,0x093e1248,0x07c02149,0x07800f88,0x0a610008,
-0x07c02188,0x0c780200,0x07c021c8,0x06410c08,0x08010e82,0x093e1248,
-0x07c02189,0x093c1248,0x07c021c9,0x0780204b,0x0a60c08b,0x0c781700,
-0x00000000,0x0641170a,0x06410c08,0x08010e81,0x093e1248,0x0a628009,
-0x07801649,0x09546289,0x07c02209,0x0a60c00b,0x06800009,0x07801689,
-0x09606289,0x0c7803c0,0x07c02249,0x0c0091c0,0x06802209,0x07802209,
-0x04001249,0x09546289,0x07c02209,0x0aa1c04b,0x0c009000,0x06802249,
-0x07802249,0x04001249,0x09606289,0x07c02249,0x0601170a,0x06800009,
-0x07c02989,0x07801e49,0x0aa14009,0x07802949,0x0b20c049,0x0c0192c0,
-0x00000000,0x0a61400b,0x06800009,0x06410c08,0x08010e81,0x093e1248,
-0x0641170a,0x096c1289,0x0601170a,0x07c02289,0x07801609,0x0aa14009,
-0x06800009,0x06410c08,0x08010e81,0x093e1248,0x07c022c9,0x06411008,
-0x09581209,0x06011008,0x07802149,0x0aa48009,0x0a61400b,0x06800049,
-0x06410c08,0x08010e81,0x093e1248,0x07c02309,0x0aa1808b,0x0aa0c009,
-0x06802249,0x06802209,0x07000249,0x0ae10049,0x06800009,0x0c780100,
-0x07c02349,0x0c008340,0x06802349,0x0aa0c04b,0x078018c9,0x07801909,
-0x06047b09,0x08047c00,0x0aa10009,0x08047d00,0x0c006ac0,0x00000000,
-0x0c008080,0x06802389,0x06800149,0x02409209,0x06411708,0x096e3209,
-0x06011708,0x0c008080,0x068023c9,0x078016c8,0x079023c9,0x02008248,
-0x07c02408,0x07802049,0x09446248,0x078021c8,0x09501248,0x07802188,
-0x09521248,0x07800cc8,0x09542248,0x07800d08,0x09582248,0x07800d48,
-0x095c2248,0x07800d88,0x09602248,0x07801808,0x09647248,0x07801848,
-0x09727248,0x06011109,0x06411009,0x09809389,0x06011009,0x07801888,
-0x0aa3c008,0x0c007900,0x06802449,0x0c007880,0x06802489,0x06411109,
-0x07801808,0x0780244a,0x02008288,0x09647248,0x07801848,0x0780248a,
-0x02008288,0x09727248,0x06011109,0x07801d48,0x0aa14008,0x06800009,
-0x06410c08,0x08010e81,0x093e1248,0x07c024c9,0x0a620009,0x07801d89,
-0x07c02509,0x07801dc9,0x07c02549,0x07801e09,0x0c7802c0,0x07c02589,
-0x06410c08,0x08010e81,0x093e1248,0x0a618009,0x07c02509,0x0c007080,
-0x06802549,0x0c007000,0x06802589,0x07801d08,0x0aa34008,0x06800009,
-0x07802188,0x0a61c008,0x078021c8,0x0a614008,0x07802508,0x0aa0c008,
-0x0c780140,0x06800009,0x06410c08,0x08010e81,0x093e1248,0x07c025c9,
-0x07801988,0x0a610008,0x07801cc8,0x0a608008,0x0c780440,0x0c0068c0,
-0x06802609,0x0780260b,0x0aa3400b,0x0c0067c0,0x06800049,0x04001308,
-0x0680080a,0x0240a30a,0x0980c1cc,0x06410c08,0x06010e0c,0x03808288,
-0x07c00048,0x0aef004b,0x044012cb,0x07801ec8,0x0aa20008,0x0c006440,
-0x06800049,0x0aa14008,0x00000000,0x08010e88,0x0c7fff40,0x04401208,
-0x0640ce09,0x0a274089,0x06420408,0x0a2fc048,0x00000000,0x06020408,
-0x0be3c049,0x06800008,0x09808508,0x09808588,0x06000408,0x06800008,
-0x06000408,0x06450008,0x09808008,0x06050008,0x06440008,0x09808008,
-0x06040008,0x09c08008,0x06040008,0x0a21c049,0x06460108,0x0a216008,
-0x00000000,0x06460408,0x0a2fc048,0x00000000,0x06460408,0x06060408,
-0x0800c008,0x08007401,0x0c013080,0x00000000,0x0c785900,0x00000000,
-0x0aa0c148,0x0c7841c0,0x00000000,0x08010e81,0x06812008,0x06010e08,
-0x00000000,0x08010e00,0x07802008,0x0a60c008,0x06800008,0x07c02648,
-0x07801f48,0x0aa58008,0x06800008,0x07c02888,0x07c028c8,0x07c00e48,
-0x07c02688,0x07c026c8,0x07c02708,0x07c02748,0x07801989,0x0aa0c009,
-0x07800dc8,0x07801a88,0x07c02788,0x07c02808,0x0aa0c009,0x07800e08,
-0x07801b88,0x07c027c8,0x07c02848,0x0c7801c0,0x068001df,0x07801fc8,
-0x07800e49,0x0a803248,0x0aa08009,0x0c780000,0x07802008,0x0a61c008,
-0x00000000,0x068001df,0x07802889,0x078028c8,0x09508248,0x07c02a09,
-0x07802889,0x0a614049,0x07801cc9,0x0aa0c009,0x00000000,0x0981f15f,
-0x07802889,0x078028c8,0x0958c248,0x0978425f,0x06011609,0x0c000500,
-0x00000000,0x07801f49,0x0a60c009,0x07800e48,0x0aa24008,0x07800e48,
-0x09808788,0x098087c8,0x06012408,0x0640d608,0x0aa14008,0x04401208,
-0x0600d608,0x0c784640,0x0800c0ff,0x06a00008,0x06011408,0x0c786a40,
-0x00000000,0x07802789,0x07c029c9,0x078028c9,0x0780274a,0x0a40b289,
-0x0680000c,0x0780288b,0x0780270a,0x0a40728b,0x0680000c,0x0a614009,
-0x0680008c,0x0a60c00a,0x0680008c,0x068000cc,0x07802008,0x09441308,
-0x06460109,0x094a324c,0x06060109,0x06420109,0x0944324c,0x07802048,
-0x09402248,0x07800d08,0x04003208,0x09604248,0x07800cc8,0x04003208,
-0x09684248,0x06020109,0x07800808,0x07800849,0x09610209,0x06020508,
-0x07802708,0x07802749,0x09610209,0x06020708,0x06060708,0x07802808,
-0x07802849,0x09610209,0x06020808,0x06060808,0x07800dc8,0x04401208,
-0x07800e09,0x04401249,0x09610209,0x06020608,0x06800048,0x0541f208,
-0x06020408,0x06450a08,0x09005208,0x0a6f8008,0x06800008,0x07801989,
-0x0a60c009,0x06f00008,0x06d00008,0x06050a08,0x07802708,0x07802749,
-0x0960a209,0x07801989,0x097e1209,0x06050608,0x0780280a,0x07802849,
-0x0960a289,0x0605070a,0x09c087c8,0x0780288a,0x078028c9,0x0960a289,
-0x0a403288,0x00000000,0x098087c8,0x06050808,0x078028c9,0x0780274a,
-0x0a404289,0x07802889,0x0780270a,0x0a802289,0x0c780740,0x0640c908,
-0x0e000248,0x0640ca0a,0x00000000,0x0f000240,0x0200a24a,0x0606110a,
-0x0606150a,0x0606140a,0x04020208,0x078028c9,0x0e000248,0x0640cc0a,
-0x0640cb0c,0x0f000340,0x07802688,0x0e000308,0x0200b34a,0x0402028b,
-0x00000000,0x0f000240,0x0200a24a,0x0606120a,0x0606160a,0x02409309,
-0x0200b24b,0x0606130b,0x0606170b,0x06460408,0x06060408,0x06800048,
-0x0541f208,0x06060408,0x07801988,0x06040508,0x07802808,0x07802849,
-0x09610209,0x06040308,0x07802708,0x07802749,0x09610209,0x06040408,
-0x07802008,0x0a638008,0x06804808,0x06043008,0x06443108,0x0900a248,
-0x0a6f0009,0x091e5248,0x0a6e8009,0x00000000,0x06440008,0x09808008,
-0x06040008,0x09c08008,0x06040008,0x08040701,0x07802008,0x0aa4c008,
-0x07802888,0x0a614008,0x07801cc9,0x0aa0c009,0x0c008780,0x00000000,
-0x06411009,0x091c1249,0x0a6f8009,0x00000000,0x06411009,0x098093c9,
-0x06011009,0x06411009,0x091e1249,0x0a6f8009,0x0cc00000,0x00000000,
-0x06411009,0x091c1249,0x0a6f8009,0x00000000,0x07800dc9,0x0ae0c049,
-0x0c008000,0x00000000,0x06411009,0x098093c9,0x06011009,0x08011c00,
-0x08011e00,0x06411009,0x091e1249,0x0a6f8009,0x0cc00000,0x00000000,
-0x0a60fc08,0x00000000,0x08010e90,0x0c7815c0,0x0800c0ff,0x078007cb,
-0x0c001600,0x06800049,0x06047e08,0x0aa1000b,0x0c0016c0,0x06800049,
-0x06047f08,0x08048000,0x0c0002c0,0x0780220a,0x06047c0c,0x0780204a,
-0x0a61400a,0x08048020,0x0c000140,0x0780224a,0x06047d0c,0x0cc00000,
-0x00000000,0x0400034a,0x06410c0e,0x0980d1cd,0x06010e0d,0x0680000c,
-0x0400034a,0x0aa1c00d,0x093e13ce,0x0580130c,0x097e130f,0x0540138e,
-0x0c7ffec0,0x0440134d,0x0680040d,0x0240d28d,0x0380c34c,0x0aa4000b,
-0x0400034a,0x06410c0e,0x0980d1cd,0x06010e0d,0x0400034a,0x0aa1c00d,
-0x093e13ce,0x0580130c,0x097e130f,0x0540138e,0x0c7ffec0,0x0440134d,
-0x0680040d,0x0240d28d,0x0380c34c,0x0400034c,0x0ae0c00a,0x0cc00000,
-0x00000000,0x0680000e,0x0680000f,0x0900140d,0x0aa1c010,0x0c000900,
-0x06800049,0x09408388,0x0c000840,0x06800049,0x094083c8,0x0920140d,
-0x0aa34010,0x0c000700,0x06800049,0x09508388,0x0c000640,0x06800049,
-0x0950a3c8,0x0c000580,0x06800049,0x09608388,0x0c0004c0,0x06800049,
-0x0964a3c8,0x0604810e,0x0604810f,0x0580134d,0x0c7ff880,0x0440128a,
-0x00800000,0x07800008,0x0c7e4400,0x06030408,0x06806008,0x06010e08,
-0x06410f08,0x0befc0c8,0x09118208,0x0cc00000,0x07400248,0x0680e008,
-0x06010e08,0x06410f08,0x0befc0c8,0x09118208,0x0cc00000,0x07400248,
-0x06bfff89,0x06030409,0x00400000,0x0be0c108,0x0c7ffa80,0x00000000,
-0x08012104,0x07800dc9,0x0ae0c049,0x06411c22,0x04000862,0x0a26891f,
-0x06011c21,0x0a21481f,0x0c005e80,0x00000000,0x0a25411f,0x09c1f15f,
-0x07801cc9,0x0aa48009,0x08011e00,0x0be42022,0x06a907c9,0x06012b09,
-0x00000000,0x00000000,0x06412b09,0x0c005dc0,0x00000000,0x06411009,
-0x098093c9,0x06011009,0x06411009,0x091e1249,0x0a6f8009,0x0c780800,
-0x00000000,0x0a27a022,0x06a907c9,0x06012b09,0x00000000,0x00000000,
-0x06412b09,0x0c010200,0x00000000,0x06411609,0x093e1249,0x0aa48009,
-0x06800008,0x07c02648,0x06411109,0x07802408,0x09446248,0x06011109,
-0x06411009,0x09809389,0x06011009,0x06411e08,0x0be1e008,0x068001df,
-0x0c07a7c0,0x0978479f,0x06420409,0x0c780100,0x06020409,0x0c7feb40,
-0x0800c0ff,0x0601161e,0x08013e00,0x06413f08,0x06413f08,0x06413f08,
+0x08010e81,0x093e1248,0x093c1248,0x093a1248,0x09381248,0x0aa24009,
+0x0c00f9c0,0x06801309,0x0c00f940,0x06801349,0x0c00f8c0,0x06801389,
+0x0c00f840,0x068013c9,0x06410c08,0x08010e81,0x093e1248,0x0aa08009,
+0x0c780000,0x06410c08,0x08010e81,0x093e1248,0x0aa08009,0x0c780000,
+0x0cc00000,0x00000000,0x0aa0c0c8,0x0c782f80,0x00000000,0x06410c08,
+0x08010e90,0x09326208,0x0aa0c888,0x0c78f200,0x0800c0fe,0x07803348,
+0x09808088,0x07c03348,0x0c00f1c0,0x06800049,0x07801489,0x0a805209,
+0x07c00108,0x0aa0ffc9,0x0c019440,0x05407309,0x07800108,0x07c01488,
+0x0c00ef40,0x068014c9,0x0780078a,0x0a808288,0x07c00108,0x0c018140,
+0x0540730a,0x0780010a,0x07c0078a,0x0c018bc0,0x0540730a,0x06410c08,
+0x08010e87,0x093e1248,0x07c01509,0x093c1248,0x07c01549,0x09363248,
+0x07c01589,0x09341248,0x07c015c9,0x09321248,0x07c01609,0x0c00e980,
+0x06801649,0x04001208,0x07c01648,0x0c00e880,0x06801689,0x04001208,
+0x07c01688,0x0c00e940,0x068016c9,0x0401a208,0x07c016c8,0x06410c08,
+0x08010e83,0x093e1248,0x07c01709,0x093c1248,0x07c01749,0x093a1248,
+0x07c01789,0x0aa10009,0x06800008,0x0c00e400,0x068017c9,0x07c017c8,
+0x0c00e500,0x06801809,0x0c00e480,0x06801849,0x06410c08,0x08010e86,
+0x093e1248,0x07c01889,0x093c1248,0x07c018c9,0x093a1248,0x07c01909,
+0x09381248,0x07c01949,0x09361248,0x07c01989,0x09341248,0x07c01cc9,
+0x0aa0c009,0x0c0141c0,0x00000000,0x06800048,0x07c01c88,0x07801988,
+0x0a608008,0x0c780a80,0x0c00dcc0,0x06801a09,0x07800dc8,0x07c01a88,
+0x0c00dbc0,0x06801a49,0x07800e08,0x07c01b88,0x06410c08,0x08010e81,
+0x093e1248,0x07c019c9,0x0aa14009,0x0c014600,0x00000000,0x0c780580,
+0x00000000,0x07801a0b,0x0ae0010b,0x0680000a,0x0b4072ca,0x0c00d780,
+0x0406a24a,0x04001208,0x07400248,0x0c7ffec0,0x0400128a,0x07801a4b,
+0x0ae0010b,0x0680000a,0x0b4072ca,0x0c00d500,0x0406e24a,0x04001208,
+0x07400248,0x0c7ffec0,0x0400128a,0x06410c08,0x08010e81,0x093e1248,
+0x07c01c89,0x06410c08,0x08010e82,0x093e1248,0x07c01d09,0x093c1248,
+0x0a618009,0x07c01d49,0x07c01d89,0x07c01dc9,0x0c780340,0x07c01e09,
+0x06410c08,0x08010e82,0x093e1248,0x07c01d49,0x093c1248,0x0a618009,
+0x07c01d89,0x0c00cfc0,0x06801dc9,0x0c00cf40,0x06801e09,0x06410c08,
+0x08010e81,0x093e1248,0x0a628009,0x07800f08,0x0aa28008,0x078014c8,
+0x0aa0c008,0x068f000c,0x069f000c,0x0c0189c0,0x00000000,0x0c7800c0,
+0x0c077ec0,0x00000000,0x06410c08,0x08010e81,0x093e1248,0x07c01e49,
+0x0c00c840,0x06801e89,0x04002208,0x07c01e88,0x06410c08,0x08010e81,
+0x093e1248,0x07c01ec9,0x08010e81,0x0c019000,0x00000000,0x0c78c480,
+0x0800c0ff,0x0aa0c108,0x0c786b40,0x00000000,0x06410c08,0x08010e90,
+0x09326208,0x0b210548,0x07c01f08,0x0c78c200,0x0800c0fe,0x06410c08,
+0x08010e81,0x093e1248,0x07c01f49,0x07801f08,0x0ba1c408,0x06800009,
+0x0ae14548,0x06800009,0x06410c08,0x08010e81,0x093e1248,0x07c01f89,
+0x0c00bf40,0x06800049,0x07801489,0x0a808248,0x07c00108,0x0c016200,
+0x05407309,0x07800108,0x07c01488,0x0c017440,0x05407308,0x078014c8,
+0x07800789,0x0a808248,0x07c00108,0x0c014ec0,0x05407309,0x07800109,
+0x07c00789,0x0c015940,0x05407309,0x07801f48,0x06800009,0x0aa10008,
+0x07c02009,0x0c780440,0x07c01fc9,0x07801508,0x0aa14008,0x06800009,
+0x06410c08,0x08010e81,0x093e1248,0x07c02009,0x07801409,0x06410c08,
+0x0680080a,0x0240a24a,0x098091c9,0x06010e09,0x03808288,0x07c01fc8,
+0x07802008,0x0aa0c008,0x0c784a40,0x00000000,0x0c01b640,0x00000000,
+0x07801588,0x0aa0c008,0x098081c8,0x06010e08,0x0c00b240,0x06802049,
+0x07801548,0x0aa14008,0x06800049,0x06410c08,0x08010e81,0x093e1248,
+0x07c02089,0x07801f09,0x0aa084c9,0x0a610509,0x06800008,0x0c781600,
+0x07c020c8,0x06410c08,0x07800909,0x04004249,0x0680080a,0x0240a24a,
+0x098091c9,0x06010e09,0x03808288,0x07c020c8,0x06410c08,0x08010e81,
+0x093e1248,0x0a614009,0x0680400d,0x0c077cc0,0x0780114e,0x0c780600,
+0x07801189,0x06410c08,0x068007ca,0x0240a24a,0x098091c9,0x06010e09,
+0x03808288,0x05801208,0x07c02108,0x0c07a1c0,0x04000448,0x0480f211,
+0x05404208,0x06808009,0x02009209,0x0680400d,0x06800008,0x0700024a,
+0x0740034a,0x0400134d,0x04001208,0x0baf0408,0x04001249,0x078011c8,
+0x0a608008,0x0c7808c0,0x0780120a,0x0aa1400a,0x0680000b,0x0c00a300,
+0x06800049,0x040002c8,0x0c00a240,0x06800049,0x0200c20b,0x0aa6400c,
+0x0ac052cc,0x07801208,0x0ba50048,0x0c780000,0x00000000,0x06410c08,
+0x07800909,0x04004249,0x0680080a,0x0240a24a,0x098091c9,0x06010e09,
+0x03808288,0x06410c08,0x08010e81,0x093e1248,0x06410c08,0x08010e81,
+0x093e1248,0x0aa0c009,0x0c009c40,0x06800049,0x0c7ffa40,0x0440130c,
+0x0c0196c0,0x00000000,0x07801248,0x0aa14008,0x06800009,0x06410c08,
+0x08010e81,0x093e1248,0x07c02149,0x07800f88,0x0a610008,0x07c02188,
+0x0c780200,0x07c021c8,0x06410c08,0x08010e82,0x093e1248,0x07c02189,
+0x093c1248,0x07c021c9,0x0780204b,0x0a60c08b,0x0c781700,0x00000000,
+0x0641170a,0x06410c08,0x08010e81,0x093e1248,0x0a628009,0x07801649,
+0x09546289,0x07c02209,0x0a60c00b,0x06800009,0x07801689,0x09606289,
+0x0c7803c0,0x07c02249,0x0c0091c0,0x06802209,0x07802209,0x04001249,
+0x09546289,0x07c02209,0x0aa1c04b,0x0c009000,0x06802249,0x07802249,
+0x04001249,0x09606289,0x07c02249,0x0601170a,0x06800009,0x07c02989,
+0x07801e49,0x0aa14009,0x07802949,0x0b20c049,0x0c0192c0,0x00000000,
+0x0a61400b,0x06800009,0x06410c08,0x08010e81,0x093e1248,0x0641170a,
+0x096c1289,0x0601170a,0x07c02289,0x07801609,0x0aa14009,0x06800009,
+0x06410c08,0x08010e81,0x093e1248,0x07c022c9,0x06411008,0x09581209,
+0x06011008,0x07802149,0x0aa48009,0x0a61400b,0x06800049,0x06410c08,
+0x08010e81,0x093e1248,0x07c02309,0x0aa1808b,0x0aa0c009,0x06802249,
+0x06802209,0x07000249,0x0ae10049,0x06800009,0x0c780100,0x07c02349,
+0x0c008340,0x06802349,0x0aa0c04b,0x078018c9,0x07801909,0x06047b09,
+0x08047c00,0x0aa10009,0x08047d00,0x0c006ac0,0x00000000,0x0c008080,
+0x06802389,0x06800149,0x02409209,0x06411708,0x096e3209,0x06011708,
+0x0c008080,0x068023c9,0x078016c8,0x079023c9,0x02008248,0x07c02408,
+0x07802049,0x09446248,0x078021c8,0x09501248,0x07802188,0x09521248,
+0x07800cc8,0x09542248,0x07800d08,0x09582248,0x07800d48,0x095c2248,
+0x07800d88,0x09602248,0x07801808,0x09647248,0x07801848,0x09727248,
+0x06011109,0x06411009,0x09809389,0x06011009,0x07801888,0x0aa3c008,
+0x0c007900,0x06802449,0x0c007880,0x06802489,0x06411109,0x07801808,
+0x0780244a,0x02008288,0x09647248,0x07801848,0x0780248a,0x02008288,
+0x09727248,0x06011109,0x07801d48,0x0aa14008,0x06800009,0x06410c08,
+0x08010e81,0x093e1248,0x07c024c9,0x0a620009,0x07801d89,0x07c02509,
+0x07801dc9,0x07c02549,0x07801e09,0x0c7802c0,0x07c02589,0x06410c08,
+0x08010e81,0x093e1248,0x0a618009,0x07c02509,0x0c007080,0x06802549,
+0x0c007000,0x06802589,0x07801d08,0x0aa34008,0x06800009,0x07802188,
+0x0a61c008,0x078021c8,0x0a614008,0x07802508,0x0aa0c008,0x0c780140,
+0x06800009,0x06410c08,0x08010e81,0x093e1248,0x07c025c9,0x07801988,
+0x0a610008,0x07801cc8,0x0a608008,0x0c780440,0x0c0068c0,0x06802609,
+0x0780260b,0x0aa3400b,0x0c0067c0,0x06800049,0x04001308,0x0680080a,
+0x0240a30a,0x0980c1cc,0x06410c08,0x06010e0c,0x03808288,0x07c00048,
+0x0aef004b,0x044012cb,0x07801ec8,0x0aa20008,0x0c006440,0x06800049,
+0x0aa14008,0x00000000,0x08010e88,0x0c7fff40,0x04401208,0x0640ce09,
+0x0a274089,0x06420408,0x0a2fc048,0x00000000,0x06020408,0x0be3c049,
+0x06800008,0x09808508,0x09808588,0x06000408,0x06800008,0x06000408,
+0x06450008,0x09808008,0x06050008,0x06440008,0x09808008,0x06040008,
+0x09c08008,0x06040008,0x0a21c049,0x06460108,0x0a216008,0x00000000,
+0x06460408,0x0a2fc048,0x00000000,0x06460408,0x06060408,0x0800c008,
+0x08007401,0x0c013080,0x00000000,0x0c785900,0x00000000,0x0aa0c148,
+0x0c7841c0,0x00000000,0x08010e81,0x06812008,0x06010e08,0x00000000,
+0x08010e00,0x07802008,0x0a60c008,0x06800008,0x07c02648,0x07801f48,
+0x0aa58008,0x06800008,0x07c02888,0x07c028c8,0x07c00e48,0x07c02688,
+0x07c026c8,0x07c02708,0x07c02748,0x07801989,0x0aa0c009,0x07800dc8,
+0x07801a88,0x07c02788,0x07c02808,0x0aa0c009,0x07800e08,0x07801b88,
+0x07c027c8,0x07c02848,0x0c7801c0,0x068001df,0x07801fc8,0x07800e49,
+0x0a803248,0x0aa08009,0x0c780000,0x07802008,0x0a61c008,0x00000000,
+0x068001df,0x07802889,0x078028c8,0x09508248,0x07c02a09,0x07802889,
+0x0a614049,0x07801cc9,0x0aa0c009,0x00000000,0x0981f15f,0x07802889,
+0x078028c8,0x0958c248,0x0978425f,0x06011609,0x0c000500,0x00000000,
+0x07801f49,0x0a60c009,0x07800e48,0x0aa24008,0x07800e48,0x09808788,
+0x098087c8,0x06012408,0x0640d608,0x0aa14008,0x04401208,0x0600d608,
+0x0c784640,0x0800c0ff,0x06a00008,0x06011408,0x0c786a40,0x00000000,
+0x07802789,0x07c029c9,0x078028c9,0x0780274a,0x0a40b289,0x0680000c,
+0x0780288b,0x0780270a,0x0a40728b,0x0680000c,0x0a614009,0x0680008c,
+0x0a60c00a,0x0680008c,0x068000cc,0x07802008,0x09441308,0x06460109,
+0x094a324c,0x06060109,0x06420109,0x0944324c,0x07802048,0x09402248,
+0x07800d08,0x04003208,0x09604248,0x07800cc8,0x04003208,0x09684248,
+0x06020109,0x07800808,0x07800849,0x09610209,0x06020508,0x07802708,
+0x07802749,0x09610209,0x06020708,0x06060708,0x07802808,0x07802849,
+0x09610209,0x06020808,0x06060808,0x07800dc8,0x04401208,0x07800e09,
+0x04401249,0x09610209,0x06020608,0x06800048,0x0541f208,0x06020408,
+0x06450a08,0x09005208,0x0a6f8008,0x06800008,0x07801989,0x0a60c009,
+0x06f00008,0x06d00008,0x06050a08,0x07802708,0x07802749,0x0960a209,
+0x07801989,0x097e1209,0x06050608,0x0780280a,0x07802849,0x0960a289,
+0x0605070a,0x09c087c8,0x0780288a,0x078028c9,0x0960a289,0x0a403288,
+0x00000000,0x098087c8,0x06050808,0x078028c9,0x0780274a,0x0a404289,
+0x07802889,0x0780270a,0x0a802289,0x0c780740,0x0640c908,0x0e000248,
+0x0640ca0a,0x00000000,0x0f000240,0x0200a24a,0x0606110a,0x0606150a,
+0x0606140a,0x04020208,0x078028c9,0x0e000248,0x0640cc0a,0x0640cb0c,
+0x0f000340,0x07802688,0x0e000308,0x0200b34a,0x0402028b,0x00000000,
+0x0f000240,0x0200a24a,0x0606120a,0x0606160a,0x02409309,0x0200b24b,
+0x0606130b,0x0606170b,0x06460408,0x06060408,0x06800048,0x0541f208,
+0x06060408,0x07801988,0x06040508,0x07802808,0x07802849,0x09610209,
+0x06040308,0x07802708,0x07802749,0x09610209,0x06040408,0x07802008,
+0x0a638008,0x06804808,0x06043008,0x06443108,0x0900a248,0x0a6f0009,
+0x091e5248,0x0a6e8009,0x00000000,0x06440008,0x09808008,0x06040008,
+0x09c08008,0x06040008,0x08040701,0x07802008,0x0aa4c008,0x07802888,
+0x0a614008,0x07801cc9,0x0aa0c009,0x0c008780,0x00000000,0x06411009,
+0x091c1249,0x0a6f8009,0x00000000,0x06411009,0x098093c9,0x06011009,
+0x06411009,0x091e1249,0x0a6f8009,0x0cc00000,0x00000000,0x06411009,
+0x091c1249,0x0a6f8009,0x00000000,0x07800dc9,0x0ae0c049,0x0c008000,
+0x00000000,0x06411009,0x098093c9,0x06011009,0x08011c00,0x08011e00,
+0x06411009,0x091e1249,0x0a6f8009,0x0cc00000,0x00000000,0x0a60fc08,
+0x00000000,0x08010e90,0x0c7815c0,0x0800c0ff,0x078007cb,0x0c001600,
+0x06800049,0x06047e08,0x0aa1000b,0x0c0016c0,0x06800049,0x06047f08,
+0x08048000,0x0c0002c0,0x0780220a,0x06047c0c,0x0780204a,0x0a61400a,
+0x08048020,0x0c000140,0x0780224a,0x06047d0c,0x0cc00000,0x00000000,
+0x0400034a,0x06410c0e,0x0980d1cd,0x06010e0d,0x0680000c,0x0400034a,
+0x0aa1c00d,0x093e13ce,0x0580130c,0x097e130f,0x0540138e,0x0c7ffec0,
+0x0440134d,0x0680040d,0x0240d28d,0x0380c34c,0x0aa4000b,0x0400034a,
+0x06410c0e,0x0980d1cd,0x06010e0d,0x0400034a,0x0aa1c00d,0x093e13ce,
+0x0580130c,0x097e130f,0x0540138e,0x0c7ffec0,0x0440134d,0x0680040d,
+0x0240d28d,0x0380c34c,0x0400034c,0x0ae0c00a,0x0cc00000,0x00000000,
+0x0680000e,0x0680000f,0x0900140d,0x0aa1c010,0x0c000900,0x06800049,
+0x09408388,0x0c000840,0x06800049,0x094083c8,0x0920140d,0x0aa34010,
+0x0c000700,0x06800049,0x09508388,0x0c000640,0x06800049,0x0950a3c8,
+0x0c000580,0x06800049,0x09608388,0x0c0004c0,0x06800049,0x0964a3c8,
+0x0604810e,0x0604810f,0x0580134d,0x0c7ff880,0x0440128a,0x00800000,
+0x07800008,0x0c7e4140,0x06030408,0x06806008,0x06010e08,0x06410f08,
+0x0befc0c8,0x09118208,0x0cc00000,0x07400248,0x0680e008,0x06010e08,
+0x06410f08,0x0befc0c8,0x09118208,0x0cc00000,0x07400248,0x06bfff89,
+0x06030409,0x00400000,0x0be0c108,0x0c7ffa80,0x00000000,0x08012104,
+0x07800dc9,0x0ae0c049,0x06411c22,0x04000862,0x0a26891f,0x06011c21,
+0x0a21481f,0x0c005e80,0x00000000,0x0a25411f,0x09c1f15f,0x07801cc9,
+0x0aa48009,0x08011e00,0x0be42022,0x06a907c9,0x06012b09,0x00000000,
+0x00000000,0x06412b09,0x0c005dc0,0x00000000,0x06411009,0x098093c9,
+0x06011009,0x06411009,0x091e1249,0x0a6f8009,0x0c780800,0x00000000,
+0x0a27a022,0x06a907c9,0x06012b09,0x00000000,0x00000000,0x06412b09,
+0x0c010200,0x00000000,0x06411609,0x093e1249,0x0aa48009,0x06800008,
+0x07c02648,0x06411109,0x07802408,0x09446248,0x06011109,0x06411009,
+0x09809389,0x06011009,0x06411e08,0x0be1e008,0x068001df,0x0c07a7c0,
+0x0978479f,0x06420409,0x0c780100,0x06020409,0x0c7feb40,0x0800c0ff,
+0x0601161e,0x08013e00,0x06413f08,0x06413f08,0x06413f08,0x06413f08,
 0x06413f08,0x06413f08,0x06413f08,0x06413f08,0x06413f08,0x06413f08,
-0x06413f08,0x06413e08,0x0640d508,0x0a608008,0x0c780a80,0x04401208,
-0x0600d508,0x06410108,0x09021208,0x0a6f8008,0x00000000,0x0640c708,
-0x06013408,0x08013503,0x06413508,0x090e1208,0x0a6f8008,0x00000000,
-0x08013500,0x0640c808,0x06013408,0x08013501,0x06413508,0x090e1208,
-0x0a6f8008,0x00000000,0x08013500,0x06800408,0x06410c09,0x08010e90,
-0x09210249,0x07c0ffc9,0x0aef0048,0x04401208,0x06410108,0x09021208,
-0x0a6f8008,0x00000000,0x0640c708,0x06013408,0x08013501,0x06413508,
-0x090e1208,0x0a6f8008,0x00000000,0x08013500,0x07800e48,0x09808788,
-0x098087c8,0x06012408,0x06a00008,0x06011408,0x07801988,0x0aa0c008,
-0x0c00ed40,0x00000000,0x09c1f09f,0x07800e48,0x04001208,0x07c00e48,
-0x07802648,0x04001208,0x07c02648,0x0a21409f,0x07802809,0x0b803248,
-0x00000000,0x09c1f05f,0x07802888,0x0a618048,0x04001208,0x07801cc9,
-0x0aa0c009,0x00000000,0x0981f15f,0x07802789,0x0b815248,0x07c02888,
-0x07802708,0x07c02888,0x0981f09f,0x07800e48,0x07800dc9,0x02008248,
-0x07802809,0x02408248,0x07c00e48,0x078028c8,0x04001208,0x078027c9,
-0x0b807248,0x07c028c8,0x07801988,0x0aa0c008,0x0c7806c0,0x00000000,
-0x0981f0df,0x078028c8,0x04001208,0x078027c9,0x0b80f248,0x07802888,
-0x04001208,0x07802789,0x0b80b248,0x07800dc9,0x0b807248,0x078028c8,
-0x04001208,0x07800e09,0x0b803248,0x0c7800c0,0x09c1f11f,0x0981f11f,
-0x0981f0df,0x0780289e,0x078028c8,0x0958c788,0x0978479f,0x0cb80020,
-0x00000000,0x06800048,0x07c02008,0x07802688,0x07801a0c,0x0b41a308,
-0x06801a89,0x02009209,0x0700024a,0x0780270b,0x0200b28b,0x07c0270b,
-0x07c0288b,0x0780274b,0x07c028cb,0x04001208,0x0b808308,0x07c02688,
-0x07800dc9,0x07c02789,0x0780270a,0x02409289,0x0c780ac0,0x07c02809,
-0x04001249,0x0700024a,0x07c0280a,0x0780278b,0x0200b28b,0x0c780900,
-0x07c0278b,0x078026c8,0x07801a4c,0x0b802308,0x0c7ff600,0x06800008,
-0x07c02688,0x07c02888,0x07c02708,0x07801a89,0x07c02809,0x07c02789,
-0x078026c8,0x06801b89,0x02009209,0x0700024a,0x0780274b,0x0200b28b,
-0x07c0274b,0x07c028cb,0x04001208,0x0b808308,0x07c026c8,0x07800e09,
-0x07c027c9,0x0780274a,0x02409289,0x0c780200,0x07c02849,0x04001249,
-0x0700024a,0x07c0284a,0x078027cb,0x0200b28b,0x07c027cb,0x07802748,
-0x07800dc9,0x0e000248,0x00000000,0x00000000,0x07802709,0x0f000200,
-0x02008248,0x07c00e48,0x0c7fe780,0x04c177df,0x07802889,0x0780270a,
+0x06413e08,0x0640d508,0x0a608008,0x0c780a80,0x04401208,0x0600d508,
+0x06410108,0x09021208,0x0a6f8008,0x00000000,0x0640c708,0x06013408,
+0x08013503,0x06413508,0x090e1208,0x0a6f8008,0x00000000,0x08013500,
+0x0640c808,0x06013408,0x08013501,0x06413508,0x090e1208,0x0a6f8008,
+0x00000000,0x08013500,0x06800408,0x06410c09,0x08010e90,0x09210249,
+0x07c0ffc9,0x0aef0048,0x04401208,0x06410108,0x09021208,0x0a6f8008,
+0x00000000,0x0640c708,0x06013408,0x08013501,0x06413508,0x090e1208,
+0x0a6f8008,0x00000000,0x08013500,0x07800e48,0x09808788,0x098087c8,
+0x06012408,0x06a00008,0x06011408,0x07801988,0x0aa0c008,0x0c00ed40,
+0x00000000,0x09c1f09f,0x07800e48,0x04001208,0x07c00e48,0x07802648,
+0x04001208,0x07c02648,0x0a21409f,0x07802809,0x0b803248,0x00000000,
+0x09c1f05f,0x07802888,0x0a618048,0x04001208,0x07801cc9,0x0aa0c009,
+0x00000000,0x0981f15f,0x07802789,0x0b815248,0x07c02888,0x07802708,
+0x07c02888,0x0981f09f,0x07800e48,0x07800dc9,0x02008248,0x07802809,
+0x02408248,0x07c00e48,0x078028c8,0x04001208,0x078027c9,0x0b807248,
+0x07c028c8,0x07801988,0x0aa0c008,0x0c7806c0,0x00000000,0x0981f0df,
+0x078028c8,0x04001208,0x078027c9,0x0b80f248,0x07802888,0x04001208,
+0x07802789,0x0b80b248,0x07800dc9,0x0b807248,0x078028c8,0x04001208,
+0x07800e09,0x0b803248,0x0c7800c0,0x09c1f11f,0x0981f11f,0x0981f0df,
+0x0780289e,0x078028c8,0x0958c788,0x0978479f,0x0cb80020,0x00000000,
+0x06800048,0x07c02008,0x07802688,0x07801a0c,0x0b41a308,0x06801a89,
+0x02009209,0x0700024a,0x0780270b,0x0200b28b,0x07c0270b,0x07c0288b,
+0x0780274b,0x07c028cb,0x04001208,0x0b808308,0x07c02688,0x07800dc9,
+0x07c02789,0x0780270a,0x02409289,0x0c780ac0,0x07c02809,0x04001249,
+0x0700024a,0x07c0280a,0x0780278b,0x0200b28b,0x0c780900,0x07c0278b,
+0x078026c8,0x07801a4c,0x0b802308,0x0c7ff600,0x06800008,0x07c02688,
+0x07c02888,0x07c02708,0x07801a89,0x07c02809,0x07c02789,0x078026c8,
+0x06801b89,0x02009209,0x0700024a,0x0780274b,0x0200b28b,0x07c0274b,
+0x07c028cb,0x04001208,0x0b808308,0x07c026c8,0x07800e09,0x07c027c9,
+0x0780274a,0x02409289,0x0c780200,0x07c02849,0x04001249,0x0700024a,
+0x07c0284a,0x078027cb,0x0200b28b,0x07c027cb,0x07802748,0x07800dc9,
+0x0e000248,0x00000000,0x00000000,0x07802709,0x0f000200,0x02008248,
+0x07c00e48,0x0c7fe780,0x04c177df,0x07802889,0x0780270a,0x0400228a,
+0x0b407289,0x04402209,0x0440128a,0x07802788,0x0b403289,0x04401208,
+0x04401208,0x0680c009,0x02009209,0x07400262,0x0a21009f,0x06800021,
+0x0c7fb340,0x00000000,0x07802888,0x0680c009,0x02009209,0x0c7fb200,
+0x07000261,0x07802889,0x0780270a,0x0400228a,0x0b407289,0x04402209,
+0x0440128a,0x07802788,0x0b403289,0x04401208,0x04401208,0x0680c009,
+0x05801288,0x02009289,0x0700024a,0x0a20c048,0x0c7800c0,0x094082a2,
+0x095102a2,0x0740024a,0x0a21009f,0x06800021,0x0c7fac40,0x00000000,
+0x07802888,0x0680c009,0x05801288,0x02009289,0x0700024a,0x0a20c048,
+0x0911084a,0x0900884a,0x0c7fa9c0,0x00000000,0x07802889,0x0780270a,
 0x0400228a,0x0b407289,0x04402209,0x0440128a,0x07802788,0x0b403289,
-0x04401208,0x04401208,0x0680c009,0x02009209,0x07400262,0x0a21009f,
-0x06800021,0x0c7fb340,0x00000000,0x07802888,0x0680c009,0x02009209,
-0x0c7fb200,0x07000261,0x07802889,0x0780270a,0x0400228a,0x0b407289,
-0x04402209,0x0440128a,0x07802788,0x0b403289,0x04401208,0x04401208,
-0x0680c009,0x05801288,0x02009289,0x0700024a,0x0a20c048,0x0c7800c0,
-0x094082a2,0x095102a2,0x0740024a,0x0a21009f,0x06800021,0x0c7fac40,
-0x00000000,0x07802888,0x0680c009,0x05801288,0x02009289,0x0700024a,
-0x0a20c048,0x0911084a,0x0900884a,0x0c7fa9c0,0x00000000,0x07802889,
-0x0780270a,0x0400228a,0x0b407289,0x04402209,0x0440128a,0x07802788,
-0x0b403289,0x04401208,0x04401208,0x0680c009,0x05802288,0x02009289,
-0x0700024a,0x09002208,0x0a60c008,0x0c780240,0x095842a2,0x0a60c048,
-0x0c780180,0x095042a2,0x0a60c088,0x0c7800c0,0x094842a2,0x094042a2,
-0x0740024a,0x0a21009f,0x06800021,0x0c7fa240,0x00000000,0x07802888,
-0x0680c009,0x05802288,0x02009289,0x0700024a,0x09002208,0x0aa1c008,
-0x0918484a,0x0aa14048,0x0910484a,0x0aa0c088,0x0908484a,0x0900484a,
-0x0c7f9e80,0x00000000,0x0c780080,0x06800021,0x0c7f9d80,0x00000000,
-0x06412107,0x090c11c7,0x0a6f8007,0x0c7de0c0,0x00000000,0x06804009,
-0x06012d09,0x06800f8a,0x08012e00,0x00000000,0x0d07ff8a,0x00000000,
-0x0cc00000,0x00000000,0x06804009,0x06012c09,0x06809009,0x06012d09,
-0x06800f8a,0x06412e09,0x0d07ffca,0x06012e09,0x0cc00000,0x00000000,
-0x07800e49,0x0a60c009,0x0cc00000,0x00000000,0x06809009,0x06012c09,
-0x06804009,0x06012d09,0x06800f8a,0x06412e09,0x0d07ffca,0x06012e09,
-0x06411109,0x07802408,0x09446248,0x06011109,0x0cc00000,0x00000000,
-0x07800dc8,0x07801a09,0x0a608009,0x0c780880,0x0aa18049,0x0aa20089,
+0x04401208,0x04401208,0x0680c009,0x05802288,0x02009289,0x0700024a,
+0x09002208,0x0a60c008,0x0c780240,0x095842a2,0x0a60c048,0x0c780180,
+0x095042a2,0x0a60c088,0x0c7800c0,0x094842a2,0x094042a2,0x0740024a,
+0x0a21009f,0x06800021,0x0c7fa240,0x00000000,0x07802888,0x0680c009,
+0x05802288,0x02009289,0x0700024a,0x09002208,0x0aa1c008,0x0918484a,
+0x0aa14048,0x0910484a,0x0aa0c088,0x0908484a,0x0900484a,0x0c7f9e80,
+0x00000000,0x0c780080,0x06800021,0x0c7f9d80,0x00000000,0x06412107,
+0x090c11c7,0x0a6f8007,0x0c7dde00,0x00000000,0x06804009,0x06012d09,
+0x06800f8a,0x08012e00,0x00000000,0x0d07ff8a,0x00000000,0x0cc00000,
+0x00000000,0x06804009,0x06012c09,0x06809009,0x06012d09,0x06800f8a,
+0x06412e09,0x0d07ffca,0x06012e09,0x0cc00000,0x00000000,0x07800e49,
+0x0a60c009,0x0cc00000,0x00000000,0x06809009,0x06012c09,0x06804009,
+0x06012d09,0x06800f8a,0x06412e09,0x0d07ffca,0x06012e09,0x06411109,
+0x07802408,0x09446248,0x06011109,0x0cc00000,0x00000000,0x07800dc8,
+0x07801a09,0x0a608009,0x0c780880,0x0aa18049,0x0aa20089,0x0aa640c9,
+0x0a608109,0x0c7806c0,0x0c780000,0x05801288,0x0c780680,0x07c01a8a,
+0x05802288,0x0540124a,0x02009289,0x0b0fe209,0x0400128a,0x0440224a,
+0x07c01a89,0x05401289,0x0400128a,0x0540124a,0x02009289,0x05401208,
+0x0b003209,0x07801a89,0x0440128a,0x0240a24a,0x0c780200,0x07c01aca,
+0x0c000b40,0x06801a8c,0x0c780100,0x00000000,0x0c000dc0,0x06801a8c,
+0x07800e08,0x07801a49,0x0a608009,0x0c780880,0x0aa18049,0x0aa20089,
 0x0aa640c9,0x0a608109,0x0c7806c0,0x0c780000,0x05801288,0x0c780680,
-0x07c01a8a,0x05802288,0x0540124a,0x02009289,0x0b0fe209,0x0400128a,
-0x0440224a,0x07c01a89,0x05401289,0x0400128a,0x0540124a,0x02009289,
-0x05401208,0x0b003209,0x07801a89,0x0440128a,0x0240a24a,0x0c780200,
-0x07c01aca,0x0c000b40,0x06801a8c,0x0c780100,0x00000000,0x0c000dc0,
-0x06801a8c,0x07800e08,0x07801a49,0x0a608009,0x0c780880,0x0aa18049,
-0x0aa20089,0x0aa640c9,0x0a608109,0x0c7806c0,0x0c780000,0x05801288,
-0x0c780680,0x07c01b8a,0x05802288,0x0540124a,0x02009289,0x0b0fe209,
-0x0400128a,0x0440224a,0x07c01b89,0x05401289,0x0400128a,0x0540124a,
-0x02009289,0x05401208,0x0b003209,0x07801b89,0x0440128a,0x0240a24a,
-0x0c780200,0x07c01bca,0x0c000200,0x06801b8c,0x0cc00000,0x00000000,
-0x0c000480,0x06801b8c,0x0cc00000,0x00000000,0x05802348,0x0740030d,
-0x05801248,0x0240a349,0x0400130c,0x0740030a,0x054012c8,0x0200b20b,
-0x058022cb,0x0240a24b,0x0400130c,0x0740030a,0x0cc00000,0x00000000,
-0x05803288,0x0540224a,0x02009289,0x0b0fe209,0x0400128a,0x0440224a,
-0x07400309,0x054012c8,0x04000349,0x0540224a,0x02009289,0x0b0fe2c9,
-0x0400128a,0x0440224a,0x0240a349,0x0400130c,0x0740030a,0x054012c8,
-0x0200b20b,0x04000349,0x0540224a,0x02009289,0x0b0fe2c9,0x0400128a,
-0x0440224a,0x0240a349,0x0400130c,0x0740030a,0x054022c8,0x04000349,
-0x0540224a,0x02009289,0x0b0fe2c9,0x0400128a,0x0440224a,0x0240a349,
-0x0400130c,0x0740030a,0x0cc00000,0x00000000,0x0640c308,0x02008308,
-0x06035108,0x06800808,0x06035208,0x06800149,0x0680c00a,0x0700024b,
-0x0740028b,0x0b6105c9,0x04001249,0x0c7fff00,0x0400128a,0x06a0c008,
+0x07c01b8a,0x05802288,0x0540124a,0x02009289,0x0b0fe209,0x0400128a,
+0x0440224a,0x07c01b89,0x05401289,0x0400128a,0x0540124a,0x02009289,
+0x05401208,0x0b003209,0x07801b89,0x0440128a,0x0240a24a,0x0c780200,
+0x07c01bca,0x0c000200,0x06801b8c,0x0cc00000,0x00000000,0x0c000480,
+0x06801b8c,0x0cc00000,0x00000000,0x05802348,0x0740030d,0x05801248,
+0x0240a349,0x0400130c,0x0740030a,0x054012c8,0x0200b20b,0x058022cb,
+0x0240a24b,0x0400130c,0x0740030a,0x0cc00000,0x00000000,0x05803288,
+0x0540224a,0x02009289,0x0b0fe209,0x0400128a,0x0440224a,0x07400309,
+0x054012c8,0x04000349,0x0540224a,0x02009289,0x0b0fe2c9,0x0400128a,
+0x0440224a,0x0240a349,0x0400130c,0x0740030a,0x054012c8,0x0200b20b,
+0x04000349,0x0540224a,0x02009289,0x0b0fe2c9,0x0400128a,0x0440224a,
+0x0240a349,0x0400130c,0x0740030a,0x054022c8,0x04000349,0x0540224a,
+0x02009289,0x0b0fe2c9,0x0400128a,0x0440224a,0x0240a349,0x0400130c,
+0x0740030a,0x0cc00000,0x00000000,0x0640c308,0x02008308,0x06035108,
+0x06800808,0x06035208,0x06800149,0x0680c00a,0x0700024b,0x0740028b,
+0x0b6105c9,0x04001249,0x0c7fff00,0x0400128a,0x06a0c008,0x06035008,
+0x06435008,0x0580f208,0x0bef8048,0x00000000,0x06435308,0x0900c208,
+0x0a6f8008,0x00000000,0x0cc00000,0x00000000,0x0640c408,0x02008308,
+0x06035108,0x06801008,0x06035208,0x06800609,0x0680c00a,0x0700024b,
+0x0740028b,0x0b611449,0x04001249,0x0c7fff00,0x0400128a,0x06a0c008,
 0x06035008,0x06435008,0x0580f208,0x0bef8048,0x00000000,0x06435308,
-0x0900c208,0x0a6f8008,0x00000000,0x0cc00000,0x00000000,0x0640c408,
-0x02008308,0x06035108,0x06801008,0x06035208,0x06800609,0x0680c00a,
-0x0700024b,0x0740028b,0x0b611449,0x04001249,0x0c7fff00,0x0400128a,
-0x06a0c008,0x06035008,0x06435008,0x0580f208,0x0bef8048,0x00000000,
-0x06435308,0x0900c208,0x0a6f8008,0x00000000,0x0cc00000,0x00000000,
-0x0640c308,0x02008308,0x06035108,0x06800808,0x06035208,0x06b0c008,
-0x06035008,0x06435008,0x0580f208,0x0bef8048,0x00000000,0x06800149,
-0x0680c00a,0x0700028b,0x0740024b,0x0b6105c9,0x04001249,0x0c7fff00,
-0x0400128a,0x0cc00000,0x00000000,0x0640c408,0x02008308,0x06035108,
-0x06801008,0x06035208,0x06b0c008,0x06035008,0x06435008,0x0580f208,
-0x0bef8048,0x00000000,0x06800609,0x0680c00a,0x0700028b,0x0740024b,
-0x0b611449,0x04001249,0x0c7fff00,0x0400128a,0x0cc00000,0x00000000,
-0x0640c508,0x02008308,0x06035108,0x06800c08,0x06035208,0x06801489,
-0x0680c00a,0x0700024b,0x0740028b,0x0b611ec9,0x04001249,0x0c7fff00,
-0x0400128a,0x06a0c008,0x06035008,0x06435008,0x0580f208,0x0bef8048,
-0x00000000,0x06435308,0x0900c208,0x0a6f8008,0x00000000,0x07800f08,
-0x0aa20008,0x0540330c,0x078014c8,0x0aa0c008,0x06800008,0x06900008,
-0x0c000100,0x0200c20c,0x0cc00000,0x00000000,0x0680000d,0x08070300,
-0x0680c00b,0x0680000a,0x06470408,0x06470409,0x09508209,0x074002c8,
-0x040012cb,0x0baeffca,0x0400128a,0x0aa3800d,0x00000000,0x06470508,
-0x07c0fe88,0x09210208,0x07c0fec8,0x06470608,0x07c0ff08,0x09210208,
-0x07c0ff48,0x06470708,0x07c0ff88,0x09210208,0x07c0ffc8,0x0640cd08,
-0x02008308,0x0540924d,0x02008248,0x06035108,0x06804008,0x06035208,
+0x0900c208,0x0a6f8008,0x00000000,0x0cc00000,0x00000000,0x0640c308,
+0x02008308,0x06035108,0x06800808,0x06035208,0x06b0c008,0x06035008,
+0x06435008,0x0580f208,0x0bef8048,0x00000000,0x06800149,0x0680c00a,
+0x0700028b,0x0740024b,0x0b6105c9,0x04001249,0x0c7fff00,0x0400128a,
+0x0cc00000,0x00000000,0x0640c408,0x02008308,0x06035108,0x06801008,
+0x06035208,0x06b0c008,0x06035008,0x06435008,0x0580f208,0x0bef8048,
+0x00000000,0x06800609,0x0680c00a,0x0700028b,0x0740024b,0x0b611449,
+0x04001249,0x0c7fff00,0x0400128a,0x0cc00000,0x00000000,0x0640c508,
+0x02008308,0x06035108,0x06800c08,0x06035208,0x06801489,0x0680c00a,
+0x0700024b,0x0740028b,0x0b611ec9,0x04001249,0x0c7fff00,0x0400128a,
 0x06a0c008,0x06035008,0x06435008,0x0580f208,0x0bef8048,0x00000000,
-0x0ba0c04d,0x0cc00000,0x00000000,0x0c7ff640,0x0400134d,0x0640c508,
-0x02008308,0x06035108,0x06800c08,0x06035208,0x06b0c008,0x06035008,
-0x06435008,0x0580f208,0x0bef8048,0x00000000,0x06801489,0x0680c00a,
-0x0700028b,0x0740024b,0x0b611ec9,0x04001249,0x0c7fff00,0x0400128a,
-0x0c000e00,0x00000000,0x07800f08,0x0aa20008,0x0540330c,0x078014c8,
-0x0aa0c008,0x06800008,0x06900008,0x0c000100,0x0200c20c,0x0cc00000,
-0x00000000,0x0680000d,0x08070200,0x0640cd08,0x02008308,0x0540924d,
-0x02008248,0x06035108,0x06804008,0x06035208,0x06b0c008,0x06035008,
-0x06435008,0x0580f208,0x0bef8048,0x00000000,0x0680c00b,0x0680000a,
-0x070002c8,0x040012cb,0x06070408,0x09108248,0x06070409,0x0baeffca,
-0x0400128a,0x0aa3800d,0x00000000,0x0780fe88,0x0780fec9,0x09610209,
-0x06070508,0x0780ff08,0x0780ff49,0x09610209,0x06070608,0x0780ff88,
-0x0780ffc9,0x09610209,0x06070708,0x0ba0c04d,0x0cc00000,0x00000000,
-0x0c7ff640,0x0400134d,0x078015c8,0x07801749,0x09421209,0x07801709,
-0x09441209,0x07801949,0x09461209,0x07800ec9,0x09483209,0x07800e89,
-0x094e3209,0x07800f49,0x09741209,0x07801789,0x09761209,0x07800d09,
-0x078017ca,0x02409289,0x09782209,0x06011708,0x06412508,0x07800fc9,
-0x09401209,0x07801089,0x09482209,0x078010c9,0x094c2209,0x07801009,
-0x09504209,0x07801049,0x09584209,0x06012508,0x06470108,0x07800f09,
-0x09401209,0x09421209,0x09441209,0x07800d09,0x09482209,0x06070108,
-0x06440808,0x07801289,0x09401209,0x07801709,0x09421209,0x06040808,
-0x0cc00000,0x00000000,0x0c002dc0,0x00000000,0x07802208,0x07c04408,
-0x07802248,0x07c04448,0x07802048,0x07c04488,0x07802148,0x07c044c8,
-0x07802008,0x07c04508,0x07801fc8,0x07c04548,0x07800808,0x07c045c8,
-0x07800848,0x07c04608,0x07800c48,0x07c04648,0x07800c88,0x07c04688,
-0x07800908,0x07c046c8,0x078020c8,0x07c04708,0x07802308,0x07c04748,
-0x07802348,0x07c04788,0x07801e88,0x07c047c8,0x07802388,0x07c04808,
-0x07800a48,0x07c04848,0x07802988,0x07c04888,0x07801988,0x078019c9,
-0x05401249,0x02c08248,0x07c048c8,0x07801a08,0x07c04908,0x07801a48,
-0x07c04948,0x07801a88,0x07c04988,0x07801ac8,0x07c049c8,0x07801b08,
-0x07c04a08,0x07801b48,0x07c04a48,0x07801b88,0x07c04a88,0x07801bc8,
-0x07c04ac8,0x07801c08,0x07c04b08,0x07801c48,0x07c04b48,0x07801dc8,
-0x07c04bc8,0x07801e08,0x07c04c08,0x07802548,0x07c04c48,0x07802588,
-0x07c04c88,0x07801808,0x07c04cc8,0x07801848,0x07c04d08,0x07801f48,
-0x07c04d48,0x06800009,0x07801108,0x0a20c048,0x07800fc8,0x09809009,
-0x0a20c048,0x07801c88,0x09809049,0x0a20c048,0x07801d08,0x09809089,
-0x0a20c048,0x07801d48,0x098090c9,0x0a20c048,0x07801d88,0x09809109,
-0x0a20c048,0x078024c8,0x09809149,0x0a20c048,0x07802508,0x09809189,
-0x0a20c048,0x07802188,0x098091c9,0x0a20c048,0x078021c8,0x09809209,
-0x0a20c048,0x078025c8,0x09809249,0x0a20c048,0x00000000,0x09809289,
-0x07c04b89,0x0680500a,0x06802a48,0x07000209,0x07400289,0x0400128a,
-0x0baf7208,0x04001208,0x0800cf00,0x06800009,0x06804008,0x02008248,
-0x07000208,0x09808408,0x0600cf08,0x00000000,0x0640cf08,0x0a6fc008,
-0x0b60dfc9,0x0c7ffdc0,0x04001249,0x0cc00000,0x00000000,0x0800cf00,
-0x0800c0ff,0x06800009,0x0680ffca,0x07000248,0x09808408,0x0600cf08,
-0x00000000,0x0640cf08,0x0a6fc008,0x0b403289,0x0c7ffe40,0x04001249,
-0x0cc00000,0x00000000,0x0680000a,0x0680000b,0x06804008,0x07000209,
-0x0580f209,0x0be20048,0x0580e209,0x0a20c048,0x0400128a,0x040012cb,
-0x06804008,0x0bae040a,0x02008288,0x07c0294b,0x0cc00000,0x00000000,
-0x06800009,0x07c02949,0x068003ca,0x068043c8,0x07400209,0x0440128a,
-0x0aef800a,0x04401208,0x06a00009,0x07400209,0x0cc00000,0x00000000,
-0x06800048,0x07c02308,0x07c02148,0x0cc00000,0x00000000,0x0680580a,
-0x06801f08,0x07000209,0x07400289,0x0400128a,0x0baf6608,0x04001208,
-0x0cc00000,0x00000000,0x06802a4d,0x06410c08,0x08010e81,0x093e1248,
-0x0aa10009,0x07c02989,0x0c0003c0,0x0780220c,0x0a62c00b,0x00000000,
-0x06410c08,0x08010e81,0x093e1248,0x0aa18009,0x07802989,0x09809049,
-0x07c02989,0x0c000100,0x0780224c,0x0cc00000,0x00000000,0x07802948,
-0x0b21c088,0x06800049,0x0b214108,0x06800089,0x0b20c208,0x068000c9,
-0x06800109,0x0680080a,0x0240a24a,0x098091c9,0x06410c08,0x06010e09,
-0x03808288,0x07400348,0x0400134d,0x0aeec04c,0x0440130c,0x0cc00000,
-0x00000000,0x06460409,0x09001289,0x0aaf800a,0x00000000,0x0cc00000,
-0x00000000,0x07802888,0x0680d009,0x02009209,0x0700024d,0x078028c8,
-0x0680ee09,0x02009209,0x0700024e,0x0680000f,0x0ac0338d,0x06ee000f,
-0x06ea000f,0x06050a0f,0x07802888,0x0b615e08,0x0680d009,0x02009209,
-0x07802a0d,0x0740024d,0x078028c8,0x0b615108,0x0680ee09,0x02009209,
-0x07802a0e,0x0740024e,0x0cc00000,0x00000000,0x0640c023,0x0a6fffe3,
-0x00000000,0x06410b23,0x098230a3,0x06010b23,0x06412123,0x0a2fc063,
-0x00000000,0x06410c23,0x092039a3,0x07c04da6,0x093269a3,0x07c04de6,
-0x06410d23,0x06410b23,0x0a6308a6,0x00000000,0x06411423,0x090188e3,
-0x0640ce24,0x0a610023,0x0be0c064,0x05801924,0x0a610024,0x06440123,
-0x0a2fc063,0x00000000,0x08012101,0x0aa24826,0x06800065,0x0aa1c866,
-0x068000a5,0x0aa148a6,0x068000e5,0x0b20c566,0x06800125,0x06803c25,
-0x0600c025,0x08030504,0x0c7ff600,0x00000000,0x00000000,0x00000000,
+0x06435308,0x0900c208,0x0a6f8008,0x00000000,0x07800f08,0x0aa20008,
+0x0540330c,0x078014c8,0x0aa0c008,0x06800008,0x06900008,0x0c000100,
+0x0200c20c,0x0cc00000,0x00000000,0x0680000d,0x08070300,0x0680c00b,
+0x0680000a,0x06470408,0x06470409,0x09508209,0x074002c8,0x040012cb,
+0x0baeffca,0x0400128a,0x0aa3800d,0x00000000,0x06470508,0x07c0fe88,
+0x09210208,0x07c0fec8,0x06470608,0x07c0ff08,0x09210208,0x07c0ff48,
+0x06470708,0x07c0ff88,0x09210208,0x07c0ffc8,0x0640cd08,0x02008308,
+0x0540924d,0x02008248,0x06035108,0x06804008,0x06035208,0x06a0c008,
+0x06035008,0x06435008,0x0580f208,0x0bef8048,0x00000000,0x0ba0c04d,
+0x0cc00000,0x00000000,0x0c7ff640,0x0400134d,0x0640c508,0x02008308,
+0x06035108,0x06800c08,0x06035208,0x06b0c008,0x06035008,0x06435008,
+0x0580f208,0x0bef8048,0x00000000,0x06801489,0x0680c00a,0x0700028b,
+0x0740024b,0x0b611ec9,0x04001249,0x0c7fff00,0x0400128a,0x0c000e00,
+0x00000000,0x07800f08,0x0aa20008,0x0540330c,0x078014c8,0x0aa0c008,
+0x06800008,0x06900008,0x0c000100,0x0200c20c,0x0cc00000,0x00000000,
+0x0680000d,0x08070200,0x0640cd08,0x02008308,0x0540924d,0x02008248,
+0x06035108,0x06804008,0x06035208,0x06b0c008,0x06035008,0x06435008,
+0x0580f208,0x0bef8048,0x00000000,0x0680c00b,0x0680000a,0x070002c8,
+0x040012cb,0x06070408,0x09108248,0x06070409,0x0baeffca,0x0400128a,
+0x0aa3800d,0x00000000,0x0780fe88,0x0780fec9,0x09610209,0x06070508,
+0x0780ff08,0x0780ff49,0x09610209,0x06070608,0x0780ff88,0x0780ffc9,
+0x09610209,0x06070708,0x0ba0c04d,0x0cc00000,0x00000000,0x0c7ff640,
+0x0400134d,0x078015c8,0x07801749,0x09421209,0x07801709,0x09441209,
+0x07801949,0x09461209,0x07800ec9,0x09483209,0x07800e89,0x094e3209,
+0x07800f49,0x09741209,0x07801789,0x09761209,0x07800d09,0x078017ca,
+0x02409289,0x09782209,0x06011708,0x06412508,0x07800fc9,0x09401209,
+0x07801089,0x09482209,0x078010c9,0x094c2209,0x07801009,0x09504209,
+0x07801049,0x09584209,0x06012508,0x06470108,0x07800f09,0x09401209,
+0x09421209,0x09441209,0x07800d09,0x09482209,0x06070108,0x06440808,
+0x07801289,0x09401209,0x07801709,0x09421209,0x06040808,0x0cc00000,
+0x00000000,0x0c002dc0,0x00000000,0x07802208,0x07c04408,0x07802248,
+0x07c04448,0x07802048,0x07c04488,0x07802148,0x07c044c8,0x07802008,
+0x07c04508,0x07801fc8,0x07c04548,0x07800808,0x07c045c8,0x07800848,
+0x07c04608,0x07800c48,0x07c04648,0x07800c88,0x07c04688,0x07800908,
+0x07c046c8,0x078020c8,0x07c04708,0x07802308,0x07c04748,0x07802348,
+0x07c04788,0x07801e88,0x07c047c8,0x07802388,0x07c04808,0x07800a48,
+0x07c04848,0x07802988,0x07c04888,0x07801988,0x078019c9,0x05401249,
+0x02c08248,0x07c048c8,0x07801a08,0x07c04908,0x07801a48,0x07c04948,
+0x07801a88,0x07c04988,0x07801ac8,0x07c049c8,0x07801b08,0x07c04a08,
+0x07801b48,0x07c04a48,0x07801b88,0x07c04a88,0x07801bc8,0x07c04ac8,
+0x07801c08,0x07c04b08,0x07801c48,0x07c04b48,0x07801dc8,0x07c04bc8,
+0x07801e08,0x07c04c08,0x07802548,0x07c04c48,0x07802588,0x07c04c88,
+0x07801808,0x07c04cc8,0x07801848,0x07c04d08,0x07801f48,0x07c04d48,
+0x06800009,0x07801108,0x0a20c048,0x07800fc8,0x09809009,0x0a20c048,
+0x07801c88,0x09809049,0x0a20c048,0x07801d08,0x09809089,0x0a20c048,
+0x07801d48,0x098090c9,0x0a20c048,0x07801d88,0x09809109,0x0a20c048,
+0x078024c8,0x09809149,0x0a20c048,0x07802508,0x09809189,0x0a20c048,
+0x07802188,0x098091c9,0x0a20c048,0x078021c8,0x09809209,0x0a20c048,
+0x078025c8,0x09809249,0x0a20c048,0x00000000,0x09809289,0x07c04b89,
+0x0680500a,0x06802a48,0x07000209,0x07400289,0x0400128a,0x0baf7208,
+0x04001208,0x0800cf00,0x06800009,0x06804008,0x02008248,0x07000208,
+0x09808408,0x0600cf08,0x00000000,0x0640cf08,0x0a6fc008,0x0b60dfc9,
+0x0c7ffdc0,0x04001249,0x0cc00000,0x00000000,0x0800cf00,0x0800c0ff,
+0x06800009,0x0680ffca,0x07000248,0x09808408,0x0600cf08,0x00000000,
+0x0640cf08,0x0a6fc008,0x0b403289,0x0c7ffe40,0x04001249,0x0cc00000,
+0x00000000,0x0680000a,0x0680000b,0x06804008,0x07000209,0x0580f209,
+0x0be20048,0x0580e209,0x0a20c048,0x0400128a,0x040012cb,0x06804008,
+0x0bae040a,0x02008288,0x07c0294b,0x0cc00000,0x00000000,0x06800009,
+0x07c02949,0x068003ca,0x068043c8,0x07400209,0x0440128a,0x0aef800a,
+0x04401208,0x06a00009,0x07400209,0x0cc00000,0x00000000,0x06800048,
+0x07c02308,0x07c02148,0x0cc00000,0x00000000,0x0680580a,0x06801f08,
+0x07000209,0x07400289,0x0400128a,0x0baf6608,0x04001208,0x0cc00000,
+0x00000000,0x06802a4d,0x06410c08,0x08010e81,0x093e1248,0x0aa10009,
+0x07c02989,0x0c0003c0,0x0780220c,0x0a62c00b,0x00000000,0x06410c08,
+0x08010e81,0x093e1248,0x0aa18009,0x07802989,0x09809049,0x07c02989,
+0x0c000100,0x0780224c,0x0cc00000,0x00000000,0x07802948,0x0b21c088,
+0x06800049,0x0b214108,0x06800089,0x0b20c208,0x068000c9,0x06800109,
+0x0680080a,0x0240a24a,0x098091c9,0x06410c08,0x06010e09,0x03808288,
+0x07400348,0x0400134d,0x0aeec04c,0x0440130c,0x0cc00000,0x00000000,
+0x06460409,0x09001289,0x0aaf800a,0x00000000,0x0cc00000,0x00000000,
+0x07802888,0x0680d009,0x02009209,0x0700024d,0x078028c8,0x0680ee09,
+0x02009209,0x0700024e,0x0680000f,0x0ac0338d,0x06ee000f,0x06ea000f,
+0x06050a0f,0x07802888,0x0b615e08,0x0680d009,0x02009209,0x07802a0d,
+0x0740024d,0x078028c8,0x0b615108,0x0680ee09,0x02009209,0x07802a0e,
+0x0740024e,0x0cc00000,0x00000000,0x0640c023,0x0a6fffe3,0x00000000,
+0x06410b23,0x098230a3,0x06010b23,0x06412123,0x0a2fc063,0x00000000,
+0x06410c23,0x092039a3,0x07c04da6,0x093269a3,0x07c04de6,0x06410d23,
+0x06410b23,0x06800067,0x0c000b00,0x04000a26,0x0a6308a6,0x00000000,
+0x06411423,0x090188e3,0x0640ce24,0x0a610023,0x0be0c064,0x05801924,
+0x0a610024,0x06440123,0x0a2fc063,0x00000000,0x08012101,0x06803c25,
+0x07803363,0x0aa2c826,0x0a24c063,0x0aa24866,0x0a2440a3,0x0aa1c8a6,
+0x0a23c123,0x0be0c223,0x0aa08526,0x0a6304e6,0x098230e3,0x07c03363,
+0x0aa24826,0x06800065,0x0aa1c866,0x068000a5,0x0aa148a6,0x068000e5,
+0x0b20c566,0x06800125,0x06803c25,0x068000a7,0x0c000180,0x04000a25,
+0x0600c025,0x08030504,0x0c7ff140,0x00000000,0x0600d128,0x078033a8,
+0x0aa18028,0x00000000,0x0600d027,0x08007401,0x0640d027,0x0a6fc027,
+0x00000000,0x0cc00000,0x00000000,0x00000000,0x00000000,0x00000000,
+0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
+0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
 0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
 };
\ No newline at end of file
diff --git a/drivers/amlogic/amports/ptsserv.c b/drivers/amlogic/amports/ptsserv.c
index e8c58f6e46a3..bb53b9dd491b 100755
--- a/drivers/amlogic/amports/ptsserv.c
+++ b/drivers/amlogic/amports/ptsserv.c
@@ -175,56 +175,85 @@ EXPORT_SYMBOL(pts_cached_time);
 int calculation_stream_delayed_ms(u8 type,u32 *latestbitrate,u32*avg_bitare)
 {
     pts_table_t *pTable;
-	u32 timestampe_delayed=0;
-	u32 outtime;
+    u32 timestampe_delayed=0;
+    u32 outtime;
 	
     if (type >= PTS_TYPE_MAX) {
         return 0;
     }
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+    if (type == PTS_TYPE_HEVC) {
+        pTable = &pts_table[PTS_TYPE_VIDEO];
+    } else
+#endif
     pTable = &pts_table[type];
 
-    if((pTable->last_checkin_pts==-1) || (pTable->last_checkout_pts==-1))
-	    return 0;
-	if(type == PTS_TYPE_VIDEO)
-		outtime=timestamp_vpts_get();
-	else if(type ==PTS_TYPE_AUDIO)
-		outtime=timestamp_apts_get();
-	else 
-		outtime=timestamp_pcrscr_get();
-    timestampe_delayed=(pTable->last_checkin_pts-outtime)/90;
-	if((timestampe_delayed<0 ||timestampe_delayed>5*1000) && pTable->last_avg_bitrate>0){
-		int diff=pTable->last_checkin_offset-pTable->last_checkout_offset;
-		int diff2=stbuf_level(get_buf_by_type(type));
-		if((diff-diff2)> (pTable->last_avg_bitrate/8/10) || (diff-diff2*10))
-			diff =diff2;
-		int delay_ms=diff*1000/(1+pTable->last_avg_bitrate/8);
-		if(timestampe_delayed< 0 ||abs(timestampe_delayed-delay_ms)>3*1000){
-			timestampe_delayed=delay_ms;
-			///printk("..recalculated %d ms delay,diff=%d\n",timestampe_delayed,diff);
-		}
+    if((pTable->last_checkin_pts==-1) || (pTable->last_checkout_pts==-1)) {
+        return 0;
+    }
+
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+    if (type == PTS_TYPE_HEVC) {
+        outtime = timestamp_vpts_get();
+    } else
+#endif
+    if (type == PTS_TYPE_VIDEO) {
+        outtime = timestamp_vpts_get();
+    } else if (type ==PTS_TYPE_AUDIO) {
+        outtime = timestamp_apts_get();
+    } else {
+        outtime = timestamp_pcrscr_get();
+    }
+
+    timestampe_delayed = (pTable->last_checkin_pts-outtime)/90;
+
+    if ((timestampe_delayed<0 ||timestampe_delayed>5*1000) && pTable->last_avg_bitrate>0) {
+        int diff = pTable->last_checkin_offset-pTable->last_checkout_offset;
+        int diff2 = stbuf_level(get_buf_by_type(type));
+
+        if ((diff-diff2) > (pTable->last_avg_bitrate/8/10) || (diff-diff2*10)) {
+            int delay_ms;
+            diff = diff2;
+            delay_ms=diff*1000/(1+pTable->last_avg_bitrate/8);
+
+            if (timestampe_delayed< 0 ||abs(timestampe_delayed-delay_ms)>3*1000) {
+                timestampe_delayed=delay_ms;
+                ///printk("..recalculated %d ms delay,diff=%d\n",timestampe_delayed,diff);
+            }
 	}
-	if(latestbitrate)
-		*latestbitrate=pTable->last_bitrate;
-	if(avg_bitare)
-		*avg_bitare=pTable->last_avg_bitrate;
-	return timestampe_delayed;
+    }
+
+    if (latestbitrate) {
+        *latestbitrate=pTable->last_bitrate;
+    }
+
+    if (avg_bitare) {
+        *avg_bitare=pTable->last_avg_bitrate;
+    }
+
+    return timestampe_delayed;
 }
 EXPORT_SYMBOL(calculation_stream_delayed_ms);
+
 int calculation_stream_ext_delayed_ms(u8 type)
 {
-       pts_table_t *pTable;
-       int extdelay_ms;
-       if (type >= PTS_TYPE_MAX) {
-        return 0;
+    pts_table_t *pTable;
+    int extdelay_ms;
+
+    if (type >= PTS_TYPE_MAX) {
+         return 0;
+    }
+
+    pTable = &pts_table[type];
+    extdelay_ms = jiffies-pTable->last_checkin_jiffies;
+
+    if (extdelay_ms < 0) {
+        extdelay_ms=0;
     }
-       pTable = &pts_table[type];
-       extdelay_ms=jiffies-pTable->last_checkin_jiffies;
-       if(extdelay_ms<0)
-               extdelay_ms=0;
-       return extdelay_ms*1000/HZ;
-}
 
+    return extdelay_ms*1000/HZ;
+}
 #endif
 
 static int pts_checkin_offset_inline(u8 type, u32 offset, u32 val,u64 uS64)
@@ -838,7 +867,7 @@ int pts_start(u8 type)
         if (type == PTS_TYPE_HEVC) {
             pTable->buf_start = READ_VREG(HEVC_STREAM_START_ADDR);
             pTable->buf_size = READ_VREG(HEVC_STREAM_END_ADDR)
-                               - pTable->buf_start + 8;
+                               - pTable->buf_start;
             WRITE_MPEG_REG(VIDEO_PTS, 0);
             timestamp_pcrscr_set(0);//video always need the pcrscr,Clear it to use later
             pTable->first_checkin_pts = -1;
diff --git a/drivers/amlogic/amports/streambuf.c b/drivers/amlogic/amports/streambuf.c
index 52d1a746afcf..1bcb56ad18e8 100755
--- a/drivers/amlogic/amports/streambuf.c
+++ b/drivers/amlogic/amports/streambuf.c
@@ -254,7 +254,7 @@ s32 stbuf_init(struct stream_buf_s *buf)
     if (buf->type == BUF_TYPE_HEVC) {
         CLEAR_VREG_MASK(HEVC_STREAM_CONTROL, 1);
         WRITE_VREG(HEVC_STREAM_START_ADDR, phy_addr);
-        WRITE_VREG(HEVC_STREAM_END_ADDR, phy_addr + buf->buf_size - 8);
+        WRITE_VREG(HEVC_STREAM_END_ADDR, phy_addr + buf->buf_size);
         WRITE_VREG(HEVC_STREAM_RD_PTR, phy_addr);
         WRITE_VREG(HEVC_STREAM_WR_PTR, phy_addr);
 
diff --git a/drivers/amlogic/amports/tsdemux.c b/drivers/amlogic/amports/tsdemux.c
index 229d5545f13d..854fd16a8556 100755
--- a/drivers/amlogic/amports/tsdemux.c
+++ b/drivers/amlogic/amports/tsdemux.c
@@ -503,7 +503,7 @@ s32 tsdemux_init(u32 vid, u32 aid, u32 sid)
         WRITE_MPEG_REG(PARSER_VIDEO_START_PTR,
                        READ_VREG(HEVC_STREAM_START_ADDR));
         WRITE_MPEG_REG(PARSER_VIDEO_END_PTR,
-                       READ_VREG(HEVC_STREAM_END_ADDR));
+                       READ_VREG(HEVC_STREAM_END_ADDR) - 8);
 
         CLEAR_MPEG_REG_MASK(PARSER_ES_CONTROL, ES_VID_MAN_RD_PTR);
 
diff --git a/drivers/amlogic/amports/vh265.c b/drivers/amlogic/amports/vh265.c
index e3dc8f03913e..bdc3a252a3cb 100755
--- a/drivers/amlogic/amports/vh265.c
+++ b/drivers/amlogic/amports/vh265.c
@@ -88,11 +88,14 @@ static u32 error_watchdog_count;
 
 #define H265_DEBUG_POC          1
 #define H265_DEBUG_BUFMGR       2
-#define H265_DEBUG_UCODE        4
+#define H265_DEBUG_PARAM        4
 #define H265_DEBUG_REG          8
+#define H265_DEBUG_UCODE        0x10
 #define H265_DEBUG_DIS_ERROR_PROC       0x10000
 #define H265_DEBUG_DIS_SYS_ERROR_PROC   0x20000
 
+#define DEBUG_PTS
+
 static u32 debug_decode_idx_start = 0;
 static u32 debug_decode_idx_end = 0;
 static u32 debug = 0;
@@ -325,6 +328,9 @@ h265 buffer management
 #define HEVC_DECODE_PIC_BEGIN_REG HEVC_ASSIST_SCRATCH_M
 #define HEVC_DECODE_PIC_NUM_REG   HEVC_ASSIST_SCRATCH_N
 
+#define DEBUG_REG1              HEVC_ASSIST_SCRATCH_G
+#define DEBUG_REG2              HEVC_ASSIST_SCRATCH_H
+
 #define MAX_INT 0x7FFFFFFF
 
 #define RPM_BEGIN                                              0x100
@@ -664,6 +670,7 @@ typedef struct hevc_state_{
     PIC_t* col_pic;
     int skip_flag;
     int decode_idx;
+    unsigned char skip_p_b_flag;
     unsigned char wait_buf;
     unsigned char error_flag;
 }hevc_stru_t;
@@ -701,6 +708,7 @@ static void hevc_init_stru(hevc_stru_t* hevc, BuffInfo_t* buf_spec_i, buff_t* mc
     hevc->col_pic = NULL;
     hevc->wait_buf = 0;
     hevc->error_flag = 0;
+    hevc->skip_p_b_flag = 1;
     
     for(i=0; i<MAX_REF_PIC_NUM; i++){
         m_PIC[i].index = -1;
@@ -2072,6 +2080,18 @@ static int hevc_slice_segment_header_process(hevc_stru_t* hevc, param_t* rpm_par
     int     lcu_y_num_div;
     int     Col_ref         ;
     if(hevc->wait_buf == 0){
+        if(hevc->skip_p_b_flag && 
+            (rpm_param->p.m_nalUnitType != NAL_UNIT_CODED_SLICE_IDR) &&
+            (rpm_param->p.m_nalUnitType != NAL_UNIT_CODED_SLICE_IDR_N_LP)&&
+            ( rpm_param->p.m_nalUnitType != NAL_UNIT_CODED_SLICE_CRA) &&
+            ( rpm_param->p.m_nalUnitType != NAL_UNIT_CODED_SLICE_BLA) && 
+            ( rpm_param->p.m_nalUnitType != NAL_UNIT_CODED_SLICE_BLANT) &&
+            (rpm_param->p.m_nalUnitType != NAL_UNIT_CODED_SLICE_BLA_N_LP )
+            ){
+            printk("%s: skip nal %d\n", __func__, rpm_param->p.m_nalUnitType);
+            return 4;
+        }
+        hevc->skip_p_b_flag = 0;    
         hevc->m_temporalId = rpm_param->p.m_temporalId;
         hevc->m_nalUnitType = rpm_param->p.m_nalUnitType;
         if(hevc->m_nalUnitType == NAL_UNIT_EOS){ 
@@ -2477,7 +2497,7 @@ static int init_buf_spec(hevc_stru_t* hevc)
 {
     int i;
     int canvas_width = (hevc->pic_w + 63) / 64 * 64;
-    int canvas_height = hevc->pic_h;
+    int canvas_height = (hevc->pic_h + 15) / 16 * 16;
 	  for(i=0; i<MAX_REF_PIC_NUM; i++){ 
 	      if(m_PIC[i].index == -1){
 	          break;
@@ -2509,7 +2529,7 @@ static void set_frame_info(vframe_t *vf)
     vf->height = frame_height;
     vf->duration = frame_dur;
     vf->duration_pulldown = 0;
-    vf->pts = 0;
+
     ar = min(frame_ar, (u32)DISP_RATIO_ASPECT_RATIO_MAX);
     vf->ratio_control = (ar << DISP_RATIO_ASPECT_RATIO_BIT);
 
@@ -2594,8 +2614,17 @@ static int prepare_display_buf(int display_buff_id, int stream_offset)
         vfbuf_use[display_buff_id]++;
          */
         if (pts_lookup_offset(PTS_TYPE_VIDEO, stream_offset, &vf->pts, 0) != 0) {
+#ifdef DEBUG_PTS
+            pts_missed++;
+#endif
             vf->pts = 0;
         }
+#ifdef DEBUG_PTS
+        else {
+            pts_hit++;
+        }
+#endif
+
         vf->index = display_buff_id;
         vf->type = VIDTYPE_PROGRESSIVE | VIDTYPE_VIU_FIELD;
         vf->type |= VIDTYPE_VIU_NV21;
@@ -2621,6 +2650,15 @@ static irqreturn_t vh265_isr(int irq, void *dev_id)
     if(debug&H265_DEBUG_BUFMGR){
         printk("265 isr dec status = %d\n", dec_status);
     }
+
+   if(debug&H265_DEBUG_UCODE){
+       if(READ_HREG(DEBUG_REG1)!=0){
+            printk("dbg%x: %x\n",  READ_HREG(DEBUG_REG1), READ_HREG(DEBUG_REG2));
+            WRITE_HREG(DEBUG_REG1, 0);
+            	return IRQ_HANDLED;
+       }
+   }
+    
     if(hevc->error_flag){
         //reset
         amhevc_stop();
@@ -2647,7 +2685,7 @@ static irqreturn_t vh265_isr(int irq, void *dev_id)
     else if(dec_status == HEVC_SLICE_SEGMENT_DONE){
         if(hevc->wait_buf == 0){
             get_rpm_param(&rpm_param);      
-            if(debug&H265_DEBUG_UCODE){
+            if(debug&H265_DEBUG_PARAM){
                 printk("rpm_param:\n");
                 for(i=0; i<0x80; i++){
                     printk("%04x ", rpm_param.l.data[i]);
@@ -2784,7 +2822,13 @@ static void vh265_prot_init(void)
 
     /* disable PSCALE for hardware sharing */
     WRITE_VREG(HEVC_PSCALE_CTRL, 0);
-
+    
+    if(debug&H265_DEBUG_UCODE){
+        WRITE_VREG(DEBUG_REG1, 0x1);
+    }
+    else{
+        WRITE_VREG(DEBUG_REG1, 0x0);
+    }
 
 }
 
diff --git a/drivers/amlogic/camera/common/cam_prober.c b/drivers/amlogic/camera/common/cam_prober.c
index f02a9a062ebb..f3abd271150f 100755
--- a/drivers/amlogic/camera/common/cam_prober.c
+++ b/drivers/amlogic/camera/common/cam_prober.c
@@ -819,7 +819,20 @@ static resolution_size_t get_res_size(const char* res_str)
 	return ret;
 }
 
-#ifdef CONFIG_ARCH_MESON8
+#ifdef CONFIG_ARCH_MESON8B
+static inline void cam_enable_clk(int clk)
+{
+	if (clk == 12000)
+		aml_set_reg32_bits(P_HHI_GEN_CLK_CNTL, 3, 16, 2);
+	else
+		aml_set_reg32_bits(P_HHI_GEN_CLK_CNTL, 1, 16, 2);
+}
+
+static inline void cam_disable_clk(void)
+{
+	aml_set_reg32_bits(P_HHI_GEN_CLK_CNTL, 0, 16, 2); //close clock
+}
+#elif defined CONFIG_ARCH_MESON8
 static inline void cam_enable_clk(int clk)
 {
 	aml_set_reg32_bits(P_HHI_GEN_CLK_CNTL, 1, 11, 5);
diff --git a/drivers/amlogic/deinterlace/deinterlace.c b/drivers/amlogic/deinterlace/deinterlace.c
index 10b367f54576..99f930d490b5 100755
--- a/drivers/amlogic/deinterlace/deinterlace.c
+++ b/drivers/amlogic/deinterlace/deinterlace.c
@@ -4746,12 +4746,13 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
      	di_post_stru.next_canvas_id = di_post_stru.canvas_id?0:1;
 #endif
 	    di_post_stru.di_buf0_mif.canvas0_addr0 = di_buf->di_buf_dup_p[1]->nr_canvas_idx;
-	    if ( post_blend_mode == 1 )
+	    if (post_blend_mode == 1 && di_buf->di_buf_dup_p[2])
 	        di_post_stru.di_buf1_mif.canvas0_addr0 = di_buf->di_buf_dup_p[2]->nr_canvas_idx;
 	    else
 	        di_post_stru.di_buf1_mif.canvas0_addr0 = di_buf->di_buf_dup_p[0]->nr_canvas_idx;
 	    di_post_stru.di_mtncrd_mif.canvas_num = di_buf->di_buf_dup_p[1]->mtn_canvas_idx;
-      di_post_stru.di_mtnprd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mtn_canvas_idx;
+        if(di_buf->di_buf_dup_p[2])
+        di_post_stru.di_mtnprd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mtn_canvas_idx;
 
 
     	post_blend_en = 1;
@@ -4909,7 +4910,7 @@ static int de_post_process_pd(void* arg, unsigned zoom_start_x_lines,
 #endif
 
       config_canvas_idx(di_buf->di_buf_dup_p[1], di_post_buf0_canvas_idx[di_post_stru.canvas_id], -1);
-	    if ( post_blend_mode == 1 )
+      if (post_blend_mode == 1)
           config_canvas_idx(di_buf->di_buf_dup_p[2], di_post_buf1_canvas_idx[di_post_stru.canvas_id], -1);
       else
         config_canvas_idx(di_buf->di_buf_dup_p[0], di_post_buf1_canvas_idx[di_post_stru.canvas_id], -1);
@@ -4920,12 +4921,13 @@ static int de_post_process_pd(void* arg, unsigned zoom_start_x_lines,
 #endif
 
 	    di_post_stru.di_buf0_mif.canvas0_addr0 = di_buf->di_buf_dup_p[1]->nr_canvas_idx;
-	    if ( post_blend_mode == 1 )
+	    if (post_blend_mode == 1 && di_buf->di_buf_dup_p[2]){
 	        di_post_stru.di_buf1_mif.canvas0_addr0 = di_buf->di_buf_dup_p[2]->nr_canvas_idx;
-	    else
+	    }else
 	        di_post_stru.di_buf1_mif.canvas0_addr0 = di_buf->di_buf_dup_p[0]->nr_canvas_idx;
 	    di_post_stru.di_mtncrd_mif.canvas_num = di_buf->di_buf_dup_p[1]->mtn_canvas_idx;
-      di_post_stru.di_mtnprd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mtn_canvas_idx;
+      if(di_buf->di_buf_dup_p[2])
+          di_post_stru.di_mtnprd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mtn_canvas_idx;
 
       if((di_post_stru.update_post_reg_flag)&&((force_update_post_reg&0x80)==0))
   	    enable_di_post_pd (
@@ -5922,7 +5924,7 @@ static void di_unreg_process(void)
                 di_pre_stru.disable_req_flag = 0;
                 recovery_flag = 0;
                 di_pre_stru.unreg_req_flag = 0;
-                di_pre_stru.unreg_req_flag2 = 0;
+                //di_pre_stru.unreg_req_flag2 = 0; clear in timer irq
             }
 #else
 /* !RUN_REG_IN_IRQ*/
diff --git a/drivers/amlogic/display/vout/edp_drv.c b/drivers/amlogic/display/vout/edp_drv.c
index 69642fc0313a..c7fb8d89e7ee 100755
--- a/drivers/amlogic/display/vout/edp_drv.c
+++ b/drivers/amlogic/display/vout/edp_drv.c
@@ -15,7 +15,7 @@
 #include <linux/delay.h>
 #include <mach/am_regs.h>
 #include <linux/amlogic/vout/lcd_reg.h>
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 #include <mach/edp_tx_reg.h>
 #include "edp_drv.h"
 
diff --git a/drivers/amlogic/display/vout/edp_drv.h b/drivers/amlogic/display/vout/edp_drv.h
index d4cf75833e98..b285542e91d9 100755
--- a/drivers/amlogic/display/vout/edp_drv.h
+++ b/drivers/amlogic/display/vout/edp_drv.h
@@ -174,7 +174,7 @@
 #define VAL_EDP_TX_OPERATION_FAILED				0x00FF
 #define VAL_EDP_TX_OPERATION_SUCCESS			0x0000
 //********************************************************//
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 typedef enum {
 	EDP_HPD_STATE_DISCONNECTED = 0,
 	EDP_HPD_STATE_CONNECTED,
diff --git a/drivers/amlogic/display/vout/lcdoutc.c b/drivers/amlogic/display/vout/lcdoutc.c
index 272366db5baf..3aee27988299 100755
--- a/drivers/amlogic/display/vout/lcdoutc.c
+++ b/drivers/amlogic/display/vout/lcdoutc.c
@@ -56,9 +56,11 @@
 #include <mach/mlvds_regs.h>
 #endif
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
-#include "edp_drv.h"
 #include "mipi_dsi_util.h"
 #endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#include "edp_drv.h"
+#endif
 #include <linux/amlogic/vout/aml_lcd_extern.h>
 #ifdef CONFIG_AMLOGIC_BOARD_HAS_PMU
 #include <linux/amlogic/aml_pmu_common.h>
@@ -71,10 +73,12 @@
 #define FIQ_VSYNC
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
 #define DRV_TYPE "c6"
-#else
+#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 #define DRV_TYPE "c8"
+#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
+#define DRV_TYPE "c8b"
 #endif
-#define DRIVER_DATE		"20140429"
+#define DRIVER_DATE		"20140512"
 
 #define LCD_DEBUG_INFO
 #ifdef LCD_DEBUG_INFO
@@ -114,7 +118,8 @@ static DSI_Config_t lcd_mipi_config = {
     .dsi_init_off = NULL,
     .lcd_extern_init = 0,
 };
-
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 static EDP_Config_t lcd_edp_config = {
 	.link_user = 0,
 	.link_rate = 1,
@@ -177,6 +182,8 @@ static Lcd_Config_t lcd_config = {
     .lcd_control = {
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
         .mipi_config = &lcd_mipi_config,
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         .edp_config = &lcd_edp_config,
 #endif
         .lvds_config = &lcd_lvds_config,
@@ -234,21 +241,20 @@ static void lcd_ports_ctrl_lvds(Bool_t status)
 {
 	if (status) {
 		WRITE_LCD_REG_BITS(LVDS_GEN_CNTL, 1, 3, 1);	//enable lvds fifo
-		if (pDev->pConf->lcd_basic.lcd_bits == 6)
-			{
+		if (pDev->pConf->lcd_basic.lcd_bits == 6) {
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
 			WRITE_LCD_REG_BITS(LVDS_PHY_CNTL4, 0x27, 0, 7);	//enable LVDS 3 channels
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 			WRITE_LCD_CBUS_REG_BITS(HHI_DIF_CSI_PHY_CNTL3, 0x1e, 11, 5);	//enable LVDS phy 3 channels
 #endif
-			}
-		else{
+		}
+		else {
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
 			WRITE_LCD_REG_BITS(LVDS_PHY_CNTL4, 0x2f, 0, 7);	//enable LVDS 4 channels
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 			WRITE_LCD_CBUS_REG_BITS(HHI_DIF_CSI_PHY_CNTL3, 0x1f, 11, 5);	//enable LVDS phy 4 channels
 #endif
-			}
+		}
 	}
 	else {
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
@@ -256,7 +262,7 @@ static void lcd_ports_ctrl_lvds(Bool_t status)
 		WRITE_LCD_REG_BITS(LVDS_PHY_CNTL5, 0, 11, 1);	//shutdown lvds phy
 		WRITE_LCD_REG_BITS(LVDS_PHY_CNTL4, 0, 0, 7);	//disable LVDS 4 channels
 		WRITE_LCD_REG_BITS(LVDS_GEN_CNTL, 0, 3, 1);	//disable lvds fifo
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 		WRITE_LCD_CBUS_REG(HHI_DIF_CSI_PHY_CNTL1, 0x0);
 		WRITE_LCD_CBUS_REG(HHI_DIF_CSI_PHY_CNTL2, 0x00060000);
 		WRITE_LCD_CBUS_REG(HHI_DIF_CSI_PHY_CNTL3, 0x00200000);
@@ -295,7 +301,9 @@ static void lcd_ports_ctrl_mipi(Bool_t status)
 
     DBG_PRINT("%s: %s\n", __FUNCTION__, (status ? "ON" : "OFF"));
 }
+#endif
 
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 static void lcd_ports_ctrl_edp(Bool_t status)
 {
 	if (status) {
@@ -321,69 +329,6 @@ static void lcd_ports_ctrl_edp(Bool_t status)
 	DBG_PRINT("%s: %s\n", __FUNCTION__, (status ? "ON" : "OFF"));
 }
 #endif
-static unsigned pinmux_data_set[][2]={
-    {PERIPHS_PIN_MUX_0,0x03c00000},//RGB[7:2]
-};
-static unsigned pinmux_data_clr[][2]={
-    {PERIPHS_PIN_MUX_6,0x0000077f},//RGB[7:2]
-    {PERIPHS_PIN_MUX_4,0x0000000e},//RGB[1:0]
-    {PERIPHS_PIN_MUX_5,0x07000000},//RGB[1:0]
-    {PERIPHS_PIN_MUX_6,0x0000f800},//RGB[1:0]
-    {PERIPHS_PIN_MUX_7,0x00300000},//RGB[1:0]
-    {PERIPHS_PIN_MUX_9,0x00001c00},//RGB[1:0]
-};
-static unsigned pinmux_data_set_table[][3]={
-    {0,0xf},  //6bit index
-    {0,1,0xf},//8bit index
-};
-static unsigned pinmux_data_clr_table[][7]={
-    {0,0xf},          //6bit index
-    {0,1,2,3,4,5,0xf},//8bit index
-};
-
-static unsigned pinmux_tcon_set[][2]={
-    {PERIPHS_PIN_MUX_1,0x00000004},//clk
-    {PERIPHS_PIN_MUX_1,0x00000002},//DE
-    {PERIPHS_PIN_MUX_1,0x00000011},//sync
-};
-static unsigned pinmux_tcon_clr[][2]={
-    {PERIPHS_PIN_MUX_1,0x02000008},//clk
-    {PERIPHS_PIN_MUX_8,0x00001000},//clk
-    {PERIPHS_PIN_MUX_1,0x01000000},//DE
-    {PERIPHS_PIN_MUX_1,0x04800000},//sync
-    {PERIPHS_PIN_MUX_5,0x08000000},//sync
-    {PERIPHS_PIN_MUX_8,0x00000800},//sync
-    {PERIPHS_PIN_MUX_9,0x00020000},//sync
-};
-static unsigned pinmux_tcon_set_table[][4]={
-    {0,1,0xf},  //DE index
-    {0,2,0xf},  //Sync index
-    {0,1,2,0xf},//DE+Sync index
-};
-static unsigned pinmux_tcon_clr_table[][8]={
-    {0,1,2,0xf},        //DE index
-    {0,1,3,4,5,6,0xf},  //Sync index
-    {0,1,2,3,4,5,6,0xf},//DE+Sync index
-};
-
-static unsigned gpio_data_set[][2]={
-    {PREG_PAD_GPIO4_EN_N, 0x3ffff000},//RGB[7:2]
-    {PREG_PAD_GPIO3_EN_N, 0x1f800000},//RGB[1:0]
-};
-static unsigned gpio_tcon_set[][2]={
-    {PREG_PAD_GPIO3_EN_N, 0x00100000},//clk
-    {PREG_PAD_GPIO3_EN_N, 0x00200000},//DE
-    {PREG_PAD_GPIO3_EN_N, 0x00480000},//Sync
-};
-static unsigned gpio_data_set_table[][3]={
-    {0,0xf},  //6bit index
-    {0,1,0xf},//8bit index
-};
-static unsigned gpio_tcon_set_table[][4]={
-    {0,1,0xf},  //DE index
-    {0,2,0xf},  //Sync index
-    {0,1,2,0xf},//DE+Sync index
-};
 
 static void lcd_ports_ctrl_ttl(Bool_t status)
 {
@@ -451,134 +396,6 @@ static void lcd_ports_ctrl_ttl(Bool_t status)
 			return;
 		}
 	}
-#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
-	unsigned *pin_tcon_set, *pin_data_set;
-	unsigned *pin_tcon_clr, *pin_data_clr;
-	unsigned *gpio_tcon, *gpio_data;
-	unsigned pin_reg;
-	int i;
-	
-	//tcon pin
-	if ((pDev->pConf->lcd_timing.de_valid == 1) && (pDev->pConf->lcd_timing.hvsync_valid == 0)) {
-		pin_tcon_set = &pinmux_tcon_set_table[0][0];
-		pin_tcon_clr = &pinmux_tcon_clr_table[0][0];
-		gpio_tcon = &gpio_tcon_set_table[0][0];
-	}
-	else if ((pDev->pConf->lcd_timing.de_valid == 0) && (pDev->pConf->lcd_timing.hvsync_valid == 1)) {
-		pin_tcon_set = &pinmux_tcon_set_table[1][0];
-		pin_tcon_clr = &pinmux_tcon_clr_table[1][0];
-		gpio_tcon = &gpio_tcon_set_table[1][0];
-	}
-	else {
-		pin_tcon_set = &pinmux_tcon_set_table[2][0];
-		pin_tcon_clr = &pinmux_tcon_clr_table[2][0];
-		gpio_tcon = &gpio_tcon_set_table[2][0];
-	}
-	//RGB data pin
-	
-	if (pDev->pConf->lcd_basic.lcd_bits == 8) {
-		pin_data_set = &pinmux_data_set_table[0][0];
-		pin_data_clr = &pinmux_data_clr_table[0][0];
-		gpio_data = &gpio_data_set_table[0][0];
-	}
-	else 
-	{
-		pin_data_set = &pinmux_data_set_table[1][0];
-		pin_data_clr = &pinmux_data_clr_table[1][0];
-		gpio_data = &gpio_data_set_table[1][0];
-	}
-	if (status) {
-		i = 0;
-		while (i < 0xf) {//pinmux_tcon_set
-			if (pin_tcon_set[i] == 0xf) {
-				break;
-			}
-			else {
-				pin_reg = pinmux_tcon_set[pin_tcon_set[i]][0];
-				WRITE_LCD_CBUS_REG(pin_reg, (READ_LCD_CBUS_REG(pin_reg) | pinmux_tcon_set[pin_tcon_set[i]][1]));
-				i++;
-			}
-		}
-		i = 0;
-		while (i < 0xf) {//pinmux_tcon_clr
-			if (pin_tcon_clr[i] == 0xf) {
-				break;
-			}
-			else {
-				pin_reg = pinmux_tcon_clr[pin_tcon_clr[i]][0];
-				WRITE_LCD_CBUS_REG(pin_reg, (READ_LCD_CBUS_REG(pin_reg) & ~(pinmux_tcon_clr[pin_tcon_clr[i]][1])));
-				i++;
-			}
-		}
-		i = 0;
-		while (i < 0xf) {//pinmux_data_set
-			if (pin_data_set[i] == 0xf) {
-				break;
-			}
-			else {
-				pin_reg = pinmux_data_set[pin_data_set[i]][0];
-				WRITE_LCD_CBUS_REG(pin_reg, (READ_LCD_CBUS_REG(pin_reg) | pinmux_data_set[pin_data_set[i]][1]));
-				i++;
-			}
-		}
-		i = 0;
-		while (i < 0xf) {//pinmux_data_clr
-			if (pin_data_clr[i] == 0xf) {
-				break;
-			}
-			else {
-				pin_reg = pinmux_data_clr[pin_data_clr[i]][0];
-				WRITE_LCD_CBUS_REG(pin_reg, (READ_LCD_CBUS_REG(pin_reg) & ~(pinmux_data_clr[pin_data_clr[i]][1])));
-				i++;
-			}
-		}
- 	}else {
-		i = 0;
-		while (i < 0xf) {//pinmux_data_set
-			if (pin_data_set[i] == 0xf) {
-				break;
-			}
-			else {
-				pin_reg = pinmux_data_set[pin_data_set[i]][0];
-				WRITE_LCD_CBUS_REG(pin_reg, (READ_LCD_CBUS_REG(pin_reg) & ~(pinmux_data_set[pin_data_set[i]][1])));
-				i++;
-			}
-		}
-		i = 0;
-		while (i < 0xf) {//pinmux_tcon_set
-			if (pin_tcon_set[i] == 0xf) {
-				break;
-			}
-			else {
-				pin_reg = pinmux_tcon_set[pin_tcon_set[i]][0];
-				WRITE_LCD_CBUS_REG(pin_reg, (READ_LCD_CBUS_REG(pin_reg) & ~(pinmux_tcon_set[pin_tcon_set[i]][1])));
-				i++;
-			}
-		}
-		i = 0;
-		while (i < 0xf) {//gpio_data_set
-			if (gpio_data[i] == 0xf) {
-				break;
-			}
-			else {
-				pin_reg = gpio_data_set[gpio_data[i]][0];
-				WRITE_LCD_CBUS_REG(pin_reg, (READ_LCD_CBUS_REG(pin_reg) | (gpio_data_set[gpio_data[i]][1])));
-				i++;
-			}
-		}
-		i = 0;
-		while (i < 0xf) {//gpio_tcon_set
-			if (gpio_tcon[i] == 0xf) {
-				break;
-			}
-			else {
-				pin_reg = gpio_tcon_set[gpio_tcon[i]][0];
-				WRITE_LCD_CBUS_REG(pin_reg, (READ_LCD_CBUS_REG(pin_reg) | (gpio_tcon_set[gpio_tcon[i]][1])));
-				i++;
-			}
-		}
- 	}
-#endif
 	DBG_PRINT("%s: %s\n", __FUNCTION__, (status ? "ON" : "OFF"));
 }
 
@@ -596,6 +413,8 @@ static void lcd_ports_ctrl(Bool_t status)
         case LCD_DIGITAL_MIPI:
             lcd_ports_ctrl_mipi(status);
             break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         case LCD_DIGITAL_EDP:
             lcd_ports_ctrl_edp(status);
             break;
@@ -635,7 +454,8 @@ static void backlight_power_ctrl(Bool_t status)
 
 static void set_control_mipi(Lcd_Config_t *pConf);
 static int set_control_edp(Lcd_Config_t *pConf);
-static int lcd_power_ctrl_video(Bool_t status) //for special interface
+//for special interface
+static int lcd_power_ctrl_video(Bool_t status)
 {
     int ret = 0;
 
@@ -645,6 +465,8 @@ static int lcd_power_ctrl_video(Bool_t status) //for special interface
             case LCD_DIGITAL_MIPI:
                 set_control_mipi(pDev->pConf);
                 break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
             case LCD_DIGITAL_EDP:
                 ret = set_control_edp(pDev->pConf);
                 break;
@@ -659,6 +481,8 @@ static int lcd_power_ctrl_video(Bool_t status) //for special interface
             case LCD_DIGITAL_MIPI:
                 mipi_dsi_link_off(pDev->pConf);  //link off command
                 break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
             case LCD_DIGITAL_EDP:
                 ret = dplpm_link_off();  //link off command
                 break;
@@ -859,7 +683,7 @@ static void write_tcon_double(MLVDS_Tcon_Config_t *mlvds_tcon)
             WRITE_LCD_REG(MTCON0_2ND_HE_ADDR, hend_2);
             WRITE_LCD_REG(MTCON0_2ND_VS_ADDR, vstart_2);
             WRITE_LCD_REG(MTCON0_2ND_VE_ADDR, vend_2);
-			WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_STH1_SEL, 1);
+            WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_STH1_SEL, 1);
             break;
         case 1 :
             WRITE_LCD_REG(MTCON1_1ST_HS_ADDR, hstart_1);
@@ -870,7 +694,7 @@ static void write_tcon_double(MLVDS_Tcon_Config_t *mlvds_tcon)
             WRITE_LCD_REG(MTCON1_2ND_HE_ADDR, hend_2);
             WRITE_LCD_REG(MTCON1_2ND_VS_ADDR, vstart_2);
             WRITE_LCD_REG(MTCON1_2ND_VE_ADDR, vend_2);
-			WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_CPV1_SEL, 1);
+            WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_CPV1_SEL, 1);
             break;
         case 2 :
             WRITE_LCD_REG(MTCON2_1ST_HS_ADDR, hstart_1);
@@ -881,7 +705,7 @@ static void write_tcon_double(MLVDS_Tcon_Config_t *mlvds_tcon)
             WRITE_LCD_REG(MTCON2_2ND_HE_ADDR, hend_2);
             WRITE_LCD_REG(MTCON2_2ND_VS_ADDR, vstart_2);
             WRITE_LCD_REG(MTCON2_2ND_VE_ADDR, vend_2);
-			WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_STV1_SEL, 1);
+            WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_STV1_SEL, 1);
             break;
         case 3 :
             WRITE_LCD_REG(MTCON3_1ST_HS_ADDR, hstart_1);
@@ -892,35 +716,35 @@ static void write_tcon_double(MLVDS_Tcon_Config_t *mlvds_tcon)
             WRITE_LCD_REG(MTCON3_2ND_HE_ADDR, hend_2);
             WRITE_LCD_REG(MTCON3_2ND_VS_ADDR, vstart_2);
             WRITE_LCD_REG(MTCON3_2ND_VE_ADDR, vend_2);
-			WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_OEV1_SEL, 1);
+            WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_OEV1_SEL, 1);
             break;
         case 4 :
             WRITE_LCD_REG(MTCON4_1ST_HS_ADDR, hstart_1);
             WRITE_LCD_REG(MTCON4_1ST_HE_ADDR, hend_1);
             WRITE_LCD_REG(MTCON4_1ST_VS_ADDR, vstart_1);
             WRITE_LCD_REG(MTCON4_1ST_VE_ADDR, vend_1);
-			WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_STH2_SEL, 1);
+            WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_STH2_SEL, 1);
             break;
         case 5 :
             WRITE_LCD_REG(MTCON5_1ST_HS_ADDR, hstart_1);
             WRITE_LCD_REG(MTCON5_1ST_HE_ADDR, hend_1);
             WRITE_LCD_REG(MTCON5_1ST_VS_ADDR, vstart_1);
             WRITE_LCD_REG(MTCON5_1ST_VE_ADDR, vend_1);
-			WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_CPV2_SEL, 1);
+            WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_CPV2_SEL, 1);
             break;
         case 6 :
             WRITE_LCD_REG(MTCON6_1ST_HS_ADDR, hstart_1);
             WRITE_LCD_REG(MTCON6_1ST_HE_ADDR, hend_1);
             WRITE_LCD_REG(MTCON6_1ST_VS_ADDR, vstart_1);
             WRITE_LCD_REG(MTCON6_1ST_VE_ADDR, vend_1);
-			WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_OEH_SEL, 1);
+            WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_OEH_SEL, 1);
             break;
         case 7 :
             WRITE_LCD_REG(MTCON7_1ST_HS_ADDR, hstart_1);
             WRITE_LCD_REG(MTCON7_1ST_HE_ADDR, hend_1);
             WRITE_LCD_REG(MTCON7_1ST_VS_ADDR, vstart_1);
             WRITE_LCD_REG(MTCON7_1ST_VE_ADDR, vend_1);
-			WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_OEV3_SEL, 1);
+            WRITE_LCD_REG_BITS(L_TCON_MISC_SEL_ADDR, hv_sel, LCD_OEV3_SEL, 1);
             break;
         default:
             break;
@@ -1058,7 +882,7 @@ static void set_tcon_ttl(Lcd_Config_t *pConf)
 	else
 		CLR_LCD_REG_MASK(VPP_MISC, (VPP_OUT_SATURATE));
 }
-#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)||(MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 static void set_tcon_ttl(Lcd_Config_t *pConf)
 {
 	Lcd_Timing_t *tcon_adr = &(pConf->lcd_timing);
@@ -1363,20 +1187,21 @@ static void vclk_set_lcd(int lcd_type, int vclk_sel, unsigned long pll_reg, unsi
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
 	pll_level = 0;
 	pll_frac = 0;
-#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)|| (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 	pll_level = (clk_ctrl_reg >> CLK_CTRL_LEVEL) & 0x7;
 	pll_frac = (clk_ctrl_reg >> CLK_CTRL_FRAC) & 0xfff;
 	ss_level = (clk_ctrl_reg >> CLK_CTRL_SS) & 0xf;
 	pll_reg |= (1 << PLL_CTRL_EN);
 #endif
+	
 	if(vclk_sel)
 		WRITE_LCD_CBUS_REG_BITS(HHI_VIID_CLK_CNTL, 0, 19, 1);	//disable vclk2_en 
 	else
 		WRITE_LCD_CBUS_REG_BITS(HHI_VID_CLK_CNTL, 0, 19, 2);	//disable vclk1_en1,en0
 	udelay(2);
 
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
-	WRITE_LCD_CBUS_REG(HHI_EDP_TX_PHY_CNTL0, (1 << 16));	//reset edp tx phy	
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+	WRITE_LCD_CBUS_REG(HHI_EDP_TX_PHY_CNTL0, (1 << 16));	//reset edp tx phy
 #endif
 
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
@@ -1449,6 +1274,7 @@ static void vclk_set_lcd(int lcd_type, int vclk_sel, unsigned long pll_reg, unsi
 	WRITE_LCD_CBUS_REG(HHI_VID2_PLL_CNTL5, (0x00700001 | (od_fb << 8)));	//[8] od_fb
 	WRITE_LCD_CBUS_REG(HHI_VID2_PLL_CNTL, pll_reg | (1 << PLL_CTRL_RST));
 	WRITE_LCD_CBUS_REG(HHI_VID2_PLL_CNTL, pll_reg);
+	
 	do{
 		udelay(50);
 		pll_lock = (READ_LCD_CBUS_REG(HHI_VID2_PLL_CNTL) >> PLL_CTRL_LOCK) & 0x1;
@@ -1466,13 +1292,69 @@ static void vclk_set_lcd(int lcd_type, int vclk_sel, unsigned long pll_reg, unsi
 	if (wait_loop == 0)
 		printk("[error]: vid2_pll lock failed\n");
 #elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
-		do{
+	if (pll_frac == 0)
+		pll_ctrl2 = 0x59c88000;
+	else
+		pll_ctrl2 = (0x59c8c000 | pll_frac);
+	
+	pll_ctrl4 = (0x00238100 & ~((1<<9) | (0xf<<4) | (0xf<<0)));
+	switch (ss_level) {
+		case 1:	//0.5%
+			pll_ctrl4 |= ((1<<9) | (2<<4) | (1<<0));
+			break;
+		case 2:	//1%
+			pll_ctrl4 |= ((1<<9) | (1<<4) | (1<<0));
+			break;
+		case 3:	//1.5%
+			pll_ctrl4 |= ((1<<9) | (8<<4) | (1<<0));
+			break;
+		case 4: //2%
+			pll_ctrl4 |= ((1<<9) | (0<<4) | (1<<0));
+			break;
+		case 0:
+		default:
+			ss_level = 0;
+			break;
+	}
+	
+	switch (pll_level) {
+		case 1: //<=1.7G
+			pll_ctrl3 = (ss_level > 0) ? 0xca7e3823 : 0xca49b022;
+			od_fb = 0;
+			break;
+		case 2: //1.7G~2.0G
+			pll_ctrl2 |= (1<<13);//special adjust
+			pll_ctrl3 = (ss_level > 0) ? 0xca7e3823 : 0xca493822;
+			od_fb = 1;
+			break;
+		case 3: //2.0G~2.5G
+			pll_ctrl3 = (ss_level > 0) ? 0xca7e3823 : 0xca493822;
+			od_fb = 1;
+			break;
+		case 4: //>=2.5G
+			pll_ctrl3 = (ss_level > 0) ? 0xca7e3823 : 0xce49c022;
+			od_fb = 1;
+			break;
+		default:
+			pll_ctrl3 = 0xca7e3823;
+			od_fb = 0;
+			break;
+	}
+	WRITE_LCD_CBUS_REG_BITS(HHI_VID2_PLL_CNTL2, 1, 16, 1);//enable ext LDO
+	WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL2, pll_ctrl2);
+	WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL3, pll_ctrl3);
+	WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL4, (pll_ctrl4 | (od_fb << 24))); //[24] od_fb
+	WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL5, 0x00012385);
+	WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL, pll_reg | (1 << PLL_CTRL_RST));
+	WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL, pll_reg);
+	
+	do{
 		udelay(50);
-		pll_lock = (READ_LCD_CBUS_REG(HHI_VID_PLL_CNTL) >> 31) & 0x1;
+		pll_lock = (READ_LCD_CBUS_REG(HHI_VID_PLL_CNTL) >> PLL_CTRL_LOCK) & 0x1;
 		if (wait_loop == 100) {
 			if (pll_level == 2) {
 				//change setting if can't lock
-				WRITE_LCD_CBUS_REG_BITS(HHI_VID_PLL_CNTL2, 1, 18, 1);
+				WRITE_LCD_CBUS_REG_BITS(HHI_VID_PLL_CNTL2, 1, 12, 1);
 				WRITE_LCD_CBUS_REG_BITS(HHI_VID_PLL_CNTL, 1, PLL_CTRL_RST, 1);
 				WRITE_LCD_CBUS_REG_BITS(HHI_VID_PLL_CNTL, 0, PLL_CTRL_RST, 1);
 				printk("change setting for vid pll stability\n");
@@ -1481,17 +1363,10 @@ static void vclk_set_lcd(int lcd_type, int vclk_sel, unsigned long pll_reg, unsi
 		wait_loop--;
 	}while((pll_lock == 0) && (wait_loop > 0));
 	if (wait_loop == 0)
-		printk("[error]: vid_pll lock failed\n");	
-	WRITE_LCD_CBUS_REG_BITS(HHI_VID_PLL_CNTL5, 1, 16, 1);//enable bandgap
-	WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL2, 0x69c88000);
-    WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL3, 0xca563823);
-    WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL4, (0x23b100|(od_fb<<24)));
-    WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL5, 0x00012385);
-    WRITE_LCD_CBUS_REG(HHI_VID2_PLL_CNTL2, 0x430a800);       // internal LDO share with HPLL & VIID PLL
-	WRITE_LCD_CBUS_REG(HHI_VID_PLL_CNTL, pll_reg);		
+		printk("[error]: vid_pll lock failed\n");
 #endif
 
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 	//select logic & encl clock
 	switch (lcd_type) {
 		case LCD_DIGITAL_MIPI:
@@ -1512,11 +1387,7 @@ static void vclk_set_lcd(int lcd_type, int vclk_sel, unsigned long pll_reg, unsi
 		case LCD_DIGITAL_LVDS:
 		case LCD_DIGITAL_TTL:
 		default:
-		#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 			WRITE_LCD_CBUS_REG_BITS(HHI_VID2_PLL_CNTL5, 2, 23, 3);	//pll_out mux to vid2_pll
-		#elif(MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
-			WRITE_LCD_CBUS_REG_BITS(HHI_VID_PLL_CNTL5, 2, 23, 3);	//pll_out mux to vid2_pll
-		#endif
 			WRITE_LCD_CBUS_REG_BITS(HHI_DSI_LVDS_EDP_CNTL1, 0, 4, 1);
 			break;
 	}
@@ -1563,7 +1434,7 @@ static void vclk_set_lcd(int lcd_type, int vclk_sel, unsigned long pll_reg, unsi
 		else
 			WRITE_LCD_CBUS_REG_BITS(HHI_VIID_CLK_DIV, 0, 12, 4); // [23:20] encl_clk_sel, select v1_clk_div1
 	}
-#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)||(MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8))
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 	if (vclk_sel) {
 		WRITE_LCD_CBUS_REG_BITS(HHI_VIID_CLK_DIV, 8, 12, 4); // [15:12] encl_clk_sel, select vclk2_div1
 		WRITE_LCD_CBUS_REG_BITS(HHI_VIID_CLK_DIV, 1, 16, 2); // release vclk2_div_reset and enable vclk2_div
@@ -1589,6 +1460,10 @@ static void vclk_set_lcd(int lcd_type, int vclk_sel, unsigned long pll_reg, unsi
 	}
 	udelay(5);
 	
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
+	WRITE_LCD_CBUS_REG_BITS(HHI_VID_CLK_CNTL2, 1, 3, 1);	//enable encl clk gate //new add for M8b
+#endif
+	
 	spin_unlock_irqrestore(&lcd_clk_lock, flags);
 }
 
@@ -1607,7 +1482,7 @@ static void clk_util_lvds_set_clk_div(unsigned long divn_sel, unsigned long divn
 	WRITE_LCD_REG_BITS(LVDS_PHY_CLK_CNTL, divn_sel, 7, 2);
 	WRITE_LCD_REG_BITS(LVDS_PHY_CLK_CNTL, div2_en, 9, 1);
 	WRITE_LCD_REG_BITS(LVDS_PHY_CLK_CNTL, ((divn_tcnt-1)&0x7), 4, 3);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 	// ---------------------------------------------
     // Configure the LVDS PHY
     // ---------------------------------------------
@@ -1650,6 +1525,8 @@ static void set_pll_lcd(Lcd_Config_t *pConf)
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
         case LCD_DIGITAL_MIPI:
             break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         case LCD_DIGITAL_EDP:
             xd = 1;
             break;
@@ -1680,8 +1557,6 @@ static void set_pll_lcd(Lcd_Config_t *pConf)
             WRITE_LCD_REG(MIPI_DSI_TOP_SW_RESET, (READ_LCD_REG(MIPI_DSI_TOP_SW_RESET) & 0xfffffff0) );     // Release mipi_dsi_host's reset
             WRITE_LCD_REG(MIPI_DSI_TOP_CLK_CNTL, (READ_LCD_REG(MIPI_DSI_TOP_CLK_CNTL) | 0x3) );            // Enable dwc mipi_dsi_host's clock 
             break;
-        case LCD_DIGITAL_EDP:
-            break;
 #endif
         case LCD_DIGITAL_LVDS:
             clk_util_lvds_set_clk_div(1, pll_div_post, phy_clk_div2);
@@ -2080,7 +1955,9 @@ static void set_control_mipi(Lcd_Config_t *pConf)
 {
     set_mipi_dsi_control(pConf);
 }
+#endif
 
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 //**************************************************//
 // for edp link maintain control
 //**************************************************//
@@ -2431,7 +2308,7 @@ static void init_phy_lvds(Lcd_Config_t *pConf)
     WRITE_LCD_REG(LVDS_PHY_CNTL6,0xcccc);
     WRITE_LCD_REG(LVDS_PHY_CNTL7,0xcccc);
     WRITE_LCD_REG(LVDS_PHY_CNTL8,0xcccc);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 	WRITE_LCD_REG(LVDS_SER_EN, 0xfff);	//Enable the serializers
 
     WRITE_LCD_REG(LVDS_PHY_CNTL0, 0xffff);
@@ -2474,7 +2351,9 @@ static void init_phy_mipi(Lcd_Config_t *pConf)
     WRITE_LCD_CBUS_REG(HHI_DIF_CSI_PHY_CNTL2, (0x3e << 16) | (0xa5b8 << 0));//DIF_REF_CTL2:31-16bit, DIF_REF_CTL1:15-0bit
     WRITE_LCD_CBUS_REG(HHI_DIF_CSI_PHY_CNTL3, (0x26e0 << 16) | (0x459 << 0));//DIF_TX_CTL1:31-16bit, DIF_TX_CTL0:15-0bit
 }
+#endif
 
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 static void init_phy_edp(Lcd_Config_t *pConf)
 {
     unsigned swing_ctrl;
@@ -2514,6 +2393,8 @@ static void init_dphy(Lcd_Config_t *pConf)
 			WRITE_LCD_CBUS_REG(HHI_DSI_LVDS_EDP_CNTL0, lcd_type);	//dphy select by interface
 			init_phy_mipi(pConf);
 			break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 		case LCD_DIGITAL_EDP:
 			WRITE_LCD_CBUS_REG(HHI_DSI_LVDS_EDP_CNTL0, lcd_type);	//dphy select by interface
 			init_phy_edp(pConf);
@@ -2592,6 +2473,8 @@ static void generate_clk_parameter(Lcd_Config_t *pConf)
             dsi_bit_rate_max = pConf->lcd_control.mipi_config->bit_rate_max;
             iflogic_vid_clk_in_max = MIPI_MAX_VID_CLK_IN;
             break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         case LCD_DIGITAL_EDP:
             div_pre_sel_max = 1;
             div_post = 1;
@@ -2690,6 +2573,8 @@ static void generate_clk_parameter(Lcd_Config_t *pConf)
                 }
             }
             break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         case LCD_DIGITAL_EDP:
             switch (pConf->lcd_control.edp_config->link_rate) {
                 case 0:
@@ -2797,7 +2682,7 @@ static void generate_clk_parameter(Lcd_Config_t *pConf)
                     }
                 }
             }
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
             if (fout < LCD_VENC_MAX_CLK_IN) {
                 for (xd = 1; xd <= crt_xd_max; xd++) {
                     div_post_out = fout * xd;
@@ -2840,7 +2725,7 @@ static void generate_clk_parameter(Lcd_Config_t *pConf)
                                             pll_od = od_sel - 1;
                                             vid_div_pre = pre_div_sel;
                                             crt_xd = xd;
-											DBG_PRINT("pll_m=0x%x, pll_n=0x%x, pll_od=0x%x, vid_div_pre=0x%x, crt_xd=0x%x, pll_frac=0x%x, pll_level=%d\n",
+                                            DBG_PRINT("pll_m=0x%x, pll_n=0x%x, pll_od=0x%x, vid_div_pre=0x%x, crt_xd=0x%x, pll_frac=0x%x, pll_level=%d\n",
                                                        pll_m, pll_n, pll_od, vid_div_pre, crt_xd, pll_frac, pll_level);
                                             clk_num = 1;
                                         }
@@ -2863,11 +2748,7 @@ static void generate_clk_parameter(Lcd_Config_t *pConf)
             break;
     }
     if (clk_num > 0) {
-    	#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)||(MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8))
-       		pConf->lcd_timing.pll_ctrl = (pll_od << PLL_CTRL_OD) | (pll_n << PLL_CTRL_N) | (pll_m << PLL_CTRL_M);
-       	#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
-       		pConf->lcd_timing.pll_ctrl = (pll_od << 16) | (pll_n << 10) | (pll_m << 0);
-       	#endif
+        pConf->lcd_timing.pll_ctrl = (pll_od << PLL_CTRL_OD) | (pll_n << PLL_CTRL_N) | (pll_m << PLL_CTRL_M);
         pConf->lcd_timing.div_ctrl = 0x18803 | (edp_phy_div1 << DIV_CTRL_EDP_DIV1) | (edp_phy_div0 << DIV_CTRL_EDP_DIV0) | (vid_div_pre << DIV_CTRL_DIV_PRE);
         tmp = (pConf->lcd_timing.clk_ctrl & ~((0xf << CLK_CTRL_XD) | (0x7 << CLK_CTRL_LEVEL) | (0xfff << CLK_CTRL_FRAC)));
         pConf->lcd_timing.clk_ctrl = (tmp | ((crt_xd << CLK_CTRL_XD) | (pll_level << CLK_CTRL_LEVEL) | (pll_frac << CLK_CTRL_FRAC)));
@@ -2876,16 +2757,11 @@ static void generate_clk_parameter(Lcd_Config_t *pConf)
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
         pConf->lcd_timing.pll_ctrl = (1 << PLL_CTRL_OD) | (1 << PLL_CTRL_N) | (32 << PLL_CTRL_M);
         pConf->lcd_timing.div_ctrl = 0x18803;
-        pConf->lcd_timing.clk_ctrl = (pConf->lcd_timing.clk_ctrl & ~(0xf << CLK_CTRL_XD)) | (7 << CLK_CTRL_XD);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
         pConf->lcd_timing.pll_ctrl = (1 << PLL_CTRL_OD) | (1 << PLL_CTRL_N) | (50 << PLL_CTRL_M);
         pConf->lcd_timing.div_ctrl = 0x18803 | (0 << DIV_CTRL_EDP_DIV1) | (0 << DIV_CTRL_EDP_DIV0) | (1 << DIV_CTRL_DIV_PRE);
+#endif
         pConf->lcd_timing.clk_ctrl = (pConf->lcd_timing.clk_ctrl & ~(0xf << CLK_CTRL_XD)) | (7 << CLK_CTRL_XD);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
-		pConf->lcd_timing.pll_ctrl =0x30438;
-		pConf->lcd_timing.div_ctrl =0x18833;
-        pConf->lcd_timing.clk_ctrl =0x8eee1101; 
-#endif        
         printk("Out of clock range, reset to default setting!\n");
     }
 }
@@ -2903,7 +2779,7 @@ static void lcd_sync_duration(Lcd_Config_t *pConf)
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
 	frac = 0;
 	od_fb = 0;
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 	frac = ((pConf->lcd_timing.clk_ctrl) >> CLK_CTRL_FRAC) & 0xfff;
 	od_fb = ((((pConf->lcd_timing.clk_ctrl) >> CLK_CTRL_LEVEL) & 0x7) > 1) ? 1 : 0;
 
@@ -2922,6 +2798,8 @@ static void lcd_sync_duration(Lcd_Config_t *pConf)
 			xd = ((pConf->lcd_timing.clk_ctrl) >> CLK_CTRL_XD) & 0xf;
 			post_div = 1;
 			break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 		case LCD_DIGITAL_EDP:
 			edp_div0 = ((pConf->lcd_timing.div_ctrl) >> DIV_CTRL_EDP_DIV0) & 0xf;
 			edp_div1 = ((pConf->lcd_timing.div_ctrl) >> DIV_CTRL_EDP_DIV1) & 0x7;
@@ -2974,6 +2852,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
 		case LCD_DIGITAL_MIPI:
 			h_delay = MIPI_DELAY;
 			break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 		case LCD_DIGITAL_EDP:
 			h_delay = EDP_DELAY;
 			break;
@@ -3071,7 +2951,7 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
 	DBG_PRINT("oeh_hs_addr=%d, oeh_he_addr=%d, oeh_vs_addr=%d, oeh_ve_addr=%d\n", pConf->lcd_timing.oeh_hs_addr, pConf->lcd_timing.oeh_he_addr, pConf->lcd_timing.oeh_vs_addr, pConf->lcd_timing.oeh_ve_addr);
 }
 
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 static void select_edp_link_config(Lcd_Config_t *pConf)
 {
     unsigned bit_rate;
@@ -3131,7 +3011,7 @@ static void select_edp_link_config(Lcd_Config_t *pConf)
 }
 #endif
 
-static void lcd_control_config_pre(Lcd_Config_t *pConf) //before generate_clk_parameter
+static void lcd_control_config_pre(Lcd_Config_t *pConf)
 {
     unsigned vclk_sel, ss_level;
 
@@ -3144,6 +3024,8 @@ static void lcd_control_config_pre(Lcd_Config_t *pConf) //before generate_clk_pa
             ss_level = ((ss_level > 0) ? 1 : 0);
             set_mipi_dsi_control_config(pConf);
             break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         case LCD_DIGITAL_EDP:
             ss_level = ((ss_level > 0) ? 1 : 0);
             select_edp_link_config(pConf);
@@ -3163,11 +3045,15 @@ static void lcd_control_config_pre(Lcd_Config_t *pConf) //before generate_clk_pa
                     pConf->lcd_control.lvds_config->lvds_repack = 1;
             }
             break;
-#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
-        case LCD_DIGITAL_MINILVDS:
+        case LCD_DIGITAL_TTL:
             ss_level = ((ss_level >= SS_LEVEL_MAX) ? (SS_LEVEL_MAX-1) : ss_level);
-            break;
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
+            if (pConf->lcd_basic.lcd_bits != 6) {
+                pConf->lcd_basic.lcd_bits = 6;
+                printk("lcd change to 6bit for ttl support!\n");
+            }
 #endif
+            break;
         default:
             ss_level = ((ss_level >= SS_LEVEL_MAX) ? (SS_LEVEL_MAX-1) : ss_level);
             break;
@@ -3176,15 +3062,14 @@ static void lcd_control_config_pre(Lcd_Config_t *pConf) //before generate_clk_pa
     pConf->lcd_timing.clk_ctrl |= ((vclk_sel << CLK_CTRL_VCLK_SEL) | (ss_level << CLK_CTRL_SS));
 }
 
-static void lcd_control_config_post(Lcd_Config_t *pConf) //after generate_clk_parameter
+//for special interface config after clk setting
+static void lcd_control_config_post(Lcd_Config_t *pConf)
 {
     switch (pConf->lcd_basic.lcd_type) {
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
         case LCD_DIGITAL_MIPI:
             set_mipi_dsi_control_config_post(pConf);
             break;
-        case LCD_DIGITAL_EDP:
-            break;
 #endif
         default:
             break;
@@ -3228,7 +3113,7 @@ static void switch_lcd_gates(Lcd_Type_t lcd_type)
 			break;
 	}
 }
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 static void switch_lcd_gates(unsigned int state)
 {
 	if (state > 0) {
@@ -3245,23 +3130,21 @@ static void switch_lcd_gates(unsigned int state)
 }
 #endif
 
-static void _init_lcd_driver(Lcd_Config_t *pConf)	//before power on lcd
-{ 
+static void _init_lcd_driver(Lcd_Config_t *pConf)
+{
     int lcd_type = pConf->lcd_basic.lcd_type;
     unsigned char ss_level = (pConf->lcd_timing.clk_ctrl >> CLK_CTRL_SS) & 0xf;
 
     printk("lcd driver version: %s%s\n\n", DRIVER_DATE, DRV_TYPE);
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
     switch_lcd_gates(lcd_type);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
     switch_vpu_mem_pd_vmod(pDev->lcd_info.mode, VPU_MEM_POWER_ON);
     //switch_lcd_gates(ON);
     switch_lcd_mod_gate(ON);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)   
-	printk("don't control vpu\n");
 #endif
 
-    printk("Init LCD mode: %s(%u) %ubit, %ux%u@%u.%uHz, ss_level=%u(%s)\n", lcd_type_table[lcd_type], lcd_type, pConf->lcd_basic.lcd_bits, pConf->lcd_basic.h_active, pConf->lcd_basic.v_active, (pConf->lcd_timing.sync_duration_num / 10), (pConf->lcd_timing.sync_duration_num % 10), ss_level, lcd_ss_level_table[ss_level]);
+    printk("Init LCD mode: %s, %s(%u) %ubit, %ux%u@%u.%uHz, ss_level=%u(%s)\n", pConf->lcd_basic.model_name, lcd_type_table[lcd_type], lcd_type, pConf->lcd_basic.lcd_bits, pConf->lcd_basic.h_active, pConf->lcd_basic.v_active, (pConf->lcd_timing.sync_duration_num / 10), (pConf->lcd_timing.sync_duration_num % 10), ss_level, lcd_ss_level_table[ss_level]);
 
     switch(lcd_type){
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
@@ -3271,6 +3154,8 @@ static void _init_lcd_driver(Lcd_Config_t *pConf)	//before power on lcd
             set_tcon_lcd(pConf);
             init_dphy(pConf);
             break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         case LCD_DIGITAL_EDP:
             set_pll_lcd(pConf);
             set_venc_lcd(pConf);
@@ -3289,7 +3174,7 @@ static void _init_lcd_driver(Lcd_Config_t *pConf)	//before power on lcd
             set_pll_lcd(pConf);
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
             set_venc_ttl(pConf);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
             set_venc_lcd(pConf);
 #endif
             set_tcon_ttl(pConf);
@@ -3312,7 +3197,7 @@ static void _init_lcd_driver(Lcd_Config_t *pConf)	//before power on lcd
     printk("%s finished.\n", __FUNCTION__);
 }
 
-static void _disable_lcd_driver(Lcd_Config_t *pConf)	//after power off lcd
+static void _disable_lcd_driver(Lcd_Config_t *pConf)
 {
     int vclk_sel;
 
@@ -3321,6 +3206,8 @@ static void _disable_lcd_driver(Lcd_Config_t *pConf)	//after power off lcd
         case LCD_DIGITAL_MIPI:
             mipi_dsi_off();
             break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         case LCD_DIGITAL_EDP:
             dplpm_off();
             break;
@@ -3349,19 +3236,21 @@ static void _disable_lcd_driver(Lcd_Config_t *pConf)	//after power off lcd
 
     WRITE_LCD_CBUS_REG_BITS(HHI_VIID_DIVIDER_CNTL, 0, 16, 1);	//close vid2_pll gate: 0x104c[16]
 
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
     WRITE_LCD_CBUS_REG_BITS(HHI_VID2_PLL_CNTL5, 0, 23, 3);	//disable pll_out mux
 #endif
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
     WRITE_LCD_CBUS_REG_BITS(HHI_VIID_PLL_CNTL, 1, 30, 1);		//power down vid2_pll: 0x1047[30]
 #elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
     WRITE_LCD_CBUS_REG_BITS(HHI_VID2_PLL_CNTL, 0, 30, 1);		//disable vid2_pll: 0x10e0[30]
+#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
+    WRITE_LCD_CBUS_REG_BITS(HHI_VID_PLL_CNTL, 0, 30, 1);		//disable vid_pll: 0x10c8[30]
 #endif
 
 #if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
     switch_mod_gate_by_name("tcon", 0);
     switch_mod_gate_by_name("lvds", 0);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
     //switch_lcd_gates(OFF);
     switch_lcd_mod_gate(OFF);
     switch_vpu_mem_pd_vmod(pDev->lcd_info.mode, VPU_MEM_POWER_DOWN);
@@ -3371,18 +3260,18 @@ static void _disable_lcd_driver(Lcd_Config_t *pConf)	//after power off lcd
 
 static inline void _enable_vsync_interrupt(void)
 {
-//#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
-//	if ((READ_LCD_REG(ENCT_VIDEO_EN) & 1) || (READ_LCD_REG(ENCL_VIDEO_EN) & 1)) {
-//#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
-//	if (READ_LCD_REG(ENCL_VIDEO_EN) & 1) {
-//#endif
-//		WRITE_LCD_REG(VENC_INTCTRL, 0x200);
-//	}
-//	else{
-//		WRITE_LCD_REG(VENC_INTCTRL, 0x2);
-//	}
-//}
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
+	if ((READ_LCD_REG(ENCT_VIDEO_EN) & 1) || (READ_LCD_REG(ENCL_VIDEO_EN) & 1)) {
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+	if (READ_LCD_REG(ENCL_VIDEO_EN) & 1) {
+#endif
+		WRITE_LCD_REG(VENC_INTCTRL, 0x200);
+	}
+	else{
+		WRITE_LCD_REG(VENC_INTCTRL, 0x2);
+	}
 }
+
 void _enable_backlight(void)
 {
 	backlight_power_ctrl(ON);
@@ -3402,7 +3291,7 @@ static void _lcd_module_enable(void)
 
 	_init_lcd_driver(pDev->pConf);
 	ret = lcd_power_ctrl(ON);
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 	if (pDev->pConf->lcd_basic.lcd_type == LCD_DIGITAL_EDP) {
 		if (ret > 0) {
 			lcd_power_ctrl(OFF);
@@ -3425,18 +3314,19 @@ static void _lcd_module_disable(void)
 	lcd_status_flag = 0;
 	BUG_ON(pDev==NULL);
 	data_status = OFF;
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)||	(MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8))
 	lcd_power_ctrl(OFF);
 	_disable_lcd_driver(pDev->pConf);
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
-	;
-#endif
 	mutex_unlock(&lcd_init_mutex);
 }
 
 static const vinfo_t *lcd_get_current_info(void)
 {
-    return &pDev->lcd_info;
+    if (pDev == NULL) {
+        printk("[error] no lcd device exist!\n");
+        return NULL;
+    }
+    else 
+        return &pDev->lcd_info;
 }
 
 static DEFINE_MUTEX(lcd_vout_mutex);
@@ -3693,7 +3583,7 @@ static void write_gamma_table(void)
         set_gamma_table_lcd(pDev->pConf->lcd_effect.GammaTableB, LCD_H_SEL_B, pDev->pConf->lcd_effect.gamma_b_coeff);
         WRITE_LCD_REG_BITS(L_GAMMA_CNTL_PORT, 1, 1, 1);
     }
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 	WRITE_LCD_REG_BITS(L_GAMMA_CNTL_PORT, 0, 1, 1);
 	set_gamma_table_lcd(pDev->pConf->lcd_effect.GammaTableR, LCD_H_SEL_R, pDev->pConf->lcd_effect.gamma_r_coeff);
 	set_gamma_table_lcd(pDev->pConf->lcd_effect.GammaTableG, LCD_H_SEL_G, pDev->pConf->lcd_effect.gamma_g_coeff);
@@ -3836,7 +3726,7 @@ static ssize_t aml_lcd_gamma_debug(struct class *class, struct class_attribute *
             for (j=0; j<256; j++) {
                 pDev->pConf->lcd_effect.GammaTableR[j] = i<<2;
             }
-			set_gamma_coeff(100, 0, 0);
+            set_gamma_coeff(100, 0, 0);
             printk("with R fixed value %u finished.\n", i);
         }
         else if (buf[1] == 'g') {
@@ -3906,6 +3796,8 @@ static int temp_lvds_repack, temp_pn_swap, temp_lvds_vswing;
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 static unsigned char temp_dsi_lane_num;
 static unsigned temp_dsi_bit_rate_min, temp_dsi_bit_rate_max, temp_factor_denominator, temp_factor_numerator;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 static unsigned char temp_edp_link_rate, temp_edp_lane_count, temp_edp_vswing, temp_edp_preemphasis;
 #endif
 static unsigned short last_h_active, last_v_active;
@@ -3927,9 +3819,11 @@ static const char * lcd_usage_str =
 "    echo ttl <rb_swap> <bit_swap> > debug ; write ttl RGB swap config\n"
 "    echo lvds <vswing_level> <lvds_repack> <pn_swap> > debug ; write lvds config\n"
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
-"    echo edp <link_rate> <lane_count> <vswing_level> > debug ; write edp config\n"
 "    echo mdsi <bit_rate_min> <bit_rate_max> <factor> > debug ; write mipi-dsi config\n"
 #endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+"    echo edp <link_rate> <lane_count> <vswing_level> > debug ; write edp config\n"
+#endif
 "\n"
 "data format:\n"
 "    <xx_swap>      : 0=normal, 1=swap\n"
@@ -3937,9 +3831,11 @@ static const char * lcd_usage_str =
 "    <lvds_repack>  : 0=JEIDA mode, 1=VESA mode\n"
 "    <pn_swap>      : 0=normal, 1=swap lvds p/n channels\n"
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
-"    <link_rate>    : 0=1.62G, 1=2.7G\n"
 "    <bit_rate_xxx> : unit in MHz\n"
 #endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+"    <link_rate>    : 0=1.62G, 1=2.7G\n"
+#endif
 "\n"
 "    echo offset <h_sign> <h_offset> <v_sign> <v_offset> > debug ; write ttl display offset\n"
 "    echo dither <dither_user> <dither_ctrl> > debug ; write user dither ctrl config\n"
@@ -3976,11 +3872,12 @@ static void read_current_lcd_config(Lcd_Config_t *pConf)
     v_adj = ((pConf->lcd_timing.v_offset >> 31) & 1);
 
     printk("lcd driver version: %s%s\n\n", DRIVER_DATE, DRV_TYPE);
-    printk("LCD mode: %s %ubit, %ux%u@%u.%uHz\n"
+    printk("LCD mode: %s, %s %ubit, %ux%u@%u.%uHz\n"
            "lcd_clk           %u.%03uMHz\n"
            "ss_level          %d\n"
            "clk_pol           %d\n\n",
-           lcd_type_table[pConf->lcd_basic.lcd_type], pConf->lcd_basic.lcd_bits, pConf->lcd_basic.h_active, pConf->lcd_basic.v_active, (pConf->lcd_timing.sync_duration_num / 10), (pConf->lcd_timing.sync_duration_num % 10),
+           pConf->lcd_basic.model_name, lcd_type_table[pConf->lcd_basic.lcd_type], pConf->lcd_basic.lcd_bits, pConf->lcd_basic.h_active, pConf->lcd_basic.v_active,
+           (pConf->lcd_timing.sync_duration_num / 10), (pConf->lcd_timing.sync_duration_num % 10),
            (lcd_clk / 1000), (lcd_clk % 1000), ((pConf->lcd_timing.clk_ctrl >> CLK_CTRL_SS) & 0xf), ((pConf->lcd_timing.pol_cntl_addr >> LCD_CPH1_POL) & 1));
 
     printk("h_period          %d\n"
@@ -4026,6 +3923,8 @@ static void read_current_lcd_config(Lcd_Config_t *pConf)
                    ((pDev->pConf->lcd_control.mipi_config->operation_mode>>BIT_OPERATION_MODE_DISP) & 1), (((pDev->pConf->lcd_control.mipi_config->operation_mode>>BIT_OPERATION_MODE_DISP) & 1) ? "COMMAND" : "VIDEO"),
                    ((pDev->pConf->lcd_control.mipi_config->transfer_ctrl>>BIT_TRANS_CTRL_CLK) & 1), ((pDev->pConf->lcd_control.mipi_config->transfer_ctrl>>BIT_TRANS_CTRL_SWITCH) & 3));
             break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
         case LCD_DIGITAL_EDP:
             printk("link_rate         %s\n"
                    "lane_count        %u\n"
@@ -4110,6 +4009,8 @@ static void save_lcd_config(Lcd_Config_t *pConf)
 			temp_factor_denominator = pConf->lcd_control.mipi_config->factor_denominator;
 			temp_factor_numerator = pConf->lcd_control.mipi_config->factor_numerator;
 			break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 		case LCD_DIGITAL_EDP:
 			temp_edp_link_rate = pConf->lcd_control.edp_config->link_rate;
 			temp_edp_lane_count = pConf->lcd_control.edp_config->lane_count;
@@ -4126,7 +4027,7 @@ static void save_lcd_config(Lcd_Config_t *pConf)
 			temp_ttl_rb_swap = pConf->lcd_control.ttl_config->rb_swap;
 			temp_ttl_bit_swap = pConf->lcd_control.ttl_config->bit_swap;
 			break;
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
 		case LCD_DIGITAL_MINILVDS:
 			break;
 #endif
@@ -4192,6 +4093,8 @@ static void reset_lcd_config(Lcd_Config_t *pConf)
 			pConf->lcd_control.mipi_config->factor_denominator = temp_factor_denominator;
 			pConf->lcd_control.mipi_config->factor_numerator = temp_factor_numerator;
 			break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 		case LCD_DIGITAL_EDP:
 			//restore edp link config, for they are translate from user value to reg value
 			pConf->lcd_control.edp_config->link_rate = temp_edp_link_rate;
@@ -4209,7 +4112,7 @@ static void reset_lcd_config(Lcd_Config_t *pConf)
 			pConf->lcd_control.ttl_config->rb_swap = temp_ttl_rb_swap;
 			pConf->lcd_control.ttl_config->bit_swap = temp_ttl_bit_swap;
 			break;
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
 		case LCD_DIGITAL_MINILVDS:
 			break;
 #endif
@@ -4280,7 +4183,7 @@ static ssize_t lcd_debug(struct class *class, struct class_attribute *attr, cons
 					venc_video_mode = ENCL_VIDEO_MODE_ADV;
 					venc_test_base = ENCL_TST_EN;
 				}
-#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
+#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 				venc_video_mode = ENCL_VIDEO_MODE_ADV;
 				venc_test_base = ENCL_TST_EN;
 #endif				
@@ -4449,7 +4352,7 @@ static ssize_t lcd_debug(struct class *class, struct class_attribute *attr, cons
 				lcd_power_ctrl(ON);
 				_enable_backlight();
 			}
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 			else if (buf[1] == 'd') {
 				t[0] = 1;
 				t[1] = 4;
@@ -4566,9 +4469,11 @@ static inline int _get_lcd_model_timing(struct platform_device *pdev)
 		lcd_model_node = of_find_node_by_phandle(fhandle);
 		ret = of_property_read_string(lcd_model_node,"model_name", &str);
 		if(ret) {
+			pDev->pConf->lcd_basic.model_name = "none";
 			printk("lcd: faild to get lcd_model_name!\n");
 		}
 		else {
+			pDev->pConf->lcd_basic.model_name = str;
 			printk("load lcd model in dtb: %s\n", str);
 		}
 		ret = of_property_read_string(lcd_model_node, "interface", &str);
@@ -5015,7 +4920,7 @@ static inline int _get_lcd_default_config(struct platform_device *pdev)
 				DBG_PRINT("lvds_repack_user = %u, lvds_repack = %u\n", pDev->pConf->lcd_control.lvds_config->lvds_repack_user, pDev->pConf->lcd_control.lvds_config->lvds_repack);
 			}
 		}
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 		ret = of_property_read_u32_array(pdev->dev.of_node,"edp_user_link_rate_lane_count",&lcd_para[0], 3);
 		if(ret){
 			pDev->pConf->lcd_control.edp_config->link_user = 0;
@@ -5173,7 +5078,7 @@ static inline int _get_lcd_power_config(struct platform_device *pdev)
 			else if ((strcasecmp(str, "null") == 0) || ((strcasecmp(str, "n") == 0))) {
 				break;
 			}
-			else {	
+			else {
 				DBG_PRINT("%s 0: %s\n", propname, str);
 				for(index = 0; index < LCD_POWER_TYPE_MAX; index++) {
 					if(!strcasecmp(str, lcd_power_type_table[index]))
@@ -5186,7 +5091,7 @@ static inline int _get_lcd_power_config(struct platform_device *pdev)
 					if (ret) {
 						printk("faild to get %s index 1\n", propname);
 					}
-					else {					
+					else {
 						if (pDev->pConf->lcd_power_ctrl.power_off_config[i].type == LCD_POWER_TYPE_CPU) {
 							val = amlogic_gpio_name_map_num(str);
 							pDev->pConf->lcd_power_ctrl.power_off_config[i].gpio = val;
@@ -5199,7 +5104,7 @@ static inline int _get_lcd_power_config(struct platform_device *pdev)
 					if (ret) {
 						printk("faild to get %s index 2\n", propname);
 					}
-					else {					
+					else {
 						if ((strcasecmp(str, "output_low") == 0) || (strcasecmp(str, "0") == 0)) {
 							pDev->pConf->lcd_power_ctrl.power_off_config[i].value = LCD_POWER_GPIO_OUTPUT_LOW;
 						}
@@ -5329,18 +5234,22 @@ static int lcd_probe(struct platform_device *pdev)
 		printk("class register aml_gamma_class fail!\n");
 	}
 #endif
-#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+
 	switch (pDev->pConf->lcd_basic.lcd_type) {
+#if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 		case LCD_DIGITAL_MIPI :
 			dsi_probe(pDev->pConf);
 			break;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 		case LCD_DIGITAL_EDP :
 			edp_probe();
 			break;
+#endif
 		default:
 			break;
     }
-#endif
+
 	printk("LCD probe ok\n");
 
 	return 0;
diff --git a/drivers/amlogic/display/vout/tvconf.c b/drivers/amlogic/display/vout/tvconf.c
index 3ec4b8f6566b..53044e0131fb 100755
--- a/drivers/amlogic/display/vout/tvconf.c
+++ b/drivers/amlogic/display/vout/tvconf.c
@@ -585,7 +585,7 @@ static int __init vdac_config_bootargs_setup(char* line)
     printk("cvbs trimming line = %s\n", line);
     cfg = simple_strtoul(line, NULL, 16);
 
-    cvbs_config_vdac(cfg&0xff, (cfg&0xff00)>>8);
+    cvbs_config_vdac((cfg&0xff00)>>8, cfg&0xff);
 
     return 1;
 }
diff --git a/drivers/amlogic/display/vout/tvoutc.c b/drivers/amlogic/display/vout/tvoutc.c
index 023c9d6122ea..a6698e0e6bda 100755
--- a/drivers/amlogic/display/vout/tvoutc.c
+++ b/drivers/amlogic/display/vout/tvoutc.c
@@ -286,16 +286,38 @@ static int uboot_display_already(tvmode_t mode)
 
 #if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
 static unsigned int vdac_cfg_valid = 0, vdac_cfg_value = 0;
+static unsigned int cvbs_get_trimming_version(unsigned int flag)
+{
+	unsigned int version = 0xff;
+	
+	if( (flag&0xf0) == 0xa0 )
+		version = 5;
+	else if( (flag&0xf0) == 0x40 )
+		version = 2;
+	else if( (flag&0xc0) == 0x80 )
+		version = 1;
+	else if( (flag&0xc0) == 0x00 )
+		version = 0;
+
+	return version;
+}
+
 void cvbs_config_vdac(unsigned int flag, unsigned int cfg)
 {
+	unsigned char version = 0;
+
 	vdac_cfg_value = cfg&0x7;
 
+	version = cvbs_get_trimming_version(flag);
+
 	// flag 1/0 for validity of vdac config
-	if( (flag&0xc0) == 0x80 )
+	if( (version==1) || (version==2) || (version==5) )
 		vdac_cfg_valid = 1;
 	else
 		vdac_cfg_valid = 0;
 
+	printk("cvbs trimming.%d.v%d: 0x%x, 0x%x\n", vdac_cfg_valid, version, flag, cfg);
+
 	return ;
 }
 static void cvbs_cntl_output(unsigned int open)
@@ -306,7 +328,7 @@ static void cvbs_cntl_output(unsigned int open)
 	{
 		cntl0 = 0;
 		cntl1 = 8;
-		printk("cvbs close = 0x%x, 0x%x\n", cntl0, cntl1);
+
 		WRITE_MPEG_REG(HHI_VDAC_CNTL0, cntl0);
 		WRITE_MPEG_REG(HHI_VDAC_CNTL1, cntl1);
 	}
@@ -314,7 +336,9 @@ static void cvbs_cntl_output(unsigned int open)
 	{
 		cntl0 = 0x1;
 		cntl1 = (vdac_cfg_valid==0)?0:vdac_cfg_value;
-		printk("cvbs open = 0x%x, 0x%x\n", cntl0, cntl1);
+
+		printk("vdac open.%d = 0x%x, 0x%x\n", vdac_cfg_valid, cntl0, cntl1);
+
 		WRITE_MPEG_REG(HHI_VDAC_CNTL1, cntl1);
 		WRITE_MPEG_REG(HHI_VDAC_CNTL0, cntl0);
 	}
diff --git a/drivers/amlogic/efuse/efuse_hw.c b/drivers/amlogic/efuse/efuse_hw.c
index e0ae69f83e66..7f9fab3c1606 100755
--- a/drivers/amlogic/efuse/efuse_hw.c
+++ b/drivers/amlogic/efuse/efuse_hw.c
@@ -1016,9 +1016,13 @@ int efuse_write_item(char *buf, size_t count, loff_t *ppos)
 }
 
 /* function: efuse_read_intlItem
- * intl_item: item name,name is [temperature,cvbs_trimming]
+ * intl_item: item name,name is [temperature,cvbs_trimming,temper_cvbs]
+ *            [temperature: 2byte]
+ *            [cvbs_trimming: 2byte]
+ *            [temper_cvbs: 4byte]
  * buf:  output para
  * size: buf size
+ * return: <0 fail, >=0 ok
  * */
 int efuse_read_intlItem(char *intl_item,char *buf,int size)
 {
@@ -1069,6 +1073,19 @@ int efuse_read_intlItem(char *intl_item,char *buf,int size)
 				ret = __efuse_read( buf, len, &pos );
 				return ret;
 			}
+			if(strcasecmp(intl_item,"temper_cvbs") == 0){
+				pos = 502;
+				len = 4;
+				if(size <= 0){
+					printk("%s input size:%d is error\n",intl_item,size);
+					return -1;
+				}
+				if(len > size){
+					len = size;
+				}
+				ret = __efuse_read( buf, len, &pos );
+				return ret;
+			}
 			break;
 		case EFUSE_SOC_CHIP_M6TVD:
 			break;
diff --git a/drivers/amlogic/input/saradc/saradc.c b/drivers/amlogic/input/saradc/saradc.c
index 76a835fb4679..cc00829944e6 100755
--- a/drivers/amlogic/input/saradc/saradc.c
+++ b/drivers/amlogic/input/saradc/saradc.c
@@ -25,6 +25,7 @@ struct saradc {
 	int flag;
 	int trimming;
 	int adc_efuse;
+	int efuse_flag;
 #endif
 };
 
@@ -416,6 +417,21 @@ static struct class saradc_class = {
     .name = "saradc",
     .class_attrs = saradc_class_attrs,
 };
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+int read_efuse_flag()
+{
+	if(gp_saradc)
+		return gp_saradc->efuse_flag;
+	else 
+		return -2;
+}
+#else
+int read_efuse_flag()
+{
+	printk("read_efuse_flag() function is not implement! \n");
+	return -2;
+}
+#endif
 
 int get_cpu_temp(void)
 {
@@ -427,9 +443,6 @@ int get_cpu_temp(void)
 			tempa=(18*(ret-gp_saradc->adc_efuse)*10000)/1024/10/85+27;
 			ret=tempa;
 		}
-	}else
-		{
-		ret=NOT_WRITE_EFUSE;
 	}
 	return ret;
 #else
@@ -454,9 +467,9 @@ static int saradc_probe(struct platform_device *pdev)
   saradc_internal_cal(saradc);
 #endif
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
-	char buf[2]={0};
+	char buf[4]={0};
 	int temp=-1,TS_C=-1,flag=0;
-	err=efuse_read_intlItem("temperature",buf,2);
+	err=efuse_read_intlItem("temper_cvbs",buf,4);
 	if(err>=0){
 		printk("buf[0]=%x,buf[1]=%x,err=%d\n",buf[0],buf[1],err);
 		temp=0;TS_C=0;
@@ -470,11 +483,20 @@ static int saradc_probe(struct platform_device *pdev)
 		saradc->flag=flag;
 		saradc->trimming=TS_C;
 		saradc->adc_efuse=temp;
+		saradc->efuse_flag=buf[3]>>4;
+		if(saradc->efuse_flag==EFUEE_MUST_RIGHT ||saradc->efuse_flag==EFUSE_FIXED){
+			if(saradc->flag){
+				saradc->flag=1;
+			}
+		}else{
+			saradc->flag=0;
+		}
 	}
 	else{
 		saradc->flag=flag;
 		saradc->trimming=TS_C;
 		saradc->adc_efuse=temp;
+		saradc->efuse_flag=-1;
 	}
 	if(gp_saradc->flag){
 		select_temp();
diff --git a/drivers/amlogic/input/touchscreen/Makefile b/drivers/amlogic/input/touchscreen/Makefile
index 96b844b0d991..456f11fbc8e5 100755
--- a/drivers/amlogic/input/touchscreen/Makefile
+++ b/drivers/amlogic/input/touchscreen/Makefile
@@ -15,4 +15,5 @@ obj-$(CONFIG_NOVATEK_CAPACITIVE_TOUCHSCREEN)  += novatek.o
 obj-y += gt9xx/
 obj-y += ct36x_ts/
 obj-y += ft5x02/
+obj-y += gslx680/
 
diff --git a/drivers/amlogic/input/touchscreen/gslx680/Makefile b/drivers/amlogic/input/touchscreen/gslx680/Makefile
new file mode 100755
index 000000000000..a195884074f6
--- /dev/null
+++ b/drivers/amlogic/input/touchscreen/gslx680/Makefile
@@ -0,0 +1,9 @@
+#
+# Makefile for the touchscreen drivers.
+#
+
+# Each configuration option enables a list of files.
+obj-y	+= amlogic_gslX680.o
+obj-y += gsl_point_id.o
+$(obj)/gsl_point_id.o: $(srctree)/$(obj)/gsl_point_id
+	cp $(srctree)/$(obj)/gsl_point_id $(obj)/gsl_point_id.o
\ No newline at end of file
diff --git a/drivers/amlogic/input/touchscreen/gslx680/amlogic_gslX680.c b/drivers/amlogic/input/touchscreen/gslx680/amlogic_gslX680.c
new file mode 100755
index 000000000000..ff7eb6ffec45
--- /dev/null
+++ b/drivers/amlogic/input/touchscreen/gslx680/amlogic_gslX680.c
@@ -0,0 +1,1252 @@
+/*
+ * drivers/input/touchscreen/gslX680.c
+ *
+ * Copyright (c) 2012 Shanghai Basewin
+ *	Guan Yuwei<guanyuwei@basewin.com>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License version 2 as
+ *  published by the Free Software Foundation.
+ */
+
+
+
+#include <linux/module.h>
+#include <linux/i2c.h>
+#include <linux/delay.h>
+#include <linux/input.h>
+#include <linux/earlysuspend.h>
+#include <linux/interrupt.h>
+#include <linux/slab.h>
+#include <linux/device.h>
+#include <linux/platform_device.h>
+#include <linux/workqueue.h>
+#include <asm/uaccess.h>
+#include <mach/am_regs.h>
+#include <linux/cdev.h>
+#include <linux/fs.h>
+#include <linux/kthread.h>
+#include <linux/input/mt.h>
+#include <linux/vmalloc.h>
+#include <linux/hrtimer.h>
+#include <linux/syscalls.h>
+#include <linux/reboot.h>
+#include <linux/proc_fs.h>
+#ifdef CONFIG_OF
+#include <linux/amlogic/aml_gpio_consumer.h>
+#include <linux/of.h>
+#else
+#include <mach/gpio.h>
+#include <mach/gpio_data.h>
+#endif
+
+//#define GSL_DEBUG
+//#define GSL_MONITOR
+#define REPORT_DATA_ANDROID_4_0
+//#define HAVE_TOUCH_KEY
+#define SLEEP_CLEAR_POINT
+//#define FILTER_POINT
+#ifdef FILTER_POINT
+#define FILTER_MAX	9
+#endif
+
+#define gsl_gpio_request(gpio) amlogic_gpio_request(gpio, "gslx680")
+#define gsl_gpio_free(gpio) amlogic_gpio_free(gpio, "gslx680")
+#define gsl_gpio_direction_input(gpio) amlogic_gpio_direction_input(gpio, "gslx680")
+#define gsl_gpio_direction_output(gpio, val) amlogic_gpio_direction_output(gpio, val, "gslx680")
+#define gsl_get_value(gpio) amlogic_get_value(gpio, "gslx680")
+#define gsl_set_value(gpio,val) amlogic_set_value(gpio, val, "gslx680")
+#define gsl_gpio_to_irq(gpio, irq, irq_edge) 	amlogic_gpio_to_irq(gpio, "gslx680", AML_GPIO_IRQ((irq),FILTER_NUM7,irq_edge))
+
+#define GSLX680_I2C_NAME 	"gslX680new"
+#define GSLX680_I2C_ADDR 	0x40
+#define TOUCH_IRQ INT_GPIO_0
+#define TOUCH_GPIO_SHUTDOWN  amlogic_gpio_name_map_num("GPIOAO_7")
+#define TOUCH_GPIO_INTERRUPT amlogic_gpio_name_map_num("GPIOH_9")
+
+#define CHIP_3680B 1
+#define CHIP_3680A 2
+#define CHIP_3670 3
+#define CHIP_1680E 130
+
+static char chip_type = CHIP_3680B;
+static char is_noid_version = 0;
+
+static int SCREEN_MAX_X, SCREEN_MAX_Y;
+
+struct fw_data
+{
+    u32 offset : 8;
+    u32 : 0;
+    u32 val;
+};
+#include "main_1680E.h"
+#include "main_3670.h"
+
+#define 	GSL_NOID_VERSION
+#ifdef	      GSL_NOID_VERSION
+struct gsl_touch_info
+{
+	int x[10];
+	int y[10];
+	int id[10];
+	int finger_num;	
+};
+extern unsigned int gsl_mask_tiaoping(void);
+extern unsigned int gsl_version_id(void);
+extern void gsl_alg_id_main(struct gsl_touch_info *cinfo);
+extern void gsl_DataInit(int *ret);
+#endif
+
+#define GSL_DATA_REG		0x80
+#define GSL_STATUS_REG		0xe0
+#define GSL_PAGE_REG		0xf0
+
+#define PRESS_MAX    			255
+#define MAX_FINGERS 		10
+#define MAX_CONTACTS 		10
+#define DMA_TRANS_LEN		0x20
+#ifdef GSL_MONITOR
+static struct delayed_work gsl_monitor_work;
+static struct workqueue_struct *gsl_monitor_workqueue = NULL;
+static u8 int_1st[4] = {0};
+static u8 int_2nd[4] = {0};
+static char dac_counter = 0;
+static char b0_counter = 0;
+static char bc_counter = 0;
+static char i2c_lock_flag = 0;
+#endif 
+
+static struct i2c_client *gsl_client = NULL;
+
+#ifdef HAVE_TOUCH_KEY
+static u16 key = 0;
+static int key_state_flag = 0;
+struct key_data {
+	u16 key;
+	u16 x_min;
+	u16 x_max;
+	u16 y_min;
+	u16 y_max;	
+};
+
+const u16 key_array[]={
+                                      KEY_BACK,
+                                      KEY_HOME,
+                                      KEY_MENU,
+                                      KEY_SEARCH,
+                                     }; 
+#define MAX_KEY_NUM     (sizeof(key_array)/sizeof(key_array[0]))
+
+struct key_data gsl_key_data[MAX_KEY_NUM] = {
+	{KEY_BACK, 2048, 2048, 2048, 2048},
+	{KEY_HOME, 2048, 2048, 2048, 2048},	
+	{KEY_MENU, 2048, 2048, 2048, 2048},
+	{KEY_SEARCH, 2048, 2048, 2048, 2048},
+};
+#endif
+
+struct gsl_ts_data {
+	u8 x_index;
+	u8 y_index;
+	u8 z_index;
+	u8 id_index;
+	u8 touch_index;
+	u8 data_reg;
+	u8 status_reg;
+	u8 data_size;
+	u8 touch_bytes;
+	u8 update_data;
+	u8 touch_meta_data;
+	u8 finger_size;
+};
+
+static struct gsl_ts_data devices[] = {
+	{
+		.x_index = 6,
+		.y_index = 4,
+		.z_index = 5,
+		.id_index = 7,
+		.data_reg = GSL_DATA_REG,
+		.status_reg = GSL_STATUS_REG,
+		.update_data = 0x4,
+		.touch_bytes = 4,
+		.touch_meta_data = 4,
+		.finger_size = 70,
+	},
+};
+
+struct gsl_ts {
+	struct i2c_client *client;
+	struct input_dev *input;
+	struct work_struct work;
+	struct workqueue_struct *wq;
+	struct gsl_ts_data *dd;
+	u8 *touch_data;
+	u8 device_id;
+	int irq;
+#if defined(CONFIG_HAS_EARLYSUSPEND)
+	struct early_suspend early_suspend;
+#endif
+};
+
+#ifdef GSL_DEBUG 
+#define print_info(fmt, args...)   \
+        do{                              \
+                printk(fmt, ##args);     \
+        }while(0)
+#else
+#define print_info(fmt, args...)
+#endif
+
+
+static u32 id_sign[MAX_CONTACTS+1] = {0};
+static u8 id_state_flag[MAX_CONTACTS+1] = {0};
+static u8 id_state_old_flag[MAX_CONTACTS+1] = {0};
+static u16 x_old[MAX_CONTACTS+1] = {0};
+static u16 y_old[MAX_CONTACTS+1] = {0};
+static u16 x_new = 0;
+static u16 y_new = 0;
+
+
+
+static int gslX680_init(void)
+{
+  gsl_gpio_request(TOUCH_GPIO_SHUTDOWN);
+  gsl_gpio_request(TOUCH_GPIO_INTERRUPT);
+	gsl_gpio_direction_output(TOUCH_GPIO_SHUTDOWN, 1);
+	gsl_gpio_direction_input(TOUCH_GPIO_INTERRUPT);
+	gsl_gpio_to_irq(TOUCH_GPIO_INTERRUPT, TOUCH_IRQ-INT_GPIO_0, GPIO_IRQ_RISING);
+	msleep(20);
+	return 0;
+}
+
+static int gslX680_shutdown_low(void)
+{
+	gsl_gpio_direction_output(TOUCH_GPIO_SHUTDOWN, 0);
+	return 0;
+}
+
+static int gslX680_shutdown_high(void)
+{
+	gsl_gpio_direction_output(TOUCH_GPIO_SHUTDOWN, 1);
+	return 0;
+}
+
+static inline u16 join_bytes(u8 a, u8 b)
+{
+	u16 ab = 0;
+	ab = ab | a;
+	ab = ab << 8 | b;
+	return ab;
+}
+
+static u32 gsl_read_interface(struct i2c_client *client, u8 reg, u8 *buf, u32 num)
+{
+	struct i2c_msg xfer_msg[2];
+
+	xfer_msg[0].addr = client->addr;
+	xfer_msg[0].len = 1;
+	xfer_msg[0].flags = client->flags & I2C_M_TEN;
+	xfer_msg[0].buf = &reg;
+
+	xfer_msg[1].addr = client->addr;
+	xfer_msg[1].len = num;
+	xfer_msg[1].flags |= I2C_M_RD;
+	xfer_msg[1].buf = buf;
+
+	if (reg < 0x80) {
+		i2c_transfer(client->adapter, xfer_msg, ARRAY_SIZE(xfer_msg));
+		msleep(5);
+	}
+
+	return i2c_transfer(client->adapter, xfer_msg, ARRAY_SIZE(xfer_msg)) == ARRAY_SIZE(xfer_msg) ? 0 : -EFAULT;
+}
+
+static u32 gsl_write_interface(struct i2c_client *client, const u8 reg, u8 *buf, u32 num)
+{
+	struct i2c_msg xfer_msg[1];
+
+	buf[0] = reg;
+
+	xfer_msg[0].addr = client->addr;
+	xfer_msg[0].len = num + 1;
+	xfer_msg[0].flags = client->flags & I2C_M_TEN;
+	xfer_msg[0].buf = buf;
+
+	return i2c_transfer(client->adapter, xfer_msg, 1) == 1 ? 0 : -EFAULT;
+}
+
+static int gsl_ts_write(struct i2c_client *client, u8 addr, u8 *pdata, int datalen)
+{
+	int ret = 0;
+	u8 tmp_buf[128];
+	unsigned int bytelen = 0;
+	if (datalen > 125)
+	{
+		printk("%s too big datalen = %d!\n", __func__, datalen);
+		return -1;
+	}
+	
+	tmp_buf[0] = addr;
+	bytelen++;
+	
+	if (datalen != 0 && pdata != NULL)
+	{
+		memcpy(&tmp_buf[bytelen], pdata, datalen);
+		bytelen += datalen;
+	}
+	
+	ret = i2c_master_send(client, tmp_buf, bytelen);
+	return ret;
+}
+
+static int gsl_ts_read(struct i2c_client *client, u8 addr, u8 *pdata, unsigned int datalen)
+{
+	int ret = 0;
+
+	if (datalen > 126)
+	{
+		printk("%s too big datalen = %d!\n", __func__, datalen);
+		return -1;
+	}
+
+	ret = gsl_ts_write(client, addr, NULL, 0);
+	if (ret < 0)
+	{
+		printk("%s set data address fail!\n", __func__);
+		return ret;
+	}
+	
+	return i2c_master_recv(client, pdata, datalen);
+}
+
+static void judge_chip_type(struct i2c_client *client)
+{
+	u8 read_buf[4]  = {0};
+
+	msleep(50);
+	gsl_ts_read(client,0xfc, read_buf, sizeof(read_buf));
+	
+	if(0x82 == read_buf[2])
+	{
+		chip_type = CHIP_1680E;
+		is_noid_version = 0;
+		SCREEN_MAX_X = 600;
+		SCREEN_MAX_Y = 1024;
+		printk("chip type: 1680E\n");
+	}
+	
+//	else if(0x36 == read_buf[2])
+//	{
+//		chip_type = CHIP_3680B;
+//		is_noid_version = 1;
+//		printk("chip type: CHIP_3680B\n");
+//	}
+//	else if (0x88 == read_buf[2])
+//	{
+//		chip_type = CHIP_3680A;
+//		is_noid_version = 0;
+//		printk("chip type: CHIP_3680A\n");
+//	}
+	else
+	{
+		chip_type = CHIP_3670;
+		is_noid_version = 0;
+		SCREEN_MAX_X = 1024;
+		SCREEN_MAX_Y = 768;
+		printk("chip type: CHIP_3670\n");
+  }
+}
+
+
+static __inline__ void fw2buf(u8 *buf, const u32 *fw)
+{
+	u32 *u32_buf = (int *)buf;
+	*u32_buf = *fw;
+}
+
+static void gsl_load_fw(struct i2c_client *client)
+{
+	u8 buf[DMA_TRANS_LEN*4 + 1] = {0};
+	u8 send_flag = 1;
+	u8 *cur = buf + 1;
+	u32 source_line = 0;
+	u32 source_len;
+	struct fw_data *ptr_fw;
+	
+	if (CHIP_1680E==chip_type)
+	{
+		printk("======gsl_load_1680E FW start==============\n");
+		ptr_fw =GSL1680E_FW;
+		source_len = ARRAY_SIZE(GSL1680E_FW);
+	}
+	else
+	{
+		printk("======gsl_load_3670 FW start==============\n");
+		ptr_fw = GSL3670_FW;
+		source_len = ARRAY_SIZE(GSL3670_FW);
+	}
+
+//	ptr_fw = GSLX680_FW;
+//	source_len = ARRAY_SIZE(GSLX680_FW);
+
+	for (source_line = 0; source_line < source_len; source_line++) 
+	{
+		/* init page trans, set the page val */
+		if (GSL_PAGE_REG == ptr_fw[source_line].offset)
+		{
+			fw2buf(cur, &ptr_fw[source_line].val);
+			gsl_write_interface(client, GSL_PAGE_REG, buf, 4);
+			send_flag = 1;
+		}
+		else 
+		{
+			if (1 == send_flag % (DMA_TRANS_LEN < 0x20 ? DMA_TRANS_LEN : 0x20))
+	    			buf[0] = (u8)ptr_fw[source_line].offset;
+
+			fw2buf(cur, &ptr_fw[source_line].val);
+			cur += 4;
+
+			if (0 == send_flag % (DMA_TRANS_LEN < 0x20 ? DMA_TRANS_LEN : 0x20)) 
+			{
+	    			gsl_write_interface(client, buf[0], buf, cur - buf - 1);
+	    			cur = buf + 1;
+			}
+
+			send_flag++;
+		}
+	}
+
+	printk("=============gsl_load_fw end==============\n");
+
+}
+
+
+static int test_i2c(struct i2c_client *client)
+{
+	u8 read_buf = 0;
+	u8 write_buf = 0x12;
+	int ret, rc = 1;
+	
+	ret = gsl_ts_read( client, 0xf0, &read_buf, sizeof(read_buf) );
+	if  (ret  < 0)  
+    		rc --;
+	else
+		printk("I read reg 0xf0 is %x\n", read_buf);
+	
+	msleep(2);
+	ret = gsl_ts_write(client, 0xf0, &write_buf, sizeof(write_buf));
+	if(ret  >=  0 )
+		printk("I write reg 0xf0 0x12\n");
+	
+	msleep(2);
+	ret = gsl_ts_read( client, 0xf0, &read_buf, sizeof(read_buf) );
+	if(ret <  0 )
+		rc --;
+	else
+		printk("I read reg 0xf0 is 0x%x\n", read_buf);
+
+	return rc;
+}
+
+
+static void startup_chip(struct i2c_client *client)
+{
+	u8 tmp = 0x00;
+	
+#ifdef GSL_NOID_VERSION
+	if (CHIP_1680E == chip_type)
+	gsl_DataInit(gsl1680e_config_data_id);
+	else
+	gsl_DataInit(gsl3670_config_data_id);
+#endif
+	gsl_ts_write(client, 0xe0, &tmp, 1);
+	msleep(10);	
+}
+
+static void reset_chip(struct i2c_client *client)
+{
+	u8 tmp = 0x88;
+	u8 buf[4] = {0x00};
+	
+	gsl_ts_write(client, 0xe0, &tmp, sizeof(tmp));
+	msleep(20);
+	tmp = 0x04;
+	gsl_ts_write(client, 0xe4, &tmp, sizeof(tmp));
+	msleep(10);
+	gsl_ts_write(client, 0xbc, buf, sizeof(buf));
+	msleep(10);
+}
+
+static void clr_reg(struct i2c_client *client)
+{
+	u8 write_buf[4]	= {0};
+
+	write_buf[0] = 0x88;
+	gsl_ts_write(client, 0xe0, &write_buf[0], 1); 	
+	msleep(20);
+	write_buf[0] = 0x03;
+	gsl_ts_write(client, 0x80, &write_buf[0], 1); 	
+	msleep(5);
+	write_buf[0] = 0x04;
+	gsl_ts_write(client, 0xe4, &write_buf[0], 1); 	
+	msleep(5);
+	write_buf[0] = 0x00;
+	gsl_ts_write(client, 0xe0, &write_buf[0], 1); 	
+	msleep(20);
+}
+
+static void init_chip(struct i2c_client *client)
+{
+	int rc;
+	
+	gslX680_shutdown_low();	
+	msleep(20); 	
+	gslX680_shutdown_high();	
+	msleep(20); 		
+	rc = test_i2c(client);
+	if(rc < 0)
+	{
+		printk("------gslX680 test_i2c error------\n");	
+		return;
+	}	
+	clr_reg(client);
+	reset_chip(client);
+	gsl_load_fw(client);			
+	startup_chip(client);	
+	reset_chip(client);	
+	startup_chip(client);	
+}
+
+static void check_mem_data(struct i2c_client *client)
+{
+	u8 read_buf[4]  = {0};
+	
+	msleep(30);
+	gsl_ts_read(client,0xb0, read_buf, sizeof(read_buf));
+	
+	if (read_buf[3] != 0x5a || read_buf[2] != 0x5a || read_buf[1] != 0x5a || read_buf[0] != 0x5a)
+	{
+		printk("#########check mem read 0xb0 = %x %x %x %x #########\n", read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		init_chip(client);
+	}
+}
+
+#ifdef FILTER_POINT
+static void filter_point(u16 x, u16 y , u8 id)
+{
+	u16 x_err =0;
+	u16 y_err =0;
+	u16 filter_step_x = 0, filter_step_y = 0;
+	
+	id_sign[id] = id_sign[id] + 1;
+	if(id_sign[id] == 1)
+	{
+		x_old[id] = x;
+		y_old[id] = y;
+	}
+	
+	x_err = x > x_old[id] ? (x -x_old[id]) : (x_old[id] - x);
+	y_err = y > y_old[id] ? (y -y_old[id]) : (y_old[id] - y);
+
+	if( (x_err > FILTER_MAX && y_err > FILTER_MAX/3) || (x_err > FILTER_MAX/3 && y_err > FILTER_MAX) )
+	{
+		filter_step_x = x_err;
+		filter_step_y = y_err;
+	}
+	else
+	{
+		if(x_err > FILTER_MAX)
+			filter_step_x = x_err; 
+		if(y_err> FILTER_MAX)
+			filter_step_y = y_err;
+	}
+
+	if(x_err <= 2*FILTER_MAX && y_err <= 2*FILTER_MAX)
+	{
+		filter_step_x >>= 2; 
+		filter_step_y >>= 2;
+	}
+	else if(x_err <= 3*FILTER_MAX && y_err <= 3*FILTER_MAX)
+	{
+		filter_step_x >>= 1; 
+		filter_step_y >>= 1;
+	}	
+	else if(x_err <= 4*FILTER_MAX && y_err <= 4*FILTER_MAX)
+	{
+		filter_step_x = filter_step_x*3/4; 
+		filter_step_y = filter_step_y*3/4;
+	}	
+	
+	x_new = x > x_old[id] ? (x_old[id] + filter_step_x) : (x_old[id] - filter_step_x);
+	y_new = y > y_old[id] ? (y_old[id] + filter_step_y) : (y_old[id] - filter_step_y);
+
+	x_old[id] = x_new;
+	y_old[id] = y_new;
+}
+#else
+static void record_point(u16 x, u16 y , u8 id)
+{
+	u16 x_err =0;
+	u16 y_err =0;
+
+	id_sign[id]=id_sign[id]+1;
+	
+	if(id_sign[id]==1){
+		x_old[id]=x;
+		y_old[id]=y;
+	}
+
+	x = (x_old[id] + x)/2;
+	y = (y_old[id] + y)/2;
+		
+	if(x>x_old[id]){
+		x_err=x -x_old[id];
+	}
+	else{
+		x_err=x_old[id]-x;
+	}
+
+	if(y>y_old[id]){
+		y_err=y -y_old[id];
+	}
+	else{
+		y_err=y_old[id]-y;
+	}
+
+	if( (x_err > 3 && y_err > 1) || (x_err > 1 && y_err > 3) ){
+		x_new = x;     x_old[id] = x;
+		y_new = y;     y_old[id] = y;
+	}
+	else{
+		if(x_err > 3){
+			x_new = x;     x_old[id] = x;
+		}
+		else
+			x_new = x_old[id];
+		if(y_err> 3){
+			y_new = y;     y_old[id] = y;
+		}
+		else
+			y_new = y_old[id];
+	}
+
+	if(id_sign[id]==1){
+		x_new= x_old[id];
+		y_new= y_old[id];
+	}
+	
+}
+#endif
+
+#ifdef HAVE_TOUCH_KEY
+static void report_key(struct gsl_ts *ts, u16 x, u16 y)
+{
+	u16 i = 0;
+
+	for(i = 0; i < MAX_KEY_NUM; i++) 
+	{
+		if((gsl_key_data[i].x_min < x) && (x < gsl_key_data[i].x_max)&&(gsl_key_data[i].y_min < y) && (y < gsl_key_data[i].y_max))
+		{
+			key = gsl_key_data[i].key;	
+			input_report_key(ts->input, key, 1);
+			input_sync(ts->input); 		
+			key_state_flag = 1;
+			break;
+		}
+	}
+}
+#endif
+
+static void report_data(struct gsl_ts *ts, u16 x, u16 y, u8 pressure, u8 id)
+{
+	swap(x, y);
+
+	print_info("#####id=%d,x=%d,y=%d######\n",id,x,y);
+
+	if(x > SCREEN_MAX_X || y > SCREEN_MAX_Y)
+	{
+	#ifdef HAVE_TOUCH_KEY
+		report_key(ts,x,y);
+	#endif
+		return;
+	}
+	
+#ifdef REPORT_DATA_ANDROID_4_0
+	input_mt_slot(ts->input, id);		
+	input_report_abs(ts->input, ABS_MT_TRACKING_ID, id);
+	input_report_abs(ts->input, ABS_MT_TOUCH_MAJOR, pressure);
+	input_report_abs(ts->input, ABS_MT_POSITION_X, x);
+	input_report_abs(ts->input, ABS_MT_POSITION_Y, y);	
+	input_report_abs(ts->input, ABS_MT_WIDTH_MAJOR, 1);
+#else
+	input_report_abs(ts->input, ABS_MT_TRACKING_ID, id);
+	input_report_abs(ts->input, ABS_MT_TOUCH_MAJOR, pressure);
+	input_report_abs(ts->input, ABS_MT_POSITION_X,x);
+	input_report_abs(ts->input, ABS_MT_POSITION_Y, y);
+	input_report_abs(ts->input, ABS_MT_WIDTH_MAJOR, 1);
+	input_mt_sync(ts->input);
+#endif
+}
+
+static void gslX680_ts_worker(struct work_struct *work)
+{
+	int rc, i;
+	u8 id, touches, read_buf[4] = {0};
+	u16 x, y;
+
+	struct gsl_ts *ts = container_of(work, struct gsl_ts,work);
+
+	print_info("=====gslX680_ts_worker=====\n");				 
+
+#ifdef GSL_MONITOR
+	if(i2c_lock_flag != 0)
+		goto i2c_lock_schedule;
+	else
+		i2c_lock_flag = 1;
+#endif
+
+#ifdef GSL_NOID_VERSION
+	u32 tmp1;
+	u8 buf[4] = {0};
+	struct gsl_touch_info cinfo = {0};
+#endif
+
+	rc = gsl_ts_read(ts->client, 0x80, ts->touch_data, ts->dd->data_size);
+	if (rc < 0) 
+	{
+		dev_err(&ts->client->dev, "read failed\n");
+		goto schedule;
+	}
+		
+	touches = ts->touch_data[ts->dd->touch_index];
+	print_info("-----touches: %d -----\n", touches);		
+#ifdef GSL_NOID_VERSION
+	cinfo.finger_num = touches;
+	print_info("tp-gsl  finger_num = %d\n",cinfo.finger_num);
+	for(i = 0; i < (touches < MAX_CONTACTS ? touches : MAX_CONTACTS); i ++)
+	{
+		cinfo.x[i] = join_bytes( ( ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf),
+				ts->touch_data[ts->dd->x_index + 4 * i]);
+		cinfo.y[i] = join_bytes(ts->touch_data[ts->dd->y_index + 4 * i + 1],
+				ts->touch_data[ts->dd->y_index + 4 * i ]);
+		cinfo.id[i] = ((ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf0)>>4);
+		print_info("tp-gsl  before: x[%d] = %d, y[%d] = %d, id[%d] = %d \n",i,cinfo.x[i],i,cinfo.y[i],i,cinfo.id[i]);
+	}
+	cinfo.finger_num=(ts->touch_data[3]<<24)|(ts->touch_data[2]<<16)
+		|(ts->touch_data[1]<<8)|(ts->touch_data[0]);
+	gsl_alg_id_main(&cinfo);
+	tmp1=gsl_mask_tiaoping();
+	print_info("[tp-gsl] tmp1=%x\n",tmp1);
+	if(tmp1>0&&tmp1<0xffffffff)
+	{
+		buf[0]=0xa;buf[1]=0;buf[2]=0;buf[3]=0;
+		gsl_ts_write(ts->client,0xf0,buf,4);
+		buf[0]=(u8)(tmp1 & 0xff);
+		buf[1]=(u8)((tmp1>>8) & 0xff);
+		buf[2]=(u8)((tmp1>>16) & 0xff);
+		buf[3]=(u8)((tmp1>>24) & 0xff);
+		print_info("tmp1=%08x,buf[0]=%02x,buf[1]=%02x,buf[2]=%02x,buf[3]=%02x\n",
+			tmp1,buf[0],buf[1],buf[2],buf[3]);
+		gsl_ts_write(ts->client,0x8,buf,4);
+	}
+	touches = cinfo.finger_num;
+#endif
+	
+	for(i = 1; i <= MAX_CONTACTS; i ++)
+	{
+		if(touches == 0)
+			id_sign[i] = 0;	
+		id_state_flag[i] = 0;
+	}
+	for(i= 0;i < (touches > MAX_FINGERS ? MAX_FINGERS : touches);i ++)
+	{
+	#ifdef GSL_NOID_VERSION
+		id = cinfo.id[i];
+		x =  cinfo.x[i];
+		y =  cinfo.y[i];	
+	#else
+		x = join_bytes( ( ts->touch_data[ts->dd->x_index  + 4 * i + 1] & 0xf),
+				ts->touch_data[ts->dd->x_index + 4 * i]);
+		y = join_bytes(ts->touch_data[ts->dd->y_index + 4 * i + 1],
+				ts->touch_data[ts->dd->y_index + 4 * i ]);
+		id = ts->touch_data[ts->dd->id_index + 4 * i] >> 4;
+	#endif
+
+		if(1 <=id && id <= MAX_CONTACTS)
+		{
+		#ifdef FILTER_POINT
+			filter_point(x, y ,id);
+		#else
+			record_point(x, y , id);
+		#endif
+			report_data(ts, x_new, y_new, 10, id);		
+			id_state_flag[id] = 1;
+		}
+	}
+	for(i = 1; i <= MAX_CONTACTS; i ++)
+	{	
+		if( (0 == touches) || ((0 != id_state_old_flag[i]) && (0 == id_state_flag[i])) )
+		{
+		#ifdef REPORT_DATA_ANDROID_4_0
+			input_mt_slot(ts->input, i);
+			input_report_abs(ts->input, ABS_MT_TRACKING_ID, -1);
+			input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, false);
+		#endif
+			id_sign[i]=0;
+		}
+		id_state_old_flag[i] = id_state_flag[i];
+	}
+	if(0 == touches)
+	{
+#ifndef REPORT_DATA_ANDROID_4_0
+		input_mt_sync(ts->input);
+#endif
+	#ifdef HAVE_TOUCH_KEY
+		if(key_state_flag)
+		{
+        		input_report_key(ts->input, key, 0);
+			input_sync(ts->input);
+			key_state_flag = 0;
+		}
+	#endif			
+	}
+	input_sync(ts->input);
+	
+schedule:
+#ifdef GSL_MONITOR
+	i2c_lock_flag = 0;
+i2c_lock_schedule:
+#endif
+	enable_irq(ts->irq);
+		
+}
+
+#ifdef GSL_MONITOR
+static void gsl_monitor_worker(void)
+{
+	u8 write_buf[4] = {0};
+	u8 read_buf[4]  = {0};
+	char init_chip_flag = 0;
+	
+	print_info("----------------gsl_monitor_worker-----------------\n");	
+
+	if(i2c_lock_flag != 0)
+		goto queue_monitor_work;
+	else
+		i2c_lock_flag = 1;
+	
+	gsl_ts_read(gsl_client, 0xb0, read_buf, 4);
+	if(read_buf[3] != 0x5a || read_buf[2] != 0x5a || read_buf[1] != 0x5a || read_buf[0] != 0x5a)
+		b0_counter ++;
+	else
+		b0_counter = 0;
+
+	if(b0_counter > 1)
+	{
+		printk("======read 0xb0: %x %x %x %x ======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		init_chip_flag = 1;
+		b0_counter = 0;
+		goto queue_monitor_init_chip;
+	}
+	
+	gsl_ts_read(gsl_client, 0xb4, read_buf, 4);	
+	int_2nd[3] = int_1st[3];
+	int_2nd[2] = int_1st[2];
+	int_2nd[1] = int_1st[1];
+	int_2nd[0] = int_1st[0];
+	int_1st[3] = read_buf[3];
+	int_1st[2] = read_buf[2];
+	int_1st[1] = read_buf[1];
+	int_1st[0] = read_buf[0];
+
+	if(int_1st[3] == int_2nd[3] && int_1st[2] == int_2nd[2] &&int_1st[1] == int_2nd[1] && int_1st[0] == int_2nd[0]) 
+	{
+		printk("======int_1st: %x %x %x %x , int_2nd: %x %x %x %x ======\n",int_1st[3], int_1st[2], int_1st[1], int_1st[0], int_2nd[3], int_2nd[2],int_2nd[1],int_2nd[0]);
+		init_chip_flag = 1;
+		goto queue_monitor_init_chip;
+	}
+#if 1 //version 1.4.0 or later than 1.4.0 read 0xbc for esd checking
+	gsl_ts_read(gsl_client, 0xbc, read_buf, 4);
+	if(read_buf[3] != 0 || read_buf[2] != 0 || read_buf[1] != 0 || read_buf[0] != 0)
+		bc_counter++;
+	else
+		bc_counter = 0;
+	if(bc_counter > 1)
+	{
+		printk("======read 0xbc: %x %x %x %x======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		init_chip_flag = 1;
+		bc_counter = 0;
+	}
+#else
+	write_buf[3] = 0x01;
+	write_buf[2] = 0xfe;
+	write_buf[1] = 0x10;
+	write_buf[0] = 0x00;
+	gsl_ts_write(gsl_client, 0xf0, write_buf, 4);
+	gsl_ts_read(gsl_client, 0x10, read_buf, 4);
+	gsl_ts_read(gsl_client, 0x10, read_buf, 4);
+	
+	if(read_buf[3] < 10 && read_buf[2] < 10 && read_buf[1] < 10 && read_buf[0] < 10)
+		dac_counter ++;
+	else
+		dac_counter = 0;
+
+	if(dac_counter > 1) 
+	{
+		printk("======read DAC1_0: %x %x %x %x ======\n",read_buf[3], read_buf[2], read_buf[1], read_buf[0]);
+		init_chip_flag = 1;
+		dac_counter = 0;
+	}
+#endif	
+queue_monitor_init_chip:
+	if(init_chip_flag)
+		init_chip(gsl_client);
+	
+	i2c_lock_flag = 0;
+	
+queue_monitor_work:	
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 100);
+}
+#endif
+
+static irqreturn_t gsl_ts_irq(int irq, void *dev_id)
+{	
+	struct gsl_ts *ts = dev_id;
+
+	print_info("========gslX680 Interrupt=========\n");				 
+
+	disable_irq_nosync(ts->irq);
+
+	if (!work_pending(&ts->work)) 
+	{
+		queue_work(ts->wq, &ts->work);
+	}
+	
+	return IRQ_HANDLED;
+
+}
+
+static int gslX680_ts_init(struct i2c_client *client, struct gsl_ts *ts)
+{
+	struct input_dev *input_device;
+	int i, rc = 0;
+	
+	printk("[GSLX680] Enter %s\n", __func__);
+
+	ts->dd = &devices[ts->device_id];
+
+	if (ts->device_id == 0) {
+		ts->dd->data_size = MAX_FINGERS * ts->dd->touch_bytes + ts->dd->touch_meta_data;
+		ts->dd->touch_index = 0;
+	}
+
+	ts->touch_data = kzalloc(ts->dd->data_size, GFP_KERNEL);
+	if (!ts->touch_data) {
+		pr_err("%s: Unable to allocate memory\n", __func__);
+		return -ENOMEM;
+	}
+
+	input_device = input_allocate_device();
+	if (!input_device) {
+		rc = -ENOMEM;
+		goto error_alloc_dev;
+	}
+
+	ts->input = input_device;
+	input_device->name = GSLX680_I2C_NAME;
+	input_device->id.bustype = BUS_I2C;
+	input_device->dev.parent = &client->dev;
+	input_set_drvdata(input_device, ts);
+
+#ifdef REPORT_DATA_ANDROID_4_0
+	__set_bit(EV_ABS, input_device->evbit);
+	__set_bit(EV_KEY, input_device->evbit);
+	__set_bit(EV_REP, input_device->evbit);
+	__set_bit(INPUT_PROP_DIRECT, input_device->propbit);
+	input_mt_init_slots(input_device, (MAX_CONTACTS+1), 0);
+#else
+	input_set_abs_params(input_device,ABS_MT_TRACKING_ID, 0, (MAX_CONTACTS+1), 0, 0);
+	set_bit(EV_ABS, input_device->evbit);
+	set_bit(EV_KEY, input_device->evbit);
+	__set_bit(INPUT_PROP_DIRECT, input_device->propbit);
+	input_device->keybit[BIT_WORD(BTN_TOUCH)] = BIT_MASK(BTN_TOUCH);
+#endif
+
+#ifdef HAVE_TOUCH_KEY
+	input_device->evbit[0] = BIT_MASK(EV_KEY);
+	//input_device->evbit[0] = BIT_MASK(EV_SYN) | BIT_MASK(EV_KEY) | BIT_MASK(EV_ABS);
+	for (i = 0; i < MAX_KEY_NUM; i++)
+		set_bit(key_array[i], input_device->keybit);
+#endif
+
+	set_bit(ABS_MT_POSITION_X, input_device->absbit);
+	set_bit(ABS_MT_POSITION_Y, input_device->absbit);
+	set_bit(ABS_MT_TOUCH_MAJOR, input_device->absbit);
+	set_bit(ABS_MT_WIDTH_MAJOR, input_device->absbit);
+
+	input_set_abs_params(input_device,ABS_MT_POSITION_X, 0, SCREEN_MAX_X, 0, 0);
+	input_set_abs_params(input_device,ABS_MT_POSITION_Y, 0, SCREEN_MAX_Y, 0, 0);
+	input_set_abs_params(input_device,ABS_MT_TOUCH_MAJOR, 0, PRESS_MAX, 0, 0);
+	input_set_abs_params(input_device,ABS_MT_WIDTH_MAJOR, 0, 200, 0, 0);
+
+	client->irq = TOUCH_IRQ;
+	ts->irq = client->irq;
+
+	ts->wq = create_singlethread_workqueue("kworkqueue_ts");
+	if (!ts->wq) {
+		dev_err(&client->dev, "Could not create workqueue\n");
+		goto error_wq_create;
+	}
+	flush_workqueue(ts->wq);	
+
+	INIT_WORK(&ts->work, gslX680_ts_worker);
+
+	rc = input_register_device(input_device);
+	if (rc)
+		goto error_unreg_device;
+
+	return 0;
+
+error_unreg_device:
+	destroy_workqueue(ts->wq);
+error_wq_create:
+	input_free_device(input_device);
+error_alloc_dev:
+	kfree(ts->touch_data);
+	return rc;
+}
+
+static int gsl_ts_suspend(struct device *dev)
+{
+	struct gsl_ts *ts = dev_get_drvdata(dev);
+	int i;
+
+  	printk("I'am in gsl_ts_suspend() start\n");
+
+#ifdef GSL_MONITOR
+	printk( "gsl_ts_suspend () : cancel gsl_monitor_work\n");
+	cancel_delayed_work_sync(&gsl_monitor_work);
+#endif
+	
+	disable_irq_nosync(ts->irq);	
+		   
+	gslX680_shutdown_low();
+
+#ifdef SLEEP_CLEAR_POINT
+	msleep(10); 		
+	#ifdef REPORT_DATA_ANDROID_4_0
+	for(i = 1; i <= MAX_CONTACTS ;i ++)
+	{	
+		input_mt_slot(ts->input, i);
+		input_report_abs(ts->input, ABS_MT_TRACKING_ID, -1);
+		input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, false);
+	}
+	#else	
+	input_mt_sync(ts->input);
+	#endif
+	input_sync(ts->input);
+	msleep(10); 	
+	report_data(ts, 1, 1, 10, 1);		
+	input_sync(ts->input);	
+#endif	
+
+	return 0;
+}
+
+static int gsl_ts_resume(struct device *dev)
+{
+	struct gsl_ts *ts = dev_get_drvdata(dev);
+	int i;
+	
+  	printk("I'am in gsl_ts_resume() start\n");
+
+	gslX680_shutdown_high();
+	msleep(20); 	
+	reset_chip(ts->client);
+	startup_chip(ts->client);
+	check_mem_data(ts->client);
+
+#ifdef SLEEP_CLEAR_POINT
+	#ifdef REPORT_DATA_ANDROID_4_0
+	for(i =1;i<=MAX_CONTACTS;i++)
+	{	
+		input_mt_slot(ts->input, i);
+		input_report_abs(ts->input, ABS_MT_TRACKING_ID, -1);
+		input_mt_report_slot_state(ts->input, MT_TOOL_FINGER, false);
+	}
+	#else	
+	input_mt_sync(ts->input);
+	#endif
+	input_sync(ts->input);	
+#endif
+#ifdef GSL_MONITOR
+	printk( "gsl_ts_resume () : queue gsl_monitor_work\n");
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 300);
+#endif	
+	
+	enable_irq(ts->irq);
+
+	return 0;
+}
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+static void gsl_ts_early_suspend(struct early_suspend *h)
+{
+	struct gsl_ts *ts = container_of(h, struct gsl_ts, early_suspend);
+	printk("[GSLX680] Enter %s\n", __func__);
+	gsl_ts_suspend(&ts->client->dev);
+}
+
+static void gsl_ts_late_resume(struct early_suspend *h)
+{
+	struct gsl_ts *ts = container_of(h, struct gsl_ts, early_suspend);
+	printk("[GSLX680] Enter %s\n", __func__);
+	gsl_ts_resume(&ts->client->dev);
+}
+#endif
+
+static int gsl_ts_probe(struct i2c_client *client,
+			const struct i2c_device_id *id)
+{
+	struct gsl_ts *ts;
+	int rc;
+
+	printk("GSLX680 Enter %s\n", __func__);
+	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
+		dev_err(&client->dev, "I2C functionality not supported\n");
+		return -ENODEV;
+	}
+ 
+	ts = kzalloc(sizeof(*ts), GFP_KERNEL);
+	if (!ts)
+		return -ENOMEM;
+	printk("==kzalloc success=\n");
+
+	ts->client = client;
+	i2c_set_clientdata(client, ts);
+	ts->device_id = id->driver_data;
+
+	gsl_client = client;
+	
+	gslX680_init();    	
+	judge_chip_type(ts->client);
+	init_chip(ts->client);
+	check_mem_data(ts->client);
+
+	rc = gslX680_ts_init(client, ts);
+	if (rc < 0) {
+		dev_err(&client->dev, "GSLX680 init failed\n");
+		goto error_mutex_destroy;
+	}	
+	
+	rc=  request_irq(client->irq, gsl_ts_irq, IRQF_DISABLED, client->name, ts);
+	if (rc < 0) {
+		printk( "gsl_probe: request irq failed\n");
+		goto error_req_irq_fail;
+	}
+
+	/* create debug attribute */
+	//rc = device_create_file(&ts->input->dev, &dev_attr_debug_enable);
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	ts->early_suspend.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN + 1;
+	//ts->early_suspend.level = EARLY_SUSPEND_LEVEL_DISABLE_FB + 1;
+	ts->early_suspend.suspend = gsl_ts_early_suspend;
+	ts->early_suspend.resume = gsl_ts_late_resume;
+	register_early_suspend(&ts->early_suspend);
+#endif
+
+
+#ifdef GSL_MONITOR
+	printk( "gsl_ts_probe () : queue gsl_monitor_workqueue\n");
+
+	INIT_DELAYED_WORK(&gsl_monitor_work, gsl_monitor_worker);
+	gsl_monitor_workqueue = create_singlethread_workqueue("gsl_monitor_workqueue");
+	queue_delayed_work(gsl_monitor_workqueue, &gsl_monitor_work, 1000);
+#endif
+
+	printk("[GSLX680] End %s\n", __func__);
+
+	return 0;
+
+//exit_set_irq_mode:	
+error_req_irq_fail:
+    free_irq(ts->irq, ts);	
+
+error_mutex_destroy:
+	input_free_device(ts->input);
+	kfree(ts);
+	return rc;
+}
+
+static int gsl_ts_remove(struct i2c_client *client)
+{
+	struct gsl_ts *ts = i2c_get_clientdata(client);
+	printk("==gsl_ts_remove=\n");
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	unregister_early_suspend(&ts->early_suspend);
+#endif
+
+#ifdef GSL_MONITOR
+	cancel_delayed_work_sync(&gsl_monitor_work);
+	destroy_workqueue(gsl_monitor_workqueue);
+#endif
+
+	device_init_wakeup(&client->dev, 0);
+	cancel_work_sync(&ts->work);
+	free_irq(ts->irq, ts);
+	destroy_workqueue(ts->wq);
+	input_unregister_device(ts->input);
+	//device_remove_file(&ts->input->dev, &dev_attr_debug_enable);
+	
+	kfree(ts->touch_data);
+	kfree(ts);
+
+	return 0;
+}
+
+static const struct i2c_device_id gsl_ts_id[] = {
+	{GSLX680_I2C_NAME, 0},
+	{}
+};
+MODULE_DEVICE_TABLE(i2c, gsl_ts_id);
+
+static struct i2c_driver gsl_ts_driver = {
+	.driver = {
+		.name = GSLX680_I2C_NAME,
+		.owner = THIS_MODULE,
+	},
+#ifndef CONFIG_HAS_EARLYSUSPEND
+	.suspend	= gsl_ts_suspend,
+	.resume	= gsl_ts_resume,
+#endif
+	.probe		= gsl_ts_probe,
+	.remove		= gsl_ts_remove,
+	.id_table	= gsl_ts_id,
+};
+
+static int __init gsl_ts_init(void)
+{
+    int ret;
+	printk("==gsl_ts_init==\n");
+	ret = i2c_add_driver(&gsl_ts_driver);
+	printk("ret=%d\n",ret);
+	return ret;
+}
+static void __exit gsl_ts_exit(void)
+{
+	printk("==gsl_ts_exit==\n");
+	i2c_del_driver(&gsl_ts_driver);
+	return;
+}
+
+module_init(gsl_ts_init);
+module_exit(gsl_ts_exit);
+
+MODULE_LICENSE("GPL");
+MODULE_DESCRIPTION("GSLX680 touchscreen controller driver");
+MODULE_AUTHOR("Guan Yuwei, guanyuwei@basewin.com");
+MODULE_ALIAS("platform:gsl_ts");
diff --git a/drivers/amlogic/input/touchscreen/gslx680/gsl_point_id b/drivers/amlogic/input/touchscreen/gslx680/gsl_point_id
new file mode 100755
index 0000000000000000000000000000000000000000..92ed862edb14d9c95677f307075b6276db6bf62a
GIT binary patch
literal 22072
zcma)j4R}=5o%gx-P9~Gdm`or*3}`M8F(R;oQsAX1gHmgiYCx*dWzB>ne6$h95G}e?
zCLch^GixUyg~+DnD%5pd+D4?^JU;C1097bUUA|gbmTm8y%h_>}zAx?CUD~DQ{r&FT
z2?Mq7yZ3qSocli?|MNfR{6Eh*v*`<qA5auUWFJLTiEEG$rT04}d9$3PN)(AgaZ}Q;
z#M$Zp?ipO15@M-cAVj$?f_8}zei1UQijbDlW_G75MAFt=ScrC0y!q{q6x6>7^;Dz_
zLPABo`~@PZEeL6<5XNZK6RcMe5+gW>FWWwhe)8RZ(8j5Q_D(;9v-N;`q%1d|v|s*3
zhW0%tzMT4`en1MbLly&XpD2|7K-^)&_Jj<}Q@thCVmzEGO>9Z^MjuXTv2Ufd<SS{P
z&#-j7{-9w6s!&h7maghFtbAculL&{}Q=V9>oOTr7x{(fw$81kBCVk<K)GvpJ%R45c
z&yZm&6WUT?y-+R-;!Og-ZdeN1hJz2MJZPg$Y)xwu<LTd`%`$C3s-Q^$ZJNF-tp&SG
z&b<%yy`b5ncgtzjz=1qZ$!1fnj3r8S<y%U)qelm>Ujaw(ez#vi96Nzy>mS7-92^~q
zD&i2a5ge5}cF5#ioU<qG79q}6P1%m`rS`L+p-+sL%K%r8-7eM1n4?*sceG)Jg9|av
z`%=YNpWf>6QdbSDA7k#r*at&}a(-~UY|+Qd>d<(}xi1zXwYqIU?x`-6`>`f_QP)7-
zH&NG9ZCH7sE#@6lPRkYdwx@z(lrslk01xgHr>$at(q15{?OTP|)epRisJ6xn(X|)f
zLM*YL0-Xl>BF#_WTSfVhQFxmYG$ubL#5_fBO@%`br_`C-)5p=DI@7QYAU#gnFpqzV
zHbeOKg*fiV?4u}q9C;e>EJOP|;QceuLK;aQ*Jm(?F3_^85B;;>GSKy=OUq>7*yHx0
zyZDBp8M-F8bY*E#XZEMr_q@-b<#TS^yIoq4mV*aU1!9>Eo;$3BjME<Rq=oO(#G#?S
zXJ%j8vjj2?_^-exRVN-!UH<;JKO&D#121Z!R<kNNS`LENWU^3x`swh;dDR%-)0<Pi
z>dmRa&`+(&v(bKDyH!8Wum(f#S;^#hX$}ux%*9a(9Q$1yza$PFIA*k^e0p1IU+C0z
zIQE4OIXLzLhk`YL+&Jkuq?~^b=9zOlg!%Vjj0cc+`ZLNfKBw$oQKmv(iH~UqQh}$E
zFEmdTgeX@xeEk<+PE~yG;glaTck``XDRrW02lRGH*;d43)_-H3!lNMvx?$INyXErd
zyJc);w_FApRE`_A2)3C@_$1}riiuKt73NtDZ#9+J8L5jhyB>56#!g!M5<9J;uA}yq
z)<Rj-^<(==_jtK4e8%#{)|h?10&^eg6hHJMySV(Q?FrVI-QAU@FKE~klw}t5^f4v4
zBt=@(;O4Xk^H_y>`32xTD&(hmKvr%^ND%=&`gWNwmRe&$hY&S(DP-5Xu*>WiH6R1v
z4~}D>IB5-5pSJcVPntzfy=NC4J8lP(jb?u!&)k>H$W}4(glIAo)zeG`{S|N>#L|;h
z$&L&EdwBR=C9);u7mq`Kwx=x6!M@0+rRb+)cDExlb1`=2&jJnc9o@2XO1HdRH(p+P
zcD%gWT_`yhViIJp+qAWqVW|sEM<0u7!_I?VYAxw91Ho2@W-Q-DEll3+mRi!`Ve)pX
z8ZlZ)AM|*4UestsS*stkdeH9Ipi2SY`o&l5KLKrQ{}K5jvN`=-q+aD&8<XUZOdOEQ
zy9Z?6k~YXPcpYQX^wZMR57|Mz4LbC&teX8TyxZg~)P-!>m9yJqR({l(rhRG2c!#c!
zW)?~feCODfi5+I!M2rFSQ9d|^0Lw%VaJ0jQEwKdXMP4iP9q5MrK;7SvZmg9bvi#HG
zVL#h^?9jW>#$5ZSiHB3(nK83UA1$wzKwsT8UiOThYzDxu7*AJ149I+x-wEA$8T8*d
z<*>YhdP=Ml>sVteqUPjotl<a1*$_nCiI{uH{+(k_LyvArT@D^}bhA)ft$e-BywiJF
zwvld(LDO4J_D}lNi7}Hj4|S{Z3TXD`jFsgqt4g$8Am9ERePR4!xOlkuMi~siK0kO6
zG6vl=^gzE%Jl`)xYi~L)vehL2h}Ny?5afSWq)^`L@bzQ%eDD<MS@S_Wr9}-(6MV%*
zk2N5*NPk)jzl!!-%t7O4*1p)!EY0jm7eoGvzk1Am)$2E3^?A)av%~yBq8H^qM|pRq
zeAkcdSO2=we0B9ylf12C41N(aJ<+XZ8si8-uN|t!d|^KFkpJoM@W-Jb)&RVfC$>7U
zpbicj?~D=R-3=koBbHg<y@T+Z&I#Bo_&@KAM%i+wteUhRge^Qb3%Et7M-I<EY!}Zx
zY<uRmU#BZY=o-&?9wHxA+m%jgyaWDt3l`7P@m_N0dI-917>INAT|eeJ)H@)}m9IcX
zAGg1c`MmHvzn`%8;=8Og<2&pP(@*J6YkEhT^AN*4{0`&Khn@Fo?0bp52{v?7D3-!p
zyiHm#j<*k@Jc)9>x`Q%lMWB!13tCC&Fdg5NE!br10N_0E>wf}g_3T&RPrM?vyA5kU
z)_H#fb`ySu61p#?L>@?Wt{;#|<PX6&H~=1S_;4cp8ijN$wf`J+FW*fa-DTdf@|2{l
znX&@yBV!$#v)<9cr>uSYDa(U(E1r7D9t5s1d@1q-aRh+_`pxp`#z{=uxkW~|RAZ~n
zUA}<1DHaFK%WYrMc>8$$7U<>HR32ov0d3S6{2t&T4(P@5A*`V<xzbcnUr8G8B*7c1
zSZ?9_HTJD0o6HF78`KAxego(?;P%@PL%)$Gv(JluBbk1^?00vU)2|}FVl867NzQFf
zznC*Wa0}@7Kyu5q{tfgW>`i+?gC8_--2$L_kaKL1o(^*q@G0VP%NsOa%NOD;PqJSs
zk(K6PvQX{_d<GrRQ95X!!gdkLLT{RQh#S0Dj(M^sLKc~Fez=}OY%~3s&lN?nluzJ|
zkw)mEnDNd5(6}#n!Wz_1SYA<M`D4aw6UV~Go?=+O@>VM_wauz4H>?#?LARc?_63uU
z|4jX|5&ezmVf1$Zyw5)Sk+Of%=Z$^Uq(3s!pR*=47W&St3Fy)>mp;_xns9A6N8|}F
z*2e3uO=Xg6v(o&`IdOU7AoQ~eJj9pf3DV&OKGIeVK3@iYCx4UQ$<yR{56V3T`|p!j
z2c(oI_@JP>M+jH1bV)swEq~1Rih9$j1D|NSTSpgNG7KE~IXLzw$IE`VJdE-PaAe9K
zvwg4$`7R#LQMRuL>g8cAd`4I5pE1W{T%Ga}gkwa1yRl(|p3xbVQ+nib*b@!o)v66^
zK@_o11apZw)T(12!Zw}L!rf`=N1*ZNBh@0YogVng5AZu0+p55R<%bugv~Vn~B;&9l
z%N-ws@ziC+ivrJTFe!CfHa7J^k0$cBOQRThZXK3~vau^|Zy0l3Js^i*8y)&e+TmYp
zHYqRk9~_?{+3MIT+OAu{TeQP*w4wbCOpL>pqdstDZJQ^Uv2CQ&2Rd0lg1LZyU{zJO
z!A7>Fl@R<j@J1D6V}5c#GREWh&)gH2m9yhx6!cG=pG=R*%lE|OS-j`*ns_hZ{Rr<R
zydjLM7vtu$C?G@!g6mwpJ^^~2V^oA;{{w7N@E@rUG54TF6^2!*w_l*m`qH03rv%&6
z@LSUg=+Z%#2l8k>HQ?BAU&63sJ2p$@6~pdC>H&P^+nc3^^eWN=yMQ->xcSx1^43=|
z7hQ(!j~aH+FzgGcZ<G(nyO3Y@@@8oQu6|>)T=x8C`QX~kGQMTA6i9t*-;)J+{df!U
z29T%Yt-@Q1cLLr@ywmUoU*0T3FKw2yzPDM<MLHjOVZ4j*dND3<HP*bkHO(=^AT#te
z@{m6P;}KDmMKS*<3#07nwgE{S=JCVli5OPjOPw-~H-WbouQwV?d*IhbU>8rgbxYTE
z%Cl>L3u`9uz2IwGQXZs7k#`kseE9Y@Y)L6i52RGsssLae^AkksiFV3Tygs~TcmsGR
z;0@x{@qS5xj~?ljivMx@K}AdrMd9Ow3uVxN?F4=K3Bx+Seh2z~!u}%m9Uv$E1!9~%
z4faff?wrcFAh9iV33W*KjrAtE^>nu${B`Rh#;-(PNMQ}{MtlhQ+;W(HKqyft5i^vB
zBZX4=T1RRwQmnl-H;fo8w#cDJ2^)w3#6<;jL0W{-C;j3H?1zYV7a&hnK@a>^4|Ix%
zW@uUf+Tn+vD+n9b(Rz%PeF3+oid|O;2OhVDD!K&ts{mux48wY$)v*2})Cs@Ni@lxR
z^wwt$>o>r8_Z-**_=UsRUzq!K!`cKH9ggOwwE1T1WW1ZuSN=w`^>)0BPx3?UrVssT
ziEZY;W89%AY-Gr=3P7_;{eyh&Z@>_hD|;b_G05Sn0jwA3z}S7E-n0_k3f=GozPF?~
zF39h@YTyaG0C=Fo-a5JyywtkI6ySf>C2o(=Nj-8-gt@lM?6X2ljeN6T>I40<|BC~%
z?EC$4!lr&{c6#L8SD^<`R)w<Aqwsr;xSaJ;TuwusS*TOJB`%lkh|9UCGaq%9fxg%q
zaoPDmT*jY|%WAY)hI&{2A}+6fJ1!TaT@C6kN8P|9ad`oC#P{OT1fCH3@?vZvY1k!?
zJdj!(+X)`snhL~z<mg%tbQty1<@dqwSnJEt#i{$gxj3clU7Wg-Se$bB6Siu36tu$T
zfWOlX`1VA*(oIgfE#1Nt`p^??PkX=%KJW$Ouvw_z_W<ysZ_=<4d>@Fkr#II1O4bWR
z+R|*N1eV+Xh5AiXGBQftcs_YwYU6!9lChB%jywJ+_u5G7BGhA@_#wAE30>g&t1Pc{
z%LAj`a>man52O91F&Ui~m<=6|dRnsEDbqsTX%%+rquXFt?roKQkF?782dz#&t4Hua
zR{&20c=ot>9=Zo{Biat4-Bq+J4j^^~ZO3nDlcl{A_4@KM^q>DDbsA7-!&fqOE{)X5
zjDdKn+`el*Hz4PtF8kkB+?wh||Lj|oX2+eOS1HWQ+ceZ=c}%pWV&kA=j_g3(8cS<Q
ztb;p$)G3z`570+v-LrEPc^>a4l>;(V%~%EcAbejcn8e-=@MytZX|<rlR?5thiFmbO
z+c+)QcSBwW^1gLLUL1L^+>jR=M>>2MBVzUuAJ1d-N;UA5{VVthLOf-cpe)=lASb{-
ziGcSv*7nPWihk+eU|6dG=Rt2OHQ2)~gTD-T!=wFj>YLDOkckGso<74OybLnM`d6`c
zO85fc4S>1dOE~!bxZDW%>{gFce*UjKat~n2+U@A;HuNzOeXuU&Itcuf<K?K+0{N_d
z95OgIE~B8Y3G~I#?hf=FLcJ@uK$f45!w$t|=|Eiez8sf*1O0OUqy6$tw2keE%e{c}
zK}!Mps$@Ip>&jlknvXP;fPaU6h7$#;Fl2l_U;}*+UIchJ;YmG+^iAN{Q=93x3@~wa
zVw|KS4|K;t-yqs?43&!wOGlkS)ZzS<g3hzp+nN7JTn?eH1E7s_!*O%`#4!PMPkTD<
z=$$IGt$Zn?d)l8~m<q>QQ?MV_(2HkiljXZeUHxEr0CRtla^J9YKwgS%P8|<#P7S@}
z)<ybRb))wUV4t`@y@56-+Mk{axDS1LKm+wm#}Ze!RD<`STO!bJSC(XCe(oXc_XzlP
z$#10v@g!pxN<jnLd0L>G;0u%@b#xPb2(%BPJ!xc}0NREZ8rFTa9VzZH<vqJ2tyPQE
zX6#|ic@8%0(T)^tQviC<v55<Jq!sufv%Z3M@I{8J^HPE8jLu`sv{%W<<NXs2>!Ck^
z?+9I|9t2KZOSK_y{v^X1*430Y5q>e`LJ2%(Ps3gmb!*E^tPA!}v=H_<0&S_Q_qI8*
z>6wzz#hRXx{jA;zq8(+o<dOSQrCwJ*2-pDN<#`14X27jO{ZRQpx7_nS_T9p5&<`10
z+z+5%%lWtxgH5aMO!<t?R4~z*3RM@%-+VfJF&rH)=NjW>D2CVzc1GFTg;=A;3P%f(
zUntYRA3jFEK!xqCK>Y^SKTu$sKQs)x9C=aXMWP)k`Y5v^<Hum1$-jE{4(SK)k^dg@
z)mZ-lo7{xF0Q6OEK4OM<^WpPwj(!DvUf>gWzSL7$z&K`ckr4fO%Mh6OIu?pD?3E0o
z^D7nD`9x5>5ik54fjv}FiVd3y<4_m%bp(cGfVrPshE1Lz@@`7Pu4dy6#2Ac2yd|Uc
z+<Xt>6!RvWC*;H^*)yuW@ZSeTq1+Hk$XSmdh6s$t9%F~R8$Owe?-}&vrj1Tj&hE|o
zWO_%QC_<gjk4B7PjP97-F$QnmnK?mO`S=+*7=&)tGjU4dnE`obj)0%`7298J>{j8o
zs4?h7*kBEN398t6q&nICUX{`Pp70q514Xfeej|2}yr9Ome5e{*j%4>Gx!ycqnl+<W
zChox)5i8S=s&>zY5SElXeS^11`-V{K$R6n@(|euzKS6sT4134b;g2yE`D5tqxifgi
zvef=RSX-Ve@f$MXH{EaeZvG4I_rKxW^UDGG^RlO9kq#eCl-O;cq0+lu>ScpgI$!ut
z%o!!kjRW##b-jId+Q56tUB=-PbJX{a&KZZjxFuHDC;VrQjFUeCd^|l)?vKO%hw9BD
z>_;7+lmCMgbIRn8j`-vz$euc})8t$n7^gaOn!Md7kB;-n6LWl0Eexi{_(XX=WC5&k
z?slYLhhq)>1M<YzZ<Yu03NV%@Y@ENP5O2S>umnE6S!a60(~N)5UAYr_2Xmzz>~UmI
z6Hi+K>?tBfIp&Fe5pC+6xW9Do0C4$bAOO5rV-HfU?};Npxfpw~T4;rNdHjIf<eZbX
zng_;>#(1#KCD0YnBiPq+VpAv93>r3h0Br7@kK|(xH7k);4kpqnc%q1VRaWeXb})8?
z<L21V?j&UFoDyvV3?DmWoWxq4TND~E!#d9N{v5hTZ!_luJ}?GzjPJSl)<SKjrgOjV
zG4}cP`P;|I`)4jRRm?Nuh;xZ?z4AfK0r!m{XYZ;wKje2}T$?Non(rX}K^btLMLW06
zTZ!9yW$EWLyoWY#aeU;L#O>`8d-W>PJo1$?Z**#Ro+v-jg*ijax<7{fL)c0U<1Gl1
zZ!m7?MeJug{!SHWWNcXZc!ykfW%%Q_e>eQ`rF(kin}}ygzcF=Sj1szk)TMjc#+(H&
zvk#oXTEPXq5_^V+FHP_M>80td@3C%ep72M}uC#)CKuc^RSSX)Do?&tyY^kl8hGLl5
z$BY^FrJK+me4&Io%)O9*o|p2hm1l~q%l*>NgTMFbr>(&t&StQ8X(YzWJ$j)mo_EmR
zV^FsuR?@ebh&^yVzQ**Mc&oRWeW616Yp*!gFUHF^F@6!;Vq)!_xRN@+BcRhKb~tBq
z+;8If9M>Fb&%aNcvIdi<oO4zIJs}L^v|<>D6`$t!Zu(w4Bg#kJzUX)vfL_nm2_Oc_
z*7*dnRRQLNx+BFn5ImNTzO!TgtnnVkI&e%J5BY8{c<j>j4##Gd-Hfv?=oU@i;jA0y
zsB%g-_EFkKRZeLg!*!%hI)gPLZ+zpXrFO4x;0K2m7;h(<4-TFIo`o~(2TxQDd?!{0
zzMa`V2wS+jJ#^pTnS0v4qa>lnAzP2uE=*}kyBSmBro+DiJ^=6`?$gKzJb$BK%zkDa
z9gx6p^|vL>@J#H<&1^RxL>_QD`%4)-t>(?x`^?}%408i6?i~@=M@L*-J=buZN8XLN
z?)o3#deg<V`(E;To0$*);Xpp`7u09ya`wR7@xk{eP2dk_e7ZY60e!Itc%TEoqdU?n
z=A-zo!?u6kVVh%77#Cx0t7gZXHQ+wiCm0LQ3oEB|$UNvnb><e6c(@+S_XOLW_;~R+
z#M)`RUx$oA59TEddkOSX1m}cWvInx+hPhvEKL#FC^ixvD9e`@sm<IYHdfasK^iipY
zX&VL4%B$^-Ug76CEoFN->NW5?8OJ_p%-m<3$63z_D}wyuw~pD|`)Ap%Z92|9&s*f@
zz(M$gIJ5t=e6dUDP3G$uH_ubmsYdrCyiXuMgFlfTp3-I)SMhuheR+Fj!<1h6PAp-)
zlkBk~fSvOu;OzVHB=a4S$jFic{sO*-ykeKCM@H~J3pk5+(iGED@e*$h@Mt=8^BrzK
z=!5gZvGYzu4R~J@J>wLAY_ulYoS2C+09VGpoOMNyGcSLQH9=jenQdwKMHg#OR;(s%
z-lIUfG-1|N3o`Hp)R_f6Sh<CEyT-l?`dTDmtGNFIU$_A4f<4cZ*o%5Afc=?#=&w6x
zpO%yF!ubkx2=9R01UiH;+LfTu4!>a+*O>a|&MBv`N7|m6q%N`GTlwi<@ca<I49ek;
z>!f+9U5IsMy=-}Yw8Ok(_J=YoM%#DJ{xGjNsHm4ihc)G{cID35NAk{sX4nbxAI{5L
zQ-zLQiKTEqp*)x7Q}7E(%W;px*WdxJxwu&Kd;&4>&UEppgSL8Ws|CBAW*+&L`GufK
zEpMegcXSVInE&dn&@<=<_OPpFY^E;jY3@D*bp&k%Wd(Oa&QT7Qwa^|xZ$lSfHy`lv
z710bGVcgCAXv7PL9lgwXNbUeH>;x_MrTjdb-vc>52>YJwODFQmo$pGlA!U*J7V~ft
z=atSlowdan5szc5>m=kT$h%yA@~jp~q$wNpuT|tJ;)GKU|G+Pjt&(jShm)sxzJ;~q
znnLd3UvSP)t_aLu5cunQ(i-H4xB^C-30d`vXR(%b%zFa+K5b@Sv`{|8zMn^omDrgM
z#I~aEC+&XNr$xy3BG2pQ?LpoG<n>{$_9f0jcF$SGIG?3l`Ea+zK>3>qoa2E9_rNCZ
zi~Y0JkCf&668~)NMR_sqTI@w0>(9pg_u+dG^#&8bg?hw?GjXdAcu2!N!1cq}PU`^f
zYp|R&5C`!S$LF|)`Y!oqbi5p%atQK&$j+~7gU#rYH5iitTD`b)l`Zq3%&UWsFi(MK
zPx^<k9_#k!VgFv-YOQ(^XF`AjQOMu>y=d2;p2RaRoOi9jS(jIjJMAa~TvH`!bc27o
zUxO?uq0BntJiLqi%k!=`(KmeqjtBB~ZVzD2$G+HEi{s$@a2(ljb3FYRH+<^1hS0tr
z^*KLmk9!8^4qzUB7|qN>@ry?==TBJwg1Udtx~La_4R=pW)DLxy+=1E$A4N&N3?7b~
zN$>^F@dVEBcz#Fv_5}}HgY+#>kLT6OF~gdMm*>`O!x;I-c7td`p5uKOA=;!8doabj
zV!!!4;yL7z7c0khK*q$y%CQ+eM){}gkav-nhjPa^pghL!?UiS5VSV1~g6|I=OWex1
zV~Had7pC*fy4g9Sa^f}M`2zem`UU3nb}4kzzJRobF-gd<I~eadvOxXOlODoaL)J$8
zO6s-<>!7Y;;7$+f@(gW0E{3gIxpF1XbrOJiuEYBgJhNwPdH{Ln@%G{6Sw7EvIuJdr
z=8HCAq>NSB>H^A>c=?>4o{;5}4_W7Nrj*s6cVdj>K@Gm96K_P?OxjlXSN;R<gYMS;
zw347NP-BxPE+fBuJ<cD#osdSf5Iix?krC(oAo?@do^dwsL%gl`SZ^o$t)dqX*+o;~
z59%w-{wUTtiF+5353L?G-z@&>`;M;|NUk*dH%>AG9}p*f#--NKl*H!>B3t2GU{52~
zHs|~^vD>KcPXo7z;2fp3LT<smHLlf@8qb@zAf9>Lu@@q0*ipnk`G#TjCLT`p3!GiV
z4BLnl$_Gm-q=K`{{0Pq*4Z8?)Up5*%hWjf$Y5+0a{iy)<2EcExDPq0jGj5z%A^Vf#
zWqzp5^x&?75yE+avJD~SQ?Pqao$L{s>BByTe`Y)lnR$1wQX!29_Q4Ue^DIKw#IZmS
zHURO>EgIq*j4`f{moZVF;=E{x=X%_8*nH^R7|wsAp+eaUx_g7bgR`7Hn0xxf0(|0)
zK|f&4{Lr8NlAg2|bdg6J;ZuJyv%=vy5AFaBf#-eA6^@?v2D?G;V>ruiOVbbL9QZ*$
z_n3OY_f?bF?lD`c!oOV;W;@PEb}wi*4?~8A#`Z|Y3}T{T#X>Q259m6e7dm$@xE31b
z_KV<M1$U$9dwdCYsSNt+@;7>Az8FOtT2A?=4k<1_2>bP<HBlAw26?B9z7^nG0IL{V
z`SV-RU$4CUjSi_M4EyFC<IL&cQOZa88_;J4?#jN=E30Ss%3b~<bGtpwEH*RuA&PJx
zqTd`Z7atmgt}!%`Xf=z>apr!r5c&^yO;zqgbX(LBv;)N#ai6LD$M!BoF}D{9=$HuB
zg1&e)Xf)mqD~6R23i2~{>;%TlJE6SWa{&Bs0&7U0kat6uU|rSF5vw10q+boSTbJ*_
z7{HgM;7j-{{w>&p-vV5mXMuZF`!M&H5lgau+3dqswl3R2{>rHrl3Hdxhu}kKSi{6;
z=#UHb6>`Fl@On@eZJau;uY~O=fA3iA;p^o0rS$*G!<8<N1V_oC=V8a`$3$UsA$MA|
zHSOpn)N#s!`y|Wgo3f01fLXf_U$Fct_Iw&<L8gEkx@6a_9&s)jeb_nQpzJZO?vFxG
zB;gC1*cW9?t8|!3U56=(IVLsLio6i!+P7|p9LC+>*?>1;4Kxu?i-37>IH;s_q=1iX
z0-tNam($7w^Wa3h86WKBBizd%U68+W>KXE7L5yc{zzZM5Irq~I>neD?@jr(@<{d@K
zK_z%eyaZW79Y1g*-K}81!Gm$N23yU$!1HrJ59c)>bTC$8+};O1tl82l`@s_$+QM(T
zn0OEK06$iX#?xDGIwiv*W^cXekfhBaZqi2|hdvMWtEN+b!Jn%$6d%rfk%Hb1bL;dI
z^7ZY57V^r&kSFf(^%>kFc*@3oF24cZ>-b4hcAy^ZtqS?s{OzRNJUzMDtD`;oj=6nn
zf_+rmTc@8IGikC>qUh?VUph1_wP9w;y-C(TFAZ(b@wr*Q<Gbh47w5mz%tIaC2UHc_
zeb4%Y%Wdq>IX+<oKI8kCN3H{WQwu)!xhxIY@p~g3=H~DIO!_f5HMk4Hcp?+SRokb4
zf9v$0Idc@oy-Lp0*6Hs%I%_}ho_M}OURaso>wK)|5at0qeKCF;_w0Jom#0+7&i6)v
zzi}rXd;UtYEwwkf!sOojcM!wDzlUz5|4<D-Hhc*Eom2G~_Mf^&?C?)9A9IgX$i!_E
zu$GK5me}AUf3^?K1$kX5X*HW}uRxuy^y+b_pH~9E8uB3$Y2F9YL`HTJW6EUwwldVi
zJvq?$Q_NrIPVh$3u+L9_MNXJH%6#?HVSmloS8%8LwDm*LZ53hvrU)^Y&{vpV@Ez~s
z_Na=<{T;?)#q$n9XVjb9M^7_p-)Og>m+T;HSH5Grpub?dV7sx0yVbE>^l5kpJ|BCV
zZJ!RGGr+S-;_E4#so%W^`S6d>ANblZco+TR0WWkB^nsT#agukgpcCMO4SSO|eX(L+
z(hm4y$lsbCdcRj5aO(D_=?m&!(BY3+5%_Cf$gM`XgKi{W(1tVq_!(k;-lZ!L;6t%Z
z<GjM3EcYZ!Fo%@C<(Na`Bz%l>BHHcTAwW!eY#Q{4I&mBJPqvwhLZjs(F-r2D67H8^
z>~&b*dfW%j*w7LEJf&CGK(BiBw#<Cuj^DoENk><6uZ(s`gDq2nE6i@#JL1dL?;IcL
zqmJJMn?QTu4fdy#liSSUv4{hw;vO2_;xc@fwOR)F(i?<djy`Fdxu!pa4@BGG^vAUo
zE1Z6|!`8De+7Zq-`|yT#rr8hsWMAxucj{I5PQ5p@HC=*pimYtKMAFeMkZTFK#yqR3
z0`S?^n|=np6SOVx7xl$2ka~{M=XogQ#~w`$d^-Bs?<C-xfhOAWB7Y{1;hskUY+yp*
z-Z}O?xYtMfTs$>ttJw3vx`8Kk+?}YlH-Gp2Zyg0aiil!dI6n}veK*S09avk&o+0R5
z?ulZ-&l&S7q&fF7*o)D20qn7Wp5F6fh4g|4d1ohYCiUNGjA4{xGdJIJ8a^iOqcNVD
zxz$X-x8|B^p;OpX7-X#J58aCR7rspx_$l{1)8H93bY=Nqa=fg317{AnKVkir=R8a8
zh;EG5bwlHSN_PJackkZlm3^q^-`!+F|M0G~<D1O?%L>WyFWd17{6FY?)G0XJWK!oE
zfa$lK{QdA$=Hp(c^*3%i$In4Kwpj)~3T$6v(to56g8dQeHPln1Tj3vdIJW;sh*y$-
zlhJYejY9Cf8~=|zB`1!;H}>oA#5d)Lcd+RP-#PY><lf*X{|Gycejdj-$b+50rHE6A
zrw~hl=gH?m@B?{JNf_1!*pyPtSFmWOR3SSF=$P8+t*Hf&Q+0fIN)^UJ@ZXXPQ+CQ_
zV|U6h<eI)I|HqRn9}_;<DMbu=19)`c<9v{p%=dT7YV1c)hxQ@wP2`ckDF+A9cO~kR
z$NwJR26WJyn3n=kXHp+=-VzGvxe4?j-XlGvg){`v|0}NCWM#bSgN*DjULpQp0_QZ)
z!oD#H<%@2`x&kNecUnrU_0)ra^`BHo6}rNQbyi{vPt8XjY=fnU)>C187oZI70WUmd
zmMw>EEwORmH|Rl%|Lu%XMI^|xC0|TOiWe!)$E=p=6;em)!`Y)&6f;%bhx3et`4sGk
zUS(K=G1zbXHzun$Cga<m>`IjeyHa`)z9)9312a3*iqe@L0?mHNfmeSeO+S4#&M+Q?
zY|{^a0qaX2mS+a^W4XTj5<j=LD@7)KS#9(}bC;$6fgigV?Gl)y-cX@zLdy6eeRcRE
z`Q1al4Z%MTLRVq`mS<s)4-ZeJeHfkNkC!{V^|<{w<hJJ33c2`$SDd(j|NEjn8jCf`
z#8LT<Ey|}Y%88?>7r`^m|LlB-TYT_$xK?|=2mO>lT!T2K1pdI#y{>=i#xV4o7{7q;
zo%n_RDgU$JM@;%pR}rTIFL4oPHWq^2@L&C)LY|-AFK@0IW#X(Cac)1(KxuD#Eb0*6
z`=$;o!W;^$JN3an%tN=Lng+(yk2xwXr|mtAy#(0a$=7V}&HoR(OTUtHNxQ4)#%}nI
zyD`Ua^<myMo`FFBAYaP|PWpndkx-3G`JWs=_Xy~}dU0l-kG&Dz`JafC_x=^!`^Wg4
zeS`zFZK(4@@B;0G0z1JusV84yUYvTMV=LC!(LLao;;GQ({ts;0A=;onuzA4g*dp9_
z5||(I>hSx=ZO6_XJ#MQ<<CYium;XN-my6r6akE{#!R-!S?)|9P`ysvD|8eNW-P1Ve
z{Zr7(y(69{#b8(9SHDHwK$#cN6EV%Ol7NYqG7mo&cOGCf1IF&+sXw;&Cm<J5wto^f
z{)p{gZ<OG?G`LGetcZ10lWWbQ#0oPJP|QR@z(lz+EHd#U_Oag{PH=x{iCtv2nK%!8
zd$H$bb7ASr=4%zLrcoR-59;V2`kC=Uu0A9!oIAz>h|yt}44B~Ik9o(MWz<pm&>g(n
zt-vlThVc&dAN^8A81Im`732O>A_TwZt<1VlMap&0hko*7?G^FG*SXf&|JfmibnHhX
z=IjLSdF@4CmwwVN=fTchfDWeq&g$;0&a6hBh~X|0%Bj<-Q%PsvjGgl6H;<x^QFgL8
z>G&<N+XlvfZ_D3@o!{^+?1#Zd;GD*~jlM;)M+VBUN9U_{?l-~LoJYM0|9_rmq^!m%
z!yfoN>R`xZmoL_Xxu~)6AKDV=%M#qxDEZ!}_-`uu2*RID<hRS;Eimk(I9ESDN0ld#
zCaw%$yo|eLgIrhWnM(Y}YC~wN{N;bap2L6T9x2ax=!2@R56al_2bc%vYy;;QJoCw%
zAK}agyzTfmw2zK|bI6V-xn|3)^N3*sI{Y+@Q}r9&*njN)5P8`%m>bV_B9K>};k*N1
z&+*e?XTi6?Rc(F9vke#5U;K8sE35l)&H(dNW1ar}@Vk|;Ij{dyn|U1l2Qs?&m<m3}
z99jQ}doawK^(p>W2ly`d@b5zh7sLK*SB9N?1<IA-W9H!j%&B3Y7&k#4$O}lHiTKsM
zOK^1Z^>+z)m%+VD@NNKcF4x|$d4J$mv@LSx^f>QBn1=nT7BG|e-uq8+^EmkvdN?^J
zUrxI+{O$?lZ%S&Zz(M?{5%~wk1tj-eljHJ%D_{N{)}|PHr3Q3bvAWdWfjQ(E1;4pR
zYTnYGhkeq#cYZfqj`t$>QND@!m<F5vdPSRg5OPGHihEvO#0|9L1;Hl9an@$cOTQyK
z%dI@j4cls%n@yM-UlIJpTTjcv8K<THgVQn=sWV>(zcXf99Krpf7|sQf*as9iR{-w$
zdZElmxe~!SBVwTb9^5YtZA)kE3-7`H=D&yi3Fxr=5cC)39)6cU@;d%AFlCoKFm{*x
z+fa}7w+3Q3*oh*XALb)|(?VZ0`5!sParDKuYpR)v;}~~DOvGT;_Q^A_&Y4*5n(fT)
zK|YP~U)zIBqJQWo`)~E_I8$pk887;c6;6D(%deUA?+Wx4X3t$y&8#gBIB{W-V~dN#
zQ`i%Wzn0z8+;5R*;%0v6)im`Q$CcC#Yczf6;QcAaT#B;I)I|{WmRkA2myf{L25<6z
zZ}`6k)`xp3QQ(Q<Ka#ERQx*MX{12iY`>^;9ZZiviJ^b-r@cJ|Z`#|{5W@)el`fjNO
zeel+-g9C{9agPKs6ZRl4Qig>ez7x(mAahpsoJ8Q91ZTSG$!;CWIpa~rqAFrh%K3Mo
zA1d*mbDp;qf;Q@ikFbY!0WbHq$AiBrxhD@BTQSMdz<&<!jrrZMe>BQ!&{hO9cQQbm
z|D#(nb-8bY_IV%O(hj}TlLvfxKC~gun1DXQf0hSDZ)V*Y-@%?YF+bUh^%f@o)9mOM
z@CEM?ZP%umJYyL49EJ^EZvE!B!@DL2aMl?b*jyAe+b`VGzWFkAmWsWpSAI8qZZT*R
zcz74>DqimC^K4)*_WS#Bv55E1F5vs$@UB|lR9n}ys&-97?K5?2);jPrb?d)Y+p?x^
zU3AUbRZh<Hjm_)VtXqp(4!EeUrS3~>*R(jmvUShZuYRPluGxW>Hb&Pqw^TPbu3!IL
zb0ev^_5|I}Np3pRO>ySrJd64J#ryA{r&rattX(yI=8V}hX5OLCnlWp}-D2S#D6DI&
zTd_tc7>~%CwM=+bpHiTV@{}rLlyO>_a<fvd-l~cj>tA@LrEUe%mgY>lI{Ve!*fgW1
zaYKuk(SR|C87tPW7qzut%QUD(EsS`*n1N~|xnf5Bx@VqgT#Ghq*R?dx_~Ij9nZCZI
zuKsIc#=@mvo>A9=Mk}6cX<Se0|3?qWSMWkVInONo_AYb*B(R;%gY#VhKW5~qc}$2H
zgbDlNPJ7lvd@F8qVK{@%b2JARGuRiOJMpr9ZoSTOmSmo6zafBZgRY#1_-fs6CRuzB
zxZl}&Rrd+Ow%I3(582m^<Lp<2h#-&S;2dPfQH^in&f=&+!<zwTAC~cb(oM7Z&$5G@
zCrjTN<YBDQY!T~C%>qcX^$<IZ%n6JC67^o-hx=sfF;%mfNEdwp$T6W1Bk>|$jw6Vd
zYnGj3e2V>F7UH!$er294zAT(gbMrmoSHszSrrHR#nOyC<9$4;i`o7i%J0&h~0I7=h
z5PQMz2_Td(CF*E)kpPqSvpMiI7w*7dvh}OUK+cn?zdQ#f9}{lEK(h4@j4*Jf{?Qzm
za!+_!4n4g4nt3wyC*;7Sw>JkSz0`4;Co`U*9GK+?a^MGD_yW=_eF+?FWS&faMh?vW
z&Wy-MrhFQO(s?rdg>zu`w<rf@`{g+>%Og3kQ_dgf$>1N#f%)0A&@KLh^~b*{-6G;u
zM4o6y%I{Gw{4&x>csV4N{}oc|T=Fa7zemb7;1m(YKC7S(Cf^XweKbhw2x(4%SNw-t
zfh?e){3fhBzq9ZifJsjlz7H_W&<Ok_U_A$Z7I0M#e0_f&@iNN!kVO^zz5$runeltX
ze!z%@N8m$%D*>ajQ~zHG<ITdjOX%FWCKBQUQ;13^B;q9O2h4MI(nPovaCJ`kB*4pZ
z;1J-Noci|yj^&g;47ei)#(s$C%z^6x$8+Fk0rMO`+y6^|d2XMD<ABYa`mX@KkORK~
znD^3SF8%ufC-Se2@9zNj0v>e7|6{<s6OhIKQ^02cXXoQz0iVr*{|)f@9QfCO%^X;T
z-k_h6ZC?WTqa1h=;7d91bikK$;CX;Q$$=jLd?g2d1n|`y_)h_onX~<^2JFd!p9Ad6
zfn$IJIdB(X>K~swUp;_%KR*la0<7o2y8&0_z<U9Q0B8Gu7x1hc_z>W^Iq)&S^8si1
z_cUPM(+Io$V?#~EbL#&Za3Tj*(Gm4ww!cDr^yR>1fT<rNF1{+jS98i|u_2U0w*Liy
zgMhQ+T@0B2VPFRN|0%*SB5X!@B|hj&#$5Or!1OP(a0|;J@L7D{09*+eiPOFlA5}T<
zcEHne-~qs)9Qb>HXXU^{fam7GKLSiYmvT({J|GPJjl_YGj6B+P9trIysl4{!YKZtb
z8@dnY=;IsU-vXY1`HZ1#6nY3iWpciC7sell1?@>3!3E222Tc1x5(&=+OnWiGg&zb=
z`!H)tro09)efBDpmtYhPfO$_R3qQ;DaH7J{V=RvW<{h4Fd4lx;>u!6;L65Fmv$h3}
z{ET{0Ststl|50)Ox^>MBYu47aG~U0ixw)~vMN~G3YF7JFgLq&~Q%hs>qiY*8IbUd4
z)##u>ywKc;uz^tkU1i79uDvmuxW452xZ?V<oCxFkf{|F``s`~_$MyL)#2+klf`QK@
z?OMqnl6I}^2GXt-Tu0iq?CVLpmVX0j^&`_>Tc4Tt+PW1@jpCW-np)P>Zm6wmZmxU5
zg<f!>&uCM>uCaE5_#*|`_N$uLJr@<3rC<BpGuf|oUl$F{&(|WScI~>aHNGI$H?GZr
zGWDI`#%6&PU%94veG8~<bP=pu+w=nS*GC&08=QOsEp;tx>T_x}J0YRl1dP(yQomZP
zuWxQdXB!Z8ZpZ>JWPnT!cf@NESk|t4uElMhnUoA+4UJ8hAa_tA+T7@jB-_vGy00|~
zgrSWsz>0VlLu<%|*>6s9{krE6;kn2d%w|5ZGHWsR4B%83b>N3ONWuDbD_d%_KxT}!
z8IoL}Zgpc_gLtN~VNKoI+J-gj#d^|I`wXJ&XX-EqwOAb|-5}PiTDz{f5gG2shAbsm
z84~KQQg(erBgC+_9<!1`S=WRh-eH%V5wXV{u;qnlqW~$Z)~&5;5?E{?j%GNHKy%$%
zpv)jy>BxMh%>BN$<``UKT?-g)?aDQ)+{G5Fn%1qTYpPw@RJTe**Jswg*-4!B!y*W%
z6Oio8vXhtd8EtG{v#von*$m5Txt1A_t=unXimp}4d^I<&Y$OrQ)I!eg094zW=SP6&
z9EfUZ>Gc~E%(^D1ghr&9K#t54yk0#pCwI@pouh`vM#vbZoI4*7sIOlGT(-@YWf<gI
zvBO?qGdzsPXxERs=?OPI<ED(iSYG3%l?AXLFT!THDdR1cC*3p-`!V6q;p4gK2{)x5
z#eDiZtY7M;^mho;uV6}lg6WW(GG21Z-L%h5``wiB63frKsp+N{-1M@WUU5?o>>ca-
z+%)K>rEaRbX_cEYo?`uuTQcKben$q5xan#)ZF1A7n{IT|n45OEX{VdU-8A8*y>8m)
zru}Yexal4@-Rq`<Zo1!1Yp~hEbrI7usc}~(HQn^VyWMhJB4@o0H$C&eGVru{ZoZoa
zKc9iC+;qrIPq^uETr?*h#*3VvsGGL9=>|95=%z6@#ott&`kih{9#mU1K9f2*<GZP`
n%w7#)`a$ZZOq@m7akpMV-^>TBGyMkqJQt=fqHcuW<HG+JVUISy

literal 0
HcmV?d00001

diff --git a/drivers/amlogic/input/touchscreen/gslx680/main_1680E.h b/drivers/amlogic/input/touchscreen/gslx680/main_1680E.h
new file mode 100755
index 000000000000..dcf92344d20b
--- /dev/null
+++ b/drivers/amlogic/input/touchscreen/gslx680/main_1680E.h
@@ -0,0 +1,5385 @@
+
+unsigned int gsl1680e_config_data_id[] =
+{
+	0x762a5a,  
+	0x200,
+	0,0,
+	0,
+	0,0,0,
+	0,0,0,0,0,0,0,0,
+
+
+	0x100,0x5,0xa000f,0xa000f,0x4000258,0,0x5100,0x8e00,
+	0,0x320014,0,0,0,0,0,0,
+	0x8,0x4000,0x1000,0x10cd0010,0x10380004,0,0,0,
+	0x1b6db688,0x90,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0x40,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+	0,//key_map
+	0x3200384,0x64,0x503e8,//0
+	0,0,0,//1
+	0,0,0,//2
+	0,0,0,//3
+	0,0,0,//4
+	0,0,0,//5
+	0,0,0,//6
+	0,0,0,//7
+
+	0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+
+	0x221,
+	0,0,0,0,0,0,0,0,
+	0,0x2010100,0x6050403,0xb090807,0xf0e0d0c,0x15131211,0x19181716,0x1e1d1c1b,
+	0x2322201f,0x27262524,0x2c2b2a29,0x31302f2d,0x36343332,0x3a393837,0x3e3d3c3b,0x3f3f3f3f,
+	0,0,0x4030201,0xa090706,0x100e0d0b,0x16141311,0x1c1a1918,0x22211f1e,
+	0x28262524,0x2e2d2b29,0x34323130,0x39383635,0x3e3d3c3a,0x3f3f3f3e,0x3f3f3f3f,0x3f3f3f3f,
+
+	0x3020100,0x7060504,0xb0a0908,0xf0e0d0c,0x13121110,0x17161514,0x1b1a1918,0x1f1e1d1c,
+	0x23222120,0x27262524,0x2b2a2928,0x2f2e2d2c,0x33323130,0x37363534,0x3b3a3938,0x3f3e3d3c,
+
+	0x3020100,0x7060504,0xb0a0908,0xf0e0d0c,0x13121110,0x17161514,0x1b1a1918,0x1f1e1d1c,
+	0x23222120,0x27262524,0x2b2a2928,0x2f2e2d2c,0x33323130,0x37363534,0x3b3a3938,0x3f3e3d3c,
+
+	0x3020100,0x7060504,0xb0a0908,0xf0e0d0c,0x13121110,0x17161514,0x1b1a1918,0x1f1e1d1c,
+	0x23222120,0x27262524,0x2b2a2928,0x2f2e2d2c,0x33323130,0x37363534,0x3b3a3938,0x3f3e3d3c,
+
+	0x3020100,0x7060504,0xb0a0908,0xf0e0d0c,0x13121110,0x17161514,0x1b1a1918,0x1f1e1d1c,
+	0x23222120,0x27262524,0x2b2a2928,0x2f2e2d2c,0x33323130,0x37363534,0x3b3a3938,0x3f3e3d3c,
+
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,
+
+
+	0x3,
+	0x101,0,0x100,0,
+	0x20,0x10,0x8,0x4,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,
+};
+
+static const struct fw_data GSL1680E_FW[] = {
+
+{0xf0,0x3},
+{0x00,0xea64205a},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00005100},
+{0x28,0x00008e00},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x1a0ac00a},
+{0x68,0x00000002},
+{0x6c,0x0000000f},
+{0x70,0x00000000},
+{0x74,0xffffffff},
+{0x78,0xffffffec},
+{0x7c,0x00000000},
+{0xf0,0x4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0xfe0cff06},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00001000},
+{0x34,0x00000000},
+{0x38,0x0000000a},
+{0x3c,0x00000258},
+{0x40,0x00000000},
+{0x44,0x04020a00},
+{0x48,0x0014012c},
+{0x4c,0x9a000000},
+{0x50,0x00000000},
+{0x54,0x00010203},
+{0x58,0x04050607},
+{0x5c,0x08090a0b},
+{0x60,0x0c0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x0014000a},
+{0x78,0x80808080},
+{0x7c,0xcba981f4},
+{0xf0,0x5},
+{0x00,0x00000000},
+{0x04,0x00000005},
+{0x08,0x000000b4},
+{0x0c,0x6d6d667a},
+{0x10,0x0000000a},
+{0x14,0x00000000},
+{0x18,0x00000fff},
+{0x1c,0x10cd0010},
+{0x20,0x10380004},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000400},
+{0x30,0x80808080},
+{0x34,0x80808080},
+{0x38,0x80808080},
+{0x3c,0x80808080},
+{0x40,0x80808080},
+{0x44,0x80808080},
+{0x48,0x80808080},
+{0x4c,0x80808000},
+{0x50,0xffffffff},
+{0x54,0x00010203},
+{0x58,0x04050607},
+{0x5c,0x08090a0b},
+{0x60,0x0c0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x00000221},
+{0x78,0x0000000f},
+{0x7c,0x0000000a},
+{0xf0,0x6},
+{0x00,0x0000000f},
+{0x04,0x00000000},
+{0x08,0x0000000a},
+{0x0c,0x04030402},
+{0x10,0x00000032},
+{0x14,0x1414140a},
+{0x18,0x00000000},
+{0x1c,0x00000001},
+{0x20,0x00002904},
+{0x24,0x00000400},
+{0x28,0x00000258},
+{0x2c,0xf8010015},
+{0x30,0xf8010015},
+{0x34,0x00000005},
+{0x38,0x00000003},
+{0x3c,0x00000fff},
+{0x40,0x80000000},
+{0x44,0x00180018},
+{0x48,0x00000fff},
+{0x4c,0x04040402},
+{0x50,0x00020001},
+{0x54,0x00000090},
+{0x58,0x00004000},
+{0x5c,0x1b6db688},
+{0x60,0x20100804},
+{0x64,0x000007d0},
+{0x68,0x000007d0},
+{0x6c,0x000007d0},
+{0x70,0x00004e20},
+{0x74,0x000000c8},
+{0x78,0x000a003c},
+{0x7c,0x00000000},
+{0xf0,0x7},
+{0x00,0x04010700},
+{0x04,0x06030902},
+{0x08,0x0805040a},
+{0x0c,0x07110610},
+{0x10,0x09130812},
+{0x14,0x00123456},
+{0x18,0x00000000},
+{0x1c,0x000a0078},
+{0x20,0x00001081},
+{0x24,0xff080010},
+{0x28,0xff080120},
+{0x2c,0xff080140},
+{0x30,0xff080160},
+{0x34,0x000000f0},
+{0x38,0x000000d0},
+{0x3c,0x000000b0},
+{0x40,0x00000000},
+{0x44,0x00640064},
+{0x48,0x00000100},
+{0x4c,0x320f0f03},
+{0x50,0x00000000},
+{0x54,0x00000004},
+{0x58,0x00000000},
+{0x5c,0x00070001},
+{0x60,0x000d0008},
+{0x64,0x000e000e},
+{0x68,0x00000000},
+{0x6c,0x00040002},
+{0x70,0x00040002},
+{0x74,0x00000000},
+{0x78,0x00432105},
+{0x7c,0x006789ab},
+{0xf0,0x8},
+{0x00,0x01f921f8},
+{0x04,0x21f721f6},
+{0x08,0x21f521f4},
+{0x0c,0x21f3234f},
+{0x10,0x432f430f},
+{0x14,0x42ef42cf},
+{0x18,0x42af428f},
+{0x1c,0x726f01fa},
+{0x20,0x01f401f5},
+{0x24,0x01f601f7},
+{0x28,0x01f801f9},
+{0x2c,0x01fa0000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x01020304},
+{0x44,0x05060708},
+{0x48,0x090a0000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00050004},
+{0x5c,0x00000008},
+{0x60,0x00000190},
+{0x64,0x00030201},
+{0x68,0x00080804},
+{0x6c,0x00000100},
+{0x70,0x000000cd},
+{0x74,0x00000070},
+{0x78,0x00000000},
+{0x7c,0x0000000a},
+{0xf0,0x9},
+{0x00,0xff080094},
+{0x04,0x00070011},
+{0x08,0xff080090},
+{0x0c,0x00040000},
+{0x10,0xff080068},
+{0x14,0x00030000},
+{0x18,0xff080064},
+{0x1c,0x01002582},
+{0x20,0xff080060},
+{0x24,0x00000000},
+{0x28,0xff08004c},
+{0x2c,0x00197fff},
+{0x30,0xfffffff0},
+{0x34,0x00000000},
+{0x38,0xfffffff0},
+{0x3c,0x00000000},
+{0x40,0xfffffff0},
+{0x44,0x00000000},
+{0x48,0xfffffff0},
+{0x4c,0x00000000},
+{0x50,0xfffffff0},
+{0x54,0x00000000},
+{0x58,0xfffffff0},
+{0x5c,0x00000000},
+{0x60,0xfffffff0},
+{0x64,0x00000000},
+{0x68,0xfffffff0},
+{0x6c,0x00000000},
+{0x70,0xfffffff0},
+{0x74,0x00000000},
+{0x78,0xfffffff0},
+{0x7c,0x00000000},
+/*
+{0xf0,0xe0},
+{0x00,0x00010000},
+{0x04,0x000a0001},
+{0x08,0x001d0012},
+{0x0c,0x0040003f},
+{0x10,0x0057004b},
+{0x14,0x00610053},
+{0x18,0x00690065},
+{0x1c,0x005c0061},
+{0x20,0x006c0069},
+{0x24,0x00690066},
+{0x28,0x0066005b},
+{0x2c,0x00720074},
+{0x30,0x0066005d},
+{0x34,0x00610062},
+{0x38,0x00620069},
+{0x3c,0x006c005f},
+{0x40,0x006401f4},
+{0x44,0x00640064},
+{0x48,0x01900064},
+{0x4c,0x00500190},
+{0x50,0x00500050},
+{0x54,0x012c0050},
+{0x58,0x012c012c},
+{0x5c,0x0030012c},
+{0x60,0x00640000},
+{0x64,0x00640064},
+{0x68,0x00000032},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe1},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00020000},
+{0x0c,0x0025000a},
+{0x10,0x00540036},
+{0x14,0x006f0075},
+{0x18,0x0078007c},
+{0x1c,0x006f007a},
+{0x20,0x006f0078},
+{0x24,0x0081006f},
+{0x28,0x009e007a},
+{0x2c,0x0081007a},
+{0x30,0x00740081},
+{0x34,0x007b0080},
+{0x38,0x008a008e},
+{0x3c,0x006e0079},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000002},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe2},
+{0x00,0x00630055},
+{0x04,0x005c0069},
+{0x08,0x00540075},
+{0x0c,0x00600058},
+{0x10,0x0054005c},
+{0x14,0x00790061},
+{0x18,0x0062006b},
+{0x1c,0x00650064},
+{0x20,0x00600062},
+{0x24,0x00510062},
+{0x28,0x0063005f},
+{0x2c,0x00550056},
+{0x30,0x00560059},
+{0x34,0x004a0061},
+{0x38,0x0004001b},
+{0x3c,0x00030002},
+{0x40,0x0074007d},
+{0x44,0x0079006e},
+{0x48,0x008e0082},
+{0x4c,0x007a0082},
+{0x50,0x0078006c},
+{0x54,0x00780078},
+{0x58,0x006d0067},
+{0x5c,0x006c0072},
+{0x60,0x0071005c},
+{0x64,0x00440056},
+{0x68,0x001f002b},
+{0x6c,0x00000006},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe3},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe5},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe6},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+*/
+
+
+
+{0xf0,0x0},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x233fc0c0},
+{0x10,0xa2146004},
+{0x14,0xa4102000},
+{0x18,0xe4244000},
+{0x1c,0x233fc0c0},
+{0x20,0xa2146010},
+{0x24,0x2500003f},
+{0x28,0xa414a3ff},
+{0x2c,0xe4244000},
+{0x30,0x01000000},
+{0x34,0x821020e0},
+{0x38,0x81880001},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x270010c0},
+{0x4c,0xa614e00f},
+{0x50,0xe6a00040},
+{0x54,0x01000000},
+{0x58,0xa410200f},
+{0x5c,0xe4a00040},
+{0x60,0x01000000},
+{0x64,0xa0100000},
+{0x68,0xa2100000},
+{0x6c,0xa4100000},
+{0x70,0xa6100000},
+{0x74,0xa8100000},
+{0x78,0xaa100000},
+{0x7c,0xac100000},
+{0xf0,0x1},
+{0x00,0xae100000},
+{0x04,0x90100000},
+{0x08,0x92100000},
+{0x0c,0x94100000},
+{0x10,0x96100000},
+{0x14,0x98100000},
+{0x18,0x9a100000},
+{0x1c,0x9c100000},
+{0x20,0x9e100000},
+{0x24,0x84100000},
+{0x28,0x86100000},
+{0x2c,0x88100000},
+{0x30,0x8a100000},
+{0x34,0x8c100000},
+{0x38,0x8e100000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x82100000},
+{0x4c,0x81900001},
+{0x50,0x82100000},
+{0x54,0x81980001},
+{0x58,0x81800000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0xbc102cf8},
+{0x6c,0x9c102c78},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x2},
+{0x00,0x270010c0},
+{0x04,0xa614e00f},
+{0x08,0xe6a00040},
+{0x0c,0x01000000},
+{0x10,0x4000045c},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0x10bfffff},
+{0x20,0x01000000},
+{0x24,0x03169684},
+{0x28,0x82106042},
+{0x2c,0x03296945},
+{0x30,0x82106288},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x1a},
+{0x00,0x82102001},
+{0x04,0x81904000},
+{0x08,0x01000000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x81c3e008},
+{0x18,0x01000000},
+{0x1c,0x03000008},
+{0x20,0x82106342},
+{0x24,0xa3804000},
+{0x28,0x03000004},
+{0x2c,0x82106000},
+{0x30,0x81984000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x81c3e008},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x01000000},
+{0x50,0x01000000},
+{0x54,0xa7800000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x81c3e008},
+{0x68,0x01000000},
+{0x6c,0x82020008},
+{0x70,0x82004008},
+{0x74,0x9b326002},
+{0x78,0x82004001},
+{0x7c,0x8200400d},
+{0xf0,0x1b},
+{0x00,0x83286002},
+{0x04,0x920a6003},
+{0x08,0x932a6003},
+{0x0c,0xd00065b0},
+{0x10,0x91320009},
+{0x14,0x81c3e008},
+{0x18,0x900a20ff},
+{0x1c,0x9a020008},
+{0x20,0x9a034008},
+{0x24,0x97326002},
+{0x28,0x9a03400d},
+{0x2c,0x9a03400b},
+{0x30,0x920a6003},
+{0x34,0x9b2b6002},
+{0x38,0x932a6003},
+{0x3c,0x821020ff},
+{0x40,0xd80365b0},
+{0x44,0x83284009},
+{0x48,0x822b0001},
+{0x4c,0x952a8009},
+{0x50,0x8210400a},
+{0x54,0xc22365b0},
+{0x58,0x912a2002},
+{0x5c,0xda0223a4},
+{0x60,0x972ae002},
+{0x64,0x81c3e008},
+{0x68,0xc223400b},
+{0x6c,0x9a102005},
+{0x70,0x8210200b},
+{0x74,0x9a234008},
+{0x78,0x82204008},
+{0x7c,0x9b2b6002},
+{0xf0,0x1c},
+{0x00,0x80a22005},
+{0x04,0x14800007},
+{0x08,0x99286002},
+{0x0c,0x033fc200},
+{0x10,0x8210600c},
+{0x14,0xc2004000},
+{0x18,0x10800006},
+{0x1c,0x8330400d},
+{0x20,0x033fc200},
+{0x24,0x82106008},
+{0x28,0xc2004000},
+{0x2c,0x8330400c},
+{0x30,0x81c3e008},
+{0x34,0x9008600f},
+{0x38,0x9de3bf98},
+{0x3c,0xc200247c},
+{0x40,0x83306001},
+{0x44,0x80a60001},
+{0x48,0x1a800006},
+{0x4c,0x90100018},
+{0x50,0x7fffffe7},
+{0x54,0x01000000},
+{0x58,0x10800006},
+{0x5c,0xb0020008},
+{0x60,0x7fffffe3},
+{0x64,0x90260001},
+{0x68,0x90020008},
+{0x6c,0xb0022001},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x9de3bf98},
+{0x7c,0xa8102000},
+{0xf0,0x1d},
+{0x00,0xc20023d4},
+{0x04,0x80a50001},
+{0x08,0x1a800057},
+{0x0c,0xe2002348},
+{0x10,0xa4102000},
+{0x14,0xc200247c},
+{0x18,0x80a48001},
+{0x1c,0x3a80004e},
+{0x20,0xa8052001},
+{0x24,0x7fffffe5},
+{0x28,0x90100012},
+{0x2c,0x92100008},
+{0x30,0x7fffffaf},
+{0x34,0x90100014},
+{0x38,0x80a62000},
+{0x3c,0x12800004},
+{0x40,0xa0100008},
+{0x44,0x10800016},
+{0x48,0xa0102000},
+{0x4c,0x80a62009},
+{0x50,0x18800011},
+{0x54,0x80a62007},
+{0x58,0x4000024e},
+{0x5c,0x01000000},
+{0x60,0x94100008},
+{0x64,0x90100014},
+{0x68,0x40000256},
+{0x6c,0x921ca001},
+{0x70,0x80a20011},
+{0x74,0x04800007},
+{0x78,0xa6100008},
+{0x7c,0x9a102008},
+{0xf0,0x1e},
+{0x00,0x9a234018},
+{0x04,0x82102001},
+{0x08,0x8328400d},
+{0x0c,0xa02c0001},
+{0x10,0x80a62007},
+{0x14,0x18800008},
+{0x18,0x80a62008},
+{0x1c,0x9a102007},
+{0x20,0x9a234018},
+{0x24,0x82102001},
+{0x28,0x8328400d},
+{0x2c,0x10800022},
+{0x30,0xa0140001},
+{0x34,0x1280000a},
+{0x38,0x821e2009},
+{0x3c,0x80a420fe},
+{0x40,0x24800002},
+{0x44,0xa0042001},
+{0x48,0x03000019},
+{0x4c,0x9b2ca002},
+{0x50,0x82106080},
+{0x54,0x10800018},
+{0x58,0xe6234001},
+{0x5c,0x80a00001},
+{0x60,0x9a603fff},
+{0x64,0x80a420fe},
+{0x68,0x04800003},
+{0x6c,0x82102001},
+{0x70,0x82102000},
+{0x74,0x808b4001},
+{0x78,0x0280000f},
+{0x7c,0x03000019},
+{0xf0,0x1f},
+{0x00,0x9b2ca002},
+{0x04,0x82106080},
+{0x08,0xc2034001},
+{0x0c,0x80a04011},
+{0x10,0x18800003},
+{0x14,0x9a204011},
+{0x18,0x9a244001},
+{0x1c,0x80a4c011},
+{0x20,0x14800003},
+{0x24,0x8224c011},
+{0x28,0x82244013},
+{0x2c,0x80a34001},
+{0x30,0xa0642000},
+{0x34,0x7fffffa1},
+{0x38,0x90100012},
+{0x3c,0x92100008},
+{0x40,0x90100014},
+{0x44,0x7fffff76},
+{0x48,0x94100010},
+{0x4c,0x10bfffb2},
+{0x50,0xa404a001},
+{0x54,0xc20023d4},
+{0x58,0x80a50001},
+{0x5c,0x0abfffae},
+{0x60,0xa4102000},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x20},
+{0x00,0x83580000},
+{0x04,0x82086ff0},
+{0x08,0x83306004},
+{0x0c,0x80a06005},
+{0x10,0x02800024},
+{0x14,0x01000000},
+{0x18,0x80a06006},
+{0x1c,0x02800039},
+{0x20,0x01000000},
+{0x24,0x80a06015},
+{0x28,0x02800051},
+{0x2c,0x01000000},
+{0x30,0x80a0602a},
+{0x34,0x02800085},
+{0x38,0x01000000},
+{0x3c,0x073fc180},
+{0x40,0x8610e03c},
+{0x44,0x05169680},
+{0x48,0x84004002},
+{0x4c,0xc420c000},
+{0x50,0x073fc000},
+{0x54,0x8610e020},
+{0x58,0x84102001},
+{0x5c,0xc420c000},
+{0x60,0x0500000c},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x8480bfff},
+{0x70,0x12bffffe},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x073fc000},
+{0xf0,0x21},
+{0x00,0x8610e020},
+{0x04,0x84102000},
+{0x08,0xc420c000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x81c44000},
+{0x18,0x81cc8000},
+{0x1c,0x01000000},
+{0x20,0xa7500000},
+{0x24,0xa92ce002},
+{0x28,0xa734e001},
+{0x2c,0xa614c014},
+{0x30,0xa60ce007},
+{0x34,0x81900000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x81e00000},
+{0x44,0xe03ba000},
+{0x48,0xe43ba008},
+{0x4c,0xe83ba010},
+{0x50,0xec3ba018},
+{0x54,0xf03ba020},
+{0x58,0xf43ba028},
+{0x5c,0xf83ba030},
+{0x60,0xfc3ba038},
+{0x64,0x81e80000},
+{0x68,0x8194c000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x81c44000},
+{0x78,0x81cc8000},
+{0x7c,0x01000000},
+{0xf0,0x22},
+{0x00,0xa7500000},
+{0x04,0xa934e002},
+{0x08,0xa72ce001},
+{0x0c,0xa614c014},
+{0x10,0xa60ce007},
+{0x14,0x81900000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x81e80000},
+{0x24,0x81e80000},
+{0x28,0xe01ba000},
+{0x2c,0xe41ba008},
+{0x30,0xe81ba010},
+{0x34,0xec1ba018},
+{0x38,0xf01ba020},
+{0x3c,0xf41ba028},
+{0x40,0xf81ba030},
+{0x44,0xfc1ba038},
+{0x48,0x81e00000},
+{0x4c,0x81e00000},
+{0x50,0x8194c000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x81c44000},
+{0x60,0x81cc8000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x82102010},
+{0x70,0x273fc0c0},
+{0x74,0xa614e010},
+{0x78,0xc224c000},
+{0x7c,0x01000000},
+{0xf0,0x23},
+{0x00,0x033fc0c0},
+{0x04,0x82106004},
+{0x08,0xa6102000},
+{0x0c,0xe6204000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0xa6102020},
+{0x20,0x83480000},
+{0x24,0x82104013},
+{0x28,0x81884000},
+{0x2c,0x01000000},
+{0x30,0x40000fc5},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0xa7500000},
+{0x44,0xa934e002},
+{0x48,0xa72ce001},
+{0x4c,0xa614c014},
+{0x50,0xa60ce007},
+{0x54,0x81900000},
+{0x58,0x01000000},
+{0x5c,0x81e80000},
+{0x60,0xe01ba000},
+{0x64,0xe41ba008},
+{0x68,0xe81ba010},
+{0x6c,0xec1ba018},
+{0x70,0xf01ba020},
+{0x74,0xf41ba028},
+{0x78,0xf81ba030},
+{0x7c,0xfc1ba038},
+{0xf0,0x24},
+{0x00,0x81e00000},
+{0x04,0x8194c000},
+{0x08,0x01000000},
+{0x0c,0xa6102020},
+{0x10,0x83480000},
+{0x14,0x82284013},
+{0x18,0x81884000},
+{0x1c,0x01000000},
+{0x20,0x033fc0c0},
+{0x24,0x82106004},
+{0x28,0xa6103fff},
+{0x2c,0xe6204000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c44000},
+{0x40,0x81cc8000},
+{0x44,0x01000000},
+{0x48,0x81c48000},
+{0x4c,0x81cca004},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x25},
+{0x00,0x9de3bf98},
+{0x04,0x7ffffea6},
+{0x08,0x01000000},
+{0x0c,0x7ffffe9d},
+{0x10,0x01000000},
+{0x14,0x40000089},
+{0x18,0x01000000},
+{0x1c,0x7ffffeab},
+{0x20,0x01000000},
+{0x24,0x30bffffe},
+{0x28,0x80a22000},
+{0x2c,0x02800006},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x90823fff},
+{0x3c,0x12bffffe},
+{0x40,0x01000000},
+{0x44,0x81c3e008},
+{0x48,0x01000000},
+{0x4c,0x033fc200},
+{0x50,0x961060a0},
+{0x54,0x98102000},
+{0x58,0x832b2002},
+{0x5c,0x9a03000c},
+{0x60,0xda136400},
+{0x64,0x98032001},
+{0x68,0x80a3200f},
+{0x6c,0x04bffffb},
+{0x70,0xda20400b},
+{0x74,0x81c3e008},
+{0x78,0x01000000},
+{0x7c,0x98102000},
+{0xf0,0x26},
+{0x00,0x9610201e},
+{0x04,0x80a22000},
+{0x08,0x12800003},
+{0x0c,0x8210000c},
+{0x10,0x8222c00c},
+{0x14,0x83286002},
+{0x18,0xda006480},
+{0x1c,0x80a37ff0},
+{0x20,0x02800006},
+{0x24,0x98032002},
+{0x28,0xc2006484},
+{0x2c,0x80a3201f},
+{0x30,0x04bffff5},
+{0x34,0xc2234000},
+{0x38,0x81c3e008},
+{0x3c,0x01000000},
+{0x40,0x193fc180},
+{0x44,0x03202020},
+{0x48,0x9a132038},
+{0x4c,0x82106080},
+{0x50,0xc2234000},
+{0x54,0x03296956},
+{0x58,0x9410625a},
+{0x5c,0xc0230000},
+{0x60,0x031696a9},
+{0x64,0x821061a5},
+{0x68,0xd200254c},
+{0x6c,0x98102500},
+{0x70,0xda00250c},
+{0x74,0x80a3400a},
+{0x78,0x02800005},
+{0x7c,0x96033a50},
+{0xf0,0x27},
+{0x00,0x80a34001},
+{0x04,0x32800009},
+{0x08,0xc0230000},
+{0x0c,0x80a2e05f},
+{0x10,0x28800007},
+{0x14,0x98032004},
+{0x18,0x80a3250c},
+{0x1c,0x22800004},
+{0x20,0x98032004},
+{0x24,0xc0230000},
+{0x28,0x98032004},
+{0x2c,0x80a3273f},
+{0x30,0x28bffff1},
+{0x34,0xda00250c},
+{0x38,0x80a22000},
+{0x3c,0x16800014},
+{0x40,0x98102740},
+{0x44,0x1b296956},
+{0x48,0xc200250c},
+{0x4c,0x9a13625a},
+{0x50,0x80a0400d},
+{0x54,0x033fc180},
+{0x58,0x8210603c},
+{0x5c,0x12800004},
+{0x60,0xc0204000},
+{0x64,0x10800007},
+{0x68,0xc0202748},
+{0x6c,0xc0230000},
+{0x70,0x98032004},
+{0x74,0x80a327bf},
+{0x78,0x28bffffe},
+{0x7c,0xc0230000},
+{0xf0,0x28},
+{0x00,0x80a22000},
+{0x04,0x06800007},
+{0x08,0x033fc200},
+{0x0c,0x0300003f},
+{0x10,0x82106380},
+{0x14,0x820a4001},
+{0x18,0xc220254c},
+{0x1c,0x033fc200},
+{0x20,0x82106030},
+{0x24,0xd6004000},
+{0x28,0x03296956},
+{0x2c,0x8210625a},
+{0x30,0xd800250c},
+{0x34,0xda00254c},
+{0x38,0x80a30001},
+{0x3c,0x9a136010},
+{0x40,0x82102010},
+{0x44,0xc2202574},
+{0x48,0xda20254c},
+{0x4c,0x12800018},
+{0x50,0xd620257c},
+{0x54,0x82102015},
+{0x58,0xc2202500},
+{0x5c,0x94102000},
+{0x60,0x92102000},
+{0x64,0x832aa002},
+{0x68,0xd00063a4},
+{0x6c,0x96102000},
+{0x70,0x980265b0},
+{0x74,0x9b2ae002},
+{0x78,0xc2030000},
+{0x7c,0x9602e001},
+{0xf0,0x29},
+{0x00,0xc222000d},
+{0x04,0x80a2e005},
+{0x08,0x08bffffb},
+{0x0c,0x98032004},
+{0x10,0x9402a001},
+{0x14,0x80a2a003},
+{0x18,0x08bffff3},
+{0x1c,0x92026018},
+{0x20,0x03000004},
+{0x24,0x81c062cc},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0x9de3bf98},
+{0x3c,0x2f200040},
+{0x40,0x2d3fc200},
+{0x44,0x8215e101},
+{0x48,0xc2258000},
+{0x4c,0x40000c75},
+{0x50,0x90102000},
+{0x54,0x213fc140},
+{0x58,0xda00247c},
+{0x5c,0x98142040},
+{0x60,0xea030000},
+{0x64,0xc20022f8},
+{0x68,0x9b336001},
+{0x6c,0x825b4001},
+{0x70,0xaa0d7c00},
+{0x74,0xaa154001},
+{0x78,0xea230000},
+{0x7c,0x82142004},
+{0xf0,0x2a},
+{0x00,0xea004000},
+{0x04,0xaa0d7ff0},
+{0x08,0xaa15400d},
+{0x0c,0xea204000},
+{0x10,0x8215a080},
+{0x14,0xea004000},
+{0x18,0xaa0d7ff0},
+{0x1c,0xaa15400d},
+{0x20,0xea204000},
+{0x24,0xc2002298},
+{0x28,0x9a15a070},
+{0x2c,0xc2234000},
+{0x30,0x033fc000},
+{0x34,0xda002338},
+{0x38,0x82106030},
+{0x3c,0xda204000},
+{0x40,0x0300003f},
+{0x44,0xa2142058},
+{0x48,0x821063ff},
+{0x4c,0x17000017},
+{0x50,0xc2244000},
+{0x54,0x9612e380},
+{0x58,0x94142088},
+{0x5c,0x19000018},
+{0x60,0xd6228000},
+{0x64,0x981320c0},
+{0x68,0x9214208c},
+{0x6c,0xd8224000},
+{0x70,0xc20023f8},
+{0x74,0x9015a00c},
+{0x78,0xc2220000},
+{0x7c,0xc20023fc},
+{0xf0,0x2b},
+{0x00,0x9e15a008},
+{0x04,0xc223c000},
+{0x08,0xa414205c},
+{0x0c,0xc0248000},
+{0x10,0xa6142080},
+{0x14,0xd624c000},
+{0x18,0xa8142084},
+{0x1c,0x7fffff4c},
+{0x20,0xd8250000},
+{0x24,0x9a15a07c},
+{0x28,0xea034000},
+{0x2c,0x033ff000},
+{0x30,0xd0002374},
+{0x34,0xaa2d4001},
+{0x38,0xea234000},
+{0x3c,0x033fc1c0},
+{0x40,0xda002340},
+{0x44,0x82106064},
+{0x48,0xda204000},
+{0x4c,0x0300007f},
+{0x50,0x96142010},
+{0x54,0x821063ff},
+{0x58,0x94142030},
+{0x5c,0x1907ffc0},
+{0x60,0xc222c000},
+{0x64,0xa0142014},
+{0x68,0xd8228000},
+{0x6c,0x80a22000},
+{0x70,0x0280000f},
+{0x74,0xd8240000},
+{0x78,0x932a2010},
+{0x7c,0x82022001},
+{0xf0,0x2c},
+{0x00,0x9b2a2004},
+{0x04,0x83286010},
+{0x08,0x9a02400d},
+{0x0c,0x9815a084},
+{0x10,0xda230000},
+{0x14,0x82004008},
+{0x18,0x9615a088},
+{0x1c,0x82006002},
+{0x20,0x9415a08c},
+{0x24,0xd222c000},
+{0x28,0xc2228000},
+{0x2c,0x9a15a030},
+{0x30,0xc2002344},
+{0x34,0xc2234000},
+{0x38,0x7fffff42},
+{0x3c,0x90103fff},
+{0x40,0x7fffff2f},
+{0x44,0x90102001},
+{0x48,0x033fc0c0},
+{0x4c,0x9a103fff},
+{0x50,0x82106004},
+{0x54,0xda204000},
+{0x58,0xee258000},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x03169696},
+{0x68,0xd8002180},
+{0x6c,0x8210625a},
+{0x70,0x80a30001},
+{0x74,0x96102000},
+{0x78,0x12800007},
+{0x7c,0x9a102000},
+{0xf0,0x2d},
+{0x00,0x033fc180},
+{0x04,0x82106030},
+{0x08,0xd8204000},
+{0x0c,0x1080001c},
+{0x10,0x90102001},
+{0x14,0xc2034000},
+{0x18,0x9a036004},
+{0x1c,0x80a364ff},
+{0x20,0x08bffffd},
+{0x24,0x9602c001},
+{0x28,0x03000015},
+{0x2c,0x82106028},
+{0x30,0x82087f80},
+{0x34,0x9a102d00},
+{0x38,0x80a34001},
+{0x3c,0x3a800009},
+{0x40,0x03169696},
+{0x44,0x98100001},
+{0x48,0xc2034000},
+{0x4c,0x9a036004},
+{0x50,0x80a3400c},
+{0x54,0x0abffffd},
+{0x58,0x9602c001},
+{0x5c,0x03169696},
+{0x60,0x8210625a},
+{0x64,0x821ac001},
+{0x68,0x80a00001},
+{0x6c,0x033fc180},
+{0x70,0x82106030},
+{0x74,0xd6204000},
+{0x78,0x90603fff},
+{0x7c,0x81c3e008},
+{0xf0,0x2e},
+{0x00,0x01000000},
+{0x04,0x9de3be98},
+{0x08,0xb2067fff},
+{0x0c,0x96100018},
+{0x10,0xf227befc},
+{0x14,0xc027bef8},
+{0x18,0x98102000},
+{0x1c,0xb007bff8},
+{0x20,0xd4063f00},
+{0x24,0xda063f04},
+{0x28,0xb810000a},
+{0x2c,0x98033fff},
+{0x30,0xb0063ff8},
+{0x34,0x80a2800d},
+{0x38,0x16800031},
+{0x3c,0xb610000d},
+{0x40,0xbb2aa002},
+{0x44,0x832b6002},
+{0x48,0xb207400b},
+{0x4c,0xb400400b},
+{0x50,0xde02c01d},
+{0x54,0x80a7001b},
+{0x58,0x1680001c},
+{0x5c,0x01000000},
+{0x60,0xc2068000},
+{0x64,0x80a0400f},
+{0x68,0x04800005},
+{0x6c,0x80a7001b},
+{0x70,0xb606ffff},
+{0x74,0x10bffff8},
+{0x78,0xb406bffc},
+{0x7c,0x16800013},
+{0xf0,0x2f},
+{0x00,0x80a7001b},
+{0x04,0xc2068000},
+{0x08,0xc2264000},
+{0x0c,0xb8072001},
+{0x10,0x80a7001b},
+{0x14,0x1680000d},
+{0x18,0xb2066004},
+{0x1c,0xc2064000},
+{0x20,0x80a0400f},
+{0x24,0x26bffffb},
+{0x28,0xb8072001},
+{0x2c,0x80a7001b},
+{0x30,0x16800006},
+{0x34,0x01000000},
+{0x38,0xc2268000},
+{0x3c,0xb606ffff},
+{0x40,0xb406bffc},
+{0x44,0x80a7001b},
+{0x48,0x12bfffe4},
+{0x4c,0x80a7001b},
+{0x50,0xb0062008},
+{0x54,0x82073fff},
+{0x58,0xc2263f04},
+{0x5c,0xd4263f00},
+{0x60,0x832f2002},
+{0x64,0xb0062008},
+{0x68,0xde22c001},
+{0x6c,0xba072001},
+{0x70,0xfa263f00},
+{0x74,0xda263f04},
+{0x78,0x98032002},
+{0x7c,0x80a33fff},
+{0xf0,0x30},
+{0x00,0x34bfffc9},
+{0x04,0xd4063f00},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x033fc140},
+{0x14,0x82106048},
+{0x18,0xda004000},
+{0x1c,0x03000040},
+{0x20,0x808b4001},
+{0x24,0x03000017},
+{0x28,0x12800004},
+{0x2c,0x90106380},
+{0x30,0x82006400},
+{0x34,0x901060c0},
+{0x38,0x81c3e008},
+{0x3c,0x01000000},
+{0x40,0x9de3bf58},
+{0x44,0xa12e2002},
+{0x48,0xda1423da},
+{0x4c,0xd61423d8},
+{0x50,0xc200247c},
+{0x54,0xb022c00d},
+{0x58,0x825b4001},
+{0x5c,0x92862001},
+{0x60,0x0280000c},
+{0x64,0x9a004019},
+{0x68,0xb0100009},
+{0x6c,0x9807bfb8},
+{0x70,0x8203400d},
+{0x74,0xc2168001},
+{0x78,0xc2230000},
+{0x7c,0xc200247c},
+{0xf0,0x31},
+{0x00,0x9a034001},
+{0x04,0xb0863fff},
+{0x08,0x12bffffa},
+{0x0c,0x98032004},
+{0x10,0x7fffff9d},
+{0x14,0x9007bfb8},
+{0x18,0xda1423ea},
+{0x1c,0xd61423e8},
+{0x20,0x80a3400b},
+{0x24,0x92102000},
+{0x28,0x1880000b},
+{0x2c,0xb010000d},
+{0x30,0x832b6002},
+{0x34,0x8200401e},
+{0x38,0x98007fb8},
+{0x3c,0xc2030000},
+{0x40,0xb0062001},
+{0x44,0x92024001},
+{0x48,0x80a6000b},
+{0x4c,0x08bffffc},
+{0x50,0x98032004},
+{0x54,0xb022c00d},
+{0x58,0xb0062001},
+{0x5c,0x81800000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0xb0724018},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x9de3bf98},
+{0x7c,0xda002310},
+{0xf0,0x32},
+{0x00,0x80a36000},
+{0x04,0x02800056},
+{0x08,0xb0102000},
+{0x0c,0xc200254c},
+{0x10,0x80886100},
+{0x14,0x22800003},
+{0x18,0xc2002594},
+{0x1c,0x30800050},
+{0x20,0x82006001},
+{0x24,0x80a0400d},
+{0x28,0xc2202594},
+{0x2c,0x0a80004c},
+{0x30,0xb0102000},
+{0x34,0xa2102000},
+{0x38,0xc20023d4},
+{0x3c,0x80a44001},
+{0x40,0xc0202594},
+{0x44,0xa0102000},
+{0x48,0x1a800027},
+{0x4c,0xa52c2002},
+{0x50,0xc204a364},
+{0x54,0x80a06000},
+{0x58,0x0280001f},
+{0x5c,0xb0102000},
+{0x60,0xc20022fc},
+{0x64,0x80a60001},
+{0x68,0x1a80001b},
+{0x6c,0x15000018},
+{0x70,0xc200254c},
+{0x74,0x80886020},
+{0x78,0xc20e2380},
+{0x7c,0x9412a340},
+{0xf0,0x33},
+{0x00,0x90100010},
+{0x04,0x12800006},
+{0x08,0x920860ff},
+{0x0c,0x15000018},
+{0x10,0x920860ff},
+{0x14,0x9412a200},
+{0x18,0x90100010},
+{0x1c,0x7fffffa9},
+{0x20,0xb0062001},
+{0x24,0xc204a364},
+{0x28,0xda002348},
+{0x2c,0x98020001},
+{0x30,0x82034001},
+{0x34,0x80a20001},
+{0x38,0x38bfffea},
+{0x3c,0xa2046001},
+{0x40,0x80a3000d},
+{0x44,0x3abfffe8},
+{0x48,0xc20022fc},
+{0x4c,0x10bfffe5},
+{0x50,0xa2046001},
+{0x54,0xa0042001},
+{0x58,0xc20023d4},
+{0x5c,0x10bfffdb},
+{0x60,0x80a40001},
+{0x64,0xd800258c},
+{0x68,0x80a0000c},
+{0x6c,0x9a603fff},
+{0x70,0x80a00011},
+{0x74,0x82603fff},
+{0x78,0x808b4001},
+{0x7c,0x0280000a},
+{0xf0,0x34},
+{0x00,0x80a46000},
+{0x04,0xda00254c},
+{0x08,0x83336005},
+{0x0c,0x82086001},
+{0x10,0x82186001},
+{0x14,0x83286005},
+{0x18,0x9a0b7fdf},
+{0x1c,0x9a134001},
+{0x20,0xda20254c},
+{0x24,0x12800004},
+{0x28,0x82032001},
+{0x2c,0x10800003},
+{0x30,0xc020258c},
+{0x34,0xc220258c},
+{0x38,0xc200258c},
+{0x3c,0x80a06002},
+{0x40,0x08800007},
+{0x44,0xb0102000},
+{0x48,0xc200254c},
+{0x4c,0x1b000040},
+{0x50,0x8210400d},
+{0x54,0xc220254c},
+{0x58,0xb0102001},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x9de3bf58},
+{0x68,0xc200254c},
+{0x6c,0x8330600b},
+{0x70,0x82086001},
+{0x74,0x80a00001},
+{0x78,0x9a603fff},
+{0x7c,0x8207bfb8},
+{0xf0,0x35},
+{0x00,0xb610200f},
+{0x04,0xc0204000},
+{0x08,0xb686ffff},
+{0x0c,0x1cbffffe},
+{0x10,0x82006004},
+{0x14,0xb0102001},
+{0x18,0xc2002300},
+{0x1c,0x80a60001},
+{0x20,0x18800041},
+{0x24,0x03000019},
+{0x28,0x82106080},
+{0x2c,0x96006030},
+{0x30,0xb4102001},
+{0x34,0xc2002308},
+{0x38,0x80a68001},
+{0x3c,0x38800036},
+{0x40,0xb0062001},
+{0x44,0xb202e004},
+{0x48,0x8203400d},
+{0x4c,0xfa506210},
+{0x50,0x80a76000},
+{0x54,0x2280002b},
+{0x58,0xb406a001},
+{0x5c,0xc2064000},
+{0x60,0x80a0401d},
+{0x64,0x36800027},
+{0x68,0xb406a001},
+{0x6c,0xbb2e2010},
+{0x70,0x832ea018},
+{0x74,0x8200401d},
+{0x78,0x9e006001},
+{0x7c,0xb6102000},
+{0xf0,0x36},
+{0x00,0x98102001},
+{0x04,0xba07bfb8},
+{0x08,0xb92ee002},
+{0x0c,0xc20f2700},
+{0x10,0x80a68001},
+{0x14,0x12800011},
+{0x18,0xb606e001},
+{0x1c,0xc20f2701},
+{0x20,0x80a60001},
+{0x24,0x3280000e},
+{0x28,0xc2172700},
+{0x2c,0xd8274000},
+{0x30,0x0300003f},
+{0x34,0xfa172702},
+{0x38,0x821063ff},
+{0x3c,0x80a74001},
+{0x40,0x22800010},
+{0x44,0xb406a001},
+{0x48,0xc2072700},
+{0x4c,0x82006001},
+{0x50,0x1080000b},
+{0x54,0xc2272700},
+{0x58,0xc2172700},
+{0x5c,0x80a06000},
+{0x60,0x12800005},
+{0x64,0x80a6e00f},
+{0x68,0xd8274000},
+{0x6c,0x10800004},
+{0x70,0xde272700},
+{0x74,0x08bfffe5},
+{0x78,0xba076004},
+{0x7c,0xb406a001},
+{0xf0,0x37},
+{0x00,0xc2002308},
+{0x04,0x80a68001},
+{0x08,0x08bfffd0},
+{0x0c,0xb2066004},
+{0x10,0xb0062001},
+{0x14,0xc2002300},
+{0x18,0x80a60001},
+{0x1c,0x08bfffc5},
+{0x20,0x9602e030},
+{0x24,0xfa002500},
+{0x28,0xc20021f4},
+{0x2c,0x80a74001},
+{0x30,0x1880001d},
+{0x34,0xb0102000},
+{0x38,0xb4102000},
+{0x3c,0xb6102000},
+{0x40,0xb807bff8},
+{0x44,0xbb2ee002},
+{0x48,0x8207401c},
+{0x4c,0xc2007fc0},
+{0x50,0x80a06000},
+{0x54,0x32800004},
+{0x58,0xfa176702},
+{0x5c,0x10800005},
+{0x60,0xc0276700},
+{0x64,0xc20b63cc},
+{0x68,0x80a74001},
+{0x6c,0xb466bfff},
+{0x70,0xb606e001},
+{0x74,0x80a6e00f},
+{0x78,0x08bffff4},
+{0x7c,0xbb2ee002},
+{0xf0,0x38},
+{0x00,0xc20b63ce},
+{0x04,0x80a68001},
+{0x08,0x08800007},
+{0x0c,0xb0102000},
+{0x10,0xc200254c},
+{0x14,0x3b000200},
+{0x18,0x8210401d},
+{0x1c,0xc220254c},
+{0x20,0xb0102001},
+{0x24,0x81c7e008},
+{0x28,0x81e80000},
+{0x2c,0x9de3bf98},
+{0x30,0xf4002200},
+{0x34,0x80a6a000},
+{0x38,0x12800007},
+{0x3c,0x9e102001},
+{0x40,0xc200254c},
+{0x44,0x82087ffb},
+{0x48,0xc220254c},
+{0x4c,0x10800043},
+{0x50,0xc0202588},
+{0x54,0x80a3c01a},
+{0x58,0x1880001c},
+{0x5c,0xc0202504},
+{0x60,0x03000019},
+{0x64,0x82106080},
+{0x68,0xb0006030},
+{0x6c,0xda002308},
+{0x70,0xb6102001},
+{0x74,0x80a6c00d},
+{0x78,0x38800011},
+{0x7c,0x9e03e001},
+{0xf0,0x39},
+{0x00,0xf2002238},
+{0x04,0xba062004},
+{0x08,0xc2074000},
+{0x0c,0xb606e001},
+{0x10,0xba076004},
+{0x14,0x80a04019},
+{0x18,0x04800005},
+{0x1c,0xb8204019},
+{0x20,0xc2002504},
+{0x24,0x8200401c},
+{0x28,0xc2202504},
+{0x2c,0x80a6c00d},
+{0x30,0x28bffff7},
+{0x34,0xc2074000},
+{0x38,0x9e03e001},
+{0x3c,0x80a3c01a},
+{0x40,0x08bfffec},
+{0x44,0xb0062030},
+{0x48,0xf800254c},
+{0x4c,0x808f2008},
+{0x50,0x12800008},
+{0x54,0xfa002504},
+{0x58,0xc200223c},
+{0x5c,0x80a74001},
+{0x60,0x34800009},
+{0x64,0xc2002588},
+{0x68,0x10800009},
+{0x6c,0xc0202588},
+{0x70,0xc200223c},
+{0x74,0x80a74001},
+{0x78,0x34800005},
+{0x7c,0xc0202588},
+{0xf0,0x3a},
+{0x00,0xc2002588},
+{0x04,0x82006001},
+{0x08,0xc2202588},
+{0x0c,0xfa002588},
+{0x10,0xc2002290},
+{0x14,0x80a74001},
+{0x18,0x2880000b},
+{0x1c,0xfa00254c},
+{0x20,0x83372003},
+{0x24,0x82086001},
+{0x28,0x82186001},
+{0x2c,0x83286002},
+{0x30,0xba0f3ffb},
+{0x34,0xba174001},
+{0x38,0xfa20254c},
+{0x3c,0xc0202588},
+{0x40,0xfa00254c},
+{0x44,0xbb376002},
+{0x48,0x033fc180},
+{0x4c,0xba0f6001},
+{0x50,0x8210602c},
+{0x54,0xfa204000},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf98},
+{0x64,0xfa5023c6},
+{0x68,0x80a76000},
+{0x6c,0x0280003d},
+{0x70,0x9e102001},
+{0x74,0xc20022fc},
+{0x78,0x80a3c001},
+{0x7c,0x18800039},
+{0xf0,0x3b},
+{0x00,0x17000019},
+{0x04,0x8212e080},
+{0x08,0x9810001d},
+{0x0c,0x9a006004},
+{0x10,0xb6102001},
+{0x14,0xf20022f8},
+{0x18,0x80a6c019},
+{0x1c,0xb4102000},
+{0x20,0x1880002b},
+{0x24,0x82102000},
+{0x28,0xf05023c4},
+{0x2c,0xba036030},
+{0x30,0xf8074000},
+{0x34,0xb606e001},
+{0x38,0x80a70018},
+{0x3c,0x06800004},
+{0x40,0xba076030},
+{0x44,0xb406801c},
+{0x48,0x82006001},
+{0x4c,0x80a6c019},
+{0x50,0x28bffff9},
+{0x54,0xf8074000},
+{0x58,0x80a06000},
+{0x5c,0x2280001d},
+{0x60,0x9e03e001},
+{0x64,0x953ea01f},
+{0x68,0x8182a000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x827e8001},
+{0x7c,0x8258400c},
+{0xf0,0x3c},
+{0x00,0xbb38601f},
+{0x04,0xbb376016},
+{0x08,0x8200401d},
+{0x0c,0xb6102001},
+{0x10,0xfa0022f8},
+{0x14,0x80a6c01d},
+{0x18,0x1880000d},
+{0x1c,0xb538600a},
+{0x20,0x832be002},
+{0x24,0xba006030},
+{0x28,0xb812e080},
+{0x2c,0xc207401c},
+{0x30,0x8220401a},
+{0x34,0xc227401c},
+{0x38,0xb606e001},
+{0x3c,0xc20022f8},
+{0x40,0x80a6c001},
+{0x44,0x08bffffa},
+{0x48,0xba076030},
+{0x4c,0x9e03e001},
+{0x50,0xc20022fc},
+{0x54,0x80a3c001},
+{0x58,0x08bfffce},
+{0x5c,0x9a036004},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0x9de3bf58},
+{0x6c,0xe2502458},
+{0x70,0x80a46000},
+{0x74,0x02800058},
+{0x78,0x01000000},
+{0x7c,0xc20022f8},
+{0xf0,0x3d},
+{0x00,0x80a44001},
+{0x04,0x1a800054},
+{0x08,0xa0102001},
+{0x0c,0xc20022fc},
+{0x10,0x80a40001},
+{0x14,0x18800050},
+{0x18,0xe450245a},
+{0x1c,0x96102001},
+{0x20,0xc20022f8},
+{0x24,0x80a2c001},
+{0x28,0x1880000f},
+{0x2c,0x03000019},
+{0x30,0x9b2c2002},
+{0x34,0x82106080},
+{0x38,0x9a034001},
+{0x3c,0x9a036030},
+{0x40,0x9807bfb8},
+{0x44,0xc2034000},
+{0x48,0xc2230000},
+{0x4c,0x9602e001},
+{0x50,0xc20022f8},
+{0x54,0x80a2c001},
+{0x58,0x9a036030},
+{0x5c,0x08bffffa},
+{0x60,0x98032004},
+{0x64,0x9007bfb8},
+{0x68,0x7ffffe07},
+{0x6c,0xd20022f8},
+{0x70,0x96100012},
+{0x74,0x80a48011},
+{0x78,0x1480000b},
+{0x7c,0x94102000},
+{0xf0,0x3e},
+{0x00,0x832ca002},
+{0x04,0x8200401e},
+{0x08,0x9a007fb8},
+{0x0c,0xc2034000},
+{0x10,0x9602e001},
+{0x14,0x94028001},
+{0x18,0x80a2c011},
+{0x1c,0x04bffffc},
+{0x20,0x9a036004},
+{0x24,0x82244012},
+{0x28,0x82006001},
+{0x2c,0x9b3aa01f},
+{0x30,0x81836000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x947a8001},
+{0x44,0xc25021ac},
+{0x48,0x80a28001},
+{0x4c,0x26800002},
+{0x50,0x94100001},
+{0x54,0x96102001},
+{0x58,0xc20022f8},
+{0x5c,0x80a2c001},
+{0x60,0x18800018},
+{0x64,0x9b2c2002},
+{0x68,0x03000019},
+{0x6c,0x92106080},
+{0x70,0x98036030},
+{0x74,0xc2030009},
+{0x78,0x9a20400a},
+{0x7c,0xda230009},
+{0xf0,0x3f},
+{0x00,0xc20023c8},
+{0x04,0x83306012},
+{0x08,0x80886001},
+{0x0c,0x02800009},
+{0x10,0x9602e001},
+{0x14,0xc20c22af},
+{0x18,0x825b4001},
+{0x1c,0x9b38601f},
+{0x20,0x9b336019},
+{0x24,0x8200400d},
+{0x28,0x83386007},
+{0x2c,0xc2230009},
+{0x30,0xc20022f8},
+{0x34,0x80a2c001},
+{0x38,0x08bfffef},
+{0x3c,0x98032030},
+{0x40,0xa0042001},
+{0x44,0xc20022fc},
+{0x48,0x80a40001},
+{0x4c,0x08bfffb5},
+{0x50,0x96102001},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf70},
+{0x60,0x1b00003f},
+{0x64,0xc2002350},
+{0x68,0x9a1363ff},
+{0x6c,0xba08400d},
+{0x70,0xa4102001},
+{0x74,0xda002300},
+{0x78,0x80a4800d},
+{0x7c,0x18800058},
+{0xf0,0x40},
+{0x00,0xa3306010},
+{0x04,0xae10200c},
+{0x08,0xac10200c},
+{0x0c,0xaa102000},
+{0x10,0xa8102000},
+{0x14,0xa6102000},
+{0x18,0x80a46000},
+{0x1c,0x0280002c},
+{0x20,0xa0102000},
+{0x24,0x03000019},
+{0x28,0x96106080},
+{0x2c,0x92102000},
+{0x30,0x9807bfd0},
+{0x34,0x8204c009},
+{0x38,0xda086440},
+{0x3c,0x8205800d},
+{0x40,0x80a36000},
+{0x44,0x02800008},
+{0x48,0x83286002},
+{0x4c,0xc200400b},
+{0x50,0xc2230000},
+{0x54,0x92026001},
+{0x58,0x80a2600b},
+{0x5c,0x04bffff6},
+{0x60,0x98032004},
+{0x64,0x7ffffda8},
+{0x68,0x9007bfd0},
+{0x6c,0x80a74011},
+{0x70,0x1480000b},
+{0x74,0x9210001d},
+{0x78,0x832f6002},
+{0x7c,0x8200401e},
+{0xf0,0x41},
+{0x00,0x9a007fd0},
+{0x04,0xc2034000},
+{0x08,0x92026001},
+{0x0c,0xa0040001},
+{0x10,0x80a24011},
+{0x14,0x04bffffc},
+{0x18,0x9a036004},
+{0x1c,0x8224401d},
+{0x20,0x82006001},
+{0x24,0x9b3c201f},
+{0x28,0x81836000},
+{0x2c,0x01000000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0xa07c0001},
+{0x3c,0xc25021ae},
+{0x40,0x80a40001},
+{0x44,0x26800002},
+{0x48,0xa0100001},
+{0x4c,0x92102000},
+{0x50,0x11000019},
+{0x54,0x82050009},
+{0x58,0xda086440},
+{0x5c,0x8205c00d},
+{0x60,0x92026001},
+{0x64,0x94122080},
+{0x68,0x80a36000},
+{0x6c,0x02800011},
+{0x70,0x97286002},
+{0x74,0xc20023c8},
+{0x78,0x83306011},
+{0x7c,0xda02c00a},
+{0xf0,0x42},
+{0x00,0x80886001},
+{0x04,0x02800008},
+{0x08,0x98234010},
+{0x0c,0xda0ca2af},
+{0x10,0x9a5b000d},
+{0x14,0x833b601f},
+{0x18,0x83306019},
+{0x1c,0x9a034001},
+{0x20,0x993b6007},
+{0x24,0x80a2600b},
+{0x28,0x04bfffeb},
+{0x2c,0xd822c00a},
+{0x30,0xaa056001},
+{0x34,0xa604e00c},
+{0x38,0x80a56001},
+{0x3c,0x04bfffb7},
+{0x40,0xa805200c},
+{0x44,0xa404a001},
+{0x48,0xc2002300},
+{0x4c,0x80a48001},
+{0x50,0xac05a00c},
+{0x54,0x08bfffae},
+{0x58,0xae05e00c},
+{0x5c,0xc2082247},
+{0x60,0x80a06000},
+{0x64,0x02800039},
+{0x68,0x01000000},
+{0x6c,0xc20022f8},
+{0x70,0x80a48001},
+{0x74,0x18800035},
+{0x78,0x82048012},
+{0x7c,0x82004012},
+{0xf0,0x43},
+{0x00,0xa1286004},
+{0x04,0xa2100010},
+{0x08,0x92102001},
+{0x0c,0xc20022fc},
+{0x10,0x80a24001},
+{0x14,0x1880000e},
+{0x18,0x03000019},
+{0x1c,0x82106080},
+{0x20,0x82044001},
+{0x24,0x9a006004},
+{0x28,0x9807bfd0},
+{0x2c,0xc2034000},
+{0x30,0xc2230000},
+{0x34,0x92026001},
+{0x38,0xc20022fc},
+{0x3c,0x80a24001},
+{0x40,0x9a036004},
+{0x44,0x08bffffa},
+{0x48,0x98032004},
+{0x4c,0x9007bfd0},
+{0x50,0x7ffffd4d},
+{0x54,0xd20022fc},
+{0x58,0xc2082247},
+{0x5c,0x83286002},
+{0x60,0x8200401e},
+{0x64,0xd8007fd0},
+{0x68,0x80a32000},
+{0x6c,0x26800012},
+{0x70,0xa404a001},
+{0x74,0x92102001},
+{0x78,0xc20022fc},
+{0x7c,0x80a24001},
+{0xf0,0x44},
+{0x00,0x1880000c},
+{0x04,0x03000019},
+{0x08,0x96106080},
+{0x0c,0x9a042004},
+{0x10,0xc203400b},
+{0x14,0x8220400c},
+{0x18,0xc223400b},
+{0x1c,0x92026001},
+{0x20,0xc20022fc},
+{0x24,0x80a24001},
+{0x28,0x08bffffa},
+{0x2c,0x9a036004},
+{0x30,0xa404a001},
+{0x34,0xc20022f8},
+{0x38,0x80a48001},
+{0x3c,0xa2046030},
+{0x40,0x08bfffd2},
+{0x44,0xa0042030},
+{0x48,0x81c7e008},
+{0x4c,0x81e80000},
+{0x50,0x1b000800},
+{0x54,0x9a136040},
+{0x58,0xc20023c8},
+{0x5c,0x8208400d},
+{0x60,0x80a0400d},
+{0x64,0x12800023},
+{0x68,0x90102002},
+{0x6c,0xc2002300},
+{0x70,0x82006001},
+{0x74,0x83306001},
+{0x78,0xda002308},
+{0x7c,0x80a2000d},
+{0xf0,0x45},
+{0x00,0x96006001},
+{0x04,0x1880001b},
+{0x08,0x98007fff},
+{0x0c,0x9a03000c},
+{0x10,0x9a03400c},
+{0x14,0x8202c00b},
+{0x18,0x19000019},
+{0x1c,0x8200400b},
+{0x20,0x83286004},
+{0x24,0x9b2b6004},
+{0x28,0x92132080},
+{0x2c,0x94006008},
+{0x30,0x9a036008},
+{0x34,0x981320b0},
+{0x38,0xd603400c},
+{0x3c,0xc2034009},
+{0x40,0xc223400c},
+{0x44,0xd6234009},
+{0x48,0xc2028009},
+{0x4c,0xd602800c},
+{0x50,0xc222800c},
+{0x54,0xd6228009},
+{0x58,0x90022002},
+{0x5c,0xc2002308},
+{0x60,0x80a20001},
+{0x64,0x9a036008},
+{0x68,0x08bffff4},
+{0x6c,0x9402a008},
+{0x70,0x81c3e008},
+{0x74,0x01000000},
+{0x78,0x9de3bf98},
+{0x7c,0xe0002214},
+{0xf0,0x46},
+{0x00,0x80a42000},
+{0x04,0x02800073},
+{0x08,0x96102001},
+{0x0c,0xc20022f8},
+{0x10,0x80a2c001},
+{0x14,0x1880006f},
+{0x18,0x9210200c},
+{0x1c,0x9410200c},
+{0x20,0xb6102001},
+{0x24,0xfa0022fc},
+{0x28,0x80a6c01d},
+{0x2c,0x38800064},
+{0x30,0x9602e001},
+{0x34,0x19000019},
+{0x38,0xa2132084},
+{0x3c,0x8202801b},
+{0x40,0xb9286002},
+{0x44,0x82132080},
+{0x48,0xf4070001},
+{0x4c,0x80a68010},
+{0x50,0x24800056},
+{0x54,0xb606e001},
+{0x58,0x8213207c},
+{0x5c,0xc2070001},
+{0x60,0x80a68001},
+{0x64,0x26800051},
+{0x68,0xb606e001},
+{0x6c,0xc2070011},
+{0x70,0x80a68001},
+{0x74,0x2480004d},
+{0x78,0xb606e001},
+{0x7c,0xc20023c8},
+{0xf0,0x47},
+{0x00,0x80886040},
+{0x04,0x0280000a},
+{0x08,0x9006e001},
+{0x0c,0x83376001},
+{0x10,0x80a6c001},
+{0x14,0x28800007},
+{0x18,0x9a102000},
+{0x1c,0x8227401b},
+{0x20,0xb6006001},
+{0x24,0x10800003},
+{0x28,0x9a102001},
+{0x2c,0x9a102000},
+{0x30,0xfa00221c},
+{0x34,0xc2002220},
+{0x38,0xba5f401b},
+{0x3c,0xba074001},
+{0x40,0xba5e801d},
+{0x44,0x833f601f},
+{0x48,0x83306016},
+{0x4c,0xba074001},
+{0x50,0xc2002224},
+{0x54,0x8258401b},
+{0x58,0xbb3f600a},
+{0x5c,0xba074001},
+{0x60,0xc2002240},
+{0x64,0x9e074001},
+{0x68,0xc2002218},
+{0x6c,0xb806c001},
+{0x70,0xc20023c8},
+{0x74,0x80886040},
+{0x78,0x0280000e},
+{0x7c,0xb0132080},
+{0xf0,0x48},
+{0x00,0xfa0022fc},
+{0x04,0x82076001},
+{0x08,0x83306001},
+{0x0c,0x80a70001},
+{0x10,0x18800024},
+{0x14,0xbb376001},
+{0x18,0x80a36000},
+{0x1c,0x32800006},
+{0x20,0xc20022fc},
+{0x24,0x80a7001d},
+{0x28,0x1880001f},
+{0x2c,0xb6100008},
+{0x30,0xc20022fc},
+{0x34,0xba20401c},
+{0x38,0x80a70001},
+{0x3c,0x18800019},
+{0x40,0xba076001},
+{0x44,0x80a36000},
+{0x48,0x22800002},
+{0x4c,0xba10001c},
+{0x50,0x8202401d},
+{0x54,0xb7286002},
+{0x58,0xc206c018},
+{0x5c,0xb220400f},
+{0x60,0xf226c018},
+{0x64,0xfa002228},
+{0x68,0x8227001d},
+{0x6c,0x80a7001d},
+{0x70,0xb45bc001},
+{0x74,0x04bfffdf},
+{0x78,0xb8072001},
+{0x7c,0xc200222c},
+{0xf0,0x49},
+{0x00,0x825e8001},
+{0x04,0xbb38601f},
+{0x08,0xbb376018},
+{0x0c,0x8200401d},
+{0x10,0x83386008},
+{0x14,0x82264001},
+{0x18,0x10bfffd6},
+{0x1c,0xc226c018},
+{0x20,0xb6100008},
+{0x24,0xb606e001},
+{0x28,0xfa0022fc},
+{0x2c,0x80a6c01d},
+{0x30,0x08bfffa4},
+{0x34,0x8202801b},
+{0x38,0x9602e001},
+{0x3c,0xc20022f8},
+{0x40,0x80a2c001},
+{0x44,0x9402a00c},
+{0x48,0x08bfff96},
+{0x4c,0x9202600c},
+{0x50,0x81c7e008},
+{0x54,0x81e80000},
+{0x58,0x9de3bf98},
+{0x5c,0xd6002214},
+{0x60,0x80a2e000},
+{0x64,0x02800062},
+{0x68,0x9a102001},
+{0x6c,0xc20022fc},
+{0x70,0x80a34001},
+{0x74,0x1880005e},
+{0x78,0x11000019},
+{0x7c,0xb0102001},
+{0xf0,0x4a},
+{0x00,0xf60022f8},
+{0x04,0x80a6001b},
+{0x08,0x18800054},
+{0x0c,0x832b6002},
+{0x10,0xb2006030},
+{0x14,0x15000019},
+{0x18,0x921220b0},
+{0x1c,0xb412a080},
+{0x20,0xf806401a},
+{0x24,0x80a7000b},
+{0x28,0x24800048},
+{0x2c,0xb0062001},
+{0x30,0x8212a050},
+{0x34,0xc2064001},
+{0x38,0x80a70001},
+{0x3c,0x26800043},
+{0x40,0xb0062001},
+{0x44,0xc2064009},
+{0x48,0x80a70001},
+{0x4c,0x2480003f},
+{0x50,0xb0062001},
+{0x54,0xfa00221c},
+{0x58,0xc2002220},
+{0x5c,0xba5f4018},
+{0x60,0xba074001},
+{0x64,0xba5f001d},
+{0x68,0x833f601f},
+{0x6c,0x83306016},
+{0x70,0xba074001},
+{0x74,0xc2002224},
+{0x78,0x82584018},
+{0x7c,0xbb3f600a},
+{0xf0,0x4b},
+{0x00,0xba074001},
+{0x04,0xc2002218},
+{0x08,0xb8060001},
+{0x0c,0xc2002240},
+{0x10,0x80a7001b},
+{0x14,0x1880002a},
+{0x18,0x98074001},
+{0x1c,0x8207001c},
+{0x20,0x8200401c},
+{0x24,0x83286002},
+{0x28,0x8200400d},
+{0x2c,0x9e10001a},
+{0x30,0xb5286002},
+{0x34,0xc206800f},
+{0x38,0x8220400c},
+{0x3c,0xc226800f},
+{0x40,0xfa002228},
+{0x44,0x80a7001d},
+{0x48,0x24800019},
+{0x4c,0xb8072001},
+{0x50,0xc20023c8},
+{0x54,0x80886080},
+{0x58,0x02800008},
+{0x5c,0xb6076001},
+{0x60,0x80a7001b},
+{0x64,0x32800006},
+{0x68,0x8210001c},
+{0x6c,0xc20022f8},
+{0x70,0x10800003},
+{0x74,0x82006001},
+{0x78,0x8210001c},
+{0x7c,0xba20401d},
+{0xf0,0x4c},
+{0x00,0xc200222c},
+{0x04,0xba5b001d},
+{0x08,0xba5f4001},
+{0x0c,0x833f601f},
+{0x10,0x83306018},
+{0x14,0xba074001},
+{0x18,0xc206800f},
+{0x1c,0xbb3f6008},
+{0x20,0x8220401d},
+{0x24,0xc226800f},
+{0x28,0xb8072001},
+{0x2c,0xc20022f8},
+{0x30,0x80a70001},
+{0x34,0x08bfffe0},
+{0x38,0xb406a030},
+{0x3c,0xb0062001},
+{0x40,0xb2066030},
+{0x44,0xb0062001},
+{0x48,0xf60022f8},
+{0x4c,0x80a6001b},
+{0x50,0x08bfffb3},
+{0x54,0xb2066030},
+{0x58,0x9a036001},
+{0x5c,0xc20022fc},
+{0x60,0x80a34001},
+{0x64,0x08bfffa7},
+{0x68,0xb0102001},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0x9de3bf98},
+{0x78,0xc20023d0},
+{0x7c,0x80a06000},
+{0xf0,0x4d},
+{0x00,0x02800052},
+{0x04,0xb4102001},
+{0x08,0xc2002300},
+{0x0c,0x80a68001},
+{0x10,0x18800025},
+{0x14,0x03000019},
+{0x18,0x9a106080},
+{0x1c,0xb0106088},
+{0x20,0x9e106084},
+{0x24,0xb210607c},
+{0x28,0xb6102003},
+{0x2c,0xb92ee004},
+{0x30,0xc24823d2},
+{0x34,0xfa07000f},
+{0x38,0xba5f4001},
+{0x3c,0x833f601f},
+{0x40,0x83306019},
+{0x44,0xba074001},
+{0x48,0xc2070018},
+{0x4c,0xbb3f6007},
+{0x50,0x8220401d},
+{0x54,0xc2270018},
+{0x58,0xc2002308},
+{0x5c,0xb92ee002},
+{0x60,0xb8070001},
+{0x64,0xb92f2002},
+{0x68,0xc24823d3},
+{0x6c,0xfa07000d},
+{0x70,0xba5f4001},
+{0x74,0x833f601f},
+{0x78,0x83306019},
+{0x7c,0xba074001},
+{0xf0,0x4e},
+{0x00,0xc2070019},
+{0x04,0xbb3f6007},
+{0x08,0x8220401d},
+{0x0c,0xc2270019},
+{0x10,0xb406a001},
+{0x14,0xc2002300},
+{0x18,0x80a68001},
+{0x1c,0x08bfffe4},
+{0x20,0xb606e003},
+{0x24,0xb6102001},
+{0x28,0xc2002308},
+{0x2c,0x80a6c001},
+{0x30,0x18800026},
+{0x34,0x03000019},
+{0x38,0x9e106080},
+{0x3c,0xb21060e0},
+{0x40,0xb01060b0},
+{0x44,0xb4106050},
+{0x48,0xb92ee002},
+{0x4c,0xc24823d0},
+{0x50,0xfa070018},
+{0x54,0xba5f4001},
+{0x58,0x833f601f},
+{0x5c,0x83306019},
+{0x60,0xba074001},
+{0x64,0xc2070019},
+{0x68,0xbb3f6007},
+{0x6c,0x8220401d},
+{0x70,0xc2270019},
+{0x74,0xc2002300},
+{0x78,0xb8004001},
+{0x7c,0xb8070001},
+{0xf0,0x4f},
+{0x00,0xb92f2002},
+{0x04,0xb807001b},
+{0x08,0xb92f2002},
+{0x0c,0xc24823d1},
+{0x10,0xfa07000f},
+{0x14,0xba5f4001},
+{0x18,0x833f601f},
+{0x1c,0x83306019},
+{0x20,0xba074001},
+{0x24,0xc207001a},
+{0x28,0xbb3f6007},
+{0x2c,0x8220401d},
+{0x30,0xc227001a},
+{0x34,0xb606e001},
+{0x38,0xc2002308},
+{0x3c,0x80a6c001},
+{0x40,0x08bfffe3},
+{0x44,0xb92ee002},
+{0x48,0x81c7e008},
+{0x4c,0x81e80000},
+{0x50,0x9de3bf70},
+{0x54,0x96102001},
+{0x58,0xd0002300},
+{0x5c,0x80a2c008},
+{0x60,0x1880001a},
+{0x64,0x9e102000},
+{0x68,0x03000019},
+{0x6c,0x82106080},
+{0x70,0x82006030},
+{0x74,0xd2002308},
+{0x78,0x94102001},
+{0x7c,0x80a28009},
+{0xf0,0x50},
+{0x00,0x3880000f},
+{0x04,0x9602e001},
+{0x08,0x9a006004},
+{0x0c,0xd8034000},
+{0x10,0x80a3000f},
+{0x14,0x04800005},
+{0x18,0x9a036004},
+{0x1c,0x9e10000c},
+{0x20,0xa010000b},
+{0x24,0xa410000a},
+{0x28,0x9402a001},
+{0x2c,0x80a28009},
+{0x30,0x28bffff8},
+{0x34,0xd8034000},
+{0x38,0x9602e001},
+{0x3c,0x80a2c008},
+{0x40,0x08bfffee},
+{0x44,0x82006030},
+{0x48,0xa2042001},
+{0x4c,0x96043fff},
+{0x50,0x80a2c011},
+{0x54,0x1480002e},
+{0x58,0x9e102000},
+{0x5c,0x8202c00b},
+{0x60,0x8200400b},
+{0x64,0x1b000019},
+{0x68,0xa6136080},
+{0x6c,0x91286002},
+{0x70,0xa004a001},
+{0x74,0x9404bfff},
+{0x78,0x80a28010},
+{0x7c,0x14800020},
+{0xf0,0x51},
+{0x00,0x8202000a},
+{0x04,0x9b2be002},
+{0x08,0x83286002},
+{0x0c,0x9a03401e},
+{0x10,0x92004013},
+{0x14,0x9a037fd0},
+{0x18,0x833aa01f},
+{0x1c,0x8220400a},
+{0x20,0x80a2e000},
+{0x24,0x0480000f},
+{0x28,0x9930601f},
+{0x2c,0xc2002300},
+{0x30,0x80a0400b},
+{0x34,0x82603fff},
+{0x38,0x8088400c},
+{0x3c,0x2280000a},
+{0x40,0xc0234000},
+{0x44,0xc2002308},
+{0x48,0x80a28001},
+{0x4c,0x38800006},
+{0x50,0xc0234000},
+{0x54,0xc2024000},
+{0x58,0x10800003},
+{0x5c,0xc2234000},
+{0x60,0xc0234000},
+{0x64,0x9402a001},
+{0x68,0x9e03e001},
+{0x6c,0x9a036004},
+{0x70,0x80a28010},
+{0x74,0x04bfffe9},
+{0x78,0x92026004},
+{0x7c,0x9602e001},
+{0xf0,0x52},
+{0x00,0x80a2c011},
+{0x04,0x04bfffdc},
+{0x08,0x9002200c},
+{0x0c,0x92102009},
+{0x10,0x7ffffb7d},
+{0x14,0x9007bfd0},
+{0x18,0xc207bfec},
+{0x1c,0xd807bfe8},
+{0x20,0x98030001},
+{0x24,0xc207bff0},
+{0x28,0x98030001},
+{0x2c,0xda082347},
+{0x30,0x9a036001},
+{0x34,0xc200256c},
+{0x38,0x8258400d},
+{0x3c,0xd608257f},
+{0x40,0x9602e001},
+{0x44,0x9b33201f},
+{0x48,0x9803000d},
+{0x4c,0x81800000},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x8270400b},
+{0x60,0xc220256c},
+{0x64,0x993b2001},
+{0x68,0x94102000},
+{0x6c,0x92102c18},
+{0x70,0x972aa002},
+{0x74,0xc212e3b4},
+{0x78,0x825b0001},
+{0x7c,0x9b38601f},
+{0xf0,0x53},
+{0x00,0x9b336018},
+{0x04,0x8200400d},
+{0x08,0xda12e3b6},
+{0x0c,0x83386008},
+{0x10,0x8200400d},
+{0x14,0xda00256c},
+{0x18,0x8258400d},
+{0x1c,0x83306007},
+{0x20,0x9402a001},
+{0x24,0x80a06c18},
+{0x28,0x04800003},
+{0x2c,0xc222e520},
+{0x30,0xd222e520},
+{0x34,0x80a2a003},
+{0x38,0x04bfffef},
+{0x3c,0x972aa002},
+{0x40,0xc20023c0},
+{0x44,0x80a06000},
+{0x48,0x02800007},
+{0x4c,0x82103001},
+{0x50,0xc2002200},
+{0x54,0x80a06000},
+{0x58,0x22800005},
+{0x5c,0xc200259c},
+{0x60,0x82103001},
+{0x64,0xc220252c},
+{0x68,0xc200259c},
+{0x6c,0x80a06000},
+{0x70,0x02800005},
+{0x74,0xc2002288},
+{0x78,0x9b306001},
+{0x7c,0x83306002},
+{0xf0,0x54},
+{0x00,0x8200400d},
+{0x04,0xc220251c},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x9de3bf98},
+{0x14,0x82064019},
+{0x18,0x82004019},
+{0x1c,0x83286002},
+{0x20,0x82004018},
+{0x24,0x3b000019},
+{0x28,0x83286002},
+{0x2c,0xba176080},
+{0x30,0x9a066001},
+{0x34,0xde00401d},
+{0x38,0xb2067fff},
+{0x3c,0xc2002478},
+{0x40,0x9823c001},
+{0x44,0x80a6400d},
+{0x48,0xb4062001},
+{0x4c,0x1480002a},
+{0x50,0x96102000},
+{0x54,0x82064019},
+{0x58,0x82004019},
+{0x5c,0x9410001d},
+{0x60,0xb9286002},
+{0x64,0xb006bffe},
+{0x68,0x833e601f},
+{0x6c,0xba070018},
+{0x70,0x82204019},
+{0x74,0xbb2f6002},
+{0x78,0xb730601f},
+{0x7c,0xba07400a},
+{0xf0,0x55},
+{0x00,0x80a62000},
+{0x04,0x24800015},
+{0x08,0xb0062001},
+{0x0c,0xc2002308},
+{0x10,0x80a04018},
+{0x14,0x82603fff},
+{0x18,0x8088401b},
+{0x1c,0x2280000f},
+{0x20,0xb0062001},
+{0x24,0xc2002300},
+{0x28,0x80a64001},
+{0x2c,0x3880000b},
+{0x30,0xb0062001},
+{0x34,0xc2074000},
+{0x38,0x80a0400f},
+{0x3c,0x04800004},
+{0x40,0x80a0400c},
+{0x44,0x1080000d},
+{0x48,0xb0102000},
+{0x4c,0x24800002},
+{0x50,0x96102001},
+{0x54,0xb0062001},
+{0x58,0x80a6001a},
+{0x5c,0x04bfffe9},
+{0x60,0xba076004},
+{0x64,0xb2066001},
+{0x68,0x80a6400d},
+{0x6c,0x04bfffde},
+{0x70,0xb807200c},
+{0x74,0xb010000b},
+{0x78,0x81c7e008},
+{0x7c,0x81e80000},
+{0xf0,0x56},
+{0x00,0x9de3bf58},
+{0x04,0xc208224d},
+{0x08,0x80a06000},
+{0x0c,0x0280006b},
+{0x10,0x94102000},
+{0x14,0x90067ffe},
+{0x18,0xac066002},
+{0x1c,0x80a20016},
+{0x20,0x14800044},
+{0x24,0x9e102000},
+{0x28,0x82020008},
+{0x2c,0x82004008},
+{0x30,0xa1286002},
+{0x34,0xa8062002},
+{0x38,0x92063ffe},
+{0x3c,0x80a24014},
+{0x40,0x14800038},
+{0x44,0x82064019},
+{0x48,0x82204008},
+{0x4c,0x98004001},
+{0x50,0x98030001},
+{0x54,0x9b3a201f},
+{0x58,0x96040009},
+{0x5c,0x952be002},
+{0x60,0x03000019},
+{0x64,0x9a234008},
+{0x68,0xae106080},
+{0x6c,0x972ae002},
+{0x70,0x9402801e},
+{0x74,0xa72b2002},
+{0x78,0xab33601f},
+{0x7c,0x9602c017},
+{0xf0,0x57},
+{0x00,0x9402bfb8},
+{0x04,0xa4063fff},
+{0x08,0xa2062001},
+{0x0c,0x98067fff},
+{0x10,0x82060018},
+{0x14,0x82204009},
+{0x18,0x8204c001},
+{0x1c,0x80a24012},
+{0x20,0x0680000b},
+{0x24,0x9b286002},
+{0x28,0x80a24011},
+{0x2c,0x14800009},
+{0x30,0x80a26000},
+{0x34,0x80a2000c},
+{0x38,0x06800005},
+{0x3c,0x82066001},
+{0x40,0x80a20001},
+{0x44,0x24800014},
+{0x48,0x92026001},
+{0x4c,0x80a26000},
+{0x50,0x2480000d},
+{0x54,0xc2034017},
+{0x58,0xc2002308},
+{0x5c,0x80a04009},
+{0x60,0x82603fff},
+{0x64,0x80884015},
+{0x68,0x22800007},
+{0x6c,0xc2034017},
+{0x70,0xc2002300},
+{0x74,0x80a20001},
+{0x78,0x38800003},
+{0x7c,0xc2034017},
+{0xf0,0x58},
+{0x00,0xc202c000},
+{0x04,0xc2228000},
+{0x08,0x9e03e001},
+{0x0c,0x9402a004},
+{0x10,0x92026001},
+{0x14,0x80a24014},
+{0x18,0x04bfffde},
+{0x1c,0x9602e004},
+{0x20,0x90022001},
+{0x24,0x80a20016},
+{0x28,0x04bfffc4},
+{0x2c,0xa004200c},
+{0x30,0x9007bfb8},
+{0x34,0x7ffffab4},
+{0x38,0x92102010},
+{0x3c,0xda08224f},
+{0x40,0xb00b60ff},
+{0x44,0xd608224d},
+{0x48,0x80a6000b},
+{0x4c,0x1480000b},
+{0x50,0x9e102000},
+{0x54,0x832e2002},
+{0x58,0x8200401e},
+{0x5c,0x98007fb8},
+{0x60,0xc2030000},
+{0x64,0xb0062001},
+{0x68,0x9e03c001},
+{0x6c,0x80a6000b},
+{0x70,0x04bffffc},
+{0x74,0x98032004},
+{0x78,0x9a0b60ff},
+{0x7c,0xc208224d},
+{0xf0,0x59},
+{0x00,0x8220400d},
+{0x04,0xda08224c},
+{0x08,0x82006001},
+{0x0c,0x9a5bc00d},
+{0x10,0x993b601f},
+{0x14,0x81832000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x9a7b4001},
+{0x28,0x833b601f},
+{0x2c,0x83306019},
+{0x30,0x9a034001},
+{0x34,0x953b6007},
+{0x38,0x81c7e008},
+{0x3c,0x91e8000a},
+{0x40,0x9de3bf88},
+{0x44,0xa410001b},
+{0x48,0xa610001a},
+{0x4c,0x94062001},
+{0x50,0x96066001},
+{0x54,0xa207bff8},
+{0x58,0x8207bfe8},
+{0x5c,0xb6102003},
+{0x60,0xc0204000},
+{0x64,0xb686ffff},
+{0x68,0x1cbffffe},
+{0x6c,0x82006004},
+{0x70,0xb2067fff},
+{0x74,0x80a6400b},
+{0x78,0x14800030},
+{0x7c,0x82064019},
+{0xf0,0x5a},
+{0x00,0xba02c00b},
+{0x04,0x82004019},
+{0x08,0xba07400b},
+{0x0c,0xba20401d},
+{0x10,0x39000019},
+{0x14,0xa0172080},
+{0x18,0x9827400a},
+{0x1c,0x9b286002},
+{0x20,0xb602bffe},
+{0x24,0x8203401b},
+{0x28,0x83286002},
+{0x2c,0xba06c00c},
+{0x30,0xb0004010},
+{0x34,0xb4076008},
+{0x38,0x90102001},
+{0x3c,0x932a001a},
+{0x40,0x9e102000},
+{0x44,0xb92be002},
+{0x48,0xfa072520},
+{0x4c,0xba5f4012},
+{0x50,0x833f601f},
+{0x54,0x83306018},
+{0x58,0xba074001},
+{0x5c,0xc2060000},
+{0x60,0x82204013},
+{0x64,0xbb3f6008},
+{0x68,0x9e03e001},
+{0x6c,0x80a0401d},
+{0x70,0x04800005},
+{0x74,0xb8070011},
+{0x78,0xc2073ff0},
+{0x7c,0x82104009},
+{0xf0,0x5b},
+{0x00,0xc2273ff0},
+{0x04,0x80a3e003},
+{0x08,0x08bffff0},
+{0x0c,0xb92be002},
+{0x10,0xb606e001},
+{0x14,0xb406a001},
+{0x18,0x80a6c00a},
+{0x1c,0x04bfffe8},
+{0x20,0xb0062004},
+{0x24,0xb2066001},
+{0x28,0x9a03600c},
+{0x2c,0x80a6400b},
+{0x30,0x04bfffdc},
+{0x34,0x98032003},
+{0x38,0xc207bfe8},
+{0x3c,0x80886010},
+{0x40,0x0280000a},
+{0x44,0xfa07bfec},
+{0x48,0xc207bff4},
+{0x4c,0x80886082},
+{0x50,0x02800007},
+{0x54,0x808f6010},
+{0x58,0x80886028},
+{0x5c,0x1280001f},
+{0x60,0xb0102003},
+{0x64,0xfa07bfec},
+{0x68,0x808f6010},
+{0x6c,0x02800012},
+{0x70,0xc207bff0},
+{0x74,0x808f6082},
+{0x78,0x02800007},
+{0x7c,0x808f6028},
+{0xf0,0x5c},
+{0x00,0xc207bff4},
+{0x04,0x80886028},
+{0x08,0x32800014},
+{0x0c,0xb0102002},
+{0x10,0x808f6028},
+{0x14,0x02800008},
+{0x18,0xc207bff0},
+{0x1c,0xc207bff4},
+{0x20,0x80886082},
+{0x24,0x02800004},
+{0x28,0xc207bff0},
+{0x2c,0x1080000b},
+{0x30,0xb0102002},
+{0x34,0x80886010},
+{0x38,0x02800008},
+{0x3c,0xb0102000},
+{0x40,0x80886082},
+{0x44,0x02800005},
+{0x48,0x80886028},
+{0x4c,0x12800003},
+{0x50,0xb0102001},
+{0x54,0xb0102000},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0xc2002308},
+{0x64,0x80a20001},
+{0x68,0x08800019},
+{0x6c,0x96100008},
+{0x70,0xc2002304},
+{0x74,0x80a06000},
+{0x78,0x02800007},
+{0x7c,0x82024009},
+{0xf0,0x5d},
+{0x00,0xc2002300},
+{0x04,0x80a24001},
+{0x08,0x08800037},
+{0x0c,0x90102000},
+{0x10,0x82024009},
+{0x14,0x82004009},
+{0x18,0x9a02e001},
+{0x1c,0x83286002},
+{0x20,0x8200400d},
+{0x24,0x1b000019},
+{0x28,0x83286002},
+{0x2c,0x9a136080},
+{0x30,0xda00400d},
+{0x34,0xc200251c},
+{0x38,0x80a34001},
+{0x3c,0x0480002a},
+{0x40,0x90102000},
+{0x44,0x10800014},
+{0x48,0xc20021cc},
+{0x4c,0xc200237c},
+{0x50,0x80a06000},
+{0x54,0x12800024},
+{0x58,0x90102000},
+{0x5c,0x9a026001},
+{0x60,0x8203400d},
+{0x64,0x8200400d},
+{0x68,0x83286002},
+{0x6c,0x8200400b},
+{0x70,0x1b000019},
+{0x74,0x83286002},
+{0x78,0x9a136080},
+{0x7c,0xda00400d},
+{0xf0,0x5e},
+{0x00,0xc200251c},
+{0x04,0x80a34001},
+{0x08,0x04800017},
+{0x0c,0x01000000},
+{0x10,0xc20021cc},
+{0x14,0x9810000d},
+{0x18,0x80a06000},
+{0x1c,0x02800012},
+{0x20,0x9010000d},
+{0x24,0x10800004},
+{0x28,0x832ae010},
+{0x2c,0x1080000e},
+{0x30,0x9010000c},
+{0x34,0x90004009},
+{0x38,0x9a102007},
+{0x3c,0x832b6002},
+{0x40,0xc20061b0},
+{0x44,0x80a06000},
+{0x48,0x02800006},
+{0x4c,0x80a04008},
+{0x50,0x02bffff7},
+{0x54,0x9a837fff},
+{0x58,0x3cbffffa},
+{0x5c,0x832b6002},
+{0x60,0x90102000},
+{0x64,0x81c3e008},
+{0x68,0x01000000},
+{0x6c,0x9de3bf98},
+{0x70,0xc200254c},
+{0x74,0x82087fbf},
+{0x78,0xc220254c},
+{0x7c,0xc020259c},
+{0xf0,0x5f},
+{0x00,0xc0202514},
+{0x04,0xba102000},
+{0x08,0xa2102000},
+{0x0c,0x832c6002},
+{0x10,0xa2046001},
+{0x14,0x80a46009},
+{0x18,0x04bffffd},
+{0x1c,0xc0206610},
+{0x20,0xc2002568},
+{0x24,0x80a06000},
+{0x28,0x02800004},
+{0x2c,0xa4102001},
+{0x30,0x82007fff},
+{0x34,0xc2202568},
+{0x38,0xc20022f8},
+{0x3c,0x80a48001},
+{0x40,0x18800073},
+{0x44,0xae10200c},
+{0x48,0xa2102001},
+{0x4c,0xc20022fc},
+{0x50,0x80a44001},
+{0x54,0x18800069},
+{0x58,0x03000044},
+{0x5c,0xa6048001},
+{0x60,0x832de002},
+{0x64,0xaa006004},
+{0x68,0xa8100013},
+{0x6c,0x2d000040},
+{0x70,0xc2002308},
+{0x74,0x80a44001},
+{0x78,0x38800037},
+{0x7c,0xc2002568},
+{0xf0,0x60},
+{0x00,0xc2002300},
+{0x04,0x80a48001},
+{0x08,0x38800033},
+{0x0c,0xc2002568},
+{0x10,0x03000019},
+{0x14,0x82106080},
+{0x18,0xda054001},
+{0x1c,0xc2002474},
+{0x20,0x80a34001},
+{0x24,0x0680004d},
+{0x28,0x1b000040},
+{0x2c,0x90100011},
+{0x30,0x7ffffe78},
+{0x34,0x92100012},
+{0x38,0x80a22000},
+{0x3c,0x02800047},
+{0x40,0x1b000040},
+{0x44,0x92100012},
+{0x48,0x7ffffeae},
+{0x4c,0x90100011},
+{0x50,0xa0100008},
+{0x54,0x90100011},
+{0x58,0x92100012},
+{0x5c,0x94100010},
+{0x60,0x7fffff18},
+{0x64,0xd6002470},
+{0x68,0x80a22000},
+{0x6c,0x0280003b},
+{0x70,0x1b000040},
+{0x74,0x94100010},
+{0x78,0x90100011},
+{0x7c,0x92100012},
+{0xf0,0x61},
+{0x00,0x7fffff10},
+{0x04,0x96102100},
+{0x08,0x80a22000},
+{0x0c,0x0280000a},
+{0x10,0xd8002514},
+{0x14,0xc200254c},
+{0x18,0x82106040},
+{0x1c,0xc220254c},
+{0x20,0xc2002280},
+{0x24,0xc2202568},
+{0x28,0x9b2b2002},
+{0x2c,0x10800006},
+{0x30,0x82058012},
+{0x34,0x1b000010},
+{0x38,0x82058012},
+{0x3c,0x8200400d},
+{0x40,0x9b2b2002},
+{0x44,0xc2236610},
+{0x48,0x82032001},
+{0x4c,0x1080001f},
+{0x50,0xc2202514},
+{0x54,0x80a06000},
+{0x58,0x12800020},
+{0x5c,0x1b000040},
+{0x60,0x90100011},
+{0x64,0x7fffff5f},
+{0x68,0x92100012},
+{0x6c,0x80a22000},
+{0x70,0x0280001a},
+{0x74,0x1b000040},
+{0x78,0xda00259c},
+{0x7c,0x80a36000},
+{0xf0,0x62},
+{0x00,0x2280000c},
+{0x04,0xc2002514},
+{0x08,0xc20023c8},
+{0x0c,0x80886100},
+{0x10,0x22800008},
+{0x14,0xc2002514},
+{0x18,0x80a2001d},
+{0x1c,0x2480000f},
+{0x20,0x1b000040},
+{0x24,0x832b6002},
+{0x28,0x10800007},
+{0x2c,0xe820660c},
+{0x30,0x9b286002},
+{0x34,0xe6236610},
+{0x38,0x82006001},
+{0x3c,0xc220259c},
+{0x40,0xc2202514},
+{0x44,0xba100008},
+{0x48,0xc2002514},
+{0x4c,0x80a06009},
+{0x50,0x1880000f},
+{0x54,0x1b000040},
+{0x58,0xa2046001},
+{0x5c,0xc20022fc},
+{0x60,0xa604c00d},
+{0x64,0x80a44001},
+{0x68,0xaa056004},
+{0x6c,0xac05800d},
+{0x70,0x08bfffa0},
+{0x74,0xa805000d},
+{0x78,0xa404a001},
+{0x7c,0xc20022f8},
+{0xf0,0x63},
+{0x00,0x80a48001},
+{0x04,0x08bfff91},
+{0x08,0xae05e00c},
+{0x0c,0x81c7e008},
+{0x10,0x81e80000},
+{0x14,0x80a22000},
+{0x18,0x2280001c},
+{0x1c,0xc2002558},
+{0x20,0xd4002208},
+{0x24,0x80a2a000},
+{0x28,0x0280002e},
+{0x2c,0x01000000},
+{0x30,0xc2002514},
+{0x34,0x80a06000},
+{0x38,0x12800007},
+{0x3c,0xc2002558},
+{0x40,0x80a06000},
+{0x44,0x02800027},
+{0x48,0x82007fff},
+{0x4c,0x10800025},
+{0x50,0xc2202558},
+{0x54,0x80a06000},
+{0x58,0x32800022},
+{0x5c,0xd4202558},
+{0x60,0x17200040},
+{0x64,0x1b3fc200},
+{0x68,0x8212e001},
+{0x6c,0xc2234000},
+{0x70,0xc2002298},
+{0x74,0x98136070},
+{0x78,0xc2230000},
+{0x7c,0xd6234000},
+{0xf0,0x64},
+{0x00,0x10800018},
+{0x04,0xd4202558},
+{0x08,0x80a06000},
+{0x0c,0x32800007},
+{0x10,0xc2002514},
+{0x14,0xc2002208},
+{0x18,0x80a06000},
+{0x1c,0x1280000e},
+{0x20,0x033fc200},
+{0x24,0xc2002514},
+{0x28,0x80a06001},
+{0x2c,0x08800006},
+{0x30,0xd800233c},
+{0x34,0x82007fff},
+{0x38,0xda002204},
+{0x3c,0x8258400d},
+{0x40,0x98030001},
+{0x44,0x033fc200},
+{0x48,0x82106070},
+{0x4c,0x10800005},
+{0x50,0xd8204000},
+{0x54,0xda002234},
+{0x58,0x82106070},
+{0x5c,0xda204000},
+{0x60,0x81c3e008},
+{0x64,0x01000000},
+{0x68,0x82220009},
+{0x6c,0x9a58400a},
+{0x70,0x833b601f},
+{0x74,0x80a20009},
+{0x78,0x83306019},
+{0x7c,0x04800004},
+{0xf0,0x65},
+{0x00,0x90102000},
+{0x04,0x82034001},
+{0x08,0x91386007},
+{0x0c,0x81c3e008},
+{0x10,0x01000000},
+{0x14,0x9de3bf98},
+{0x18,0xc2002308},
+{0x1c,0x82006001},
+{0x20,0xf80022fc},
+{0x24,0x80a70001},
+{0x28,0x2a800019},
+{0x2c,0xc2002300},
+{0x30,0x31000019},
+{0x34,0xb6102001},
+{0x38,0xc20022f8},
+{0x3c,0x80a6c001},
+{0x40,0x1880000c},
+{0x44,0x832f2002},
+{0x48,0xba006030},
+{0x4c,0xb2162084},
+{0x50,0xb4162080},
+{0x54,0xc207401a},
+{0x58,0xc2274019},
+{0x5c,0xb606e001},
+{0x60,0xc20022f8},
+{0x64,0x80a6c001},
+{0x68,0x08bffffb},
+{0x6c,0xba076030},
+{0x70,0xc2002308},
+{0x74,0xb8073fff},
+{0x78,0x82006001},
+{0x7c,0x80a70001},
+{0xf0,0x66},
+{0x00,0x1abfffee},
+{0x04,0xb6102001},
+{0x08,0xc2002300},
+{0x0c,0x82006001},
+{0x10,0xf60022f8},
+{0x14,0x80a6c001},
+{0x18,0x0a80001a},
+{0x1c,0x8206c01b},
+{0x20,0x8200401b},
+{0x24,0xb5286004},
+{0x28,0x1f000019},
+{0x2c,0xb8102001},
+{0x30,0xc2002308},
+{0x34,0x80a70001},
+{0x38,0x3880000d},
+{0x3c,0xc2002300},
+{0x40,0xb013e0b0},
+{0x44,0xb213e080},
+{0x48,0xba06a004},
+{0x4c,0xc2074019},
+{0x50,0xc2274018},
+{0x54,0xb8072001},
+{0x58,0xc2002308},
+{0x5c,0x80a70001},
+{0x60,0x08bffffb},
+{0x64,0xba076004},
+{0x68,0xc2002300},
+{0x6c,0xb606ffff},
+{0x70,0x82006001},
+{0x74,0x80a6c001},
+{0x78,0x1abfffed},
+{0x7c,0xb406bfd0},
+{0xf0,0x67},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x9de3bf98},
+{0x0c,0xc20022f8},
+{0x10,0x80a07fff},
+{0x14,0x0280001d},
+{0x18,0xa8102001},
+{0x1c,0xa6102003},
+{0x20,0x23000019},
+{0x24,0xa12ce004},
+{0x28,0x82146088},
+{0x2c,0xa4146084},
+{0x30,0xd2040001},
+{0x34,0xd408228c},
+{0x38,0x7fffffac},
+{0x3c,0xd0040012},
+{0x40,0x9a146080},
+{0x44,0xd024000d},
+{0x48,0xc2002308},
+{0x4c,0xa12ce002},
+{0x50,0xa0040001},
+{0x54,0xa12c2002},
+{0x58,0xa214607c},
+{0x5c,0xd004000d},
+{0x60,0xd2040011},
+{0x64,0x7fffffa1},
+{0x68,0xd408228d},
+{0x6c,0xd0240012},
+{0x70,0xc20022f8},
+{0x74,0xa8052001},
+{0x78,0x82006001},
+{0x7c,0x80a50001},
+{0xf0,0x68},
+{0x00,0x08bfffe8},
+{0x04,0xa604e003},
+{0x08,0xa6102001},
+{0x0c,0xc2002308},
+{0x10,0x80a4c001},
+{0x14,0x18800019},
+{0x18,0x23000019},
+{0x1c,0xa12ce002},
+{0x20,0x821460e0},
+{0x24,0xa41460b0},
+{0x28,0xd2040001},
+{0x2c,0xd408228e},
+{0x30,0x7fffff8e},
+{0x34,0xd0040012},
+{0x38,0x9a146080},
+{0x3c,0xd024000d},
+{0x40,0xc2002300},
+{0x44,0xa0004001},
+{0x48,0xa0040001},
+{0x4c,0xa12c2002},
+{0x50,0xa0040013},
+{0x54,0xa12c2002},
+{0x58,0xa2146050},
+{0x5c,0xd004000d},
+{0x60,0xd2040011},
+{0x64,0x7fffff81},
+{0x68,0xd408228f},
+{0x6c,0xd0240012},
+{0x70,0x10bfffe7},
+{0x74,0xa604e001},
+{0x78,0x17000019},
+{0x7c,0x9012e084},
+{0xf0,0x69},
+{0x00,0x9212e0b0},
+{0x04,0xda024000},
+{0x08,0xc2020000},
+{0x0c,0x8200400d},
+{0x10,0x9412e080},
+{0x14,0x83386001},
+{0x18,0xc2228000},
+{0x1c,0xd8002308},
+{0x20,0x992b2002},
+{0x24,0x9612e0b4},
+{0x28,0xda03000b},
+{0x2c,0xc203000a},
+{0x30,0x8200400d},
+{0x34,0x83386001},
+{0x38,0xc2230008},
+{0x3c,0xc2002300},
+{0x40,0x9a004001},
+{0x44,0x9a034001},
+{0x48,0x9b2b6004},
+{0x4c,0xd803400a},
+{0x50,0xc203400b},
+{0x54,0x8200400c},
+{0x58,0x83386001},
+{0x5c,0xc2234009},
+{0x60,0xda002300},
+{0x64,0x8203400d},
+{0x68,0x8200400d},
+{0x6c,0xda002308},
+{0x70,0x83286002},
+{0x74,0x8200400d},
+{0x78,0x83286002},
+{0x7c,0xda004009},
+{0xf0,0x6a},
+{0x00,0xd8004008},
+{0x04,0x9a03400c},
+{0x08,0x9b3b6001},
+{0x0c,0xda20400b},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x9de3bf98},
+{0x1c,0xfa0023c8},
+{0x20,0x83376015},
+{0x24,0x80886001},
+{0x28,0x0280004c},
+{0x2c,0x808f6010},
+{0x30,0x92102000},
+{0x34,0x94102000},
+{0x38,0x96102001},
+{0x3c,0x12800004},
+{0x40,0xa010200c},
+{0x44,0x96102000},
+{0x48,0xa0102001},
+{0x4c,0x821ae003},
+{0x50,0x901ae001},
+{0x54,0x83286002},
+{0x58,0xbb2a2002},
+{0x5c,0xc2060001},
+{0x60,0xfa06001d},
+{0x64,0x8220401d},
+{0x68,0x80a06003},
+{0x6c,0x1480003b},
+{0x70,0xb32ae002},
+{0x74,0xfa062004},
+{0x78,0xde06200c},
+{0x7c,0xb807401d},
+{0xf0,0x6b},
+{0x00,0xb807001d},
+{0x04,0x8203c00f},
+{0x08,0xf6060000},
+{0x0c,0x8200400f},
+{0x10,0xb92f2002},
+{0x14,0xba1ae002},
+{0x18,0xb807001b},
+{0x1c,0xbb2f6002},
+{0x20,0x83286002},
+{0x24,0xda062008},
+{0x28,0xf406001d},
+{0x2c,0x8200400d},
+{0x30,0x37000019},
+{0x34,0xb616e080},
+{0x38,0xb92f2002},
+{0x3c,0x83286002},
+{0x40,0xfa060019},
+{0x44,0x9800401b},
+{0x48,0xb4a6801d},
+{0x4c,0x0c80000d},
+{0x50,0xb807001b},
+{0x54,0xb32c2002},
+{0x58,0xb406a001},
+{0x5c,0xb6102000},
+{0x60,0x8223001b},
+{0x64,0xfa004000},
+{0x68,0xc206c01c},
+{0x6c,0x92024001},
+{0x70,0x9402801d},
+{0x74,0xb486bfff},
+{0x78,0x12bffffa},
+{0x7c,0xb606c019},
+{0xf0,0x6c},
+{0x00,0x80a2400a},
+{0x04,0x06800009},
+{0x08,0x80a2e000},
+{0x0c,0xbb2a2002},
+{0x10,0xc206001d},
+{0x14,0x80a06000},
+{0x18,0x04800010},
+{0x1c,0x82007fff},
+{0x20,0x1080000e},
+{0x24,0xc226001d},
+{0x28,0x22800008},
+{0x2c,0xc2002300},
+{0x30,0xc2002308},
+{0x34,0x80a34001},
+{0x38,0x18800008},
+{0x3c,0x82036001},
+{0x40,0x10800006},
+{0x44,0xc2262008},
+{0x48,0x80a3c001},
+{0x4c,0x18800003},
+{0x50,0x8203e001},
+{0x54,0xc226200c},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf98},
+{0x64,0xb12e2002},
+{0x68,0xf8062610},
+{0x6c,0x9e0f2fff},
+{0x70,0xba03c00f},
+{0x74,0xba07400f},
+{0x78,0xb1372010},
+{0x7c,0xb00e2fff},
+{0xf0,0x6d},
+{0x00,0xbb2f6002},
+{0x04,0xba074018},
+{0x08,0x03000019},
+{0x0c,0x82106080},
+{0x10,0xbb2f6002},
+{0x14,0xfa074001},
+{0x18,0xc20821e4},
+{0x1c,0xba5f4001},
+{0x20,0x833f601f},
+{0x24,0x83306019},
+{0x28,0xba074001},
+{0x2c,0xbb3f6007},
+{0x30,0xb937200c},
+{0x34,0xc20821e5},
+{0x38,0xa0100019},
+{0x3c,0x9410001a},
+{0x40,0xa8074001},
+{0x44,0x808f2001},
+{0x48,0xb006001a},
+{0x4c,0x0280000c},
+{0x50,0x9e03c019},
+{0x54,0xc20023c8},
+{0x58,0x80886200},
+{0x5c,0x32800002},
+{0x60,0xb006001a},
+{0x64,0xc200237c},
+{0x68,0x80a06000},
+{0x6c,0x2280005e},
+{0x70,0x9e03e001},
+{0x74,0x1080005c},
+{0x78,0xb0062001},
+{0x7c,0xc20023c8},
+{0xf0,0x6e},
+{0x00,0x83306014},
+{0x04,0x82086001},
+{0x08,0x80a00001},
+{0x0c,0xa2603fff},
+{0x10,0x9e03c010},
+{0x14,0x8333e01f},
+{0x18,0x80944001},
+{0x1c,0x12800052},
+{0x20,0xb006000a},
+{0x24,0x80a62000},
+{0x28,0x06800050},
+{0x2c,0x80a2a000},
+{0x30,0xc2002300},
+{0x34,0x82006001},
+{0x38,0x80a3c001},
+{0x3c,0x1880004b},
+{0x40,0x80a2a000},
+{0x44,0xc2002308},
+{0x48,0x82006001},
+{0x4c,0x80a60001},
+{0x50,0x18800045},
+{0x54,0xa4102000},
+{0x58,0x27000019},
+{0x5c,0x96103fff},
+{0x60,0xaa14e080},
+{0x64,0x9214e080},
+{0x68,0x80a2a000},
+{0x6c,0x9a03c00b},
+{0x70,0x12800004},
+{0x74,0x98100018},
+{0x78,0x9806000b},
+{0x7c,0x9a10000f},
+{0xf0,0x6f},
+{0x00,0xba234010},
+{0x04,0x8207401d},
+{0x08,0x8200401d},
+{0x0c,0xba23000a},
+{0x10,0x83286002},
+{0x14,0x8200401d},
+{0x18,0x83286002},
+{0x1c,0xfa004009},
+{0x20,0xc20821e6},
+{0x24,0xba5f4001},
+{0x28,0xb803400b},
+{0x2c,0x833f601f},
+{0x30,0x9003400d},
+{0x34,0xb202000d},
+{0x38,0x83306019},
+{0x3c,0xb407001c},
+{0x40,0xb72e6002},
+{0x44,0xba074001},
+{0x48,0xb406801c},
+{0x4c,0xbb3f6007},
+{0x50,0xb606c00c},
+{0x54,0xf80821e7},
+{0x58,0xb807401c},
+{0x5c,0xb72ee002},
+{0x60,0xfa06c009},
+{0x64,0xb32e6004},
+{0x68,0x8203000b},
+{0x6c,0x83286002},
+{0x70,0xb2064009},
+{0x74,0x80a7401c},
+{0x78,0xba064001},
+{0x7c,0xb52ea004},
+{0xf0,0x70},
+{0x00,0x14800019},
+{0x04,0x832b2002},
+{0x08,0x80a2a000},
+{0x0c,0x22800005},
+{0x10,0x8202000d},
+{0x14,0xb2068009},
+{0x18,0xba064001},
+{0x1c,0x8202000d},
+{0x20,0x83286002},
+{0x24,0x8200400c},
+{0x28,0xb3286002},
+{0x2c,0xc2074000},
+{0x30,0x80a0401c},
+{0x34,0x1480000c},
+{0x38,0x9602e001},
+{0x3c,0xc2064015},
+{0x40,0x80a04014},
+{0x44,0x36800002},
+{0x48,0xa4102001},
+{0x4c,0x80a2e001},
+{0x50,0x04bfffc6},
+{0x54,0x9214e080},
+{0x58,0x80a4a000},
+{0x5c,0x32bfffae},
+{0x60,0x9e03c010},
+{0x64,0x80a2a000},
+{0x68,0x12800003},
+{0x6c,0xb026000a},
+{0x70,0xb023c010},
+{0x74,0x81c7e008},
+{0x78,0x81e80000},
+{0x7c,0x9de3bf80},
+{0xf0,0x71},
+{0x00,0x03003fc0},
+{0x04,0x82106001},
+{0x08,0xc227bff4},
+{0x0c,0xc227bff0},
+{0x10,0xae102000},
+{0x14,0xc2002514},
+{0x18,0x80a5c001},
+{0x1c,0xa8102000},
+{0x20,0x1a80007c},
+{0x24,0xa2102000},
+{0x28,0x8207bff8},
+{0x2c,0x9a044001},
+{0x30,0xa12c6002},
+{0x34,0xa0040001},
+{0x38,0xd44b7ff9},
+{0x3c,0x90100014},
+{0x40,0x7fffff68},
+{0x44,0xd24b7ff8},
+{0x48,0xa2046001},
+{0x4c,0x80a46003},
+{0x50,0x04bffff6},
+{0x54,0xd0243fe8},
+{0x58,0x7fffff10},
+{0x5c,0x9007bfe0},
+{0x60,0xd207bfe4},
+{0x64,0xea07bfec},
+{0x68,0x80a24015},
+{0x6c,0xa2102000},
+{0x70,0xa4102000},
+{0x74,0x14800022},
+{0x78,0xa6102000},
+{0x7c,0x1b000019},
+{0xf0,0x72},
+{0x00,0x82024009},
+{0x04,0x82004009},
+{0x08,0xba136080},
+{0x0c,0xa1286002},
+{0x10,0xda07bfe8},
+{0x14,0xec07bfe0},
+{0x18,0x80a5800d},
+{0x1c,0x14800014},
+{0x20,0x94100016},
+{0x24,0x82040016},
+{0x28,0x83286002},
+{0x2c,0x9000401d},
+{0x30,0x98026001},
+{0x34,0xd6020000},
+{0x38,0x8202a001},
+{0x3c,0x94100001},
+{0x40,0x9e5ac001},
+{0x44,0x90022004},
+{0x48,0x80a2e000},
+{0x4c,0x04800005},
+{0x50,0x825ac00c},
+{0x54,0xa4048001},
+{0x58,0xa604c00f},
+{0x5c,0xa204400b},
+{0x60,0x80a2800d},
+{0x64,0x24bffff5},
+{0x68,0xd6020000},
+{0x6c,0x92026001},
+{0x70,0x80a24015},
+{0x74,0x04bfffe9},
+{0x78,0xa004200c},
+{0x7c,0x80a46000},
+{0xf0,0x73},
+{0x00,0x94052001},
+{0x04,0x12800004},
+{0x08,0x912d2002},
+{0x0c,0x1080003d},
+{0x10,0xc0222610},
+{0x14,0x832ca006},
+{0x18,0x992ce006},
+{0x1c,0x9338601f},
+{0x20,0x81826000},
+{0x24,0x01000000},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0x96784011},
+{0x34,0xda022610},
+{0x38,0x833b201f},
+{0x3c,0x81806000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x987b0011},
+{0x50,0x9b33600c},
+{0x54,0x808b6001},
+{0x58,0xa402ffa0},
+{0x5c,0x02800007},
+{0x60,0xa6033fa0},
+{0x64,0xc200237c},
+{0x68,0x80a06000},
+{0x6c,0x22800003},
+{0x70,0xa402ff60},
+{0x74,0xa6033f60},
+{0x78,0x80a4a000},
+{0x7c,0x24800002},
+{0xf0,0x74},
+{0x00,0xa4102001},
+{0x04,0x80a4e000},
+{0x08,0x24800002},
+{0x0c,0xa6102001},
+{0x10,0xc20021e0},
+{0x14,0x80a06000},
+{0x18,0x2280000f},
+{0x1c,0xa2102000},
+{0x20,0x81800000},
+{0x24,0x01000000},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0xa2f44001},
+{0x34,0x32800004},
+{0x38,0x80a4600f},
+{0x3c,0x10800006},
+{0x40,0xa2102001},
+{0x44,0x34800004},
+{0x48,0xa210200f},
+{0x4c,0x10800003},
+{0x50,0x832ca010},
+{0x54,0x832ca010},
+{0x58,0x82004013},
+{0x5c,0x9b2c601c},
+{0x60,0x9a034001},
+{0x64,0xd8022610},
+{0x68,0x03000004},
+{0x6c,0x980b0001},
+{0x70,0x832de002},
+{0x74,0x9803000d},
+{0x78,0xd8206610},
+{0x7c,0xae05e001},
+{0xf0,0x75},
+{0x00,0xc2002514},
+{0x04,0xa810000a},
+{0x08,0x10bfff86},
+{0x0c,0x80a28001},
+{0x10,0xee202514},
+{0x14,0x81c7e008},
+{0x18,0x81e80000},
+{0x1c,0x03000018},
+{0x20,0x9a106200},
+{0x24,0xd4020000},
+{0x28,0x9802800a},
+{0x2c,0x82106340},
+{0x30,0xda13000d},
+{0x34,0xc2130001},
+{0x38,0x96a0400d},
+{0x3c,0x02800016},
+{0x40,0x03000018},
+{0x44,0x80a2e000},
+{0x48,0x04800009},
+{0x4c,0x82102001},
+{0x50,0xda022004},
+{0x54,0x8328400d},
+{0x58,0x80a2c001},
+{0x5c,0x3480000d},
+{0x60,0x973ac00d},
+{0x64,0x1080000b},
+{0x68,0x96102001},
+{0x6c,0x1680000a},
+{0x70,0x03000018},
+{0x74,0xda022008},
+{0x78,0x82103fff},
+{0x7c,0x8328400d},
+{0xf0,0x76},
+{0x00,0x80a2c001},
+{0x04,0x36800003},
+{0x08,0x96103fff},
+{0x0c,0x973ac00d},
+{0x10,0x03000018},
+{0x14,0x92106200},
+{0x18,0x8202800a},
+{0x1c,0xc2104009},
+{0x20,0x9602c001},
+{0x24,0x808aa001},
+{0x28,0x0280000f},
+{0x2c,0x9b3aa01f},
+{0x30,0x9b33601f},
+{0x34,0x9a02800d},
+{0x38,0x9b3b6001},
+{0x3c,0x9b2b6002},
+{0x40,0xd8034009},
+{0x44,0x033fffc0},
+{0x48,0x980b0001},
+{0x4c,0x0300003f},
+{0x50,0x821063ff},
+{0x54,0x820ac001},
+{0x58,0x98030001},
+{0x5c,0x1080000d},
+{0x60,0xd8234009},
+{0x64,0x9b33601f},
+{0x68,0x9a02800d},
+{0x6c,0x9b3b6001},
+{0x70,0x9b2b6002},
+{0x74,0x0300003f},
+{0x78,0xd8034009},
+{0x7c,0x821063ff},
+{0xf0,0x77},
+{0x00,0x980b0001},
+{0x04,0x832ae010},
+{0x08,0x8200400c},
+{0x0c,0xc2234009},
+{0x10,0xc2020000},
+{0x14,0xda00247c},
+{0x18,0x8200400d},
+{0x1c,0x81c3e008},
+{0x20,0xc2220000},
+{0x24,0x9de3bf88},
+{0x28,0xc2002200},
+{0x2c,0x80a06000},
+{0x30,0x3280000f},
+{0x34,0xc20021f8},
+{0x38,0xda00254c},
+{0x3c,0x808b6040},
+{0x40,0x2280000d},
+{0x44,0xc208254e},
+{0x48,0xc20023c8},
+{0x4c,0x80886400},
+{0x50,0x22800007},
+{0x54,0xc20021f8},
+{0x58,0x8333600c},
+{0x5c,0x80886001},
+{0x60,0x22800005},
+{0x64,0xc208254e},
+{0x68,0xc20021f8},
+{0x6c,0x10800032},
+{0x70,0xc2202538},
+{0x74,0x80a06000},
+{0x78,0x12800003},
+{0x7c,0xa0102000},
+{0xf0,0x78},
+{0x00,0xa0102002},
+{0x04,0xa0142001},
+{0x08,0xc2002564},
+{0x0c,0x80a40001},
+{0x10,0x32800007},
+{0x14,0xc20021f8},
+{0x18,0xc20c2314},
+{0x1c,0x80a06000},
+{0x20,0x32800006},
+{0x24,0xc2002538},
+{0x28,0xc20021f8},
+{0x2c,0xc2202538},
+{0x30,0x10800021},
+{0x34,0xe0202564},
+{0x38,0x82006001},
+{0x3c,0xc2202538},
+{0x40,0xda0c2314},
+{0x44,0x80a0400d},
+{0x48,0x0680001b},
+{0x4c,0x01000000},
+{0x50,0xc0202538},
+{0x54,0xc20c234c},
+{0x58,0xc227bfec},
+{0x5c,0xc20c230c},
+{0x60,0xc227bff0},
+{0x64,0xa0102001},
+{0x68,0xc2002308},
+{0x6c,0x80a40001},
+{0x70,0x18800011},
+{0x74,0x01000000},
+{0x78,0xc20c237f},
+{0x7c,0xc227bfe8},
+{0xf0,0x79},
+{0x00,0xa2102001},
+{0x04,0xc2002300},
+{0x08,0x80a44001},
+{0x0c,0x38800006},
+{0x10,0xa0042001},
+{0x14,0x7fffff82},
+{0x18,0x9007bfe8},
+{0x1c,0x10bffffa},
+{0x20,0xa2046001},
+{0x24,0xc2002308},
+{0x28,0x80a40001},
+{0x2c,0x28bffff4},
+{0x30,0xc20c237f},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x9de3bf88},
+{0x40,0xd8082246},
+{0x44,0x80a32000},
+{0x48,0x22800041},
+{0x4c,0xc020255c},
+{0x50,0xda00254c},
+{0x54,0x808b6001},
+{0x58,0x12800007},
+{0x5c,0x820b7ffe},
+{0x60,0xc2002568},
+{0x64,0x80a06000},
+{0x68,0x22800007},
+{0x6c,0xc200259c},
+{0x70,0x820b7ffe},
+{0x74,0xc220254c},
+{0x78,0xc027bfec},
+{0x7c,0x1080000e},
+{0xf0,0x7a},
+{0x00,0xc027bff0},
+{0x04,0x80a06000},
+{0x08,0x32800031},
+{0x0c,0xc020255c},
+{0x10,0xc200255c},
+{0x14,0x82006001},
+{0x18,0x80a0400c},
+{0x1c,0x0a80002c},
+{0x20,0xc220255c},
+{0x24,0xc2082244},
+{0x28,0xc227bfec},
+{0x2c,0xc2082245},
+{0x30,0xc227bff0},
+{0x34,0xc2002308},
+{0x38,0xa0006001},
+{0x3c,0xc20022fc},
+{0x40,0x80a40001},
+{0x44,0x1880000c},
+{0x48,0xa2102001},
+{0x4c,0xc20c237f},
+{0x50,0xc227bfe8},
+{0x54,0xc20022f8},
+{0x58,0x80a44001},
+{0x5c,0x38bffff8},
+{0x60,0xa0042001},
+{0x64,0x7fffff4e},
+{0x68,0x9007bfe8},
+{0x6c,0x10bffffa},
+{0x70,0xa2046001},
+{0x74,0xa0102001},
+{0x78,0xc2002308},
+{0x7c,0x80a40001},
+{0xf0,0x7b},
+{0x00,0x38800013},
+{0x04,0xc020255c},
+{0x08,0xd80c237f},
+{0x0c,0xd827bfe8},
+{0x10,0xc200247c},
+{0x14,0xda002300},
+{0x18,0x8258400d},
+{0x1c,0x98030001},
+{0x20,0xd827bfe8},
+{0x24,0xc2002300},
+{0x28,0xa2006001},
+{0x2c,0xc20022f8},
+{0x30,0x80a44001},
+{0x34,0x38bffff1},
+{0x38,0xa0042001},
+{0x3c,0x7fffff38},
+{0x40,0x9007bfe8},
+{0x44,0x10bffffa},
+{0x48,0xa2046001},
+{0x4c,0x81c7e008},
+{0x50,0x81e80000},
+{0x54,0x9de3bf98},
+{0x58,0xc2002744},
+{0x5c,0x96100018},
+{0x60,0x80a0600f},
+{0x64,0x14800003},
+{0x68,0x9e10200f},
+{0x6c,0x9e100001},
+{0x70,0x03000017},
+{0x74,0x9a106240},
+{0x78,0x0300003f},
+{0x7c,0x941063ff},
+{0xf0,0x7c},
+{0x00,0xb203e001},
+{0x04,0xb0102000},
+{0x08,0x9810000d},
+{0x0c,0xb72e2002},
+{0x10,0x8203401b},
+{0x14,0xfa106002},
+{0x18,0xb802c01b},
+{0x1c,0xf4172002},
+{0x20,0xc213401b},
+{0x24,0xf812c01b},
+{0x28,0x8258400f},
+{0x2c,0xba5f400f},
+{0x30,0x8200401c},
+{0x34,0xba07401a},
+{0x38,0x81800000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x82704019},
+{0x4c,0x81800000},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0xba774019},
+{0x60,0x83286010},
+{0x64,0xba0f400a},
+{0x68,0x8200401d},
+{0x6c,0xb0062001},
+{0x70,0x80a6204f},
+{0x74,0x04bfffe6},
+{0x78,0xc226c00c},
+{0x7c,0xf2202744},
+{0xf0,0x7d},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0xd6020000},
+{0x0c,0xd8024000},
+{0x10,0x9132e010},
+{0x14,0x95332010},
+{0x18,0x900a2fff},
+{0x1c,0x940aafff},
+{0x20,0x03000007},
+{0x24,0x9a22000a},
+{0x28,0x821063ff},
+{0x2c,0x940b0001},
+{0x30,0x900ac001},
+{0x34,0x9022000a},
+{0x38,0x9a5b400d},
+{0x3c,0x905a0008},
+{0x40,0x81c3e008},
+{0x44,0x90034008},
+{0x48,0x9de3bf98},
+{0x4c,0xc2002200},
+{0x50,0x80a06000},
+{0x54,0x12800062},
+{0x58,0x033fc200},
+{0x5c,0x82106030},
+{0x60,0xda004000},
+{0x64,0xc2002344},
+{0x68,0x80a34001},
+{0x6c,0x1280005c},
+{0x70,0x01000000},
+{0x74,0xc208254d},
+{0x78,0x80a06000},
+{0x7c,0x12800058},
+{0xf0,0x7e},
+{0x00,0x01000000},
+{0x04,0xc208254e},
+{0x08,0x80a06000},
+{0x0c,0x02800054},
+{0x10,0x01000000},
+{0x14,0xc2002334},
+{0x18,0x825860fa},
+{0x1c,0x820060fa},
+{0x20,0xda002500},
+{0x24,0x80a34001},
+{0x28,0x0a80004d},
+{0x2c,0x01000000},
+{0x30,0xd6002748},
+{0x34,0x80a2e000},
+{0x38,0x1480001d},
+{0x3c,0x8202ffff},
+{0x40,0xc2002514},
+{0x44,0x80a06001},
+{0x48,0x32800045},
+{0x4c,0xc0202748},
+{0x50,0xc2002610},
+{0x54,0x80a06000},
+{0x58,0x32800004},
+{0x5c,0xc200254c},
+{0x60,0x1080003f},
+{0x64,0xc0202748},
+{0x68,0x80886040},
+{0x6c,0x32800006},
+{0x70,0xd800239c},
+{0x74,0x80a2e000},
+{0x78,0x0680000d},
+{0x7c,0x8202e001},
+{0xf0,0x7f},
+{0x00,0xd800239c},
+{0x04,0x0300003f},
+{0x08,0x9b332010},
+{0x0c,0x821063ff},
+{0x10,0x980b0001},
+{0x14,0x9a38000d},
+{0x18,0x9a23400c},
+{0x1c,0x80a2c00d},
+{0x20,0x06800005},
+{0x24,0x03296956},
+{0x28,0x8202ffff},
+{0x2c,0x1080002c},
+{0x30,0xc2202748},
+{0x34,0x9a10625a},
+{0x38,0xc200250c},
+{0x3c,0x80a0400d},
+{0x40,0x02800004},
+{0x44,0xb0102000},
+{0x48,0xda20250c},
+{0x4c,0xc0202744},
+{0x50,0x832e2002},
+{0x54,0x9200674c},
+{0x58,0xc200674c},
+{0x5c,0x90102610},
+{0x60,0x80a06000},
+{0x64,0x0280000d},
+{0x68,0xb0062001},
+{0x6c,0x7fffffa7},
+{0x70,0x01000000},
+{0x74,0xc2002300},
+{0x78,0xda002308},
+{0x7c,0x82584001},
+{0xf0,0x80},
+{0x00,0x9a5b400d},
+{0x04,0x8200400d},
+{0x08,0x83286006},
+{0x0c,0x80a20001},
+{0x10,0x0a800013},
+{0x14,0x01000000},
+{0x18,0x80a6200f},
+{0x1c,0x08bfffee},
+{0x20,0x832e2002},
+{0x24,0x030041eb},
+{0x28,0xc2202748},
+{0x2c,0xb010200f},
+{0x30,0x9b2e2002},
+{0x34,0xc2036748},
+{0x38,0xb0863fff},
+{0x3c,0x12bffffd},
+{0x40,0xc223674c},
+{0x44,0xc2002610},
+{0x48,0x31000018},
+{0x4c,0xc220274c},
+{0x50,0xb0162200},
+{0x54,0x7fffff60},
+{0x58,0x81e80000},
+{0x5c,0x01000000},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0x9de3bf98},
+{0x6c,0xa4102000},
+{0x70,0xe6002514},
+{0x74,0x80a48013},
+{0x78,0x1a800010},
+{0x7c,0xa0102000},
+{0xf0,0x81},
+{0x00,0xa2102610},
+{0x04,0x92100011},
+{0x08,0x7fffff80},
+{0x0c,0x90100018},
+{0x10,0x82102001},
+{0x14,0x83284010},
+{0x18,0xa2046004},
+{0x1c,0x80a20019},
+{0x20,0x1a800003},
+{0x24,0xa0042001},
+{0x28,0xa4148001},
+{0x2c,0x80a40013},
+{0x30,0x0abffff6},
+{0x34,0x92100011},
+{0x38,0x81c7e008},
+{0x3c,0x91e80012},
+{0x40,0x9de3bf98},
+{0x44,0x03000019},
+{0x48,0x96100018},
+{0x4c,0xba106080},
+{0x50,0xb4102000},
+{0x54,0x832ea002},
+{0x58,0xb406a001},
+{0x5c,0x80a6a0d7},
+{0x60,0x08bffffd},
+{0x64,0xc020401d},
+{0x68,0xb4102001},
+{0x6c,0xc20022fc},
+{0x70,0x80a68001},
+{0x74,0x18800020},
+{0x78,0x03000019},
+{0x7c,0x82106080},
+{0xf0,0x82},
+{0x00,0x9a006004},
+{0x04,0x19000018},
+{0x08,0xc20022f8},
+{0x0c,0xb2102001},
+{0x10,0x80a64001},
+{0x14,0xb0132340},
+{0x18,0xb610000b},
+{0x1c,0x18800011},
+{0x20,0xc20ea37f},
+{0x24,0x9e004001},
+{0x28,0xb8036030},
+{0x2c,0xfa16c00f},
+{0x30,0xc216000f},
+{0x34,0x8220401d},
+{0x38,0xc2270000},
+{0x3c,0xfa00247c},
+{0x40,0xba07401d},
+{0x44,0xb2066001},
+{0x48,0xc20022f8},
+{0x4c,0xb606c01d},
+{0x50,0x80a64001},
+{0x54,0xb006001d},
+{0x58,0x08bffff5},
+{0x5c,0xb8072030},
+{0x60,0xb406a001},
+{0x64,0xc20022fc},
+{0x68,0x80a68001},
+{0x6c,0x08bfffe7},
+{0x70,0x9a036004},
+{0x74,0x81c7e008},
+{0x78,0x81e80000},
+{0x7c,0x9de3bf98},
+{0xf0,0x83},
+{0x00,0xc200254c},
+{0x04,0x80886200},
+{0x08,0x0280000b},
+{0x0c,0xc0202598},
+{0x10,0x11000017},
+{0x14,0x7fffffcb},
+{0x18,0x90122240},
+{0x1c,0x10800007},
+{0x20,0xee0023a0},
+{0x24,0x03000080},
+{0x28,0x82134001},
+{0x2c,0x10800099},
+{0x30,0xc220254c},
+{0x34,0xee0022ac},
+{0x38,0xaa102000},
+{0x3c,0xa12d6003},
+{0x40,0xc2042660},
+{0x44,0x80a06000},
+{0x48,0x2280008f},
+{0x4c,0xaa056001},
+{0x50,0x80a56000},
+{0x54,0x32800008},
+{0x58,0xda002500},
+{0x5c,0xc200259c},
+{0x60,0x80a06000},
+{0x64,0x1280001d},
+{0x68,0x2d200000},
+{0x6c,0x10800012},
+{0x70,0xac102000},
+{0x74,0xc20022d0},
+{0x78,0x80a34001},
+{0x7c,0x38800007},
+{0xf0,0x84},
+{0x00,0xc0242664},
+{0x04,0xc2002200},
+{0x08,0x80a06000},
+{0x0c,0x02800005},
+{0x10,0x90042660},
+{0x14,0xc0242664},
+{0x18,0x1080007a},
+{0x1c,0xc0242660},
+{0x20,0x7fffff92},
+{0x24,0x92100017},
+{0x28,0xac922000},
+{0x2c,0x3280000c},
+{0x30,0xc2142666},
+{0x34,0xc2142664},
+{0x38,0x80a06000},
+{0x3c,0x2280006d},
+{0x40,0xc0242664},
+{0x44,0xc2042664},
+{0x48,0x1b3fffc0},
+{0x4c,0x8200400d},
+{0x50,0x10800069},
+{0x54,0xc2242664},
+{0x58,0xc2142666},
+{0x5c,0x80a06000},
+{0x60,0x0280000a},
+{0x64,0x80a56000},
+{0x68,0xc2042664},
+{0x6c,0x82007fff},
+{0x70,0xc2242664},
+{0x74,0xc2142666},
+{0x78,0x80a06000},
+{0x7c,0x3280005f},
+{0xf0,0x85},
+{0x00,0xc2002598},
+{0x04,0x80a56000},
+{0x08,0x32800006},
+{0x0c,0xda00254c},
+{0x10,0xc200254c},
+{0x14,0x82106001},
+{0x18,0x10800057},
+{0x1c,0xc220254c},
+{0x20,0x808b6200},
+{0x24,0x02bfffc0},
+{0x28,0x03296956},
+{0x2c,0xda00250c},
+{0x30,0x8210625a},
+{0x34,0x80a34001},
+{0x38,0x02800006},
+{0x3c,0x031696a9},
+{0x40,0x821061a5},
+{0x44,0x80a34001},
+{0x48,0x3280004c},
+{0x4c,0xc2002598},
+{0x50,0xc2042660},
+{0x54,0x9b306016},
+{0x58,0x82086fff},
+{0x5c,0xa3386006},
+{0x60,0xa60b603f},
+{0x64,0xa8046001},
+{0x68,0xa404e001},
+{0x6c,0x90100014},
+{0x70,0x92100012},
+{0x74,0x94102000},
+{0x78,0x7ffffa72},
+{0x7c,0xd600246c},
+{0xf0,0x86},
+{0x00,0x80a22000},
+{0x04,0x3280003b},
+{0x08,0xc0242664},
+{0x0c,0x80a46001},
+{0x10,0x0480000b},
+{0x14,0x90046002},
+{0x18,0x90100011},
+{0x1c,0x92100012},
+{0x20,0x94102000},
+{0x24,0x7ffffa67},
+{0x28,0xd600246c},
+{0x2c,0x80a22000},
+{0x30,0x32800030},
+{0x34,0xc0242664},
+{0x38,0x90046002},
+{0x3c,0xc2002308},
+{0x40,0x80a20001},
+{0x44,0x1a80000a},
+{0x48,0x80a4e001},
+{0x4c,0x92100012},
+{0x50,0x94102000},
+{0x54,0x7ffffa5b},
+{0x58,0xd600246c},
+{0x5c,0x80a22000},
+{0x60,0x32800024},
+{0x64,0xc0242664},
+{0x68,0x80a4e001},
+{0x6c,0x0480000b},
+{0x70,0x9204e002},
+{0x74,0x90100014},
+{0x78,0x92100013},
+{0x7c,0x94102000},
+{0xf0,0x87},
+{0x00,0x7ffffa50},
+{0x04,0xd600246c},
+{0x08,0x80a22000},
+{0x0c,0x32800019},
+{0x10,0xc0242664},
+{0x14,0x9204e002},
+{0x18,0xc2002300},
+{0x1c,0x80a24001},
+{0x20,0x3a80000a},
+{0x24,0xc2002570},
+{0x28,0x90100014},
+{0x2c,0x94102000},
+{0x30,0x7ffffa44},
+{0x34,0xd600246c},
+{0x38,0x80a22000},
+{0x3c,0x3280000d},
+{0x40,0xc0242664},
+{0x44,0xc2002570},
+{0x48,0x82006001},
+{0x4c,0x80a06004},
+{0x50,0x08800009},
+{0x54,0xc2202570},
+{0x58,0xc200254c},
+{0x5c,0x1b000080},
+{0x60,0x8210400d},
+{0x64,0xc220254c},
+{0x68,0x1080000a},
+{0x6c,0xc0202570},
+{0x70,0xc0242660},
+{0x74,0xc2002598},
+{0x78,0x82104016},
+{0x7c,0xc2202598},
+{0xf0,0x88},
+{0x00,0xaa056001},
+{0x04,0x80a56013},
+{0x08,0x04bfff6e},
+{0x0c,0xa12d6003},
+{0x10,0xc2002598},
+{0x14,0x80a06000},
+{0x18,0x22800002},
+{0x1c,0xc0202570},
+{0x20,0xc200259c},
+{0x24,0x80a06000},
+{0x28,0x2280000b},
+{0x2c,0xda002500},
+{0x30,0xc2002660},
+{0x34,0x80a06000},
+{0x38,0x32800007},
+{0x3c,0xda002500},
+{0x40,0x03000004},
+{0x44,0xc2202660},
+{0x48,0xc2002248},
+{0x4c,0xc2202664},
+{0x50,0xda002500},
+{0x54,0xc20022d0},
+{0x58,0x80a34001},
+{0x5c,0x1880002c},
+{0x60,0x01000000},
+{0x64,0xc2002200},
+{0x68,0x80a06000},
+{0x6c,0x12800028},
+{0x70,0xaa102000},
+{0x74,0xc2002514},
+{0x78,0x80a54001},
+{0x7c,0x1a800024},
+{0xf0,0x89},
+{0x00,0x94102001},
+{0x04,0x972d6002},
+{0x08,0xc202e610},
+{0x0c,0x8330600c},
+{0x10,0x80886001},
+{0x14,0x3280001a},
+{0x18,0xaa056001},
+{0x1c,0x9b2a8015},
+{0x20,0xc2002598},
+{0x24,0x8088400d},
+{0x28,0x32800015},
+{0x2c,0xaa056001},
+{0x30,0x98102001},
+{0x34,0x9b2b2003},
+{0x38,0xc2036660},
+{0x3c,0x80a06000},
+{0x40,0x1280000b},
+{0x44,0x98032001},
+{0x48,0xc202e610},
+{0x4c,0xc2236660},
+{0x50,0xc200254c},
+{0x54,0x80886200},
+{0x58,0x22800003},
+{0x5c,0xc2002378},
+{0x60,0xc200239c},
+{0x64,0x10800005},
+{0x68,0xc2236664},
+{0x6c,0x80a32013},
+{0x70,0x04bffff2},
+{0x74,0x9b2b2003},
+{0x78,0xaa056001},
+{0x7c,0xc2002514},
+{0xf0,0x8a},
+{0x00,0x80a54001},
+{0x04,0x0abfffe1},
+{0x08,0x972d6002},
+{0x0c,0x81c7e008},
+{0x10,0x81e80000},
+{0x14,0x98102000},
+{0x18,0xc2002514},
+{0x1c,0x80a30001},
+{0x20,0x1a80000b},
+{0x24,0x033fc180},
+{0x28,0x96106004},
+{0x2c,0x832b2002},
+{0x30,0xda006610},
+{0x34,0xda20400b},
+{0x38,0x98032001},
+{0x3c,0xc2002514},
+{0x40,0x80a30001},
+{0x44,0x0abffffb},
+{0x48,0x832b2002},
+{0x4c,0xda00254c},
+{0x50,0x808b6080},
+{0x54,0x32800008},
+{0x58,0xc208254e},
+{0x5c,0xc2002514},
+{0x60,0x9a136080},
+{0x64,0x82106100},
+{0x68,0xda20254c},
+{0x6c,0xc2202514},
+{0x70,0xc208254e},
+{0x74,0x80a06000},
+{0x78,0x1280000a},
+{0x7c,0xc20023c8},
+{0xf0,0x8b},
+{0x00,0x83306016},
+{0x04,0x80886001},
+{0x08,0x22800006},
+{0x0c,0xc20023c8},
+{0x10,0xc2002514},
+{0x14,0x82106200},
+{0x18,0xc2202514},
+{0x1c,0xc20023c8},
+{0x20,0x83306013},
+{0x24,0x80886001},
+{0x28,0x02800012},
+{0x2c,0xda002514},
+{0x30,0xc2002200},
+{0x34,0x80a06000},
+{0x38,0x0280000e},
+{0x3c,0x01000000},
+{0x40,0x033fc000},
+{0x44,0x8210605c},
+{0x48,0xc2004000},
+{0x4c,0x83286010},
+{0x50,0x9a134001},
+{0x54,0xc200254c},
+{0x58,0x80886004},
+{0x5c,0x02800004},
+{0x60,0xda202514},
+{0x64,0x82136800},
+{0x68,0xc2202514},
+{0x6c,0xda002514},
+{0x70,0x80a36000},
+{0x74,0x2280000a},
+{0x78,0xda002514},
+{0x7c,0xc20021e0},
+{0xf0,0x8c},
+{0x00,0x80a06000},
+{0x04,0x22800006},
+{0x08,0xda002514},
+{0x0c,0x03000004},
+{0x10,0x82134001},
+{0x14,0xc2202514},
+{0x18,0xda002514},
+{0x1c,0x033fc180},
+{0x20,0x81c3e008},
+{0x24,0xda204000},
+{0x28,0xc2002200},
+{0x2c,0x80a06000},
+{0x30,0x1280001a},
+{0x34,0x01000000},
+{0x38,0xda002500},
+{0x3c,0xc20021f0},
+{0x40,0x80a34001},
+{0x44,0x18800015},
+{0x48,0x01000000},
+{0x4c,0xd800254c},
+{0x50,0x808b2400},
+{0x54,0x12800011},
+{0x58,0x01000000},
+{0x5c,0xda002514},
+{0x60,0xc20021e8},
+{0x64,0x80a34001},
+{0x68,0x2a80000c},
+{0x6c,0xc02025a0},
+{0x70,0x03000100},
+{0x74,0xda0025a0},
+{0x78,0x96130001},
+{0x7c,0x9810000d},
+{0xf0,0x8d},
+{0x00,0x9a036001},
+{0x04,0xc20021ec},
+{0x08,0x80a30001},
+{0x0c,0x08800003},
+{0x10,0xda2025a0},
+{0x14,0xd620254c},
+{0x18,0x81c3e008},
+{0x1c,0x01000000},
+{0x20,0x9de3bf98},
+{0x24,0x833e201f},
+{0x28,0xd0002320},
+{0x2c,0x82204018},
+{0x30,0x80a22000},
+{0x34,0x02800016},
+{0x38,0x9b30601f},
+{0x3c,0x033fc000},
+{0x40,0xa0106020},
+{0x44,0xc200231c},
+{0x48,0x80a00001},
+{0x4c,0x82402000},
+{0x50,0x8088400d},
+{0x54,0xda002318},
+{0x58,0x821e000d},
+{0x5c,0x02800009},
+{0x60,0xb0086001},
+{0x64,0x80a0000d},
+{0x68,0x82603fff},
+{0x6c,0x7ffff2ef},
+{0x70,0xc2240000},
+{0x74,0xc2002318},
+{0x78,0x10800005},
+{0x7c,0xc2240000},
+{0xf0,0x8e},
+{0x00,0x033fc000},
+{0x04,0x82106020},
+{0x08,0xf0204000},
+{0x0c,0x81c7e008},
+{0x10,0x81e80000},
+{0x14,0x9de3bf98},
+{0x18,0xc2002514},
+{0x1c,0x80a06000},
+{0x20,0x1280000a},
+{0x24,0x90102001},
+{0x28,0xc200254c},
+{0x2c,0x9b306003},
+{0x30,0x83306002},
+{0x34,0x82086001},
+{0x38,0x9a0b6001},
+{0x3c,0x80a0400d},
+{0x40,0x22800005},
+{0x44,0xc2002560},
+{0x48,0x82102005},
+{0x4c,0x10800007},
+{0x50,0xc2202560},
+{0x54,0x9a007fff},
+{0x58,0x80a06000},
+{0x5c,0x02800005},
+{0x60,0x90102002},
+{0x64,0xda202560},
+{0x68,0x7fffffce},
+{0x6c,0x01000000},
+{0x70,0xc200254c},
+{0x74,0x9a004001},
+{0x78,0x9a0b6008},
+{0x7c,0x82087ff7},
+{0xf0,0x8f},
+{0x00,0x8210400d},
+{0x04,0xc220254c},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x01000000},
+{0x14,0x27001040},
+{0x18,0xa614e00f},
+{0x1c,0xe6a00040},
+{0x20,0x01000000},
+{0x24,0x81c3e008},
+{0x28,0x01000000},
+{0x2c,0x9de3bf98},
+{0x30,0xc2002508},
+{0x34,0x80a06000},
+{0x38,0x0280000f},
+{0x3c,0x1b3fc180},
+{0x40,0x82102001},
+{0x44,0x9a13603c},
+{0x48,0xc2234000},
+{0x4c,0xc2002508},
+{0x50,0x820860ff},
+{0x54,0x80a04018},
+{0x58,0x12800005},
+{0x5c,0x033fc180},
+{0x60,0x7fffffec},
+{0x64,0x01000000},
+{0x68,0x30bffff9},
+{0x6c,0x8210603c},
+{0x70,0xc0204000},
+{0x74,0x81c7e008},
+{0x78,0x81e80000},
+{0x7c,0x9de3bf98},
+{0xf0,0x90},
+{0x00,0x7fffffeb},
+{0x04,0x901020a5},
+{0x08,0x7ffff692},
+{0x0c,0x01000000},
+{0x10,0x7ffff507},
+{0x14,0x01000000},
+{0x18,0xc20023c8},
+{0x1c,0x83306012},
+{0x20,0x80886001},
+{0x24,0x02800007},
+{0x28,0x01000000},
+{0x2c,0x7ffff5ec},
+{0x30,0x01000000},
+{0x34,0x7ffff58d},
+{0x38,0x01000000},
+{0x3c,0x30800005},
+{0x40,0x7ffff58a},
+{0x44,0x01000000},
+{0x48,0x7ffff5e5},
+{0x4c,0x01000000},
+{0x50,0x7ffff544},
+{0x54,0x01000000},
+{0x58,0xc20023c8},
+{0x5c,0x80886010},
+{0x60,0x02800005},
+{0x64,0x01000000},
+{0x68,0x7ffff6a4},
+{0x6c,0x01000000},
+{0x70,0x30800003},
+{0x74,0x7ffff719},
+{0x78,0x01000000},
+{0x7c,0x7ffff77e},
+{0xf0,0x91},
+{0x00,0xb01020aa},
+{0x04,0x7ffff7d3},
+{0x08,0x01000000},
+{0x0c,0x7ffffa82},
+{0x10,0x01000000},
+{0x14,0x7ffff9b6},
+{0x18,0x01000000},
+{0x1c,0x7ffffabb},
+{0x20,0x01000000},
+{0x24,0x7ffffa3c},
+{0x28,0x90102001},
+{0x2c,0x7ffffcbe},
+{0x30,0x01000000},
+{0x34,0x7ffffd02},
+{0x38,0x01000000},
+{0x3c,0x7ffffbf0},
+{0x40,0x01000000},
+{0x44,0x7ffffd81},
+{0x48,0x01000000},
+{0x4c,0x7fffffb8},
+{0x50,0x9010205a},
+{0x54,0x7ffffe2a},
+{0x58,0x01000000},
+{0x5c,0x7fffff53},
+{0x60,0x01000000},
+{0x64,0x7fffff0c},
+{0x68,0x01000000},
+{0x6c,0x7fffff8a},
+{0x70,0x01000000},
+{0x74,0x7fffffae},
+{0x78,0x81e80000},
+{0x7c,0x01000000},
+{0xf0,0x92},
+{0x00,0x9de3bf98},
+{0x04,0xa4102000},
+{0x08,0xc20023d4},
+{0x0c,0x80a48001},
+{0x10,0xa2102000},
+{0x14,0x1a800016},
+{0x18,0xa0102000},
+{0x1c,0xc200247c},
+{0x20,0x80a40001},
+{0x24,0x3a80000f},
+{0x28,0xa2046001},
+{0x2c,0x7ffff143},
+{0x30,0x90100010},
+{0x34,0x92100008},
+{0x38,0x7ffff10d},
+{0x3c,0x90100011},
+{0x40,0x0300003f},
+{0x44,0xda002274},
+{0x48,0x821063ff},
+{0x4c,0x9a0b4001},
+{0x50,0x80a2000d},
+{0x54,0xa4400012},
+{0x58,0x10bffff1},
+{0x5c,0xa0042001},
+{0x60,0xc20023d4},
+{0x64,0x10bfffec},
+{0x68,0x80a44001},
+{0x6c,0xc2102274},
+{0x70,0x80a48001},
+{0x74,0x08800005},
+{0x78,0x033fc180},
+{0x7c,0x1b004000},
+{0xf0,0x93},
+{0x00,0x8210603c},
+{0x04,0xda204000},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x9de3bf98},
+{0x14,0xf600227c},
+{0x18,0x80a6e000},
+{0x1c,0x02800033},
+{0x20,0x01000000},
+{0x24,0xc2002594},
+{0x28,0x80a06001},
+{0x2c,0x1280002f},
+{0x30,0xb0102000},
+{0x34,0xfa0022f8},
+{0x38,0xc200247c},
+{0x3c,0xb45f4001},
+{0x40,0x3b000007},
+{0x44,0xba1763ff},
+{0x48,0x8336e00d},
+{0x4c,0x9e08401d},
+{0x50,0x80a6001a},
+{0x54,0xb2102000},
+{0x58,0x9a0ec01d},
+{0x5c,0x1a800014},
+{0x60,0xb8102000},
+{0x64,0x03000018},
+{0x68,0x96106200},
+{0x6c,0x98106340},
+{0x70,0xba07001c},
+{0x74,0xc217400c},
+{0x78,0x80a3c001},
+{0x7c,0xb2400019},
+{0xf0,0x94},
+{0x00,0xc217400b},
+{0x04,0x80a0400d},
+{0x08,0x0a800005},
+{0x0c,0xb8072001},
+{0x10,0x80a0400f},
+{0x14,0x08800004},
+{0x18,0x80a7001a},
+{0x1c,0xb0062001},
+{0x20,0x80a7001a},
+{0x24,0x0abffff4},
+{0x28,0xba07001c},
+{0x2c,0xb936e01a},
+{0x30,0x80a6401c},
+{0x34,0x14800003},
+{0x38,0xba102001},
+{0x3c,0xba102000},
+{0x40,0x80a6001c},
+{0x44,0x14800003},
+{0x48,0x82102001},
+{0x4c,0x82102000},
+{0x50,0x80974001},
+{0x54,0x02800005},
+{0x58,0x033fc180},
+{0x5c,0x3b008000},
+{0x60,0x8210603c},
+{0x64,0xfa204000},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0xda00247c},
+{0x74,0xc20022f8},
+{0x78,0x8258400d},
+{0x7c,0x83306001},
+{0xf0,0x95},
+{0x00,0x9a102000},
+{0x04,0x80a34001},
+{0x08,0x1a80002c},
+{0x0c,0x03000018},
+{0x10,0x94106340},
+{0x14,0x0300003f},
+{0x18,0x901063ff},
+{0x1c,0xd8002544},
+{0x20,0x80a32008},
+{0x24,0x92036001},
+{0x28,0x0880000d},
+{0x2c,0x972b6002},
+{0x30,0xda02c00a},
+{0x34,0x83336010},
+{0x38,0x82004001},
+{0x3c,0x9a0b4008},
+{0x40,0x81800000},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x01000000},
+{0x50,0x8270400c},
+{0x54,0x1080000a},
+{0x58,0x9a03400d},
+{0x5c,0xda02c00a},
+{0x60,0x83336010},
+{0x64,0x81800000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x8270400c},
+{0x78,0x9a0b4008},
+{0x7c,0x81800000},
+{0xf0,0x96},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x9a73400c},
+{0x10,0x83286010},
+{0x14,0x8200400d},
+{0x18,0xc222c00a},
+{0x1c,0xda00247c},
+{0x20,0xc20022f8},
+{0x24,0x8258400d},
+{0x28,0x83306001},
+{0x2c,0x80a24001},
+{0x30,0x0abfffdb},
+{0x34,0x9a100009},
+{0x38,0x81c3e008},
+{0x3c,0x01000000},
+{0x40,0x9de3bf98},
+{0x44,0xc2002544},
+{0x48,0x82006001},
+{0x4c,0xc2202544},
+{0x50,0x03000018},
+{0x54,0xb4106340},
+{0x58,0x9e100018},
+{0x5c,0x031fffdf},
+{0x60,0xb01063ff},
+{0x64,0xba102000},
+{0x68,0xb72f6002},
+{0x6c,0xc2002544},
+{0x70,0x80a06009},
+{0x74,0xb2076001},
+{0x78,0x12800007},
+{0x7c,0xb810001b},
+{0xf0,0x97},
+{0x00,0xc206c01a},
+{0x04,0x83306001},
+{0x08,0x82084018},
+{0x0c,0xc226c01a},
+{0x10,0xc2002544},
+{0x14,0x80a06008},
+{0x18,0x08800006},
+{0x1c,0xc207001a},
+{0x20,0xfa03c01c},
+{0x24,0xbb376001},
+{0x28,0x10800003},
+{0x2c,0xba0f4018},
+{0x30,0xfa03c01c},
+{0x34,0x8200401d},
+{0x38,0xc227001a},
+{0x3c,0x80a6604f},
+{0x40,0x08bfffea},
+{0x44,0xba100019},
+{0x48,0x81c7e008},
+{0x4c,0x81e80000},
+{0x50,0x9a102000},
+{0x54,0x832b6002},
+{0x58,0x9a036001},
+{0x5c,0x80a3604f},
+{0x60,0x08bffffd},
+{0x64,0xc0220001},
+{0x68,0x81c3e008},
+{0x6c,0x01000000},
+{0x70,0xc200247c},
+{0x74,0xda0022f8},
+{0x78,0x8258400d},
+{0x7c,0x97306001},
+{0xf0,0x98},
+{0x00,0x98102000},
+{0x04,0x80a3000b},
+{0x08,0x1680000e},
+{0x0c,0x1b000018},
+{0x10,0x0307ffc7},
+{0x14,0x90136340},
+{0x18,0x921063ff},
+{0x1c,0x94136200},
+{0x20,0x9b2b2002},
+{0x24,0xc2034008},
+{0x28,0x83306003},
+{0x2c,0x82084009},
+{0x30,0x98032001},
+{0x34,0x80a3000b},
+{0x38,0x06bffffa},
+{0x3c,0xc223400a},
+{0x40,0x03000019},
+{0x44,0x9a106080},
+{0x48,0x98102000},
+{0x4c,0x832b2002},
+{0x50,0x98032001},
+{0x54,0x80a3209f},
+{0x58,0x04bffffd},
+{0x5c,0xc020400d},
+{0x60,0x81c3e008},
+{0x64,0x01000000},
+{0x68,0x9de3bf98},
+{0x6c,0xc200253c},
+{0x70,0x80a06000},
+{0x74,0x12800048},
+{0x78,0xb0102000},
+{0x7c,0xd6002460},
+{0xf0,0x99},
+{0x00,0x82102080},
+{0x04,0x80a2e000},
+{0x08,0x02800043},
+{0x0c,0xc220256c},
+{0x10,0x10800005},
+{0x14,0xb0102001},
+{0x18,0xc220256c},
+{0x1c,0x1080003e},
+{0x20,0xf00e2468},
+{0x24,0xd80022fc},
+{0x28,0x80a6000c},
+{0x2c,0x1880002d},
+{0x30,0x9a102000},
+{0x34,0xd40022f8},
+{0x38,0x33000019},
+{0x3c,0xb6102001},
+{0x40,0x80a6c00a},
+{0x44,0x18800020},
+{0x48,0xb4102000},
+{0x4c,0x832e2002},
+{0x50,0xb8006030},
+{0x54,0xa0166080},
+{0x58,0x90166050},
+{0x5c,0x921660b0},
+{0x60,0xde0022f8},
+{0x64,0xfa070010},
+{0x68,0x80a7400b},
+{0x6c,0x26800013},
+{0x70,0xb606e001},
+{0x74,0x80a6e001},
+{0x78,0x22800007},
+{0x7c,0xc20022f8},
+{0xf0,0x9a},
+{0x00,0xc2070008},
+{0x04,0x80a74001},
+{0x08,0x2480000c},
+{0x0c,0xb606e001},
+{0x10,0xc20022f8},
+{0x14,0x80a6c001},
+{0x18,0x22800007},
+{0x1c,0xb406a001},
+{0x20,0xc2070009},
+{0x24,0x80a74001},
+{0x28,0x26800004},
+{0x2c,0xb606e001},
+{0x30,0xb406a001},
+{0x34,0xb606e001},
+{0x38,0x80a6c00f},
+{0x3c,0x08bfffea},
+{0x40,0xb8072030},
+{0x44,0x80a6800d},
+{0x48,0x34800002},
+{0x4c,0x9a10001a},
+{0x50,0xb0062001},
+{0x54,0x80a6000c},
+{0x58,0x28bfffda},
+{0x5c,0xb6102001},
+{0x60,0xb0102000},
+{0x64,0xc20e2464},
+{0x68,0x80a06000},
+{0x6c,0x22800006},
+{0x70,0xb0062001},
+{0x74,0x80a34001},
+{0x78,0x34bfffc8},
+{0x7c,0xc20e2278},
+{0xf0,0x9b},
+{0x00,0xb0062001},
+{0x04,0x80a62003},
+{0x08,0x24bffff8},
+{0x0c,0xc20e2464},
+{0x10,0xb0102000},
+{0x14,0x81c7e008},
+{0x18,0x81e80000},
+{0x1c,0xda00247c},
+{0x20,0xc20022f8},
+{0x24,0x8258400d},
+{0x28,0x83306001},
+{0x2c,0x9a102000},
+{0x30,0x80a34001},
+{0x34,0x1a800018},
+{0x38,0x03000018},
+{0x3c,0x96106340},
+{0x40,0x031fffdf},
+{0x44,0x921063ff},
+{0x48,0xd8002544},
+{0x4c,0x94036001},
+{0x50,0x80a32008},
+{0x54,0x08800006},
+{0x58,0x9b2b6002},
+{0x5c,0xc203400b},
+{0x60,0x83306001},
+{0x64,0x10800003},
+{0x68,0x82084009},
+{0x6c,0xc203400b},
+{0x70,0x8258400c},
+{0x74,0xc223400b},
+{0x78,0xda00247c},
+{0x7c,0xc20022f8},
+{0xf0,0x9c},
+{0x00,0x8258400d},
+{0x04,0x83306001},
+{0x08,0x80a28001},
+{0x0c,0x0abfffef},
+{0x10,0x9a10000a},
+{0x14,0x81c3e008},
+{0x18,0x01000000},
+{0x1c,0x9de3bf98},
+{0x20,0xd600254c},
+{0x24,0x808ae010},
+{0x28,0x22800010},
+{0x2c,0xc2002574},
+{0x30,0x033fc200},
+{0x34,0xda002334},
+{0x38,0xd8002298},
+{0x3c,0x82106070},
+{0x40,0xd8204000},
+{0x44,0x960affef},
+{0x48,0x9a036001},
+{0x4c,0x11000018},
+{0x50,0xd620254c},
+{0x54,0xda202574},
+{0x58,0xc0202544},
+{0x5c,0x7fffff5d},
+{0x60,0x90122340},
+{0x64,0xc2002574},
+{0x68,0x80a06000},
+{0x6c,0x22800011},
+{0x70,0xc2002578},
+{0x74,0x82007fff},
+{0x78,0x7ffff266},
+{0x7c,0xc2202574},
+{0xf0,0x9d},
+{0x00,0x7fffff30},
+{0x04,0x01000000},
+{0x08,0xc2002574},
+{0x0c,0x80a06000},
+{0x10,0x32800008},
+{0x14,0xc2002578},
+{0x18,0x7ffffef6},
+{0x1c,0x01000000},
+{0x20,0x11000018},
+{0x24,0x7ffffc87},
+{0x28,0x90122200},
+{0x2c,0xc2002578},
+{0x30,0x80a06000},
+{0x34,0x1280001a},
+{0x38,0x01000000},
+{0x3c,0xc2002574},
+{0x40,0x80a06000},
+{0x44,0x12800016},
+{0x48,0x01000000},
+{0x4c,0x7fffff67},
+{0x50,0x01000000},
+{0x54,0x80a22000},
+{0x58,0x02800007},
+{0x5c,0xd020253c},
+{0x60,0x7fffffaf},
+{0x64,0x01000000},
+{0x68,0xc200253c},
+{0x6c,0x1080000c},
+{0x70,0xc2202574},
+{0x74,0xc2002334},
+{0x78,0x82006001},
+{0x7c,0xda00254c},
+{0xf0,0x9e},
+{0x00,0xc2202574},
+{0x04,0x9a136010},
+{0x08,0x82102001},
+{0x0c,0xda20254c},
+{0x10,0xc2202578},
+{0x14,0x7ffff8a0},
+{0x18,0x91e82000},
+{0x1c,0x01000000},
+{0x20,0x81c7e008},
+{0x24,0x81e80000},
+{0x28,0x9de3bf98},
+{0x2c,0xd800254c},
+{0x30,0x808b2010},
+{0x34,0x0280002c},
+{0x38,0x033fc200},
+{0x3c,0x82106030},
+{0x40,0xda004000},
+{0x44,0xc200257c},
+{0x48,0x80a34001},
+{0x4c,0x02800004},
+{0x50,0x03000800},
+{0x54,0x82130001},
+{0x58,0xc220254c},
+{0x5c,0xc2002344},
+{0x60,0x80a34001},
+{0x64,0x3280000d},
+{0x68,0xc208254d},
+{0x6c,0xc2002200},
+{0x70,0x80a06000},
+{0x74,0x32800009},
+{0x78,0xc208254d},
+{0x7c,0x7ffffe85},
+{0xf0,0x9f},
+{0x00,0x01000000},
+{0x04,0x7ffff25d},
+{0x08,0x01000000},
+{0x0c,0x7ffff2b6},
+{0x10,0x01000000},
+{0x14,0xc208254d},
+{0x18,0x80a06000},
+{0x1c,0x02800012},
+{0x20,0x033fc180},
+{0x24,0xc0204000},
+{0x28,0xb0102002},
+{0x2c,0x11000099},
+{0x30,0x7ffff0be},
+{0x34,0x9012233c},
+{0x38,0x7ffffdba},
+{0x3c,0x90102002},
+{0x40,0xb0863fff},
+{0x44,0x1cbffffb},
+{0x48,0x11000099},
+{0x4c,0xc210254c},
+{0x50,0x80886001},
+{0x54,0x32800002},
+{0x58,0xc020250c},
+{0x5c,0x7ffff0d9},
+{0x60,0x91e82015},
+{0x64,0x01000000},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0x9de3bf98},
+{0x74,0x96100018},
+{0x78,0x98100019},
+{0x7c,0x9a10001a},
+{0xf0,0xa0},
+{0x00,0x9e10001b},
+{0x04,0xb0102000},
+{0x08,0xb4102000},
+{0x0c,0xb2102000},
+{0x10,0xb72e2002},
+{0x14,0xf816c00b},
+{0x18,0xc216c00c},
+{0x1c,0x80a70001},
+{0x20,0x0a80000a},
+{0x24,0xfa16c00d},
+{0x28,0x80a0401d},
+{0x2c,0x1a80000f},
+{0x30,0x80a66000},
+{0x34,0x80a7001d},
+{0x38,0x1a80000b},
+{0x3c,0x8210001d},
+{0x40,0x10800009},
+{0x44,0x8210001c},
+{0x48,0x80a0401d},
+{0x4c,0x08800007},
+{0x50,0x80a66000},
+{0x54,0x80a7001d},
+{0x58,0x08800003},
+{0x5c,0x8210001d},
+{0x60,0x8210001c},
+{0x64,0x80a66000},
+{0x68,0x22800002},
+{0x6c,0x83286010},
+{0x70,0xb2066001},
+{0x74,0xb4068001},
+{0x78,0x80a66001},
+{0x7c,0x04bfffe6},
+{0xf0,0xa1},
+{0x00,0xb606e002},
+{0x04,0x832e2002},
+{0x08,0xb0062001},
+{0x0c,0x80a6204f},
+{0x10,0x04bfffde},
+{0x14,0xf423c001},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x98102000},
+{0x24,0x9b2b2002},
+{0x28,0x98032001},
+{0x2c,0xc202000d},
+{0x30,0x80a3204f},
+{0x34,0x04bffffc},
+{0x38,0xc222400d},
+{0x3c,0x81c3e008},
+{0x40,0x01000000},
+{0x44,0x9de3bf98},
+{0x48,0x7ffffdb2},
+{0x4c,0x01000000},
+{0x50,0x0300003f},
+{0x54,0x98106300},
+{0x58,0xc2002508},
+{0x5c,0x8088400c},
+{0x60,0x02800009},
+{0x64,0x033fc040},
+{0x68,0xda002508},
+{0x6c,0xc200254c},
+{0x70,0x9a0b400c},
+{0x74,0x8210400d},
+{0x78,0xc220254c},
+{0x7c,0xc0202508},
+{0xf0,0xa2},
+{0x00,0x033fc040},
+{0x04,0xe4002500},
+{0x08,0x8210600c},
+{0x0c,0x80a4a029},
+{0x10,0x08800008},
+{0x14,0xc0204000},
+{0x18,0x7fffff41},
+{0x1c,0x01000000},
+{0x20,0x7fffff82},
+{0x24,0x01000000},
+{0x28,0x1080008a},
+{0x2c,0xc2002500},
+{0x30,0x80a4a000},
+{0x34,0x12800013},
+{0x38,0x80a4a014},
+{0x3c,0x7ffff081},
+{0x40,0x90102000},
+{0x44,0x033fc200},
+{0x48,0xda002330},
+{0x4c,0x82106074},
+{0x50,0xda204000},
+{0x54,0x7ffff06a},
+{0x58,0x90102001},
+{0x5c,0x7ffff142},
+{0x60,0x01000000},
+{0x64,0x80a22000},
+{0x68,0x3280007a},
+{0x6c,0xc2002500},
+{0x70,0x7ffffd4c},
+{0x74,0x90102001},
+{0x78,0x10800076},
+{0x7c,0xc2002500},
+{0xf0,0xa3},
+{0x00,0x1880000c},
+{0x04,0x80a4a015},
+{0x08,0x808ca001},
+{0x0c,0x32800071},
+{0x10,0xc2002500},
+{0x14,0x9004bffe},
+{0x18,0x7fffef38},
+{0x1c,0x91322001},
+{0x20,0x7ffff04b},
+{0x24,0x01000000},
+{0x28,0x1080006a},
+{0x2c,0xc2002500},
+{0x30,0x18800017},
+{0x34,0x80a4a016},
+{0x38,0x7ffffdd2},
+{0x3c,0x01000000},
+{0x40,0x7ffff129},
+{0x44,0x01000000},
+{0x48,0x80a22000},
+{0x4c,0x32800005},
+{0x50,0x033fc180},
+{0x54,0x7ffffd33},
+{0x58,0x90102001},
+{0x5c,0x033fc180},
+{0x60,0xda0025b0},
+{0x64,0x82106038},
+{0x68,0xda204000},
+{0x6c,0x033fc200},
+{0x70,0xda00232c},
+{0x74,0x82106074},
+{0x78,0xda204000},
+{0x7c,0x7ffff040},
+{0xf0,0xa4},
+{0x00,0x90102000},
+{0x04,0x10800053},
+{0x08,0xc2002500},
+{0x0c,0x18800007},
+{0x10,0x80a4a018},
+{0x14,0x11000018},
+{0x18,0x7ffffe6e},
+{0x1c,0x90122340},
+{0x20,0x1080004c},
+{0x24,0xc2002500},
+{0x28,0x18800015},
+{0x2c,0x80a4a028},
+{0x30,0x033fc140},
+{0x34,0x82106048},
+{0x38,0xda004000},
+{0x3c,0x03000040},
+{0x40,0x808b4001},
+{0x44,0x22800007},
+{0x48,0x11000018},
+{0x4c,0x11000017},
+{0x50,0x13000019},
+{0x54,0x90122380},
+{0x58,0x10800005},
+{0x5c,0x92126080},
+{0x60,0x13000019},
+{0x64,0x901220c0},
+{0x68,0x921261c0},
+{0x6c,0x7fffff8d},
+{0x70,0x01000000},
+{0x74,0x10800037},
+{0x78,0xc2002500},
+{0x7c,0x38800035},
+{0xf0,0xa5},
+{0x00,0xc2002500},
+{0x04,0x033fc140},
+{0x08,0x82106048},
+{0x0c,0xda004000},
+{0x10,0x03000040},
+{0x14,0x808b4001},
+{0x18,0x0280000d},
+{0x1c,0x21000019},
+{0x20,0x92142080},
+{0x24,0x23000017},
+{0x28,0x96100009},
+{0x2c,0x90146380},
+{0x30,0x7fffff50},
+{0x34,0x941421c0},
+{0x38,0x7ffffe22},
+{0x3c,0x90142080},
+{0x40,0x90146380},
+{0x44,0x1080000c},
+{0x48,0x92142080},
+{0x4c,0x941421c0},
+{0x50,0x23000018},
+{0x54,0x92142080},
+{0x58,0x901460c0},
+{0x5c,0x7fffff45},
+{0x60,0x9610000a},
+{0x64,0x7ffffe17},
+{0x68,0x901421c0},
+{0x6c,0x901460c0},
+{0x70,0x921421c0},
+{0x74,0x7fffff6b},
+{0x78,0x01000000},
+{0x7c,0x80a4a028},
+{0xf0,0xa6},
+{0x00,0x32800014},
+{0x04,0xc2002500},
+{0x08,0x7ffffe3a},
+{0x0c,0x01000000},
+{0x10,0xc200250c},
+{0x14,0x80a06000},
+{0x18,0x3280000b},
+{0x1c,0xc200254c},
+{0x20,0x031696a9},
+{0x24,0x821061a5},
+{0x28,0x11000018},
+{0x2c,0x13000017},
+{0x30,0xc220250c},
+{0x34,0x90122200},
+{0x38,0x7fffff5a},
+{0x3c,0x92126240},
+{0x40,0xc200254c},
+{0x44,0x82106012},
+{0x48,0xc220254c},
+{0x4c,0xc2002500},
+{0x50,0x80a48001},
+{0x54,0x3280000c},
+{0x58,0xc0202578},
+{0x5c,0x031fffff},
+{0x60,0x821063f0},
+{0x64,0x80a48001},
+{0x68,0x38800003},
+{0x6c,0x25040000},
+{0x70,0xa404a001},
+{0x74,0x033fc180},
+{0x78,0x82106034},
+{0x7c,0xe4204000},
+{0xf0,0xa7},
+{0x00,0xe4202500},
+{0x04,0xc2002578},
+{0x08,0x80a06000},
+{0x0c,0x02800005},
+{0x10,0x01000000},
+{0x14,0x7ffffd1a},
+{0x18,0x01000000},
+{0x1c,0xc0202578},
+{0x20,0x81c7e008},
+{0x24,0x81e80000},
+{0x28,0x81c3e008},
+{0x2c,0x01000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xa8},
+{0x00,0x00001688},
+{0x04,0xa5010402},
+{0x08,0xa5000000},
+{0x0c,0x00000000},
+{0x10,0x4c494348},
+{0x14,0x49444449},
+{0x18,0x43415352},
+{0x1c,0x4341534c},
+{0x20,0x43415345},
+{0x24,0x534f5254},
+{0x28,0x4b455953},
+{0x2c,0x4e454152},
+{0x30,0x4156474e},
+{0x34,0x47525752},
+{0x38,0x52464d41},
+{0x3c,0x52534e55},
+{0x40,0x5244524f},
+{0x44,0x45534443},
+{0x48,0x52454f4e},
+{0x4c,0x53554352},
+{0x50,0x50524553},
+{0x54,0x00000000},
+{0x58,0x4f637420},
+{0x5c,0x32312032},
+{0x60,0x30313300},
+{0x64,0x00000000},
+{0x68,0x31363a32},
+{0x6c,0x373a3430},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+
+};
diff --git a/drivers/amlogic/input/touchscreen/gslx680/main_3670.h b/drivers/amlogic/input/touchscreen/gslx680/main_3670.h
new file mode 100755
index 000000000000..4c63e68aa816
--- /dev/null
+++ b/drivers/amlogic/input/touchscreen/gslx680/main_3670.h
@@ -0,0 +1,5253 @@
+
+unsigned int gsl3670_config_data_id[] =
+{
+	0x762ac8,  
+	0x200,
+	0,0,
+	0,
+	0,0,0,
+	0,0,0,0,0,0,0,0,
+
+
+	0x108,0x5,0xe001a,0xe001a,0x4000300,0,0x5100,0x8e00,
+	0,0x320014,0,0,0,0,0,0,
+	0x8,0x4000,0x1000,0x10400007,0x10150004,0,0,0,
+	0x1b6db688,0x90,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0x40,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+	0,//key_map
+	0x3200384,0x64,0x503e8,//0
+	0,0,0,//1
+	0,0,0,//2
+	0,0,0,//3
+	0,0,0,//4
+	0,0,0,//5
+	0,0,0,//6
+	0,0,0,//7
+
+	0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+
+	0x221,
+	0,0,0,0,0,0,0,0,
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+
+	0x10203,0x4050607,0x8090a0b,0xc0d0e0f,0x10111213,0x14151617,0x18191a1b,0x1c1d1e1f,
+	0x20212223,0x24252627,0x28292a2b,0x2c2d2e2f,0x30313233,0x34353637,0x38393a3b,0x3c3d3e3f,
+
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,
+
+
+	0x3,
+	0x101,0,0x100,0,
+	0x20,0x10,0x8,0x4,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,0,
+	0,0,0,0,0,0,0,
+};
+
+static const struct fw_data GSL3670_FW[] = {
+
+{0xf0,0x3},
+{0x00,0xc3f2be54},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00005100},
+{0x28,0x00008e00},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x1a0ac00a},
+{0x68,0x00000002},
+{0x6c,0x0000000f},
+{0x70,0x00000000},
+{0x74,0xffffffff},
+{0x78,0xffffffec},
+{0x7c,0x00000000},
+{0xf0,0x4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0xfe0cff06},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00001000},
+{0x34,0x00000000},
+{0x38,0x0000000a},
+{0x3c,0x00000258},
+{0x40,0x00000000},
+{0x44,0x04020a00},
+{0x48,0x0014012c},
+{0x4c,0x9a000000},
+{0x50,0x00000000},
+{0x54,0x00010203},
+{0x58,0x04050607},
+{0x5c,0x08090a0b},
+{0x60,0x0c0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x0014000a},
+{0x78,0x80808080},
+{0x7c,0xcba981f4},
+{0xf0,0x5},
+{0x00,0x00000000},
+{0x04,0x00000005},
+{0x08,0x000000b4},
+{0x0c,0x66666666},
+{0x10,0x0000000a},
+{0x14,0x00000000},
+{0x18,0x00000fff},
+{0x1c,0x10400007},
+{0x20,0x10150004},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000400},
+{0x30,0x80808080},
+{0x34,0x80808080},
+{0x38,0x80808080},
+{0x3c,0x80808080},
+{0x40,0x80808080},
+{0x44,0x80808080},
+{0x48,0x80808080},
+{0x4c,0x80808000},
+{0x50,0xffffffff},
+{0x54,0x00010203},
+{0x58,0x04050607},
+{0x5c,0x08090a0b},
+{0x60,0x0c0d0e0f},
+{0x64,0x10111213},
+{0x68,0x14151617},
+{0x6c,0x18191a1b},
+{0x70,0x1c1d1e1f},
+{0x74,0x00000221},
+{0x78,0x0000001a},
+{0x7c,0x0000000e},
+{0xf0,0x6},
+{0x00,0x0000001a},
+{0x04,0x00000000},
+{0x08,0x0000000e},
+{0x0c,0x04030402},
+{0x10,0x00000032},
+{0x14,0x1414140a},
+{0x18,0x00000000},
+{0x1c,0x00000001},
+{0x20,0x00002904},
+{0x24,0x00000400},
+{0x28,0x00000300},
+{0x2c,0xf8010011},
+{0x30,0xf8010011},
+{0x34,0x00000005},
+{0x38,0x00000003},
+{0x3c,0x00000fff},
+{0x40,0x80000000},
+{0x44,0x00180018},
+{0x48,0x00000fff},
+{0x4c,0x04040402},
+{0x50,0x00020001},
+{0x54,0x00000090},
+{0x58,0x00004000},
+{0x5c,0x1b6db688},
+{0x60,0x20100804},
+{0x64,0x000007d0},
+{0x68,0x000007d0},
+{0x6c,0x000007d0},
+{0x70,0x000007d0},
+{0x74,0x00000096},
+{0x78,0x000a003c},
+{0x7c,0x00000000},
+{0xf0,0x7},
+{0x00,0x06010900},
+{0x04,0x08030b02},
+{0x08,0x0a050d04},
+{0x0c,0x0c070610},
+{0x10,0x09130812},
+{0x14,0x00123456},
+{0x18,0x00000000},
+{0x1c,0x000a0078},
+{0x20,0x00001081},
+{0x24,0xff080010},
+{0x28,0xff080120},
+{0x2c,0xff080140},
+{0x30,0xff080160},
+{0x34,0x000000f0},
+{0x38,0x000000d0},
+{0x3c,0x000000b0},
+{0x40,0x00000000},
+{0x44,0x00640064},
+{0x48,0x00000108},
+{0x4c,0x320f0f03},
+{0x50,0x00000000},
+{0x54,0x00000004},
+{0x58,0x00000000},
+{0x5c,0x000c0001},
+{0x60,0x0018000d},
+{0x64,0x00190019},
+{0x68,0x00000000},
+{0x6c,0x00080003},
+{0x70,0x00080003},
+{0x74,0x00000000},
+{0x78,0x00654321},
+{0x7c,0x000789ab},
+{0xf0,0x8},
+{0x00,0x038f236f},
+{0x04,0x234f232f},
+{0x08,0x230f22ef},
+{0x0c,0x22cf22af},
+{0x10,0x228f226f},
+{0x14,0x224f222f},
+{0x18,0x220f41f0},
+{0x1c,0x41f141f2},
+{0x20,0x41f341f4},
+{0x24,0x41f541f6},
+{0x28,0x41f741f8},
+{0x2c,0x41f941fa},
+{0x30,0x41fb71fc},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x02040608},
+{0x44,0x0a0c0e00},
+{0x48,0x00000000},
+{0x4c,0x01030507},
+{0x50,0x090b0d00},
+{0x54,0x00000000},
+{0x58,0x00080007},
+{0x5c,0x00000008},
+{0x60,0x000001f4},
+{0x64,0x00030201},
+{0x68,0x00080804},
+{0x6c,0x00000100},
+{0x70,0x000000cd},
+{0x74,0x00000070},
+{0x78,0x00000000},
+{0x7c,0x0000000e},
+{0xf0,0x9},
+{0x00,0xff080094},
+{0x04,0x00070011},
+{0x08,0xff080090},
+{0x0c,0x00040000},
+{0x10,0xff080068},
+{0x14,0x00030000},
+{0x18,0xff080064},
+{0x1c,0x01002582},
+{0x20,0xff080060},
+{0x24,0x00000000},
+{0x28,0xff08004c},
+{0x2c,0x00197fff},
+{0x30,0xfffffff0},
+{0x34,0x00000000},
+{0x38,0xfffffff0},
+{0x3c,0x00000000},
+{0x40,0xfffffff0},
+{0x44,0x00000000},
+{0x48,0xfffffff0},
+{0x4c,0x00000000},
+{0x50,0xfffffff0},
+{0x54,0x00000000},
+{0x58,0xfffffff0},
+{0x5c,0x00000000},
+{0x60,0xfffffff0},
+{0x64,0x00000000},
+{0x68,0xfffffff0},
+{0x6c,0x00000000},
+{0x70,0xfffffff0},
+{0x74,0x00000000},
+{0x78,0xfffffff0},
+{0x7c,0x00000000},
+/*
+{0xf0,0xe0},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x006401f4},
+{0x44,0x00640064},
+{0x48,0x01900064},
+{0x4c,0x00500190},
+{0x50,0x00500050},
+{0x54,0x012c0050},
+{0x58,0x012c012c},
+{0x5c,0x0030012c},
+{0x60,0x00640000},
+{0x64,0x00640064},
+{0x68,0x00000032},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe1},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000002},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe2},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe3},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe4},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe5},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0xe6},
+{0x00,0x00000000},
+{0x04,0x00000000},
+{0x08,0x00000000},
+{0x0c,0x00000000},
+{0x10,0x00000000},
+{0x14,0x00000000},
+{0x18,0x00000000},
+{0x1c,0x00000000},
+{0x20,0x00000000},
+{0x24,0x00000000},
+{0x28,0x00000000},
+{0x2c,0x00000000},
+{0x30,0x00000000},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+*/
+
+
+
+{0xf0,0x0},
+{0x00,0x01000000},
+{0x04,0x01000000},
+{0x08,0x01000000},
+{0x0c,0x233fc0c0},
+{0x10,0xa2146004},
+{0x14,0xa4102000},
+{0x18,0xe4244000},
+{0x1c,0x233fc0c0},
+{0x20,0xa2146010},
+{0x24,0x2500003f},
+{0x28,0xa414a3ff},
+{0x2c,0xe4244000},
+{0x30,0x01000000},
+{0x34,0x821020e0},
+{0x38,0x81880001},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x270010c0},
+{0x4c,0xa614e00f},
+{0x50,0xe6a00040},
+{0x54,0x01000000},
+{0x58,0xa410200f},
+{0x5c,0xe4a00040},
+{0x60,0x01000000},
+{0x64,0xa0100000},
+{0x68,0xa2100000},
+{0x6c,0xa4100000},
+{0x70,0xa6100000},
+{0x74,0xa8100000},
+{0x78,0xaa100000},
+{0x7c,0xac100000},
+{0xf0,0x1},
+{0x00,0xae100000},
+{0x04,0x90100000},
+{0x08,0x92100000},
+{0x0c,0x94100000},
+{0x10,0x96100000},
+{0x14,0x98100000},
+{0x18,0x9a100000},
+{0x1c,0x9c100000},
+{0x20,0x9e100000},
+{0x24,0x84100000},
+{0x28,0x86100000},
+{0x2c,0x88100000},
+{0x30,0x8a100000},
+{0x34,0x8c100000},
+{0x38,0x8e100000},
+{0x3c,0x01000000},
+{0x40,0x01000000},
+{0x44,0x01000000},
+{0x48,0x82100000},
+{0x4c,0x81900001},
+{0x50,0x82100000},
+{0x54,0x81980001},
+{0x58,0x81800000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0xbc102cf8},
+{0x6c,0x9c102c78},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x2},
+{0x00,0x270010c0},
+{0x04,0xa614e00f},
+{0x08,0xe6a00040},
+{0x0c,0x01000000},
+{0x10,0x4000045c},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0x10bfffff},
+{0x20,0x01000000},
+{0x24,0x03169684},
+{0x28,0x82106042},
+{0x2c,0x0329694d},
+{0x30,0x82106270},
+{0x34,0x00000000},
+{0x38,0x00000000},
+{0x3c,0x00000000},
+{0x40,0x00000000},
+{0x44,0x00000000},
+{0x48,0x00000000},
+{0x4c,0x00000000},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x00000000},
+{0x5c,0x00000000},
+{0x60,0x00000000},
+{0x64,0x00000000},
+{0x68,0x00000000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x1a},
+{0x00,0x82102001},
+{0x04,0x81904000},
+{0x08,0x01000000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x81c3e008},
+{0x18,0x01000000},
+{0x1c,0x03000008},
+{0x20,0x82106342},
+{0x24,0xa3804000},
+{0x28,0x03000004},
+{0x2c,0x82106000},
+{0x30,0x81984000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x81c3e008},
+{0x44,0x01000000},
+{0x48,0x01000000},
+{0x4c,0x01000000},
+{0x50,0x01000000},
+{0x54,0xa7800000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x81c3e008},
+{0x68,0x01000000},
+{0x6c,0x82020008},
+{0x70,0x82004008},
+{0x74,0x9b326002},
+{0x78,0x82004001},
+{0x7c,0x8200400d},
+{0xf0,0x1b},
+{0x00,0x83286002},
+{0x04,0x920a6003},
+{0x08,0x932a6003},
+{0x0c,0xd00065b0},
+{0x10,0x91320009},
+{0x14,0x81c3e008},
+{0x18,0x900a20ff},
+{0x1c,0x9a020008},
+{0x20,0x9a034008},
+{0x24,0x97326002},
+{0x28,0x9a03400d},
+{0x2c,0x9a03400b},
+{0x30,0x920a6003},
+{0x34,0x9b2b6002},
+{0x38,0x932a6003},
+{0x3c,0x821020ff},
+{0x40,0xd80365b0},
+{0x44,0x83284009},
+{0x48,0x822b0001},
+{0x4c,0x952a8009},
+{0x50,0x8210400a},
+{0x54,0xc22365b0},
+{0x58,0x912a2002},
+{0x5c,0xda0223a4},
+{0x60,0x972ae002},
+{0x64,0x81c3e008},
+{0x68,0xc223400b},
+{0x6c,0x9a102005},
+{0x70,0x8210200b},
+{0x74,0x9a234008},
+{0x78,0x82204008},
+{0x7c,0x9b2b6002},
+{0xf0,0x1c},
+{0x00,0x80a22005},
+{0x04,0x14800007},
+{0x08,0x99286002},
+{0x0c,0x033fc200},
+{0x10,0x8210600c},
+{0x14,0xc2004000},
+{0x18,0x10800006},
+{0x1c,0x8330400d},
+{0x20,0x033fc200},
+{0x24,0x82106008},
+{0x28,0xc2004000},
+{0x2c,0x8330400c},
+{0x30,0x81c3e008},
+{0x34,0x9008600f},
+{0x38,0x9de3bf98},
+{0x3c,0xc200247c},
+{0x40,0x83306001},
+{0x44,0x80a60001},
+{0x48,0x1a800006},
+{0x4c,0x90100018},
+{0x50,0x7fffffe7},
+{0x54,0x01000000},
+{0x58,0x10800006},
+{0x5c,0xb0020008},
+{0x60,0x7fffffe3},
+{0x64,0x90260001},
+{0x68,0x90020008},
+{0x6c,0xb0022001},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x9de3bf98},
+{0x7c,0xa8102000},
+{0xf0,0x1d},
+{0x00,0xc20023d4},
+{0x04,0x80a50001},
+{0x08,0x1a800057},
+{0x0c,0xe2002348},
+{0x10,0xa4102000},
+{0x14,0xc200247c},
+{0x18,0x80a48001},
+{0x1c,0x3a80004e},
+{0x20,0xa8052001},
+{0x24,0x7fffffe5},
+{0x28,0x90100012},
+{0x2c,0x92100008},
+{0x30,0x7fffffaf},
+{0x34,0x90100014},
+{0x38,0x80a62000},
+{0x3c,0x12800004},
+{0x40,0xa0100008},
+{0x44,0x10800016},
+{0x48,0xa0102000},
+{0x4c,0x80a62009},
+{0x50,0x18800011},
+{0x54,0x80a62007},
+{0x58,0x4000024e},
+{0x5c,0x01000000},
+{0x60,0x94100008},
+{0x64,0x90100014},
+{0x68,0x40000256},
+{0x6c,0x921ca001},
+{0x70,0x80a20011},
+{0x74,0x04800007},
+{0x78,0xa6100008},
+{0x7c,0x9a102008},
+{0xf0,0x1e},
+{0x00,0x9a234018},
+{0x04,0x82102001},
+{0x08,0x8328400d},
+{0x0c,0xa02c0001},
+{0x10,0x80a62007},
+{0x14,0x18800008},
+{0x18,0x80a62008},
+{0x1c,0x9a102007},
+{0x20,0x9a234018},
+{0x24,0x82102001},
+{0x28,0x8328400d},
+{0x2c,0x10800022},
+{0x30,0xa0140001},
+{0x34,0x1280000a},
+{0x38,0x821e2009},
+{0x3c,0x80a420fe},
+{0x40,0x24800002},
+{0x44,0xa0042001},
+{0x48,0x03000018},
+{0x4c,0x9b2ca002},
+{0x50,0x821060e0},
+{0x54,0x10800018},
+{0x58,0xe6234001},
+{0x5c,0x80a00001},
+{0x60,0x9a603fff},
+{0x64,0x80a420fe},
+{0x68,0x04800003},
+{0x6c,0x82102001},
+{0x70,0x82102000},
+{0x74,0x808b4001},
+{0x78,0x0280000f},
+{0x7c,0x03000018},
+{0xf0,0x1f},
+{0x00,0x9b2ca002},
+{0x04,0x821060e0},
+{0x08,0xc2034001},
+{0x0c,0x80a04011},
+{0x10,0x18800003},
+{0x14,0x9a204011},
+{0x18,0x9a244001},
+{0x1c,0x80a4c011},
+{0x20,0x14800003},
+{0x24,0x8224c011},
+{0x28,0x82244013},
+{0x2c,0x80a34001},
+{0x30,0xa0642000},
+{0x34,0x7fffffa1},
+{0x38,0x90100012},
+{0x3c,0x92100008},
+{0x40,0x90100014},
+{0x44,0x7fffff76},
+{0x48,0x94100010},
+{0x4c,0x10bfffb2},
+{0x50,0xa404a001},
+{0x54,0xc20023d4},
+{0x58,0x80a50001},
+{0x5c,0x0abfffae},
+{0x60,0xa4102000},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x00000000},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+{0xf0,0x20},
+{0x00,0x83580000},
+{0x04,0x82086ff0},
+{0x08,0x83306004},
+{0x0c,0x80a06005},
+{0x10,0x02800024},
+{0x14,0x01000000},
+{0x18,0x80a06006},
+{0x1c,0x02800039},
+{0x20,0x01000000},
+{0x24,0x80a06015},
+{0x28,0x02800051},
+{0x2c,0x01000000},
+{0x30,0x80a0602a},
+{0x34,0x02800085},
+{0x38,0x01000000},
+{0x3c,0x073fc180},
+{0x40,0x8610e03c},
+{0x44,0x05169680},
+{0x48,0x84004002},
+{0x4c,0xc420c000},
+{0x50,0x073fc000},
+{0x54,0x8610e020},
+{0x58,0x84102001},
+{0x5c,0xc420c000},
+{0x60,0x0500000c},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x8480bfff},
+{0x70,0x12bffffe},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x073fc000},
+{0xf0,0x21},
+{0x00,0x8610e020},
+{0x04,0x84102000},
+{0x08,0xc420c000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x81c44000},
+{0x18,0x81cc8000},
+{0x1c,0x01000000},
+{0x20,0xa7500000},
+{0x24,0xa92ce002},
+{0x28,0xa734e001},
+{0x2c,0xa614c014},
+{0x30,0xa60ce007},
+{0x34,0x81900000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0x81e00000},
+{0x44,0xe03ba000},
+{0x48,0xe43ba008},
+{0x4c,0xe83ba010},
+{0x50,0xec3ba018},
+{0x54,0xf03ba020},
+{0x58,0xf43ba028},
+{0x5c,0xf83ba030},
+{0x60,0xfc3ba038},
+{0x64,0x81e80000},
+{0x68,0x8194c000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x81c44000},
+{0x78,0x81cc8000},
+{0x7c,0x01000000},
+{0xf0,0x22},
+{0x00,0xa7500000},
+{0x04,0xa934e002},
+{0x08,0xa72ce001},
+{0x0c,0xa614c014},
+{0x10,0xa60ce007},
+{0x14,0x81900000},
+{0x18,0x01000000},
+{0x1c,0x01000000},
+{0x20,0x81e80000},
+{0x24,0x81e80000},
+{0x28,0xe01ba000},
+{0x2c,0xe41ba008},
+{0x30,0xe81ba010},
+{0x34,0xec1ba018},
+{0x38,0xf01ba020},
+{0x3c,0xf41ba028},
+{0x40,0xf81ba030},
+{0x44,0xfc1ba038},
+{0x48,0x81e00000},
+{0x4c,0x81e00000},
+{0x50,0x8194c000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x81c44000},
+{0x60,0x81cc8000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x82102010},
+{0x70,0x273fc0c0},
+{0x74,0xa614e010},
+{0x78,0xc224c000},
+{0x7c,0x01000000},
+{0xf0,0x23},
+{0x00,0x033fc0c0},
+{0x04,0x82106004},
+{0x08,0xa6102000},
+{0x0c,0xe6204000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x01000000},
+{0x1c,0xa6102020},
+{0x20,0x83480000},
+{0x24,0x82104013},
+{0x28,0x81884000},
+{0x2c,0x01000000},
+{0x30,0x40000f58},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x01000000},
+{0x40,0xa7500000},
+{0x44,0xa934e002},
+{0x48,0xa72ce001},
+{0x4c,0xa614c014},
+{0x50,0xa60ce007},
+{0x54,0x81900000},
+{0x58,0x01000000},
+{0x5c,0x81e80000},
+{0x60,0xe01ba000},
+{0x64,0xe41ba008},
+{0x68,0xe81ba010},
+{0x6c,0xec1ba018},
+{0x70,0xf01ba020},
+{0x74,0xf41ba028},
+{0x78,0xf81ba030},
+{0x7c,0xfc1ba038},
+{0xf0,0x24},
+{0x00,0x81e00000},
+{0x04,0x8194c000},
+{0x08,0x01000000},
+{0x0c,0xa6102020},
+{0x10,0x83480000},
+{0x14,0x82284013},
+{0x18,0x81884000},
+{0x1c,0x01000000},
+{0x20,0x033fc0c0},
+{0x24,0x82106004},
+{0x28,0xa6103fff},
+{0x2c,0xe6204000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x81c44000},
+{0x40,0x81cc8000},
+{0x44,0x01000000},
+{0x48,0x81c48000},
+{0x4c,0x81cca004},
+{0x50,0x01000000},
+{0x54,0x01000000},
+{0x58,0x01000000},
+{0x5c,0x01000000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x01000000},
+{0x7c,0x01000000},
+{0xf0,0x25},
+{0x00,0x9de3bf98},
+{0x04,0x7ffffea6},
+{0x08,0x01000000},
+{0x0c,0x7ffffe9d},
+{0x10,0x01000000},
+{0x14,0x40000089},
+{0x18,0x01000000},
+{0x1c,0x7ffffeab},
+{0x20,0x01000000},
+{0x24,0x30bffffe},
+{0x28,0x80a22000},
+{0x2c,0x02800006},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x90823fff},
+{0x3c,0x12bffffe},
+{0x40,0x01000000},
+{0x44,0x81c3e008},
+{0x48,0x01000000},
+{0x4c,0x033fc200},
+{0x50,0x961060a0},
+{0x54,0x98102000},
+{0x58,0x832b2002},
+{0x5c,0x9a03000c},
+{0x60,0xda136400},
+{0x64,0x98032001},
+{0x68,0x80a32019},
+{0x6c,0x04bffffb},
+{0x70,0xda20400b},
+{0x74,0x81c3e008},
+{0x78,0x01000000},
+{0x7c,0x98102000},
+{0xf0,0x26},
+{0x00,0x9610201e},
+{0x04,0x80a22000},
+{0x08,0x12800003},
+{0x0c,0x8210000c},
+{0x10,0x8222c00c},
+{0x14,0x83286002},
+{0x18,0xda006480},
+{0x1c,0x80a37ff0},
+{0x20,0x02800006},
+{0x24,0x98032002},
+{0x28,0xc2006484},
+{0x2c,0x80a3201f},
+{0x30,0x04bffff5},
+{0x34,0xc2234000},
+{0x38,0x81c3e008},
+{0x3c,0x01000000},
+{0x40,0x193fc180},
+{0x44,0x03202020},
+{0x48,0x9a132038},
+{0x4c,0x82106080},
+{0x50,0xc2234000},
+{0x54,0x03296956},
+{0x58,0x9410625a},
+{0x5c,0xc0230000},
+{0x60,0x031696a9},
+{0x64,0x821061a5},
+{0x68,0xd200254c},
+{0x6c,0x98102500},
+{0x70,0xda00250c},
+{0x74,0x80a3400a},
+{0x78,0x02800005},
+{0x7c,0x96033a50},
+{0xf0,0x27},
+{0x00,0x80a34001},
+{0x04,0x32800009},
+{0x08,0xc0230000},
+{0x0c,0x80a2e05f},
+{0x10,0x28800007},
+{0x14,0x98032004},
+{0x18,0x80a3250c},
+{0x1c,0x22800004},
+{0x20,0x98032004},
+{0x24,0xc0230000},
+{0x28,0x98032004},
+{0x2c,0x80a3273f},
+{0x30,0x28bffff1},
+{0x34,0xda00250c},
+{0x38,0x80a22000},
+{0x3c,0x16800014},
+{0x40,0x98102740},
+{0x44,0x1b296956},
+{0x48,0xc200250c},
+{0x4c,0x9a13625a},
+{0x50,0x80a0400d},
+{0x54,0x033fc180},
+{0x58,0x8210603c},
+{0x5c,0x12800004},
+{0x60,0xc0204000},
+{0x64,0x10800007},
+{0x68,0xc0202748},
+{0x6c,0xc0230000},
+{0x70,0x98032004},
+{0x74,0x80a327bf},
+{0x78,0x28bffffe},
+{0x7c,0xc0230000},
+{0xf0,0x28},
+{0x00,0x80a22000},
+{0x04,0x06800007},
+{0x08,0x033fc200},
+{0x0c,0x0300003f},
+{0x10,0x82106380},
+{0x14,0x820a4001},
+{0x18,0xc220254c},
+{0x1c,0x033fc200},
+{0x20,0x82106030},
+{0x24,0xd6004000},
+{0x28,0x03296956},
+{0x2c,0x8210625a},
+{0x30,0xd800250c},
+{0x34,0xda00254c},
+{0x38,0x80a30001},
+{0x3c,0x9a136010},
+{0x40,0x82102010},
+{0x44,0xc2202574},
+{0x48,0xda20254c},
+{0x4c,0x12800018},
+{0x50,0xd620257c},
+{0x54,0x82102015},
+{0x58,0xc2202500},
+{0x5c,0x94102000},
+{0x60,0x92102000},
+{0x64,0x832aa002},
+{0x68,0xd00063a4},
+{0x6c,0x96102000},
+{0x70,0x980265b0},
+{0x74,0x9b2ae002},
+{0x78,0xc2030000},
+{0x7c,0x9602e001},
+{0xf0,0x29},
+{0x00,0xc222000d},
+{0x04,0x80a2e005},
+{0x08,0x08bffffb},
+{0x0c,0x98032004},
+{0x10,0x9402a001},
+{0x14,0x80a2a003},
+{0x18,0x08bffff3},
+{0x1c,0x92026018},
+{0x20,0x03000004},
+{0x24,0x81c062cc},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0x9de3bf98},
+{0x3c,0x2f200040},
+{0x40,0x2d3fc200},
+{0x44,0x8215e101},
+{0x48,0xc2258000},
+{0x4c,0x40000c08},
+{0x50,0x90102000},
+{0x54,0x213fc140},
+{0x58,0xda00247c},
+{0x5c,0x98142040},
+{0x60,0xea030000},
+{0x64,0xc20022f8},
+{0x68,0x9b336001},
+{0x6c,0x825b4001},
+{0x70,0xaa0d7c00},
+{0x74,0xaa154001},
+{0x78,0xea230000},
+{0x7c,0x82142004},
+{0xf0,0x2a},
+{0x00,0xea004000},
+{0x04,0xaa0d7ff0},
+{0x08,0xaa15400d},
+{0x0c,0xea204000},
+{0x10,0x8215a080},
+{0x14,0xea004000},
+{0x18,0xaa0d7ff0},
+{0x1c,0xaa15400d},
+{0x20,0xea204000},
+{0x24,0xc2002298},
+{0x28,0x9a15a070},
+{0x2c,0xc2234000},
+{0x30,0x033fc000},
+{0x34,0xda002338},
+{0x38,0x82106030},
+{0x3c,0xda204000},
+{0x40,0x0300003f},
+{0x44,0xa2142058},
+{0x48,0x821063ff},
+{0x4c,0x17000015},
+{0x50,0xc2244000},
+{0x54,0x9612e180},
+{0x58,0x94142088},
+{0x5c,0x19000016},
+{0x60,0xd6228000},
+{0x64,0x98132058},
+{0x68,0x9214208c},
+{0x6c,0xd8224000},
+{0x70,0xc20023f8},
+{0x74,0x9015a00c},
+{0x78,0xc2220000},
+{0x7c,0xc20023fc},
+{0xf0,0x2b},
+{0x00,0x9e15a008},
+{0x04,0xc223c000},
+{0x08,0xa414205c},
+{0x0c,0xc0248000},
+{0x10,0xa6142080},
+{0x14,0xd624c000},
+{0x18,0xa8142084},
+{0x1c,0x7fffff4c},
+{0x20,0xd8250000},
+{0x24,0x9a15a07c},
+{0x28,0xea034000},
+{0x2c,0x033ff000},
+{0x30,0xd0002374},
+{0x34,0xaa2d4001},
+{0x38,0xea234000},
+{0x3c,0x033fc1c0},
+{0x40,0xda002340},
+{0x44,0x82106064},
+{0x48,0xda204000},
+{0x4c,0x0300007f},
+{0x50,0x96142010},
+{0x54,0x821063ff},
+{0x58,0x94142030},
+{0x5c,0x1907ffc0},
+{0x60,0xc222c000},
+{0x64,0xa0142014},
+{0x68,0xd8228000},
+{0x6c,0x80a22000},
+{0x70,0x0280000f},
+{0x74,0xd8240000},
+{0x78,0x932a2010},
+{0x7c,0x82022001},
+{0xf0,0x2c},
+{0x00,0x9b2a2004},
+{0x04,0x83286010},
+{0x08,0x9a02400d},
+{0x0c,0x9815a084},
+{0x10,0xda230000},
+{0x14,0x82004008},
+{0x18,0x9615a088},
+{0x1c,0x82006002},
+{0x20,0x9415a08c},
+{0x24,0xd222c000},
+{0x28,0xc2228000},
+{0x2c,0x9a15a030},
+{0x30,0xc2002344},
+{0x34,0xc2234000},
+{0x38,0x7fffff42},
+{0x3c,0x90103fff},
+{0x40,0x7fffff2f},
+{0x44,0x90102001},
+{0x48,0x033fc0c0},
+{0x4c,0x9a103fff},
+{0x50,0x82106004},
+{0x54,0xda204000},
+{0x58,0xee258000},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x03169696},
+{0x68,0xd8002180},
+{0x6c,0x8210625a},
+{0x70,0x80a30001},
+{0x74,0x96102000},
+{0x78,0x12800007},
+{0x7c,0x9a102000},
+{0xf0,0x2d},
+{0x00,0x033fc180},
+{0x04,0x82106030},
+{0x08,0xd8204000},
+{0x0c,0x1080001c},
+{0x10,0x90102001},
+{0x14,0xc2034000},
+{0x18,0x9a036004},
+{0x1c,0x80a364ff},
+{0x20,0x08bffffd},
+{0x24,0x9602c001},
+{0x28,0x03000014},
+{0x2c,0x82106274},
+{0x30,0x82087f80},
+{0x34,0x9a102d00},
+{0x38,0x80a34001},
+{0x3c,0x3a800009},
+{0x40,0x03169696},
+{0x44,0x98100001},
+{0x48,0xc2034000},
+{0x4c,0x9a036004},
+{0x50,0x80a3400c},
+{0x54,0x0abffffd},
+{0x58,0x9602c001},
+{0x5c,0x03169696},
+{0x60,0x8210625a},
+{0x64,0x821ac001},
+{0x68,0x80a00001},
+{0x6c,0x033fc180},
+{0x70,0x82106030},
+{0x74,0xd6204000},
+{0x78,0x90603fff},
+{0x7c,0x81c3e008},
+{0xf0,0x2e},
+{0x00,0x01000000},
+{0x04,0x9de3be98},
+{0x08,0xb2067fff},
+{0x0c,0x96100018},
+{0x10,0xf227befc},
+{0x14,0xc027bef8},
+{0x18,0x98102000},
+{0x1c,0xb007bff8},
+{0x20,0xd4063f00},
+{0x24,0xda063f04},
+{0x28,0xb810000a},
+{0x2c,0x98033fff},
+{0x30,0xb0063ff8},
+{0x34,0x80a2800d},
+{0x38,0x16800031},
+{0x3c,0xb610000d},
+{0x40,0xbb2aa002},
+{0x44,0x832b6002},
+{0x48,0xb207400b},
+{0x4c,0xb400400b},
+{0x50,0xde02c01d},
+{0x54,0x80a7001b},
+{0x58,0x1680001c},
+{0x5c,0x01000000},
+{0x60,0xc2068000},
+{0x64,0x80a0400f},
+{0x68,0x04800005},
+{0x6c,0x80a7001b},
+{0x70,0xb606ffff},
+{0x74,0x10bffff8},
+{0x78,0xb406bffc},
+{0x7c,0x16800013},
+{0xf0,0x2f},
+{0x00,0x80a7001b},
+{0x04,0xc2068000},
+{0x08,0xc2264000},
+{0x0c,0xb8072001},
+{0x10,0x80a7001b},
+{0x14,0x1680000d},
+{0x18,0xb2066004},
+{0x1c,0xc2064000},
+{0x20,0x80a0400f},
+{0x24,0x26bffffb},
+{0x28,0xb8072001},
+{0x2c,0x80a7001b},
+{0x30,0x16800006},
+{0x34,0x01000000},
+{0x38,0xc2268000},
+{0x3c,0xb606ffff},
+{0x40,0xb406bffc},
+{0x44,0x80a7001b},
+{0x48,0x12bfffe4},
+{0x4c,0x80a7001b},
+{0x50,0xb0062008},
+{0x54,0x82073fff},
+{0x58,0xc2263f04},
+{0x5c,0xd4263f00},
+{0x60,0x832f2002},
+{0x64,0xb0062008},
+{0x68,0xde22c001},
+{0x6c,0xba072001},
+{0x70,0xfa263f00},
+{0x74,0xda263f04},
+{0x78,0x98032002},
+{0x7c,0x80a33fff},
+{0xf0,0x30},
+{0x00,0x34bfffc9},
+{0x04,0xd4063f00},
+{0x08,0x81c7e008},
+{0x0c,0x81e80000},
+{0x10,0x033fc140},
+{0x14,0x82106048},
+{0x18,0xda004000},
+{0x1c,0x03000040},
+{0x20,0x808b4001},
+{0x24,0x03000015},
+{0x28,0x12800004},
+{0x2c,0x90106180},
+{0x30,0x82006400},
+{0x34,0x90106058},
+{0x38,0x81c3e008},
+{0x3c,0x01000000},
+{0x40,0x9de3bf30},
+{0x44,0xa12e2002},
+{0x48,0xda1423da},
+{0x4c,0xd61423d8},
+{0x50,0xc200247c},
+{0x54,0xb022c00d},
+{0x58,0x825b4001},
+{0x5c,0x92862001},
+{0x60,0x0280000c},
+{0x64,0x9a004019},
+{0x68,0xb0100009},
+{0x6c,0x9807bf90},
+{0x70,0x8203400d},
+{0x74,0xc2168001},
+{0x78,0xc2230000},
+{0x7c,0xc200247c},
+{0xf0,0x31},
+{0x00,0x9a034001},
+{0x04,0xb0863fff},
+{0x08,0x12bffffa},
+{0x0c,0x98032004},
+{0x10,0x7fffff9d},
+{0x14,0x9007bf90},
+{0x18,0xda1423ea},
+{0x1c,0xd61423e8},
+{0x20,0x80a3400b},
+{0x24,0x92102000},
+{0x28,0x1880000b},
+{0x2c,0xb010000d},
+{0x30,0x832b6002},
+{0x34,0x8200401e},
+{0x38,0x98007f90},
+{0x3c,0xc2030000},
+{0x40,0xb0062001},
+{0x44,0x92024001},
+{0x48,0x80a6000b},
+{0x4c,0x08bffffc},
+{0x50,0x98032004},
+{0x54,0xb022c00d},
+{0x58,0xb0062001},
+{0x5c,0x81800000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0xb0724018},
+{0x70,0x81c7e008},
+{0x74,0x81e80000},
+{0x78,0x9de3bf98},
+{0x7c,0xda002310},
+{0xf0,0x32},
+{0x00,0x80a36000},
+{0x04,0x02800056},
+{0x08,0xb0102000},
+{0x0c,0xc200254c},
+{0x10,0x80886100},
+{0x14,0x22800003},
+{0x18,0xc2002594},
+{0x1c,0x30800050},
+{0x20,0x82006001},
+{0x24,0x80a0400d},
+{0x28,0xc2202594},
+{0x2c,0x0a80004c},
+{0x30,0xb0102000},
+{0x34,0xa2102000},
+{0x38,0xc20023d4},
+{0x3c,0x80a44001},
+{0x40,0xc0202594},
+{0x44,0xa0102000},
+{0x48,0x1a800027},
+{0x4c,0xa52c2002},
+{0x50,0xc204a364},
+{0x54,0x80a06000},
+{0x58,0x0280001f},
+{0x5c,0xb0102000},
+{0x60,0xc20022fc},
+{0x64,0x80a60001},
+{0x68,0x1a80001b},
+{0x6c,0x15000017},
+{0x70,0xc200254c},
+{0x74,0x80886020},
+{0x78,0xc20e2380},
+{0x7c,0x9412a208},
+{0xf0,0x33},
+{0x00,0x90100010},
+{0x04,0x12800006},
+{0x08,0x920860ff},
+{0x0c,0x15000016},
+{0x10,0x920860ff},
+{0x14,0x9412a330},
+{0x18,0x90100010},
+{0x1c,0x7fffffa9},
+{0x20,0xb0062001},
+{0x24,0xc204a364},
+{0x28,0xda002348},
+{0x2c,0x98020001},
+{0x30,0x82034001},
+{0x34,0x80a20001},
+{0x38,0x38bfffea},
+{0x3c,0xa2046001},
+{0x40,0x80a3000d},
+{0x44,0x3abfffe8},
+{0x48,0xc20022fc},
+{0x4c,0x10bfffe5},
+{0x50,0xa2046001},
+{0x54,0xa0042001},
+{0x58,0xc20023d4},
+{0x5c,0x10bfffdb},
+{0x60,0x80a40001},
+{0x64,0xd800258c},
+{0x68,0x80a0000c},
+{0x6c,0x9a603fff},
+{0x70,0x80a00011},
+{0x74,0x82603fff},
+{0x78,0x808b4001},
+{0x7c,0x0280000a},
+{0xf0,0x34},
+{0x00,0x80a46000},
+{0x04,0xda00254c},
+{0x08,0x83336005},
+{0x0c,0x82086001},
+{0x10,0x82186001},
+{0x14,0x83286005},
+{0x18,0x9a0b7fdf},
+{0x1c,0x9a134001},
+{0x20,0xda20254c},
+{0x24,0x12800004},
+{0x28,0x82032001},
+{0x2c,0x10800003},
+{0x30,0xc020258c},
+{0x34,0xc220258c},
+{0x38,0xc200258c},
+{0x3c,0x80a06002},
+{0x40,0x08800007},
+{0x44,0xb0102000},
+{0x48,0xc200254c},
+{0x4c,0x1b000040},
+{0x50,0x8210400d},
+{0x54,0xc220254c},
+{0x58,0xb0102001},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0x9de3bf58},
+{0x68,0xc200254c},
+{0x6c,0x8330600b},
+{0x70,0x82086001},
+{0x74,0x80a00001},
+{0x78,0x9e603fff},
+{0x7c,0x8207bfb8},
+{0xf0,0x35},
+{0x00,0xb610200f},
+{0x04,0xc0204000},
+{0x08,0xb686ffff},
+{0x0c,0x1cbffffe},
+{0x10,0x82006004},
+{0x14,0xb2102001},
+{0x18,0xc2002300},
+{0x1c,0x80a64001},
+{0x20,0x1880003e},
+{0x24,0xb4102001},
+{0x28,0xc2002308},
+{0x2c,0x80a68001},
+{0x30,0x18800038},
+{0x34,0x03000018},
+{0x38,0x981060e0},
+{0x3c,0x8203c00f},
+{0x40,0xfa506210},
+{0x44,0x80a76000},
+{0x48,0x2280002e},
+{0x4c,0xb406a001},
+{0x50,0x832e6004},
+{0x54,0x8200401a},
+{0x58,0x83286002},
+{0x5c,0xc200400c},
+{0x60,0x80a0401d},
+{0x64,0x36800027},
+{0x68,0xb406a001},
+{0x6c,0xbb2e6010},
+{0x70,0x832ea018},
+{0x74,0x8200401d},
+{0x78,0xb0006001},
+{0x7c,0xb6102000},
+{0xf0,0x36},
+{0x00,0x9a102001},
+{0x04,0xba07bfb8},
+{0x08,0xb92ee002},
+{0x0c,0xc20f2700},
+{0x10,0x80a68001},
+{0x14,0x12800011},
+{0x18,0xb606e001},
+{0x1c,0xc20f2701},
+{0x20,0x80a64001},
+{0x24,0x3280000e},
+{0x28,0xc2172700},
+{0x2c,0xda274000},
+{0x30,0x0300003f},
+{0x34,0xfa172702},
+{0x38,0x821063ff},
+{0x3c,0x80a74001},
+{0x40,0x22800010},
+{0x44,0xb406a001},
+{0x48,0xc2072700},
+{0x4c,0x82006001},
+{0x50,0x1080000b},
+{0x54,0xc2272700},
+{0x58,0xc2172700},
+{0x5c,0x80a06000},
+{0x60,0x12800005},
+{0x64,0x80a6e00f},
+{0x68,0xda274000},
+{0x6c,0x10800004},
+{0x70,0xf0272700},
+{0x74,0x08bfffe5},
+{0x78,0xba076004},
+{0x7c,0xb406a001},
+{0xf0,0x37},
+{0x00,0xc2002308},
+{0x04,0x80a68001},
+{0x08,0x08bfffce},
+{0x0c,0x8203c00f},
+{0x10,0x10bfffc2},
+{0x14,0xb2066001},
+{0x18,0xfa002500},
+{0x1c,0xc20021f4},
+{0x20,0x80a74001},
+{0x24,0x1880001d},
+{0x28,0xb0102000},
+{0x2c,0xb4102000},
+{0x30,0xb6102000},
+{0x34,0xb807bff8},
+{0x38,0xbb2ee002},
+{0x3c,0x8207401c},
+{0x40,0xc2007fc0},
+{0x44,0x80a06000},
+{0x48,0x32800004},
+{0x4c,0xfa176702},
+{0x50,0x10800005},
+{0x54,0xc0276700},
+{0x58,0xc20be3cc},
+{0x5c,0x80a74001},
+{0x60,0xb466bfff},
+{0x64,0xb606e001},
+{0x68,0x80a6e00f},
+{0x6c,0x08bffff4},
+{0x70,0xbb2ee002},
+{0x74,0xc20be3ce},
+{0x78,0x80a68001},
+{0x7c,0x08800007},
+{0xf0,0x38},
+{0x00,0xb0102000},
+{0x04,0xc200254c},
+{0x08,0x3b000200},
+{0x0c,0x8210401d},
+{0x10,0xc220254c},
+{0x14,0xb0102001},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0xf4002200},
+{0x28,0x80a6a000},
+{0x2c,0x12800007},
+{0x30,0x9e102001},
+{0x34,0xc200254c},
+{0x38,0x82087ffb},
+{0x3c,0xc220254c},
+{0x40,0x10800043},
+{0x44,0xc0202588},
+{0x48,0x80a3c01a},
+{0x4c,0x1880001c},
+{0x50,0xc0202504},
+{0x54,0x03000018},
+{0x58,0x821060e0},
+{0x5c,0xb0006040},
+{0x60,0xda002308},
+{0x64,0xb6102001},
+{0x68,0x80a6c00d},
+{0x6c,0x38800011},
+{0x70,0x9e03e001},
+{0x74,0xf2002238},
+{0x78,0xba062004},
+{0x7c,0xc2074000},
+{0xf0,0x39},
+{0x00,0xb606e001},
+{0x04,0xba076004},
+{0x08,0x80a04019},
+{0x0c,0x04800005},
+{0x10,0xb8204019},
+{0x14,0xc2002504},
+{0x18,0x8200401c},
+{0x1c,0xc2202504},
+{0x20,0x80a6c00d},
+{0x24,0x28bffff7},
+{0x28,0xc2074000},
+{0x2c,0x9e03e001},
+{0x30,0x80a3c01a},
+{0x34,0x08bfffec},
+{0x38,0xb0062040},
+{0x3c,0xf800254c},
+{0x40,0x808f2008},
+{0x44,0x12800008},
+{0x48,0xfa002504},
+{0x4c,0xc200223c},
+{0x50,0x80a74001},
+{0x54,0x34800009},
+{0x58,0xc2002588},
+{0x5c,0x10800009},
+{0x60,0xc0202588},
+{0x64,0xc200223c},
+{0x68,0x80a74001},
+{0x6c,0x34800005},
+{0x70,0xc0202588},
+{0x74,0xc2002588},
+{0x78,0x82006001},
+{0x7c,0xc2202588},
+{0xf0,0x3a},
+{0x00,0xfa002588},
+{0x04,0xc2002290},
+{0x08,0x80a74001},
+{0x0c,0x2880000b},
+{0x10,0xfa00254c},
+{0x14,0x83372003},
+{0x18,0x82086001},
+{0x1c,0x82186001},
+{0x20,0x83286002},
+{0x24,0xba0f3ffb},
+{0x28,0xba174001},
+{0x2c,0xfa20254c},
+{0x30,0xc0202588},
+{0x34,0xfa00254c},
+{0x38,0xbb376002},
+{0x3c,0x033fc180},
+{0x40,0xba0f6001},
+{0x44,0x8210602c},
+{0x48,0xfa204000},
+{0x4c,0x81c7e008},
+{0x50,0x81e80000},
+{0x54,0x9de3bf98},
+{0x58,0xfa5023c6},
+{0x5c,0x80a76000},
+{0x60,0x0280003d},
+{0x64,0x9e102001},
+{0x68,0xc20022fc},
+{0x6c,0x80a3c001},
+{0x70,0x18800039},
+{0x74,0x17000018},
+{0x78,0x8212e0e0},
+{0x7c,0x9810001d},
+{0xf0,0x3b},
+{0x00,0x9a006004},
+{0x04,0xb6102001},
+{0x08,0xf20022f8},
+{0x0c,0x80a6c019},
+{0x10,0xb4102000},
+{0x14,0x1880002b},
+{0x18,0x82102000},
+{0x1c,0xf05023c4},
+{0x20,0xba036040},
+{0x24,0xf8074000},
+{0x28,0xb606e001},
+{0x2c,0x80a70018},
+{0x30,0x06800004},
+{0x34,0xba076040},
+{0x38,0xb406801c},
+{0x3c,0x82006001},
+{0x40,0x80a6c019},
+{0x44,0x28bffff9},
+{0x48,0xf8074000},
+{0x4c,0x80a06000},
+{0x50,0x2280001d},
+{0x54,0x9e03e001},
+{0x58,0x953ea01f},
+{0x5c,0x8182a000},
+{0x60,0x01000000},
+{0x64,0x01000000},
+{0x68,0x01000000},
+{0x6c,0x827e8001},
+{0x70,0x8258400c},
+{0x74,0xbb38601f},
+{0x78,0xbb376016},
+{0x7c,0x8200401d},
+{0xf0,0x3c},
+{0x00,0xb6102001},
+{0x04,0xfa0022f8},
+{0x08,0x80a6c01d},
+{0x0c,0x1880000d},
+{0x10,0xb538600a},
+{0x14,0x832be002},
+{0x18,0xba006040},
+{0x1c,0xb812e0e0},
+{0x20,0xc207401c},
+{0x24,0x8220401a},
+{0x28,0xc227401c},
+{0x2c,0xb606e001},
+{0x30,0xc20022f8},
+{0x34,0x80a6c001},
+{0x38,0x08bffffa},
+{0x3c,0xba076040},
+{0x40,0x9e03e001},
+{0x44,0xc20022fc},
+{0x48,0x80a3c001},
+{0x4c,0x08bfffce},
+{0x50,0x9a036004},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x9de3bf30},
+{0x60,0xe2502458},
+{0x64,0x80a46000},
+{0x68,0x02800058},
+{0x6c,0x01000000},
+{0x70,0xc20022f8},
+{0x74,0x80a44001},
+{0x78,0x1a800054},
+{0x7c,0xa0102001},
+{0xf0,0x3d},
+{0x00,0xc20022fc},
+{0x04,0x80a40001},
+{0x08,0x18800050},
+{0x0c,0xe450245a},
+{0x10,0x96102001},
+{0x14,0xc20022f8},
+{0x18,0x80a2c001},
+{0x1c,0x1880000f},
+{0x20,0x03000018},
+{0x24,0x9b2c2002},
+{0x28,0x821060e0},
+{0x2c,0x9a034001},
+{0x30,0x9a036040},
+{0x34,0x9807bf90},
+{0x38,0xc2034000},
+{0x3c,0xc2230000},
+{0x40,0x9602e001},
+{0x44,0xc20022f8},
+{0x48,0x80a2c001},
+{0x4c,0x9a036040},
+{0x50,0x08bffffa},
+{0x54,0x98032004},
+{0x58,0x9007bf90},
+{0x5c,0x7ffffe0a},
+{0x60,0xd20022f8},
+{0x64,0x96100012},
+{0x68,0x80a48011},
+{0x6c,0x1480000b},
+{0x70,0x94102000},
+{0x74,0x832ca002},
+{0x78,0x8200401e},
+{0x7c,0x9a007f90},
+{0xf0,0x3e},
+{0x00,0xc2034000},
+{0x04,0x9602e001},
+{0x08,0x94028001},
+{0x0c,0x80a2c011},
+{0x10,0x04bffffc},
+{0x14,0x9a036004},
+{0x18,0x82244012},
+{0x1c,0x82006001},
+{0x20,0x9b3aa01f},
+{0x24,0x81836000},
+{0x28,0x01000000},
+{0x2c,0x01000000},
+{0x30,0x01000000},
+{0x34,0x947a8001},
+{0x38,0xc25021ac},
+{0x3c,0x80a28001},
+{0x40,0x26800002},
+{0x44,0x94100001},
+{0x48,0x96102001},
+{0x4c,0xc20022f8},
+{0x50,0x80a2c001},
+{0x54,0x18800018},
+{0x58,0x9b2c2002},
+{0x5c,0x03000018},
+{0x60,0x921060e0},
+{0x64,0x98036040},
+{0x68,0xc2030009},
+{0x6c,0x9a20400a},
+{0x70,0xda230009},
+{0x74,0xc20023c8},
+{0x78,0x83306012},
+{0x7c,0x80886001},
+{0xf0,0x3f},
+{0x00,0x02800009},
+{0x04,0x9602e001},
+{0x08,0xc20c22af},
+{0x0c,0x825b4001},
+{0x10,0x9b38601f},
+{0x14,0x9b336019},
+{0x18,0x8200400d},
+{0x1c,0x83386007},
+{0x20,0xc2230009},
+{0x24,0xc20022f8},
+{0x28,0x80a2c001},
+{0x2c,0x08bfffef},
+{0x30,0x98032040},
+{0x34,0xa0042001},
+{0x38,0xc20022fc},
+{0x3c,0x80a40001},
+{0x40,0x08bfffb5},
+{0x44,0x96102001},
+{0x48,0x81c7e008},
+{0x4c,0x81e80000},
+{0x50,0x9de3bf60},
+{0x54,0x1b00003f},
+{0x58,0xc2002350},
+{0x5c,0x9a1363ff},
+{0x60,0xac08400d},
+{0x64,0xa2102001},
+{0x68,0xda002300},
+{0x6c,0x80a4400d},
+{0x70,0xa5306010},
+{0x74,0x18800055},
+{0x78,0xaa102000},
+{0x7c,0xa8102000},
+{0xf0,0x40},
+{0x00,0xa6102000},
+{0x04,0x80a4a000},
+{0x08,0x0280002d},
+{0x0c,0xa0102000},
+{0x10,0x03000018},
+{0x14,0x941060e0},
+{0x18,0x92102000},
+{0x1c,0x972c6004},
+{0x20,0x9807bfc0},
+{0x24,0x8204c009},
+{0x28,0xda086440},
+{0x2c,0x8202c00d},
+{0x30,0x80a36000},
+{0x34,0x02800008},
+{0x38,0x83286002},
+{0x3c,0xc200400a},
+{0x40,0xc2230000},
+{0x44,0x92026001},
+{0x48,0x80a2600b},
+{0x4c,0x04bffff6},
+{0x50,0x98032004},
+{0x54,0x7ffffdac},
+{0x58,0x9007bfc0},
+{0x5c,0x80a58012},
+{0x60,0x1480000b},
+{0x64,0x92100016},
+{0x68,0x832da002},
+{0x6c,0x8200401e},
+{0x70,0x9a007fc0},
+{0x74,0xc2034000},
+{0x78,0x92026001},
+{0x7c,0xa0040001},
+{0xf0,0x41},
+{0x00,0x80a24012},
+{0x04,0x04bffffc},
+{0x08,0x9a036004},
+{0x0c,0x82248016},
+{0x10,0x82006001},
+{0x14,0x9b3c201f},
+{0x18,0x81836000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x01000000},
+{0x28,0xa07c0001},
+{0x2c,0xc25021ae},
+{0x30,0x80a40001},
+{0x34,0x26800002},
+{0x38,0xa0100001},
+{0x3c,0x92102000},
+{0x40,0x952c6004},
+{0x44,0x1f000018},
+{0x48,0x82050009},
+{0x4c,0xda086440},
+{0x50,0x8202800d},
+{0x54,0x92026001},
+{0x58,0x9013e0e0},
+{0x5c,0x80a36000},
+{0x60,0x02800011},
+{0x64,0x97286002},
+{0x68,0xc20023c8},
+{0x6c,0x83306011},
+{0x70,0xda02c008},
+{0x74,0x80886001},
+{0x78,0x02800008},
+{0x7c,0x98234010},
+{0xf0,0x42},
+{0x00,0xda0c62af},
+{0x04,0x9a5b000d},
+{0x08,0x833b601f},
+{0x0c,0x83306019},
+{0x10,0x9a034001},
+{0x14,0x993b6007},
+{0x18,0x80a2600b},
+{0x1c,0x04bfffeb},
+{0x20,0xd822c008},
+{0x24,0xaa056001},
+{0x28,0xa604e00c},
+{0x2c,0x80a56001},
+{0x30,0x04bfffb5},
+{0x34,0xa805200c},
+{0x38,0xa2046001},
+{0x3c,0xc2002300},
+{0x40,0x10bfffad},
+{0x44,0x80a44001},
+{0x48,0xc2082247},
+{0x4c,0x80a06000},
+{0x50,0x02800036},
+{0x54,0x01000000},
+{0x58,0xc20022f8},
+{0x5c,0x80a44001},
+{0x60,0x18800032},
+{0x64,0x92102001},
+{0x68,0xc20022fc},
+{0x6c,0x80a24001},
+{0x70,0x1880000f},
+{0x74,0x03000018},
+{0x78,0x9b2c6006},
+{0x7c,0x821060e0},
+{0xf0,0x43},
+{0x00,0x9a034001},
+{0x04,0x9a036004},
+{0x08,0x9807bfc0},
+{0x0c,0xc2034000},
+{0x10,0xc2230000},
+{0x14,0x92026001},
+{0x18,0xc20022fc},
+{0x1c,0x80a24001},
+{0x20,0x9a036004},
+{0x24,0x08bffffa},
+{0x28,0x98032004},
+{0x2c,0x9007bfc0},
+{0x30,0x7ffffd55},
+{0x34,0xd20022fc},
+{0x38,0xc2082247},
+{0x3c,0x83286002},
+{0x40,0x8200401e},
+{0x44,0xd8007fc0},
+{0x48,0x80a32000},
+{0x4c,0x26800013},
+{0x50,0xa2046001},
+{0x54,0x92102001},
+{0x58,0xc20022fc},
+{0x5c,0x80a24001},
+{0x60,0x1880000d},
+{0x64,0x03000018},
+{0x68,0x9b2c6006},
+{0x6c,0x961060e0},
+{0x70,0x9a036004},
+{0x74,0xc203400b},
+{0x78,0x8220400c},
+{0x7c,0xc223400b},
+{0xf0,0x44},
+{0x00,0x92026001},
+{0x04,0xc20022fc},
+{0x08,0x80a24001},
+{0x0c,0x08bffffa},
+{0x10,0x9a036004},
+{0x14,0xa2046001},
+{0x18,0xc20022f8},
+{0x1c,0x80a44001},
+{0x20,0x08bfffd2},
+{0x24,0x92102001},
+{0x28,0x81c7e008},
+{0x2c,0x81e80000},
+{0x30,0x9de3bf98},
+{0x34,0xd0002214},
+{0x38,0x80a22000},
+{0x3c,0x02800072},
+{0x40,0x98102001},
+{0x44,0xc20022f8},
+{0x48,0x80a30001},
+{0x4c,0x1880006e},
+{0x50,0xb6102001},
+{0x54,0xfa0022fc},
+{0x58,0x80a6c01d},
+{0x5c,0x38800066},
+{0x60,0x98032001},
+{0x64,0x17000018},
+{0x68,0x952b2004},
+{0x6c,0xa212e0e4},
+{0x70,0x8202801b},
+{0x74,0xb9286002},
+{0x78,0x8212e0e0},
+{0x7c,0xf4070001},
+{0xf0,0x45},
+{0x00,0x80a68008},
+{0x04,0x24800057},
+{0x08,0xb606e001},
+{0x0c,0x8212e0dc},
+{0x10,0xc2070001},
+{0x14,0x80a68001},
+{0x18,0x26800052},
+{0x1c,0xb606e001},
+{0x20,0xc2070011},
+{0x24,0x80a68001},
+{0x28,0x2480004e},
+{0x2c,0xb606e001},
+{0x30,0xc20023c8},
+{0x34,0x80886040},
+{0x38,0x0280000a},
+{0x3c,0x9206e001},
+{0x40,0x83376001},
+{0x44,0x80a6c001},
+{0x48,0x28800007},
+{0x4c,0x9a102000},
+{0x50,0x8227401b},
+{0x54,0xb6006001},
+{0x58,0x10800003},
+{0x5c,0x9a102001},
+{0x60,0x9a102000},
+{0x64,0xfa00221c},
+{0x68,0xc2002220},
+{0x6c,0xba5f401b},
+{0x70,0xba074001},
+{0x74,0xba5e801d},
+{0x78,0x833f601f},
+{0x7c,0x83306016},
+{0xf0,0x46},
+{0x00,0xba074001},
+{0x04,0xc2002224},
+{0x08,0x8258401b},
+{0x0c,0xbb3f600a},
+{0x10,0xba074001},
+{0x14,0xc2002240},
+{0x18,0x9e074001},
+{0x1c,0xc2002218},
+{0x20,0xb806c001},
+{0x24,0x21000018},
+{0x28,0xc20023c8},
+{0x2c,0x80886040},
+{0x30,0x0280000e},
+{0x34,0xb01420e0},
+{0x38,0xfa0022fc},
+{0x3c,0x82076001},
+{0x40,0x83306001},
+{0x44,0x80a70001},
+{0x48,0x18800024},
+{0x4c,0xbb376001},
+{0x50,0x80a36000},
+{0x54,0x32800006},
+{0x58,0xc20022fc},
+{0x5c,0x80a7001d},
+{0x60,0x1880001f},
+{0x64,0xb6100009},
+{0x68,0xc20022fc},
+{0x6c,0xba20401c},
+{0x70,0x80a70001},
+{0x74,0x18800019},
+{0x78,0xba076001},
+{0x7c,0x80a36000},
+{0xf0,0x47},
+{0x00,0x22800002},
+{0x04,0xba10001c},
+{0x08,0x8202801d},
+{0x0c,0xb7286002},
+{0x10,0xc206c018},
+{0x14,0xb220400f},
+{0x18,0xf226c018},
+{0x1c,0xfa002228},
+{0x20,0x8227001d},
+{0x24,0x80a7001d},
+{0x28,0xb45bc001},
+{0x2c,0x04bfffdf},
+{0x30,0xb8072001},
+{0x34,0xc200222c},
+{0x38,0x825e8001},
+{0x3c,0xbb38601f},
+{0x40,0xbb376018},
+{0x44,0x8200401d},
+{0x48,0x83386008},
+{0x4c,0x82264001},
+{0x50,0x10bfffd6},
+{0x54,0xc226c018},
+{0x58,0xb6100009},
+{0x5c,0xb606e001},
+{0x60,0xfa0022fc},
+{0x64,0x80a6c01d},
+{0x68,0x08bfffa3},
+{0x6c,0x8202801b},
+{0x70,0x98032001},
+{0x74,0xc20022f8},
+{0x78,0x80a30001},
+{0x7c,0x08bfff96},
+{0xf0,0x48},
+{0x00,0xb6102001},
+{0x04,0x81c7e008},
+{0x08,0x81e80000},
+{0x0c,0x9de3bf98},
+{0x10,0xd6002214},
+{0x14,0x80a2e000},
+{0x18,0x02800060},
+{0x1c,0x9a102001},
+{0x20,0xc20022fc},
+{0x24,0x80a34001},
+{0x28,0x1880005c},
+{0x2c,0x11000018},
+{0x30,0xb0102001},
+{0x34,0xf60022f8},
+{0x38,0x80a6001b},
+{0x3c,0x18800052},
+{0x40,0x832b6002},
+{0x44,0xb2006040},
+{0x48,0x15000018},
+{0x4c,0x92122120},
+{0x50,0xb412a0e0},
+{0x54,0xf806401a},
+{0x58,0x80a7000b},
+{0x5c,0x24800046},
+{0x60,0xb0062001},
+{0x64,0x8212a0a0},
+{0x68,0xc2064001},
+{0x6c,0x80a70001},
+{0x70,0x26800041},
+{0x74,0xb0062001},
+{0x78,0xc2064009},
+{0x7c,0x80a70001},
+{0xf0,0x49},
+{0x00,0x2480003d},
+{0x04,0xb0062001},
+{0x08,0xfa00221c},
+{0x0c,0xc2002220},
+{0x10,0xba5f4018},
+{0x14,0xba074001},
+{0x18,0xba5f001d},
+{0x1c,0x833f601f},
+{0x20,0x83306016},
+{0x24,0xba074001},
+{0x28,0xc2002224},
+{0x2c,0x82584018},
+{0x30,0xbb3f600a},
+{0x34,0xba074001},
+{0x38,0xc2002218},
+{0x3c,0xb8060001},
+{0x40,0xc2002240},
+{0x44,0x80a7001b},
+{0x48,0x18800028},
+{0x4c,0x98074001},
+{0x50,0x832f2004},
+{0x54,0x8200400d},
+{0x58,0x9e10001a},
+{0x5c,0xb5286002},
+{0x60,0xc206800f},
+{0x64,0x8220400c},
+{0x68,0xc226800f},
+{0x6c,0xfa002228},
+{0x70,0x80a7001d},
+{0x74,0x24800019},
+{0x78,0xb8072001},
+{0x7c,0xc20023c8},
+{0xf0,0x4a},
+{0x00,0x80886080},
+{0x04,0x02800008},
+{0x08,0xb6076001},
+{0x0c,0x80a7001b},
+{0x10,0x32800006},
+{0x14,0x8210001c},
+{0x18,0xc20022f8},
+{0x1c,0x10800003},
+{0x20,0x82006001},
+{0x24,0x8210001c},
+{0x28,0xba20401d},
+{0x2c,0xc200222c},
+{0x30,0xba5b001d},
+{0x34,0xba5f4001},
+{0x38,0x833f601f},
+{0x3c,0x83306018},
+{0x40,0xba074001},
+{0x44,0xc206800f},
+{0x48,0xbb3f6008},
+{0x4c,0x8220401d},
+{0x50,0xc226800f},
+{0x54,0xb8072001},
+{0x58,0xc20022f8},
+{0x5c,0x80a70001},
+{0x60,0x08bfffe0},
+{0x64,0xb406a040},
+{0x68,0xb0062001},
+{0x6c,0xb2066040},
+{0x70,0xb0062001},
+{0x74,0xf60022f8},
+{0x78,0x80a6001b},
+{0x7c,0x08bfffb5},
+{0xf0,0x4b},
+{0x00,0xb2066040},
+{0x04,0x9a036001},
+{0x08,0xc20022fc},
+{0x0c,0x80a34001},
+{0x10,0x08bfffa9},
+{0x14,0xb0102001},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0xc20023d0},
+{0x28,0x80a06000},
+{0x2c,0x0280004f},
+{0x30,0xb6102001},
+{0x34,0xc2002300},
+{0x38,0x80a6c001},
+{0x3c,0x18800025},
+{0x40,0x03000018},
+{0x44,0x9e1060e0},
+{0x48,0xb21060e8},
+{0x4c,0xb01060e4},
+{0x50,0xb41060dc},
+{0x54,0xb92ee006},
+{0x58,0xc24823d2},
+{0x5c,0xfa070018},
+{0x60,0xba5f4001},
+{0x64,0x833f601f},
+{0x68,0x83306019},
+{0x6c,0xba074001},
+{0x70,0xc2070019},
+{0x74,0xbb3f6007},
+{0x78,0x8220401d},
+{0x7c,0xc2270019},
+{0xf0,0x4c},
+{0x00,0xc2002308},
+{0x04,0xb92ee004},
+{0x08,0xb8070001},
+{0x0c,0xb92f2002},
+{0x10,0xc24823d3},
+{0x14,0xfa07000f},
+{0x18,0xba5f4001},
+{0x1c,0x833f601f},
+{0x20,0x83306019},
+{0x24,0xba074001},
+{0x28,0xc207001a},
+{0x2c,0xbb3f6007},
+{0x30,0x8220401d},
+{0x34,0xc227001a},
+{0x38,0xb606e001},
+{0x3c,0xc2002300},
+{0x40,0x80a6c001},
+{0x44,0x08bfffe5},
+{0x48,0xb92ee006},
+{0x4c,0xb6102001},
+{0x50,0xc2002308},
+{0x54,0x80a6c001},
+{0x58,0x18800024},
+{0x5c,0x03000018},
+{0x60,0x9e1060e0},
+{0x64,0xb2106160},
+{0x68,0xb0106120},
+{0x6c,0xb41060a0},
+{0x70,0xb92ee002},
+{0x74,0xc24823d0},
+{0x78,0xfa070018},
+{0x7c,0xba5f4001},
+{0xf0,0x4d},
+{0x00,0x833f601f},
+{0x04,0x83306019},
+{0x08,0xba074001},
+{0x0c,0xc2070019},
+{0x10,0xbb3f6007},
+{0x14,0x8220401d},
+{0x18,0xc2270019},
+{0x1c,0xf8002300},
+{0x20,0xb92f2004},
+{0x24,0xb807001b},
+{0x28,0xb92f2002},
+{0x2c,0xc24823d1},
+{0x30,0xfa07000f},
+{0x34,0xba5f4001},
+{0x38,0x833f601f},
+{0x3c,0x83306019},
+{0x40,0xba074001},
+{0x44,0xc207001a},
+{0x48,0xbb3f6007},
+{0x4c,0x8220401d},
+{0x50,0xc227001a},
+{0x54,0xb606e001},
+{0x58,0xc2002308},
+{0x5c,0x80a6c001},
+{0x60,0x08bfffe5},
+{0x64,0xb92ee002},
+{0x68,0x81c7e008},
+{0x6c,0x81e80000},
+{0x70,0x9de3bf70},
+{0x74,0x92102001},
+{0x78,0xde002300},
+{0x7c,0x80a2400f},
+{0xf0,0x4e},
+{0x00,0x1880001a},
+{0x04,0x90102000},
+{0x08,0x03000018},
+{0x0c,0x821060e0},
+{0x10,0x82006040},
+{0x14,0xd6002308},
+{0x18,0x94102001},
+{0x1c,0x80a2800b},
+{0x20,0x3880000f},
+{0x24,0x92026001},
+{0x28,0x9a006004},
+{0x2c,0xd8034000},
+{0x30,0x80a30008},
+{0x34,0x04800005},
+{0x38,0x9a036004},
+{0x3c,0x9010000c},
+{0x40,0xa0100009},
+{0x44,0xa410000a},
+{0x48,0x9402a001},
+{0x4c,0x80a2800b},
+{0x50,0x28bffff8},
+{0x54,0xd8034000},
+{0x58,0x92026001},
+{0x5c,0x80a2400f},
+{0x60,0x08bfffee},
+{0x64,0x82006040},
+{0x68,0xa2042001},
+{0x6c,0x92043fff},
+{0x70,0x80a24011},
+{0x74,0x1480002c},
+{0x78,0x90102000},
+{0x7c,0x03000018},
+{0xf0,0x4f},
+{0x00,0xa01060e0},
+{0x04,0x9e04a001},
+{0x08,0x9404bfff},
+{0x0c,0x80a2800f},
+{0x10,0x14800021},
+{0x14,0x832a6004},
+{0x18,0x8200400a},
+{0x1c,0x9b2a2002},
+{0x20,0x83286002},
+{0x24,0x9a03401e},
+{0x28,0x96004010},
+{0x2c,0x9a037fd0},
+{0x30,0x833aa01f},
+{0x34,0x8220400a},
+{0x38,0x80a26000},
+{0x3c,0x0480000f},
+{0x40,0x9930601f},
+{0x44,0xc2002300},
+{0x48,0x80a04009},
+{0x4c,0x82603fff},
+{0x50,0x8088400c},
+{0x54,0x2280000a},
+{0x58,0xc0234000},
+{0x5c,0xc2002308},
+{0x60,0x80a28001},
+{0x64,0x38800006},
+{0x68,0xc0234000},
+{0x6c,0xc202c000},
+{0x70,0x10800003},
+{0x74,0xc2234000},
+{0x78,0xc0234000},
+{0x7c,0x9402a001},
+{0xf0,0x50},
+{0x00,0x90022001},
+{0x04,0x9a036004},
+{0x08,0x80a2800f},
+{0x0c,0x04bfffe9},
+{0x10,0x9602e004},
+{0x14,0x92026001},
+{0x18,0x80a24011},
+{0x1c,0x04bfffdc},
+{0x20,0x9404bfff},
+{0x24,0x92102009},
+{0x28,0x7ffffbb7},
+{0x2c,0x9007bfd0},
+{0x30,0xc207bfec},
+{0x34,0xd807bfe8},
+{0x38,0x98030001},
+{0x3c,0xc207bff0},
+{0x40,0x98030001},
+{0x44,0xda082347},
+{0x48,0x9a036001},
+{0x4c,0xc200256c},
+{0x50,0x8258400d},
+{0x54,0xd608257f},
+{0x58,0x9602e001},
+{0x5c,0x9b33201f},
+{0x60,0x9803000d},
+{0x64,0x81800000},
+{0x68,0x01000000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x8270400b},
+{0x78,0xc220256c},
+{0x7c,0x993b2001},
+{0xf0,0x51},
+{0x00,0x94102000},
+{0x04,0x92102c18},
+{0x08,0x972aa002},
+{0x0c,0xc212e3b4},
+{0x10,0x825b0001},
+{0x14,0x9b38601f},
+{0x18,0x9b336018},
+{0x1c,0x8200400d},
+{0x20,0xda12e3b6},
+{0x24,0x83386008},
+{0x28,0x8200400d},
+{0x2c,0xda00256c},
+{0x30,0x8258400d},
+{0x34,0x83306007},
+{0x38,0x9402a001},
+{0x3c,0x80a06c18},
+{0x40,0x04800003},
+{0x44,0xc222e520},
+{0x48,0xd222e520},
+{0x4c,0x80a2a003},
+{0x50,0x04bfffef},
+{0x54,0x972aa002},
+{0x58,0xc20023c0},
+{0x5c,0x80a06000},
+{0x60,0x02800007},
+{0x64,0x82103001},
+{0x68,0xc2002200},
+{0x6c,0x80a06000},
+{0x70,0x22800005},
+{0x74,0xc200259c},
+{0x78,0x82103001},
+{0x7c,0xc220252c},
+{0xf0,0x52},
+{0x00,0xc200259c},
+{0x04,0x80a06000},
+{0x08,0x02800005},
+{0x0c,0xc2002288},
+{0x10,0x9b306001},
+{0x14,0x83306002},
+{0x18,0x8200400d},
+{0x1c,0xc220251c},
+{0x20,0x81c7e008},
+{0x24,0x81e80000},
+{0x28,0x9de3bf98},
+{0x2c,0x832e6004},
+{0x30,0x82004018},
+{0x34,0x3b000018},
+{0x38,0x83286002},
+{0x3c,0xba1760e0},
+{0x40,0x9e066001},
+{0x44,0xf400401d},
+{0x48,0xb2067fff},
+{0x4c,0xc2002478},
+{0x50,0x9a268001},
+{0x54,0x80a6400f},
+{0x58,0xb6062001},
+{0x5c,0x14800028},
+{0x60,0x98102000},
+{0x64,0x9610001d},
+{0x68,0xb006fffe},
+{0x6c,0xbb2e6004},
+{0x70,0xba074018},
+{0x74,0x833e601f},
+{0x78,0x82204019},
+{0x7c,0xbb2f6002},
+{0xf0,0x53},
+{0x00,0xb930601f},
+{0x04,0xba07400b},
+{0x08,0x80a62000},
+{0x0c,0x24800015},
+{0x10,0xb0062001},
+{0x14,0xc2002308},
+{0x18,0x80a04018},
+{0x1c,0x82603fff},
+{0x20,0x8088401c},
+{0x24,0x2280000f},
+{0x28,0xb0062001},
+{0x2c,0xc2002300},
+{0x30,0x80a64001},
+{0x34,0x3880000b},
+{0x38,0xb0062001},
+{0x3c,0xc2074000},
+{0x40,0x80a0401a},
+{0x44,0x04800004},
+{0x48,0x80a0400d},
+{0x4c,0x1080000d},
+{0x50,0xb0102000},
+{0x54,0x24800002},
+{0x58,0x98102001},
+{0x5c,0xb0062001},
+{0x60,0x80a6001b},
+{0x64,0x04bfffe9},
+{0x68,0xba076004},
+{0x6c,0xb2066001},
+{0x70,0x80a6400f},
+{0x74,0x04bfffde},
+{0x78,0xb006fffe},
+{0x7c,0xb010000c},
+{0xf0,0x54},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x9de3bf58},
+{0x0c,0xc208224d},
+{0x10,0x80a06000},
+{0x14,0x02800066},
+{0x18,0x98102000},
+{0x1c,0x94067ffe},
+{0x20,0xa6066002},
+{0x24,0x80a28013},
+{0x28,0x1480003f},
+{0x2c,0x90102000},
+{0x30,0xa0062002},
+{0x34,0x96063ffe},
+{0x38,0x80a2c010},
+{0x3c,0x14800036},
+{0x40,0x833aa01f},
+{0x44,0x8220400a},
+{0x48,0x9a064019},
+{0x4c,0x9a23400a},
+{0x50,0x992a2002},
+{0x54,0xab30601f},
+{0x58,0x9803001e},
+{0x5c,0x03000018},
+{0x60,0xa92b6004},
+{0x64,0xac1060e0},
+{0x68,0x98033fb8},
+{0x6c,0xa4063fff},
+{0x70,0xa2062001},
+{0x74,0x9a067fff},
+{0x78,0x82060018},
+{0x7c,0x8220400b},
+{0xf0,0x55},
+{0x00,0x82050001},
+{0x04,0x80a2c012},
+{0x08,0x0680000b},
+{0x0c,0x9f286002},
+{0x10,0x80a2c011},
+{0x14,0x14800009},
+{0x18,0x80a2e000},
+{0x1c,0x80a2800d},
+{0x20,0x06800005},
+{0x24,0x82066001},
+{0x28,0x80a28001},
+{0x2c,0x24800017},
+{0x30,0x9602e001},
+{0x34,0x80a2e000},
+{0x38,0x24800010},
+{0x3c,0xc203c016},
+{0x40,0xc2002308},
+{0x44,0x80a0400b},
+{0x48,0x82603fff},
+{0x4c,0x80884015},
+{0x50,0x2280000a},
+{0x54,0xc203c016},
+{0x58,0x832aa004},
+{0x5c,0x8200400b},
+{0x60,0x93286002},
+{0x64,0xc2002300},
+{0x68,0x80a28001},
+{0x6c,0x38800003},
+{0x70,0xc203c016},
+{0x74,0xc2024016},
+{0x78,0xc2230000},
+{0x7c,0x90022001},
+{0xf0,0x56},
+{0x00,0x98032004},
+{0x04,0x9602e001},
+{0x08,0x80a2c010},
+{0x0c,0x04bfffdc},
+{0x10,0x82060018},
+{0x14,0x9402a001},
+{0x18,0x80a28013},
+{0x1c,0x04bfffc7},
+{0x20,0x96063ffe},
+{0x24,0x9007bfb8},
+{0x28,0x7ffffaf7},
+{0x2c,0x92102010},
+{0x30,0xda08224f},
+{0x34,0xb00b60ff},
+{0x38,0xd608224d},
+{0x3c,0x80a6000b},
+{0x40,0x1480000b},
+{0x44,0x90102000},
+{0x48,0x832e2002},
+{0x4c,0x8200401e},
+{0x50,0x98007fb8},
+{0x54,0xc2030000},
+{0x58,0xb0062001},
+{0x5c,0x90020001},
+{0x60,0x80a6000b},
+{0x64,0x04bffffc},
+{0x68,0x98032004},
+{0x6c,0x9a0b60ff},
+{0x70,0xc208224d},
+{0x74,0x8220400d},
+{0x78,0xda08224c},
+{0x7c,0x82006001},
+{0xf0,0x57},
+{0x00,0x9a5a000d},
+{0x04,0x993b601f},
+{0x08,0x81832000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x9a7b4001},
+{0x1c,0x833b601f},
+{0x20,0x83306019},
+{0x24,0x9a034001},
+{0x28,0x993b6007},
+{0x2c,0x81c7e008},
+{0x30,0x91e8000c},
+{0x34,0x9de3bf88},
+{0x38,0xa210001b},
+{0x3c,0xa410001a},
+{0x40,0x96062001},
+{0x44,0x98066001},
+{0x48,0xa007bff8},
+{0x4c,0x8207bfe8},
+{0x50,0xb6102003},
+{0x54,0xc0204000},
+{0x58,0xb686ffff},
+{0x5c,0x1cbffffe},
+{0x60,0x82006004},
+{0x64,0xb2067fff},
+{0x68,0x80a6400c},
+{0x6c,0x1480002f},
+{0x70,0x82064019},
+{0x74,0xba03000c},
+{0x78,0xba07400c},
+{0x7c,0x82004019},
+{0xf0,0x58},
+{0x00,0x8220401d},
+{0x04,0x3b000018},
+{0x08,0x901760e0},
+{0x0c,0x9a20400b},
+{0x10,0xb602fffe},
+{0x14,0x832e6004},
+{0x18,0x8200401b},
+{0x1c,0x83286002},
+{0x20,0xba06c00d},
+{0x24,0xb0004008},
+{0x28,0xb4076008},
+{0x2c,0x92102001},
+{0x30,0x952a401a},
+{0x34,0x9e102000},
+{0x38,0xb92be002},
+{0x3c,0xfa072520},
+{0x40,0xba5f4011},
+{0x44,0x833f601f},
+{0x48,0x83306018},
+{0x4c,0xba074001},
+{0x50,0xc2060000},
+{0x54,0x82204012},
+{0x58,0xbb3f6008},
+{0x5c,0x9e03e001},
+{0x60,0x80a0401d},
+{0x64,0x04800005},
+{0x68,0xb8070010},
+{0x6c,0xc2073ff0},
+{0x70,0x8210400a},
+{0x74,0xc2273ff0},
+{0x78,0x80a3e003},
+{0x7c,0x08bffff0},
+{0xf0,0x59},
+{0x00,0xb92be002},
+{0x04,0xb606e001},
+{0x08,0xb406a001},
+{0x0c,0x80a6c00b},
+{0x10,0x04bfffe8},
+{0x14,0xb0062004},
+{0x18,0xb2066001},
+{0x1c,0x80a6400c},
+{0x20,0x04bfffdc},
+{0x24,0x9a036003},
+{0x28,0xc207bfe8},
+{0x2c,0x80886010},
+{0x30,0x0280000a},
+{0x34,0xfa07bfec},
+{0x38,0xc207bff4},
+{0x3c,0x80886082},
+{0x40,0x02800007},
+{0x44,0x808f6010},
+{0x48,0x80886028},
+{0x4c,0x1280001f},
+{0x50,0xb0102003},
+{0x54,0xfa07bfec},
+{0x58,0x808f6010},
+{0x5c,0x02800012},
+{0x60,0xc207bff0},
+{0x64,0x808f6082},
+{0x68,0x02800007},
+{0x6c,0x808f6028},
+{0x70,0xc207bff4},
+{0x74,0x80886028},
+{0x78,0x32800014},
+{0x7c,0xb0102002},
+{0xf0,0x5a},
+{0x00,0x808f6028},
+{0x04,0x02800008},
+{0x08,0xc207bff0},
+{0x0c,0xc207bff4},
+{0x10,0x80886082},
+{0x14,0x02800004},
+{0x18,0xc207bff0},
+{0x1c,0x1080000b},
+{0x20,0xb0102002},
+{0x24,0x80886010},
+{0x28,0x02800008},
+{0x2c,0xb0102000},
+{0x30,0x80886082},
+{0x34,0x02800005},
+{0x38,0x80886028},
+{0x3c,0x12800003},
+{0x40,0xb0102001},
+{0x44,0xb0102000},
+{0x48,0x81c7e008},
+{0x4c,0x81e80000},
+{0x50,0xc2002308},
+{0x54,0x80a20001},
+{0x58,0x2880000e},
+{0x5c,0xc200237c},
+{0x60,0xc2002304},
+{0x64,0x80a06000},
+{0x68,0x02800007},
+{0x6c,0x9a022001},
+{0x70,0xc2002300},
+{0x74,0x80a24001},
+{0x78,0x08800029},
+{0x7c,0x82102000},
+{0xf0,0x5b},
+{0x00,0x9a022001},
+{0x04,0x832a6004},
+{0x08,0x10800008},
+{0x0c,0x8200400d},
+{0x10,0x80a06000},
+{0x14,0x12800022},
+{0x18,0x82102000},
+{0x1c,0x9a026001},
+{0x20,0x832b6004},
+{0x24,0x82004008},
+{0x28,0x1b000018},
+{0x2c,0x83286002},
+{0x30,0x9a1360e0},
+{0x34,0xda00400d},
+{0x38,0xc200251c},
+{0x3c,0x80a34001},
+{0x40,0x04800017},
+{0x44,0x82102000},
+{0x48,0xc20021cc},
+{0x4c,0x80a06000},
+{0x50,0x9810000d},
+{0x54,0x02800012},
+{0x58,0x8210000d},
+{0x5c,0x10800004},
+{0x60,0x832a2010},
+{0x64,0x1080000e},
+{0x68,0x8210000c},
+{0x6c,0x90004009},
+{0x70,0x9a102007},
+{0x74,0x832b6002},
+{0x78,0xc20061b0},
+{0x7c,0x80a06000},
+{0xf0,0x5c},
+{0x00,0x02800006},
+{0x04,0x80a04008},
+{0x08,0x02bffff7},
+{0x0c,0x9a837fff},
+{0x10,0x1cbffffa},
+{0x14,0x832b6002},
+{0x18,0x82102000},
+{0x1c,0x81c3e008},
+{0x20,0x90100001},
+{0x24,0x9de3bf98},
+{0x28,0xc200254c},
+{0x2c,0x82087fbf},
+{0x30,0xc220254c},
+{0x34,0xc020259c},
+{0x38,0xc0202514},
+{0x3c,0xac102000},
+{0x40,0xa2102000},
+{0x44,0x832c6002},
+{0x48,0xa2046001},
+{0x4c,0x80a46009},
+{0x50,0x04bffffd},
+{0x54,0xc0206610},
+{0x58,0xc2002568},
+{0x5c,0x80a06000},
+{0x60,0x02800004},
+{0x64,0xa4102001},
+{0x68,0x82007fff},
+{0x6c,0xc2202568},
+{0x70,0xc20022f8},
+{0x74,0x80a48001},
+{0x78,0x18800072},
+{0x7c,0xa2102001},
+{0xf0,0x5d},
+{0x00,0xc20022fc},
+{0x04,0x80a44001},
+{0x08,0x18800069},
+{0x0c,0x03000044},
+{0x10,0xa6048001},
+{0x14,0xa8100013},
+{0x18,0x2b000040},
+{0x1c,0xc2002308},
+{0x20,0x80a44001},
+{0x24,0x3880003a},
+{0x28,0xc2002568},
+{0x2c,0xc2002300},
+{0x30,0x80a48001},
+{0x34,0x38800036},
+{0x38,0xc2002568},
+{0x3c,0x9b2ca004},
+{0x40,0x9a034011},
+{0x44,0x03000018},
+{0x48,0x821060e0},
+{0x4c,0x9b2b6002},
+{0x50,0xda034001},
+{0x54,0xc2002474},
+{0x58,0x80a34001},
+{0x5c,0x0680004d},
+{0x60,0x1b000040},
+{0x64,0x90100011},
+{0x68,0x7ffffe90},
+{0x6c,0x92100012},
+{0x70,0x80a22000},
+{0x74,0x02800047},
+{0x78,0x1b000040},
+{0x7c,0x92100012},
+{0xf0,0x5e},
+{0x00,0x7ffffec2},
+{0x04,0x90100011},
+{0x08,0xa0100008},
+{0x0c,0x90100011},
+{0x10,0x92100012},
+{0x14,0x94100010},
+{0x18,0x7fffff27},
+{0x1c,0xd6002470},
+{0x20,0x80a22000},
+{0x24,0x0280003b},
+{0x28,0x1b000040},
+{0x2c,0x94100010},
+{0x30,0x90100011},
+{0x34,0x92100012},
+{0x38,0x7fffff1f},
+{0x3c,0x96102100},
+{0x40,0x80a22000},
+{0x44,0x0280000a},
+{0x48,0xd8002514},
+{0x4c,0xc200254c},
+{0x50,0x82106040},
+{0x54,0xc220254c},
+{0x58,0xc2002280},
+{0x5c,0xc2202568},
+{0x60,0x9b2b2002},
+{0x64,0x10800006},
+{0x68,0x82054012},
+{0x6c,0x1b000010},
+{0x70,0x82054012},
+{0x74,0x8200400d},
+{0x78,0x9b2b2002},
+{0x7c,0xc2236610},
+{0xf0,0x5f},
+{0x00,0x82032001},
+{0x04,0x1080001f},
+{0x08,0xc2202514},
+{0x0c,0x80a06000},
+{0x10,0x12800020},
+{0x14,0x1b000040},
+{0x18,0x90100011},
+{0x1c,0x7fffff6d},
+{0x20,0x92100012},
+{0x24,0x80a22000},
+{0x28,0x0280001a},
+{0x2c,0x1b000040},
+{0x30,0xda00259c},
+{0x34,0x80a36000},
+{0x38,0x2280000c},
+{0x3c,0xc2002514},
+{0x40,0xc20023c8},
+{0x44,0x80886100},
+{0x48,0x22800008},
+{0x4c,0xc2002514},
+{0x50,0x80a20016},
+{0x54,0x2480000f},
+{0x58,0x1b000040},
+{0x5c,0x832b6002},
+{0x60,0x10800007},
+{0x64,0xe820660c},
+{0x68,0x9b286002},
+{0x6c,0xe6236610},
+{0x70,0x82006001},
+{0x74,0xc220259c},
+{0x78,0xc2202514},
+{0x7c,0xac100008},
+{0xf0,0x60},
+{0x00,0xc2002514},
+{0x04,0x80a06009},
+{0x08,0x1880000e},
+{0x0c,0x1b000040},
+{0x10,0xa2046001},
+{0x14,0xc20022fc},
+{0x18,0xa604c00d},
+{0x1c,0x80a44001},
+{0x20,0xaa05400d},
+{0x24,0x08bfff9e},
+{0x28,0xa805000d},
+{0x2c,0xa404a001},
+{0x30,0xc20022f8},
+{0x34,0x80a48001},
+{0x38,0x08bfff92},
+{0x3c,0xa2102001},
+{0x40,0x81c7e008},
+{0x44,0x81e80000},
+{0x48,0x80a22000},
+{0x4c,0x2280001c},
+{0x50,0xc2002558},
+{0x54,0xd4002208},
+{0x58,0x80a2a000},
+{0x5c,0x0280002e},
+{0x60,0x01000000},
+{0x64,0xc2002514},
+{0x68,0x80a06000},
+{0x6c,0x12800007},
+{0x70,0xc2002558},
+{0x74,0x80a06000},
+{0x78,0x02800027},
+{0x7c,0x82007fff},
+{0xf0,0x61},
+{0x00,0x10800025},
+{0x04,0xc2202558},
+{0x08,0x80a06000},
+{0x0c,0x32800022},
+{0x10,0xd4202558},
+{0x14,0x17200040},
+{0x18,0x1b3fc200},
+{0x1c,0x8212e001},
+{0x20,0xc2234000},
+{0x24,0xc2002298},
+{0x28,0x98136070},
+{0x2c,0xc2230000},
+{0x30,0xd6234000},
+{0x34,0x10800018},
+{0x38,0xd4202558},
+{0x3c,0x80a06000},
+{0x40,0x32800007},
+{0x44,0xc2002514},
+{0x48,0xc2002208},
+{0x4c,0x80a06000},
+{0x50,0x1280000e},
+{0x54,0x033fc200},
+{0x58,0xc2002514},
+{0x5c,0x80a06001},
+{0x60,0x08800006},
+{0x64,0xd800233c},
+{0x68,0x82007fff},
+{0x6c,0xda002204},
+{0x70,0x8258400d},
+{0x74,0x98030001},
+{0x78,0x033fc200},
+{0x7c,0x82106070},
+{0xf0,0x62},
+{0x00,0x10800005},
+{0x04,0xd8204000},
+{0x08,0xda002234},
+{0x0c,0x82106070},
+{0x10,0xda204000},
+{0x14,0x81c3e008},
+{0x18,0x01000000},
+{0x1c,0x82220009},
+{0x20,0x9a58400a},
+{0x24,0x833b601f},
+{0x28,0x80a20009},
+{0x2c,0x83306019},
+{0x30,0x04800004},
+{0x34,0x90102000},
+{0x38,0x82034001},
+{0x3c,0x91386007},
+{0x40,0x81c3e008},
+{0x44,0x01000000},
+{0x48,0xc2002308},
+{0x4c,0x82006001},
+{0x50,0xd80022fc},
+{0x54,0x80a30001},
+{0x58,0x2a800019},
+{0x5c,0xc2002300},
+{0x60,0x11000018},
+{0x64,0x96102001},
+{0x68,0xc20022f8},
+{0x6c,0x80a2c001},
+{0x70,0x1880000c},
+{0x74,0x832b2002},
+{0x78,0x9a006040},
+{0x7c,0x921220e4},
+{0xf0,0x63},
+{0x00,0x941220e0},
+{0x04,0xc203400a},
+{0x08,0xc2234009},
+{0x0c,0x9602e001},
+{0x10,0xc20022f8},
+{0x14,0x80a2c001},
+{0x18,0x08bffffb},
+{0x1c,0x9a036040},
+{0x20,0xc2002308},
+{0x24,0x98033fff},
+{0x28,0x82006001},
+{0x2c,0x80a30001},
+{0x30,0x1abfffee},
+{0x34,0x96102001},
+{0x38,0xc2002300},
+{0x3c,0x82006001},
+{0x40,0xd60022f8},
+{0x44,0x80a2c001},
+{0x48,0x0a800017},
+{0x4c,0x11000018},
+{0x50,0x98102001},
+{0x54,0xc2002308},
+{0x58,0x80a30001},
+{0x5c,0x1880000c},
+{0x60,0x832ae006},
+{0x64,0x9a006004},
+{0x68,0x92122120},
+{0x6c,0x941220e0},
+{0x70,0xc203400a},
+{0x74,0xc2234009},
+{0x78,0x98032001},
+{0x7c,0xc2002308},
+{0xf0,0x64},
+{0x00,0x80a30001},
+{0x04,0x08bffffb},
+{0x08,0x9a036004},
+{0x0c,0xc2002300},
+{0x10,0x9602ffff},
+{0x14,0x82006001},
+{0x18,0x80a2c001},
+{0x1c,0x1abfffee},
+{0x20,0x98102001},
+{0x24,0x81c3e008},
+{0x28,0x01000000},
+{0x2c,0x9de3bf98},
+{0x30,0xc20022f8},
+{0x34,0x80a07fff},
+{0x38,0x0280001c},
+{0x3c,0xa6102001},
+{0x40,0x23000018},
+{0x44,0xa12ce006},
+{0x48,0x821460e8},
+{0x4c,0xa41460e4},
+{0x50,0xd2040001},
+{0x54,0xd408228c},
+{0x58,0x7fffffb1},
+{0x5c,0xd0040012},
+{0x60,0x9a1460e0},
+{0x64,0xd024000d},
+{0x68,0xc2002308},
+{0x6c,0xa12ce004},
+{0x70,0xa0040001},
+{0x74,0xa12c2002},
+{0x78,0xa21460dc},
+{0x7c,0xd004000d},
+{0xf0,0x65},
+{0x00,0xd2040011},
+{0x04,0x7fffffa6},
+{0x08,0xd408228d},
+{0x0c,0xd0240012},
+{0x10,0xc20022f8},
+{0x14,0xa604e001},
+{0x18,0x82006001},
+{0x1c,0x80a4c001},
+{0x20,0x08bfffe9},
+{0x24,0x23000018},
+{0x28,0xa6102001},
+{0x2c,0xc2002308},
+{0x30,0x80a4c001},
+{0x34,0x18800017},
+{0x38,0x23000018},
+{0x3c,0xa12ce002},
+{0x40,0x82146160},
+{0x44,0xa4146120},
+{0x48,0xd2040001},
+{0x4c,0xd408228e},
+{0x50,0x7fffff93},
+{0x54,0xd0040012},
+{0x58,0x821460e0},
+{0x5c,0xd0240001},
+{0x60,0xe0002300},
+{0x64,0xa12c2004},
+{0x68,0xa0040013},
+{0x6c,0xa12c2002},
+{0x70,0xa21460a0},
+{0x74,0xd0040001},
+{0x78,0xd2040011},
+{0x7c,0x7fffff88},
+{0xf0,0x66},
+{0x00,0xd408228f},
+{0x04,0xd0240012},
+{0x08,0x10bfffe9},
+{0x0c,0xa604e001},
+{0x10,0x17000018},
+{0x14,0x9012e0e4},
+{0x18,0x9212e120},
+{0x1c,0xda024000},
+{0x20,0xc2020000},
+{0x24,0x8200400d},
+{0x28,0x9412e0e0},
+{0x2c,0x83386001},
+{0x30,0xc2228000},
+{0x34,0xd8002308},
+{0x38,0x992b2002},
+{0x3c,0x9612e124},
+{0x40,0xda03000b},
+{0x44,0xc203000a},
+{0x48,0x8200400d},
+{0x4c,0x83386001},
+{0x50,0xc2230008},
+{0x54,0xda002300},
+{0x58,0x9b2b6006},
+{0x5c,0xd803400a},
+{0x60,0xc203400b},
+{0x64,0x8200400c},
+{0x68,0x83386001},
+{0x6c,0xc2234009},
+{0x70,0xc2002300},
+{0x74,0xda002308},
+{0x78,0x83286004},
+{0x7c,0x8200400d},
+{0xf0,0x67},
+{0x00,0x83286002},
+{0x04,0xda004009},
+{0x08,0xd8004008},
+{0x0c,0x9a03400c},
+{0x10,0x9b3b6001},
+{0x14,0xda20400b},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0xfa0023c8},
+{0x28,0x83376015},
+{0x2c,0x80886001},
+{0x30,0x02800048},
+{0x34,0x808f6010},
+{0x38,0x92102000},
+{0x3c,0x94102000},
+{0x40,0x98102001},
+{0x44,0x12800004},
+{0x48,0xa0102010},
+{0x4c,0x98102000},
+{0x50,0xa0102001},
+{0x54,0x821b2003},
+{0x58,0x901b2001},
+{0x5c,0x83286002},
+{0x60,0xbb2a2002},
+{0x64,0xc2060001},
+{0x68,0xfa06001d},
+{0x6c,0x8220401d},
+{0x70,0x80a06003},
+{0x74,0x14800037},
+{0x78,0x821b2002},
+{0x7c,0xfa062004},
+{0xf0,0x68},
+{0x00,0xf8060000},
+{0x04,0xda06200c},
+{0x08,0xbb2f6004},
+{0x0c,0xba07401c},
+{0x10,0xb52b6004},
+{0x14,0xde062008},
+{0x18,0x83286002},
+{0x1c,0xb406800f},
+{0x20,0x39000018},
+{0x24,0xb81720e0},
+{0x28,0xb52ea002},
+{0x2c,0xf6060001},
+{0x30,0xb32b2002},
+{0x34,0xbb2f6002},
+{0x38,0xc2060019},
+{0x3c,0x9606801c},
+{0x40,0xb6a6c001},
+{0x44,0x0c80000d},
+{0x48,0xb407401c},
+{0x4c,0xb32c2002},
+{0x50,0xb606e001},
+{0x54,0xb8102000},
+{0x58,0x8222c01c},
+{0x5c,0xfa004000},
+{0x60,0xc207001a},
+{0x64,0x92024001},
+{0x68,0x9402801d},
+{0x6c,0xb686ffff},
+{0x70,0x12bffffa},
+{0x74,0xb8070019},
+{0x78,0x80a2400a},
+{0x7c,0x06800009},
+{0xf0,0x69},
+{0x00,0x80a32000},
+{0x04,0xbb2a2002},
+{0x08,0xc206001d},
+{0x0c,0x80a06000},
+{0x10,0x04800010},
+{0x14,0x82007fff},
+{0x18,0x1080000e},
+{0x1c,0xc226001d},
+{0x20,0x22800008},
+{0x24,0xc2002300},
+{0x28,0xc2002308},
+{0x2c,0x80a3c001},
+{0x30,0x18800008},
+{0x34,0x8203e001},
+{0x38,0x10800006},
+{0x3c,0xc2262008},
+{0x40,0x80a34001},
+{0x44,0x18800003},
+{0x48,0x82036001},
+{0x4c,0xc226200c},
+{0x50,0x81c7e008},
+{0x54,0x81e80000},
+{0x58,0x9de3bf98},
+{0x5c,0xb12e2002},
+{0x60,0xf8062610},
+{0x64,0x9a0f2fff},
+{0x68,0xb1372010},
+{0x6c,0xb00e2fff},
+{0x70,0xbb2b6004},
+{0x74,0xba074018},
+{0x78,0x03000018},
+{0x7c,0x821060e0},
+{0xf0,0x6a},
+{0x00,0xbb2f6002},
+{0x04,0xfa074001},
+{0x08,0xc20821e4},
+{0x0c,0xba5f4001},
+{0x10,0x833f601f},
+{0x14,0x83306019},
+{0x18,0xba074001},
+{0x1c,0xbb3f6007},
+{0x20,0xb937200c},
+{0x24,0xc20821e5},
+{0x28,0x90100019},
+{0x2c,0x9610001a},
+{0x30,0xa6074001},
+{0x34,0x808f2001},
+{0x38,0xb006001a},
+{0x3c,0x0280000c},
+{0x40,0x9a034019},
+{0x44,0xc20023c8},
+{0x48,0x80886200},
+{0x4c,0x32800002},
+{0x50,0xb006001a},
+{0x54,0xc200237c},
+{0x58,0x80a06000},
+{0x5c,0x22800056},
+{0x60,0x9a036001},
+{0x64,0x10800054},
+{0x68,0xb0062001},
+{0x6c,0xc20023c8},
+{0x70,0x83306014},
+{0x74,0x82086001},
+{0x78,0x80a00001},
+{0x7c,0xa0603fff},
+{0xf0,0x6b},
+{0x00,0x9a034008},
+{0x04,0x8333601f},
+{0x08,0x80940001},
+{0x0c,0x1280004a},
+{0x10,0xb006000b},
+{0x14,0x80a62000},
+{0x18,0x06800048},
+{0x1c,0x80a2e000},
+{0x20,0xc2002300},
+{0x24,0x82006001},
+{0x28,0x80a34001},
+{0x2c,0x18800043},
+{0x30,0x80a2e000},
+{0x34,0xc2002308},
+{0x38,0x82006001},
+{0x3c,0x80a60001},
+{0x40,0x1880003d},
+{0x44,0xa2102000},
+{0x48,0x25000018},
+{0x4c,0x98103fff},
+{0x50,0xa814a0e0},
+{0x54,0x9414a0e0},
+{0x58,0x80a2e000},
+{0x5c,0x9e100018},
+{0x60,0x12800004},
+{0x64,0xb203400c},
+{0x68,0x9e06000c},
+{0x6c,0xb210000d},
+{0x70,0x82264008},
+{0x74,0xba23c00b},
+{0x78,0x83286004},
+{0x7c,0x8200401d},
+{0xf0,0x6c},
+{0x00,0x83286002},
+{0x04,0xfa00400a},
+{0x08,0xc20821e6},
+{0x0c,0xba5f4001},
+{0x10,0x833f601f},
+{0x14,0x83306019},
+{0x18,0x932e6004},
+{0x1c,0xba074001},
+{0x20,0xbb3f6007},
+{0x24,0xb52e6006},
+{0x28,0xb602400f},
+{0x2c,0xf80821e7},
+{0x30,0x8203c00c},
+{0x34,0xb807401c},
+{0x38,0x83286002},
+{0x3c,0xb72ee002},
+{0x40,0xb406800a},
+{0x44,0xb206400c},
+{0x48,0xfa06c00a},
+{0x4c,0xb4068001},
+{0x50,0xb32e6006},
+{0x54,0x80a7401c},
+{0x58,0x14800017},
+{0x5c,0x832be002},
+{0x60,0x80a2e000},
+{0x64,0x22800005},
+{0x68,0x8202400f},
+{0x6c,0xb406400a},
+{0x70,0xb4068001},
+{0x74,0x8202400f},
+{0x78,0xb7286002},
+{0x7c,0xc2068000},
+{0xf0,0x6d},
+{0x00,0x80a0401c},
+{0x04,0x1480000c},
+{0x08,0x98032001},
+{0x0c,0xc206c014},
+{0x10,0x80a04013},
+{0x14,0x36800002},
+{0x18,0xa2102001},
+{0x1c,0x80a32001},
+{0x20,0x04bfffce},
+{0x24,0x9414a0e0},
+{0x28,0x80a46000},
+{0x2c,0x32bfffb6},
+{0x30,0x9a034008},
+{0x34,0x80a2e000},
+{0x38,0x12800003},
+{0x3c,0xb026000b},
+{0x40,0xb0234008},
+{0x44,0x81c7e008},
+{0x48,0x81e80000},
+{0x4c,0x9de3bf80},
+{0x50,0x03003fc0},
+{0x54,0x82106001},
+{0x58,0xc227bff4},
+{0x5c,0xc227bff0},
+{0x60,0xac102000},
+{0x64,0xc2002514},
+{0x68,0x80a58001},
+{0x6c,0xa6102000},
+{0x70,0x1a80007a},
+{0x74,0xa2102000},
+{0x78,0x8207bff8},
+{0x7c,0x9a044001},
+{0xf0,0x6e},
+{0x00,0xa12c6002},
+{0x04,0xa0040001},
+{0x08,0xd44b7ff9},
+{0x0c,0x90100013},
+{0x10,0x7fffff72},
+{0x14,0xd24b7ff8},
+{0x18,0xa2046001},
+{0x1c,0x80a46003},
+{0x20,0x04bffff6},
+{0x24,0xd0243fe8},
+{0x28,0x7fffff1e},
+{0x2c,0x9007bfe0},
+{0x30,0xd207bfe4},
+{0x34,0xe807bfec},
+{0x38,0x80a24014},
+{0x3c,0x9e102000},
+{0x40,0xa0102000},
+{0x44,0x14800020},
+{0x48,0xa2102000},
+{0x4c,0x03000018},
+{0x50,0xae1060e0},
+{0x54,0xe407bfe8},
+{0x58,0xea07bfe0},
+{0x5c,0x80a54012},
+{0x60,0x14800015},
+{0x64,0x96100015},
+{0x68,0x832a6004},
+{0x6c,0x82004015},
+{0x70,0x83286002},
+{0x74,0x94004017},
+{0x78,0x98026001},
+{0x7c,0xda028000},
+{0xf0,0x6f},
+{0x00,0x8202e001},
+{0x04,0x96100001},
+{0x08,0x905b4001},
+{0x0c,0x9402a004},
+{0x10,0x80a36000},
+{0x14,0x04800005},
+{0x18,0x825b400c},
+{0x1c,0xa0040001},
+{0x20,0xa2044008},
+{0x24,0x9e03c00d},
+{0x28,0x80a2c012},
+{0x2c,0x24bffff5},
+{0x30,0xda028000},
+{0x34,0x92026001},
+{0x38,0x80a24014},
+{0x3c,0x04bfffe9},
+{0x40,0x80a54012},
+{0x44,0x80a3e000},
+{0x48,0x9404e001},
+{0x4c,0x12800004},
+{0x50,0x912ce002},
+{0x54,0x1080003d},
+{0x58,0xc0222610},
+{0x5c,0x832c2006},
+{0x60,0x992c6006},
+{0x64,0x9338601f},
+{0x68,0x81826000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x9678400f},
+{0x7c,0xda022610},
+{0xf0,0x70},
+{0x00,0x833b201f},
+{0x04,0x81806000},
+{0x08,0x01000000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x987b000f},
+{0x18,0x9b33600c},
+{0x1c,0x808b6001},
+{0x20,0xa002ffa0},
+{0x24,0x02800007},
+{0x28,0xa2033fa0},
+{0x2c,0xc200237c},
+{0x30,0x80a06000},
+{0x34,0x22800003},
+{0x38,0xa002ff60},
+{0x3c,0xa2033f60},
+{0x40,0x80a42000},
+{0x44,0x24800002},
+{0x48,0xa0102001},
+{0x4c,0x80a46000},
+{0x50,0x24800002},
+{0x54,0xa2102001},
+{0x58,0xc20021e0},
+{0x5c,0x80a06000},
+{0x60,0x2280000f},
+{0x64,0x9e102000},
+{0x68,0x81800000},
+{0x6c,0x01000000},
+{0x70,0x01000000},
+{0x74,0x01000000},
+{0x78,0x9ef3c001},
+{0x7c,0x32800004},
+{0xf0,0x71},
+{0x00,0x80a3e00f},
+{0x04,0x10800006},
+{0x08,0x9e102001},
+{0x0c,0x34800004},
+{0x10,0x9e10200f},
+{0x14,0x10800003},
+{0x18,0x832c2010},
+{0x1c,0x832c2010},
+{0x20,0x82004011},
+{0x24,0x9b2be01c},
+{0x28,0x9a034001},
+{0x2c,0xd8022610},
+{0x30,0x03000004},
+{0x34,0x980b0001},
+{0x38,0x832da002},
+{0x3c,0x9803000d},
+{0x40,0xd8206610},
+{0x44,0xac05a001},
+{0x48,0xc2002514},
+{0x4c,0xa610000a},
+{0x50,0x10bfff88},
+{0x54,0x80a28001},
+{0x58,0xec202514},
+{0x5c,0x81c7e008},
+{0x60,0x81e80000},
+{0x64,0xd4020000},
+{0x68,0x03000016},
+{0x6c,0x9802800a},
+{0x70,0x82106330},
+{0x74,0xda130001},
+{0x78,0x03000017},
+{0x7c,0x82106208},
+{0xf0,0x72},
+{0x00,0xc2130001},
+{0x04,0x96a0400d},
+{0x08,0x02800016},
+{0x0c,0x03000016},
+{0x10,0x80a2e000},
+{0x14,0x04800009},
+{0x18,0x82102001},
+{0x1c,0xda022004},
+{0x20,0x8328400d},
+{0x24,0x80a2c001},
+{0x28,0x3480000d},
+{0x2c,0x973ac00d},
+{0x30,0x1080000b},
+{0x34,0x96102001},
+{0x38,0x1680000a},
+{0x3c,0x03000016},
+{0x40,0xda022008},
+{0x44,0x82103fff},
+{0x48,0x8328400d},
+{0x4c,0x80a2c001},
+{0x50,0x36800003},
+{0x54,0x96103fff},
+{0x58,0x973ac00d},
+{0x5c,0x03000016},
+{0x60,0x92106330},
+{0x64,0x8202800a},
+{0x68,0xc2104009},
+{0x6c,0x9602c001},
+{0x70,0x808aa001},
+{0x74,0x0280000f},
+{0x78,0x9b3aa01f},
+{0x7c,0x9b33601f},
+{0xf0,0x73},
+{0x00,0x9a02800d},
+{0x04,0x9b3b6001},
+{0x08,0x9b2b6002},
+{0x0c,0xd8034009},
+{0x10,0x033fffc0},
+{0x14,0x980b0001},
+{0x18,0x0300003f},
+{0x1c,0x821063ff},
+{0x20,0x820ac001},
+{0x24,0x98030001},
+{0x28,0x1080000d},
+{0x2c,0xd8234009},
+{0x30,0x9b33601f},
+{0x34,0x9a02800d},
+{0x38,0x9b3b6001},
+{0x3c,0x9b2b6002},
+{0x40,0x0300003f},
+{0x44,0xd8034009},
+{0x48,0x821063ff},
+{0x4c,0x980b0001},
+{0x50,0x832ae010},
+{0x54,0x8200400c},
+{0x58,0xc2234009},
+{0x5c,0xc2020000},
+{0x60,0xda00247c},
+{0x64,0x8200400d},
+{0x68,0x81c3e008},
+{0x6c,0xc2220000},
+{0x70,0x9de3bf88},
+{0x74,0xc2002200},
+{0x78,0x80a06000},
+{0x7c,0x3280000f},
+{0xf0,0x74},
+{0x00,0xc20021f8},
+{0x04,0xda00254c},
+{0x08,0x808b6040},
+{0x0c,0x2280000d},
+{0x10,0xc208254e},
+{0x14,0xc20023c8},
+{0x18,0x80886400},
+{0x1c,0x22800007},
+{0x20,0xc20021f8},
+{0x24,0x8333600c},
+{0x28,0x80886001},
+{0x2c,0x22800005},
+{0x30,0xc208254e},
+{0x34,0xc20021f8},
+{0x38,0x10800032},
+{0x3c,0xc2202538},
+{0x40,0x80a06000},
+{0x44,0x12800003},
+{0x48,0xa0102000},
+{0x4c,0xa0102002},
+{0x50,0xa0142001},
+{0x54,0xc2002564},
+{0x58,0x80a40001},
+{0x5c,0x32800007},
+{0x60,0xc20021f8},
+{0x64,0xc20c2314},
+{0x68,0x80a06000},
+{0x6c,0x32800006},
+{0x70,0xc2002538},
+{0x74,0xc20021f8},
+{0x78,0xc2202538},
+{0x7c,0x10800021},
+{0xf0,0x75},
+{0x00,0xe0202564},
+{0x04,0x82006001},
+{0x08,0xc2202538},
+{0x0c,0xda0c2314},
+{0x10,0x80a0400d},
+{0x14,0x0680001b},
+{0x18,0x01000000},
+{0x1c,0xc0202538},
+{0x20,0xc20c234c},
+{0x24,0xc227bfec},
+{0x28,0xc20c230c},
+{0x2c,0xc227bff0},
+{0x30,0xa0102001},
+{0x34,0xc2002308},
+{0x38,0x80a40001},
+{0x3c,0x18800011},
+{0x40,0x01000000},
+{0x44,0xc20c237f},
+{0x48,0xc227bfe8},
+{0x4c,0xa2102001},
+{0x50,0xc2002300},
+{0x54,0x80a44001},
+{0x58,0x38800006},
+{0x5c,0xa0042001},
+{0x60,0x7fffff81},
+{0x64,0x9007bfe8},
+{0x68,0x10bffffa},
+{0x6c,0xa2046001},
+{0x70,0xc2002308},
+{0x74,0x80a40001},
+{0x78,0x28bffff4},
+{0x7c,0xc20c237f},
+{0xf0,0x76},
+{0x00,0x81c7e008},
+{0x04,0x81e80000},
+{0x08,0x9de3bf88},
+{0x0c,0xd8082246},
+{0x10,0x80a32000},
+{0x14,0x22800041},
+{0x18,0xc020255c},
+{0x1c,0xda00254c},
+{0x20,0x808b6001},
+{0x24,0x12800007},
+{0x28,0x820b7ffe},
+{0x2c,0xc2002568},
+{0x30,0x80a06000},
+{0x34,0x22800007},
+{0x38,0xc200259c},
+{0x3c,0x820b7ffe},
+{0x40,0xc220254c},
+{0x44,0xc027bfec},
+{0x48,0x1080000e},
+{0x4c,0xc027bff0},
+{0x50,0x80a06000},
+{0x54,0x32800031},
+{0x58,0xc020255c},
+{0x5c,0xc200255c},
+{0x60,0x82006001},
+{0x64,0x80a0400c},
+{0x68,0x0a80002c},
+{0x6c,0xc220255c},
+{0x70,0xc2082244},
+{0x74,0xc227bfec},
+{0x78,0xc2082245},
+{0x7c,0xc227bff0},
+{0xf0,0x77},
+{0x00,0xc2002308},
+{0x04,0xa0006001},
+{0x08,0xc20022fc},
+{0x0c,0x80a40001},
+{0x10,0x1880000c},
+{0x14,0xa2102001},
+{0x18,0xc20c237f},
+{0x1c,0xc227bfe8},
+{0x20,0xc20022f8},
+{0x24,0x80a44001},
+{0x28,0x38bffff8},
+{0x2c,0xa0042001},
+{0x30,0x7fffff4d},
+{0x34,0x9007bfe8},
+{0x38,0x10bffffa},
+{0x3c,0xa2046001},
+{0x40,0xa0102001},
+{0x44,0xc2002308},
+{0x48,0x80a40001},
+{0x4c,0x38800013},
+{0x50,0xc020255c},
+{0x54,0xd80c237f},
+{0x58,0xd827bfe8},
+{0x5c,0xc200247c},
+{0x60,0xda002300},
+{0x64,0x8258400d},
+{0x68,0x98030001},
+{0x6c,0xd827bfe8},
+{0x70,0xc2002300},
+{0x74,0xa2006001},
+{0x78,0xc20022f8},
+{0x7c,0x80a44001},
+{0xf0,0x78},
+{0x00,0x38bffff1},
+{0x04,0xa0042001},
+{0x08,0x7fffff37},
+{0x0c,0x9007bfe8},
+{0x10,0x10bffffa},
+{0x14,0xa2046001},
+{0x18,0x81c7e008},
+{0x1c,0x81e80000},
+{0x20,0x9de3bf98},
+{0x24,0xc2002744},
+{0x28,0x96100018},
+{0x2c,0x80a0600f},
+{0x30,0x14800003},
+{0x34,0x9e10200f},
+{0x38,0x9e100001},
+{0x3c,0x03000014},
+{0x40,0x9a1062a8},
+{0x44,0x0300003f},
+{0x48,0x941063ff},
+{0x4c,0xb203e001},
+{0x50,0xb0102000},
+{0x54,0x9810000d},
+{0x58,0xb72e2002},
+{0x5c,0x8203401b},
+{0x60,0xfa106002},
+{0x64,0xb802c01b},
+{0x68,0xf4172002},
+{0x6c,0xc213401b},
+{0x70,0xf812c01b},
+{0x74,0x8258400f},
+{0x78,0xba5f400f},
+{0x7c,0x8200401c},
+{0xf0,0x79},
+{0x00,0xba07401a},
+{0x04,0x81800000},
+{0x08,0x01000000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x82704019},
+{0x18,0x81800000},
+{0x1c,0x01000000},
+{0x20,0x01000000},
+{0x24,0x01000000},
+{0x28,0xba774019},
+{0x2c,0x83286010},
+{0x30,0xba0f400a},
+{0x34,0x8200401d},
+{0x38,0xb0062001},
+{0x3c,0x80a620b5},
+{0x40,0x04bfffe6},
+{0x44,0xc226c00c},
+{0x48,0xf2202744},
+{0x4c,0x81c7e008},
+{0x50,0x81e80000},
+{0x54,0xd6020000},
+{0x58,0xd8024000},
+{0x5c,0x9132e010},
+{0x60,0x95332010},
+{0x64,0x900a2fff},
+{0x68,0x940aafff},
+{0x6c,0x03000007},
+{0x70,0x9a22000a},
+{0x74,0x821063ff},
+{0x78,0x940b0001},
+{0x7c,0x900ac001},
+{0xf0,0x7a},
+{0x00,0x9022000a},
+{0x04,0x9a5b400d},
+{0x08,0x905a0008},
+{0x0c,0x81c3e008},
+{0x10,0x90034008},
+{0x14,0x9de3bf98},
+{0x18,0xc2002200},
+{0x1c,0x80a06000},
+{0x20,0x12800062},
+{0x24,0x033fc200},
+{0x28,0x82106030},
+{0x2c,0xda004000},
+{0x30,0xc2002344},
+{0x34,0x80a34001},
+{0x38,0x1280005c},
+{0x3c,0x01000000},
+{0x40,0xc208254d},
+{0x44,0x80a06000},
+{0x48,0x12800058},
+{0x4c,0x01000000},
+{0x50,0xc208254e},
+{0x54,0x80a06000},
+{0x58,0x02800054},
+{0x5c,0x01000000},
+{0x60,0xc2002334},
+{0x64,0x825860fa},
+{0x68,0x820060fa},
+{0x6c,0xda002500},
+{0x70,0x80a34001},
+{0x74,0x0a80004d},
+{0x78,0x01000000},
+{0x7c,0xd6002748},
+{0xf0,0x7b},
+{0x00,0x80a2e000},
+{0x04,0x1480001d},
+{0x08,0x8202ffff},
+{0x0c,0xc2002514},
+{0x10,0x80a06001},
+{0x14,0x32800045},
+{0x18,0xc0202748},
+{0x1c,0xc2002610},
+{0x20,0x80a06000},
+{0x24,0x32800004},
+{0x28,0xc200254c},
+{0x2c,0x1080003f},
+{0x30,0xc0202748},
+{0x34,0x80886040},
+{0x38,0x32800006},
+{0x3c,0xd800239c},
+{0x40,0x80a2e000},
+{0x44,0x0680000d},
+{0x48,0x8202e001},
+{0x4c,0xd800239c},
+{0x50,0x0300003f},
+{0x54,0x9b332010},
+{0x58,0x821063ff},
+{0x5c,0x980b0001},
+{0x60,0x9a38000d},
+{0x64,0x9a23400c},
+{0x68,0x80a2c00d},
+{0x6c,0x06800005},
+{0x70,0x03296956},
+{0x74,0x8202ffff},
+{0x78,0x1080002c},
+{0x7c,0xc2202748},
+{0xf0,0x7c},
+{0x00,0x9a10625a},
+{0x04,0xc200250c},
+{0x08,0x80a0400d},
+{0x0c,0x02800004},
+{0x10,0xb0102000},
+{0x14,0xda20250c},
+{0x18,0xc0202744},
+{0x1c,0x832e2002},
+{0x20,0x9200674c},
+{0x24,0xc200674c},
+{0x28,0x90102610},
+{0x2c,0x80a06000},
+{0x30,0x0280000d},
+{0x34,0xb0062001},
+{0x38,0x7fffffa7},
+{0x3c,0x01000000},
+{0x40,0xc2002300},
+{0x44,0xda002308},
+{0x48,0x82584001},
+{0x4c,0x9a5b400d},
+{0x50,0x8200400d},
+{0x54,0x83286006},
+{0x58,0x80a20001},
+{0x5c,0x0a800013},
+{0x60,0x01000000},
+{0x64,0x80a6200f},
+{0x68,0x08bfffee},
+{0x6c,0x832e2002},
+{0x70,0x030041eb},
+{0x74,0xc2202748},
+{0x78,0xb010200f},
+{0x7c,0x9b2e2002},
+{0xf0,0x7d},
+{0x00,0xc2036748},
+{0x04,0xb0863fff},
+{0x08,0x12bffffd},
+{0x0c,0xc223674c},
+{0x10,0xc2002610},
+{0x14,0x31000016},
+{0x18,0xc220274c},
+{0x1c,0xb0162330},
+{0x20,0x7fffff60},
+{0x24,0x81e80000},
+{0x28,0x01000000},
+{0x2c,0x81c7e008},
+{0x30,0x81e80000},
+{0x34,0x9de3bf98},
+{0x38,0xa4102000},
+{0x3c,0xe6002514},
+{0x40,0x80a48013},
+{0x44,0x1a800010},
+{0x48,0xa0102000},
+{0x4c,0xa2102610},
+{0x50,0x92100011},
+{0x54,0x7fffff80},
+{0x58,0x90100018},
+{0x5c,0x82102001},
+{0x60,0x83284010},
+{0x64,0xa2046004},
+{0x68,0x80a20019},
+{0x6c,0x1a800003},
+{0x70,0xa0042001},
+{0x74,0xa4148001},
+{0x78,0x80a40013},
+{0x7c,0x0abffff6},
+{0xf0,0x7e},
+{0x00,0x92100011},
+{0x04,0x81c7e008},
+{0x08,0x91e80012},
+{0x0c,0x9de3bf98},
+{0x10,0x03000018},
+{0x14,0x96100018},
+{0x18,0xba1060e0},
+{0x1c,0xb4102000},
+{0x20,0x832ea002},
+{0x24,0xb406a001},
+{0x28,0x80a6a1bf},
+{0x2c,0x08bffffd},
+{0x30,0xc020401d},
+{0x34,0xb4102001},
+{0x38,0xc20022fc},
+{0x3c,0x80a68001},
+{0x40,0x18800020},
+{0x44,0x03000018},
+{0x48,0x821060e0},
+{0x4c,0x9a006004},
+{0x50,0x19000017},
+{0x54,0xc20022f8},
+{0x58,0xb2102001},
+{0x5c,0x80a64001},
+{0x60,0xb0132208},
+{0x64,0xb610000b},
+{0x68,0x18800011},
+{0x6c,0xc20ea37f},
+{0x70,0x9e004001},
+{0x74,0xb8036040},
+{0x78,0xfa16c00f},
+{0x7c,0xc216000f},
+{0xf0,0x7f},
+{0x00,0x8220401d},
+{0x04,0xc2270000},
+{0x08,0xfa00247c},
+{0x0c,0xba07401d},
+{0x10,0xb2066001},
+{0x14,0xc20022f8},
+{0x18,0xb606c01d},
+{0x1c,0x80a64001},
+{0x20,0xb006001d},
+{0x24,0x08bffff5},
+{0x28,0xb8072040},
+{0x2c,0xb406a001},
+{0x30,0xc20022fc},
+{0x34,0x80a68001},
+{0x38,0x08bfffe7},
+{0x3c,0x9a036004},
+{0x40,0x81c7e008},
+{0x44,0x81e80000},
+{0x48,0x9de3bf98},
+{0x4c,0xc200254c},
+{0x50,0x80886200},
+{0x54,0x0280000b},
+{0x58,0xc0202598},
+{0x5c,0x11000014},
+{0x60,0x7fffffcb},
+{0x64,0x901222a8},
+{0x68,0x10800007},
+{0x6c,0xee0023a0},
+{0x70,0x03000080},
+{0x74,0x82134001},
+{0x78,0x10800099},
+{0x7c,0xc220254c},
+{0xf0,0x80},
+{0x00,0xee0022ac},
+{0x04,0xaa102000},
+{0x08,0xa12d6003},
+{0x0c,0xc2042660},
+{0x10,0x80a06000},
+{0x14,0x2280008f},
+{0x18,0xaa056001},
+{0x1c,0x80a56000},
+{0x20,0x32800008},
+{0x24,0xda002500},
+{0x28,0xc200259c},
+{0x2c,0x80a06000},
+{0x30,0x1280001d},
+{0x34,0x2d200000},
+{0x38,0x10800012},
+{0x3c,0xac102000},
+{0x40,0xc20022d0},
+{0x44,0x80a34001},
+{0x48,0x38800007},
+{0x4c,0xc0242664},
+{0x50,0xc2002200},
+{0x54,0x80a06000},
+{0x58,0x02800005},
+{0x5c,0x90042660},
+{0x60,0xc0242664},
+{0x64,0x1080007a},
+{0x68,0xc0242660},
+{0x6c,0x7fffff92},
+{0x70,0x92100017},
+{0x74,0xac922000},
+{0x78,0x3280000c},
+{0x7c,0xc2142666},
+{0xf0,0x81},
+{0x00,0xc2142664},
+{0x04,0x80a06000},
+{0x08,0x2280006d},
+{0x0c,0xc0242664},
+{0x10,0xc2042664},
+{0x14,0x1b3fffc0},
+{0x18,0x8200400d},
+{0x1c,0x10800069},
+{0x20,0xc2242664},
+{0x24,0xc2142666},
+{0x28,0x80a06000},
+{0x2c,0x0280000a},
+{0x30,0x80a56000},
+{0x34,0xc2042664},
+{0x38,0x82007fff},
+{0x3c,0xc2242664},
+{0x40,0xc2142666},
+{0x44,0x80a06000},
+{0x48,0x3280005f},
+{0x4c,0xc2002598},
+{0x50,0x80a56000},
+{0x54,0x32800006},
+{0x58,0xda00254c},
+{0x5c,0xc200254c},
+{0x60,0x82106001},
+{0x64,0x10800057},
+{0x68,0xc220254c},
+{0x6c,0x808b6200},
+{0x70,0x02bfffc0},
+{0x74,0x03296956},
+{0x78,0xda00250c},
+{0x7c,0x8210625a},
+{0xf0,0x82},
+{0x00,0x80a34001},
+{0x04,0x02800006},
+{0x08,0x031696a9},
+{0x0c,0x821061a5},
+{0x10,0x80a34001},
+{0x14,0x3280004c},
+{0x18,0xc2002598},
+{0x1c,0xc2042660},
+{0x20,0x9b306016},
+{0x24,0x82086fff},
+{0x28,0xa3386006},
+{0x2c,0xa60b603f},
+{0x30,0xa8046001},
+{0x34,0xa404e001},
+{0x38,0x90100014},
+{0x3c,0x92100012},
+{0x40,0x94102000},
+{0x44,0x7ffffa9c},
+{0x48,0xd600246c},
+{0x4c,0x80a22000},
+{0x50,0x3280003b},
+{0x54,0xc0242664},
+{0x58,0x80a46001},
+{0x5c,0x0480000b},
+{0x60,0x90046002},
+{0x64,0x90100011},
+{0x68,0x92100012},
+{0x6c,0x94102000},
+{0x70,0x7ffffa91},
+{0x74,0xd600246c},
+{0x78,0x80a22000},
+{0x7c,0x32800030},
+{0xf0,0x83},
+{0x00,0xc0242664},
+{0x04,0x90046002},
+{0x08,0xc2002308},
+{0x0c,0x80a20001},
+{0x10,0x1a80000a},
+{0x14,0x80a4e001},
+{0x18,0x92100012},
+{0x1c,0x94102000},
+{0x20,0x7ffffa85},
+{0x24,0xd600246c},
+{0x28,0x80a22000},
+{0x2c,0x32800024},
+{0x30,0xc0242664},
+{0x34,0x80a4e001},
+{0x38,0x0480000b},
+{0x3c,0x9204e002},
+{0x40,0x90100014},
+{0x44,0x92100013},
+{0x48,0x94102000},
+{0x4c,0x7ffffa7a},
+{0x50,0xd600246c},
+{0x54,0x80a22000},
+{0x58,0x32800019},
+{0x5c,0xc0242664},
+{0x60,0x9204e002},
+{0x64,0xc2002300},
+{0x68,0x80a24001},
+{0x6c,0x3a80000a},
+{0x70,0xc2002570},
+{0x74,0x90100014},
+{0x78,0x94102000},
+{0x7c,0x7ffffa6e},
+{0xf0,0x84},
+{0x00,0xd600246c},
+{0x04,0x80a22000},
+{0x08,0x3280000d},
+{0x0c,0xc0242664},
+{0x10,0xc2002570},
+{0x14,0x82006001},
+{0x18,0x80a06004},
+{0x1c,0x08800009},
+{0x20,0xc2202570},
+{0x24,0xc200254c},
+{0x28,0x1b000080},
+{0x2c,0x8210400d},
+{0x30,0xc220254c},
+{0x34,0x1080000a},
+{0x38,0xc0202570},
+{0x3c,0xc0242660},
+{0x40,0xc2002598},
+{0x44,0x82104016},
+{0x48,0xc2202598},
+{0x4c,0xaa056001},
+{0x50,0x80a56013},
+{0x54,0x04bfff6e},
+{0x58,0xa12d6003},
+{0x5c,0xc2002598},
+{0x60,0x80a06000},
+{0x64,0x22800002},
+{0x68,0xc0202570},
+{0x6c,0xc200259c},
+{0x70,0x80a06000},
+{0x74,0x2280000b},
+{0x78,0xda002500},
+{0x7c,0xc2002660},
+{0xf0,0x85},
+{0x00,0x80a06000},
+{0x04,0x32800007},
+{0x08,0xda002500},
+{0x0c,0x03000004},
+{0x10,0xc2202660},
+{0x14,0xc2002248},
+{0x18,0xc2202664},
+{0x1c,0xda002500},
+{0x20,0xc20022d0},
+{0x24,0x80a34001},
+{0x28,0x1880002c},
+{0x2c,0x01000000},
+{0x30,0xc2002200},
+{0x34,0x80a06000},
+{0x38,0x12800028},
+{0x3c,0xaa102000},
+{0x40,0xc2002514},
+{0x44,0x80a54001},
+{0x48,0x1a800024},
+{0x4c,0x94102001},
+{0x50,0x972d6002},
+{0x54,0xc202e610},
+{0x58,0x8330600c},
+{0x5c,0x80886001},
+{0x60,0x3280001a},
+{0x64,0xaa056001},
+{0x68,0x9b2a8015},
+{0x6c,0xc2002598},
+{0x70,0x8088400d},
+{0x74,0x32800015},
+{0x78,0xaa056001},
+{0x7c,0x98102001},
+{0xf0,0x86},
+{0x00,0x9b2b2003},
+{0x04,0xc2036660},
+{0x08,0x80a06000},
+{0x0c,0x1280000b},
+{0x10,0x98032001},
+{0x14,0xc202e610},
+{0x18,0xc2236660},
+{0x1c,0xc200254c},
+{0x20,0x80886200},
+{0x24,0x22800003},
+{0x28,0xc2002378},
+{0x2c,0xc200239c},
+{0x30,0x10800005},
+{0x34,0xc2236664},
+{0x38,0x80a32013},
+{0x3c,0x04bffff2},
+{0x40,0x9b2b2003},
+{0x44,0xaa056001},
+{0x48,0xc2002514},
+{0x4c,0x80a54001},
+{0x50,0x0abfffe1},
+{0x54,0x972d6002},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x98102000},
+{0x64,0xc2002514},
+{0x68,0x80a30001},
+{0x6c,0x1a80000b},
+{0x70,0x033fc180},
+{0x74,0x96106004},
+{0x78,0x832b2002},
+{0x7c,0xda006610},
+{0xf0,0x87},
+{0x00,0xda20400b},
+{0x04,0x98032001},
+{0x08,0xc2002514},
+{0x0c,0x80a30001},
+{0x10,0x0abffffb},
+{0x14,0x832b2002},
+{0x18,0xda00254c},
+{0x1c,0x808b6080},
+{0x20,0x32800008},
+{0x24,0xc208254e},
+{0x28,0xc2002514},
+{0x2c,0x9a136080},
+{0x30,0x82106100},
+{0x34,0xda20254c},
+{0x38,0xc2202514},
+{0x3c,0xc208254e},
+{0x40,0x80a06000},
+{0x44,0x1280000a},
+{0x48,0xc20023c8},
+{0x4c,0x83306016},
+{0x50,0x80886001},
+{0x54,0x22800006},
+{0x58,0xc20023c8},
+{0x5c,0xc2002514},
+{0x60,0x82106200},
+{0x64,0xc2202514},
+{0x68,0xc20023c8},
+{0x6c,0x83306013},
+{0x70,0x80886001},
+{0x74,0x02800012},
+{0x78,0xda002514},
+{0x7c,0xc2002200},
+{0xf0,0x88},
+{0x00,0x80a06000},
+{0x04,0x0280000e},
+{0x08,0x01000000},
+{0x0c,0x033fc000},
+{0x10,0x8210605c},
+{0x14,0xc2004000},
+{0x18,0x83286010},
+{0x1c,0x9a134001},
+{0x20,0xc200254c},
+{0x24,0x80886004},
+{0x28,0x02800004},
+{0x2c,0xda202514},
+{0x30,0x82136800},
+{0x34,0xc2202514},
+{0x38,0xda002514},
+{0x3c,0x80a36000},
+{0x40,0x2280000a},
+{0x44,0xda002514},
+{0x48,0xc20021e0},
+{0x4c,0x80a06000},
+{0x50,0x22800006},
+{0x54,0xda002514},
+{0x58,0x03000004},
+{0x5c,0x82134001},
+{0x60,0xc2202514},
+{0x64,0xda002514},
+{0x68,0x033fc180},
+{0x6c,0x81c3e008},
+{0x70,0xda204000},
+{0x74,0xc2002200},
+{0x78,0x80a06000},
+{0x7c,0x1280001a},
+{0xf0,0x89},
+{0x00,0x01000000},
+{0x04,0xda002500},
+{0x08,0xc20021f0},
+{0x0c,0x80a34001},
+{0x10,0x18800015},
+{0x14,0x01000000},
+{0x18,0xd800254c},
+{0x1c,0x808b2400},
+{0x20,0x12800011},
+{0x24,0x01000000},
+{0x28,0xda002514},
+{0x2c,0xc20021e8},
+{0x30,0x80a34001},
+{0x34,0x2a80000c},
+{0x38,0xc02025a0},
+{0x3c,0x03000100},
+{0x40,0xda0025a0},
+{0x44,0x96130001},
+{0x48,0x9810000d},
+{0x4c,0x9a036001},
+{0x50,0xc20021ec},
+{0x54,0x80a30001},
+{0x58,0x08800003},
+{0x5c,0xda2025a0},
+{0x60,0xd620254c},
+{0x64,0x81c3e008},
+{0x68,0x01000000},
+{0x6c,0x9de3bf98},
+{0x70,0x833e201f},
+{0x74,0xd0002320},
+{0x78,0x82204018},
+{0x7c,0x80a22000},
+{0xf0,0x8a},
+{0x00,0x02800016},
+{0x04,0x9b30601f},
+{0x08,0x033fc000},
+{0x0c,0xa0106020},
+{0x10,0xc200231c},
+{0x14,0x80a00001},
+{0x18,0x82402000},
+{0x1c,0x8088400d},
+{0x20,0xda002318},
+{0x24,0x821e000d},
+{0x28,0x02800009},
+{0x2c,0xb0086001},
+{0x30,0x80a0000d},
+{0x34,0x82603fff},
+{0x38,0x7ffff35c},
+{0x3c,0xc2240000},
+{0x40,0xc2002318},
+{0x44,0x10800005},
+{0x48,0xc2240000},
+{0x4c,0x033fc000},
+{0x50,0x82106020},
+{0x54,0xf0204000},
+{0x58,0x81c7e008},
+{0x5c,0x81e80000},
+{0x60,0x9de3bf98},
+{0x64,0xc2002514},
+{0x68,0x80a06000},
+{0x6c,0x1280000a},
+{0x70,0x90102001},
+{0x74,0xc200254c},
+{0x78,0x9b306003},
+{0x7c,0x83306002},
+{0xf0,0x8b},
+{0x00,0x82086001},
+{0x04,0x9a0b6001},
+{0x08,0x80a0400d},
+{0x0c,0x22800005},
+{0x10,0xc2002560},
+{0x14,0x82102005},
+{0x18,0x10800007},
+{0x1c,0xc2202560},
+{0x20,0x9a007fff},
+{0x24,0x80a06000},
+{0x28,0x02800005},
+{0x2c,0x90102002},
+{0x30,0xda202560},
+{0x34,0x7fffffce},
+{0x38,0x01000000},
+{0x3c,0xc200254c},
+{0x40,0x9a004001},
+{0x44,0x9a0b6008},
+{0x48,0x82087ff7},
+{0x4c,0x8210400d},
+{0x50,0xc220254c},
+{0x54,0x81c7e008},
+{0x58,0x81e80000},
+{0x5c,0x01000000},
+{0x60,0x27001040},
+{0x64,0xa614e00f},
+{0x68,0xe6a00040},
+{0x6c,0x01000000},
+{0x70,0x81c3e008},
+{0x74,0x01000000},
+{0x78,0x9de3bf98},
+{0x7c,0xc2002508},
+{0xf0,0x8c},
+{0x00,0x80a06000},
+{0x04,0x0280000f},
+{0x08,0x1b3fc180},
+{0x0c,0x82102001},
+{0x10,0x9a13603c},
+{0x14,0xc2234000},
+{0x18,0xc2002508},
+{0x1c,0x820860ff},
+{0x20,0x80a04018},
+{0x24,0x12800005},
+{0x28,0x033fc180},
+{0x2c,0x7fffffec},
+{0x30,0x01000000},
+{0x34,0x30bffff9},
+{0x38,0x8210603c},
+{0x3c,0xc0204000},
+{0x40,0x81c7e008},
+{0x44,0x81e80000},
+{0x48,0x9de3bf98},
+{0x4c,0x7fffffeb},
+{0x50,0x901020a5},
+{0x54,0x7ffff573},
+{0x58,0x01000000},
+{0x5c,0xc20023c8},
+{0x60,0x83306012},
+{0x64,0x80886001},
+{0x68,0x02800007},
+{0x6c,0x01000000},
+{0x70,0x7ffff658},
+{0x74,0x01000000},
+{0x78,0x7ffff5f9},
+{0x7c,0x01000000},
+{0xf0,0x8d},
+{0x00,0x30800005},
+{0x04,0x7ffff5f6},
+{0x08,0x01000000},
+{0x0c,0x7ffff651},
+{0x10,0x01000000},
+{0x14,0x7ffff5b0},
+{0x18,0x01000000},
+{0x1c,0xc20023c8},
+{0x20,0x80886010},
+{0x24,0x02800005},
+{0x28,0x01000000},
+{0x2c,0x7ffff6e1},
+{0x30,0x01000000},
+{0x34,0x30800003},
+{0x38,0x7ffff755},
+{0x3c,0x01000000},
+{0x40,0x7ffff7b8},
+{0x44,0xb01020aa},
+{0x48,0x7ffff80a},
+{0x4c,0x01000000},
+{0x50,0x7ffffa9e},
+{0x54,0x01000000},
+{0x58,0x7ffff9d3},
+{0x5c,0x01000000},
+{0x60,0x7ffffad3},
+{0x64,0x01000000},
+{0x68,0x7ffffa58},
+{0x6c,0x90102001},
+{0x70,0x7ffffcc0},
+{0x74,0x01000000},
+{0x78,0x7ffffd04},
+{0x7c,0x01000000},
+{0xf0,0x8e},
+{0x00,0x7ffffbf3},
+{0x04,0x01000000},
+{0x08,0x7ffffd83},
+{0x0c,0x01000000},
+{0x10,0x7fffffba},
+{0x14,0x9010205a},
+{0x18,0x7ffffe2c},
+{0x1c,0x01000000},
+{0x20,0x7fffff55},
+{0x24,0x01000000},
+{0x28,0x7fffff0e},
+{0x2c,0x01000000},
+{0x30,0x7fffff8c},
+{0x34,0x01000000},
+{0x38,0x7fffffb0},
+{0x3c,0x81e80000},
+{0x40,0x01000000},
+{0x44,0x9de3bf98},
+{0x48,0xa4102000},
+{0x4c,0xc20023d4},
+{0x50,0x80a48001},
+{0x54,0xa2102000},
+{0x58,0x1a800016},
+{0x5c,0xa0102000},
+{0x60,0xc200247c},
+{0x64,0x80a40001},
+{0x68,0x3a80000f},
+{0x6c,0xa2046001},
+{0x70,0x7ffff1b2},
+{0x74,0x90100010},
+{0x78,0x92100008},
+{0x7c,0x7ffff17c},
+{0xf0,0x8f},
+{0x00,0x90100011},
+{0x04,0x0300003f},
+{0x08,0xda002274},
+{0x0c,0x821063ff},
+{0x10,0x9a0b4001},
+{0x14,0x80a2000d},
+{0x18,0xa4400012},
+{0x1c,0x10bffff1},
+{0x20,0xa0042001},
+{0x24,0xc20023d4},
+{0x28,0x10bfffec},
+{0x2c,0x80a44001},
+{0x30,0xc2102274},
+{0x34,0x80a48001},
+{0x38,0x08800005},
+{0x3c,0x033fc180},
+{0x40,0x1b004000},
+{0x44,0x8210603c},
+{0x48,0xda204000},
+{0x4c,0x81c7e008},
+{0x50,0x81e80000},
+{0x54,0x9de3bf98},
+{0x58,0xf600227c},
+{0x5c,0x80a6e000},
+{0x60,0x02800034},
+{0x64,0x01000000},
+{0x68,0xc2002594},
+{0x6c,0x80a06001},
+{0x70,0x12800030},
+{0x74,0xb0102000},
+{0x78,0xfa0022f8},
+{0x7c,0xc200247c},
+{0xf0,0x90},
+{0x00,0xb45f4001},
+{0x04,0x3b000007},
+{0x08,0xba1763ff},
+{0x0c,0x8336e00d},
+{0x10,0x9e08401d},
+{0x14,0x80a6001a},
+{0x18,0xb2102000},
+{0x1c,0x9a0ec01d},
+{0x20,0x1a800015},
+{0x24,0xb8102000},
+{0x28,0x03000017},
+{0x2c,0x96106208},
+{0x30,0x82007c00},
+{0x34,0x98106330},
+{0x38,0xba07001c},
+{0x3c,0xc217400b},
+{0x40,0x80a3c001},
+{0x44,0xb2400019},
+{0x48,0xc217400c},
+{0x4c,0x80a0400d},
+{0x50,0x0a800005},
+{0x54,0xb8072001},
+{0x58,0x80a0400f},
+{0x5c,0x08800004},
+{0x60,0x80a7001a},
+{0x64,0xb0062001},
+{0x68,0x80a7001a},
+{0x6c,0x0abffff4},
+{0x70,0xba07001c},
+{0x74,0xb936e01a},
+{0x78,0x80a6401c},
+{0x7c,0x14800003},
+{0xf0,0x91},
+{0x00,0xba102001},
+{0x04,0xba102000},
+{0x08,0x80a6001c},
+{0x0c,0x14800003},
+{0x10,0x82102001},
+{0x14,0x82102000},
+{0x18,0x80974001},
+{0x1c,0x02800005},
+{0x20,0x033fc180},
+{0x24,0x3b008000},
+{0x28,0x8210603c},
+{0x2c,0xfa204000},
+{0x30,0x81c7e008},
+{0x34,0x81e80000},
+{0x38,0xda00247c},
+{0x3c,0xc20022f8},
+{0x40,0x8258400d},
+{0x44,0x83306001},
+{0x48,0x9a102000},
+{0x4c,0x80a34001},
+{0x50,0x1a80002c},
+{0x54,0x03000017},
+{0x58,0x94106208},
+{0x5c,0x0300003f},
+{0x60,0x901063ff},
+{0x64,0xd8002544},
+{0x68,0x80a32008},
+{0x6c,0x92036001},
+{0x70,0x0880000d},
+{0x74,0x972b6002},
+{0x78,0xda02c00a},
+{0x7c,0x83336010},
+{0xf0,0x92},
+{0x00,0x82004001},
+{0x04,0x9a0b4008},
+{0x08,0x81800000},
+{0x0c,0x01000000},
+{0x10,0x01000000},
+{0x14,0x01000000},
+{0x18,0x8270400c},
+{0x1c,0x1080000a},
+{0x20,0x9a03400d},
+{0x24,0xda02c00a},
+{0x28,0x83336010},
+{0x2c,0x81800000},
+{0x30,0x01000000},
+{0x34,0x01000000},
+{0x38,0x01000000},
+{0x3c,0x8270400c},
+{0x40,0x9a0b4008},
+{0x44,0x81800000},
+{0x48,0x01000000},
+{0x4c,0x01000000},
+{0x50,0x01000000},
+{0x54,0x9a73400c},
+{0x58,0x83286010},
+{0x5c,0x8200400d},
+{0x60,0xc222c00a},
+{0x64,0xda00247c},
+{0x68,0xc20022f8},
+{0x6c,0x8258400d},
+{0x70,0x83306001},
+{0x74,0x80a24001},
+{0x78,0x0abfffdb},
+{0x7c,0x9a100009},
+{0xf0,0x93},
+{0x00,0x81c3e008},
+{0x04,0x01000000},
+{0x08,0x9de3bf98},
+{0x0c,0xc2002544},
+{0x10,0x82006001},
+{0x14,0xc2202544},
+{0x18,0x03000017},
+{0x1c,0xb4106208},
+{0x20,0x9e100018},
+{0x24,0x031fffdf},
+{0x28,0xb01063ff},
+{0x2c,0xba102000},
+{0x30,0xb72f6002},
+{0x34,0xc2002544},
+{0x38,0x80a06009},
+{0x3c,0xb2076001},
+{0x40,0x12800007},
+{0x44,0xb810001b},
+{0x48,0xc206c01a},
+{0x4c,0x83306001},
+{0x50,0x82084018},
+{0x54,0xc226c01a},
+{0x58,0xc2002544},
+{0x5c,0x80a06008},
+{0x60,0x08800006},
+{0x64,0xc207001a},
+{0x68,0xfa03c01c},
+{0x6c,0xbb376001},
+{0x70,0x10800003},
+{0x74,0xba0f4018},
+{0x78,0xfa03c01c},
+{0x7c,0x8200401d},
+{0xf0,0x94},
+{0x00,0xc227001a},
+{0x04,0x80a660b5},
+{0x08,0x08bfffea},
+{0x0c,0xba100019},
+{0x10,0x81c7e008},
+{0x14,0x81e80000},
+{0x18,0x9a102000},
+{0x1c,0x832b6002},
+{0x20,0x9a036001},
+{0x24,0x80a360b5},
+{0x28,0x08bffffd},
+{0x2c,0xc0220001},
+{0x30,0x81c3e008},
+{0x34,0x01000000},
+{0x38,0xc200247c},
+{0x3c,0xda0022f8},
+{0x40,0x8258400d},
+{0x44,0x97306001},
+{0x48,0x98102000},
+{0x4c,0x80a3000b},
+{0x50,0x1680000f},
+{0x54,0x03000016},
+{0x58,0x90106330},
+{0x5c,0x82006400},
+{0x60,0x92106208},
+{0x64,0x0307ffc7},
+{0x68,0x941063ff},
+{0x6c,0x9b2b2002},
+{0x70,0xc2034009},
+{0x74,0x83306003},
+{0x78,0x8208400a},
+{0x7c,0x98032001},
+{0xf0,0x95},
+{0x00,0x80a3000b},
+{0x04,0x06bffffa},
+{0x08,0xc2234008},
+{0x0c,0x03000018},
+{0x10,0x9a1060e0},
+{0x14,0x98102000},
+{0x18,0x832b2002},
+{0x1c,0x98032001},
+{0x20,0x80a3216b},
+{0x24,0x04bffffd},
+{0x28,0xc020400d},
+{0x2c,0x81c3e008},
+{0x30,0x01000000},
+{0x34,0x9de3bf98},
+{0x38,0xc200253c},
+{0x3c,0x80a06000},
+{0x40,0x12800048},
+{0x44,0xb0102000},
+{0x48,0xd6002460},
+{0x4c,0x82102080},
+{0x50,0x80a2e000},
+{0x54,0x02800043},
+{0x58,0xc220256c},
+{0x5c,0x10800005},
+{0x60,0xb0102001},
+{0x64,0xc220256c},
+{0x68,0x1080003e},
+{0x6c,0xf00e2468},
+{0x70,0xd80022fc},
+{0x74,0x80a6000c},
+{0x78,0x1880002d},
+{0x7c,0x9a102000},
+{0xf0,0x96},
+{0x00,0xd40022f8},
+{0x04,0x33000018},
+{0x08,0xb6102001},
+{0x0c,0x80a6c00a},
+{0x10,0x18800020},
+{0x14,0xb4102000},
+{0x18,0x832e2002},
+{0x1c,0xb8006040},
+{0x20,0xa01660e0},
+{0x24,0x901660a0},
+{0x28,0x92166120},
+{0x2c,0xde0022f8},
+{0x30,0xfa070010},
+{0x34,0x80a7400b},
+{0x38,0x26800013},
+{0x3c,0xb606e001},
+{0x40,0x80a6e001},
+{0x44,0x22800007},
+{0x48,0xc20022f8},
+{0x4c,0xc2070008},
+{0x50,0x80a74001},
+{0x54,0x2480000c},
+{0x58,0xb606e001},
+{0x5c,0xc20022f8},
+{0x60,0x80a6c001},
+{0x64,0x22800007},
+{0x68,0xb406a001},
+{0x6c,0xc2070009},
+{0x70,0x80a74001},
+{0x74,0x26800004},
+{0x78,0xb606e001},
+{0x7c,0xb406a001},
+{0xf0,0x97},
+{0x00,0xb606e001},
+{0x04,0x80a6c00f},
+{0x08,0x08bfffea},
+{0x0c,0xb8072040},
+{0x10,0x80a6800d},
+{0x14,0x34800002},
+{0x18,0x9a10001a},
+{0x1c,0xb0062001},
+{0x20,0x80a6000c},
+{0x24,0x28bfffda},
+{0x28,0xb6102001},
+{0x2c,0xb0102000},
+{0x30,0xc20e2464},
+{0x34,0x80a06000},
+{0x38,0x22800006},
+{0x3c,0xb0062001},
+{0x40,0x80a34001},
+{0x44,0x34bfffc8},
+{0x48,0xc20e2278},
+{0x4c,0xb0062001},
+{0x50,0x80a62003},
+{0x54,0x24bffff8},
+{0x58,0xc20e2464},
+{0x5c,0xb0102000},
+{0x60,0x81c7e008},
+{0x64,0x81e80000},
+{0x68,0xda00247c},
+{0x6c,0xc20022f8},
+{0x70,0x8258400d},
+{0x74,0x83306001},
+{0x78,0x9a102000},
+{0x7c,0x80a34001},
+{0xf0,0x98},
+{0x00,0x1a800018},
+{0x04,0x03000017},
+{0x08,0x96106208},
+{0x0c,0x031fffdf},
+{0x10,0x921063ff},
+{0x14,0xd8002544},
+{0x18,0x94036001},
+{0x1c,0x80a32008},
+{0x20,0x08800006},
+{0x24,0x9b2b6002},
+{0x28,0xc203400b},
+{0x2c,0x83306001},
+{0x30,0x10800003},
+{0x34,0x82084009},
+{0x38,0xc203400b},
+{0x3c,0x8258400c},
+{0x40,0xc223400b},
+{0x44,0xda00247c},
+{0x48,0xc20022f8},
+{0x4c,0x8258400d},
+{0x50,0x83306001},
+{0x54,0x80a28001},
+{0x58,0x0abfffef},
+{0x5c,0x9a10000a},
+{0x60,0x81c3e008},
+{0x64,0x01000000},
+{0x68,0x9de3bf98},
+{0x6c,0xd600254c},
+{0x70,0x808ae010},
+{0x74,0x22800010},
+{0x78,0xc2002574},
+{0x7c,0x033fc200},
+{0xf0,0x99},
+{0x00,0xda002334},
+{0x04,0xd8002298},
+{0x08,0x82106070},
+{0x0c,0xd8204000},
+{0x10,0x960affef},
+{0x14,0x9a036001},
+{0x18,0x11000017},
+{0x1c,0xd620254c},
+{0x20,0xda202574},
+{0x24,0xc0202544},
+{0x28,0x7fffff5c},
+{0x2c,0x90122208},
+{0x30,0xc2002574},
+{0x34,0x80a06000},
+{0x38,0x22800011},
+{0x3c,0xc2002578},
+{0x40,0x82007fff},
+{0x44,0x7ffff2d3},
+{0x48,0xc2202574},
+{0x4c,0x7fffff2f},
+{0x50,0x01000000},
+{0x54,0xc2002574},
+{0x58,0x80a06000},
+{0x5c,0x32800008},
+{0x60,0xc2002578},
+{0x64,0x7ffffef5},
+{0x68,0x01000000},
+{0x6c,0x11000016},
+{0x70,0x7ffffc87},
+{0x74,0x90122330},
+{0x78,0xc2002578},
+{0x7c,0x80a06000},
+{0xf0,0x9a},
+{0x00,0x1280001a},
+{0x04,0x01000000},
+{0x08,0xc2002574},
+{0x0c,0x80a06000},
+{0x10,0x12800016},
+{0x14,0x01000000},
+{0x18,0x7fffff67},
+{0x1c,0x01000000},
+{0x20,0x80a22000},
+{0x24,0x02800007},
+{0x28,0xd020253c},
+{0x2c,0x7fffffaf},
+{0x30,0x01000000},
+{0x34,0xc200253c},
+{0x38,0x1080000c},
+{0x3c,0xc2202574},
+{0x40,0xc2002334},
+{0x44,0x82006001},
+{0x48,0xda00254c},
+{0x4c,0xc2202574},
+{0x50,0x9a136010},
+{0x54,0x82102001},
+{0x58,0xda20254c},
+{0x5c,0xc2202578},
+{0x60,0x7ffff8ba},
+{0x64,0x91e82000},
+{0x68,0x01000000},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0x9de3bf98},
+{0x78,0xd800254c},
+{0x7c,0x808b2010},
+{0xf0,0x9b},
+{0x00,0x0280002c},
+{0x04,0x033fc200},
+{0x08,0x82106030},
+{0x0c,0xda004000},
+{0x10,0xc200257c},
+{0x14,0x80a34001},
+{0x18,0x02800004},
+{0x1c,0x03000800},
+{0x20,0x82130001},
+{0x24,0xc220254c},
+{0x28,0xc2002344},
+{0x2c,0x80a34001},
+{0x30,0x3280000d},
+{0x34,0xc208254d},
+{0x38,0xc2002200},
+{0x3c,0x80a06000},
+{0x40,0x32800009},
+{0x44,0xc208254d},
+{0x48,0x7ffffe83},
+{0x4c,0x01000000},
+{0x50,0x7ffff2ca},
+{0x54,0x01000000},
+{0x58,0x7ffff323},
+{0x5c,0x01000000},
+{0x60,0xc208254d},
+{0x64,0x80a06000},
+{0x68,0x02800012},
+{0x6c,0x033fc180},
+{0x70,0xc0204000},
+{0x74,0xb0102002},
+{0x78,0x11000099},
+{0x7c,0x7ffff12b},
+{0xf0,0x9c},
+{0x00,0x9012233c},
+{0x04,0x7ffffdba},
+{0x08,0x90102002},
+{0x0c,0xb0863fff},
+{0x10,0x1cbffffb},
+{0x14,0x11000099},
+{0x18,0xc210254c},
+{0x1c,0x80886001},
+{0x20,0x32800002},
+{0x24,0xc020250c},
+{0x28,0x7ffff146},
+{0x2c,0x91e82015},
+{0x30,0x01000000},
+{0x34,0x81c7e008},
+{0x38,0x81e80000},
+{0x3c,0x9de3bf98},
+{0x40,0x96100018},
+{0x44,0x98100019},
+{0x48,0x9a10001a},
+{0x4c,0x9e10001b},
+{0x50,0xb0102000},
+{0x54,0xb4102000},
+{0x58,0xb2102000},
+{0x5c,0xb72e2002},
+{0x60,0xf816c00b},
+{0x64,0xc216c00c},
+{0x68,0x80a70001},
+{0x6c,0x0a80000a},
+{0x70,0xfa16c00d},
+{0x74,0x80a0401d},
+{0x78,0x1a80000f},
+{0x7c,0x80a66000},
+{0xf0,0x9d},
+{0x00,0x80a7001d},
+{0x04,0x1a80000b},
+{0x08,0x8210001d},
+{0x0c,0x10800009},
+{0x10,0x8210001c},
+{0x14,0x80a0401d},
+{0x18,0x08800007},
+{0x1c,0x80a66000},
+{0x20,0x80a7001d},
+{0x24,0x08800003},
+{0x28,0x8210001d},
+{0x2c,0x8210001c},
+{0x30,0x80a66000},
+{0x34,0x22800002},
+{0x38,0x83286010},
+{0x3c,0xb2066001},
+{0x40,0xb4068001},
+{0x44,0x80a66001},
+{0x48,0x04bfffe6},
+{0x4c,0xb606e002},
+{0x50,0x832e2002},
+{0x54,0xb0062001},
+{0x58,0x80a620b5},
+{0x5c,0x04bfffde},
+{0x60,0xf423c001},
+{0x64,0x81c7e008},
+{0x68,0x81e80000},
+{0x6c,0x98102000},
+{0x70,0x9b2b2002},
+{0x74,0x98032001},
+{0x78,0xc202000d},
+{0x7c,0x80a320b5},
+{0xf0,0x9e},
+{0x00,0x04bffffc},
+{0x04,0xc222400d},
+{0x08,0x81c3e008},
+{0x0c,0x01000000},
+{0x10,0x9de3bf98},
+{0x14,0x7ffffdb2},
+{0x18,0x01000000},
+{0x1c,0x0300003f},
+{0x20,0x98106300},
+{0x24,0xc2002508},
+{0x28,0x8088400c},
+{0x2c,0x02800009},
+{0x30,0x033fc040},
+{0x34,0xda002508},
+{0x38,0xc200254c},
+{0x3c,0x9a0b400c},
+{0x40,0x8210400d},
+{0x44,0xc220254c},
+{0x48,0xc0202508},
+{0x4c,0x033fc040},
+{0x50,0xe4002500},
+{0x54,0x8210600c},
+{0x58,0x80a4a029},
+{0x5c,0x08800008},
+{0x60,0xc0204000},
+{0x64,0x7fffff41},
+{0x68,0x01000000},
+{0x6c,0x7fffff82},
+{0x70,0x01000000},
+{0x74,0x1080008a},
+{0x78,0xc2002500},
+{0x7c,0x80a4a000},
+{0xf0,0x9f},
+{0x00,0x12800013},
+{0x04,0x80a4a014},
+{0x08,0x7ffff0ee},
+{0x0c,0x90102000},
+{0x10,0x033fc200},
+{0x14,0xda002330},
+{0x18,0x82106074},
+{0x1c,0xda204000},
+{0x20,0x7ffff0d7},
+{0x24,0x90102001},
+{0x28,0x7ffff1af},
+{0x2c,0x01000000},
+{0x30,0x80a22000},
+{0x34,0x3280007a},
+{0x38,0xc2002500},
+{0x3c,0x7ffffd4c},
+{0x40,0x90102001},
+{0x44,0x10800076},
+{0x48,0xc2002500},
+{0x4c,0x1880000c},
+{0x50,0x80a4a015},
+{0x54,0x808ca001},
+{0x58,0x32800071},
+{0x5c,0xc2002500},
+{0x60,0x9004bffe},
+{0x64,0x7fffefa5},
+{0x68,0x91322001},
+{0x6c,0x7ffff0b8},
+{0x70,0x01000000},
+{0x74,0x1080006a},
+{0x78,0xc2002500},
+{0x7c,0x18800017},
+{0xf0,0xa0},
+{0x00,0x80a4a016},
+{0x04,0x7ffffdd0},
+{0x08,0x01000000},
+{0x0c,0x7ffff196},
+{0x10,0x01000000},
+{0x14,0x80a22000},
+{0x18,0x32800005},
+{0x1c,0x033fc180},
+{0x20,0x7ffffd33},
+{0x24,0x90102001},
+{0x28,0x033fc180},
+{0x2c,0xda0025b0},
+{0x30,0x82106038},
+{0x34,0xda204000},
+{0x38,0x033fc200},
+{0x3c,0xda00232c},
+{0x40,0x82106074},
+{0x44,0xda204000},
+{0x48,0x7ffff0ad},
+{0x4c,0x90102000},
+{0x50,0x10800053},
+{0x54,0xc2002500},
+{0x58,0x18800007},
+{0x5c,0x80a4a018},
+{0x60,0x11000017},
+{0x64,0x7ffffe6d},
+{0x68,0x90122208},
+{0x6c,0x1080004c},
+{0x70,0xc2002500},
+{0x74,0x18800015},
+{0x78,0x80a4a028},
+{0x7c,0x033fc140},
+{0xf0,0xa1},
+{0x00,0x82106048},
+{0x04,0xda004000},
+{0x08,0x03000040},
+{0x0c,0x808b4001},
+{0x10,0x22800007},
+{0x14,0x11000016},
+{0x18,0x11000015},
+{0x1c,0x13000018},
+{0x20,0x90122180},
+{0x24,0x10800005},
+{0x28,0x921260e0},
+{0x2c,0x13000018},
+{0x30,0x90122058},
+{0x34,0x921263b8},
+{0x38,0x7fffff8d},
+{0x3c,0x01000000},
+{0x40,0x10800037},
+{0x44,0xc2002500},
+{0x48,0x38800035},
+{0x4c,0xc2002500},
+{0x50,0x033fc140},
+{0x54,0x82106048},
+{0x58,0xda004000},
+{0x5c,0x03000040},
+{0x60,0x808b4001},
+{0x64,0x0280000d},
+{0x68,0x21000018},
+{0x6c,0x921420e0},
+{0x70,0x23000015},
+{0x74,0x96100009},
+{0x78,0x90146180},
+{0x7c,0x7fffff50},
+{0xf0,0xa2},
+{0x00,0x941423b8},
+{0x04,0x7ffffe21},
+{0x08,0x901420e0},
+{0x0c,0x90146180},
+{0x10,0x1080000c},
+{0x14,0x921420e0},
+{0x18,0x941423b8},
+{0x1c,0x23000016},
+{0x20,0x921420e0},
+{0x24,0x90146058},
+{0x28,0x7fffff45},
+{0x2c,0x9610000a},
+{0x30,0x7ffffe16},
+{0x34,0x901423b8},
+{0x38,0x90146058},
+{0x3c,0x921423b8},
+{0x40,0x7fffff6b},
+{0x44,0x01000000},
+{0x48,0x80a4a028},
+{0x4c,0x32800014},
+{0x50,0xc2002500},
+{0x54,0x7ffffe39},
+{0x58,0x01000000},
+{0x5c,0xc200250c},
+{0x60,0x80a06000},
+{0x64,0x3280000b},
+{0x68,0xc200254c},
+{0x6c,0x031696a9},
+{0x70,0x821061a5},
+{0x74,0x11000016},
+{0x78,0x13000014},
+{0x7c,0xc220250c},
+{0xf0,0xa3},
+{0x00,0x90122330},
+{0x04,0x7fffff5a},
+{0x08,0x921262a8},
+{0x0c,0xc200254c},
+{0x10,0x82106012},
+{0x14,0xc220254c},
+{0x18,0xc2002500},
+{0x1c,0x80a48001},
+{0x20,0x3280000c},
+{0x24,0xc0202578},
+{0x28,0x031fffff},
+{0x2c,0x821063f0},
+{0x30,0x80a48001},
+{0x34,0x38800003},
+{0x38,0x25040000},
+{0x3c,0xa404a001},
+{0x40,0x033fc180},
+{0x44,0x82106034},
+{0x48,0xe4204000},
+{0x4c,0xe4202500},
+{0x50,0xc2002578},
+{0x54,0x80a06000},
+{0x58,0x02800005},
+{0x5c,0x01000000},
+{0x60,0x7ffffd1a},
+{0x64,0x01000000},
+{0x68,0xc0202578},
+{0x6c,0x81c7e008},
+{0x70,0x81e80000},
+{0x74,0x81c3e008},
+{0x78,0x01000000},
+{0x7c,0x00000000},
+{0xf0,0xa4},
+{0x00,0x00003670},
+{0x04,0xa5010402},
+{0x08,0xa5000000},
+{0x0c,0x00000000},
+{0x10,0x4c494348},
+{0x14,0x49444449},
+{0x18,0x43415352},
+{0x1c,0x4341534c},
+{0x20,0x43415345},
+{0x24,0x534f5254},
+{0x28,0x4b455953},
+{0x2c,0x4e454152},
+{0x30,0x4156474e},
+{0x34,0x47525752},
+{0x38,0x52464d41},
+{0x3c,0x52534e55},
+{0x40,0x5244524f},
+{0x44,0x45534443},
+{0x48,0x52454f4e},
+{0x4c,0x50524553},
+{0x50,0x00000000},
+{0x54,0x00000000},
+{0x58,0x4f637420},
+{0x5c,0x32312032},
+{0x60,0x30313300},
+{0x64,0x00000000},
+{0x68,0x31363a32},
+{0x6c,0x383a3034},
+{0x70,0x00000000},
+{0x74,0x00000000},
+{0x78,0x00000000},
+{0x7c,0x00000000},
+
+};
diff --git a/drivers/amlogic/mmc/amlsd.c b/drivers/amlogic/mmc/amlsd.c
index 425ba1e281a0..0db0d874b385 100755
--- a/drivers/amlogic/mmc/amlsd.c
+++ b/drivers/amlogic/mmc/amlsd.c
@@ -953,15 +953,29 @@ static int aml_is_sduart(struct amlsd_platform * pdata)
 #ifdef CONFIG_MESON_CPU_EMULATOR
 	return 0;
 #else
-	int dat3;
+    int dat3, i;
+    int cnt=0;
 
     if(pdata->is_sduart)
         return 1;
 
-    dat3 = aml_get_reg32_bits(P_PREG_PAD_GPIO0_I,26,1);
-    if(dat3 == 0){
-        return 1;
+    for (i = 0; i < 10; i++) {
+        dat3 = aml_get_reg32_bits(P_PREG_PAD_GPIO0_I,26,1);
+        if(dat3 == 1){
+            // if (cnt)
+                // sdhc_err("cnt=%d\n", cnt);
+            return 0; // NOT uart
+        }
+        cnt++;
+        msleep(10);
     }
+    // sdhc_err("cnt=%d\n", cnt);
+    return 1; // uart in
+
+    // dat3 = aml_get_reg32_bits(P_PREG_PAD_GPIO0_I,26,1);
+    // if(dat3 == 0){
+        // return 1;
+    // }
 
     // if (pdata->gpio_dat3 != 0){
         // ret = amlogic_gpio_request_one(pdata->gpio_dat3, GPIOF_IN, MODULE_NAME);
@@ -977,7 +991,7 @@ static int aml_is_sduart(struct amlsd_platform * pdata)
             // return 1;
         // }
     // }
-    return 0;
+    // return 0;
 #endif
 }
 
diff --git a/drivers/amlogic/thermal/amlogic_thermal.c b/drivers/amlogic/thermal/amlogic_thermal.c
index 07f35b7e7b09..2837bd47b4be 100755
--- a/drivers/amlogic/thermal/amlogic_thermal.c
+++ b/drivers/amlogic/thermal/amlogic_thermal.c
@@ -607,11 +607,21 @@ static int amlogic_thermal_probe(struct platform_device *pdev)
 	int ret;
 	struct amlogic_thermal_platform_data *pdata=NULL;
 	//pdata = amlogic_get_driver_data(pdev);
-	ret=get_cpu_temp();
+	ret=read_efuse_flag();
+	printk("thermal efuse version 0x%x\n",ret);
+	if(ret<0){
+		printk("read efuse error or adc error ret=%d\n",ret);
+		return -1;
+	}
 	if(NOT_WRITE_EFUSE==ret){
-		printk("cpu sensor not ready!!!!!!\n");
+		printk("this chip do not write efuse  so do not enable  thermal driver\n");
 		return -1;
 	}
+	if(EFUSE_MIGHT_WRONG==ret){
+		printk("this chip efuse data might wrong  so do not enable  thermal driver\n");
+		return -1;
+	}
+	
 	dev_info(&pdev->dev, "amlogic thermal probe start\n");
 	pdata = amlogic_thermal_initialize(pdev);
 	if (!pdata) {
diff --git a/include/linux/amlogic/amports/canvas.h b/include/linux/amlogic/amports/canvas.h
index 08d908ea25d4..e88abacd49a2 100755
--- a/include/linux/amlogic/amports/canvas.h
+++ b/include/linux/amlogic/amports/canvas.h
@@ -126,7 +126,7 @@ typedef struct {
 #define CAMERA_USER_CANVAS_INDEX             0x98
 #define CAMERA_USER_CANVAS_MAX_INDEX     0xaf
 
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 #define AMLVIDEO2_RES_CANVAS 0xD8
 #define AMLVIDEO2_MAX_RES_CANVAS 0xE3
 #elif MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TV
@@ -137,7 +137,7 @@ typedef struct {
 #define AMLVIDEO2_MAX_RES_CANVAS 0x3E
 #endif
 
-#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 #define AMVENC_CANVAS_INDEX 0xE4
 #define AMVENC_CANVAS_MAX_INDEX 0xEC
 
diff --git a/include/linux/amlogic/saradc.h b/include/linux/amlogic/saradc.h
index 33b9741c7fdc..30c3a8813c25 100755
--- a/include/linux/amlogic/saradc.h
+++ b/include/linux/amlogic/saradc.h
@@ -1,6 +1,6 @@
 #ifndef __LINUX_SARADC_H
 #define __LINUX_SARADC_H
-#define  NOT_WRITE_EFUSE 0xffff0000
+
 enum {
 	CHAN_0 = 0,
 	CHAN_1,
@@ -33,8 +33,13 @@ enum {
 	CMD_SET_PENIRQ,
 	CMD_CLEAR_PENIRQ,
 };
+#define  NOT_WRITE_EFUSE 0x0
+#define EFUSE_MIGHT_WRONG 0x8
+#define EFUEE_MUST_RIGHT 0x4
+#define EFUSE_FIXED 0xa
 
 extern int get_adc_sample(int chan);
 extern int saradc_ts_service(int cmd);
 extern int  get_cpu_temp(void);
+extern int  read_efuse_flag();
 #endif
diff --git a/include/linux/amlogic/vout/lcdoutc.h b/include/linux/amlogic/vout/lcdoutc.h
index a69801d41dfd..53b1aec4af21 100755
--- a/include/linux/amlogic/vout/lcdoutc.h
+++ b/include/linux/amlogic/vout/lcdoutc.h
@@ -139,10 +139,14 @@
 	#define PLL_CTRL_PD				30
 	#define PLL_CTRL_OD				16	//[17:16]
 	#define PLL_CTRL_N				9	//[13:9]
-#elif ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
+#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 	#define PLL_CTRL_EN				30
 	#define PLL_CTRL_OD				9	//[10:9]
 	#define PLL_CTRL_N				24	//[28:24]
+#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B)
+	#define PLL_CTRL_EN				30
+	#define PLL_CTRL_OD				16	//[17:16]
+	#define PLL_CTRL_N				10	//[14:10]
 #endif
 	#define PLL_CTRL_M				0	//[8:0]
 
@@ -256,7 +260,7 @@ static const char* lcd_power_type_table[]={
 	"pmu",
 	"signal",
 	"init",
-	"null"
+	"null",
 };
 
 static const char* lcd_power_pmu_gpio_table[]={
@@ -265,7 +269,7 @@ static const char* lcd_power_pmu_gpio_table[]={
 	"GPIO2",
 	"GPIO3",
 	"GPIO4",
-	"null"
+	"null",
 }; 
 
 typedef enum
@@ -464,7 +468,8 @@ typedef struct DSI_Config_s{
     unsigned char *dsi_init_off;
     unsigned char lcd_extern_init;
 }DSI_Config_t;
-
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 typedef struct {
 	unsigned char link_user;
 	unsigned char lane_count;
@@ -491,6 +496,8 @@ typedef struct {
 typedef struct {
 #if ((MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8) || (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B))
 	DSI_Config_t *mipi_config;
+#endif
+#if (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8)
 	EDP_Config_t *edp_config;
 #endif
 	LVDS_Config_t *lvds_config;
-- 
2.19.0

