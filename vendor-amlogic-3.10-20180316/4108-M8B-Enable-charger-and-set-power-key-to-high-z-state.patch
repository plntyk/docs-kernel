From b6ffd3ffd13430d3d3c4e0f696b133c2beadabf7 Mon Sep 17 00:00:00 2001
From: "tao.zeng" <tao.zeng@amlogic.com>
Date: Thu, 15 May 2014 20:12:02 +0800
Subject: [PATCH 4108/5965] [M8B] Enable charger and set power key to high-z
 state for M101&M102

---
 arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd |  3 ++-
 arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd   |  3 ++-
 drivers/amlogic/input/gpio_key/aml_gpiokey.c    | 13 +++++++++++--
 3 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
index 2480f8d539fe..0f1fa6174d1d 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
@@ -643,7 +643,7 @@ void root_func(){
         pmu_battery_name = "PTI PL336078";  /** battery name                         */
         pmu_init_chgvol = <4200000>;        /** target charge voltage                */
         pmu_init_chgend_rate = <10>;        /** set initial charing end current rate */
-        pmu_init_chg_enabled = <0>;         /** set initial charing enabled          */
+        pmu_init_chg_enabled = <1>;         /** set initial charing enabled          */
         pmu_init_adc_freq = <25>;           /** set initial adc frequency            */
         pmu_init_adc_freqc = <100>;         /** set initial coulomb adc coufrequency */
         pmu_init_chg_pretime = <80>;        /** set initial pre-charging time        */
@@ -1297,6 +1297,7 @@ void root_func(){
         key_name = "power";
 		key_code = <116>;
 		key_pin = "GPIOAO_3";
+        gpio_high_z;
         irq_keyup = <6>;
         irq_keydown = <7>;
 	};
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
index d4bc1327bc73..c68f9be4953c 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
@@ -643,7 +643,7 @@ void root_func(){
         pmu_battery_name = "PTI PL336078";  /** battery name                         */
         pmu_init_chgvol = <4200000>;        /** target charge voltage                */
         pmu_init_chgend_rate = <10>;        /** set initial charing end current rate */
-        pmu_init_chg_enabled = <0>;         /** set initial charing enabled          */
+        pmu_init_chg_enabled = <1>;         /** set initial charing enabled          */
         pmu_init_adc_freq = <25>;           /** set initial adc frequency            */
         pmu_init_adc_freqc = <100>;         /** set initial coulomb adc coufrequency */
         pmu_init_chg_pretime = <80>;        /** set initial pre-charging time        */
@@ -1317,6 +1317,7 @@ void root_func(){
         key_name = "power";
 		key_code = <116>;
 		key_pin = "GPIOAO_3";
+        gpio_high_z;
         irq_keyup = <6>;
         irq_keydown = <7>;
 	};
diff --git a/drivers/amlogic/input/gpio_key/aml_gpiokey.c b/drivers/amlogic/input/gpio_key/aml_gpiokey.c
index eb7eda9c81d7..35a97e281ff2 100755
--- a/drivers/amlogic/input/gpio_key/aml_gpiokey.c
+++ b/drivers/amlogic/input/gpio_key/aml_gpiokey.c
@@ -222,6 +222,7 @@ static int gpio_key_probe(struct platform_device *pdev)
     int irq_keyup;
     int irq_keydown;
 #endif
+    int gpio_highz = 0;
 
 		printk("==%s==\n", __func__);
 
@@ -244,6 +245,12 @@ static int gpio_key_probe(struct platform_device *pdev)
         goto get_key_node_fail;
     }
    
+    ret = of_property_read_bool(pdev->dev.of_node, "gpio_high_z");
+    if (ret) {
+        gpio_highz = 1;     
+        printk("gpio request set to High-Z status\n");
+    }
+
 		pdata->key = kzalloc(sizeof(*(pdata->key))*key_size, GFP_KERNEL);
 		if (!(pdata->key)) {
 			dev_err(&pdev->dev, "platform key is required!\n");
@@ -306,8 +313,10 @@ static int gpio_key_probe(struct platform_device *pdev)
 				pdata->key[i].pin = ret;
 				
 				amlogic_gpio_request(pdata->key[i].pin, MOD_NAME);
-				amlogic_gpio_direction_input(pdata->key[i].pin, MOD_NAME);
-				amlogic_set_pull_up_down(pdata->key[i].pin, 1, MOD_NAME);
+                if (!gpio_highz) {
+    				amlogic_gpio_direction_input(pdata->key[i].pin, MOD_NAME);
+	    			amlogic_set_pull_up_down(pdata->key[i].pin, 1, MOD_NAME);
+                }
 
 #ifdef USE_IRQ
                 amlogic_gpio_to_irq(pdata->key[i].pin, MOD_NAME,
-- 
2.19.0

