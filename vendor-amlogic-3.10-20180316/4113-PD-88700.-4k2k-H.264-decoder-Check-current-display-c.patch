From 00b88e748d9d97cea700173350ffc16d4d56d0b3 Mon Sep 17 00:00:00 2001
From: timyao <tim.yao@amlogic.com>
Date: Wed, 14 May 2014 14:33:37 -0700
Subject: [PATCH 4113/5965] PD #88700. [4k2k H.264 decoder] Check current
 display canvas address after vf_unreg_provider call to avoid the racing case
 when video side displays a different frame before the address is used for CMA
 allocation check.

---
 drivers/amlogic/amports/vh264_4k2k.c | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/amlogic/amports/vh264_4k2k.c b/drivers/amlogic/amports/vh264_4k2k.c
index 2a10c98b8221..ddadbda0ad20 100755
--- a/drivers/amlogic/amports/vh264_4k2k.c
+++ b/drivers/amlogic/amports/vh264_4k2k.c
@@ -1250,13 +1250,6 @@ static int vh264_4k2k_stop(void)
     int i;
     u32 disp_addr = 0xffffffff;
 
-    if (is_vpp_postblend()) {
-        canvas_t cur_canvas;
-
-        canvas_read((READ_VCBUS_REG(VD1_IF0_CANVAS0) & 0xff), &cur_canvas);
-        disp_addr = cur_canvas.addr;
-    }
-
     if (stat & STAT_VDEC_RUN) {
         amvdec_stop();
         amvdec2_stop();
@@ -1291,6 +1284,13 @@ static int vh264_4k2k_stop(void)
     amvdec_disable();
     amvdec2_disable();
 
+    if (is_vpp_postblend()) {
+        canvas_t cur_canvas;
+
+        canvas_read((READ_VCBUS_REG(VD1_IF0_CANVAS0) & 0xff), &cur_canvas);
+        disp_addr = cur_canvas.addr;
+    }
+
     for (i=0; i<ARRAY_SIZE(buffer_spec); i++) {
         if (buffer_spec[i].alloc_pages) {
             if (disp_addr == page_to_phys(buffer_spec[i].alloc_pages)) {
@@ -1362,6 +1362,7 @@ static int amvdec_h264_4k2k_probe(struct platform_device *pdev)
 static int amvdec_h264_4k2k_remove(struct platform_device *pdev)
 {
     cancel_work_sync(&alloc_work);
+
     mutex_lock(&vh264_4k2k_mutex);
 
     vh264_4k2k_stop();
-- 
2.19.0

