From cc4dd1fd8600caeac1df537ec83bdf5191bc43e7 Mon Sep 17 00:00:00 2001
From: "tao.dong" <tao.dong@amlogic.com>
Date: Wed, 21 May 2014 19:42:04 +0800
Subject: [PATCH 4173/5965] PD #90153:Resolve the pcr set by the wrong value
 after seek operation in the ionvideo module.

---
 drivers/amlogic/ionvideo/ionvideo.c | 65 ++++++++++++++++-------------
 drivers/amlogic/ionvideo/ionvideo.h |  1 +
 2 files changed, 38 insertions(+), 28 deletions(-)

diff --git a/drivers/amlogic/ionvideo/ionvideo.c b/drivers/amlogic/ionvideo/ionvideo.c
index dcaaa6f0c62b..8078016f321a 100755
--- a/drivers/amlogic/ionvideo/ionvideo.c
+++ b/drivers/amlogic/ionvideo/ionvideo.c
@@ -618,36 +618,45 @@ static int vidioc_synchronization_dqbuf(struct file *file, void *priv, struct v4
     unsigned long flags;
 
     q = dev->vdev.queue;
-    spin_lock_irqsave(&q->done_lock, flags);
-    if (list_empty(&q->done_list)) {
-        spin_unlock_irqrestore(&q->done_lock, flags);
-        return -EAGAIN;
+    if (dev->receiver_register) {  	 
+    	// clear the frame buffer queue  
+    	while(!list_empty(&q->done_list)) {
+		ret = vb2_ioctl_dqbuf(file, priv, p);
+		if (ret) { return ret;}
+		ret = vb2_ioctl_qbuf(file, priv, p);
+		if (ret) { return ret;}
+ 	}
+    	printk("init to clear the done list buffer.done\n");
+    	dev->receiver_register = 0;
+    	dev->is_video_started = 0;
+	return -EAGAIN;
+    } else{
+    	spin_lock_irqsave(&q->done_lock, flags);
+    	if (list_empty(&q->done_list)) {
+       	spin_unlock_irqrestore(&q->done_lock, flags);
+        	return -EAGAIN;
+    	}
+    	vb = list_first_entry(&q->done_list, struct vb2_buffer, done_entry);
+    	spin_unlock_irqrestore(&q->done_lock, flags);
+
+    	buf = container_of(vb, struct ionvideo_buffer, vb);
+    	if(dev->is_video_started == 0){
+		printk("Execute the VIDEO_START cmd. pts=%x\n", buf->pts);
+        	tsync_avevent_locked(VIDEO_START, buf->pts ? buf->pts : timestamp_vpts_get());        
+        	d = 0;
+        	dev->is_video_started=1;
+    	}else if (buf->pts) {
+        	if (abs(timestamp_pcrscr_get() - buf->pts) > tsync_vpts_discontinuity_margin()) {
+            		tsync_avevent_locked(VIDEO_TSTAMP_DISCONTINUITY, buf->pts);
+        	} else {
+            		timestamp_vpts_set(buf->pts);
+        	}
+        	d = timestamp_vpts_get() - timestamp_pcrscr_get();
+    	} else {
+        	d = timestamp_vpts_get() + DUR2PTS(buf->duration) - timestamp_pcrscr_get();
+    	}    	
     }
-    vb = list_first_entry(&q->done_list, struct vb2_buffer, done_entry);
-    spin_unlock_irqrestore(&q->done_lock, flags);
 
-    buf = container_of(vb, struct ionvideo_buffer, vb);
-    if (dev->receiver_register) {
-        tsync_avevent_locked(VIDEO_START, buf->pts ? buf->pts : timestamp_vpts_get());
-        dev->receiver_register = 0;
-        d = 0;
-
-		while(!list_empty(&q->done_list)) {
-			   ret = vb2_ioctl_dqbuf(file, priv, p);
-			   if (ret) {  return ret; }
-			   ret = vb2_ioctl_qbuf(file, priv, p);
-			   if (ret) { return ret; }
-		}
-    } else if (buf->pts) {
-        if (abs(timestamp_pcrscr_get() - buf->pts) > tsync_vpts_discontinuity_margin()) {
-            tsync_avevent_locked(VIDEO_TSTAMP_DISCONTINUITY, buf->pts);
-        } else {
-            timestamp_vpts_set(buf->pts);
-        }
-        d = timestamp_vpts_get() - timestamp_pcrscr_get();
-    } else {
-        d = timestamp_vpts_get() + DUR2PTS(buf->duration) - timestamp_pcrscr_get();
-    }
     if (d > 450) {
         return -EAGAIN;
     } else if (d < -11520) {
diff --git a/drivers/amlogic/ionvideo/ionvideo.h b/drivers/amlogic/ionvideo/ionvideo.h
index dc8c8b497fb6..6f7e0d3a32aa 100755
--- a/drivers/amlogic/ionvideo/ionvideo.h
+++ b/drivers/amlogic/ionvideo/ionvideo.h
@@ -136,6 +136,7 @@ struct ionvideo_dev {
     struct vframe_receiver_s video_vf_receiver;
     u64 pts;
     u8 receiver_register;
+    u8 is_video_started;
     u32 skip;
 };
 
-- 
2.19.0

