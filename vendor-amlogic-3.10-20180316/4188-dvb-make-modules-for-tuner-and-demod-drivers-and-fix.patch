From fdc600346d6e26c85e72f935f9be15cd8396c5c2 Mon Sep 17 00:00:00 2001
From: "bo.yang" <bo.yang@amlogic.com>
Date: Thu, 15 May 2014 16:13:47 +0800
Subject: [PATCH 4188/5965] dvb: make modules for tuner and demod drivers and
 fix compiled error

because the si2177 and atbm88xx drivers is out side of common, we now
compile as modules.

the drivers are now:
hardware/dvb/altobeam/drivers/atbm887x
hardware/dvb/silabs/drivers/si2177
---
 arch/arm/configs/meson6tvc_h15_defconfig |  4 ++--
 drivers/amlogic/dvb_tv/Kconfig           | 10 ++++++++++
 drivers/amlogic/dvb_tv/Makefile          |  4 ++++
 drivers/amlogic/dvb_tv/aml_dmx.c         |  3 +++
 drivers/amlogic/dvb_tv/aml_fe.c          |  8 ++++++++
 5 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/arch/arm/configs/meson6tvc_h15_defconfig b/arch/arm/configs/meson6tvc_h15_defconfig
index 78160de7ec77..ac34b09adad0 100755
--- a/arch/arm/configs/meson6tvc_h15_defconfig
+++ b/arch/arm/configs/meson6tvc_h15_defconfig
@@ -192,8 +192,8 @@ CONFIG_DEINTERLACE=y
 CONFIG_D2D3_PROCESS=y
 CONFIG_AM_VECM=y
 CONFIG_AM_DVB=y
-CONFIG_AM_ATBM8869=y
-CONFIG_AM_SI2177=y
+CONFIG_AM_ATBM8869=m
+CONFIG_AM_SI2177=m
 CONFIG_MALI400=y
 CONFIG_MALI400_DEBUG=y
 # CONFIG_CRYPTO_AML_HW_CRYPRO is not set
diff --git a/drivers/amlogic/dvb_tv/Kconfig b/drivers/amlogic/dvb_tv/Kconfig
index 9dd03e821b63..b168535b79a6 100755
--- a/drivers/amlogic/dvb_tv/Kconfig
+++ b/drivers/amlogic/dvb_tv/Kconfig
@@ -203,5 +203,15 @@ config AM_M6_DEMOD
 	help
 		Select to enable M6 demod driver.
 
+
+isource "../hardware/dvb/altobeam/drivers/atbm887x/Kconfig"
+
+config AM_SI2177
+	tristate "SI2177 tuner"
+	default n
+	depends on AM_DVB
+	help
+		select the 2177 tuner.
+
 endmenu
 
diff --git a/drivers/amlogic/dvb_tv/Makefile b/drivers/amlogic/dvb_tv/Makefile
index fe6c28818db1..3d343d34bd04 100755
--- a/drivers/amlogic/dvb_tv/Makefile
+++ b/drivers/amlogic/dvb_tv/Makefile
@@ -10,5 +10,9 @@ obj-$(CONFIG_AM_CI) += amlci/
 
 obj-$(CONFIG_AM_M6_DEMOD) += amldemod/
 
+ifneq ($(wildcard $(srctree)/../hardware/dvb),)
+	obj-$(CONFIG_AM_ATBM8869) += ../../../../hardware/dvb/altobeam/drivers/atbm887x/
+	obj-$(CONFIG_AM_SI2177)   += ../../../../hardware/dvb/silabs/drivers/si2177/
+endif
 
 EXTRA_CFLAGS += -I.
diff --git a/drivers/amlogic/dvb_tv/aml_dmx.c b/drivers/amlogic/dvb_tv/aml_dmx.c
index 62f7945d5d9b..781e7d897a74 100755
--- a/drivers/amlogic/dvb_tv/aml_dmx.c
+++ b/drivers/amlogic/dvb_tv/aml_dmx.c
@@ -2978,6 +2978,7 @@ void aml_dmx_after_retune(aml_ts_source_t src, struct dvb_frontend *fe)
 
 	spin_unlock_irqrestore(&dvb->slock, flags);
 }
+EXPORT_SYMBOL(aml_dmx_after_retune);
 
 void aml_dmx_start_error_check(aml_ts_source_t src, struct dvb_frontend *fe)
 {
@@ -2996,6 +2997,7 @@ void aml_dmx_start_error_check(aml_ts_source_t src, struct dvb_frontend *fe)
 
 	spin_unlock_irqrestore(&dvb->slock, flags);
 }
+EXPORT_SYMBOL(aml_dmx_start_error_check);
 
 int  aml_dmx_stop_error_check(aml_ts_source_t src, struct dvb_frontend *fe)
 {
@@ -3016,4 +3018,5 @@ int  aml_dmx_stop_error_check(aml_ts_source_t src, struct dvb_frontend *fe)
 
 	return ret;
 }
+EXPORT_SYMBOL(aml_dmx_stop_error_check);
 
diff --git a/drivers/amlogic/dvb_tv/aml_fe.c b/drivers/amlogic/dvb_tv/aml_fe.c
index 5b6f19fddc55..636e9af316c3 100755
--- a/drivers/amlogic/dvb_tv/aml_fe.c
+++ b/drivers/amlogic/dvb_tv/aml_fe.c
@@ -119,6 +119,7 @@ int aml_register_fe_drv(aml_fe_dev_type_t type, struct aml_fe_drv *drv)
 
 	return 0;
 }
+EXPORT_SYMBOL(aml_register_fe_drv);
 
 int aml_unregister_fe_drv(aml_fe_dev_type_t type, struct aml_fe_drv *drv)
 {
@@ -153,6 +154,8 @@ int aml_unregister_fe_drv(aml_fe_dev_type_t type, struct aml_fe_drv *drv)
 
 	return ret;
 }
+EXPORT_SYMBOL(aml_unregister_fe_drv);
+
 
 int aml_fe_analog_set_frontend(struct dvb_frontend* fe)
 {
@@ -184,6 +187,7 @@ int aml_fe_analog_set_frontend(struct dvb_frontend* fe)
 
 	return ret;
 }
+EXPORT_SYMBOL(aml_fe_analog_set_frontend);
 
 static int aml_fe_analog_get_frontend(struct dvb_frontend* fe)
 {
@@ -1851,6 +1855,7 @@ const char *v4l2_std_to_str(v4l2_std_id std)
     }
 }
 EXPORT_SYMBOL(v4l2_std_to_str);
+
 const char* fe_type_to_str(fe_type_t type)
 {
     switch(type)
@@ -1881,6 +1886,9 @@ const char* fe_type_to_str(fe_type_t type)
             break;
     }
 }
+EXPORT_SYMBOL(fe_type_to_str);
+
+
 static int __init aml_fe_init(void)
 {
 	return platform_driver_register(&aml_fe_driver);
-- 
2.19.0

