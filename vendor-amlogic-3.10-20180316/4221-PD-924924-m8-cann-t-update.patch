From 44c32558a8a23fb5abd58b3ead376f87eef77ef6 Mon Sep 17 00:00:00 2001
From: kevin_wang <kevin.wang@amlogic.com>
Date: Tue, 27 May 2014 18:56:07 +0800
Subject: [PATCH 4221/5965] PD#924924:m8 cann't update

---
 sound/soc/aml/m8/aml_audio_hw.c | 13 +++++--------
 sound/soc/aml/m8/aml_audio_hw.h |  7 +++++++
 sound/soc/aml/m8/aml_i2s.c      |  2 +-
 3 files changed, 13 insertions(+), 9 deletions(-)

diff --git a/sound/soc/aml/m8/aml_audio_hw.c b/sound/soc/aml/m8/aml_audio_hw.c
index bc3018e57064..1e6ae5080c35 100755
--- a/sound/soc/aml/m8/aml_audio_hw.c
+++ b/sound/soc/aml/m8/aml_audio_hw.c
@@ -11,9 +11,6 @@
 
 #include "aml_audio_hw.h"
 
-#define MPLL_I2S_CNTL		HHI_MPLL_CNTL7
-#define MPLL_958_CNTL		HHI_MPLL_CNTL8
-
 #ifndef MREG_AIU_958_chstat0
 #define AIU_958_chstat0	AIU_958_CHSTAT_L0
 #endif
@@ -758,7 +755,7 @@ void audio_set_clk(unsigned freq, unsigned fs_config)
 	WRITE_MPEG_REG_BITS(AIU_CODEC_DAC_LRCLK_CTRL, 64-1, 0, 12);//set codec dac ratio---lrclk
 
 	// Select Multi-Phase PLL2 as clock source
-	WRITE_MPEG_REG_BITS( HHI_AUD_CLK_CNTL, 3, 9, 3);
+	WRITE_MPEG_REG_BITS( HHI_AUD_CLK_CNTL, I2S_PLL_SRC, 9, 3);
 
 	// Configure Multi-Phase PLL2
 	WRITE_MPEG_REG(MPLL_I2S_CNTL, audio_clock_config[index][0]);
@@ -778,7 +775,7 @@ void audio_set_clk(unsigned freq, unsigned fs_config)
     WRITE_MPEG_REG_BITS(HHI_AUD_CLK_CNTL2, 0, 8, 1);
 
     // Select clk source, 0=ddr_pll; 1=Multi-Phase PLL0; 2=Multi-Phase PLL1; 3=Multi-Phase PLL2.
-    WRITE_MPEG_REG_BITS(HHI_AUD_CLK_CNTL2, 3, 9, 2);
+    WRITE_MPEG_REG_BITS(HHI_AUD_CLK_CNTL2, I2S_PLL_SRC, 9, 2);
 
     // Set pll over mclk ratio
     //we want 256fs ADC MLCK,so for over clock mode,divide more 2 than I2S  DAC CLOCK
@@ -879,7 +876,7 @@ void audio_set_i2s_clk(unsigned freq, unsigned fs_config)
 	// Disable mclk
     WRITE_MPEG_REG_BITS(HHI_AUD_CLK_CNTL, 0, 8, 1);
 	// Select clk source, 0=ddr_pll; 1=Multi-Phase PLL0; 2=Multi-Phase PLL1; 3=Multi-Phase PLL2.
-	WRITE_MPEG_REG_BITS( HHI_AUD_CLK_CNTL, 3, 9, 2);
+	WRITE_MPEG_REG_BITS( HHI_AUD_CLK_CNTL, I2S_PLL_SRC, 9, 2);
 
 	// Configure Multi-Phase PLL2
 	WRITE_MPEG_REG(MPLL_I2S_CNTL, audio_clock_config[index][0]);
@@ -902,7 +899,7 @@ void audio_set_i2s_clk(unsigned freq, unsigned fs_config)
 	WRITE_MPEG_REG_BITS(HHI_AUD_CLK_CNTL, 0, 8, 1);
 
     // Select clk source, 0=ddr_pll; 1=Multi-Phase PLL0; 2=Multi-Phase PLL1; 3=Multi-Phase PLL2.
-	WRITE_MPEG_REG_BITS(HHI_AUD_CLK_CNTL, 3, 9, 2);
+	WRITE_MPEG_REG_BITS(HHI_AUD_CLK_CNTL, I2S_PLL_SRC, 9, 2);
 
     // Set pll over mclk ratio
     //we want 256fs ADC MLCK,so for over clock mode,divide more 2 than I2S  DAC CLOCK
@@ -1000,7 +997,7 @@ void audio_set_958_clk(unsigned freq, unsigned fs_config)
 	//IEC958_USE_CNTL
 	WRITE_MPEG_REG_BITS( HHI_AUD_CLK_CNTL2, 1, 27, 1);
 	// Select clk source, 0=ddr_pll; 1=Multi-Phase PLL0; 2=Multi-Phase PLL1; 3=Multi-Phase PLL2.
-	WRITE_MPEG_REG_BITS( HHI_AUD_CLK_CNTL2, 2, 25, 2);
+	WRITE_MPEG_REG_BITS( HHI_AUD_CLK_CNTL2, I958_PLL_SRC, 25, 2);
 
 	// Configure Multi-Phase PLL1
 	WRITE_MPEG_REG(MPLL_958_CNTL, audio_clock_config[index][0]);
diff --git a/sound/soc/aml/m8/aml_audio_hw.h b/sound/soc/aml/m8/aml_audio_hw.h
index 398cb559435e..9b1abaab8c1b 100755
--- a/sound/soc/aml/m8/aml_audio_hw.h
+++ b/sound/soc/aml/m8/aml_audio_hw.h
@@ -155,4 +155,11 @@ unsigned audio_aiu_pg_enable(unsigned char enable);
 #define MCLKFS_RATIO 256
 #endif
 
+#define I2S_PLL_SRC         1   // MPLL0
+#define MPLL_I2S_CNTL		HHI_MPLL_CNTL7  
+
+#define I958_PLL_SRC        2   // MPLL1
+#define MPLL_958_CNTL		HHI_MPLL_CNTL8
+
+
 #endif
diff --git a/sound/soc/aml/m8/aml_i2s.c b/sound/soc/aml/m8/aml_i2s.c
index eee1921497f1..c125ef2671b2 100755
--- a/sound/soc/aml/m8/aml_i2s.c
+++ b/sound/soc/aml/m8/aml_i2s.c
@@ -509,7 +509,7 @@ static int aml_i2s_open(struct snd_pcm_substream *substream)
 
 	spin_lock_init(&prtd->s.lock);
 	s= &prtd->s;
-	WRITE_MPEG_REG_BITS( HHI_MPLL_CNTL9, 1,14, 1);
+	WRITE_MPEG_REG_BITS(MPLL_I2S_CNTL, 1,14, 1);
 	mutex_lock(&gate_mutex);
 	if(!num_clk_gate){
         num_clk_gate = 1;
-- 
2.19.0

