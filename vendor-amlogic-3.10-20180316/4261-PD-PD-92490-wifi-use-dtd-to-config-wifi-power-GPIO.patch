From 418538dd9c95add5d16dd42a0528a92bd9590493 Mon Sep 17 00:00:00 2001
From: Mengchun Li <mengchun.li@amlogic.com>
Date: Thu, 29 May 2014 20:01:47 +0800
Subject: [PATCH 4261/5965] PD#PD#92490:wifi:use dtd to config wifi power GPIO

---
 .../boot/dts/amlogic/meson8b_m101_512M.dtd    |   2 +-
 arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd |   5 +-
 drivers/amlogic/wifi/wifi_power.c             | 112 ++++++++----------
 3 files changed, 55 insertions(+), 64 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
index 8fa59f24810c..add63e45db96 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
@@ -1485,7 +1485,7 @@ void root_func(){
             dev_name = "wifi_power";
             status = "okay";
             power_gpio = "GPIOX_11";
-//            power_gpio2 = "GPIOX_11";
+            valid = "low";
 	};  
     
 /// ***************************************************************************************
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
index 658cdfbb33c1..19bc97add837 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
@@ -1572,8 +1572,9 @@ void root_func(){
 		interrupt_pin = "GPIOX_21";
 		irq_num = <4>;
 		irq_trigger_type = "GPIO_IRQ_HIGH";
-//		power_on_pin = "GPIOAO_6";
-		power_on_pin2 = "GPIOX_11";
+		power_on_pin = "GPIOX_11";
+		valid = "high";
+//		power_on_pin2 = "GPIOX_11";
 		clock_32k_pin = "GPIOX_10";
 	};
     
diff --git a/drivers/amlogic/wifi/wifi_power.c b/drivers/amlogic/wifi/wifi_power.c
index 05e34fdf7071..4c739252409e 100755
--- a/drivers/amlogic/wifi/wifi_power.c
+++ b/drivers/amlogic/wifi/wifi_power.c
@@ -32,7 +32,8 @@ static struct cdev *wifi_power_cdev = NULL;
 static struct device *devp=NULL;
 struct wifi_power_platform_data *pdata = NULL;
 int wifi_power_on_pin2 = 0;
-
+static int power = 1;
+    
 static int wifi_power_probe(struct platform_device *pdev);
 static int wifi_power_remove(struct platform_device *pdev);
 static int  wifi_power_open(struct inode *inode,struct file *file);
@@ -82,53 +83,38 @@ static int  wifi_power_release(struct inode *inode,struct file *file)
 }
 
 static int wifi_power_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
-{
+{	
 	struct wifi_power_platform_data *pdata = NULL;
-
-
+    
+        
     pdata = (struct wifi_power_platform_data*)devp->platform_data;
     if(pdata == NULL){
         printk("%s platform data is required!\n",__FUNCTION__);
         return -1;
     }
-
+    
     amlogic_gpio_request(pdata->power_gpio,WIFI_POWER_MODULE_NAME);
 
 	if(wifi_power_on_pin2)
  	   amlogic_gpio_request(pdata->power_gpio2,WIFI_POWER_MODULE_NAME);
-
-	switch (cmd)
+    
+	switch (cmd) 
 	{
     	case POWER_UP:
-		#if ( MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8 )
-		usb_wifi_power(1);
-		mdelay(500);
-		usb_wifi_power(0);
-		printk(KERN_INFO "Meson8 set usb wifi power up!\n");
-		#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6)
-		usb_wifi_power(0);
-		mdelay(500);
-		usb_wifi_power(1);
-		printk(KERN_INFO "Meson6 set usb wifi power up!\n");
-		#elif (MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6TV)
-		usb_wifi_power(0);
-		mdelay(500);
-		usb_wifi_power(1);
-		printk(KERN_INFO "Meson6tv set usb wifi power up!\n");
-		#endif
-		break;
-
+     		usb_wifi_power(power);   
+     		printk(KERN_INFO "Set usb wifi power up!\n");
+    		break;
+    		
     	case POWER_DOWN:
-		usb_wifi_power(1);
-
-		printk(KERN_INFO "Set usb wifi power down!\n");
-		break;
-
+   	        usb_wifi_power(!power);           
+    		printk(KERN_INFO "Set usb wifi power down!\n");
+    		break;	
+    
     	default:
-		printk(KERN_ERR "usb wifi_power_ioctl: default !!!\n");
-		return  - EINVAL;
+    		printk(KERN_ERR "usb wifi_power_ioctl: default !!!\n");
+    		return  - EINVAL;
 	}
-
+	
 	return 0;
 }
 
@@ -237,6 +223,8 @@ void *wifi_get_country_code(char *ccode)
 {
     struct wifi_power_platform_data *pdata = NULL;
     void * ret;
+    
+    
     pdata = (struct wifi_power_platform_data*)devp->platform_data;
     if(pdata == NULL){
         printk("%s platform data is required!\n",__FUNCTION__);
@@ -256,7 +244,8 @@ EXPORT_SYMBOL(wifi_get_country_code);
 
 
 int wifi_usb_set_power(int val)
-{WARN_ON(1);
+{
+	WARN_ON(1);
     struct wifi_power_platform_data *pdata = NULL;
     if(devp==NULL)
         return -1;
@@ -278,29 +267,17 @@ int wifi_usb_set_power(int val)
 EXPORT_SYMBOL(wifi_usb_set_power);
 
 static void usb_wifi_power(int is_power)
-{
-    printk(KERN_INFO "usb_wifi_power %s\n", is_power ?  "Off" : "On");
-//    CLEAR_CBUS_REG_MASK(PERIPHS_PIN_MUX_1,(1<<11));
-//    CLEAR_CBUS_REG_MASK(PERIPHS_PIN_MUX_0,(1<<18));
+{    
 #ifdef CONFIG_OF
 	if(pdata->power_gpio > 0)
-	{
-	    if(is_power)
-            amlogic_gpio_direction_output(pdata->power_gpio, 0, WIFI_POWER_MODULE_NAME);
-	    else
-	        amlogic_gpio_direction_output(pdata->power_gpio, 1, WIFI_POWER_MODULE_NAME);
-    }
+		amlogic_gpio_direction_output(pdata->power_gpio, is_power, WIFI_POWER_MODULE_NAME); 	  
+
 	if(wifi_power_on_pin2){
-	    	if(pdata->power_gpio2 > 0)
-		{
-		    if(is_power)
-	            amlogic_gpio_direction_output(pdata->power_gpio2, 0, WIFI_POWER_MODULE_NAME);
-		    else
-		        amlogic_gpio_direction_output(pdata->power_gpio2, 1, WIFI_POWER_MODULE_NAME);
-	    }
+	   	if(pdata->power_gpio2 > 0)
+	    	amlogic_gpio_direction_output(pdata->power_gpio2, is_power, WIFI_POWER_MODULE_NAME); 	  
 	}
-
-#else
+	
+#else    
     CLEAR_CBUS_REG_MASK(PREG_PAD_GPIO6_EN_N, (1<<11));
     if (is_power)//is_power
          SET_CBUS_REG_MASK(PREG_PAD_GPIO6_O, (1<<11)); // GPIO_E bit 11
@@ -326,26 +303,39 @@ static int wifi_power_probe(struct platform_device *pdev)
     {
         ret = of_property_read_string(pdev->dev.of_node, "power_gpio", &str);
 	    if(ret)
-	     {
+	     {  
 	        printk("Error: can not get power_gpio name------%s %d\n",__func__,__LINE__);
 	        return -1;
 	     }else{
 	        pdata->power_gpio = amlogic_gpio_name_map_num(str);
 	        printk("wifi_power power_gpio is %d\n",pdata->power_gpio);
 	        //ret = amlogic_gpio_request(pdata->power_gpio,WIFI_POWER_MODULE_NAME);
-	        //mcli pdata->usb_set_power(0);    //power on
-	        //pdata->usb_set_power(1);    //power on
+	        //mcli pdata->usb_set_power(0);    //power on   
+	        //pdata->usb_set_power(1);    //power on   
 	     }
-
+	     
+	    ret = of_property_read_string(pdev->dev.of_node, "valid", &str);
+		if(ret)
+		{
+			printk("Error: Didn't get power valid value --- %s %d\n",__func__,__LINE__);
+		    power = 1;
+		}else{
+			printk("mcli: gpio valid: %s\n",str);
+			if(!strncmp(str,"low",3))
+				power = 0;
+			else
+				power = 1;
+		}
+		 
 	   if(!(ret = of_property_read_string(pdev->dev.of_node, "power_gpio2", &str)))
 			wifi_power_on_pin2 = 1;
 	   else{
 		printk("wifi_dev_probe : there is no wifi_power_on_pin2 setup in DTS file!\n");
 	   }
-
+	   
 	   if(wifi_power_on_pin2){
 		    if(ret)
-		     {
+		     {  
 		        printk("Error: can not get power_gpio2 name------%s %d\n",__func__,__LINE__);
 		        return -1;
 		     }else{
@@ -353,10 +343,10 @@ static int wifi_power_probe(struct platform_device *pdev)
 		        printk("wifi_power power_gpio2 is %d\n",pdata->power_gpio2);
 		     }
 	   }
-
+		 
 	}
     pdev->dev.platform_data = pdata;
-
+    
     ret = alloc_chrdev_region(&wifi_power_devno, 0, 1, WIFI_POWER_DRIVER_NAME);
     if (ret < 0) {
         printk(KERN_ERR "%s:%s failed to allocate major number\n",WIFI_POWER_MODULE_NAME,__FUNCTION__);
-- 
2.19.0

