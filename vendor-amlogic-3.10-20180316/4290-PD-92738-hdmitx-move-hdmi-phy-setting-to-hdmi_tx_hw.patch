From 11c1d8ccd0543c6b5fe493ec2da1a449dc4f8a42 Mon Sep 17 00:00:00 2001
From: "zongdong.jiao" <zongdong.jiao@amlogic.com>
Date: Wed, 4 Jun 2014 18:40:56 +0800
Subject: [PATCH 4290/5965] PD #92738: hdmitx: move hdmi phy setting to
 hdmi_tx_hw

---
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c  | 45 +++++++++++++++----
 arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c | 36 ++++++++++++---
 drivers/amlogic/display/vout/enc_clk_config.c | 12 -----
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c        | 11 ++---
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c  |  1 +
 .../linux/amlogic/hdmi_tx/hdmi_tx_module.h    |  1 +
 6 files changed, 72 insertions(+), 34 deletions(-)

diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
index af49b2a05883..fa7e1ecf3619 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
@@ -71,7 +71,7 @@ static void hdmi_audio_init(unsigned char spdif_flag);
 static void hdmitx_dump_tvenc_reg(int cur_VIC, int printk_flag);
 
 static void hdmi_phy_suspend(void);
-static void hdmi_phy_wakeup(void);
+static void hdmi_phy_wakeup(hdmitx_dev_t* hdmitx_device);
 
 unsigned char hdmi_pll_mode = 0; /* 1, use external clk as hdmi pll source */
 static unsigned char aud_para = 0x49;
@@ -1117,9 +1117,10 @@ void hdmi_hw_set_powermode(hdmitx_dev_t* hdmitx_device)
     case HDMI_1080p50:
     case HDMI_1080p60:
     default:
-        aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c38d0b);
+        //aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c38d0b);
+        break;
     }
-    aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 2);
+    //aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 2);
 }
 
 void hdmi_hw_init(hdmitx_dev_t* hdmitx_device)
@@ -1878,6 +1879,34 @@ static void hdmitx_set_pll(Hdmi_tx_video_para_t *param)
     }
 }
 
+static int hdmitx_set_phy(hdmitx_dev_t* hdmitx_device)
+{
+    switch(hdmitx_device->cur_video_param->VIC) {
+        case HDMI_4k2k_24:
+        case HDMI_4k2k_25:
+        case HDMI_4k2k_30:
+        case HDMI_4k2k_smpte_24:
+            aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c34d0b);
+            break;
+        case HDMI_1080p60:
+        default:
+            aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c31e8b);
+            break;
+    }
+// P_HHI_HDMI_PHY_CNTL1     bit[1]: enable clock    bit[0]: soft reset
+#define RESET_HDMI_PHY()                        \
+    aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 3);   \
+    msleep(1);                                  \
+    aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 2);   \
+    msleep(1)
+
+    RESET_HDMI_PHY();
+    RESET_HDMI_PHY();
+    RESET_HDMI_PHY();
+#undef RESET_HDMI_PHY
+    hdmi_print(IMP, SYS "phy setting done\n");
+}
+
 static int hdmitx_set_dispmode(hdmitx_dev_t* hdmitx_device, Hdmi_tx_video_para_t *param)
 {
     if(param == NULL){ //disable HDMI
@@ -1911,6 +1940,7 @@ static int hdmitx_set_dispmode(hdmitx_dev_t* hdmitx_device, Hdmi_tx_video_para_t
 
     hdmi_hw_reset(hdmitx_device, param);    
     hdmitx_set_pll(param);
+    hdmitx_set_phy(hdmitx_device);
 
     if((param->VIC==HDMI_720p60)||(param->VIC==HDMI_720p50)||
         (param->VIC==HDMI_1080i60)||(param->VIC==HDMI_1080i50)){
@@ -1958,8 +1988,7 @@ static int hdmitx_set_dispmode(hdmitx_dev_t* hdmitx_device, Hdmi_tx_video_para_t
     mdelay(5);
 
     return 0;
-}    
-
+}
 
 static void hdmitx_set_packet(int type, unsigned char* DB, unsigned char* HB)
 {
@@ -3052,7 +3081,7 @@ static int hdmitx_cntl_misc(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned
         break;
     case MISC_TMDS_PHY_OP:
         if(argv == TMDS_PHY_ENABLE) {
-            hdmi_phy_wakeup();  // TODO
+            hdmi_phy_wakeup(hdmitx_device);  // TODO
         }
         if(argv == TMDS_PHY_DISABLE) {
             hdmi_phy_suspend();
@@ -3163,8 +3192,8 @@ static void hdmi_phy_suspend(void)
     //hdmi_print(INF, SYS "phy suspend\n");
 }
 
-static void hdmi_phy_wakeup(void)
+static void hdmi_phy_wakeup(hdmitx_dev_t* hdmitx_device)
 {
-    aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, hdmi_phy_save);
+    hdmitx_set_phy(hdmitx_device);
     //hdmi_print(INF, SYS "phy wakeup\n");
 }
diff --git a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
index ac551566b321..07296c25b2f8 100755
--- a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
@@ -71,7 +71,7 @@ static void hdmi_audio_init(unsigned char spdif_flag);
 static void hdmitx_dump_tvenc_reg(int cur_VIC, int printk_flag);
 
 static void hdmi_phy_suspend(void);
-static void hdmi_phy_wakeup(void);
+static void hdmi_phy_wakeup(hdmitx_dev_t* hdmitx_device);
 
 unsigned char hdmi_pll_mode = 0; /* 1, use external clk as hdmi pll source */
 static unsigned char aud_para = 0x49;
@@ -949,9 +949,10 @@ void hdmi_hw_set_powermode(hdmitx_dev_t* hdmitx_device)
     case HDMI_1080p50:
     case HDMI_1080p60:
     default:
-        aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c38d0b);
+        //aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c38d0b);
+        break;
     }
-    aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 2);
+    //aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 2);
 }
 
 void hdmi_hw_init(hdmitx_dev_t* hdmitx_device)
@@ -1659,6 +1660,28 @@ static void hdmitx_set_pll(Hdmi_tx_video_para_t *param)
     }
 }
 
+static int hdmitx_set_phy(hdmitx_dev_t* hdmitx_device)
+{
+    switch(hdmitx_device->cur_video_param->VIC) {
+        case HDMI_1080p60:
+        default:
+            aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c31e8b);
+            break;
+    }
+// P_HHI_HDMI_PHY_CNTL1     bit[1]: enable clock    bit[0]: soft reset
+#define RESET_HDMI_PHY()                        \
+    aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 3);   \
+    msleep(1);                                  \
+    aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 2);   \
+    msleep(1)
+
+    RESET_HDMI_PHY();
+    RESET_HDMI_PHY();
+    RESET_HDMI_PHY();
+#undef RESET_HDMI_PHY
+    hdmi_print(IMP, SYS "phy setting done\n");
+}
+
 static int hdmitx_set_dispmode(hdmitx_dev_t* hdmitx_device, Hdmi_tx_video_para_t *param)
 {
     if(param == NULL){ //disable HDMI
@@ -1697,6 +1720,7 @@ static int hdmitx_set_dispmode(hdmitx_dev_t* hdmitx_device, Hdmi_tx_video_para_t
 
     hdmi_hw_reset(hdmitx_device, param);    
     hdmitx_set_pll(param);
+    hdmitx_set_phy(hdmitx_device);
 
     if((param->VIC==HDMI_720p60)||(param->VIC==HDMI_720p50)||
         (param->VIC==HDMI_1080i60)||(param->VIC==HDMI_1080i50)){
@@ -2823,7 +2847,7 @@ static int hdmitx_cntl_misc(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned
         break;
     case MISC_TMDS_PHY_OP:
         if(argv == TMDS_PHY_ENABLE) {
-            hdmi_phy_wakeup();  // TODO
+            hdmi_phy_wakeup(hdmitx_device);  // TODO
         }
         if(argv == TMDS_PHY_DISABLE) {
             hdmi_phy_suspend();
@@ -2921,8 +2945,8 @@ static void hdmi_phy_suspend(void)
     //hdmi_print(INF, SYS "phy suspend\n");
 }
 
-static void hdmi_phy_wakeup(void)
+static void hdmi_phy_wakeup(hdmitx_dev_t* hdmitx_device)
 {
-    aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c31e8b);
+    hdmitx_set_phy(hdmitx_device);
     //hdmi_print(INF, SYS "phy wakeup\n");
 }
diff --git a/drivers/amlogic/display/vout/enc_clk_config.c b/drivers/amlogic/display/vout/enc_clk_config.c
index bc842b7f36bf..7f5b9ac20c3b 100755
--- a/drivers/amlogic/display/vout/enc_clk_config.c
+++ b/drivers/amlogic/display/vout/enc_clk_config.c
@@ -39,7 +39,6 @@ static void set_hpll_clk_out(unsigned clk)
     aml_write_reg32(P_HHI_VID_PLL_CNTL4, 0x40238100);
     aml_write_reg32(P_HHI_VID_PLL_CNTL5, 0x00012286);
     aml_write_reg32(P_HHI_VID2_PLL_CNTL2, 0x430a800);       // internal LDO share with HPLL & VIID PLL
-    aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c31e8b);
 #endif
     switch(clk){
 #ifdef CONFIG_ARCH_MESON8
@@ -55,7 +54,6 @@ static void set_hpll_clk_out(unsigned clk)
             while(!(aml_read_reg32(P_HHI_VID_PLL_CNTL) & (1 << 31))) {
                 ;
             }
-            aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c34d0b);
             h_delay();
             aml_write_reg32(P_HHI_VID_PLL_CNTL5, 0x00016385);   // optimise HPLL VCO 2.97GHz performance
             break;
@@ -93,7 +91,6 @@ static void set_hpll_clk_out(unsigned clk)
                 ;
             }
             aml_write_reg32(P_HHI_VID_PLL_CNTL2, 0x69c8ce00);
-            aml_write_reg32(P_HHI_HDMI_PHY_CNTL0, 0x08c31e8b);
 #endif
 #ifdef CONFIG_ARCH_MESON6
             WRITE_CBUS_REG(HHI_VID_PLL_CNTL, 0x43e);
@@ -132,16 +129,7 @@ static void set_hpll_clk_out(unsigned clk)
             break;
     }
 #if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
-    // P_HHI_HDMI_PHY_CNTL1     bit[1]: enable clock    bit[0]: soft reset
-#define RESET_HDMI_PHY()                        \
-    aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 3);   \
-    h_delay();                                  \
-    aml_write_reg32(P_HHI_HDMI_PHY_CNTL1, 2);   \
-    h_delay()
 
-    RESET_HDMI_PHY();
-    RESET_HDMI_PHY();
-    RESET_HDMI_PHY();
 #endif
     printk("config HPLL done\n");
 }
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index f2a8d9abfcb1..05d37d2cf590 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -1115,8 +1115,10 @@ static int hdmi_task_handle(void *data)
         if(hdmitx_device->HWOp.Cntl) {
             static int st = 0;
             st = hdmitx_device->HWOp.CntlMisc(hdmitx_device, MISC_HPD_GPI_ST, 0);
+wait:
             if(hdmitx_device->hpd_lock == 1) {
-                goto next;
+                msleep_interruptible(2000);
+                goto wait;
             }
             if((st == 0) && (hdmitx_device->hpd_state == 1)) {
                 hdmitx_device->hpd_event = 2;
@@ -1126,13 +1128,6 @@ static int hdmi_task_handle(void *data)
             }
         }
 
-        if(hdmitx_device->hpd_state == 0) {
-            hdmitx_device->HWOp.CntlMisc(hdmitx_device, MISC_TMDS_PHY_OP, TMDS_PHY_DISABLE);
-        }
-        else {
-            hdmitx_device->HWOp.CntlMisc(hdmitx_device, MISC_TMDS_PHY_OP, TMDS_PHY_ENABLE);
-        }
-
         if (hdmitx_device->hpd_event == 1)
         {
             hdmitx_device->hpd_event = 0;
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c
index 9f8eeca3122c..79e5f42c36c3 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c
@@ -408,6 +408,7 @@ int hdmitx_set_display(hdmitx_dev_t* hdmitx_device, HDMI_Video_Codes_t VideoCode
     }
 
     param = hdmi_get_video_param(VideoCode);
+    hdmitx_device->cur_video_param = param;
     if(param){
         param->color = param->color_prefer;
         if(hdmi_output_rgb){
diff --git a/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h b/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
index 583e3667144f..53a9c5f1e157 100755
--- a/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
+++ b/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
@@ -94,6 +94,7 @@ typedef struct hdmi_tx_dev_s {
     unsigned char EDID_buf1[EDID_MAX_BLOCK*128];    // for second read
     unsigned char EDID_hash[20];
     rx_cap_t RXCap;
+    Hdmi_tx_video_para_t *cur_video_param;
     int vic_count;
     /*audio*/
     Hdmi_tx_audio_para_t cur_audio_param;
-- 
2.19.0

