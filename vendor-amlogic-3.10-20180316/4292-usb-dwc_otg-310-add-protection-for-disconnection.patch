From 469b96ead0d19afbf7ae797d06e03f9955736d1c Mon Sep 17 00:00:00 2001
From: Qun Zhang <qun.zhang@amlogic.com>
Date: Tue, 20 May 2014 15:56:39 +0800
Subject: [PATCH 4292/5965] usb: dwc_otg 310: add protection for disconnection

---
 drivers/amlogic/usb/dwc_otg/310/dwc_otg_cil_intr.c | 12 +++++++++++-
 drivers/amlogic/usb/dwc_otg/310/dwc_otg_hcd.c      |  7 +++++--
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/amlogic/usb/dwc_otg/310/dwc_otg_cil_intr.c b/drivers/amlogic/usb/dwc_otg/310/dwc_otg_cil_intr.c
index c67e8ebfe733..86db662be1cb 100755
--- a/drivers/amlogic/usb/dwc_otg/310/dwc_otg_cil_intr.c
+++ b/drivers/amlogic/usb/dwc_otg/310/dwc_otg_cil_intr.c
@@ -425,6 +425,7 @@ host:
 		else
 			dwc_otg_core_init(core_if);
 		dwc_otg_enable_global_interrupts(core_if);
+		((dwc_otg_hcd_t *)(core_if->hcd_cb_p))->flags.d32 = 0;
 		cil_hcd_start(core_if);
 		core_if->suspend_mode = 0;
 	}
@@ -1587,6 +1588,7 @@ int32_t dwc_otg_handle_common_intr(void *dev)
 {
 	int retval = 0;
 	gintsts_data_t gintsts;
+	gintsts_data_t gintsts_tmp;
 	gpwrdn_data_t gpwrdn = {.d32 = 0 };
 	dwc_otg_device_t *otg_dev = dev;
 	dwc_otg_core_if_t *core_if = otg_dev->core_if;
@@ -1626,7 +1628,15 @@ int32_t dwc_otg_handle_common_intr(void *dev)
 			retval |= dwc_otg_handle_conn_id_status_change_intr(core_if);
 		}
 		if (gintsts.b.disconnect) {
-			retval |= dwc_otg_handle_disconnect_intr(core_if);
+			if (gintsts.b.portintr && dwc_otg_is_host_mode(core_if))
+				retval |= dwc_otg_handle_disconnect_intr(core_if);
+			else
+			{
+				gintsts_tmp.d32 = 0;
+				gintsts_tmp.b.disconnect = 1;
+				DWC_WRITE_REG32(&core_if->core_global_regs->gintsts, gintsts_tmp.d32);
+				retval |= 1;
+			}
 		}
 		if (gintsts.b.sessreqintr) {
 			retval |= dwc_otg_handle_session_req_intr(core_if);
diff --git a/drivers/amlogic/usb/dwc_otg/310/dwc_otg_hcd.c b/drivers/amlogic/usb/dwc_otg/310/dwc_otg_hcd.c
index 51dfc8a65de3..aa2d49d57074 100755
--- a/drivers/amlogic/usb/dwc_otg/310/dwc_otg_hcd.c
+++ b/drivers/amlogic/usb/dwc_otg/310/dwc_otg_hcd.c
@@ -1094,6 +1094,7 @@ int dwc_otg_hcd_init(dwc_otg_hcd_t * hcd, dwc_otg_core_if_t * core_if)
 	hcd->frame_list = NULL;
 	hcd->frame_list_dma = 0;
 	hcd->periodic_qh_count = 0;
+	hcd->flags.d32 = 0;
 out:
 	return retval;
 }
@@ -1116,8 +1117,10 @@ static void dwc_otg_hcd_reinit(dwc_otg_hcd_t * hcd)
 	dwc_hc_t *channel;
 	dwc_hc_t *channel_tmp;
 
-	if((!hcd->core_if->suspend_mode)&&(!hcd->core_if->not_clear_hcd_flag))
-		hcd->flags.d32 = 0;
+	if((!hcd->core_if->suspend_mode)&&(!hcd->core_if->not_clear_hcd_flag)){
+		//hcd->flags.d32 = 0;
+		printk("-------hcd->flags.d32 = %d\n",hcd->flags.d32);
+	}
 	
 	hcd->core_if->not_clear_hcd_flag=0;	
 
-- 
2.19.0

