From 8f886d8994d6c5e1f022d9b9c0a2694147354b61 Mon Sep 17 00:00:00 2001
From: "tao.zeng" <tao.zeng@amlogic.com>
Date: Tue, 10 Jun 2014 19:30:27 +0800
Subject: [PATCH 4330/5965] PD #83628: PMU driver update for AML1216/AML1218,
 version:0.60

1. get pmu driver version from DTS;
2. fix alarm bug for M6 platform;
---
 .../boot/dts/amlogic/meson8b_m101_512M.dtd    |  1 +
 arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd |  1 +
 arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd |  1 +
 drivers/amlogic/power/aml_pmu/aml1216-sply.c  |  1 -
 drivers/amlogic/power/aml_pmu/aml1218-sply.c  |  1 -
 drivers/amlogic/power/aml_pmu_of_common.c     |  6 +++
 drivers/amlogic/power/pmu_mutex.c             | 37 ++++++++-----------
 kernel/time/alarmtimer.c                      |  2 +-
 8 files changed, 26 insertions(+), 24 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
index fbffccec605b..4505146fdd1f 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
@@ -835,6 +835,7 @@ void root_func(){
         compatible = "amlogic, aml_pmu_prober";                 /* fixed for pmu driver, don't change   */
         #address-cells = <1>;
         #size-cells = <0>;
+        driver_version = "v0.60";
 //$$ DEVICE = "Pmu_axp202"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
index b72a3a1f30f3..c858795ab42e 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
@@ -814,6 +814,7 @@ void root_func(){
         compatible = "amlogic, aml_pmu_prober";                 /* fixed for pmu driver, don't change   */
         #address-cells = <1>;
         #size-cells = <0>;
+        driver_version = "v0.60";
 //$$ DEVICE = "Pmu_axp202"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
index eddcd38a4d54..16427e7a9233 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
@@ -773,6 +773,7 @@ void root_func(){
         compatible = "amlogic, aml_pmu_prober";                 /* fixed for pmu driver, don't change   */
         #address-cells = <1>;
         #size-cells = <0>;
+        driver_version = "v0.60";
 //$$ DEVICE = "Pmu_axp202"
 //$$ L2 PROP_STR = "sub_type"
 //$$ L2 PROP_STR = "i2c_bus"
diff --git a/drivers/amlogic/power/aml_pmu/aml1216-sply.c b/drivers/amlogic/power/aml_pmu/aml1216-sply.c
index f0795cb71509..01106cd5aa08 100755
--- a/drivers/amlogic/power/aml_pmu/aml1216-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1216-sply.c
@@ -1503,7 +1503,6 @@ static int aml1216_battery_probe(struct platform_device *pdev)
     uint32_t tmp2;
 
 	AML1216_DBG("call %s in", __func__);
-	AML1216_DBG("AML_PMU driver version:0.50\n");
 
     g_aml1216_init = pdev->dev.platform_data;
     if (g_aml1216_init == NULL) {
diff --git a/drivers/amlogic/power/aml_pmu/aml1218-sply.c b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
index 2889f2f043e2..8850ac264402 100755
--- a/drivers/amlogic/power/aml_pmu/aml1218-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
@@ -1495,7 +1495,6 @@ static int aml1218_battery_probe(struct platform_device *pdev)
     uint32_t tmp2;
 
 	AML1218_DBG("call %s in", __func__);
-	AML1218_DBG("AML_PMU driver version:0.50\n");
     g_aml1218_init = pdev->dev.platform_data;
     if (g_aml1218_init == NULL) {
         AML1218_DBG("%s, NO platform data\n", __func__);
diff --git a/drivers/amlogic/power/aml_pmu_of_common.c b/drivers/amlogic/power/aml_pmu_of_common.c
index c6bbf83f9f10..99f47e9995a3 100755
--- a/drivers/amlogic/power/aml_pmu_of_common.c
+++ b/drivers/amlogic/power/aml_pmu_of_common.c
@@ -310,6 +310,12 @@ static int aml_pmus_probe(struct platform_device *pdev)
     int    bus_type = -1;
     const  char *str;
 
+    if (of_property_read_string(pmu_node, "driver_version", &str)) {
+        printk("%s, PMU drvier version not found\n");    
+    } else {
+        printk("----> PMU driver version:%s\n", str);    
+    }
+
     for_each_child_of_node(pmu_node, child) {
         /* register exist pmu */
         printk("%s, child name:%s\n", __func__, child->name);
diff --git a/drivers/amlogic/power/pmu_mutex.c b/drivers/amlogic/power/pmu_mutex.c
index d3a50bca05df..ccee06904c51 100755
--- a/drivers/amlogic/power/pmu_mutex.c
+++ b/drivers/amlogic/power/pmu_mutex.c
@@ -7,6 +7,7 @@
 #include <linux/gfp.h>
 #include <linux/rtc.h>
 #include <linux/err.h>
+#include <linux/alarmtimer.h>
 
 /*
  * some data-struct is depend on kernel's menuconfig
@@ -15,7 +16,8 @@
  */
 static int mutex_cnt = 0;
 const  char mutex_name[20] = {};
-static struct rtc_device *rtc_dev = NULL;
+static int    alarm_inited = 0; 
+static struct alarm battery_alarm;
 
 void *pmu_alloc_mutex(void)
 {
@@ -50,40 +52,33 @@ void pmu_mutex_unlock(void *mutex)
 }
 EXPORT_SYMBOL(pmu_mutex_unlock);
 
+static enum alarmtimer_restart pmu_battery_alarm(struct alarm *alarm, ktime_t now)
+{
+    printk("%s\n", __func__);
+	return ALARMTIMER_NORESTART;
+}
+
 int pmu_rtc_device_init(void)
 {
-    if (rtc_dev) {
+    if (alarm_inited) {
         return 0;    
     }
-    rtc_dev = rtc_class_open("rtc0");
-    if (IS_ERR_OR_NULL(rtc_dev)) {
-        printk("%s, can't open aml_rtc class\n", __func__);
-        return -EINVAL;
-    }
+    alarm_init(&battery_alarm, ALARM_REALTIME, pmu_battery_alarm);
+    alarm_inited = 1;
     return 0;
 }
 EXPORT_SYMBOL(pmu_rtc_device_init);
 
 int pmu_rtc_set_alarm(unsigned long seconds) 
 {
-    struct rtc_wkalrm tmp;
-    unsigned long time;
     int ret;
 
-    if (!rtc_dev) {
-        printk("%s, NO rtc dev found\n", __func__);
+    if (!alarm_inited) {
+        printk("%s, alarm is not inited\n", __func__);
         return -ENODEV;    
     }
-    ret = rtc_read_time(rtc_dev, &tmp.time);
-    if (ret < 0) {
-        printk("%s, read %s alarm failed, %d\n", __func__, rtc_dev->name, ret);
-        return ret;    
-    }
-    tmp.enabled = 1;
-    rtc_tm_to_time(&tmp.time, &time);
-    time += seconds;
-    rtc_time_to_tm(time, &tmp.time);
-    ret = rtc_set_alarm(rtc_dev, &tmp);
+	ret = alarm_start(&battery_alarm,
+                      ktime_add(ktime_get_real(), ktime_set(seconds, 0)));
     printk("%s, set wake up alarm in %ld seconds, ret:%d\n", __func__, seconds, ret);
     return ret;
 }
diff --git a/kernel/time/alarmtimer.c b/kernel/time/alarmtimer.c
index d41fcb46a403..1edf48f15ece 100644
--- a/kernel/time/alarmtimer.c
+++ b/kernel/time/alarmtimer.c
@@ -766,7 +766,7 @@ out:
 
 /* Suspend hook structures */
 static const struct dev_pm_ops alarmtimer_pm_ops = {
-	.suspend = alarmtimer_suspend,
+	.suspend_late = alarmtimer_suspend,
 };
 
 static struct platform_driver alarmtimer_driver = {
-- 
2.19.0

