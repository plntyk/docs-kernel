From 22e09f668a90283b4847a2a05f44c52406c0858b Mon Sep 17 00:00:00 2001
From: "zhi.zhou" <zhi.zhou@amlogic.com>
Date: Thu, 12 Jun 2014 19:04:40 +0800
Subject: [PATCH 4336/5965] amports: changed some MESON_CPU_TYPE >=
 MESON_CPU_TYPE_MESON8B to HAS_HEVC_VDEC.

---
 drivers/amlogic/amports/amports_config.h |  5 +++
 drivers/amlogic/amports/amstream.c       | 40 +++++++++++++-----------
 drivers/amlogic/amports/esparser.c       | 14 ++++-----
 drivers/amlogic/amports/ptsserv.c        | 11 ++++---
 drivers/amlogic/amports/streambuf.c      | 13 ++++----
 drivers/amlogic/amports/streambuf.h      |  3 +-
 drivers/amlogic/amports/tsdemux.c        | 11 ++++---
 drivers/amlogic/amports/tsdemux.h        |  3 +-
 drivers/amlogic/amports/vdec.c           |  2 +-
 9 files changed, 57 insertions(+), 45 deletions(-)

diff --git a/drivers/amlogic/amports/amports_config.h b/drivers/amlogic/amports/amports_config.h
index 83934c4d30ed..28a1ff4139e6 100755
--- a/drivers/amlogic/amports/amports_config.h
+++ b/drivers/amlogic/amports/amports_config.h
@@ -1,6 +1,8 @@
 #ifndef AMPORTS_CONFIG_HHH
 #define AMPORTS_CONFIG_HHH
 #include <mach/cpu.h>
+#include <linux/kconfig.h>
+
 /*
 value seem:
 arch\arm\plat-meson\include\plat\cpu.h
@@ -34,6 +36,9 @@ arch\arm\plat-meson\include\plat\cpu.h
 
 #endif
 
+#ifndef CONFIG_AM_VDEC_H265
+#define HAS_HEVC_VDEC 0
+#endif
 
 
 #endif //AMPORTS_CONFIG_HHH
diff --git a/drivers/amlogic/amports/amstream.c b/drivers/amlogic/amports/amstream.c
index 774a8f568083..492f496fd9f8 100755
--- a/drivers/amlogic/amports/amstream.c
+++ b/drivers/amlogic/amports/amstream.c
@@ -65,6 +65,8 @@
 #include "rmparser.h"
 #include "amvideocap_priv.h"
 #include "amports_priv.h"
+#include "amports_config.h"
+
 #include <linux/firmware.h>
 
 #include <linux/of.h>
@@ -281,7 +283,7 @@ static stream_port_t ports[] = {
         .type  = PORT_TYPE_USERDATA,
         .fops  = &userdata_fops,
     },
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     {
         .name  = "amstream_hevc",
         .type  = PORT_TYPE_ES | PORT_TYPE_VIDEO | PORT_TYPE_HEVC,
@@ -320,7 +322,7 @@ static stream_buf_t bufs[BUF_MAX_NUM] = {
         .buf_size = 0,
         .first_tstamp = INVALID_PTS
     },
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     {
         .reg_base = HEVC_STREAM_REG_BASE,
         .type = BUF_TYPE_HEVC,
@@ -356,7 +358,7 @@ EXPORT_SYMBOL(get_audio_info);
 
 static void amstream_change_vbufsize(stream_port_t *port,struct stream_buf_s *pvbuf)
 {
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if ((pvbuf->type == BUF_TYPE_VIDEO) || (pvbuf->type == BUF_TYPE_HEVC)) {
 #else
     if (pvbuf->type == BUF_TYPE_VIDEO) {
@@ -406,7 +408,7 @@ static  int video_port_init(stream_port_t *port, struct stream_buf_s * pbuf)
 	
     amstream_change_vbufsize(port,pbuf);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (port->type & PORT_TYPE_MPTS) {
         if (pbuf->type == BUF_TYPE_HEVC) {
             vdec_poweroff(VDEC_1);
@@ -627,7 +629,7 @@ static  int amstream_port_init(stream_port_t *port)
         pubuf->buf_wp = 0;
         pubuf->buf_rp = 0;
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         if (port->vformat == VFORMAT_HEVC) {
             pvbuf = &bufs[BUF_TYPE_HEVC];
         }
@@ -649,7 +651,7 @@ static  int amstream_port_init(stream_port_t *port)
     }
 
     if (port->type & PORT_TYPE_MPTS) {
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         r = tsdemux_init((port->flag & PORT_FLAG_VID) ? port->vid : 0xffff,
                          (port->flag & PORT_FLAG_AID) ? port->aid : 0xffff,
                          (port->flag & PORT_FLAG_SID) ? port->sid : 0xffff,
@@ -709,7 +711,7 @@ static  int amstream_port_release(stream_port_t *port)
     stream_buf_t *pabuf = &bufs[BUF_TYPE_AUDIO];
     stream_buf_t *psbuf = &bufs[BUF_TYPE_SUBTITLE];
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (port->vformat == VFORMAT_HEVC) {
         pvbuf = &bufs[BUF_TYPE_HEVC];
     }
@@ -778,7 +780,7 @@ static ssize_t amstream_vbuf_write(struct file *file, const char *buf,
                                    size_t count, loff_t * ppos)
 {
     stream_port_t *port = (stream_port_t *)file->private_data;
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     stream_buf_t *pbuf = (port->type & PORT_TYPE_HEVC) ? &bufs[BUF_TYPE_HEVC] : &bufs[BUF_TYPE_VIDEO];
 #else
     stream_buf_t *pbuf = &bufs[BUF_TYPE_VIDEO];
@@ -830,7 +832,7 @@ static ssize_t amstream_mpts_write(struct file *file, const char *buf,
                                    size_t count, loff_t * ppos)
 {
     stream_port_t *port = (stream_port_t *)file->private_data;
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     stream_buf_t *pvbuf = (port->vformat == VFORMAT_HEVC) ? &bufs[BUF_TYPE_HEVC] : &bufs[BUF_TYPE_VIDEO];
 #else
     stream_buf_t *pvbuf = &bufs[BUF_TYPE_VIDEO];
@@ -1086,7 +1088,7 @@ static int amstream_open(struct inode *inode, struct file *file)
     if (this->type & PORT_TYPE_VIDEO) {
         switch_mod_gate_by_name("vdec", 1);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         if (this->type & (PORT_TYPE_MPTS | PORT_TYPE_HEVC)) {
             vdec_poweron(VDEC_HEVC);
         }
@@ -1162,7 +1164,7 @@ static int amstream_release(struct inode *inode, struct file *file)
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
     if (this->type & PORT_TYPE_VIDEO) {
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         vdec_poweroff(VDEC_HEVC);
 #endif
         vdec_poweroff(VDEC_1);
@@ -1201,7 +1203,7 @@ static long amstream_ioctl(struct file *file,
     case AMSTREAM_IOC_VB_START:
         if ((this->type & PORT_TYPE_VIDEO) &&
             ((bufs[BUF_TYPE_VIDEO].flag & BUF_FLAG_IN_USE) == 0)) {
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
             bufs[BUF_TYPE_HEVC].buf_start = arg;
 #endif
             bufs[BUF_TYPE_VIDEO].buf_start = arg;
@@ -1214,7 +1216,7 @@ static long amstream_ioctl(struct file *file,
         if ((this->type & PORT_TYPE_VIDEO) &&
             ((bufs[BUF_TYPE_VIDEO].flag & BUF_FLAG_IN_USE) == 0)) {
             if (bufs[BUF_TYPE_VIDEO].flag & BUF_FLAG_ALLOC) {
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
                 r = stbuf_change_size(&bufs[BUF_TYPE_HEVC], arg);
 #endif
                 r = stbuf_change_size(&bufs[BUF_TYPE_VIDEO], arg);
@@ -1311,7 +1313,7 @@ static long amstream_ioctl(struct file *file,
     case AMSTREAM_IOC_VB_STATUS:
         if (this->type & PORT_TYPE_VIDEO) {
             struct am_io_param *p = (void*)arg;
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
             stream_buf_t *buf = (this->vformat == VFORMAT_HEVC) ? &bufs[BUF_TYPE_HEVC] : &bufs[BUF_TYPE_VIDEO];
 #else
             stream_buf_t *buf = &bufs[BUF_TYPE_VIDEO];
@@ -1388,7 +1390,7 @@ static long amstream_ioctl(struct file *file,
             ((PORT_TYPE_AUDIO | PORT_TYPE_VIDEO))) {
             r = -EINVAL;
         } 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         else if (this->type & PORT_TYPE_HEVC) {
             r = es_vpts_checkin(&bufs[BUF_TYPE_HEVC], arg);
         }
@@ -1408,7 +1410,7 @@ static long amstream_ioctl(struct file *file,
         } else{
             u64 pts;
             memcpy(&pts,(void *)arg,sizeof(u64));
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
             if (this->type & PORT_TYPE_HEVC) {
                 r = es_vpts_checkin_us64(&bufs[BUF_TYPE_HEVC], pts);
             } else
@@ -1620,7 +1622,7 @@ static long amstream_ioctl(struct file *file,
         tsdemux_set_demux((int)arg);
         break;
     case AMSTREAM_IOC_SET_VIDEO_DELAY_LIMIT_MS:
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         bufs[BUF_TYPE_HEVC].max_buffer_delay_ms = (int)arg;
 #endif
         bufs[BUF_TYPE_VIDEO].max_buffer_delay_ms = (int)arg;
@@ -1769,7 +1771,7 @@ static ssize_t bufs_show(struct class *class, struct class_attribute *attr, char
     int i;
     char *pbuf = buf;
     stream_buf_t *p = NULL;
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     char buf_type[][12] = {"Video", "Audio", "Subtitle", "UserData", "HEVC"};
 #else
     char buf_type[][12] = {"Video", "Audio", "Subtitle", "UserData"};
@@ -2088,7 +2090,7 @@ static int  amstream_probe(struct platform_device *pdev)
         bufs[BUF_TYPE_SUBTITLE].flag = BUF_FLAG_IOMEM;
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     bufs[BUF_TYPE_HEVC].buf_start = bufs[BUF_TYPE_VIDEO].buf_start;
     bufs[BUF_TYPE_HEVC].buf_size  = bufs[BUF_TYPE_VIDEO].buf_size;
 
diff --git a/drivers/amlogic/amports/esparser.c b/drivers/amlogic/amports/esparser.c
index e8a56b48f966..39c39b9c2c3b 100755
--- a/drivers/amlogic/amports/esparser.c
+++ b/drivers/amlogic/amports/esparser.c
@@ -96,7 +96,7 @@ static irqreturn_t parser_isr(int irq, void *dev_id)
 static inline u32 buf_wp(u32 type)
 {
     u32 wp = 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B    
+#if HAS_HEVC_VDEC    
     (type == BUF_TYPE_HEVC) ? READ_VREG(HEVC_STREAM_WR_PTR) :
 #endif
     (type == BUF_TYPE_VIDEO) ? READ_VREG(VLD_MEM_VIFIFO_WP) :
@@ -119,7 +119,7 @@ static ssize_t _esparser_write(const char __user *buf,
     int ret;
     u32 wp;
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (type == BUF_TYPE_HEVC) {
         parser_type = PARSER_VIDEO;
     } else
@@ -185,7 +185,7 @@ static ssize_t _esparser_write(const char __user *buf,
         }
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if ((type == BUF_TYPE_VIDEO) || (type == BUF_TYPE_HEVC)) {
 #else
     if (type == BUF_TYPE_VIDEO) {
@@ -250,7 +250,7 @@ s32 esparser_init(struct stream_buf_s *buf)
     u32 parser_sub_rp;
     bool first_use = false;
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (buf->type == BUF_TYPE_HEVC) {
         pts_type = PTS_TYPE_HEVC;
     } else
@@ -338,7 +338,7 @@ s32 esparser_init(struct stream_buf_s *buf)
     }
 
     /* hook stream buffer with PARSER */
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (pts_type == PTS_TYPE_HEVC) {
         CLEAR_VREG_MASK(HEVC_STREAM_CONTROL, 1);
 
@@ -368,7 +368,7 @@ s32 esparser_init(struct stream_buf_s *buf)
         WRITE_VREG(VLD_MEM_VIFIFO_BUF_CNTL, MEM_BUFCTRL_INIT);
         CLEAR_VREG_MASK(VLD_MEM_VIFIFO_BUF_CNTL, MEM_BUFCTRL_INIT);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         WRITE_VREG(DOS_GEN_CTRL0, 0);    // set vififo_vbuf_rp_sel=>vdec
 #endif
 
@@ -490,7 +490,7 @@ void esparser_release(struct stream_buf_s *buf)
         }
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (buf->type == BUF_TYPE_HEVC) {
         pts_type = PTS_TYPE_VIDEO;
     } else
diff --git a/drivers/amlogic/amports/ptsserv.c b/drivers/amlogic/amports/ptsserv.c
index 8756bf679f03..a5420248a9c6 100755
--- a/drivers/amlogic/amports/ptsserv.c
+++ b/drivers/amlogic/amports/ptsserv.c
@@ -6,6 +6,7 @@
 #include <linux/amlogic/amports/timestamp.h>
 #include <linux/amlogic/amports/tsync.h>
 #include "amports_priv.h"
+#include "amports_config.h"
 
 #include <mach/am_regs.h>
 
@@ -182,7 +183,7 @@ int calculation_stream_delayed_ms(u8 type,u32 *latestbitrate,u32*avg_bitare)
         return 0;
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (type == PTS_TYPE_HEVC) {
         pTable = &pts_table[PTS_TYPE_VIDEO];
     } else
@@ -193,7 +194,7 @@ int calculation_stream_delayed_ms(u8 type,u32 *latestbitrate,u32*avg_bitare)
         return 0;
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (type == PTS_TYPE_HEVC) {
         outtime = timestamp_vpts_get();
     } else
@@ -868,7 +869,7 @@ int pts_start(u8 type)
         return -EINVAL;
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (type == PTS_TYPE_HEVC) {
         pTable = &pts_table[PTS_TYPE_VIDEO];
     } else
@@ -886,7 +887,7 @@ int pts_start(u8 type)
             return -ENOMEM;
         }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         if (type == PTS_TYPE_HEVC) {
             pTable->buf_start = READ_VREG(HEVC_STREAM_START_ADDR);
             pTable->buf_size = READ_VREG(HEVC_STREAM_END_ADDR)
@@ -961,7 +962,7 @@ int pts_stop(u8 type)
         return -EINVAL;
     }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (type == PTS_TYPE_HEVC) {
         pTable = &pts_table[PTS_TYPE_VIDEO];
     } else
diff --git a/drivers/amlogic/amports/streambuf.c b/drivers/amlogic/amports/streambuf.c
index 1bcb56ad18e8..a9934090a867 100755
--- a/drivers/amlogic/amports/streambuf.c
+++ b/drivers/amlogic/amports/streambuf.c
@@ -35,6 +35,7 @@
 #include "vdec.h"
 #include "streambuf_reg.h"
 #include "streambuf.h"
+#include "amports_config.h"
 
 #define STBUF_SIZE   (64*1024)
 #define STBUF_WAIT_INTERVAL  HZ/100
@@ -56,7 +57,7 @@ static s32 _stbuf_alloc(stream_buf_t *buf)
         }
 
         printk("%s stbuf alloced at 0x%x, size = %d\n",
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
                (buf->type == BUF_TYPE_HEVC) ? "HEVC" :
 #endif
                (buf->type == BUF_TYPE_VIDEO) ? "Video" :
@@ -171,7 +172,7 @@ static void _stbuf_timer_func(unsigned long arg)
 u32 stbuf_level(struct stream_buf_s *buf)
 {
     return 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     (buf->type == BUF_TYPE_HEVC) ? READ_VREG(HEVC_STREAM_LEVEL) :
 #endif
     _READ_ST_REG(LEVEL);
@@ -180,7 +181,7 @@ u32 stbuf_level(struct stream_buf_s *buf)
 u32 stbuf_rp(struct stream_buf_s *buf)
 {
     return
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     (buf->type == BUF_TYPE_HEVC) ? READ_VREG(HEVC_STREAM_RD_PTR) :
 #endif
     _READ_ST_REG(RP);
@@ -191,7 +192,7 @@ u32 stbuf_space(struct stream_buf_s *buf)
     /* reserved space for safe write, the parser fifo size is 1024byts, so reserve it */
     int size;
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (buf->type == BUF_TYPE_HEVC) {
         size = buf->canusebuf_size - READ_VREG(HEVC_STREAM_LEVEL);
     } else
@@ -211,7 +212,7 @@ u32 stbuf_space(struct stream_buf_s *buf)
     if(buf->canusebuf_size>=buf->buf_size/2)
         size=size-6*1024;//old reversed value,tobe full, reversed only...
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if ((buf->type == BUF_TYPE_VIDEO) || (buf->type == BUF_TYPE_HEVC)) {
 #else
     if (buf->type == BUF_TYPE_VIDEO) {
@@ -250,7 +251,7 @@ s32 stbuf_init(struct stream_buf_s *buf)
 
     init_waitqueue_head(&buf->wq);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (buf->type == BUF_TYPE_HEVC) {
         CLEAR_VREG_MASK(HEVC_STREAM_CONTROL, 1);
         WRITE_VREG(HEVC_STREAM_START_ADDR, phy_addr);
diff --git a/drivers/amlogic/amports/streambuf.h b/drivers/amlogic/amports/streambuf.h
index 332e905b531b..6d28212f918c 100755
--- a/drivers/amlogic/amports/streambuf.h
+++ b/drivers/amlogic/amports/streambuf.h
@@ -21,6 +21,7 @@
 
 #ifndef STREAMBUF_H
 #define STREAMBUF_H
+#include "amports_config.h"
 
 #define BUF_FLAG_ALLOC          0x01
 #define BUF_FLAG_IN_USE         0x02
@@ -32,7 +33,7 @@
 #define BUF_TYPE_AUDIO      1
 #define BUF_TYPE_SUBTITLE   2
 #define BUF_TYPE_USERDATA   3
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
 #define BUF_TYPE_HEVC       4
 #define BUF_MAX_NUM         5
 #else
diff --git a/drivers/amlogic/amports/tsdemux.c b/drivers/amlogic/amports/tsdemux.c
index 754cf614cc98..b0ebbe38bf9b 100755
--- a/drivers/amlogic/amports/tsdemux.c
+++ b/drivers/amlogic/amports/tsdemux.c
@@ -42,6 +42,7 @@
 #include "vdec_reg.h"
 #include "streambuf_reg.h"
 #include "streambuf.h"
+#include "amports_config.h"
 
 #include "tsdemux.h"
 
@@ -430,7 +431,7 @@ static ssize_t _tsdemux_write(const char __user *buf, size_t count)
     return count - r;
 }
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
 s32 tsdemux_init(u32 vid, u32 aid, u32 sid, u32 pcrid, bool is_hevc)
 #else
 s32 tsdemux_init(u32 vid, u32 aid, u32 sid, u32 pcrid)
@@ -513,7 +514,7 @@ s32 tsdemux_init(u32 vid, u32 aid, u32 sid, u32 pcrid)
     }
 
     /* hook stream buffer with PARSER */
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if (is_hevc) {
         WRITE_MPEG_REG(PARSER_VIDEO_START_PTR,
                        READ_VREG(HEVC_STREAM_START_ADDR));
@@ -538,7 +539,7 @@ s32 tsdemux_init(u32 vid, u32 aid, u32 sid, u32 pcrid)
         WRITE_VREG(VLD_MEM_VIFIFO_BUF_CNTL, MEM_BUFCTRL_INIT);
         CLEAR_VREG_MASK(VLD_MEM_VIFIFO_BUF_CNTL, MEM_BUFCTRL_INIT);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
         WRITE_VREG(DOS_GEN_CTRL0, 0);    // set vififo_vbuf_rp_sel=>vdec
     }
 #endif
@@ -562,7 +563,7 @@ s32 tsdemux_init(u32 vid, u32 aid, u32 sid, u32 pcrid)
     WRITE_MPEG_REG(PARSER_SUB_RP, parser_sub_rp);
     SET_MPEG_REG_MASK(PARSER_ES_CONTROL, (7 << ES_SUB_WR_ENDIAN_BIT) | ES_SUB_MAN_RD_PTR);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     if ((r = pts_start((is_hevc) ? PTS_TYPE_HEVC : PTS_TYPE_VIDEO)) < 0) {
 #else
     if ((r = pts_start(PTS_TYPE_VIDEO)) < 0) {
@@ -653,7 +654,7 @@ err4:
 err3:
     pts_stop(PTS_TYPE_AUDIO);
 err2:
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
     pts_stop((is_hevc) ? PTS_TYPE_HEVC : PTS_TYPE_VIDEO);
 #else
     pts_stop(PTS_TYPE_VIDEO);
diff --git a/drivers/amlogic/amports/tsdemux.h b/drivers/amlogic/amports/tsdemux.h
index 85628c3a8537..f9f0d1d469da 100755
--- a/drivers/amlogic/amports/tsdemux.h
+++ b/drivers/amlogic/amports/tsdemux.h
@@ -21,6 +21,7 @@
 
 #ifndef TSDEMUX_H
 #define TSDEMUX_H
+#include "amports_config.h"
 
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
 // TODO: move to register headers
@@ -68,7 +69,7 @@
 #define PARSER_INT_HOST_EN_BIT      8
 #endif
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
 extern s32 tsdemux_init(u32 vid, u32 aid, u32 sid, u32 pcrid, bool is_hevc);
 #else
 extern s32 tsdemux_init(u32 vid, u32 aid, u32 sid, u32 pcrid);
diff --git a/drivers/amlogic/amports/vdec.c b/drivers/amlogic/amports/vdec.c
index 464b7b737550..07536ef73091 100644
--- a/drivers/amlogic/amports/vdec.c
+++ b/drivers/amlogic/amports/vdec.c
@@ -43,7 +43,7 @@
 
 static DEFINE_SPINLOCK(lock);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+#if HAS_HEVC_VDEC
 /*
 HHI_VDEC_CLK_CNTL
 0x1078[11:9] (fclk = 2550MHz)
-- 
2.19.0

