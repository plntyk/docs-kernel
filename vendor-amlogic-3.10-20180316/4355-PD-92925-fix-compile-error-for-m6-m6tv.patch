From 47537ff198b35702ee6f3beb9f6cfff0eaa5ad6c Mon Sep 17 00:00:00 2001
From: "tao.dong" <tao.dong@amlogic.com>
Date: Tue, 17 Jun 2014 13:53:41 +0800
Subject: [PATCH 4355/5965] PD#92925:fix compile error for m6/m6tv

---
 arch/arm/mach-meson6/include/mach/sd.h    | 59 +++++++++++++++----
 arch/arm/mach-meson6tv/include/mach/sd.h  | 69 ++++++++++++++++++-----
 arch/arm/mach-meson6tvd/include/mach/sd.h | 60 ++++++++++++++++----
 drivers/amlogic/mmc/aml_sdhc_m8.c         |  4 +-
 4 files changed, 152 insertions(+), 40 deletions(-)

diff --git a/arch/arm/mach-meson6/include/mach/sd.h b/arch/arm/mach-meson6/include/mach/sd.h
index 149e04e6d514..f68ccb03e648 100755
--- a/arch/arm/mach-meson6/include/mach/sd.h
+++ b/arch/arm/mach-meson6/include/mach/sd.h
@@ -13,6 +13,11 @@
 #include <linux/mmc/host.h>
 #include <linux/earlysuspend.h>
 
+#define     AML_ERROR_RETRY_COUNTER         5
+#define     AML_TIMEOUT_RETRY_COUNTER       2
+
+#define AML_SDHC_MAGIC			 "amlsdhc"
+#define AML_SDIO_MAGIC			 "amlsdio"
 enum aml_mmc_waitfor {
 	XFER_INIT,
 	XFER_START,				/* 1 */
@@ -33,6 +38,19 @@ enum aml_mmc_waitfor {
 	XFER_AFTER_START,		/* 16 */
 };
 
+enum aml_host_status { /* Host controller status */
+	HOST_INVALID = 0,       /* 0, invalid value used for initialization */
+	HOST_RX_FIFO_FULL = 1,  /* 1, start with 1 */
+	HOST_TX_FIFO_EMPTY,	    /* 2 */
+	HOST_RSP_CRC_ERR,	    /* 3 */
+	HOST_DAT_CRC_ERR,	    /* 4 */
+	HOST_RSP_TIMEOUT_ERR,   /* 5 */
+	HOST_DAT_TIMEOUT_ERR,   /* 6 */
+    HOST_ERR_END,	        /* 7, end of errors */
+	HOST_TASKLET_CMD,	    /* 8 */
+	HOST_TASKLET_DATA,	    /* 9 */
+};
+
 struct amlsd_host;
 struct amlsd_platform {
 	struct amlsd_host* host;
@@ -56,9 +74,13 @@ struct amlsd_platform {
 	unsigned int f_max;
 	unsigned int f_max_w;
 	unsigned int clkc;
+	unsigned int clk2;
 	unsigned int clkc_w;
 	unsigned int ctrl;
 	unsigned int clock;
+	unsigned int tune_phase;            /* store tuning result */
+	unsigned char signal_voltage;		/* signalling voltage (1.8V or 3.3V) */
+
 	unsigned int low_burst;
 	unsigned int irq_in;
 	unsigned int irq_in_edge;
@@ -73,6 +95,9 @@ struct amlsd_platform {
     unsigned int jtag_pin;
     int is_sduart;
     bool is_in;
+    bool is_tuned;                      /* if card has been tuning */
+    bool need_retuning;
+	struct delayed_work	retuning;
 
     /* we used this flag to filter some unnecessary cmd before initialized flow */
     bool is_fir_init; // has been initialized for the first time
@@ -130,21 +155,22 @@ struct amlsd_host {
 	unsigned int f_max;
 	unsigned int f_max_w;
 	unsigned int f_min;
-	struct tasklet_struct cmd_tlet;
-	struct tasklet_struct data_tlet;
-	struct tasklet_struct busy_tlet;
-	struct tasklet_struct to_tlet;
+	// struct tasklet_struct cmd_tlet;
+	// struct tasklet_struct data_tlet;
+	// struct tasklet_struct busy_tlet;
+	// struct tasklet_struct to_tlet;
     // struct timer_list timeout_tlist;
 	struct delayed_work	timeout;
-	struct early_suspend amlsd_early_suspend;
+	// struct early_suspend amlsd_early_suspend;
 
+    struct class            debug;
 	unsigned int send;
 	unsigned int ctrl;
 	unsigned int clkc;
-	unsigned int clkc_w;
-	unsigned int pdma;
-	unsigned int pdma_s;
-	unsigned int pdma_low;
+	// unsigned int clkc_w;
+	// unsigned int pdma;
+	// unsigned int pdma_s;
+	// unsigned int pdma_low;
 	unsigned int misc;
 	unsigned int ictl;
 	unsigned int ista;
@@ -157,12 +183,19 @@ struct amlsd_host {
 	spinlock_t	mrq_lock;
 	int			cmd_is_stop;
 	enum aml_mmc_waitfor	xfer_step;
+	enum aml_mmc_waitfor	xfer_step_prev;
 
 	int			bus_width;
 	int     port;
 	int     locked;
-	char		*status;
-	unsigned int		ccnt, dcnt;
+    bool    is_gated;
+	// unsigned int		ccnt, dcnt;
+
+	int     status; // host status: xx_error/ok
+	int init_flag;
+
+    char    *msg_buf;
+#define MESSAGE_BUF_SIZE            512
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry		*debug_root;
@@ -176,12 +209,15 @@ struct amlsd_host {
 
     u32			opcode; // add by gch for debug
 	u32			arg; // add by gch for debug
+    u32         cmd25_cnt;
     
 #ifdef      CONFIG_MMC_AML_DEBUG
     u32         req_cnt;
     u32         trans_size;
     u32         time_req_sta; // request start time
+    u32         reg_buf[16];
 #endif
+    u32         time_req_sta; // request start time
     
     struct pinctrl *pinctrl;
     char pinctrl_name[30];
@@ -548,6 +584,7 @@ struct sdhc_clk2{
 	u32 reserved:8; /*[31:24] reserved*/
 };
 
+#define SDHC_CLOCK_SRC_OSC              0 // 24MHz
 #define SDHC_CLOCK_SRC_FCLK_DIV4        1
 #define SDHC_CLOCK_SRC_FCLK_DIV3        2
 #define SDHC_CLOCK_SRC_FCLK_DIV5        3
diff --git a/arch/arm/mach-meson6tv/include/mach/sd.h b/arch/arm/mach-meson6tv/include/mach/sd.h
index 4ea85a3d44f7..180f827cd85b 100755
--- a/arch/arm/mach-meson6tv/include/mach/sd.h
+++ b/arch/arm/mach-meson6tv/include/mach/sd.h
@@ -13,6 +13,11 @@
 #include <linux/mmc/host.h>
 #include <linux/earlysuspend.h>
 
+#define     AML_ERROR_RETRY_COUNTER         5
+#define     AML_TIMEOUT_RETRY_COUNTER       2
+
+#define AML_SDHC_MAGIC			 "amlsdhc"
+#define AML_SDIO_MAGIC			 "amlsdio"
 enum aml_mmc_waitfor {
 	XFER_INIT,
 	XFER_START,				/* 1 */
@@ -33,6 +38,18 @@ enum aml_mmc_waitfor {
 	XFER_AFTER_START,		/* 16 */
 };
 
+enum aml_host_status { /* Host controller status */
+	HOST_INVALID = 0,       /* 0, invalid value used for initialization */
+	HOST_RX_FIFO_FULL = 1,  /* 1, start with 1 */
+	HOST_TX_FIFO_EMPTY,	    /* 2 */
+	HOST_RSP_CRC_ERR,	    /* 3 */
+	HOST_DAT_CRC_ERR,	    /* 4 */
+	HOST_RSP_TIMEOUT_ERR,   /* 5 */
+	HOST_DAT_TIMEOUT_ERR,   /* 6 */
+    HOST_ERR_END,	        /* 7, end of errors */
+	HOST_TASKLET_CMD,	    /* 8 */
+	HOST_TASKLET_DATA,	    /* 9 */
+};
 struct amlsd_host;
 struct amlsd_platform {
 	struct amlsd_host* host;
@@ -56,9 +73,12 @@ struct amlsd_platform {
 	unsigned int f_max;
 	unsigned int f_max_w;
 	unsigned int clkc;
+	unsigned int clk2;
 	unsigned int clkc_w;
 	unsigned int ctrl;
 	unsigned int clock;
+	unsigned int tune_phase;            /* store tuning result */
+	unsigned char signal_voltage;		/* signalling voltage (1.8V or 3.3V) */
 	unsigned int low_burst;
 	unsigned int irq_in;
 	unsigned int irq_in_edge;
@@ -73,6 +93,9 @@ struct amlsd_platform {
     unsigned int jtag_pin;
     int is_sduart;
     bool is_in;
+    bool is_tuned;                      /* if card has been tuning */
+    bool need_retuning;
+	struct delayed_work	retuning;
 
     /* we used this flag to filter some unnecessary cmd before initialized flow */
     bool is_fir_init; // has been initialized for the first time
@@ -130,21 +153,23 @@ struct amlsd_host {
 	unsigned int f_max;
 	unsigned int f_max_w;
 	unsigned int f_min;
-	struct tasklet_struct cmd_tlet;
-	struct tasklet_struct data_tlet;
-	struct tasklet_struct busy_tlet;
-	struct tasklet_struct to_tlet;
+	// struct tasklet_struct cmd_tlet;
+	// struct tasklet_struct data_tlet;
+	// struct tasklet_struct busy_tlet;
+	// struct tasklet_struct to_tlet;
     // struct timer_list timeout_tlist;
 	struct delayed_work	timeout;
-	struct early_suspend amlsd_early_suspend;
+	// struct early_suspend amlsd_early_suspend;
 
+    struct class            debug;
+    
 	unsigned int send;
 	unsigned int ctrl;
 	unsigned int clkc;
-	unsigned int clkc_w;
-	unsigned int pdma;
-	unsigned int pdma_s;
-	unsigned int pdma_low;
+	// unsigned int clkc_w;
+	// unsigned int pdma;
+	// unsigned int pdma_s;
+	// unsigned int pdma_low;
 	unsigned int misc;
 	unsigned int ictl;
 	unsigned int ista;
@@ -157,12 +182,19 @@ struct amlsd_host {
 	spinlock_t	mrq_lock;
 	int			cmd_is_stop;
 	enum aml_mmc_waitfor	xfer_step;
+	enum aml_mmc_waitfor	xfer_step_prev;
 
 	int			bus_width;
 	int     port;
 	int     locked;
-	char		*status;
-	unsigned int		ccnt, dcnt;
+    bool    is_gated;
+	// unsigned int		ccnt, dcnt;
+
+	int     status; // host status: xx_error/ok
+	int init_flag;
+
+    char    *msg_buf;
+#define MESSAGE_BUF_SIZE            512
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry		*debug_root;
@@ -176,14 +208,17 @@ struct amlsd_host {
 
     u32			opcode; // add by gch for debug
 	u32			arg; // add by gch for debug
-
+    u32         cmd25_cnt;
+    
 #ifdef      CONFIG_MMC_AML_DEBUG
     u32         req_cnt;
     u32         trans_size;
-    u32         time_req_sta; // request start time
-#endif
 
-    struct pinctrl *pinctrl;
+    u32         reg_buf[16];
+#endif
+    u32         time_req_sta; // request start time
+    
+    struct pinctrl  *pinctrl;
     char pinctrl_name[30];
 
     int storage_flag; // used for judging if there is a tsd/emmc
@@ -548,6 +583,7 @@ struct sdhc_clk2{
 	u32 reserved:8; /*[31:24] reserved*/
 };
 
+#define SDHC_CLOCK_SRC_OSC              0 // 24MHz
 #define SDHC_CLOCK_SRC_FCLK_DIV4        1
 #define SDHC_CLOCK_SRC_FCLK_DIV3        2
 #define SDHC_CLOCK_SRC_FCLK_DIV5        3
@@ -612,6 +648,9 @@ extern struct mmc_host *sdio_host;
 		printk("[%s] " fmt, __FUNCTION__, ##args);	\
 }while(0)
 
+#define print_dbg(fmt, args...) do{\
+	printk("[%s]\033[0;40;35m " fmt "\033[0m", __FUNCTION__, ##args);  \
+}while(0)
 // P_AO_SECURE_REG1 is "Secure Register 1" in <M8-Secure-AHB-Registers.doc>
 #define aml_jtag_gpioao() do{\
     writel(0x102, (u32 *)P_AO_SECURE_REG1); \
diff --git a/arch/arm/mach-meson6tvd/include/mach/sd.h b/arch/arm/mach-meson6tvd/include/mach/sd.h
index 4ea85a3d44f7..5b3c2e5a9ed8 100755
--- a/arch/arm/mach-meson6tvd/include/mach/sd.h
+++ b/arch/arm/mach-meson6tvd/include/mach/sd.h
@@ -13,6 +13,11 @@
 #include <linux/mmc/host.h>
 #include <linux/earlysuspend.h>
 
+#define     AML_ERROR_RETRY_COUNTER         5
+#define     AML_TIMEOUT_RETRY_COUNTER       2
+
+#define AML_SDHC_MAGIC			 "amlsdhc"
+#define AML_SDIO_MAGIC			 "amlsdio"
 enum aml_mmc_waitfor {
 	XFER_INIT,
 	XFER_START,				/* 1 */
@@ -33,6 +38,18 @@ enum aml_mmc_waitfor {
 	XFER_AFTER_START,		/* 16 */
 };
 
+enum aml_host_status { /* Host controller status */
+	HOST_INVALID = 0,       /* 0, invalid value used for initialization */
+	HOST_RX_FIFO_FULL = 1,  /* 1, start with 1 */
+	HOST_TX_FIFO_EMPTY,	    /* 2 */
+	HOST_RSP_CRC_ERR,	    /* 3 */
+	HOST_DAT_CRC_ERR,	    /* 4 */
+	HOST_RSP_TIMEOUT_ERR,   /* 5 */
+	HOST_DAT_TIMEOUT_ERR,   /* 6 */
+    HOST_ERR_END,	        /* 7, end of errors */
+	HOST_TASKLET_CMD,	    /* 8 */
+	HOST_TASKLET_DATA,	    /* 9 */
+};
 struct amlsd_host;
 struct amlsd_platform {
 	struct amlsd_host* host;
@@ -56,9 +73,13 @@ struct amlsd_platform {
 	unsigned int f_max;
 	unsigned int f_max_w;
 	unsigned int clkc;
+	unsigned int clk2;
 	unsigned int clkc_w;
 	unsigned int ctrl;
 	unsigned int clock;
+	unsigned int tune_phase;            /* store tuning result */
+	unsigned char signal_voltage;		/* signalling voltage (1.8V or 3.3V) */
+
 	unsigned int low_burst;
 	unsigned int irq_in;
 	unsigned int irq_in_edge;
@@ -73,6 +94,9 @@ struct amlsd_platform {
     unsigned int jtag_pin;
     int is_sduart;
     bool is_in;
+    bool is_tuned;                      /* if card has been tuning */
+    bool need_retuning;
+	struct delayed_work	retuning;
 
     /* we used this flag to filter some unnecessary cmd before initialized flow */
     bool is_fir_init; // has been initialized for the first time
@@ -130,21 +154,22 @@ struct amlsd_host {
 	unsigned int f_max;
 	unsigned int f_max_w;
 	unsigned int f_min;
-	struct tasklet_struct cmd_tlet;
-	struct tasklet_struct data_tlet;
-	struct tasklet_struct busy_tlet;
-	struct tasklet_struct to_tlet;
+	// struct tasklet_struct cmd_tlet;
+	// struct tasklet_struct data_tlet;
+	// struct tasklet_struct busy_tlet;
+	// struct tasklet_struct to_tlet;
     // struct timer_list timeout_tlist;
 	struct delayed_work	timeout;
-	struct early_suspend amlsd_early_suspend;
+	// struct early_suspend amlsd_early_suspend;
 
+    struct class            debug;
 	unsigned int send;
 	unsigned int ctrl;
 	unsigned int clkc;
-	unsigned int clkc_w;
-	unsigned int pdma;
-	unsigned int pdma_s;
-	unsigned int pdma_low;
+	// unsigned int clkc_w;
+	// unsigned int pdma;
+	// unsigned int pdma_s;
+	// unsigned int pdma_low;
 	unsigned int misc;
 	unsigned int ictl;
 	unsigned int ista;
@@ -157,12 +182,19 @@ struct amlsd_host {
 	spinlock_t	mrq_lock;
 	int			cmd_is_stop;
 	enum aml_mmc_waitfor	xfer_step;
+	enum aml_mmc_waitfor	xfer_step_prev;
 
 	int			bus_width;
 	int     port;
 	int     locked;
-	char		*status;
-	unsigned int		ccnt, dcnt;
+    bool    is_gated;
+	// unsigned int		ccnt, dcnt;
+
+	int     status; // host status: xx_error/ok
+	int init_flag;
+
+    char    *msg_buf;
+#define MESSAGE_BUF_SIZE            512
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry		*debug_root;
@@ -176,13 +208,16 @@ struct amlsd_host {
 
     u32			opcode; // add by gch for debug
 	u32			arg; // add by gch for debug
+    u32         cmd25_cnt;
 
 #ifdef      CONFIG_MMC_AML_DEBUG
     u32         req_cnt;
     u32         trans_size;
     u32         time_req_sta; // request start time
+    u32         reg_buf[16];
 #endif
-
+    u32         time_req_sta; // request start time
+    
     struct pinctrl *pinctrl;
     char pinctrl_name[30];
 
@@ -548,6 +583,7 @@ struct sdhc_clk2{
 	u32 reserved:8; /*[31:24] reserved*/
 };
 
+#define SDHC_CLOCK_SRC_OSC              0 // 24MHz
 #define SDHC_CLOCK_SRC_FCLK_DIV4        1
 #define SDHC_CLOCK_SRC_FCLK_DIV3        2
 #define SDHC_CLOCK_SRC_FCLK_DIV5        3
diff --git a/drivers/amlogic/mmc/aml_sdhc_m8.c b/drivers/amlogic/mmc/aml_sdhc_m8.c
index 274e4628057c..8f2124eef1f8 100755
--- a/drivers/amlogic/mmc/aml_sdhc_m8.c
+++ b/drivers/amlogic/mmc/aml_sdhc_m8.c
@@ -1163,9 +1163,9 @@ timeout_handle:
     if(host->mrq->stop && (!aml_card_type_sd(pdata)) && !host->cmd_is_stop){
     //if((host->mrq->cmd->opcode != SD_IO_RW_DIRECT) && (host->mrq->cmd->opcode != SD_IO_RW_EXTENDED) 
    //         && (!mmc_card_removed(pdata->mmc->card)) && (!mrq->data)){
-        spin_lock_irqsave(&host->mrq_lock, flags);
+        //spin_lock_irqsave(&host->mrq_lock, flags);
         aml_sdhc_send_stop(host);                
-        spin_unlock_irqrestore(&host->mrq_lock, flags);
+        //spin_unlock_irqrestore(&host->mrq_lock, flags);
         schedule_delayed_work(&host->timeout, 1);
     }
     else{
-- 
2.19.0

