From 2bba3a796809ba28081ef4a0cd8fd2fd03e3ac86 Mon Sep 17 00:00:00 2001
From: "yun.cai" <yun.cai@amlogic.com>
Date: Fri, 27 Jun 2014 13:40:49 +0800
Subject: [PATCH 4458/5965] PD#92679: M8M2 boot Android on PxP

Conflicts:

	drivers/amlogic/display/vout/tvoutc.c
---
 arch/arm/boot/dts/amlogic/meson8b_pxp.dtd     |  6 +-
 arch/arm/boot/dts/amlogic/meson8m2_pxp.dtd    | 81 ++++++++++++-------
 arch/arm/configs/meson8m2_vlsi_defconfig      |  4 +-
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c |  2 +-
 drivers/amlogic/display/osd/Makefile          |  4 +
 drivers/amlogic/display/osd/osd_hw.c          | 12 +--
 drivers/amlogic/display/osd_ext/Makefile      |  4 +
 drivers/amlogic/display/vout/enc_clk_config.c | 21 ++---
 drivers/amlogic/display/vout/tvconf.c         |  2 +-
 drivers/amlogic/display/vout/tvoutc.c         |  7 +-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c    | 12 +--
 drivers/amlogic/mmc/Makefile                  |  4 +
 drivers/amlogic/mmc/amlsd.c                   |  2 +-
 include/linux/amlogic/vout/enc_clk_config.h   |  2 +-
 scripts/amlogic/mk_m8m2.sh                    | 20 +++++
 15 files changed, 122 insertions(+), 61 deletions(-)
 mode change 100644 => 100755 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c
 create mode 100755 scripts/amlogic/mk_m8m2.sh

diff --git a/arch/arm/boot/dts/amlogic/meson8b_pxp.dtd b/arch/arm/boot/dts/amlogic/meson8b_pxp.dtd
index a0cae590a0a8..d3ef9724157b 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_pxp.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_pxp.dtd
@@ -387,10 +387,10 @@ void root_func(){
         pinctrl-5 = <&sdio_all_pins>;
         pinctrl-6 = <&sd_1bit_pins>;
 
-    sdio{
+    sd{
           status = "okay";
           port = <0>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-          pinname = "sdio";
+          pinname = "sd";
           ocr_avail = <0x200000>;
           caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED", "MMC_CAP_NONREMOVABLE";
           f_min = <300000>;
@@ -460,7 +460,7 @@ void root_func(){
              f_max_w = <50000000>;
              max_req_size = <0x20000>;          /**128KB*/
              gpio_dat3 = "BOOT_3";
-             card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+             card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
          };
     };
 
diff --git a/arch/arm/boot/dts/amlogic/meson8m2_pxp.dtd b/arch/arm/boot/dts/amlogic/meson8m2_pxp.dtd
index 51241a955888..552b2836b685 100755
--- a/arch/arm/boot/dts/amlogic/meson8m2_pxp.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8m2_pxp.dtd
@@ -79,7 +79,7 @@ void root_func(){
 		aml_reserved_start = <0x06000000>; /**reserved memory start */
 		aml_reserved_end = <0x05000000>;/**reserved memory end : dtb start for uboot*/
 		phys_offset = <0x00000000>;
-		linux,total-memory = <0x80000000>;
+		linux,total-memory = <0x40000000>;
 
         #address-cells = <1>;
         #size-cells = <1>;
@@ -167,13 +167,13 @@ void root_func(){
 //$$ DEVICE="vdec"
 //$$ L2 PROP_STR = "status"
 //$$ L3 PROP_U32 4 ="reg"
-        vdec{
-                compatible = "amlogic,vdec";
-                dev_name = "vdec.0";
-                status = "okay";
-                reserve-memory = <0x10000000>;
-                reserve-iomap = "true";
-        };
+//        vdec{
+//                compatible = "amlogic,vdec";
+//                dev_name = "vdec.0";
+//                status = "okay";
+//                reserve-memory = <0x10000000>;
+//                reserve-iomap = "true";
+//        };
 
 /// ***************************************************************************************
 ///	-	DISP&MM-PostProcess
@@ -388,6 +388,20 @@ void root_func(){
         pinctrl-5 = <&sdio_all_pins>;
         pinctrl-6 = <&sd_1bit_pins>;
 
+    sd{
+          status = "okay";
+          port = <0>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+          pinname = "sd";
+          ocr_avail = <0x200000>;
+          caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED", "MMC_CAP_NONREMOVABLE";
+          f_min = <300000>;
+          f_max = <50000000>;
+          max_req_size = <0x20000>;          /**128KB*/
+          card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        };
+
+
+
 //$$ DEVICE="sd"
 //$$ L2 PROP_STR = "status"
 //$$ L3 PROP_U32 = "port"
@@ -405,24 +419,24 @@ void root_func(){
 //$$ L2 PROP_U32 = "irq_in"
 //$$ L2 PROP_U32 = "irq_out"
 //$$ L2 PROP_U32 = "card_type"
-        sd{
-            status = "okay";
-            port = <1>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
-            pinname = "sd";
-            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED";
-            f_min = <300000>;
-            f_max = <50000000>;
-            f_max_w = <50000000>;
-            max_req_size = <0x20000>;          /**128KB*/
-            //gpio_dat3 = "CARD_4";
-            //jtag_pin = "CARD_0";
-            //gpio_cd = "CARD_6";
-            //gpio_ro = "GPIOZ_0";
-            //irq_in = <3>;
-            //irq_out = <5>;
-            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
-        };
+        // sd{
+            // status = "okay";
+            // port = <1>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
+            // pinname = "sd";
+            // ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
+            // caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED";
+            // f_min = <300000>;
+            // f_max = <50000000>;
+            // f_max_w = <50000000>;
+            // max_req_size = <0x20000>;          /**128KB*/
+            // gpio_dat3 = "CARD_4";
+            // jtag_pin = "CARD_0";
+            // gpio_cd = "CARD_6";
+            // gpio_ro = "GPIOZ_0";
+            // irq_in = <3>;
+            // irq_out = <5>;
+            // card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+        // };
 
 //$$ DEVICE="emmc"
 //$$ L2 PROP_STR = "status"
@@ -447,7 +461,7 @@ void root_func(){
             f_max_w = <50000000>;
             max_req_size = <0x20000>;          /**128KB*/
             gpio_dat3 = "BOOT_3";
-            card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
+            card_type = <1>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
         };
     };
 
@@ -944,9 +958,20 @@ void root_func(){
         hp_paraments = <800 300 0 5 1>;
         pinctrl-names = "aml_snd_m8";
         pinctrl-0 = <&audio_pins>;
-        status = "okay";
+        status = "disabled";
         
     };
+	dummy_codec_audio{
+        status = "okay";
+        compatible = "amlogic,aml_dummy_codec_audio";
+        dev_name = "aml_dummy_codec_audio.0";
+    };
+    
+    dummy_codec{
+        status = "okay";
+        compatible = "amlogic,aml_dummy_codec";
+        dev_name = "dummy_codec.0";
+    };
 
 /// ***************************************************************************************
 ///	-	Camera
diff --git a/arch/arm/configs/meson8m2_vlsi_defconfig b/arch/arm/configs/meson8m2_vlsi_defconfig
index a8c1bbd580ad..f4fa0a4565cf 100755
--- a/arch/arm/configs/meson8m2_vlsi_defconfig
+++ b/arch/arm/configs/meson8m2_vlsi_defconfig
@@ -19,16 +19,17 @@ CONFIG_ARCH_MESON8M2=y
 CONFIG_MESON_SUSPEND=y
 CONFIG_MESON_LEGACY_REGISTER_API=y
 CONFIG_ARM_ERRATA_751472=y
+CONFIG_MESON_CPU_EMULATOR=y
 CONFIG_ARM_ERRATA_754322=y
 CONFIG_ARM_ERRATA_764369=y
 CONFIG_SMP=y
-CONFIG_HOTPLUG_CPU=y
 CONFIG_PREEMPT=y
 CONFIG_AEABI=y
 CONFIG_HIGHMEM=y
 CONFIG_KSM=y
 CONFIG_CPU_FREQ=y
 CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_GOV_HOTPLUG is not set
 CONFIG_CPU_FREQ_GOV_INTERACTIVE=y
 CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
 CONFIG_AMLOGIC_MESON_CPUFREQ=y
@@ -216,6 +217,7 @@ CONFIG_SOUND=y
 CONFIG_SND=y
 CONFIG_SND_SOC=y
 CONFIG_SND_AML_M8_SOC=y
+CONFIG_SND_AML_M_DUMMY_CODEC=y
 CONFIG_SND_AML_M8=y
 CONFIG_UHID=y
 # CONFIG_USB_SUPPORT is not set
diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c
old mode 100644
new mode 100755
index 4e9e8bfc2c85..95c62d5f660a
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c
@@ -86,7 +86,7 @@ void hdmi_wr_reg(unsigned int addr, unsigned int data)
     spin_unlock_irqrestore(&reg_lock, flags);
 }
 
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
 #define waiting_aocec_free()    while(aml_read_reg32(P_AO_CEC_RW_REG) & (1<<23))
 unsigned long aocec_rd_reg (unsigned long addr)
 {
diff --git a/drivers/amlogic/display/osd/Makefile b/drivers/amlogic/display/osd/Makefile
index 9c1fec04683f..c5607be4fcfd 100755
--- a/drivers/amlogic/display/osd/Makefile
+++ b/drivers/amlogic/display/osd/Makefile
@@ -9,6 +9,10 @@ fb-objs =  osd_hw.o osd_main.o osd_dev.o  osd_antiflicker.o osd_clone.o
 
 ifeq ($(CONFIG_ARCH_MESON8),y)
 fb-objs += osd_prot.o
+else
+ifeq ($(CONFIG_ARCH_MESON8M2),y)
+fb-objs += osd_prot.o
+endif
 endif
 
 obj-$(CONFIG_VSYNC_RDMA) += osd_rdma.o
diff --git a/drivers/amlogic/display/osd/osd_hw.c b/drivers/amlogic/display/osd/osd_hw.c
index 9f974ffbf3c0..f426bded1568 100755
--- a/drivers/amlogic/display/osd/osd_hw.c
+++ b/drivers/amlogic/display/osd/osd_hw.c
@@ -1231,12 +1231,12 @@ void osd_set_osd_rotate_on_hw(u32 index, u32 on_off)
 	}
 	else
 	{
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
 		VSYNCOSD_SET_MPEG_REG_MASK(VPU_SW_RESET, 1<<8);
 		VSYNCOSD_CLR_MPEG_REG_MASK(VPU_SW_RESET, 1<<8);
 #endif
 		if(index == OSD1){
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
 			VSYNCOSD_SET_MPEG_REG_MASK(VIU_SW_RESET, 1<<0);
 			VSYNCOSD_CLR_MPEG_REG_MASK(VIU_SW_RESET, 1<<0);
 #endif
@@ -2058,7 +2058,7 @@ static void osd1_update_disp_osd_rotate(void)
 	y_end = osd_hw.rotation_pandata[OSD1].y_end;
 	y_len_m1 = y_end-y_start;
 
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
 	osd_set_prot(
                 x_rev,
                 y_rev,
@@ -2130,7 +2130,7 @@ static void osd2_update_disp_osd_rotate(void)
 	y_end = osd_hw.rotation_pandata[OSD2].y_end;
 	y_len_m1 = y_end-y_start;
 
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
 	osd_set_prot(
                 x_rev,
                 y_rev,
@@ -2432,7 +2432,7 @@ static void osd1_update_disp_geometry(void)
 			data32 = ((osd_hw.rotation_pandata[OSD1].y_start + osd_hw.pandata[OSD1].y_start) & 0x1fff)
 					| ((osd_hw.rotation_pandata[OSD1].y_end  + osd_hw.pandata[OSD1].y_start) & 0x1fff) << 16 ;
 			VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK0_CFG_W2,data32);
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
 			VSYNCOSD_WR_MPEG_REG(VPU_PROT1_Y_START_END,data32);
 #endif
 		}else if (osd_hw.rotate[OSD1].on_off
@@ -2443,7 +2443,7 @@ static void osd1_update_disp_geometry(void)
 			data32 = ((osd_hw.rotation_pandata[OSD1].y_start + osd_hw.pandata[OSD1].y_start) & 0x1fff)
 					| ((osd_hw.rotation_pandata[OSD1].y_end  + osd_hw.pandata[OSD1].y_start) & 0x1fff) << 16 ;
 			VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK0_CFG_W2,data32);
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
 			VSYNCOSD_WR_MPEG_REG(VPU_PROT1_Y_START_END,data32);
 #endif
 		}else {
diff --git a/drivers/amlogic/display/osd_ext/Makefile b/drivers/amlogic/display/osd_ext/Makefile
index cf8a4c551daa..7b40e446e542 100755
--- a/drivers/amlogic/display/osd_ext/Makefile
+++ b/drivers/amlogic/display/osd_ext/Makefile
@@ -8,6 +8,10 @@ fb_ext-objs =  osd_hw.o osd_main.o osd_dev.o osd_clone.o
 
 ifeq ($(CONFIG_ARCH_MESON8),y)
 fb_ext-objs += osd_prot.o
+else
+ifeq ($(CONFIG_ARCH_MESON8M2),y)
+fb_ext-objs += osd_prot.o
+endif
 endif
 
 EXTRA_CFLAGS += -Iinclude/linux/osd/
diff --git a/drivers/amlogic/display/vout/enc_clk_config.c b/drivers/amlogic/display/vout/enc_clk_config.c
index 615e4636a45d..09f28bbf33fe 100755
--- a/drivers/amlogic/display/vout/enc_clk_config.c
+++ b/drivers/amlogic/display/vout/enc_clk_config.c
@@ -41,7 +41,7 @@ static void set_hpll_clk_out(unsigned clk)
     aml_write_reg32(P_HHI_VID2_PLL_CNTL2, 0x430a800);       // internal LDO share with HPLL & VIID PLL
 #endif
     switch(clk){
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8)||(defined CONFIG_ARCH_MESON8M2)) 
         case 2970:
             aml_write_reg32(P_HHI_VID_PLL_CNTL2, 0x59c84e00);
             aml_write_reg32(P_HHI_VID_PLL_CNTL3, 0xce49c822);
@@ -83,7 +83,8 @@ static void set_hpll_clk_out(unsigned clk)
                 ;
             }
 #endif
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8)||(defined CONFIG_ARCH_MESON8M2)) 
+
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x6000043d);
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x4000043d);
             printk("waiting HPLL lock[%d]\n", __LINE__);
@@ -97,7 +98,7 @@ static void set_hpll_clk_out(unsigned clk)
 #endif
             break;
         case 1080:
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x6000042d);
     aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x4000042d);
 #endif
@@ -121,7 +122,7 @@ static void set_hpll_clk_out(unsigned clk)
             WRITE_CBUS_REG(HHI_VID_PLL_CNTL, 0x43e);
             break;
         case 1296:
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2)) 
             aml_write_reg32(P_HHI_VID_PLL_CNTL2, 0x59c88000);
             aml_write_reg32(P_HHI_VID_PLL_CNTL3, 0xca49b022);
             aml_write_reg32(P_HHI_VID_PLL_CNTL4, 0x0023b100);
@@ -134,7 +135,7 @@ static void set_hpll_clk_out(unsigned clk)
         default:
             break;
     }
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
 
 #endif
     printk("config HPLL done\n");
@@ -164,7 +165,7 @@ static void set_hpll_hdmi_od(unsigned div)
     }
 }
 
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
 static void set_hpll_lvds_od(unsigned div)
 {
     switch(div) {
@@ -193,7 +194,7 @@ int set_viu_path(unsigned viu_channel_sel, viu_type_e viu_type_sel)
     if((viu_channel_sel > 2) || (viu_channel_sel == 0))
         return -1;
 
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     printk("VPU_VIU_VENC_MUX_CTRL: 0x%x\n", aml_read_reg32(P_VPU_VIU_VENC_MUX_CTRL));
     if(viu_channel_sel == 1){
         aml_set_reg32_bits(P_VPU_VIU_VENC_MUX_CTRL, viu_type_sel, 0, 2);
@@ -238,7 +239,7 @@ static void set_vid_pll_div(unsigned div)
     // Gate enable
     WRITE_CBUS_REG_BITS(HHI_VID_DIVIDER_CNTL, 1, 16, 1);
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     // Gate disable
     aml_set_reg32_bits(P_HHI_VID_DIVIDER_CNTL, 0, 16, 1);
     switch(div){
@@ -354,7 +355,7 @@ static enc_clk_val_t setting_enc_clk_val[] = {
     {VMODE_576CVBS,    1296, 4, 1, 1, VIU_ENCI,  6, 4, 2,-1,  2, -1, -1,  2,  -1},
     {VMODE_576P,       2160, 8, 1, 1, VIU_ENCP,  5, 4, 2, 1, -1, -1, -1,  1,  -1},
 #endif
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
     {VMODE_480I,       1080, 4, 1, 1, VIU_ENCI,  5, 4, 2,-1,  2, -1, -1,  2,  -1},
     {VMODE_480I_RPT,   2160, 4, 1, 1, VIU_ENCI,  5, 4, 2,-1,  4, -1, -1,  2,  -1},
     {VMODE_480CVBS,    1296, 4, 1, 1, VIU_ENCI,  6, 4, 2,-1,  2, -1, -1,  2,  -1},
@@ -397,7 +398,7 @@ void set_vmode_clk(vmode_t mode)
     }
     set_viu_path(p_enc[j].viu_path, p_enc[j].viu_type);
     set_hpll_clk_out(p_enc[j].hpll_clk_out);
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     set_hpll_lvds_od(p_enc[j].hpll_lvds_od);
 #endif
     set_hpll_hdmi_od(p_enc[j].hpll_hdmi_od);
diff --git a/drivers/amlogic/display/vout/tvconf.c b/drivers/amlogic/display/vout/tvconf.c
index 5cf02424adcd..af1b157c40fc 100755
--- a/drivers/amlogic/display/vout/tvconf.c
+++ b/drivers/amlogic/display/vout/tvconf.c
@@ -622,7 +622,7 @@ static __exit void tv_exit_module(void)
 	amlog_mask_level(LOG_MASK_INIT,LOG_LEVEL_HIGH,"exit tv module\r\n");
 }
 
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
 extern void cvbs_config_vdac(unsigned int flag, unsigned int cfg);
 
 static int __init vdac_config_bootargs_setup(char* line)
diff --git a/drivers/amlogic/display/vout/tvoutc.c b/drivers/amlogic/display/vout/tvoutc.c
index 4b0f9dc7c5a1..fe09cd444d6d 100755
--- a/drivers/amlogic/display/vout/tvoutc.c
+++ b/drivers/amlogic/display/vout/tvoutc.c
@@ -287,7 +287,7 @@ static int uboot_display_already(tvmode_t mode)
     */
 }
 
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
 static unsigned int vdac_cfg_valid = 0, vdac_cfg_value = 0;
 static unsigned int cvbs_get_trimming_version(unsigned int flag)
 {
@@ -394,7 +394,7 @@ int tvoutc_setmode(tvmode_t mode)
         }
     }
 
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
 	// for hdmi mode, disable HPLL as soon as possible
 	if( (mode==TVMODE_480I) || (mode==TVMODE_480P) ||
 		(mode==TVMODE_576I) || (mode==TVMODE_576P) ||
@@ -407,6 +407,7 @@ int tvoutc_setmode(tvmode_t mode)
 	{
 		WRITE_CBUS_REG_BITS(HHI_VID_PLL_CNTL, 0x0, 30, 1);
 	}
+
     cvbs_cntl_output(0);
 #endif
     while (MREG_END_MARKER != s->reg)
@@ -500,7 +501,7 @@ printk(" clk_util_clk_msr 29 = %d\n", clk_util_clk_msr(29));
 	}
 #endif
 
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     if( (mode==TVMODE_480CVBS) || (mode==TVMODE_576CVBS) )
     {
         msleep(1000);
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
index 385eb427cf48..fff63180c438 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
@@ -217,7 +217,7 @@ void cec_node_init(hdmitx_dev_t* hdmitx_device)
     aml_write_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK, aml_read_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK) | (1 << 23));            // Enable the hdmi cec interrupt
 
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
 #if 1           // Please match with H/W cec config
 // GPIOAO_12
     aml_set_reg32_bits(P_AO_RTI_PIN_MUX_REG, 0, 14, 1);       // bit[14]: AO_PWM_C pinmux                  //0xc8100014
@@ -277,7 +277,7 @@ void cec_node_init(hdmitx_dev_t* hdmitx_device)
 #ifdef CONFIG_ARCH_MESON6
             hdmi_wr_reg(CEC0_BASE_ADDR+CEC_LOGICAL_ADDR0, (0x1 << 4) | player_dev[i]);
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
             aocec_wr_reg(CEC_LOGICAL_ADDR0, (0x1 << 4) | player_dev[i]);
 #endif
      		hdmi_print(INF, CEC "Set logical address: %d\n", player_dev[i]);
@@ -649,7 +649,7 @@ static irqreturn_t cec_isr_handler(int irq, void *dev_instance)
 
     //cec_disable_irq();
 
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     intr_stat = aml_read_reg32(P_AO_CEC_INTR_STAT);
     hdmi_print(INF, CEC "aocec irq %x\n", intr_stat);
 
@@ -1588,7 +1588,7 @@ static int __init cec_init(void)
         return -EFAULT;
     }
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     if(request_irq(INT_AO_CEC, &cec_isr_handler,
                 IRQF_SHARED, "amhdmitx-aocec",
                 (void *)hdmitx_device)){
@@ -1637,7 +1637,7 @@ static void __exit cec_uninit(void)
         aml_write_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK, aml_read_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK) & ~(1 << 23));            // Disable the hdmi cec interrupt
         free_irq(INT_HDMI_CEC, (void *)hdmitx_device);
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
         free_irq(INT_AO_CEC, (void *)hdmitx_device);
 #endif
     	kthread_stop(hdmitx_device->task_cec);
@@ -1765,7 +1765,7 @@ void cec_usrcmd_set_dispatch(const char * buf, size_t count)
             i ++;
     }
     param[j]=0;
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     if(strncmp(buf, "waocec", 6)==0){
         bit_set = simple_strtoul(buf+6, NULL, 16);
         time_set = simple_strtoul(buf+8, NULL, 16);
diff --git a/drivers/amlogic/mmc/Makefile b/drivers/amlogic/mmc/Makefile
index ba066d29a561..10db653fea5a 100755
--- a/drivers/amlogic/mmc/Makefile
+++ b/drivers/amlogic/mmc/Makefile
@@ -10,6 +10,10 @@ obj-$(CONFIG_MMC_AML)   += aml_sdio.o amlsd.o amlsd_of.o
 
 ifeq ($(CONFIG_ARCH_MESON8),y)
 	obj-$(CONFIG_MMC_AML) += aml_sdhc_m8.o
+else
+ifeq ($(CONFIG_ARCH_MESON8M2),y)
+	obj-$(CONFIG_MMC_AML) += aml_sdhc_m8.o
+endif
 endif
 
 ifeq ($(CONFIG_ARCH_MESON8B),y)
diff --git a/drivers/amlogic/mmc/amlsd.c b/drivers/amlogic/mmc/amlsd.c
index cf9ddaa79256..41a39b1aef50 100644
--- a/drivers/amlogic/mmc/amlsd.c
+++ b/drivers/amlogic/mmc/amlsd.c
@@ -1251,7 +1251,7 @@ int aml_check_unsupport_cmd(struct mmc_host* mmc, struct mmc_request* mrq)
 
 int aml_sd_voltage_switch (struct amlsd_platform* pdata, char signal_voltage)
 {
-#ifdef CONFIG_ARCH_MESON8
+#if ((defined CONFIG_ARCH_MESON8)  || (defined CONFIG_ARCH_MESON8M2))
 #ifdef CONFIG_AMLOGIC_BOARD_HAS_PMU
     int vol = LDO4DAC_REG_3_3_V;
     int delay_ms = 0;
diff --git a/include/linux/amlogic/vout/enc_clk_config.h b/include/linux/amlogic/vout/enc_clk_config.h
index 821f20e5a236..dac86702c895 100755
--- a/include/linux/amlogic/vout/enc_clk_config.h
+++ b/include/linux/amlogic/vout/enc_clk_config.h
@@ -18,7 +18,7 @@ typedef struct enc_clk_val{
     vmode_t mode;
     unsigned hpll_clk_out;
     unsigned hpll_hdmi_od;
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
+#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
     unsigned hpll_lvds_od;
 #endif
     unsigned viu_path;
diff --git a/scripts/amlogic/mk_m8m2.sh b/scripts/amlogic/mk_m8m2.sh
new file mode 100755
index 000000000000..f573f57361fc
--- /dev/null
+++ b/scripts/amlogic/mk_m8m2.sh
@@ -0,0 +1,20 @@
+#! /bin/bash
+
+#make UIMAGE_COMPRESSION=none uImage -j
+make uImage -j
+#make modules
+
+make meson8m2_skt.dtd
+make meson8m2_skt.dtb
+
+#cd ../root/g18
+#find .| cpio -o -H newc | gzip -9 > ../ramdisk.img
+
+#rootfs.cpio -- original buildroot rootfs, busybox
+#m8rootfs.cpio -- build from buildroot
+ROOTFS="rootfs.cpio"
+
+#cd ..
+./mkbootimg --kernel ./arch/arm/boot/uImage --ramdisk ./${ROOTFS} --second ./arch/arm/boot/dts/amlogic/meson8m2_skt.dtb --output ./m8boot.img
+ls -l ./m8boot.img
+echo "m8boot.img done"
-- 
2.19.0

