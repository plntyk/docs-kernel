From 1f7d98ca37f5d77deedbd164dec854c29c0a4ebe Mon Sep 17 00:00:00 2001
From: "zongdong.jiao" <zongdong.jiao@amlogic.com>
Date: Tue, 1 Jul 2014 17:18:24 +0800
Subject: [PATCH 4461/5965] hdmitx: using MESON_CPU_TYPE macro

---
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c |  2 +-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c    | 27 +++++++++----------
 2 files changed, 14 insertions(+), 15 deletions(-)

diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c
index 95c62d5f660a..e3d965f01cd8 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_reg.c
@@ -86,7 +86,7 @@ void hdmi_wr_reg(unsigned int addr, unsigned int data)
     spin_unlock_irqrestore(&reg_lock, flags);
 }
 
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8M2))
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 #define waiting_aocec_free()    while(aml_read_reg32(P_AO_CEC_RW_REG) & (1<<23))
 unsigned long aocec_rd_reg (unsigned long addr)
 {
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
index fff63180c438..4aee0a75e26c 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
@@ -210,14 +210,14 @@ void cec_node_init(hdmitx_dev_t* hdmitx_device)
         vendor_id = (vend_data->vendor_id ) & 0xffffff;
     }
 #endif
-#ifdef CONFIG_ARCH_MESON6
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
     aml_set_reg32_bits(P_PERIPHS_PIN_MUX_1, 1, 25, 1);
     // Clear CEC Int. state and set CEC Int. mask
     aml_write_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_STAT_CLR, aml_read_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_STAT_CLR) | (1 << 23));    // Clear the interrupt
     aml_write_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK, aml_read_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK) | (1 << 23));            // Enable the hdmi cec interrupt
 
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 #if 1           // Please match with H/W cec config
 // GPIOAO_12
     aml_set_reg32_bits(P_AO_RTI_PIN_MUX_REG, 0, 14, 1);       // bit[14]: AO_PWM_C pinmux                  //0xc8100014
@@ -274,10 +274,10 @@ void cec_node_init(hdmitx_dev_t* hdmitx_device)
             cec_global_info.cec_node_info[player_dev[i]].dev_type = cec_log_addr_to_dev_type(player_dev[i]);
             cec_global_info.cec_node_info[player_dev[i]].dev_type = cec_log_addr_to_dev_type(player_dev[i]);
             strcpy(cec_global_info.cec_node_info[player_dev[i]].osd_name, osd_name); //Max num: 14Bytes
-#ifdef CONFIG_ARCH_MESON6
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
             hdmi_wr_reg(CEC0_BASE_ADDR+CEC_LOGICAL_ADDR0, (0x1 << 4) | player_dev[i]);
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
             aocec_wr_reg(CEC_LOGICAL_ADDR0, (0x1 << 4) | player_dev[i]);
 #endif
      		hdmi_print(INF, CEC "Set logical address: %d\n", player_dev[i]);
@@ -348,7 +348,7 @@ static int cec_task(void *data)
     hdmi_print(INF, CEC "CEC task process\n");
     if(hdmitx_device->cec_func_config & (1 << CEC_FUNC_MSAK)){
         msleep_interruptible(10000);
-#ifdef CONFIG_ARCH_MESON6
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
         cec_gpi_init();
 #endif
         cec_node_init(hdmitx_device);
@@ -648,8 +648,7 @@ static irqreturn_t cec_isr_handler(int irq, void *dev_instance)
     unsigned int intr_stat = 0;
 
     //cec_disable_irq();
-
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     intr_stat = aml_read_reg32(P_AO_CEC_INTR_STAT);
     hdmi_print(INF, CEC "aocec irq %x\n", intr_stat);
 
@@ -1565,7 +1564,7 @@ static int __init cec_init(void)
     cec_global_info.cec_flag.cec_fiq_flag = 0;
     cec_global_info.cec_flag.cec_init_flag = 0;
     
-#ifdef CONFIG_ARCH_MESON6
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
     hdmi_wr_reg(CEC0_BASE_ADDR+CEC_CLOCK_DIV_H, 0x00 );
     hdmi_wr_reg(CEC0_BASE_ADDR+CEC_CLOCK_DIV_L, 0xf0 );
 #endif
@@ -1580,7 +1579,7 @@ static int __init cec_init(void)
     cec_global_info.hdmitx_device = hdmitx_device;
     
     hdmitx_device->task_cec = kthread_run(cec_task, (void*)hdmitx_device, "kthread_cec");
-#ifdef CONFIG_ARCH_MESON6
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
     if(request_irq(INT_HDMI_CEC, &cec_isr_handler,
                 IRQF_SHARED, "amhdmitx-cec",
                 (void *)hdmitx_device)){
@@ -1588,7 +1587,7 @@ static int __init cec_init(void)
         return -EFAULT;
     }
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     if(request_irq(INT_AO_CEC, &cec_isr_handler,
                 IRQF_SHARED, "amhdmitx-aocec",
                 (void *)hdmitx_device)){
@@ -1633,11 +1632,11 @@ static void __exit cec_uninit(void)
     hdmi_print(INF, CEC "cec uninit!\n");
     if (cec_global_info.cec_flag.cec_init_flag == 1) {
 
-#ifdef CONFIG_ARCH_MESON6
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
         aml_write_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK, aml_read_reg32(P_SYS_CPU_0_IRQ_IN1_INTR_MASK) & ~(1 << 23));            // Disable the hdmi cec interrupt
         free_irq(INT_HDMI_CEC, (void *)hdmitx_device);
 #endif
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
         free_irq(INT_AO_CEC, (void *)hdmitx_device);
 #endif
     	kthread_stop(hdmitx_device->task_cec);
@@ -1719,7 +1718,7 @@ void cec_usrcmd_set_config(const char * buf, size_t count)
     if((0 == value) && (1 == (param[0] & 1))){
         hdmitx_device->cec_init_ready = 1;
         hdmitx_device->hpd_state = 1;
-#ifdef CONFIG_ARCH_MESON6
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
         cec_gpi_init();
 #endif
         cec_node_init(hdmitx_device);
@@ -1765,7 +1764,7 @@ void cec_usrcmd_set_dispatch(const char * buf, size_t count)
             i ++;
     }
     param[j]=0;
-#if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B) || (defined CONFIG_ARCH_MESON8M2))
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
     if(strncmp(buf, "waocec", 6)==0){
         bit_set = simple_strtoul(buf+6, NULL, 16);
         time_set = simple_strtoul(buf+8, NULL, 16);
-- 
2.19.0

