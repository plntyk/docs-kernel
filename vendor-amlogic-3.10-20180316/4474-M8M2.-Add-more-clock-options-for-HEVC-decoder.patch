From 718d578106c274edb7511b56a5d898f4ce6dfb1d Mon Sep 17 00:00:00 2001
From: timyao <tim.yao@amlogic.com>
Date: Wed, 2 Jul 2014 18:57:20 -0700
Subject: [PATCH 4474/5965] M8M2. Add more clock options for HEVC decoder.

---
 drivers/amlogic/amports/m8b/vdec_clk.c  | 19 +++++++++++++++++++
 drivers/amlogic/amports/m8m2/vdec_clk.c | 20 ++++++++++++++++++++
 drivers/amlogic/amports/vdec_clk.h      |  1 +
 3 files changed, 40 insertions(+)

diff --git a/drivers/amlogic/amports/m8b/vdec_clk.c b/drivers/amlogic/amports/m8b/vdec_clk.c
index f204fcb2411b..3503199632b1 100644
--- a/drivers/amlogic/amports/m8b/vdec_clk.c
+++ b/drivers/amlogic/amports/m8b/vdec_clk.c
@@ -70,6 +70,7 @@ HHI_VDEC_CLK_CNTL
 //364.29M <-- (2550/7)/1 -- over limit, do not use
 #define VDEC1_364M() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL,  (3 << 9) | (0), 0, 16)
 #define VDEC2_364M() WRITE_MPEG_REG(HHI_VDEC2_CLK_CNTL, (3 << 9) | (0))
+#define HEVC_364M()  WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, (3 << 9) | (0), 16, 16)
 
 #define VDEC1_CLOCK_ON()   WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 1, 8, 1); \
                            WRITE_MPEG_REG_BITS(HHI_VDEC3_CLK_CNTL, 0, 15, 1); \
@@ -82,6 +83,8 @@ HHI_VDEC_CLK_CNTL
 #define HCODEC_CLOCK_ON()  WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL,  1, 24, 1); \
                            WRITE_VREG_BITS(DOS_GCLK_EN0, 0x7fff, 12, 15)
 #define HEVC_CLOCK_ON()    WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 1, 24, 1); \
+                           WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 0, 31, 1); \
+                           WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 0, 24, 1); \
                            WRITE_VREG(DOS_GCLK_EN3, 0xffffffff)
 #define VDEC1_SAFE_CLOCK() WRITE_MPEG_REG_BITS(HHI_VDEC3_CLK_CNTL, READ_MPEG_REG(HHI_VDEC_CLK_CNTL) & 0x7f, 0, 7); \
                            WRITE_MPEG_REG_BITS(HHI_VDEC3_CLK_CNTL, 1, 8, 1); \
@@ -92,6 +95,9 @@ HHI_VDEC_CLK_CNTL
 #define VDEC1_CLOCK_OFF()  WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL,  0, 8, 1)
 #define VDEC2_CLOCK_OFF()  WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 0, 8, 1)
 #define HCODEC_CLOCK_OFF() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 0, 24, 1)
+#define HEVC_SAFE_CLOCK()  WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, (READ_MPEG_REG(HHI_VDEC2_CLK_CNTL) >> 16) & 0x7f, 16, 7); \
+                           WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 1, 24, 1); \
+                           WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 1, 31, 1)
 #define HEVC_CLOCK_OFF()   WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 0, 24, 1)
 
 static int clock_level[VDEC_MAX+1];
@@ -172,6 +178,14 @@ void hevc_clock_enable(void)
     HEVC_CLOCK_ON();
 }
 
+void hevc_clock_hi_enable(void)
+{
+    HEVC_CLOCK_OFF();
+    HEVC_364M();
+    HEVC_CLOCK_ON();
+    clock_level[VDEC_HEVC] = 1;
+}
+
 void hevc_clock_on(void)
 {
     HEVC_CLOCK_ON();
@@ -192,6 +206,11 @@ void vdec2_clock_prepare_switch(void)
     VDEC2_SAFE_CLOCK();
 }
 
+void hevc_clock_prepare_switch(void)
+{
+    HEVC_SAFE_CLOCK();
+}
+
 int vdec_clock_level(vdec_type_t core)
 {
     if (core < VDEC_MAX)
diff --git a/drivers/amlogic/amports/m8m2/vdec_clk.c b/drivers/amlogic/amports/m8m2/vdec_clk.c
index 255fd6e68db5..84cf0668e5ca 100644
--- a/drivers/amlogic/amports/m8m2/vdec_clk.c
+++ b/drivers/amlogic/amports/m8m2/vdec_clk.c
@@ -71,9 +71,11 @@ HHI_VDEC_CLK_CNTL
 
 //510.00M <-- (2550/5)/1
 #define VDEC1_510M() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL,  (2 << 9) | (0), 0, 16)
+#define HEVC_510M()  WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, (2 << 9) | (0), 16, 16)
 
 //637.50M <-- (2550/4)/1
 #define VDEC1_638M() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL,  (0 << 9) | (0), 0, 16)
+#define HEVC_638M()  WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, (0 << 9) | (0), 16, 16)
 
 #define VDEC1_CLOCK_ON()   WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 1, 8, 1); \
                            WRITE_MPEG_REG_BITS(HHI_VDEC3_CLK_CNTL, 0, 15, 1); \
@@ -82,12 +84,17 @@ HHI_VDEC_CLK_CNTL
 #define HCODEC_CLOCK_ON()  WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL,  1, 24, 1); \
                            WRITE_VREG_BITS(DOS_GCLK_EN0, 0x7fff, 12, 15)
 #define HEVC_CLOCK_ON()    WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 1, 24, 1); \
+                           WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 0, 31, 1); \
+                           WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 0, 24, 1); \
                            WRITE_VREG(DOS_GCLK_EN3, 0xffffffff)
 #define VDEC1_SAFE_CLOCK() WRITE_MPEG_REG_BITS(HHI_VDEC3_CLK_CNTL, READ_MPEG_REG(HHI_VDEC_CLK_CNTL) & 0x7f, 0, 7); \
                            WRITE_MPEG_REG_BITS(HHI_VDEC3_CLK_CNTL, 1, 8, 1); \
                            WRITE_MPEG_REG_BITS(HHI_VDEC3_CLK_CNTL, 1, 15, 1);
 #define VDEC1_CLOCK_OFF()  WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL,  0, 8, 1)
 #define HCODEC_CLOCK_OFF() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 0, 24, 1)
+#define HEVC_SAFE_CLOCK()  WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, (READ_MPEG_REG(HHI_VDEC2_CLK_CNTL) >> 16) & 0x7f, 16, 7); \
+                           WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 1, 24, 1); \
+                           WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 1, 31, 1)
 #define HEVC_CLOCK_OFF()   WRITE_MPEG_REG_BITS(HHI_VDEC2_CLK_CNTL, 0, 24, 1)
 
 static int clock_level[VDEC_MAX+1];
@@ -142,6 +149,14 @@ void hevc_clock_enable(void)
     HEVC_CLOCK_ON();
 }
 
+void hevc_clock_hi_enable(void)
+{
+    HEVC_CLOCK_OFF();
+    HEVC_638M();
+    HEVC_CLOCK_ON();
+    clock_level[VDEC_HEVC] = 1;
+}
+
 void hevc_clock_on(void)
 {
     HEVC_CLOCK_ON();
@@ -157,6 +172,11 @@ void vdec_clock_prepare_switch(void)
     VDEC1_SAFE_CLOCK();
 }
 
+void hevc_clock_prepare_switch(void)
+{
+    HEVC_SAFE_CLOCK();
+}
+
 int vdec_clock_level(vdec_type_t core)
 {
     if (core < VDEC_MAX)
diff --git a/drivers/amlogic/amports/vdec_clk.h b/drivers/amlogic/amports/vdec_clk.h
index ce45cc3413be..eae576fca35e 100755
--- a/drivers/amlogic/amports/vdec_clk.h
+++ b/drivers/amlogic/amports/vdec_clk.h
@@ -47,6 +47,7 @@ extern int vdec_clock_level(vdec_type_t core);
 
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
 extern void vdec_clock_prepare_switch(void);
+extern void hevc_clock_prepare_switch(void);
 #endif
 
 #endif /* VDEC_CLK_H */
-- 
2.19.0

