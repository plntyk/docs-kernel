From 17da8260bcdcb23a09399d6aaddb416d8ba3c6f9 Mon Sep 17 00:00:00 2001
From: timyao <tim.yao@amlogic.com>
Date: Fri, 11 Jul 2014 01:39:32 -0700
Subject: [PATCH 4509/5965] Fix compiling when M8M2 branch is merged to trunk.

---
 drivers/amlogic/amports/m6/Makefile   |  2 ++
 drivers/amlogic/amports/m6/vdec_clk.c | 10 ----------
 drivers/amlogic/amports/vdec.c        |  4 +++-
 drivers/amlogic/amports/vdec.h        |  3 +--
 drivers/amlogic/amports/vdec_clk.h    |  3 ---
 drivers/amlogic/amports/vdec_reg.h    | 25 ++++++++++++-------------
 6 files changed, 18 insertions(+), 29 deletions(-)

diff --git a/drivers/amlogic/amports/m6/Makefile b/drivers/amlogic/amports/m6/Makefile
index 079a72624131..40d685b1c983 100755
--- a/drivers/amlogic/amports/m6/Makefile
+++ b/drivers/amlogic/amports/m6/Makefile
@@ -1,2 +1,4 @@
 
+obj-y                           += vdec_clk.o
+
 obj-y				+= ucode/
diff --git a/drivers/amlogic/amports/m6/vdec_clk.c b/drivers/amlogic/amports/m6/vdec_clk.c
index c20ed19f0e5d..748a05d26f7c 100644
--- a/drivers/amlogic/amports/m6/vdec_clk.c
+++ b/drivers/amlogic/amports/m6/vdec_clk.c
@@ -51,16 +51,6 @@ bit8: vdec.gate
 #define VDEC_CLOCK_GATE_ON()  WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 1, 8, 1)
 #define VDEC_CLOCK_GATE_OFF() WRITE_MPEG_REG_BITS(HHI_VDEC_CLK_CNTL, 0, 8, 1)
 
-#define vdec_clock_enable() \
-    VDEC_200M(); \
-    clock_level = 0; \
-    WRITE_VREG(DOS_GCLK_EN0, 0xffffffff)
-
-#define vdec_clock_hi_enable() \
-    VDEC_250M(); \
-    clock_level = 1; \
-    WRITE_VREG(DOS_GCLK_EN0, 0xffffffff)
-
 static int clock_level[VDEC_MAX+1];
 
 void vdec_clock_enable(void)
diff --git a/drivers/amlogic/amports/vdec.c b/drivers/amlogic/amports/vdec.c
index 785f25104c9e..541a999cf8ac 100755
--- a/drivers/amlogic/amports/vdec.c
+++ b/drivers/amlogic/amports/vdec.c
@@ -517,7 +517,9 @@ static ssize_t amrisc_regs_show(struct class *class, struct class_attribute *att
     int rsize = sizeof(am_risc) / sizeof(struct am_reg);
     int i;
     unsigned  val;
-	unsigned long flags;
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
+    unsigned long flags;
+#endif
 
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
     spin_lock_irqsave(&lock, flags);
diff --git a/drivers/amlogic/amports/vdec.h b/drivers/amlogic/amports/vdec.h
index f6e3dfab04b8..09cf48ddb135 100755
--- a/drivers/amlogic/amports/vdec.h
+++ b/drivers/amlogic/amports/vdec.h
@@ -38,8 +38,6 @@ s32 vdec_dev_register(void);
 s32 vdec_dev_unregister(void);
 void vdec_power_mode(int level);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
-
 typedef enum {
     VDEC_1 = 0,
     VDEC_HCODEC,
@@ -48,6 +46,7 @@ typedef enum {
     VDEC_MAX
 } vdec_type_t;
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 extern void vdec2_power_mode(int level);
 extern void vdec_poweron(vdec_type_t core);
 extern void vdec_poweroff(vdec_type_t core);
diff --git a/drivers/amlogic/amports/vdec_clk.h b/drivers/amlogic/amports/vdec_clk.h
index eae576fca35e..845c46c0e6cb 100755
--- a/drivers/amlogic/amports/vdec_clk.h
+++ b/drivers/amlogic/amports/vdec_clk.h
@@ -40,10 +40,7 @@ extern void hcodec_clock_on(void);
 extern void hcodec_clock_off(void);
 extern void hevc_clock_on(void);
 extern void hevc_clock_off(void);
-
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6TVD
 extern int vdec_clock_level(vdec_type_t core);
-#endif
 
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
 extern void vdec_clock_prepare_switch(void);
diff --git a/drivers/amlogic/amports/vdec_reg.h b/drivers/amlogic/amports/vdec_reg.h
index c386bdf55641..178206f56b8a 100755
--- a/drivers/amlogic/amports/vdec_reg.h
+++ b/drivers/amlogic/amports/vdec_reg.h
@@ -34,20 +34,19 @@
 #endif
 
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
-//#define READ_VREG(r) (__raw_readl((volatile void __iomem *)DOS_REG_ADDR(r)))
+#define READ_VREG(r) (__raw_readl((volatile void __iomem *)DOS_REG_ADDR(r)))
+//static inline u32 READ_VREG(u32 r)
+//{
+//    if (((r) > 0x2000) && ((r) < 0x3000) && !vdec_on(2)) dump_stack();
+//    return __raw_readl((volatile void __iomem *)DOS_REG_ADDR(r));
+//}
 
-static inline u32 READ_VREG(u32 r)
-{
-    if (((r) > 0x2000) && ((r) < 0x3000) && !vdec_on(2)) dump_stack();
-    return __raw_readl((volatile void __iomem *)DOS_REG_ADDR(r));
-}
-
-//#define WRITE_VREG(r, val) __raw_writel(val, (volatile void __iomem *)(DOS_REG_ADDR(r)))
-static inline void WRITE_VREG(u32 r, u32 val)
-{
-    if (((r) > 0x2000) && ((r) < 0x3000) && !vdec_on(2)) dump_stack();
-    __raw_writel(val, (volatile void __iomem *)(DOS_REG_ADDR(r)));
-}
+#define WRITE_VREG(r, val) __raw_writel(val, (volatile void __iomem *)(DOS_REG_ADDR(r)))
+//static inline void WRITE_VREG(u32 r, u32 val)
+//{
+//    if (((r) > 0x2000) && ((r) < 0x3000) && !vdec_on(2)) dump_stack();
+//    __raw_writel(val, (volatile void __iomem *)(DOS_REG_ADDR(r)));
+//}
 
 #define WRITE_VREG_BITS(r, val, start, len) \
     WRITE_VREG(r, (READ_VREG(r) & ~(((1L<<(len))-1)<<(start)))|((unsigned)((val)&((1L<<(len))-1)) << (start)))
-- 
2.19.0

