From 273f2277389c7c5e8bcb38ef1bf0662cc6bb0b83 Mon Sep 17 00:00:00 2001
From: "shi.liu" <shi.liu@amlogic.com>
Date: Mon, 7 Jul 2014 11:24:56 +0800
Subject: [PATCH 4516/5965] PD #91697: mm: optimize cma allocation

---
 mm/vmscan.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/mm/vmscan.c b/mm/vmscan.c
index 0c375c20f55d..14bd987d913e 100755
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -1052,20 +1052,22 @@ int __isolate_lru_page(struct page *page, isolate_mode_t mode, gfp_t gfp_mask)
 	int ret = -EINVAL;
 	unsigned long free_cma, total_free;
 
+	if(!(mode & ISOLATE_UNEVICTABLE)){
 #if 1
-	free_cma = global_page_state(NR_FREE_CMA_PAGES);
-	free_cma += free_cma << 1;
-	total_free = global_page_state(NR_FREE_PAGES);
-	if(page){
-		if((free_cma > total_free) && is_migrate_cma(get_pageblock_migratetype(page))){
-			return -EBUSY;
+		free_cma = global_page_state(NR_FREE_CMA_PAGES);
+		free_cma += free_cma << 1;
+		total_free = global_page_state(NR_FREE_PAGES);
+		if(page){
+			if((free_cma > total_free) && is_migrate_cma(get_pageblock_migratetype(page))){
+				return -EBUSY;
+			}
 		}
-	}
 #endif
 
-	if((allocflags_to_migratetype(gfp_mask) & MIGRATE_MOVABLE == 0) \
-		&& is_migrate_cma(get_pageblock_migratetype(page))){
-		return -EBUSY;
+		if((allocflags_to_migratetype(gfp_mask) & MIGRATE_MOVABLE == 0) \
+			&& is_migrate_cma(get_pageblock_migratetype(page))){
+			return -EBUSY;
+		}
 	}
 
 	/* Only take pages on the LRU. */
-- 
2.19.0

