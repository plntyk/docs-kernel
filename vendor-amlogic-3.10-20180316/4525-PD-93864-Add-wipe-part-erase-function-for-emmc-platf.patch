From 3c4a65c113fdbf22fea8ffc5fb9fcfbb02eb0a5e Mon Sep 17 00:00:00 2001
From: "benjamin.zhao" <benjamin.zhao@amlogic.com>
Date: Tue, 15 Jul 2014 15:00:51 +0800
Subject: [PATCH 4525/5965] PD#93864: Add wipe part erase function for emmc
 platforms

---
 .../dts/amlogic/meson8_k200b_1G_emmc_sdhc.dtd |   4 +-
 .../dts/amlogic/meson8_k200b_1G_emmc_sdio.dtd |   4 +-
 arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd |   4 +-
 .../boot/dts/amlogic/meson8_k200b_2G_4k2k.dtd |   4 +-
 .../dts/amlogic/meson8_k200b_2G_hdmiin.dtd    |   2 +-
 arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd |   4 +-
 .../boot/dts/amlogic/meson8b_m101_512M.dtd    |   4 +-
 arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd |   4 +-
 arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd |   6 +-
 arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd |   4 +-
 .../boot/dts/amlogic/meson8b_m202_512M.dtd    |   4 +-
 arch/arm/boot/dts/amlogic/meson8b_skt.dtd     |   4 +-
 drivers/mmc/card/block.c                      | 101 ++++++++++++++++++
 drivers/mmc/core/core.c                       |   4 +
 14 files changed, 129 insertions(+), 24 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8_k200b_1G_emmc_sdhc.dtd b/arch/arm/boot/dts/amlogic/meson8_k200b_1G_emmc_sdhc.dtd
index c4b88946a3cd..4687b5a6693f 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200b_1G_emmc_sdhc.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200b_1G_emmc_sdhc.dtd
@@ -502,7 +502,7 @@ sdio{
 //            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            f_min = <300000>;
 //            f_max = <50000000>;
 //            f_max_w = <50000000>;
@@ -599,7 +599,7 @@ sdio{
             port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
-            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             caps2 = "MMC_CAP2_HS200_1_8V_SDR";
             f_min = <300000>;
             f_max = <100000000>;
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200b_1G_emmc_sdio.dtd b/arch/arm/boot/dts/amlogic/meson8_k200b_1G_emmc_sdio.dtd
index 3f494f6de4c3..68f775998e37 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200b_1G_emmc_sdio.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200b_1G_emmc_sdio.dtd
@@ -502,7 +502,7 @@ sdio{
             port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
             f_max = <50000000>;
             f_max_w = <50000000>;
@@ -599,7 +599,7 @@ sdio{
 //            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
-//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            caps2 = "MMC_CAP2_HS200_1_8V_SDR";
 //            f_min = <300000>;
 //            f_max = <100000000>;
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd b/arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd
index ebca3c5f06fd..002d88ccaa01 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200b_2G.dtd
@@ -478,7 +478,7 @@ sdio{
             port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
             f_max = <50000000>;
             f_max_w = <50000000>;
@@ -575,7 +575,7 @@ sdio{
 //            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            f_min = <300000>;
 //            f_max = <50000000>;
 //            max_req_size = <0x20000>;          /**128KB*/
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200b_2G_4k2k.dtd b/arch/arm/boot/dts/amlogic/meson8_k200b_2G_4k2k.dtd
index 4f123ac8a525..cee5131b2698 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200b_2G_4k2k.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200b_2G_4k2k.dtd
@@ -478,7 +478,7 @@ sdio{
             port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
             f_max = <50000000>;
             f_max_w = <50000000>;
@@ -575,7 +575,7 @@ sdio{
 //            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            f_min = <300000>;
 //            f_max = <50000000>;
 //            max_req_size = <0x20000>;          /**128KB*/
diff --git a/arch/arm/boot/dts/amlogic/meson8_k200b_2G_hdmiin.dtd b/arch/arm/boot/dts/amlogic/meson8_k200b_2G_hdmiin.dtd
index ef485d65c977..260676731ba5 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k200b_2G_hdmiin.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k200b_2G_hdmiin.dtd
@@ -483,7 +483,7 @@ sdio{
             port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
             f_max = <50000000>;
             f_max_w = <50000000>;
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd
index a17d507fa463..4c484628d392 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd
@@ -481,7 +481,7 @@ void root_func(){
 //            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            f_min = <300000>;
 //            f_max = <50000000>;
 //            f_max_w = <50000000>;
@@ -582,7 +582,7 @@ void root_func(){
             port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
             f_max = <40000000>;
             max_req_size = <0x20000>;          /**128KB*/
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
index c0fef05caa5f..ef572e8a01bf 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
@@ -460,7 +460,7 @@ void root_func(){
 //            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            f_min = <300000>;
 //            f_max = <50000000>;
 //            f_max_w = <50000000>;
@@ -556,7 +556,7 @@ void root_func(){
 //            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
-//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            caps2 = "MMC_CAP2_HS200_1_8V_SDR";
 //            f_min = <300000>;
 //            f_max = <100000000>;
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
index 97dfbc8fa797..a8ea0dbfa1b7 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
@@ -439,7 +439,7 @@ void root_func(){
 //            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            f_min = <300000>;
 //            f_max = <50000000>;
 //            f_max_w = <50000000>;
@@ -535,7 +535,7 @@ void root_func(){
 //            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
-//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            caps2 = "MMC_CAP2_HS200_1_8V_SDR";
 //            f_min = <300000>;
 //            f_max = <100000000>;
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
index eecd45ff3329..1bd0fa9551c9 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
@@ -491,7 +491,7 @@ void root_func(){
 //            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            f_min = <300000>;
 //            f_max = <50000000>;
 //            f_max_w = <50000000>;
@@ -592,9 +592,9 @@ void root_func(){
             port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             caps2 = "MMC_CAP2_HS200_1_8V_SDR";
-	    f_min = <300000>;
+	        f_min = <300000>;
             f_max = <150000000>;
             max_req_size = <0x20000>;          /**128KB*/
             gpio_dat3 = "BOOT_3";
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd
index 387c493fa0ab..48bd33470d7c 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd
@@ -491,7 +491,7 @@ void root_func(){
             port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
             f_max = <50000000>;
             f_max_w = <50000000>;
@@ -588,7 +588,7 @@ void root_func(){
 //            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
-//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            caps2 = "MMC_CAP2_HS200_1_8V_SDR";
 //            f_min = <300000>;
 //            f_max = <100000000>;
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m202_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m202_512M.dtd
index 9a67ff23fdb2..962e709e66d6 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m202_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m202_512M.dtd
@@ -483,7 +483,7 @@ void root_func(){
             port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
             f_max = <50000000>;
             f_max_w = <50000000>;
@@ -580,7 +580,7 @@ void root_func(){
 //            port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
-//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            caps2 = "MMC_CAP2_HS200_1_8V_SDR";
 //            f_min = <300000>;
 //            f_max = <100000000>;
diff --git a/arch/arm/boot/dts/amlogic/meson8b_skt.dtd b/arch/arm/boot/dts/amlogic/meson8b_skt.dtd
index 2bf3b5a8ee24..b30e8b61f412 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_skt.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_skt.dtd
@@ -442,7 +442,7 @@ void root_func(){
 //            port = <2>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
 //            pinname = "emmc";
 //            ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+//            caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
 //            f_min = <300000>;
 //            f_max = <50000000>;
 //            f_max_w = <50000000>;
@@ -532,7 +532,7 @@ void root_func(){
             port = <5>;          /**0:sdio_a, 1:sdio_b, 2:sdio_c, 3:sdhc_a, 4:sdhc_b, 5:sdhc_c */
             pinname = "emmc";
             ocr_avail = <0x200000>;          /**VDD voltage 3.3 ~ 3.4 */
-            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
+            caps = "MMC_CAP_8_BIT_DATA","MMC_CAP_MMC_HIGHSPEED","MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE","MMC_CAP_ERASE"; // MMC_CAP_NEEDS_POLL -- for detect, MMC_CAP_NONREMOVABLE -- for eMMC/TSD
             f_min = <300000>;
             f_max = <40000000>;
             max_req_size = <0x20000>;          /**128KB*/
diff --git a/drivers/mmc/card/block.c b/drivers/mmc/card/block.c
index 7ddd9e1833cb..ebb68b08870d 100755
--- a/drivers/mmc/card/block.c
+++ b/drivers/mmc/card/block.c
@@ -571,6 +571,8 @@ cmd_err:
 	return err;
 }
 
+static int mmc_wipe_part_ioctl(struct block_device *bdev);
+
 static int mmc_blk_ioctl(struct block_device *bdev, fmode_t mode,
 	unsigned int cmd, unsigned long arg)
 {
@@ -602,7 +604,13 @@ static int mmc_blk_ioctl(struct block_device *bdev, fmode_t mode,
        case MEMLOCK:
        case MEMUNLOCK:
        case MEMGETBADBLOCK:
+            return 0;
 	   case BLKWIPEPART:
+        //add erase function here
+            ret = mmc_wipe_part_ioctl(bdev);
+            if(ret){
+                dev_err("wipe part error ret:%d\n", ret);
+            }
            return 0;
        default:
            ret = -EINVAL;
@@ -2058,6 +2066,99 @@ static inline int mmc_blk_readonly(struct mmc_card *card)
 	       !(card->csd.cmdclass & CCC_BLOCK_WRITE);
 }
 
+static int mmc_wipe_part_ioctl(struct block_device *bdev)
+{
+	struct mmc_blk_data *md;
+	struct mmc_card *card;    
+    struct gendisk *disk = bdev->bd_disk;
+    __u64 offset, size;
+    int err, part_num, arg, i;
+
+    part_num = MINOR(bdev->bd_dev)-disk->first_minor;
+    size = (disk->part_tbl->part[part_num]->nr_sects<<9);
+    offset = (disk->part_tbl->part[part_num]->start_sect<<9);
+
+    pr_err("%s, %d part_num:%d, size:%012llx, offset:%012llx, disk->disk_name:%s\n",
+        __func__, __LINE__, part_num, size, offset, disk->disk_name);
+    
+    md = mmc_blk_get(bdev->bd_disk);
+    if (!md) {
+        pr_err("%s, failed to get mmc blk\n", __func__);
+        err = -EINVAL;
+        goto blk_get_err;
+    }
+
+    card = md->queue.card;
+
+    if(!mmc_card_mmc(card)){
+        pr_err("No mmc, do nothing\n");
+        err = 0;
+        goto dev_card_err;
+    }
+
+
+    if (!mmc_can_erase(card)) {
+        pr_err("device do not support erase, do nothing\n");
+		err = 0;
+		goto cmd_rel_host;
+	}
+    
+	mmc_claim_host(card->host);
+
+	err = mmc_blk_part_switch(card, md);
+	if (err){
+        pr_err("Part switch failed\n");
+		goto cmd_rel_host;
+     }
+
+	if (mmc_can_discard(card))
+		arg = MMC_DISCARD_ARG;
+	else if (mmc_can_trim(card))
+		arg = MMC_TRIM_ARG;
+	else
+		arg = MMC_ERASE_ARG;
+
+retry:
+#if 1   
+	if (card->quirks & MMC_QUIRK_INAND_CMD38) {
+                pr_err("checked MMC_QUIRK_INAND_CMD38 here\n");
+		err = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,
+				 INAND_CMD38_ARG_EXT_CSD,
+				 arg == MMC_TRIM_ARG ?
+				 INAND_CMD38_ARG_TRIM :
+				 INAND_CMD38_ARG_ERASE,
+				 0);
+		if (err)
+			goto out;
+	}
+ #endif  
+ 
+	err = mmc_erase(card, offset, size, arg);
+out:
+	if (err == -EIO && !mmc_blk_reset(md, card->host, MMC_BLK_DISCARD)){
+        pr_err("Erase failed and retry here\n");
+		goto retry;
+	}
+    
+	if (!err){
+        mmc_blk_reset_success(md, MMC_BLK_DISCARD);
+	}
+    else{
+        pr_err("Erase failed and err:%d\n", err);
+    }
+    
+cmd_rel_host:
+    mmc_release_host(card->host);
+
+dev_card_err:
+    mmc_blk_put(md);
+
+blk_get_err:
+	pr_err("%s completed, err:%d\n", __func__, err);
+    return err;  
+}
+
+
 static struct mmc_blk_data *mmc_blk_alloc_req(struct mmc_card *card,
 					      struct device *parent,
 					      sector_t size,
diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index fde96dc1e835..8a91211130c7 100755
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -2040,6 +2040,10 @@ int mmc_can_erase(struct mmc_card *card)
 	if ((card->host->caps & MMC_CAP_ERASE) &&
 	    (card->csd.cmdclass & CCC_ERASE) && card->erase_size)
 		return 1;
+
+    pr_debug("%s, card->host->caps:%d,card->csd.cmdclass:%d card->erase_size:0x%x\n", 
+        __func__, (card->host->caps & MMC_CAP_ERASE), (card->csd.cmdclass & CCC_ERASE), card->erase_size);
+    
 	return 0;
 }
 EXPORT_SYMBOL(mmc_can_erase);
-- 
2.19.0

