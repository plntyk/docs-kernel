From d65c37fbf8584eadc748c47bdd12f21db68d5976 Mon Sep 17 00:00:00 2001
From: "zhenfei.li" <zhenfei.li@amlogic>
Date: Thu, 17 Jul 2014 18:39:18 +0800
Subject: [PATCH 4537/5965] camera: PD #94487: add camera driver with driver
 version

---
 drivers/amlogic/camera/ar0543.c             |  8 +++-
 drivers/amlogic/camera/ar0833.c             | 10 +++-
 drivers/amlogic/camera/bf3720.c             |  7 +++
 drivers/amlogic/camera/common/cam_prober.c  | 53 +++++++++++++++++++++
 drivers/amlogic/camera/gc0307.c             |  8 ++++
 drivers/amlogic/camera/gc0308.c             |  8 ++++
 drivers/amlogic/camera/gc0328.c             |  8 ++++
 drivers/amlogic/camera/gc0329.c             |  8 ++++
 drivers/amlogic/camera/gc2015.c             |  8 ++++
 drivers/amlogic/camera/gc2035.c             |  7 +++
 drivers/amlogic/camera/gc2155.c             |  9 +++-
 drivers/amlogic/camera/gt2005.c             |  7 +++
 drivers/amlogic/camera/hi2056.c             |  8 ++++
 drivers/amlogic/camera/hi253.c              |  8 ++++
 drivers/amlogic/camera/hi704.c              |  8 ++++
 drivers/amlogic/camera/hm2057.c             |  7 +++
 drivers/amlogic/camera/hm5065.c             |  8 ++++
 drivers/amlogic/camera/nt99250.c            |  7 +++
 drivers/amlogic/camera/nt99252.c            |  8 ++++
 drivers/amlogic/camera/nt99340.c            |  6 +++
 drivers/amlogic/camera/ov2655.c             |  7 +++
 drivers/amlogic/camera/ov3660.c             |  8 ++++
 drivers/amlogic/camera/ov5640.c             |  8 ++++
 drivers/amlogic/camera/ov5642.c             |  8 ++++
 drivers/amlogic/camera/ov5647.c             | 10 +++-
 drivers/amlogic/camera/ov7675.c             |  8 ++++
 drivers/amlogic/camera/sp0838.c             |  8 ++++
 drivers/amlogic/camera/sp0a19.c             |  8 ++++
 drivers/amlogic/camera/sp1628.c             |  8 ++++
 drivers/amlogic/camera/sp2518.c             |  7 +++
 include/linux/amlogic/camera/aml_cam_info.h |  5 ++
 31 files changed, 280 insertions(+), 6 deletions(-)

diff --git a/drivers/amlogic/camera/ar0543.c b/drivers/amlogic/camera/ar0543.c
index fb5805298bb7..9c879d5cbb8b 100755
--- a/drivers/amlogic/camera/ar0543.c
+++ b/drivers/amlogic/camera/ar0543.c
@@ -73,7 +73,7 @@ static int capture_proc = 0;
 #define AR0543_CAMERA_VERSION \
 	KERNEL_VERSION(AR0543_CAMERA_MAJOR_VERSION, AR0543_CAMERA_MINOR_VERSION, AR0543_CAMERA_RELEASE)
 
-
+#define AR0543_DRIVER_VERSION "AR0543-COMMON-01-140717"
 
 MODULE_DESCRIPTION("ar0543 On Board");
 MODULE_AUTHOR("amlogic-sh");
@@ -5039,6 +5039,11 @@ static int ar0543_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = AR0543_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+		
 	printk("register device\n");	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
@@ -5060,6 +5065,7 @@ static int ar0543_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/ar0833.c b/drivers/amlogic/camera/ar0833.c
index 2e9196eb413a..323db50a36a9 100755
--- a/drivers/amlogic/camera/ar0833.c
+++ b/drivers/amlogic/camera/ar0833.c
@@ -73,7 +73,7 @@
 #define AR0833_CAMERA_VERSION \
 	KERNEL_VERSION(AR0833_CAMERA_MAJOR_VERSION, AR0833_CAMERA_MINOR_VERSION, AR0833_CAMERA_RELEASE)
 
-
+#define AR0833_DRIVER_VERSION "AR0833-COMMON-01-140717"
 
 MODULE_DESCRIPTION("ar0833 On Board");
 MODULE_AUTHOR("amlogic-sh");
@@ -5869,7 +5869,12 @@ static int ar0833_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
-   printk("register device\n");	
+	
+	t->cam_info.version = AR0833_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
+	printk("register device\n");	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -5888,6 +5893,7 @@ static int ar0833_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/bf3720.c b/drivers/amlogic/camera/bf3720.c
index 0a93b29fe03a..65fcd70454bb 100755
--- a/drivers/amlogic/camera/bf3720.c
+++ b/drivers/amlogic/camera/bf3720.c
@@ -64,6 +64,8 @@
 #define bf3720_CAMERA_VERSION \
 KERNEL_VERSION(bf3720_CAMERA_MAJOR_VERSION, bf3720_CAMERA_MINOR_VERSION, bf3720_CAMERA_RELEASE)
 
+#define BF3720_DRIVER_VERSION "BF3720-COMMON-01-140717"
+
 MODULE_DESCRIPTION("bf3720 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
@@ -2631,6 +2633,10 @@ static int bf3720_probe(struct i2c_client *client,
 		kfree(t);
 		return -1;
 	}
+	
+	t->cam_info.version = BF3720_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
 		
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
@@ -2650,6 +2656,7 @@ static int bf3720_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/common/cam_prober.c b/drivers/amlogic/camera/common/cam_prober.c
index 0571bcd1ff74..da3d5be566ac 100755
--- a/drivers/amlogic/camera/common/cam_prober.c
+++ b/drivers/amlogic/camera/common/cam_prober.c
@@ -1440,13 +1440,66 @@ end:
 	return -EINVAL;	
 }
 
+static LIST_HEAD(info_head);
+
+static ssize_t cam_info_show(struct class* class, 
+			struct class_attribute* attr, char* buf)
+{
+	struct list_head* p;
+	aml_cam_info_t* cam_info = NULL;
+	int count = 0;
+	if (!list_empty(&info_head)) {
+		count += sprintf(&buf[count], "name\t\tversion\t\t\t\tface_dir\t"
+					"i2c_addr\n");
+		list_for_each(p, &info_head) {
+			cam_info = list_entry(p, aml_cam_info_t, info_entry);
+			if (cam_info) {
+				count += sprintf(&buf[count], "%s\t\t%s\t\t%s"
+					"\t\t0x%x\n", 
+					cam_info->name, cam_info->version, 
+					cam_info->front_back?"front":"back",
+					cam_info->i2c_addr);
+			}
+		}
+	}
+	return count;
+}
 
 static struct class_attribute aml_cam_attrs[]={
 	__ATTR(i2c_debug,  S_IRUGO | S_IWUSR, show_help, store_i2c_debug),
+	__ATTR_RO(cam_info),
 	__ATTR(help,  S_IRUGO | S_IWUSR, show_help, NULL),
 	__ATTR_NULL,
 };
 
+int aml_cam_info_reg(aml_cam_info_t* cam_info)
+{
+	int ret = -1;
+	if (cam_info) {
+		//printk("reg camera %s\n", cam_info->name);
+		list_add(&cam_info->info_entry, &info_head);
+		ret = 0;
+	}
+	return ret;
+}
+
+int aml_cam_info_unreg(aml_cam_info_t* cam_info)
+{
+	int ret = -1;
+	struct list_head* p, *n;
+	aml_cam_info_t* tmp_info = NULL;
+	if (cam_info) {
+		list_for_each_safe(p, n, &info_head) {
+			tmp_info = list_entry(p, aml_cam_info_t, info_entry);
+			if (tmp_info == cam_info) {
+				list_del(cam_info);
+				return 0;
+			}
+		}
+	}
+	return ret;
+}
+
 static int aml_cams_probe(struct platform_device *pdev)
 {
 	//printk("##############aml_cams_probe start############\n");
diff --git a/drivers/amlogic/camera/gc0307.c b/drivers/amlogic/camera/gc0307.c
index 3ef4e87f72cc..c3f299fec591 100755
--- a/drivers/amlogic/camera/gc0307.c
+++ b/drivers/amlogic/camera/gc0307.c
@@ -59,6 +59,8 @@
 #define GC0307_CAMERA_RELEASE 0
 #define GC0307_CAMERA_VERSION \
 	KERNEL_VERSION(GC0307_CAMERA_MAJOR_VERSION, GC0307_CAMERA_MINOR_VERSION, GC0307_CAMERA_RELEASE)
+	
+#define GC0307_DRIVER_VERSION "GC0307-COMMON-01-140717"
 
 MODULE_DESCRIPTION("gc0307 On Board");
 MODULE_AUTHOR("amlogic-sh");
@@ -2867,6 +2869,11 @@ static int gc0307_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = GC0307_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2885,6 +2892,7 @@ static int gc0307_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/gc0308.c b/drivers/amlogic/camera/gc0308.c
index 039b82aff859..2b082929ba59 100755
--- a/drivers/amlogic/camera/gc0308.c
+++ b/drivers/amlogic/camera/gc0308.c
@@ -60,6 +60,8 @@
 #define GC0308_CAMERA_RELEASE 0
 #define GC0308_CAMERA_VERSION \
 	KERNEL_VERSION(GC0308_CAMERA_MAJOR_VERSION, GC0308_CAMERA_MINOR_VERSION, GC0308_CAMERA_RELEASE)
+	
+#define GC0308_DRIVER_VERSION "GC0308-COMMON-01-140717"
 
 MODULE_DESCRIPTION("gc0308 On Board");
 MODULE_AUTHOR("amlogic-sh");
@@ -2761,6 +2763,11 @@ static int gc0308_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = GC0308_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2779,6 +2786,7 @@ static int gc0308_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/gc0328.c b/drivers/amlogic/camera/gc0328.c
index 8ff328b92627..6d830695251b 100755
--- a/drivers/amlogic/camera/gc0328.c
+++ b/drivers/amlogic/camera/gc0328.c
@@ -64,6 +64,8 @@ MODULE_DESCRIPTION("gc0328 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define GC0328_DRIVER_VERSION "GC0328-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2576,6 +2578,11 @@ static int gc0328_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = GC0328_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2594,6 +2601,7 @@ static int gc0328_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/gc0329.c b/drivers/amlogic/camera/gc0329.c
index 474069d4ff65..5f5a0935c028 100755
--- a/drivers/amlogic/camera/gc0329.c
+++ b/drivers/amlogic/camera/gc0329.c
@@ -66,6 +66,8 @@ MODULE_DESCRIPTION("gc0329 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define GC0329_DRIVER_VERSION "GC0329-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2543,6 +2545,11 @@ static int gc0329_probe(struct i2c_client *client,
 		kfree(t);
 		return -1;
 	}
+	
+	t->cam_info.version = GC0329_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2561,6 +2568,7 @@ static int gc0329_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/gc2015.c b/drivers/amlogic/camera/gc2015.c
index a87317f29c99..de7a98c59dac 100755
--- a/drivers/amlogic/camera/gc2015.c
+++ b/drivers/amlogic/camera/gc2015.c
@@ -65,6 +65,8 @@ MODULE_DESCRIPTION("gc2015 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define GC2015_DRIVER_VERSION "GC2015-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static struct vdin_v4l2_ops_s *vops;
@@ -2855,6 +2857,11 @@ static int gc2015_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = GC2015_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2873,6 +2880,7 @@ static int gc2015_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/gc2035.c b/drivers/amlogic/camera/gc2035.c
index 099714d30e36..810d64c7864f 100755
--- a/drivers/amlogic/camera/gc2035.c
+++ b/drivers/amlogic/camera/gc2035.c
@@ -64,6 +64,8 @@
 #define gc2035_CAMERA_VERSION \
 KERNEL_VERSION(gc2035_CAMERA_MAJOR_VERSION, gc2035_CAMERA_MINOR_VERSION, gc2035_CAMERA_RELEASE)
 
+#define GC2035_DRIVER_VERSION "GC2035-COMMON-01-140717"
+
 MODULE_DESCRIPTION("gc2035 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
@@ -3788,6 +3790,10 @@ static int gc2035_probe(struct i2c_client *client,
 		kfree(t);
 		return -1;
 	}
+	
+	t->cam_info.version = GC2035_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
 		
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
@@ -3807,6 +3813,7 @@ static int gc2035_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/gc2155.c b/drivers/amlogic/camera/gc2155.c
index 8c48bb3bebe9..6f5af9f21b99 100755
--- a/drivers/amlogic/camera/gc2155.c
+++ b/drivers/amlogic/camera/gc2155.c
@@ -68,6 +68,8 @@ MODULE_DESCRIPTION("gc2155 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define GC2155_DRIVER_VERSION "GC2155-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -3527,7 +3529,11 @@ static int gc2155_probe(struct i2c_client *client,
 	}
 	
 	t->cur_resolution_param = &prev_resolution_array[0];
-		
+	
+	t->cam_info.version = GC2155_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -3546,6 +3552,7 @@ static int gc2155_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/gt2005.c b/drivers/amlogic/camera/gt2005.c
index 9daaf064061c..c429b4d3162a 100755
--- a/drivers/amlogic/camera/gt2005.c
+++ b/drivers/amlogic/camera/gt2005.c
@@ -69,6 +69,8 @@ MODULE_DESCRIPTION("gt2005 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define GT2005_DRIVER_VERSION "GT2005-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2625,6 +2627,10 @@ static int gt2005_probe(struct i2c_client *client,
 		return -1;
 	}
 	
+	t->cam_info.version = GT2005_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2643,6 +2649,7 @@ static int gt2005_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/hi2056.c b/drivers/amlogic/camera/hi2056.c
index 015d8d2109f5..3a5957bd4e09 100755
--- a/drivers/amlogic/camera/hi2056.c
+++ b/drivers/amlogic/camera/hi2056.c
@@ -65,6 +65,8 @@ MODULE_DESCRIPTION("mipi-hi2056 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define HI2056_DRIVER_VERSION "HI2056-COMMON-01-140717"
+
 static int video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2356,6 +2358,11 @@ static int hi2056_probe(struct i2c_client *client,
         kfree(client);
         return -1;
     }
+    
+    	t->cam_info.version = HI2056_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+    	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2374,6 +2381,7 @@ static int hi2056_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/hi253.c b/drivers/amlogic/camera/hi253.c
index 21322a925787..464daa3b9e86 100755
--- a/drivers/amlogic/camera/hi253.c
+++ b/drivers/amlogic/camera/hi253.c
@@ -66,6 +66,8 @@ MODULE_DESCRIPTION("hi253 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define HI253_DRIVER_VERSION "HI253-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static struct vdin_v4l2_ops_s *vops;
@@ -3035,6 +3037,11 @@ static int hi253_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = HI253_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -3053,6 +3060,7 @@ static int hi253_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/hi704.c b/drivers/amlogic/camera/hi704.c
index 1b768c223b62..37d8549fa6d3 100755
--- a/drivers/amlogic/camera/hi704.c
+++ b/drivers/amlogic/camera/hi704.c
@@ -64,6 +64,8 @@ MODULE_DESCRIPTION("HI704 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define HI704_DRIVER_VERSION "HI704-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2594,6 +2596,11 @@ static int HI704_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = HI704_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2612,6 +2619,7 @@ static int HI704_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/hm2057.c b/drivers/amlogic/camera/hm2057.c
index 6eaad302efdf..29b1733f3d64 100755
--- a/drivers/amlogic/camera/hm2057.c
+++ b/drivers/amlogic/camera/hm2057.c
@@ -63,6 +63,8 @@ MODULE_DESCRIPTION("hm2057 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define HM2057_DRIVER_VERSION "HM2057-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2713,6 +2715,10 @@ static int hm2057_probe(struct i2c_client *client,
 		return -1;
 	}
 		
+	t->cam_info.version = HM2057_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");	
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2731,6 +2737,7 @@ static int hm2057_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/hm5065.c b/drivers/amlogic/camera/hm5065.c
index 2bed253774eb..09b09dfa032d 100755
--- a/drivers/amlogic/camera/hm5065.c
+++ b/drivers/amlogic/camera/hm5065.c
@@ -80,6 +80,8 @@ MODULE_DESCRIPTION("hm5065 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define HM5065_DRIVER_VERSION "HM5065-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2509,6 +2511,11 @@ static int hm5065_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = HM5065_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2526,6 +2533,7 @@ static int hm5065_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/nt99250.c b/drivers/amlogic/camera/nt99250.c
index cd3c60b60f70..a5a0f112b737 100755
--- a/drivers/amlogic/camera/nt99250.c
+++ b/drivers/amlogic/camera/nt99250.c
@@ -65,6 +65,8 @@ MODULE_DESCRIPTION("nt99250 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define NT99250_DRIVER_VERSION "NT99250-COMMON-01-140717"
+
 #define NT99250_TLINE_LENGTH_2500	//
 
 #define AE_TARGET_MEAN	0x35	//0x32	//0x38
@@ -2897,6 +2899,10 @@ static int nt99250_probe(struct i2c_client *client,
 		return err;
 	}
 
+	t->cam_info.version = NT99250_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+
 	ret = class_register(&camera_ctrl_class);
 	if(ret){
 		printk("class register camera_ctrl_class fail!\n");
@@ -2912,6 +2918,7 @@ static int nt99250_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/nt99252.c b/drivers/amlogic/camera/nt99252.c
index 0bb358889db0..93cc36147b0a 100755
--- a/drivers/amlogic/camera/nt99252.c
+++ b/drivers/amlogic/camera/nt99252.c
@@ -59,6 +59,8 @@
 #define NT99252_CAMERA_RELEASE 0
 #define NT99252_CAMERA_VERSION \
 	KERNEL_VERSION(NT99252_CAMERA_MAJOR_VERSION, NT99252_CAMERA_MINOR_VERSION, NT99252_CAMERA_RELEASE)
+	
+#define NT99252_DRIVER_VERSION "NT99252-COMMON-01-140717"
 
 MODULE_DESCRIPTION("nt99252 On Board");
 MODULE_AUTHOR("amlogic-sh");
@@ -2276,6 +2278,11 @@ static int nt99252_probe(struct i2c_client *client,
              kfree(t);
              return -1;     
 	}
+	
+	t->cam_info.version = NT99252_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2298,6 +2305,7 @@ static int nt99252_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/nt99340.c b/drivers/amlogic/camera/nt99340.c
index 06b6fc283afc..f1920595d113 100755
--- a/drivers/amlogic/camera/nt99340.c
+++ b/drivers/amlogic/camera/nt99340.c
@@ -59,6 +59,8 @@
 #define NT99340_CAMERA_RELEASE 0
 #define NT99340_CAMERA_VERSION \
 	KERNEL_VERSION(NT99340_CAMERA_MAJOR_VERSION, NT99340_CAMERA_MINOR_VERSION, NT99340_CAMERA_RELEASE)
+	
+#define NT99340_DRIVER_VERSION "NT99340-COMMON-01-140717"
 
 MODULE_DESCRIPTION("nt99340 On Board");
 MODULE_AUTHOR("amlogic-sh");
@@ -2268,6 +2270,9 @@ static int nt99340_probe(struct i2c_client *client,
 		return err;
 	}
 
+	t->cam_info.version = NT99340_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
 	
 	ret = class_register(&camera_ctrl_class);
 	if(ret){
@@ -2284,6 +2289,7 @@ static int nt99340_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/ov2655.c b/drivers/amlogic/camera/ov2655.c
index 6374c7f6da56..72f150fa01ab 100755
--- a/drivers/amlogic/camera/ov2655.c
+++ b/drivers/amlogic/camera/ov2655.c
@@ -60,6 +60,7 @@
 #define OV2655_CAMERA_VERSION \
 	KERNEL_VERSION(OV2655_CAMERA_MAJOR_VERSION, OV2655_CAMERA_MINOR_VERSION, OV2655_CAMERA_RELEASE)
 
+#define OV2655_DRIVER_VERSION "OV2655-COMMON-01-140717"
 
 MODULE_DESCRIPTION("ov2655 On Board");
 MODULE_AUTHOR("amlogic-sh");
@@ -2742,6 +2743,11 @@ static int ov2655_probe(struct i2c_client *client,
 	    kfree(t);
 	    return -1; 	
 	}
+	
+	t->cam_info.version = OV2655_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2760,6 +2766,7 @@ static int ov2655_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/ov3660.c b/drivers/amlogic/camera/ov3660.c
index 64887c77de0a..9f2d34080c63 100755
--- a/drivers/amlogic/camera/ov3660.c
+++ b/drivers/amlogic/camera/ov3660.c
@@ -65,6 +65,8 @@ MODULE_DESCRIPTION("ov3660 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define OV3660_DRIVER_VERSION "OV3660-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2648,6 +2650,11 @@ static int ov3660_probe(struct i2c_client *client,
 	   kfree(t);
 	   return -1; 	
 	}
+	
+	t->cam_info.version = OV3660_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2670,6 +2677,7 @@ static int ov3660_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/ov5640.c b/drivers/amlogic/camera/ov5640.c
index d986fb6e640c..84de61a55c25 100755
--- a/drivers/amlogic/camera/ov5640.c
+++ b/drivers/amlogic/camera/ov5640.c
@@ -70,6 +70,8 @@ MODULE_DESCRIPTION("ov5640 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define OV5640_DRIVER_VERSION "OV5640-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -4690,6 +4692,11 @@ static int ov5640_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = OV5640_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -4707,6 +4714,7 @@ static int ov5640_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/ov5642.c b/drivers/amlogic/camera/ov5642.c
index 7ebf377301e2..10379d672818 100755
--- a/drivers/amlogic/camera/ov5642.c
+++ b/drivers/amlogic/camera/ov5642.c
@@ -68,6 +68,8 @@ MODULE_DESCRIPTION("ov5642 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define OV5642_DRIVER_VERSION "OV5642-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -3435,6 +3437,11 @@ static int ov5642_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = OV5642_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -3452,6 +3459,7 @@ static int ov5642_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/ov5647.c b/drivers/amlogic/camera/ov5647.c
index 60b187c5339d..2d028e443305 100755
--- a/drivers/amlogic/camera/ov5647.c
+++ b/drivers/amlogic/camera/ov5647.c
@@ -75,7 +75,7 @@ static int capture_proc = 0;
 #define OV5647_CAMERA_VERSION \
 	KERNEL_VERSION(OV5647_CAMERA_MAJOR_VERSION, OV5647_CAMERA_MINOR_VERSION, OV5647_CAMERA_RELEASE)
 
-
+#define OV5647_DRIVER_VERSION "OV5647-COMMON-01-140717"
 
 MODULE_DESCRIPTION("ov5647 On Board");
 MODULE_AUTHOR("amlogic-sh");
@@ -4508,7 +4508,12 @@ static int ov5647_probe(struct i2c_client *client,
                 printk("camera ov5647: have no platform data\n");
                 ret = -EINVAL;
                 goto unreg_dev;
-        }	
+        }
+        
+        t->cam_info.version = OV5647_DRIVER_VERSION;
+        if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+			
         ret = video_register_device(vfd, VFL_TYPE_GRABBER, video_nr);
         if (ret < 0) {
                 goto unreg_dev;
@@ -4535,6 +4540,7 @@ static int ov5647_remove(struct i2c_client *client)
 	v4l2_device_unregister_subdev(sd);
 	v4l2_device_unregister(&t->v4l2_dev);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/ov7675.c b/drivers/amlogic/camera/ov7675.c
index ff2672b2ee26..e009b07d281f 100755
--- a/drivers/amlogic/camera/ov7675.c
+++ b/drivers/amlogic/camera/ov7675.c
@@ -64,6 +64,8 @@ MODULE_DESCRIPTION("ov7675 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define OV7675_DRIVER_VERSION "OV7675-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2081,6 +2083,11 @@ static int ov7675_probe(struct i2c_client *client,
 	    kfree(t);
         return -1; 
 	}
+	
+	t->cam_info.version = OV7675_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2099,6 +2106,7 @@ static int ov7675_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/sp0838.c b/drivers/amlogic/camera/sp0838.c
index 04882859ea35..9dceec947774 100755
--- a/drivers/amlogic/camera/sp0838.c
+++ b/drivers/amlogic/camera/sp0838.c
@@ -121,6 +121,8 @@ MODULE_DESCRIPTION("sp0838 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define SP0838_DRIVER_VERSION "SP0838-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2237,6 +2239,11 @@ static int sp0838_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = SP0838_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2257,6 +2264,7 @@ static int sp0838_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/sp0a19.c b/drivers/amlogic/camera/sp0a19.c
index 1896df441e43..a61bb457334a 100755
--- a/drivers/amlogic/camera/sp0a19.c
+++ b/drivers/amlogic/camera/sp0a19.c
@@ -65,6 +65,8 @@ MODULE_DESCRIPTION("sp0a19 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define SP0A19_DRIVER_VERSION "SP0A19-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2947,6 +2949,11 @@ static int sp0a19_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = SP0A19_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2967,6 +2974,7 @@ static int sp0a19_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/sp1628.c b/drivers/amlogic/camera/sp1628.c
index 1d229aeaab44..9522bfacddda 100755
--- a/drivers/amlogic/camera/sp1628.c
+++ b/drivers/amlogic/camera/sp1628.c
@@ -73,6 +73,8 @@ MODULE_DESCRIPTION("sp1628 On Board");
 MODULE_AUTHOR("amlogic-sh");
 MODULE_LICENSE("GPL v2");
 
+#define SP1628_DRIVER_VERSION "SP1628-COMMON-01-140717"
+
 static unsigned video_nr = -1;  /* videoX start number, -1 is autodetect. */
 
 static unsigned debug;
@@ -2843,6 +2845,11 @@ static int sp1628_probe(struct i2c_client *client,
 		kfree(client);
 		return -1;
 	}
+	
+	t->cam_info.version = SP1628_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2861,6 +2868,7 @@ static int sp1628_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/drivers/amlogic/camera/sp2518.c b/drivers/amlogic/camera/sp2518.c
index 33eb539a47f6..c96ea4d6733d 100755
--- a/drivers/amlogic/camera/sp2518.c
+++ b/drivers/amlogic/camera/sp2518.c
@@ -58,6 +58,8 @@
 #define SP2518_CAMERA_RELEASE 0
 #define SP2518_CAMERA_VERSION \
 	KERNEL_VERSION(SP2518_CAMERA_MAJOR_VERSION, SP2518_CAMERA_MINOR_VERSION, SP2518_CAMERA_RELEASE)
+	
+#define SP2518_DRIVER_VERSION "SP2518-COMMON-01-140717"
 
 //unsigned short DGain_shutter,AGain_shutter,DGain_shutterH,DGain_shutterL,AGain_shutterH,AGain_shutterL,shutterH,shutterL,shutter;
 //unsigned short UXGA_Cap = 0;
@@ -2911,6 +2913,10 @@ static int sp2518_probe(struct i2c_client *client,
 	    return -1; 	
 	}
 	
+	t->cam_info.version = SP2518_DRIVER_VERSION;
+	if (aml_cam_info_reg(&t->cam_info) < 0)
+		printk("reg caminfo error\n");
+	
 	err = video_register_device(t->vdev, VFL_TYPE_GRABBER, video_nr);
 	if (err < 0) {
 		video_device_release(t->vdev);
@@ -2947,6 +2953,7 @@ static int sp2518_remove(struct i2c_client *client)
 	video_unregister_device(t->vdev);
 	v4l2_device_unregister_subdev(sd);
 	wake_lock_destroy(&(t->wake_lock));
+	aml_cam_info_unreg(&t->cam_info);
 	kfree(t);
 	return 0;
 }
diff --git a/include/linux/amlogic/camera/aml_cam_info.h b/include/linux/amlogic/camera/aml_cam_info.h
index d3f42d215534..f047be3db358 100755
--- a/include/linux/amlogic/camera/aml_cam_info.h
+++ b/include/linux/amlogic/camera/aml_cam_info.h
@@ -61,6 +61,7 @@ typedef enum resolution_size {
 typedef int(*aml_cam_probe_fun_t)(struct i2c_adapter *);
 
 typedef struct {
+	struct list_head info_entry;
 	const char* name;
 	unsigned i2c_bus_num;
 	unsigned pwdn_act;
@@ -72,6 +73,7 @@ typedef struct {
 	unsigned i2c_addr;
 	const char* motor_driver;
 	const char* resolution;
+	const char* version;
 	unsigned mclk;
 	unsigned flash_support;
 	unsigned flash_ctrl_level;
@@ -107,5 +109,8 @@ extern void aml_cam_init(aml_cam_info_t* cam_dev);
 extern void aml_cam_uninit(aml_cam_info_t* cam_dev);
 extern void aml_cam_flash(aml_cam_info_t* cam_dev, int is_on);
 
+extern int aml_cam_info_reg(aml_cam_info_t* cam_info);
+extern int aml_cam_info_unreg(aml_cam_info_t* cam_info);
+
 
 #endif /* __AML_CAM_DEV__ */
-- 
2.19.0

