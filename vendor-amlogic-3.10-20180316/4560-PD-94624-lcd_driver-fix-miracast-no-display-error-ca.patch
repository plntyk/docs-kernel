From 4270eebda56662ad9a5723a48810cf069d4c32f4 Mon Sep 17 00:00:00 2001
From: Evoke Zhang <evoke.zhang@amlogic.com>
Date: Tue, 22 Jul 2014 15:00:00 +0800
Subject: [PATCH 4560/5965] PD#94624: lcd_driver: fix miracast no display error
 caused by ENCL_VSO

Change-Id: I756436b25453c4b37da5cdbf6e7f2efe13d606ed
---
 arch/arm/mach-meson6/lcd/lcd_config.c  | 36 +++++++++++++-------------
 arch/arm/mach-meson8/lcd/lcd_config.c  | 36 +++++++++++++-------------
 arch/arm/mach-meson8b/lcd/lcd_config.c | 36 +++++++++++++-------------
 3 files changed, 54 insertions(+), 54 deletions(-)

diff --git a/arch/arm/mach-meson6/lcd/lcd_config.c b/arch/arm/mach-meson6/lcd/lcd_config.c
index 2be3a10e76c7..d60ebc087262 100755
--- a/arch/arm/mach-meson6/lcd/lcd_config.c
+++ b/arch/arm/mach-meson6/lcd/lcd_config.c
@@ -1006,32 +1006,32 @@ static void set_venc_lvds(Lcd_Config_t *pConf)
 		WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 2);//viu1 select encl
 	}
 #else
-	WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 4);;	//viu1, viu2 select encl
+	WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 4);; //viu1, viu2 select encl
 #endif
 	
-	WRITE_LCD_REG(ENCL_VIDEO_MODE,			0);
-	WRITE_LCD_REG(ENCL_VIDEO_MODE_ADV,		0x8); // Sampling rate: 1
+	WRITE_LCD_REG(ENCL_VIDEO_MODE,        0);
+	WRITE_LCD_REG(ENCL_VIDEO_MODE_ADV,    0x8); // Sampling rate: 1
 
-	WRITE_LCD_REG(ENCL_VIDEO_FILT_CTRL,		0x1000); // bypass filter
+	WRITE_LCD_REG(ENCL_VIDEO_FILT_CTRL,   0x1000); // bypass filter
 
-	WRITE_LCD_REG(ENCL_VIDEO_MAX_PXCNT,		pConf->lcd_basic.h_period - 1);
-	WRITE_LCD_REG(ENCL_VIDEO_MAX_LNCNT,		pConf->lcd_basic.v_period - 1);
+	WRITE_LCD_REG(ENCL_VIDEO_MAX_PXCNT,   pConf->lcd_basic.h_period - 1);
+	WRITE_LCD_REG(ENCL_VIDEO_MAX_LNCNT,   pConf->lcd_basic.v_period - 1);
 
-	WRITE_LCD_REG(ENCL_VIDEO_HAVON_BEGIN,	pConf->lcd_timing.video_on_pixel);
-	WRITE_LCD_REG(ENCL_VIDEO_HAVON_END,		pConf->lcd_basic.h_active - 1 + pConf->lcd_timing.video_on_pixel);
-	WRITE_LCD_REG(ENCL_VIDEO_VAVON_BLINE,	pConf->lcd_timing.video_on_line);
-	WRITE_LCD_REG(ENCL_VIDEO_VAVON_ELINE,	pConf->lcd_basic.v_active - 1  + pConf->lcd_timing.video_on_line);
+	WRITE_LCD_REG(ENCL_VIDEO_HAVON_BEGIN, pConf->lcd_timing.video_on_pixel);
+	WRITE_LCD_REG(ENCL_VIDEO_HAVON_END,   pConf->lcd_basic.h_active - 1 + pConf->lcd_timing.video_on_pixel);
+	WRITE_LCD_REG(ENCL_VIDEO_VAVON_BLINE, pConf->lcd_timing.video_on_line);
+	WRITE_LCD_REG(ENCL_VIDEO_VAVON_ELINE, pConf->lcd_basic.v_active - 1  + pConf->lcd_timing.video_on_line);
 
-	WRITE_LCD_REG(ENCL_VIDEO_HSO_BEGIN,   0);//pConf->lcd_timing.hs_hs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_HSO_END,     10);//pConf->lcd_timing.hs_he_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_BEGIN,   0);//pConf->lcd_timing.vs_hs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_END,     0);//pConf->lcd_timing.vs_he_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_BLINE,   0);//pConf->lcd_timing.vs_vs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_ELINE,   2);//pConf->lcd_timing.vs_ve_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_HSO_BEGIN,   10);//pConf->lcd_timing.hs_hs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_HSO_END,     16);//pConf->lcd_timing.hs_he_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_BEGIN,   10);//pConf->lcd_timing.vs_hs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_END,     10);//pConf->lcd_timing.vs_he_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_BLINE,   10);//pConf->lcd_timing.vs_vs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_ELINE,   12);//pConf->lcd_timing.vs_ve_addr);
 
-	WRITE_LCD_REG(ENCL_VIDEO_RGBIN_CTRL, 	(1 << 0));//(1 << 1) | (1 << 0));	//bit[0] 1:RGB, 0:YUV
+	WRITE_LCD_REG(ENCL_VIDEO_RGBIN_CTRL,  (1 << 0));//(1 << 1) | (1 << 0));	//bit[0] 1:RGB, 0:YUV
 
-	WRITE_LCD_REG(ENCL_VIDEO_EN,			1);	// enable encl
+	WRITE_LCD_REG(ENCL_VIDEO_EN,          1);	// enable encl
 }
 
 static void set_venc_mlvds(Lcd_Config_t *pConf)
diff --git a/arch/arm/mach-meson8/lcd/lcd_config.c b/arch/arm/mach-meson8/lcd/lcd_config.c
index 5a393e67fb8a..ec225144bda4 100755
--- a/arch/arm/mach-meson8/lcd/lcd_config.c
+++ b/arch/arm/mach-meson8/lcd/lcd_config.c
@@ -687,32 +687,32 @@ static void set_venc_lcd(Lcd_Config_t *pConf)
 		WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 2);//viu1 select encl
 	}
 #else
-	WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 4);;	//viu1, viu2 select encl
+	WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 4);; //viu1, viu2 select encl
 #endif
 	
-	WRITE_LCD_REG(ENCL_VIDEO_MODE,			0);
-	WRITE_LCD_REG(ENCL_VIDEO_MODE_ADV,		0x8); // Sampling rate: 1
+	WRITE_LCD_REG(ENCL_VIDEO_MODE,        0);
+	WRITE_LCD_REG(ENCL_VIDEO_MODE_ADV,    0x8); // Sampling rate: 1
 
-	WRITE_LCD_REG(ENCL_VIDEO_FILT_CTRL,		0x1000); // bypass filter
+	WRITE_LCD_REG(ENCL_VIDEO_FILT_CTRL,   0x1000); // bypass filter
 
-	WRITE_LCD_REG(ENCL_VIDEO_MAX_PXCNT,		pConf->lcd_basic.h_period - 1);
-	WRITE_LCD_REG(ENCL_VIDEO_MAX_LNCNT,		pConf->lcd_basic.v_period - 1);
+	WRITE_LCD_REG(ENCL_VIDEO_MAX_PXCNT,   pConf->lcd_basic.h_period - 1);
+	WRITE_LCD_REG(ENCL_VIDEO_MAX_LNCNT,   pConf->lcd_basic.v_period - 1);
 
-	WRITE_LCD_REG(ENCL_VIDEO_HAVON_BEGIN,	pConf->lcd_timing.video_on_pixel);
-	WRITE_LCD_REG(ENCL_VIDEO_HAVON_END,		pConf->lcd_basic.h_active - 1 + pConf->lcd_timing.video_on_pixel);
-	WRITE_LCD_REG(ENCL_VIDEO_VAVON_BLINE,	pConf->lcd_timing.video_on_line);
-	WRITE_LCD_REG(ENCL_VIDEO_VAVON_ELINE,	pConf->lcd_basic.v_active - 1  + pConf->lcd_timing.video_on_line);
+	WRITE_LCD_REG(ENCL_VIDEO_HAVON_BEGIN, pConf->lcd_timing.video_on_pixel);
+	WRITE_LCD_REG(ENCL_VIDEO_HAVON_END,   pConf->lcd_basic.h_active - 1 + pConf->lcd_timing.video_on_pixel);
+	WRITE_LCD_REG(ENCL_VIDEO_VAVON_BLINE, pConf->lcd_timing.video_on_line);
+	WRITE_LCD_REG(ENCL_VIDEO_VAVON_ELINE, pConf->lcd_basic.v_active - 1  + pConf->lcd_timing.video_on_line);
 
-	WRITE_LCD_REG(ENCL_VIDEO_HSO_BEGIN,   0);//pConf->lcd_timing.hs_hs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_HSO_END,     10);//pConf->lcd_timing.hs_he_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_BEGIN,   0);//pConf->lcd_timing.vs_hs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_END,     0);//pConf->lcd_timing.vs_he_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_BLINE,   0);//pConf->lcd_timing.vs_vs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_ELINE,   2);//pConf->lcd_timing.vs_ve_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_HSO_BEGIN,   10);//pConf->lcd_timing.hs_hs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_HSO_END,     16);//pConf->lcd_timing.hs_he_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_BEGIN,   10);//pConf->lcd_timing.vs_hs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_END,     10);//pConf->lcd_timing.vs_he_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_BLINE,   10);//pConf->lcd_timing.vs_vs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_ELINE,   12);//pConf->lcd_timing.vs_ve_addr);
 
-	WRITE_LCD_REG(ENCL_VIDEO_RGBIN_CTRL, 	(1 << 0));//(1 << 1) | (1 << 0));	//bit[0] 1:RGB, 0:YUV
+	WRITE_LCD_REG(ENCL_VIDEO_RGBIN_CTRL,  (1 << 0));//(1 << 1) | (1 << 0));	//bit[0] 1:RGB, 0:YUV
 
-	WRITE_LCD_REG(ENCL_VIDEO_EN,			1);	// enable encl
+	WRITE_LCD_REG(ENCL_VIDEO_EN,          1);	// enable encl
 }
 
 static void set_control_lvds(Lcd_Config_t *pConf)
diff --git a/arch/arm/mach-meson8b/lcd/lcd_config.c b/arch/arm/mach-meson8b/lcd/lcd_config.c
index 9f6d06a51a78..db23c4c37396 100755
--- a/arch/arm/mach-meson8b/lcd/lcd_config.c
+++ b/arch/arm/mach-meson8b/lcd/lcd_config.c
@@ -585,32 +585,32 @@ static void set_venc_lcd(Lcd_Config_t *pConf)
 		WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 2);//viu1 select encl
 	}
 #else
-	WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 4);;	//viu1, viu2 select encl
+	WRITE_LCD_REG_BITS(VPU_VIU_VENC_MUX_CTRL, 0, 0, 4);; //viu1, viu2 select encl
 #endif
 	
-	WRITE_LCD_REG(ENCL_VIDEO_MODE,			0);
-	WRITE_LCD_REG(ENCL_VIDEO_MODE_ADV,		0x8); // Sampling rate: 1
+	WRITE_LCD_REG(ENCL_VIDEO_MODE,        0);
+	WRITE_LCD_REG(ENCL_VIDEO_MODE_ADV,    0x8); // Sampling rate: 1
 
-	WRITE_LCD_REG(ENCL_VIDEO_FILT_CTRL,		0x1000); // bypass filter
+	WRITE_LCD_REG(ENCL_VIDEO_FILT_CTRL,   0x1000); // bypass filter
 
-	WRITE_LCD_REG(ENCL_VIDEO_MAX_PXCNT,		pConf->lcd_basic.h_period - 1);
-	WRITE_LCD_REG(ENCL_VIDEO_MAX_LNCNT,		pConf->lcd_basic.v_period - 1);
+	WRITE_LCD_REG(ENCL_VIDEO_MAX_PXCNT,   pConf->lcd_basic.h_period - 1);
+	WRITE_LCD_REG(ENCL_VIDEO_MAX_LNCNT,   pConf->lcd_basic.v_period - 1);
 
-	WRITE_LCD_REG(ENCL_VIDEO_HAVON_BEGIN,	pConf->lcd_timing.video_on_pixel);
-	WRITE_LCD_REG(ENCL_VIDEO_HAVON_END,		pConf->lcd_basic.h_active - 1 + pConf->lcd_timing.video_on_pixel);
-	WRITE_LCD_REG(ENCL_VIDEO_VAVON_BLINE,	pConf->lcd_timing.video_on_line);
-	WRITE_LCD_REG(ENCL_VIDEO_VAVON_ELINE,	pConf->lcd_basic.v_active - 1  + pConf->lcd_timing.video_on_line);
+	WRITE_LCD_REG(ENCL_VIDEO_HAVON_BEGIN, pConf->lcd_timing.video_on_pixel);
+	WRITE_LCD_REG(ENCL_VIDEO_HAVON_END,   pConf->lcd_basic.h_active - 1 + pConf->lcd_timing.video_on_pixel);
+	WRITE_LCD_REG(ENCL_VIDEO_VAVON_BLINE, pConf->lcd_timing.video_on_line);
+	WRITE_LCD_REG(ENCL_VIDEO_VAVON_ELINE, pConf->lcd_basic.v_active - 1  + pConf->lcd_timing.video_on_line);
 
-	WRITE_LCD_REG(ENCL_VIDEO_HSO_BEGIN,   0);//pConf->lcd_timing.hs_hs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_HSO_END,     10);//pConf->lcd_timing.hs_he_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_BEGIN,   0);//pConf->lcd_timing.vs_hs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_END,     0);//pConf->lcd_timing.vs_he_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_BLINE,   0);//pConf->lcd_timing.vs_vs_addr);
-	WRITE_LCD_REG(ENCL_VIDEO_VSO_ELINE,   2);//pConf->lcd_timing.vs_ve_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_HSO_BEGIN,   10);//pConf->lcd_timing.hs_hs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_HSO_END,     16);//pConf->lcd_timing.hs_he_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_BEGIN,   10);//pConf->lcd_timing.vs_hs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_END,     10);//pConf->lcd_timing.vs_he_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_BLINE,   10);//pConf->lcd_timing.vs_vs_addr);
+	WRITE_LCD_REG(ENCL_VIDEO_VSO_ELINE,   12);//pConf->lcd_timing.vs_ve_addr);
 
-	WRITE_LCD_REG(ENCL_VIDEO_RGBIN_CTRL, 	(1 << 0));//(1 << 1) | (1 << 0));	//bit[0] 1:RGB, 0:YUV
+	WRITE_LCD_REG(ENCL_VIDEO_RGBIN_CTRL,  (1 << 0));//(1 << 1) | (1 << 0));	//bit[0] 1:RGB, 0:YUV
 
-	WRITE_LCD_REG(ENCL_VIDEO_EN,			1);	// enable encl
+	WRITE_LCD_REG(ENCL_VIDEO_EN,          1);	// enable encl
 }
 
 static void set_control_lvds(Lcd_Config_t *pConf)
-- 
2.19.0

