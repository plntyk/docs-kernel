From 6c74622293c575dac22814146005ef69616551b0 Mon Sep 17 00:00:00 2001
From: "bo.yang" <bo.yang@amlogic.com>
Date: Thu, 12 Jun 2014 09:51:39 +0800
Subject: [PATCH 4567/5965] plat: format and standardize header files

---
 arch/arm/plat-meson/include/plat/bt_device.h  |  27 +++--
 arch/arm/plat-meson/include/plat/cpu.h        |   5 +-
 arch/arm/plat-meson/include/plat/cpufreq.h    |  13 +-
 arch/arm/plat-meson/include/plat/eth.h        |  22 ++--
 arch/arm/plat-meson/include/plat/fiq_bridge.h |  49 +++++---
 .../arm/plat-meson/include/plat/hdmi_config.h |  90 ++++++++------
 arch/arm/plat-meson/include/plat/io.h         |  73 +++++++----
 arch/arm/plat-meson/include/plat/irq.h        |  13 +-
 arch/arm/plat-meson/include/plat/lm.h         | 113 ++++++++++--------
 .../plat-meson/include/plat/plat-cpuidle.h    |  11 +-
 arch/arm/plat-meson/include/plat/platform.h   |  15 ++-
 .../plat-meson/include/plat/platform_data.h   |  37 +++---
 arch/arm/plat-meson/include/plat/regops.h     |   7 +-
 arch/arm/plat-meson/include/plat/sram.h       |   6 +-
 arch/arm/plat-meson/include/plat/wakeup.h     |  20 ++--
 arch/arm/plat-meson/include/plat/wifi_power.h |  42 ++++---
 16 files changed, 325 insertions(+), 218 deletions(-)
 mode change 100644 => 100755 arch/arm/plat-meson/include/plat/eth.h
 mode change 100644 => 100755 arch/arm/plat-meson/include/plat/io.h
 mode change 100644 => 100755 arch/arm/plat-meson/include/plat/wifi_power.h

diff --git a/arch/arm/plat-meson/include/plat/bt_device.h b/arch/arm/plat-meson/include/plat/bt_device.h
index 74f3184fbfb9..36668b796dc1 100755
--- a/arch/arm/plat-meson/include/plat/bt_device.h
+++ b/arch/arm/plat-meson/include/plat/bt_device.h
@@ -1,21 +1,26 @@
 /*
+ * arch/arm/plat-meson/include/plat/bt_device.h
  *
- * arch/arm/mach-meson/bcm-bt.c
+ * Copyright (C) 2010-2014 Amlogic, Inc.
  *
- *  Copyright (C) 2010 AMLOGIC, INC.
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
  *
- * License terms: GNU General Public License (GPL) version 2
- * Platform machine definition.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
  */
 
-#ifndef __BT_DEVICE_H
-#define __BT_DEVICE_H
+#ifndef __PLAT_MESON_BT_DEVICE_H
+#define __PLAT_MESON_BT_DEVICE_H
 
 struct bt_dev_data {
-    int gpio_reset;
-    int gpio_en;
-    int gpio_host_wake;
-    int gpio_wake;
+	int gpio_reset;
+	int gpio_en;
+	int gpio_host_wake;
+	int gpio_wake;
 };
 
-#endif  
\ No newline at end of file
+#endif
diff --git a/arch/arm/plat-meson/include/plat/cpu.h b/arch/arm/plat-meson/include/plat/cpu.h
index ad7e0cf4997a..09b7ca5d8d80 100755
--- a/arch/arm/plat-meson/include/plat/cpu.h
+++ b/arch/arm/plat-meson/include/plat/cpu.h
@@ -24,8 +24,8 @@
  *
  */
 
-#ifndef __ASM_ARCH_MESON_CPU_H
-#define __ASM_ARCH_MESON_CPU_H
+#ifndef __PLAT_MESON_CPU_H
+#define __PLAT_MESON_CPU_H
 
 #define MESON_CPU_TYPE_MESON1		0x10
 #define MESON_CPU_TYPE_MESON2		0x20
@@ -47,4 +47,5 @@
 
 int  meson_cpu_version_init(void);
 int get_meson_cpu_version(int level);
+
 #endif
diff --git a/arch/arm/plat-meson/include/plat/cpufreq.h b/arch/arm/plat-meson/include/plat/cpufreq.h
index e65378d0aa23..0071ebba2cbb 100755
--- a/arch/arm/plat-meson/include/plat/cpufreq.h
+++ b/arch/arm/plat-meson/include/plat/cpufreq.h
@@ -12,16 +12,17 @@
  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  */
-#ifndef _PLAT_MESON_CPUFREQ_H
-#define _PLAT_MESON_CPUFREQ_H
+
+#ifndef __PLAT_MESON_CPUFREQ_H
+#define __PLAT_MESON_CPUFREQ_H
 
 #include <linux/cpufreq.h>
 
 struct meson_cpufreq_config {
-    struct cpufreq_frequency_table *freq_table;
-    unsigned int (*cur_volt_max_freq)(void);
-    int (*voltage_scale)(unsigned int frequency);
-    int (*init)(void);
+	struct cpufreq_frequency_table *freq_table;
+	unsigned int (*cur_volt_max_freq)(void);
+	int (*voltage_scale)(unsigned int frequency);
+	int (*init)(void);
 };
 
 extern int meson_cpufreq_boost(unsigned int freq);
diff --git a/arch/arm/plat-meson/include/plat/eth.h b/arch/arm/plat-meson/include/plat/eth.h
old mode 100644
new mode 100755
index 940a7571c823..0a5375242aa4
--- a/arch/arm/plat-meson/include/plat/eth.h
+++ b/arch/arm/plat-meson/include/plat/eth.h
@@ -1,14 +1,20 @@
 /*
- * Author: AMLOGIC, Inc.
- * Copyright (C) 2010 Amlogic Inc.
  *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
+ * Copyright (C) 2010-2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
  */
 
-#ifndef _ETH_PLAT_
-#define _ETH_PLAT_
+#ifndef __PLAT_MESON_ETH_H
+#define __PLAT_MESON_ETH_H
+
 #include <mach/pinmux.h>
 
 struct aml_eth_platdata {
@@ -22,5 +28,5 @@ struct aml_eth_platdata {
 
 extern struct platform_device meson_device_eth;
 extern void meson_eth_set_platdata(struct aml_eth_platdata *pd);
-#endif /* _ETH_PLAT_ */
 
+#endif /* __PLAT_MESON_ETH_H */
diff --git a/arch/arm/plat-meson/include/plat/fiq_bridge.h b/arch/arm/plat-meson/include/plat/fiq_bridge.h
index 2d31166b6449..369687394369 100755
--- a/arch/arm/plat-meson/include/plat/fiq_bridge.h
+++ b/arch/arm/plat-meson/include/plat/fiq_bridge.h
@@ -1,21 +1,37 @@
-#ifndef   FIQ_BRIDGE_H
-#define FIQ_BRIDGE_H
+/*
+ * arch/arm/plat-meson/include/plat/fiq_bridge.h
+ *
+ * Copyright (C) 2010-2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __PLAT_MESON_FIQ_BRIDGE_H
+#define __PLAT_MESON_FIQ_BRIDGE_H
+
 #include <linux/list.h>
 #include <linux/irqreturn.h>
-#include <mach/am_regs.h>
 #include <linux/io.h>
-typedef   irqreturn_t (*bridge_handle_t)(int irq, void *dev_id);
-typedef  struct{
-	
-	bridge_handle_t  	handle;
-	u32				key;
-	u32				active;
-	const   char*		name;
-	struct  list_head	list;
-   
-}bridge_item_t;
-
-static LIST_HEAD(fiq_bridge_list);  
+#include <mach/am_regs.h>
+
+typedef irqreturn_t (*bridge_handle_t)(int irq, void *dev_id);
+
+typedef struct {
+	bridge_handle_t		handle;
+	u32			key;
+	u32			active;
+	const char*		name;
+	struct list_head	list;
+} bridge_item_t;
+
+static LIST_HEAD(fiq_bridge_list);
 
 #define BRIDGE_IRQ INT_TIMER_C
 #define BRIDGE_IRQ_SET() WRITE_CBUS_REG(ISA_TIMERC, 1)
@@ -24,5 +40,4 @@ extern int fiq_bridge_pulse_trigger(bridge_item_t *c_item);
 extern int register_fiq_bridge_handle(bridge_item_t *c_item);
 extern int unregister_fiq_bridge_handle(bridge_item_t *c_item);
 
-#endif
-
+#endif //__PLAT_MESON_FIQ_BRIDGE_H
diff --git a/arch/arm/plat-meson/include/plat/hdmi_config.h b/arch/arm/plat-meson/include/plat/hdmi_config.h
index c4d7e83dd9b0..036c9e8b5f32 100755
--- a/arch/arm/plat-meson/include/plat/hdmi_config.h
+++ b/arch/arm/plat-meson/include/plat/hdmi_config.h
@@ -1,59 +1,73 @@
-#ifndef _HDMI_CONFIG_H_
-#define _HDMI_CONFIG_H_
+/*
+ * arch/arm/plat-meson/include/plat/hdmi_config.h
+ *
+ * Copyright (C) 2010-2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
 
-struct hdmi_phy_set_data{
-    unsigned long freq;
-    unsigned long addr;
-    unsigned long data;
+#ifndef __PLAT_MESON_HDMI_CONFIG_H
+#define __PLAT_MESON_HDMI_CONFIG_H
+
+struct hdmi_phy_set_data {
+	unsigned long freq;
+	unsigned long addr;
+	unsigned long data;
 };
 
-struct vendor_info_data{
-    unsigned char *vendor_name;     // Max Chars: 8
-    unsigned int  vendor_id;        // 3 Bytes, Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt
-    unsigned char *product_desc;    // Max Chars: 16
-    unsigned char *cec_osd_string;  // Max Chars: 14
+struct vendor_info_data {
+	unsigned char *vendor_name;	// Max Chars: 8
+	unsigned int  vendor_id;	// 3 Bytes, Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt
+	unsigned char *product_desc;	// Max Chars: 16
+	unsigned char *cec_osd_string;	// Max Chars: 14
 };
 
 enum pwr_type {
-    NONE = 0,
-    CPU_GPO = 1,
-    AXP202,
+	NONE = 0,
+	CPU_GPO = 1,
+	AXP202,
 };
 
 struct pwr_cpu_gpo {
-    unsigned int pin;
-    unsigned int val;
+	unsigned int pin;
+	unsigned int val;
 };
 
 struct pwr_axp202 {
-    unsigned int pin;
-    unsigned int val;
+	unsigned int pin;
+	unsigned int val;
 };
 
 struct pwr_ctl_var {
-    enum pwr_type type;
-    union {
-        struct pwr_cpu_gpo gpo;
-        struct pwr_axp202 axp202;
-    }var;
+	enum pwr_type type;
+	union {
+		struct pwr_cpu_gpo gpo;
+		struct pwr_axp202 axp202;
+	} var;
 };
 
-struct hdmi_pwr_ctl{
-    struct pwr_ctl_var pwr_5v_on;
-    struct pwr_ctl_var pwr_5v_off;
-    struct pwr_ctl_var pwr_3v3_on;
-    struct pwr_ctl_var pwr_3v3_off;
-    struct pwr_ctl_var pwr_hpll_vdd_on;
-    struct pwr_ctl_var pwr_hpll_vdd_off;
-    int pwr_level;
+struct hdmi_pwr_ctl {
+	struct pwr_ctl_var pwr_5v_on;
+	struct pwr_ctl_var pwr_5v_off;
+	struct pwr_ctl_var pwr_3v3_on;
+	struct pwr_ctl_var pwr_3v3_off;
+	struct pwr_ctl_var pwr_hpll_vdd_on;
+	struct pwr_ctl_var pwr_hpll_vdd_off;
+	int pwr_level;
 };
 
-struct hdmi_config_platform_data{
-    void (*hdmi_sspll_ctrl)(unsigned int level);    // SSPLL control level
-    struct hdmi_phy_set_data *phy_data;             // For some boards, HDMI PHY setting may diff from ref board.
-    struct vendor_info_data *vend_data;
-    struct hdmi_pwr_ctl *pwr_ctl;
+struct hdmi_config_platform_data {
+	void (*hdmi_sspll_ctrl)(unsigned int level);	// SSPLL control level
+	struct hdmi_phy_set_data *phy_data;		// For some boards, HDMI PHY setting may diff from ref board.
+	struct vendor_info_data *vend_data;
+	struct hdmi_pwr_ctl *pwr_ctl;
 };
 
-#endif
-
+#endif //__PLAT_MESON_HDMI_CONFIG_H
diff --git a/arch/arm/plat-meson/include/plat/io.h b/arch/arm/plat-meson/include/plat/io.h
old mode 100644
new mode 100755
index 23f28dae4341..3917d58e42cb
--- a/arch/arm/plat-meson/include/plat/io.h
+++ b/arch/arm/plat-meson/include/plat/io.h
@@ -1,70 +1,85 @@
 /*
+ * arch/arm/plat-meson/include/plat/io.h
  *
- * arch/arm/plat-meson/include/plat/regops.h
+ * Copyright (C) 2010-2014 Amlogic, Inc.
  *
- *  Copyright (C) 2011 AMLOGIC, INC.
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
  *
- *	Common interface for aml CBUS/AHB/APB/AXI operation
- *
- * License terms: GNU General Public License (GPL) version 2
- * Basic platform init and mapping functions.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
  */
-#ifndef __REGOPS_H__
-#define __REGOPS_H__
+
+#ifndef __PLAT_MESON_IO_H
+#define __PLAT_MESON_IO_H
+
 #include <linux/types.h>
 #include <linux/io.h>
+
 #ifndef __ASSEMBLY__
+
 #ifdef CONFIG_SMP
-#define MESON_SMP_RMB() smp_rmb()
-#define MESON_SMP_WMB() smp_wmb()
-#define MESON_SMP_MB() smp_mb()
+#define MESON_SMP_RMB()		smp_rmb()
+#define MESON_SMP_WMB()		smp_wmb()
+#define MESON_SMP_MB()		smp_mb()
 #else
 #define MESON_SMP_RMB()
 #define MESON_SMP_WMB()
 #define MESON_SMP_MB()
 #endif
+
 #ifndef REGOPS_DEBUG
 static __inline__ uint32_t aml_read_reg32(uint32_t _reg)
 {
-    MESON_SMP_RMB();
+	MESON_SMP_RMB();
 	return readl_relaxed((volatile void *)_reg);
 };
+
 static __inline__ void aml_write_reg32( uint32_t _reg, const uint32_t _value)
 {
 	writel_relaxed( _value,(volatile void *)_reg );
 	MESON_SMP_MB();
 };
+
 static __inline__ void aml_set_reg32_bits(uint32_t _reg, const uint32_t _value, const uint32_t _start, const uint32_t _len)
 {
-    MESON_SMP_RMB();
+	MESON_SMP_RMB();
 	writel_relaxed(( (readl_relaxed((volatile void *)_reg) & ~((( 1L << (_len) )-1) << (_start))) | ((unsigned)((_value)&((1L<<(_len))-1)) << (_start))), (volatile void *)_reg );
 	MESON_SMP_WMB();
 }
+
 static __inline__ void aml_clrset_reg32_bits(uint32_t _reg, const uint32_t clr, const uint32_t set)
 {
-    MESON_SMP_RMB();
+	MESON_SMP_RMB();
 	writel_relaxed((readl_relaxed((volatile void *)_reg) & ~(clr)) | (set), (volatile void *)_reg );
 	MESON_SMP_WMB();
 }
 
 static __inline__ uint32_t aml_get_reg32_bits(uint32_t _reg, const uint32_t _start, const uint32_t _len)
 {
-    MESON_SMP_RMB();
+	MESON_SMP_RMB();
 	return	( (readl_relaxed((volatile void *)_reg) >> (_start)) & (( 1L << (_len) ) - 1) );
 }
+
 static __inline__ void aml_set_reg32_mask( uint32_t _reg, const uint32_t _mask )
 {
-    MESON_SMP_RMB();
-		writel_relaxed( (readl_relaxed((volatile void *)_reg) | (_mask) ), (volatile void *)_reg );
-		MESON_SMP_WMB();
+	MESON_SMP_RMB();
+	writel_relaxed( (readl_relaxed((volatile void *)_reg) | (_mask) ), (volatile void *)_reg );
+	MESON_SMP_WMB();
 }
+
 static __inline__ void aml_clr_reg32_mask( uint32_t _reg, const uint32_t _mask)
 {
-    MESON_SMP_RMB();
-		writel_relaxed( (readl_relaxed((volatile void *)_reg) & (~(_mask)) ), (volatile void *)_reg );
-		MESON_SMP_WMB();
+	MESON_SMP_RMB();
+	writel_relaxed( (readl_relaxed((volatile void *)_reg) & (~(_mask)) ), (volatile void *)_reg );
+	MESON_SMP_WMB();
 }
-#else
+
+#else //REGOPS_DEBUG
+
 static __inline__ uint32_t aml_read_reg32( uint32_t _reg)
 {
 	uint32_t _val;
@@ -74,21 +89,24 @@ static __inline__ uint32_t aml_read_reg32( uint32_t _reg)
 		printk( KERN_DEBUG "rd:%X = %X\n",_reg,_val);
 	return val;
 };
+
 static __inline__ void aml_write_reg32( uint32_t _reg, const uint32_t _value)
 {
 	if(g_regops_dbg_lvl)
 		printk( KERN_DEBUG "wr:%X = %X\n",_reg,_value);
 	writel_relaxed( _value, (volatile void *)_reg );
 };
+
 static __inline__ void aml_set_reg32_bits( uint32_t _reg, const uint32_t _value,const uint32_t _start, const uint32_t _len)
 {
 	if(g_regops_dbg_lvl)
 		printk( KERN_DEBUG "setbit:%X = (%X,%X,%X)\n",_reg,_value,_start,_len);
 	writel_relaxed((readl_relaxed((volatile void *)_reg) & ~((( 1L << (_len) )-1) << (_start)) | ((unsigned)((_value)&((1L<<(_len))-1)) << (_start))), (volatile void *)_reg );
 }
+
 static __inline__ void aml_clrset_reg32_bits(uint32_t _reg, const uint32_t clr, const uint32_t set)
 {
-    if(g_regops_dbg_lvl)
+	if(g_regops_dbg_lvl)
 		printk( KERN_DEBUG "clrsetbit:%X = (%X,%X)\n",_reg,clr,set);
 	writel_relaxed((readl_relaxed((volatile void *)_reg) & ~(clr)) | (set), (volatile void *)_reg );
 }
@@ -104,6 +122,7 @@ static __inline__ uint32_t aml_get_reg32_bits( uint32_t _reg, const uint32_t _st
 
 	return	_val;
 }
+
 static __inline__ void aml_set_reg32_mask( uint32_t _reg, const uint32_t _mask )
 {
 	uint32_t _val;
@@ -115,6 +134,7 @@ static __inline__ void aml_set_reg32_mask( uint32_t _reg, const uint32_t _mask )
 
 	writel_relaxed( val , (volatile void *)_reg );
 }
+
 static __inline__ void aml_clr_reg32_mask( uint32_t _reg, const uint32_t _mask)
 {
 	uint32_t _val;
@@ -126,7 +146,8 @@ static __inline__ void aml_clr_reg32_mask( uint32_t _reg, const uint32_t _mask)
 
 	writel_relaxed( _val , (volatile void *)_reg );
 }
-#endif
-#endif
+#endif //REGOPS_DEBUG
 
-#endif
+#endif //__ASSEMBLY__
+
+#endif //__PLAT_MESON_IO_H
\ No newline at end of file
diff --git a/arch/arm/plat-meson/include/plat/irq.h b/arch/arm/plat-meson/include/plat/irq.h
index f525302ac0c3..b82a8ab47760 100755
--- a/arch/arm/plat-meson/include/plat/irq.h
+++ b/arch/arm/plat-meson/include/plat/irq.h
@@ -1,11 +1,16 @@
 /*
- *
  * arch/arm/plat-meson/include/plat/irq.h
  *
- *  Copyright (C) 2013 AMLOGIC, INC.
+ * Copyright (C) 2013 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
  *
- * License terms: GNU General Public License (GPL) version 2
- * 
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
  */
 
 #ifndef __PLAT_MESON_IRQ_H
diff --git a/arch/arm/plat-meson/include/plat/lm.h b/arch/arm/plat-meson/include/plat/lm.h
index 513b79413fb1..db9a2bc1e6bb 100755
--- a/arch/arm/plat-meson/include/plat/lm.h
+++ b/arch/arm/plat-meson/include/plat/lm.h
@@ -1,5 +1,20 @@
-#ifndef __AMLOGIC_LM_H__
-#define __AMLOGIC_LM_H__
+/*
+ * arch/arm/plat-meson/include/plat/lm.h
+ *
+ * Copyright (C) 2010-2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __PLAT_MESON_LM_H
+#define __PLAT_MESON_LM_H
 
 /** todo:
  *
@@ -7,43 +22,42 @@
  *
  */
 
-enum usb_port_type_e{
-    USB_PORT_TYPE_OTG = 0,
-    USB_PORT_TYPE_HOST,
-    USB_PORT_TYPE_SLAVE,
-
+enum usb_port_type_e {
+	USB_PORT_TYPE_OTG = 0,
+	USB_PORT_TYPE_HOST,
+	USB_PORT_TYPE_SLAVE,
 };
 
-enum usb_port_speed_e{
-    USB_PORT_SPEED_DEFAULT = 0,
-    USB_PORT_SPEED_HIGH,
-    USB_PORT_SPEED_FULL
+enum usb_port_speed_e {
+	USB_PORT_SPEED_DEFAULT = 0,
+	USB_PORT_SPEED_HIGH,
+	USB_PORT_SPEED_FULL
 };
 
-enum usb_dma_config_e{
-    USB_DMA_BURST_DEFAULT = 0,
-    USB_DMA_BURST_SINGLE,
-    USB_DMA_BURST_INCR,
-    USB_DMA_BURST_INCR4,
-    USB_DMA_BURST_INCR8,
-    USB_DMA_BURST_INCR16,
-    USB_DMA_DISABLE,
+enum usb_dma_config_e {
+	USB_DMA_BURST_DEFAULT = 0,
+	USB_DMA_BURST_SINGLE,
+	USB_DMA_BURST_INCR,
+	USB_DMA_BURST_INCR4,
+	USB_DMA_BURST_INCR8,
+	USB_DMA_BURST_INCR16,
+	USB_DMA_DISABLE,
 };
 
-enum usb_phy_id_mode_e{
-		USB_PHY_ID_MODE_HW = 0,
-		USB_PHY_ID_MODE_SW_HOST,
-		USB_PHY_ID_MODE_SW_SLAVE
+enum usb_phy_id_mode_e {
+	USB_PHY_ID_MODE_HW = 0,
+	USB_PHY_ID_MODE_SW_HOST,
+	USB_PHY_ID_MODE_SW_SLAVE
 };
 
-enum usb_port_idx_e{
-		USB_PORT_IDX_A = 0,
-		USB_PORT_IDX_B,
-		USB_PORT_IDX_C,
-		USB_PORT_IDX_D
+enum usb_port_idx_e {
+	USB_PORT_IDX_A = 0,
+	USB_PORT_IDX_B,
+	USB_PORT_IDX_C,
+	USB_PORT_IDX_D
 };
 
-enum lm_device_type_e{
+enum lm_device_type_e {
 	LM_DEVICE_TYPE_USB = 0,
 	LM_DEVICE_TYPE_SATA = 1,
 };
@@ -54,39 +68,40 @@ struct lmclock {
 	const char * 		name; /* clock name */
 	unsigned int		sel; /* clock source selecter, defined in mach/include/xxxclock.h*/
 	unsigned int		src; /* input clock freq */
-	unsigned int		div; /* clock devider */	
+	unsigned int		div; /* clock devider */
 };
 
 /* device ralated attributes */
 union lmparam {
-  struct {
-  	unsigned int		port_idx;			/* USB_PORT_IDX_A or USB_PORT_IDX_B */
-  	unsigned int		port_type;		/* OTG/HOST/SLAVE */
-  	unsigned int		port_speed;		/* Default,High,Full */
-  	unsigned int		port_config;	/* Reserved */
-  	unsigned int		dma_config;		/* Default,SINGLE,INCR...*/
-  	unsigned int		phy_id_mode;	/* HW/SW_HOST/SW_SLAVE */
-  	unsigned int		phy_tune_reg; /* PHY tune register address */
-  	void (* set_vbus_power)(char is_power_on);
-	void (* charger_detect_cb)(int bc_mode);
-  }usb;
-  struct {
-  	unsigned int port_type;
-  	void (* set_port_power) (char is_power_on);
-  }sata;
+	struct {
+		unsigned int		port_idx;			/* USB_PORT_IDX_A or USB_PORT_IDX_B */
+		unsigned int		port_type;		/* OTG/HOST/SLAVE */
+		unsigned int		port_speed;		/* Default,High,Full */
+		unsigned int		port_config;	/* Reserved */
+		unsigned int		dma_config;		/* Default,SINGLE,INCR...*/
+		unsigned int		phy_id_mode;	/* HW/SW_HOST/SW_SLAVE */
+		unsigned int		phy_tune_reg; /* PHY tune register address */
+		void (* set_vbus_power)(char is_power_on);
+		void (* charger_detect_cb)(int bc_mode);
+	}usb;
+
+	struct {
+		unsigned int port_type;
+		void (* set_port_power) (char is_power_on);
+	}sata;
 };
 
 struct lm_device {
 	struct device		dev;
 	struct resource		*resource;
 	unsigned int		irq;
-	unsigned int		id;				
+	unsigned int		id;
 	unsigned int		type;			/* usb or sata */
 	u64				dma_mask_room; /* dma mask room for dev->dma_mask */
 
-	struct lmclock clock;    
+	struct lmclock clock;
 //	union lmparam param;
-	void * pdata; 
+	void * pdata;
 };
 
 struct lm_driver {
@@ -110,4 +125,4 @@ int lm_device_register(struct lm_device *dev);
 //#define lm_get_drvdata(lm)	dev_get_drvdata(&(lm)->dev)
 //#define lm_set_drvdata(lm,d)	dev_set_drvdata(&(lm)->dev, d)
 
-#endif
+#endif //__PLAT_MESON_LM_H
\ No newline at end of file
diff --git a/arch/arm/plat-meson/include/plat/plat-cpuidle.h b/arch/arm/plat-meson/include/plat/plat-cpuidle.h
index 22c6b38e6847..81529fef66dd 100755
--- a/arch/arm/plat-meson/include/plat/plat-cpuidle.h
+++ b/arch/arm/plat-meson/include/plat/plat-cpuidle.h
@@ -1,11 +1,9 @@
 /*
- * arch/arm/plat-meson/include/mach/plat-cpuidle.h
+ * arch/arm/plat-meson/include/plat/plat-cpuidle.h
  *
  * MESON cpuidle declaration
  *
- * Copyright (C) 2012 Amlogic
- *
- *
+ * Copyright (C) 2010-2014 Amlogic, Inc.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -23,8 +21,9 @@
  *
  */
 
-#ifndef _PLAT_CPU_IDLE_H
-#define _PLAT_CPU_IDLE_H
+#ifndef __PLAT_MESON_CPU_IDLE_H
+#define __PLAT_MESON_CPU_IDLE_H
+
 extern int meson_enter_idle_simple(struct cpuidle_device *dev,
 			struct cpuidle_driver *drv,
 			int index);
diff --git a/arch/arm/plat-meson/include/plat/platform.h b/arch/arm/plat-meson/include/plat/platform.h
index b6cd4ec73900..23f4088d1146 100755
--- a/arch/arm/plat-meson/include/plat/platform.h
+++ b/arch/arm/plat-meson/include/plat/platform.h
@@ -2,7 +2,7 @@
  *
  * arch/arm/plat-meson/include/plat/platform.h
  *
- *  Copyright (C) 2010 AMLOGIC, INC.
+ *  Copyright (C) 2010-2014 Amlogic, Inc.
  *
  * License terms: GNU General Public License (GPL) version 2
  * Basic platform init and mapping functions.
@@ -12,12 +12,7 @@
 #define __PLAT_MESON_PLATFORM_H
 
 #include <linux/types.h>
-
 #include <mach/pinmux.h>
-///#include <plat/
-/*
-*   
-*/
 
 
 void meson_init_irq(void);
@@ -25,17 +20,21 @@ void meson_init_devices(void);
 
 #ifdef CONFIG_MESON_PLATFORM_API
 #include "resource.h"
+
 //~ static inline int32_t mesonplat_resource_get_num(const char * name)
 //~ {
 	//~ ///temp , we should implement a real function later .
 	//~ return 4;
 //~ }
+
 typedef void * platform_data_t ;
-static inline int32_t  mesonplat_pad_enable(platform_data_t platform_data)
+
+static inline int32_t mesonplat_pad_enable(platform_data_t platform_data)
 {
 	return pinmux_set(platform_data);
 }
-static inline int32_t  mesonplat_pad_disable(platform_data_t platform_data)
+
+static inline int32_t mesonplat_pad_disable(platform_data_t platform_data)
 {
 	return pinmux_clr(platform_data);
 }
diff --git a/arch/arm/plat-meson/include/plat/platform_data.h b/arch/arm/plat-meson/include/plat/platform_data.h
index 9e6011f6be17..d466afb5107d 100755
--- a/arch/arm/plat-meson/include/plat/platform_data.h
+++ b/arch/arm/plat-meson/include/plat/platform_data.h
@@ -1,25 +1,30 @@
 /*
  *
- * arch/arm/plat-meson/include/plat/platform.h
+ * arch/arm/plat-meson/include/plat/platform_data.h
  *
- *  Copyright (C) 2010 AMLOGIC, INC.
+ * Copyright (C) 2010-2014 Amlogic, Inc.
  *
  * License terms: GNU General Public License (GPL) version 2
  * Basic platform init and mapping functions.
  */
-#ifndef   _PLATFORM_DATA_H
-#define  _PLATFORM_DATA_H
-#include  <mach/pinmux.h>
+
+#ifndef __PLAT_MESON_PLATFORM_DATA_H
+#define __PLAT_MESON_PLATFORM_DATA_H
+
 #include <linux/platform_device.h>
-typedef  struct {
-    int32_t  (*setup)(void);
-    int32_t  (*clear) (void);
-}pinmux_cfg_t;
-typedef  struct {
-    struct clk  *clk_src;
-    pinmux_cfg_t pinmux_cfg;
-    /*add common attribute here*/
-    pinmux_set_t  pinmux_set;
-}plat_data_public_t;
+#include <mach/pinmux.h>
+
+typedef struct {
+	int32_t (*setup)(void);
+	int32_t (*clear) (void);
+} pinmux_cfg_t;
+
+typedef struct {
+	struct clk  *clk_src;
+	pinmux_cfg_t pinmux_cfg;
+	/*add common attribute here*/
+	pinmux_set_t  pinmux_set;
+} plat_data_public_t;
+
 extern void __init *meson_set_platdata(void *, size_t ,struct platform_device *) ;
-#endif 
+#endif
diff --git a/arch/arm/plat-meson/include/plat/regops.h b/arch/arm/plat-meson/include/plat/regops.h
index 12dc511efe48..198cb58abeea 100755
--- a/arch/arm/plat-meson/include/plat/regops.h
+++ b/arch/arm/plat-meson/include/plat/regops.h
@@ -1 +1,6 @@
-#include "io.h"
+#ifndef __PLAT_MESON_REGOPS_H
+#define __PLAT_MESON_REGOPS_H
+
+#include <plat/io.h>
+
+#endif
diff --git a/arch/arm/plat-meson/include/plat/sram.h b/arch/arm/plat-meson/include/plat/sram.h
index db855026b094..b5a47412df9a 100755
--- a/arch/arm/plat-meson/include/plat/sram.h
+++ b/arch/arm/plat-meson/include/plat/sram.h
@@ -18,8 +18,8 @@
  * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
  */
 
-#ifndef __PLAT_SRAM_H
-#define __PLAT_SRAM_H
+#ifndef __PLAT_MESON_SRAM_H
+#define __PLAT_MESON_SRAM_H
 
 #define SRAM_SIZE			(127 * 1024 + 512)
 #define SRAM_GRANULARITY		(512)
@@ -32,4 +32,4 @@
 extern void *sram_alloc(size_t len);
 extern void sram_free(void *addr, size_t len);
 
-#endif /* __PLAT_SRAM_H */
+#endif /* __PLAT_MESON_SRAM_H */
diff --git a/arch/arm/plat-meson/include/plat/wakeup.h b/arch/arm/plat-meson/include/plat/wakeup.h
index b983686c1628..92b083c67346 100755
--- a/arch/arm/plat-meson/include/plat/wakeup.h
+++ b/arch/arm/plat-meson/include/plat/wakeup.h
@@ -1,11 +1,9 @@
 /*
- * arch/arm/plat-meson/include/plat/cpu.h
+ * arch/arm/plat-meson/include/plat/wakeup.h
  *
  * MESON wakeup source
  *
- * Copyright (C) 2012 Amlogic
- *
- *
+ * Copyright (C) 2012-2014 Amlogic, Inc.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -23,13 +21,17 @@
  *
  */
 
+#ifndef __PLAT_MESON_WAKEUP_H
+#define __PLAT_MESON_WAKEUP_H
+
  /*Wake up source flag which be writen to AO_STATUS_REG2*/
 
-#define FLAG_WAKEUP_PWRKEY      0x1234abcd //IR, power key, low power, adapter plug in/out and so on, are all use this flag. 
-#define FLAG_WAKEUP_ALARM       0x12345678
-#define FLAG_WAKEUP_WIFI        0x12340001
-#define FLAG_WAKEUP_BT          0x12340002
-#define FLAG_WAKEUP_PWROFF      0x12340003
+#define FLAG_WAKEUP_PWRKEY		0x1234abcd //IR, power key, low power, adapter plug in/out and so on, are all use this flag.
+#define FLAG_WAKEUP_ALARM		0x12345678
+#define FLAG_WAKEUP_WIFI		0x12340001
+#define FLAG_WAKEUP_BT			0x12340002
+#define FLAG_WAKEUP_PWROFF		0x12340003
 
 /*add new wakeup source flag here...*/
 
+#endif //__PLAT_MESON_WAKEUP_H
\ No newline at end of file
diff --git a/arch/arm/plat-meson/include/plat/wifi_power.h b/arch/arm/plat-meson/include/plat/wifi_power.h
old mode 100644
new mode 100755
index 2d4b69fa58cf..79bac2fdca3a
--- a/arch/arm/plat-meson/include/plat/wifi_power.h
+++ b/arch/arm/plat-meson/include/plat/wifi_power.h
@@ -1,17 +1,31 @@
-#ifndef _WIFI_POWER_H_
-#define _WIFI_POWER_H_
-struct wifi_power_platform_data{
-    int power_gpio;
-    int power_gpio2;
-    int (*set_power)(int val);
-    int (*set_reset)(int val);
-    int (*set_carddetect)(int val);
-    void *(*mem_prealloc)(int section, unsigned long size);
-    int (*get_mac_addr)(unsigned char *buf);
-    void *(*get_country_code)(char *ccode);
-    int (*usb_set_power)(int val);
-};
+/*
+ * arch/arm/plat-meson/include/plat/wifi_power.h
+ *
+ * Copyright (C) 2010-2014 Amlogic, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
 
+#ifndef __PLAT_MESON_WIFI_POWER_H
+#define __PLAT_MESON_WIFI_POWER_H
 
-#endif
+struct wifi_power_platform_data {
+	int power_gpio;
+	int power_gpio2;
+	int (*set_power)(int val);
+	int (*set_reset)(int val);
+	int (*set_carddetect)(int val);
+	void *(*mem_prealloc)(int section, unsigned long size);
+	int (*get_mac_addr)(unsigned char *buf);
+	void *(*get_country_code)(char *ccode);
+	int (*usb_set_power)(int val);
+};
 
+#endif __PLAT_MESON_WIFI_POWER_H
-- 
2.19.0

