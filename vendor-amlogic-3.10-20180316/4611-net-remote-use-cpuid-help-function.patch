From 87c25381450b16618e73e579c787f3fe2cd85b6b Mon Sep 17 00:00:00 2001
From: "baoqi.wang" <baoqi.wang@amlogic.com>
Date: Fri, 18 Jul 2014 14:11:43 +0800
Subject: [PATCH 4611/5965] net, remote: use cpuid help function

---
 drivers/amlogic/ethernet/am_net8218.c          | 11 +++++++----
 drivers/amlogic/input/new_remote/remote_func.c |  4 ----
 2 files changed, 7 insertions(+), 8 deletions(-)

diff --git a/drivers/amlogic/ethernet/am_net8218.c b/drivers/amlogic/ethernet/am_net8218.c
index a7b512848f93..08431ad282f1 100755
--- a/drivers/amlogic/ethernet/am_net8218.c
+++ b/drivers/amlogic/ethernet/am_net8218.c
@@ -2749,7 +2749,7 @@ static int eth_pwol_store(struct class *class, struct class_attribute *attr, con
 	}
 	return count;
 }
-#if MESON_CPU_TYPE > MESON_CPU_TYPE_MESON8
+#if(MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8)
 
 static int am_net_cali(int argc, char **argv,int gate)
 {
@@ -2777,7 +2777,6 @@ static int am_net_cali(int argc, char **argv,int gate)
  			printk("value == %x,  cali_len == %d, cali_idx == %d,  cali_sel =%d,  cali_rise = %d\n",value,(value>>5)&0x1f,(value&0x1f),(value>>11)&0x7,(value>>14)&0x1);
 		}
 	}
-
 	return 0;
 }
 static ssize_t eth_cali_store(struct class *class, struct class_attribute *attr,
@@ -2790,6 +2789,10 @@ static ssize_t eth_cali_store(struct class *class, struct class_attribute *attr,
 
 	buff = kstrdup(buf, GFP_KERNEL);
 	p = buff;
+	if(IS_MESON_M8_CPU){
+		printk("Sorry ,this cpu is not support cali!\n");
+		goto end;
+	}
 	for (argc = 0; argc < 6; argc++) {
 		para = strsep(&p, " ");
 		if (para == NULL)
@@ -2833,7 +2836,7 @@ static CLASS_ATTR(macreg, S_IWUSR | S_IRUGO, eth_macreg_help, eth_macreg_func);
 static CLASS_ATTR(wol, S_IWUSR | S_IRUGO, eth_wol_show, eth_wol_store);
 static CLASS_ATTR(pwol, S_IWUSR | S_IRUGO, eth_pwol_show, eth_pwol_store);
 static CLASS_ATTR(linkspeed, S_IWUSR | S_IRUGO, eth_linkspeed_show, NULL);
-#if MESON_CPU_TYPE > MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 static CLASS_ATTR(cali, S_IWUSR | S_IRUGO, NULL,eth_cali_store);
 #endif
 
@@ -2857,7 +2860,7 @@ static int __init am_eth_class_init(void)
 	ret = class_create_file(eth_sys_class, &class_attr_wol);
 	ret = class_create_file(eth_sys_class, &class_attr_pwol);
 	ret = class_create_file(eth_sys_class, &class_attr_linkspeed);
-#if MESON_CPU_TYPE > MESON_CPU_TYPE_MESON8
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 	ret = class_create_file(eth_sys_class, &class_attr_cali);
 #endif
 
diff --git a/drivers/amlogic/input/new_remote/remote_func.c b/drivers/amlogic/input/new_remote/remote_func.c
index 6eb753be2970..0a02f6b0ad13 100755
--- a/drivers/amlogic/input/new_remote/remote_func.c
+++ b/drivers/amlogic/input/new_remote/remote_func.c
@@ -17,11 +17,9 @@
 #include "remote_main.h"
 
 #ifdef CONFIG_AML_HDMI_TX
-#ifdef CONFIG_ARCH_MESON8
 extern int cec_power_flag;
 unsigned char cec_repeat = 10;
 #endif
-#endif
 extern char *remote_log_buf;
 static int auto_repeat_count,repeat_count = 0;
 static void remote_rel_timer_sr(unsigned long data);
@@ -425,7 +423,6 @@ int remote_hw_reprot_key(struct remote *remote_data)
 	}
 	else if((remote_data->frame_status & REPEARTFLAG) && remote_data->enable_repeat_falg){	//repeate key
 #ifdef CONFIG_AML_HDMI_TX
-#ifdef CONFIG_ARCH_MESON8
        extern int rc_long_press_pwr_key;
 		if((remote_data->repeat_release_code == 0x1a) && (!cec_repeat)) {
             rc_long_press_pwr_key = 1;
@@ -435,7 +432,6 @@ int remote_hw_reprot_key(struct remote *remote_data)
 		if(remote_data->repeat_release_code == 0x1a)
  		    cec_repeat--;
 
-#endif
 #endif
 		if (remote_data->repeat_enable) {
 			repeat_count++;
-- 
2.19.0

