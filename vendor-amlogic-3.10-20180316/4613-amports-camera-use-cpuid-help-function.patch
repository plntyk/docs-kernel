From 61dcd0baf81f24bfaa0162bc4eea4aadd4c87834 Mon Sep 17 00:00:00 2001
From: "brian.zhu" <brian.zhu@amlogic.com>
Date: Thu, 17 Jul 2014 18:42:30 +0800
Subject: [PATCH 4613/5965] amports, camera: use cpuid help function

Change-Id: Ic67ab4551687f42220b62f62fe6939111c5f43c5
---
 drivers/amlogic/amports/encoder.c | 33 ++++++++++++++++++++-----------
 drivers/amlogic/amports/jpegenc.c | 16 +++++++--------
 drivers/amlogic/camera/bf3720.c   | 10 +++++-----
 drivers/amlogic/camera/gc2035.c   | 10 +++++-----
 4 files changed, 40 insertions(+), 29 deletions(-)

diff --git a/drivers/amlogic/amports/encoder.c b/drivers/amlogic/amports/encoder.c
index cceefa250945..84b8da903783 100755
--- a/drivers/amlogic/amports/encoder.c
+++ b/drivers/amlogic/amports/encoder.c
@@ -1529,9 +1529,14 @@ static s32 reload_mc(void)
 	
     udelay(10);
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8M2
-    WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x32);
-    dblk_fix_flag = (p==mix_sw_mc_hdec_dblk);
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+    if(IS_MESON_M8M2_CPU){
+        WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x32);
+        dblk_fix_flag = (p==mix_sw_mc_hdec_dblk);
+    }else{
+        WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x2);
+        dblk_fix_flag = false;
+    }
 #else
     WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x2);
     dblk_fix_flag = false;
@@ -1581,11 +1586,14 @@ static s32 avc_init(void)
         default:
             break;
     }
-#endif
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8M2
-    WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x32);
-    dblk_fix_flag = (p==mix_sw_mc_hdec_dblk);
+    if(IS_MESON_M8M2_CPU){
+        WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x32);
+        dblk_fix_flag = (p==mix_sw_mc_hdec_dblk);
+    }else{
+        WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x2);
+        dblk_fix_flag = false;
+    }
 #else
     WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x2);
     dblk_fix_flag = false;
@@ -1948,11 +1956,14 @@ static u32 amvenc_avc_light_reset(unsigned value)
         default:
             break;
     }
-#endif
 
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8M2
-    WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x32);
-    dblk_fix_flag = (p==mix_sw_mc_hdec_dblk);
+    if(IS_MESON_M8M2_CPU){
+        WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x32);
+        dblk_fix_flag = (p==mix_sw_mc_hdec_dblk);
+    }else{
+        WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x2);
+        dblk_fix_flag = false;
+    }
 #else
     WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x2);
     dblk_fix_flag = false;
diff --git a/drivers/amlogic/amports/jpegenc.c b/drivers/amlogic/amports/jpegenc.c
index 3e03618fcabf..a5f2f3064ae0 100755
--- a/drivers/amlogic/amports/jpegenc.c
+++ b/drivers/amlogic/amports/jpegenc.c
@@ -1428,11 +1428,11 @@ static s32 jpegenc_init(void)
     int r;   
     jpegenc_poweron();
     jpegenc_canvas_init();
-#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8M2
-    WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x32);
-#else
-    WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x2);
-#endif
+
+    if(IS_MESON_M8M2_CPU)
+        WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x32);
+    else
+        WRITE_HREG(HCODEC_ASSIST_MMC_CTRL1,0x2);
     debug_level(1,"start to load microcode\n");
     if (jpegenc_loadmc(jpeg_encoder_mc) < 0) {
         //amvdec_disable();
@@ -1750,7 +1750,7 @@ int uninit_jpegenc_device(void)
     return 0;
 }
 
-static struct resource memobj;
+static struct resource memobj;
 static int jpegenc_probe(struct platform_device *pdev)
 {
     struct resource *mem;
@@ -1762,8 +1762,8 @@ static int jpegenc_probe(struct platform_device *pdev)
     if (!(mem = platform_get_resource(pdev, IORESOURCE_MEM, 0))) {
         debug_level(1, "jpegenc memory resource undefined.\n");
         return -EFAULT;
-    }
-#else
+    }
+#else
     mem = &memobj;
     idx = find_reserve_block(pdev->dev.of_node->name,0);
     if(idx < 0){
diff --git a/drivers/amlogic/camera/bf3720.c b/drivers/amlogic/camera/bf3720.c
index f5a6ae40903e..b851d3f7febd 100755
--- a/drivers/amlogic/camera/bf3720.c
+++ b/drivers/amlogic/camera/bf3720.c
@@ -2128,11 +2128,11 @@ static int vidioc_querybuf(struct file *file, void *priv, struct v4l2_buffer *p)
 
         int ret = videobuf_querybuf(&fh->vb_vidq, p);
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
-	if(ret == 0){
-		p->reserved  = convert_canvas_index(fh->fmt->fourcc, BF3720_RES0_CANVAS_INDEX + p->index*3);
-	}else{
-		p->reserved = 0;
-	}
+        if(ret == 0){
+        	p->reserved  = convert_canvas_index(fh->fmt->fourcc, BF3720_RES0_CANVAS_INDEX + p->index*3);
+        }else{
+        	p->reserved = 0;
+        }
 #endif
         return ret;
 }
diff --git a/drivers/amlogic/camera/gc2035.c b/drivers/amlogic/camera/gc2035.c
index 08bc3a1cd327..616967a2ab23 100755
--- a/drivers/amlogic/camera/gc2035.c
+++ b/drivers/amlogic/camera/gc2035.c
@@ -3273,11 +3273,11 @@ static int vidioc_querybuf(struct file *file, void *priv, struct v4l2_buffer *p)
 
         int ret = videobuf_querybuf(&fh->vb_vidq, p);
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
-	if(ret == 0){
-		p->reserved  = convert_canvas_index(fh->fmt->fourcc, GC2035_RES0_CANVAS_INDEX + p->index*3);
-	}else{
-		p->reserved = 0;
-	}
+        if(ret == 0){
+                p->reserved  = convert_canvas_index(fh->fmt->fourcc, GC2035_RES0_CANVAS_INDEX + p->index*3);
+        }else{
+                p->reserved = 0;
+        }
 #endif
         return ret;
 }
-- 
2.19.0

