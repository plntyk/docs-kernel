From fd9178aca1c618670e854e9a5453307e0ce795a0 Mon Sep 17 00:00:00 2001
From: timyao <tim.yao@amlogic.com>
Date: Fri, 25 Jul 2014 12:19:26 -0700
Subject: [PATCH 4635/5965] PD #94691. Add H.264 video decoder dynamic clock
 adjustment on M8 baby and M8m2.

Change-Id: If6bbaf3654389c9c8ad4bf611cebf96e0daaae61
---
 drivers/amlogic/amports/m6/vdec_clk.c    | 2 +-
 drivers/amlogic/amports/m6tv/vdec_clk.c  | 2 +-
 drivers/amlogic/amports/m6tvd/vdec_clk.c | 2 +-
 drivers/amlogic/amports/m8/vdec_clk.c    | 2 +-
 drivers/amlogic/amports/m8b/vdec_clk.c   | 6 +++---
 drivers/amlogic/amports/m8m2/vdec_clk.c  | 3 ++-
 drivers/amlogic/amports/vdec.c           | 2 +-
 drivers/amlogic/amports/vh264.c          | 4 +++-
 8 files changed, 13 insertions(+), 10 deletions(-)

diff --git a/drivers/amlogic/amports/m6/vdec_clk.c b/drivers/amlogic/amports/m6/vdec_clk.c
index 748a05d26f7c..2e1122eabaa5 100644
--- a/drivers/amlogic/amports/m6/vdec_clk.c
+++ b/drivers/amlogic/amports/m6/vdec_clk.c
@@ -69,7 +69,7 @@ void vdec_clock_hi_enable(void)
 
 int vdec_clock_level(vdec_type_t core)
 {
-    if (core < VDEC_MAX)
+    if (core >= VDEC_MAX)
         return 0; 
 
     return clock_level[core];
diff --git a/drivers/amlogic/amports/m6tv/vdec_clk.c b/drivers/amlogic/amports/m6tv/vdec_clk.c
index 8ea4bd4a97b8..7574955cab31 100644
--- a/drivers/amlogic/amports/m6tv/vdec_clk.c
+++ b/drivers/amlogic/amports/m6tv/vdec_clk.c
@@ -72,7 +72,7 @@ void vdec_clock_hi_enable(void)
 
 int vdec_clock_level(vdec_type_t core)
 {
-    if (core < VDEC_MAX)
+    if (core >= VDEC_MAX)
         return 0; 
 
     return clock_level[core];
diff --git a/drivers/amlogic/amports/m6tvd/vdec_clk.c b/drivers/amlogic/amports/m6tvd/vdec_clk.c
index 74d5350002da..78be44e0101d 100644
--- a/drivers/amlogic/amports/m6tvd/vdec_clk.c
+++ b/drivers/amlogic/amports/m6tvd/vdec_clk.c
@@ -142,7 +142,7 @@ void hcodec_clock_off(void)
 
 int vdec_clock_level(vdec_type_t core)
 {
-    if (core < VDEC_MAX)
+    if (core >= VDEC_MAX)
         return 0; 
 
     return clock_level[core];
diff --git a/drivers/amlogic/amports/m8/vdec_clk.c b/drivers/amlogic/amports/m8/vdec_clk.c
index 21fa661568a5..72fecc351bc9 100644
--- a/drivers/amlogic/amports/m8/vdec_clk.c
+++ b/drivers/amlogic/amports/m8/vdec_clk.c
@@ -227,7 +227,7 @@ void hevc_clock_prepare_switch(void)
 
 int vdec_clock_level(vdec_type_t core)
 {
-    if (core < VDEC_MAX)
+    if (core >= VDEC_MAX)
         return 0; 
 
     return clock_level[core];
diff --git a/drivers/amlogic/amports/m8b/vdec_clk.c b/drivers/amlogic/amports/m8b/vdec_clk.c
index fdb2fbb79c1d..2ff032d84b10 100755
--- a/drivers/amlogic/amports/m8b/vdec_clk.c
+++ b/drivers/amlogic/amports/m8b/vdec_clk.c
@@ -105,7 +105,7 @@ static int clock_level[VDEC_MAX+1];
 void vdec_clock_enable(void)
 {
     VDEC1_CLOCK_OFF();
-    VDEC1_255M();
+    VDEC1_182M();
     VDEC1_CLOCK_ON();
     clock_level[VDEC_1] = 0;
 }
@@ -131,7 +131,7 @@ void vdec_clock_off(void)
 void vdec2_clock_enable(void)
 {
     VDEC2_CLOCK_OFF();
-    VDEC2_255M();
+    VDEC2_182M();
     VDEC2_CLOCK_ON();
     clock_level[VDEC_2] = 0;
 }
@@ -213,7 +213,7 @@ void hevc_clock_prepare_switch(void)
 
 int vdec_clock_level(vdec_type_t core)
 {
-    if (core < VDEC_MAX)
+    if (core >= VDEC_MAX)
         return 0; 
 
     return clock_level[core];
diff --git a/drivers/amlogic/amports/m8m2/vdec_clk.c b/drivers/amlogic/amports/m8m2/vdec_clk.c
index fb2726b98deb..7c01fc670d07 100755
--- a/drivers/amlogic/amports/m8m2/vdec_clk.c
+++ b/drivers/amlogic/amports/m8m2/vdec_clk.c
@@ -180,8 +180,9 @@ void hevc_clock_prepare_switch(void)
 
 int vdec_clock_level(vdec_type_t core)
 {
-    if (core < VDEC_MAX)
+    if (core >= VDEC_MAX) {
         return 0; 
+    }
 
     return clock_level[core];
 }
diff --git a/drivers/amlogic/amports/vdec.c b/drivers/amlogic/amports/vdec.c
index 7187cf631876..62e15d4cbe9a 100755
--- a/drivers/amlogic/amports/vdec.c
+++ b/drivers/amlogic/amports/vdec.c
@@ -627,7 +627,7 @@ static ssize_t clock_level_show(struct class *class, struct class_attribute *att
 {
     char *pbuf = buf;
 
-    pbuf += sprintf(pbuf, "%d %d\n", vdec_clock_level(VDEC_1), vdec_clock_level(VDEC_2));
+    pbuf += sprintf(pbuf, "%d\n", vdec_clock_level(VDEC_1));
 
     if (HAS_VDEC2) {
         pbuf += sprintf(pbuf, "%d\n", vdec_clock_level(VDEC_2));
diff --git a/drivers/amlogic/amports/vh264.c b/drivers/amlogic/amports/vh264.c
index 6b57564a6b78..46f1f3cd15b7 100755
--- a/drivers/amlogic/amports/vh264.c
+++ b/drivers/amlogic/amports/vh264.c
@@ -343,7 +343,9 @@ static inline int fifo_level(void)
 
 static void vdec_dfs(void)
 {
-    ///vdec_power_mode((fifo_level() > DFS_HIGH_THEASHOLD) ? 0 : 1);
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8B
+    vdec_power_mode((fifo_level() > DFS_HIGH_THEASHOLD) ? 0 : 1);
+#endif
 }
 
 void spec_set_canvas(buffer_spec_t *spec,
-- 
2.19.0

