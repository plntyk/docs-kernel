From 1006fff72158d5289a78e5fa7b202a106fa3ab16 Mon Sep 17 00:00:00 2001
From: Zongdong Jiao <zongdong.jiao@amlogic.com>
Date: Sat, 2 Aug 2014 16:59:15 +0800
Subject: [PATCH 4643/5965] PD #95168: display: prevent hpll unlock

---
 drivers/amlogic/display/vout/enc_clk_config.c | 26 ++++++++++++++-----
 1 file changed, 20 insertions(+), 6 deletions(-)

diff --git a/drivers/amlogic/display/vout/enc_clk_config.c b/drivers/amlogic/display/vout/enc_clk_config.c
index 5e5ded7951cc..09bbaca437ae 100755
--- a/drivers/amlogic/display/vout/enc_clk_config.c
+++ b/drivers/amlogic/display/vout/enc_clk_config.c
@@ -30,6 +30,24 @@
         while(i--);     \
     }while(0)
 
+#define WAIT_FOR_PLL_LOCKED(reg)                        \
+    do {                                                \
+        unsigned int st = 0, cnt = 10;                  \
+        while(cnt --) {                                 \
+            msleep_interruptible(10);                   \
+            st = !!(aml_read_reg32(reg) & (1 << 31));   \
+            if(st) {                                    \
+                break;                                  \
+            }                                           \
+            else {  /* reset pll */                     \
+                aml_set_reg32_bits(reg, 0x3, 29, 2);    \
+                aml_set_reg32_bits(reg, 0x2, 29, 2);    \
+            }                                           \
+        }                                               \
+        if(cnt < 9)                                     \
+            printk(KERN_CRIT "pll[0x%x] reset %d times\n", reg, 9 - cnt);\
+    }while(0);
+
 static void set_hpll_clk_out(unsigned clk)
 {
     printk("config HPLL\n");
@@ -124,9 +142,7 @@ static void set_hpll_clk_out(unsigned clk)
             aml_write_reg32(P_HHI_VID_PLL_CNTL5, 0x12385);
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x6001042d);
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x4001042d);
-            while(!(aml_read_reg32(P_HHI_VID_PLL_CNTL) & (1 << 31))) {
-                ;
-            }
+            WAIT_FOR_PLL_LOCKED(P_HHI_VID_PLL_CNTL);
             break;
         case 1488:
             aml_write_reg32(P_HHI_VID_PLL_CNTL2, 0x69c8ce00);
@@ -135,9 +151,7 @@ static void set_hpll_clk_out(unsigned clk)
             aml_write_reg32(P_HHI_VID_PLL_CNTL5, 0x12286);
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x6000043d);
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x4000043d);
-            while(!(aml_read_reg32(P_HHI_VID_PLL_CNTL) & (1 << 31))) {
-                ;
-            }
+            WAIT_FOR_PLL_LOCKED(P_HHI_VID_PLL_CNTL);
             break;
         case 1080:
             aml_write_reg32(P_HHI_VID_PLL_CNTL,  0x6000042d);
-- 
2.19.0

