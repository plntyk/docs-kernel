From 1fe845284bdde1791bc46c09d9f86bf6703ab6c9 Mon Sep 17 00:00:00 2001
From: "bo.yang" <bo.yang@amlogic.com>
Date: Mon, 4 Aug 2014 17:36:38 +0800
Subject: [PATCH 4649/5965] m6tvc: add cpu version functions

add functions for cpu version:
        meson_cpu_version_init()
        get_meson_cpu_version

read register on m6tvc ref board(H15):
        ASSIST_HW_REV  0x1f53	= 0x18
        METAL_REVISION 0x206a   = 0x11111111
---
 .../arm/mach-meson6tv/board-meson6tv-common.c |  3 ++
 arch/arm/mach-meson6tv/cpu.c                  | 52 ++++++++++++++++++-
 2 files changed, 53 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-meson6tv/board-meson6tv-common.c b/arch/arm/mach-meson6tv/board-meson6tv-common.c
index 9c8707c304ee..425b239417f6 100755
--- a/arch/arm/mach-meson6tv/board-meson6tv-common.c
+++ b/arch/arm/mach-meson6tv/board-meson6tv-common.c
@@ -32,6 +32,7 @@
 #include <mach/io.h>
 #include <linux/io.h>
 #include <plat/lm.h>
+#include <plat/cpu.h>
 #ifdef CONFIG_SMP
 #include <mach/smp.h>
 #endif
@@ -61,6 +62,8 @@ static void __init meson6tv_map_io(void)
 
 static void __init meson6tv_init_early(void)
 {
+
+	meson_cpu_version_init();
 	/*
 	 * Mali or some USB devices allocate their coherent buffers from atomic
 	 * context. Increase size of atomic coherent pool to make sure such
diff --git a/arch/arm/mach-meson6tv/cpu.c b/arch/arm/mach-meson6tv/cpu.c
index 1dedc480c802..b88638532fde 100755
--- a/arch/arm/mach-meson6tv/cpu.c
+++ b/arch/arm/mach-meson6tv/cpu.c
@@ -21,12 +21,16 @@
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/init.h>
-#include <plat/io.h>
-#include <plat/regops.h>
 #include <linux/printk.h>
 #include <linux/string.h>
 #include <asm/hardware/cache-l2x0.h>
 
+#include <plat/io.h>
+#include <plat/regops.h>
+#include <plat/cpu.h>
+#include <mach/register.h>
+#include <mach/io.h>
+
 extern void meson6_l2x0_init(void __iomem *);
 
 #ifdef  CONFIG_MESON_L2CC_OPTIMIZE
@@ -70,3 +74,47 @@ static int __init maliversion(char *str)
 }
 __setup("mali_version=", maliversion);
 
+
+static int meson_cpu_version[MESON_CPU_VERSION_LVL_MAX+1];
+
+int __init meson_cpu_version_init(void)
+{
+	unsigned int version,ver;
+	unsigned int  *version_map;
+
+	meson_cpu_version[MESON_CPU_VERSION_LVL_MAJOR] =
+		aml_read_reg32(P_ASSIST_HW_REV);
+
+	version_map = (unsigned int *)IO_BOOTROM_BASE;
+	meson_cpu_version[MESON_CPU_VERSION_LVL_MISC] = version_map[1];
+
+	version = aml_read_reg32(P_METAL_REVISION);
+	switch (version) {
+		case 0x11111111:
+			ver = 0xA;
+			break;
+		default:/*changed?*/
+			ver = 0xB;
+			break;
+	}
+	meson_cpu_version[MESON_CPU_VERSION_LVL_MINOR] = ver;
+
+	printk(KERN_INFO "Meson chip version = Rev%X (%X:%X - %X:%X)\n", ver,
+		meson_cpu_version[MESON_CPU_VERSION_LVL_MAJOR],
+		meson_cpu_version[MESON_CPU_VERSION_LVL_MINOR],
+		meson_cpu_version[MESON_CPU_VERSION_LVL_PACK],
+		meson_cpu_version[MESON_CPU_VERSION_LVL_MISC]
+		);
+
+	return 0;
+}
+EXPORT_SYMBOL(meson_cpu_version_init);
+
+int get_meson_cpu_version(int level)
+{
+	if(level >= 0 && level <= MESON_CPU_VERSION_LVL_MAX)
+		return meson_cpu_version[level];
+	return 0;
+}
+EXPORT_SYMBOL(get_meson_cpu_version);
+
-- 
2.19.0

