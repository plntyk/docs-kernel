From db086d646c43e62fdab8f7cd359866a545c0baca Mon Sep 17 00:00:00 2001
From: Rain Zhang-CA <rainzhang@wonton.(none)>
Date: Thu, 7 Aug 2014 18:02:43 -0700
Subject: [PATCH 4680/5965] h265, trigger error handling more strictly

Change-Id: I6f10b013a93a4360ad6262c9ca995af6baf97d40
---
 drivers/amlogic/amports/vh265.c | 38 ++++++++++++++++++---------------
 1 file changed, 21 insertions(+), 17 deletions(-)

diff --git a/drivers/amlogic/amports/vh265.c b/drivers/amlogic/amports/vh265.c
index 43fd5ff50a85..d8e653ee3d5a 100755
--- a/drivers/amlogic/amports/vh265.c
+++ b/drivers/amlogic/amports/vh265.c
@@ -3324,24 +3324,28 @@ static void vh265_put_timer_func(unsigned long arg)
     if (empty_flag == 0){
         // decoder has input
         if((debug&H265_DEBUG_DIS_LOC_ERROR_PROC)==0){
-            if(gHevc.error_flag==0){
-                error_watchdog_count++;
-                if (error_watchdog_count == error_handle_threshold) {    
-                    printk("H265 decoder error local reset.\n");
-                    gHevc.error_flag = 1;
-                    error_watchdog_count = 0;
-                    error_skip_nal_watchdog_count = 0;
-                    error_system_watchdog_count++;
-                    WRITE_VREG(HEVC_ASSIST_MBOX1_IRQ_REG, 0x1); 
+            if((state == RECEIVER_INACTIVE) &&                       // receiver has no buffer to recycle
+                (kfifo_is_empty(&display_q))                        // no buffer in display queue
+                ){
+                if(gHevc.error_flag==0){
+                    error_watchdog_count++;
+                    if (error_watchdog_count == error_handle_threshold) {    
+                        printk("H265 decoder error local reset.\n");
+                        gHevc.error_flag = 1;
+                        error_watchdog_count = 0;
+                        error_skip_nal_watchdog_count = 0;
+                        error_system_watchdog_count++;
+                        WRITE_VREG(HEVC_ASSIST_MBOX1_IRQ_REG, 0x1); 
+                    }
                 }
-            }
-            else if(gHevc.error_flag == 2){
-                error_skip_nal_watchdog_count++;
-                if(error_skip_nal_watchdog_count==error_handle_nal_skip_threshold){
-                    gHevc.error_flag = 3;
-                    error_watchdog_count = 0;
-                    error_skip_nal_watchdog_count = 0;
-                    WRITE_VREG(HEVC_ASSIST_MBOX1_IRQ_REG, 0x1); 
+                else if(gHevc.error_flag == 2){
+                    error_skip_nal_watchdog_count++;
+                    if(error_skip_nal_watchdog_count==error_handle_nal_skip_threshold){
+                        gHevc.error_flag = 3;
+                        error_watchdog_count = 0;
+                        error_skip_nal_watchdog_count = 0;
+                        WRITE_VREG(HEVC_ASSIST_MBOX1_IRQ_REG, 0x1); 
+                    }
                 }
             }
         }
-- 
2.19.0

