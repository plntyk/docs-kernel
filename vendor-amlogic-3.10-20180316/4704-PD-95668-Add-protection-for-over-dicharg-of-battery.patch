From 6d9515bbbcf6d0ace80eafeeb9a9983a63f42833 Mon Sep 17 00:00:00 2001
From: "tao.zeng" <tao.zeng@amlogic.com>
Date: Fri, 8 Aug 2014 10:57:54 +0800
Subject: [PATCH 4704/5965] PD #95668: Add protection for over-dicharg of
 battery

Report aconline/usbonline to 0 when extern power is not strong enough and
battery rest_vol is less or equal than 0. This will force android OS power
off system.

Change-Id: Ic3fa1740db4848d6ba1e5cdf618519a15eddf2ac
---
 drivers/amlogic/power/aml_pmu/aml1218-sply.c | 24 ++++++++++++++++----
 1 file changed, 20 insertions(+), 4 deletions(-)

diff --git a/drivers/amlogic/power/aml_pmu/aml1218-sply.c b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
index 1b18e84a9bbd..258412c33a09 100755
--- a/drivers/amlogic/power/aml_pmu/aml1218-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
@@ -789,11 +789,19 @@ static int aml1218_ac_get_property(struct power_supply *psy,
         break;
 
     case POWER_SUPPLY_PROP_PRESENT:
-        val->intval = charger->dcin_valid;
+        if (power_protection) {
+            val->intval = 0;                    // force to 0 when over discharge 
+        } else {
+            val->intval = charger->dcin_valid;
+        }
         break;
 
     case POWER_SUPPLY_PROP_ONLINE:
-        val->intval = charger->dcin_valid;
+        if (power_protection) {
+            val->intval = 0;                    // force to 0 when over discharge 
+        } else {
+            val->intval = charger->dcin_valid;
+        }
         break;
 
     case POWER_SUPPLY_PROP_VOLTAGE_NOW:
@@ -827,11 +835,19 @@ static int aml1218_usb_get_property(struct power_supply *psy,
         break;
 
     case POWER_SUPPLY_PROP_PRESENT:
-        val->intval = charger->usb_valid;
+        if (power_protection) {
+            val->intval = 0;                                        // force to 0 for over-discharging protection 
+        } else {
+            val->intval = charger->usb_valid;
+        }
         break;
 
     case POWER_SUPPLY_PROP_ONLINE:
-        val->intval = charger->usb_valid; 
+        if (power_protection) {
+            val->intval = 0;                                        // force to 0 for over-discharging protection 
+        } else {
+            val->intval = charger->usb_valid;
+        }
         break;
 
     case POWER_SUPPLY_PROP_VOLTAGE_NOW:
-- 
2.19.0

