From 86ff8b7bf40bb7d6b5fc3f1fc69ef5fac1405561 Mon Sep 17 00:00:00 2001
From: "alex.cao" <alex.cao@droid01-sz.amlogic.com>
Date: Tue, 12 Aug 2014 19:17:55 +0800
Subject: [PATCH 4712/5965] pd #95573:Enable video rdma_isr and move vsync rdma
 config to rdma_isr

Change-Id: Icc166207ed1d57cfaeb1007abc8a7f6478c55b62
---
 drivers/amlogic/amports/rdma.c       | 23 +++++++++++++++++++++++
 drivers/amlogic/display/osd/osd_hw.c |  7 +------
 2 files changed, 24 insertions(+), 6 deletions(-)

diff --git a/drivers/amlogic/amports/rdma.c b/drivers/amlogic/amports/rdma.c
index 3a42bb024462..8b5883da09d8 100755
--- a/drivers/amlogic/amports/rdma.c
+++ b/drivers/amlogic/amports/rdma.c
@@ -41,6 +41,8 @@
 #include <linux/clk.h>
 #include <linux/amlogic/logo/logo.h>
 
+#define CONFIG_RDMA_IN_RDMAIRQ
+
 #ifndef MESON_CPU_TYPE_MESON8
 #define MESON_CPU_TYPE_MESON8 (MESON_CPU_TYPE_MESON6TV+1)
 #endif
@@ -288,6 +290,11 @@ void vsync_rdma_config(void)
     }
     
     if(enable_ == 1){
+#ifdef CONFIG_RDMA_IN_RDMAIRQ
+        if(pre_enable_!=enable_){
+            rdma_config(1); //triggered by next vsync    
+        }
+#else        
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
         rdma_config(1); //triggered by next vsync    
         vsync_cfg_count++;
@@ -301,6 +308,7 @@ void vsync_rdma_config(void)
             rdma_isr_cfg_count++;
         }
 #endif        
+#endif
     }
     else if( enable_ == 2){
         rdma_config(0); //manually in cur vsync
@@ -334,6 +342,13 @@ EXPORT_SYMBOL(vsync_rdma_config_pre);
 
 static irqreturn_t rdma_isr(int irq, void *dev_id)
 {
+#ifdef CONFIG_RDMA_IN_RDMAIRQ
+     int enable_ = ((enable&enable_mask)|(enable_mask>>8))&0xff;
+     if(enable_ == 1){
+        rdma_config(1); //triggered by next vsync    
+     }
+    irq_count++;
+#else
     int enc_line;
     u32 data32;
 
@@ -370,6 +385,7 @@ static irqreturn_t rdma_isr(int irq, void *dev_id)
     if(enc_line > rdma_done_line_max){
         rdma_done_line_max = enc_line;
     }
+#endif    
     return IRQ_HANDLED;
 }
 
@@ -415,11 +431,18 @@ static int __init rmda_early_init(void)
     rmda_rd_table = kmalloc(RDMA_TABLE_SIZE, GFP_KERNEL);
 #endif
 
+#ifdef CONFIG_RDMA_IN_RDMAIRQ
+    request_irq(INT_RDMA, &rdma_isr,
+                    IRQF_SHARED, "rdma",
+                    (void *)"rdma");
+
+#else
 #if MESON_CPU_TYPE < MESON_CPU_TYPE_MESON8
     request_irq(INT_RDMA, &rdma_isr,
                     IRQF_SHARED, "rdma",
                     (void *)"rdma");
 #endif    
+#endif
     //printk("%s phy_addr %x remap %x table %x\n", __func__, rmda_table_phy_addr, rmda_table_addr_remap, rmda_table); 
     
     return 0;        
diff --git a/drivers/amlogic/display/osd/osd_hw.c b/drivers/amlogic/display/osd/osd_hw.c
index 9b3daa281f3a..b6af907380ed 100755
--- a/drivers/amlogic/display/osd/osd_hw.c
+++ b/drivers/amlogic/display/osd/osd_hw.c
@@ -2680,14 +2680,9 @@ void osd_init_hw(u32  logo_loaded)
 #endif
 
 #ifdef CONFIG_VSYNC_RDMA
-#if MESON_CPU_TYPE < MESON_CPU_TYPE_MESON8
-	if (request_irq(INT_RDMA, &osd_rdma_isr,
-                    IRQF_SHARED, "osd_rdma", (void *)"osd_rdma"))
 
-#else
 	if (request_irq(INT_RDMA, &osd_rdma_isr,
-                    IRQF_DISABLED, "osd_rdma", (void *)"osd_rdma"))
-#endif
+                    IRQF_SHARED, "osd_rdma", (void *)"osd_rdma"))
 	{
 		amlog_level(LOG_LEVEL_HIGH,"can't request irq for rdma\r\n");
 	}
-- 
2.19.0

