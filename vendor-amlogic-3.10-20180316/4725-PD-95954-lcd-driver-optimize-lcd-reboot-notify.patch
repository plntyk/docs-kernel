From fdb8672abf2cdaeb5f213d20c95dd35e9659d7e9 Mon Sep 17 00:00:00 2001
From: Evoke Zhang <evoke.zhang@amlogic.com>
Date: Thu, 14 Aug 2014 18:02:28 +0800
Subject: [PATCH 4725/5965] PD#95954: lcd driver: optimize lcd reboot notify.

lcd_reboot_notifier will return if the lcd driver was already disabled

Change-Id: Ie7c009d0495763b3b01de9d1c70794065924e645
---
 arch/arm/mach-meson6/lcd/lcd_config.c  | 14 +++++++++-
 arch/arm/mach-meson8/lcd/edp_drv.c     | 36 ++++++++++++++++++++++++--
 arch/arm/mach-meson8/lcd/lcd_config.c  |  5 +++-
 arch/arm/mach-meson8b/lcd/lcd_config.c |  5 +++-
 drivers/amlogic/display/vout/lcdoutc.c |  7 +++--
 5 files changed, 60 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-meson6/lcd/lcd_config.c b/arch/arm/mach-meson6/lcd/lcd_config.c
index 5cf14071ae28..9c7fe749c309 100755
--- a/arch/arm/mach-meson6/lcd/lcd_config.c
+++ b/arch/arm/mach-meson6/lcd/lcd_config.c
@@ -1906,7 +1906,19 @@ static void lcd_config_assign(Lcd_Config_t *pConf)
     pConf->lcd_power_ctrl.ports_ctrl = lcd_ports_ctrl;
 
     pConf->lcd_misc_ctrl.vpp_sel = 0;
-    pConf->lcd_misc_ctrl.lcd_status = 1;
+    if (pConf->lcd_basic.lcd_type == LCD_DIGITAL_TTL) {
+        if (READ_LCD_REG(ENCT_VIDEO_EN) & 1)
+            pConf->lcd_misc_ctrl.lcd_status = 1;
+        else
+            pConf->lcd_misc_ctrl.lcd_status = 0;
+
+    }
+    else {
+        if (READ_LCD_REG(ENCL_VIDEO_EN) & 1)
+            pConf->lcd_misc_ctrl.lcd_status = 1;
+        else
+            pConf->lcd_misc_ctrl.lcd_status = 0;
+    }
     pConf->lcd_misc_ctrl.module_enable = lcd_module_enable;
     pConf->lcd_misc_ctrl.module_disable = lcd_module_disable;
     pConf->lcd_misc_ctrl.lcd_test = lcd_test;
diff --git a/arch/arm/mach-meson8/lcd/edp_drv.c b/arch/arm/mach-meson8/lcd/edp_drv.c
index 9d8abc4f7fe1..d17bd59e17fd 100755
--- a/arch/arm/mach-meson8/lcd/edp_drv.c
+++ b/arch/arm/mach-meson8/lcd/edp_drv.c
@@ -362,6 +362,14 @@ static char *dptx_explain_reply_code(int status)
 	}
 }
 
+static int trdp_AUX_check_status(void)
+{
+	if (READ_DPTX_REG(EDP_TX_TRANSMITTER_OUTPUT_ENABLE) & 1)
+		return 0;
+	else
+		return 1;
+}
+
 #define EDP_AUX_OPERATION_RETRY
 // Read EDPTX
 // Read N-bytes from Aux-Channel -- upto 16bytes
@@ -375,6 +383,12 @@ static int trdp_AUXRead(unsigned long address, unsigned long byte_count, unsigne
 	unsigned defer_count = 0;
 	unsigned timeout_count = 0;
 	
+	status = trdp_AUX_check_status();
+	if (status) {
+		printk("AUXRead error: edp transmitter disabled\n");
+		return (int)status;
+	}
+	
 	while ((reply_state == VAL_EDP_TX_AUX_OPERATION_TIMEOUT) && (defer_count < VAL_EDP_TX_AUX_MAX_DEFER_COUNT) && (timeout_count < VAL_EDP_TX_AUX_MAX_TIMEOUT_COUNT)) {
 		//check for transmitter ready state
 		do {
@@ -441,6 +455,12 @@ static int trdp_AUXRead(unsigned long address, unsigned long byte_count, unsigne
     int i;
     unsigned status;
 	
+	status = trdp_AUX_check_status();
+	if (status) {
+		printk("AUXRead error: edp transmitter disabled\n");
+		return (int)status;
+	}
+	
     //check for transmitter ready state
 	do {
 		status = READ_DPTX_REG(EDP_TX_AUX_STATE);
@@ -498,6 +518,12 @@ static int trdp_AUXWrite(unsigned long address, unsigned long byte_count, unsign
 	unsigned defer_count = 0;
 	unsigned timeout_count = 0;
 	
+	status = trdp_AUX_check_status();
+	if (status) {
+		printk("AUXWrite error: edp transmitter disabled\n");
+		return (int)status;
+	}
+	
 	while ((reply_state == VAL_EDP_TX_AUX_OPERATION_TIMEOUT) && (defer_count < VAL_EDP_TX_AUX_MAX_DEFER_COUNT) && (timeout_count < VAL_EDP_TX_AUX_MAX_TIMEOUT_COUNT)) {
 		//check for transmitter ready state
 		do {
@@ -559,6 +585,12 @@ static int trdp_AUXWrite(unsigned long address, unsigned long byte_count, unsign
     int i;
 	unsigned status;
 
+	status = trdp_AUX_check_status();
+	if (status) {
+		printk("AUXWrite error: edp transmitter disabled\n");
+		return (int)status;
+	}
+	
 	//check for transmitter ready state
 	do {
 		status = READ_DPTX_REG(EDP_TX_AUX_STATE);
@@ -1782,9 +1814,9 @@ int dplpm_link_off(void)
     int status = 0;
     unsigned char aux_data;
 
-    lcd_print("..... Power down sink link .....\n");
+    lcd_print("..... Power down edp sink link .....\n");
     aux_data = 2;	//power down mode
-    //status = trdp_AUXWrite(EDP_DPCD_SET_POWER, 1, &aux_data);
+    status = trdp_AUXWrite(EDP_DPCD_SET_POWER, 1, &aux_data);
 
     return status;
 }
diff --git a/arch/arm/mach-meson8/lcd/lcd_config.c b/arch/arm/mach-meson8/lcd/lcd_config.c
index c1bebf32de04..d7040533d7cf 100755
--- a/arch/arm/mach-meson8/lcd/lcd_config.c
+++ b/arch/arm/mach-meson8/lcd/lcd_config.c
@@ -1856,7 +1856,10 @@ static void lcd_config_assign(Lcd_Config_t *pConf)
     pConf->lcd_power_ctrl.power_ctrl_video = lcd_power_ctrl_video;
 
     pConf->lcd_misc_ctrl.vpp_sel = 0;
-    pConf->lcd_misc_ctrl.lcd_status = 1;
+    if (READ_LCD_REG(ENCL_VIDEO_EN) & 1)
+        pConf->lcd_misc_ctrl.lcd_status = 1;
+    else
+        pConf->lcd_misc_ctrl.lcd_status = 0;
     pConf->lcd_misc_ctrl.module_enable = lcd_module_enable;
     pConf->lcd_misc_ctrl.module_disable = lcd_module_disable;
     pConf->lcd_misc_ctrl.lcd_test = lcd_test;
diff --git a/arch/arm/mach-meson8b/lcd/lcd_config.c b/arch/arm/mach-meson8b/lcd/lcd_config.c
index 5fc49f06ad73..c3a8478ab033 100755
--- a/arch/arm/mach-meson8b/lcd/lcd_config.c
+++ b/arch/arm/mach-meson8b/lcd/lcd_config.c
@@ -1452,7 +1452,10 @@ static void lcd_config_assign(Lcd_Config_t *pConf)
     pConf->lcd_power_ctrl.power_ctrl_video = lcd_power_ctrl_video;
 
     pConf->lcd_misc_ctrl.vpp_sel = 0;
-    pConf->lcd_misc_ctrl.lcd_status = 1;
+    if (READ_LCD_REG(ENCL_VIDEO_EN) & 1)
+        pConf->lcd_misc_ctrl.lcd_status = 1;
+    else
+        pConf->lcd_misc_ctrl.lcd_status = 0;
     pConf->lcd_misc_ctrl.module_enable = lcd_module_enable;
     pConf->lcd_misc_ctrl.module_disable = lcd_module_disable;
     pConf->lcd_misc_ctrl.lcd_test = lcd_test;
diff --git a/drivers/amlogic/display/vout/lcdoutc.c b/drivers/amlogic/display/vout/lcdoutc.c
index e25f66a9e180..8db1b6c1d2ea 100755
--- a/drivers/amlogic/display/vout/lcdoutc.c
+++ b/drivers/amlogic/display/vout/lcdoutc.c
@@ -1373,11 +1373,14 @@ static int remove_lcd_attr(void)
 
 static int lcd_reboot_notifier(struct notifier_block *nb, unsigned long state, void *cmd)
  {
-	printk("[%s]: %lu\n", __FUNCTION__, state);
+	lcd_print("[%s]: %lu\n", __FUNCTION__, state);
+	if (pDev->pConf->lcd_misc_ctrl.lcd_status == 0)
+		return NOTIFY_DONE;
+	
 	_disable_backlight();
 	_lcd_module_disable();
 
-    return NOTIFY_DONE;
+	return NOTIFY_OK;
 }
 
 static int amlogic_pmu_gpio_name_map_num(const char *name)
-- 
2.19.0

