From 7c357634d436d441379d8b6bca12e6a7cc6c85f9 Mon Sep 17 00:00:00 2001
From: "bin.liao" <bin.liao@amlogic.com>
Date: Tue, 19 Aug 2014 18:56:05 +0800
Subject: [PATCH 4728/5965] PD#96047 open ge2d_copy in default&change
 AM_PROTECT tO GE2D_KEEP_FRAME

Change-Id: Id8c7de93671beefc6639d1404a507c745b747917
---
 drivers/amlogic/amports/Kconfig        |  3 +--
 drivers/amlogic/amports/vh264.c        | 20 ++++++++++----------
 drivers/amlogic/amports/video.c        | 12 ++++++------
 include/linux/amlogic/amports/canvas.h |  2 +-
 4 files changed, 18 insertions(+), 19 deletions(-)

diff --git a/drivers/amlogic/amports/Kconfig b/drivers/amlogic/amports/Kconfig
index 6b773b1c6221..e06a0a161296 100755
--- a/drivers/amlogic/amports/Kconfig
+++ b/drivers/amlogic/amports/Kconfig
@@ -46,11 +46,10 @@ config SUPPORT_VIDEO_ON_VPP2
 	help
 	  Support displaying video on vpp2
 
-config AM_MEMPROTECT
+config GE2D_KEEP_FRAME
     bool "Amlogic Video protect video streambuf framebuf"
     default y
     depends on  AM_VIDEO
-    depends on  MESON_TRUSTZONE
     help
       Select to enable protect video streambuf framebuf.
 
diff --git a/drivers/amlogic/amports/vh264.c b/drivers/amlogic/amports/vh264.c
index 7eaf68d0ae09..f6238e3e096c 100755
--- a/drivers/amlogic/amports/vh264.c
+++ b/drivers/amlogic/amports/vh264.c
@@ -47,7 +47,7 @@
 #include "amvdec.h"
 #include "vh264_mc.h"
 
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
 #include <linux/amlogic/logo/logo.h>
 #endif
 
@@ -115,7 +115,7 @@ typedef struct {
     int y_canvas_index;
     int u_canvas_index;
     int v_canvas_index;
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
     unsigned int y_canvas_width;
     unsigned int u_canvas_width;
     unsigned int v_canvas_width;
@@ -250,7 +250,7 @@ extern u32 get_blackout_policy(void);
 
 #define DFS_HIGH_THEASHOLD 3
 
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
 static ge2d_context_t *ge2d_videoh264_context = NULL;
 
 static int ge2d_videoh264task_init()
@@ -711,7 +711,7 @@ static void vh264_set_params(void)
                 buffer_spec[i].y_canvas_index = 128 + i * 2;
                 buffer_spec[i].u_canvas_index = 128 + i * 2 + 1;
                 buffer_spec[i].v_canvas_index = 128 + i * 2 + 1;
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
                 buffer_spec[i].y_canvas_width = mb_width << 4;
                 buffer_spec[i].y_canvas_height = mb_height << 4;
                 buffer_spec[i].u_canvas_width = mb_width << 4;
@@ -751,7 +751,7 @@ static void vh264_set_params(void)
                 buffer_spec[i].y_canvas_index = 128 + i * 2;
                 buffer_spec[i].u_canvas_index = 128 + i * 2 + 1;
                 buffer_spec[i].v_canvas_index = 128 + i * 2 + 1;
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
                 buffer_spec[i].y_canvas_width = mb_width << 4;
                 buffer_spec[i].y_canvas_height = mb_height << 4;
                 buffer_spec[i].u_canvas_width = mb_width << 4;
@@ -797,7 +797,7 @@ static void vh264_set_params(void)
                 buffer_spec[i].u_addr = addr;
                 addr += mb_total << 7;
                 vfbuf_use[i] = 0;
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
                 buffer_spec[i].y_canvas_width = mb_width << 4;
                 buffer_spec[i].y_canvas_height = mb_height << 4;
                 buffer_spec[i].u_canvas_width = mb_width << 4;
@@ -1869,7 +1869,7 @@ static void stream_switching_do(struct work_struct *work)
     bool do_copy = true;
     int mb_total_num, mb_width_num, mb_height_num;
 
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
     u32 y_index, u_index,src_index,des_index,y_desindex,u_dexindex;
     canvas_t csy,csu,cyd;
 #endif
@@ -1910,7 +1910,7 @@ static void stream_switching_do(struct work_struct *work)
         if (do_copy) {
             /* construct a clone of the frame from last frame */
 #ifdef NV21
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
             printk("src yaddr[0x%x] index[%d] width[%d] heigth[%d]\n",buffer_spec[buffer_index].y_addr,buffer_spec[buffer_index].y_canvas_index,\
                 buffer_spec[buffer_index].y_canvas_width,buffer_spec[buffer_index].y_canvas_height);
             
@@ -2064,7 +2064,7 @@ static struct codec_profile_t amvdec_h264_profile = {
 static int __init amvdec_h264_driver_init_module(void)
 {
     printk("amvdec_h264 module init\n");
-#ifdef CONFIG_AM_MEMPROTECT	
+#ifdef CONFIG_GE2D_KEEP_FRAME	
     ge2d_videoh264task_init();
 #endif
     if (platform_driver_register(&amvdec_h264_driver)) {
@@ -2080,7 +2080,7 @@ static void __exit amvdec_h264_driver_remove_module(void)
     printk("amvdec_h264 module remove.\n");
 
     platform_driver_unregister(&amvdec_h264_driver);
-#ifdef CONFIG_AM_MEMPROTECT	
+#ifdef CONFIG_GE2D_KEEP_FRAME	
     ge2d_videoh264task_release();
 #endif
 }
diff --git a/drivers/amlogic/amports/video.c b/drivers/amlogic/amports/video.c
index a77f697d46be..e661ac95ea93 100755
--- a/drivers/amlogic/amports/video.c
+++ b/drivers/amlogic/amports/video.c
@@ -88,7 +88,7 @@ MODULE_AMLOG(LOG_LEVEL_ERROR, 0, LOG_DEFAULT_LEVEL_DESC, LOG_MASK_DESC);
 #include "cm_regs.h"
 #include "amcm.h"
 #include <linux/amlogic/amports/video_prot.h>
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
 #include <mach/mod_gate.h>
 #endif
@@ -677,7 +677,7 @@ static int android_clone_rate = 30;
 static int noneseamless_play_clone_rate = 5;
 #endif
 
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
 static ge2d_context_t *ge2d_video_context = NULL;
 static int ge2d_videotask_init()
 {
@@ -3076,7 +3076,7 @@ static void video_vf_unreg_provider(void)
     video_prot.video_started = 0;
     spin_unlock_irqrestore(&lock, flags);
 
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
     if (cur_dispbuf)
     {
         switch_mod_gate_by_name("ge2d", 1);
@@ -3294,7 +3294,7 @@ unsigned int vf_keep_current(void)
             Y_BUFFER_SIZE,U_BUFFER_SIZE, V_BUFFER_SIZE, cs0.width,cs0.height,cs1.width,cs1.height);
             return -1;
         }
- #ifdef CONFIG_AM_MEMPROTECT
+ #ifdef CONFIG_GE2D_KEEP_FRAME
         ge2d_keeplastframe_block();
 #else       
         if (keep_phy_addr(keep_y_addr) != canvas_get_addr(y_index) &&
@@ -5416,7 +5416,7 @@ static int __init video_init(void)
     vf_receiver_init(&video4osd_vf_recv, RECEIVER4OSD_NAME, &video4osd_vf_receiver, NULL);
     vf_reg_receiver(&video4osd_vf_recv);
 
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
    // video_frame_getmem();
     ge2d_videotask_init();
 #endif
@@ -5467,7 +5467,7 @@ static void __exit video_exit(void)
 
     class_unregister(&amvideo_class);
 
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
     ge2d_videotask_release();
 #endif
 }
diff --git a/include/linux/amlogic/amports/canvas.h b/include/linux/amlogic/amports/canvas.h
index dceb6a7d9414..08082df65f97 100755
--- a/include/linux/amlogic/amports/canvas.h
+++ b/include/linux/amlogic/amports/canvas.h
@@ -114,7 +114,7 @@ typedef struct {
 #define DEINTERLACE_CANVAS_MAX_INDEX	0x7f
 #endif
 
-#ifdef CONFIG_AM_MEMPROTECT
+#ifdef CONFIG_GE2D_KEEP_FRAME
 #define DISPLAY_CANVAS_YDUP_INDEX 0x6e
 #define DISPLAY_CANVAS_UDUP_INDEX 0x6f
 #endif
-- 
2.19.0

