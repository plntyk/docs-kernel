From 49a45ba8731e210b5b662ec0ddb6e4376f407308 Mon Sep 17 00:00:00 2001
From: "tao.dong" <tao.dong@amlogic.com>
Date: Thu, 21 Aug 2014 14:26:16 +0800
Subject: [PATCH 4732/5965] it cause bug96395:Revert "PD #93787: hdmitx: fix no
 hdmi audio output at first time & correct a error"

This reverts commit e2b3fcaa67c044f888969c509d4d121574f8d4b1.
---
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c  |  7 +------
 arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c |  2 +-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c        | 18 +++++++++---------
 sound/soc/aml/m8/aml_spdif_dai.c              |  2 +-
 4 files changed, 12 insertions(+), 17 deletions(-)

diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
index 7b8a3634e473..f4503ba49307 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
@@ -3268,7 +3268,6 @@ static int hdmitx_cntl_misc(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned
 
 static int hdmitx_get_state(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned argv)
 {
-    int st = 0;
     if(!(cmd & CMD_STAT_OFFSET))
         hdmi_print(ERR, "stat: " "hdmitx: w: invalid cmd 0x%x\n", cmd);
     else
@@ -3300,14 +3299,10 @@ static int hdmitx_get_state(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned
         break;
     case STAT_VIDEO_CLK:
         break;
-    case STAT_AUDIO_PACK:
-        st = (hdmi_rd_reg(TX_AUDIO_PACK) & 0x1);
-        return st;
-        break;
     default:
         break;
     }
-    return st;
+    return 0;
 }
 
 void HDMITX_Meson_Init(hdmitx_dev_t* hdmitx_device)
diff --git a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
index 89599c0a2f1c..018ee83f69c0 100755
--- a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
@@ -2969,7 +2969,7 @@ static int hdmitx_get_state(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned
     case STAT_VIDEO_CLK:
         break;
     case STAT_AUDIO_PACK:
-        st = (hdmi_rd_reg(TX_AUDIO_PACK) & 0x1);
+        st = (hdmi_rd_reg(STAT_AUDIO_PACK) & 0x1);
         return st;
         break;
     default:
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index b1b4388e6b4e..3da1b36adfc5 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -614,9 +614,9 @@ static ssize_t store_config(struct device * dev, struct device_attribute *attr,
         }
     }
     else if(strncmp(buf, "3d", 2)==0){
-        // First, disable HDMI TMDS
-        hdmitx_device.HWOp.CntlMisc(&hdmitx_device, MISC_TMDS_PHY_OP, TMDS_PHY_DISABLE);
-        // Second, set 3D parameters
+			// First, disable HDMI TMDS
+			hdmitx_device.HWOp.CntlMisc(&hdmitx_device, MISC_TMDS_PHY_OP, TMDS_PHY_DISABLE);
+			// Second, set 3D parameters
         if(strncmp(buf+2, "tb", 2)==0){
             hdmi_set_3d(&hdmitx_device, 6, 0);
         }
@@ -629,9 +629,9 @@ static ssize_t store_config(struct device * dev, struct device_attribute *attr,
         else if(strncmp(buf+2, "off", 3)==0){
             hdmi_set_3d(&hdmitx_device, 0xf, 0);
         }
-        // Last, delay sometime and enable HDMI TMDS
-        msleep(20);
-        hdmitx_device.HWOp.CntlMisc(&hdmitx_device, MISC_TMDS_PHY_OP, TMDS_PHY_ENABLE);
+				// Last, delay sometime and enable HDMI TMDS
+				msleep(20);
+				hdmitx_device.HWOp.CntlMisc(&hdmitx_device, MISC_TMDS_PHY_OP, TMDS_PHY_ENABLE);
     }
     else if(strncmp(buf, "audio_", 6)==0) {
         if(strncmp(buf+6, "off", 3) == 0) {
@@ -1035,7 +1035,7 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
     audio_fs_t n_rate = aud_samp_rate_map(substream->runtime->rate);
     audio_sample_size_t n_size = aud_size_map(substream->runtime->sample_bits);
 
-    //hdmitx_device.audio_param_update_flag = 0;
+    hdmitx_device.audio_param_update_flag = 1;
     hdmitx_device.audio_notify_flag = 0;
 
     if(audio_param->sample_rate != n_rate) {
@@ -1080,7 +1080,7 @@ static int hdmitx_notify_callback_a(struct notifier_block *block, unsigned long
     if((!hdmi_audio_off_flag)&&(hdmitx_device.audio_param_update_flag)) {
         if(hdmitx_device.hpd_state == 1) {     // plug-in & update audio param
             hdmitx_set_audio(&hdmitx_device, &(hdmitx_device.cur_audio_param), hdmi_ch);
-            if((hdmitx_device.audio_notify_flag == 1) || (hdmitx_device.audio_step == 1)) {
+	    if((hdmitx_device.audio_notify_flag == 1) || (hdmitx_device.audio_step == 1)) {
                 hdmitx_device.audio_notify_flag = 0;
                 hdmitx_device.audio_step = 0;
 #ifndef CONFIG_AML_HDMI_TX_HDCP
@@ -1387,7 +1387,7 @@ static int get_dt_pwr_init_data(struct device_node *np, struct hdmi_pwr_ctl *pwr
     }
 
     if(np != NULL) {
-        ret = of_property_read_u32(np,"pwr_level",&pwr->pwr_level);
+	    ret = of_property_read_u32(np,"pwr_level",&pwr->pwr_level);
     }
 #if 0
     struct pwr_ctl_var (*var)[HDMI_TX_PWR_CTRL_NUM] = (struct pwr_ctl_var (*)[HDMI_TX_PWR_CTRL_NUM])pwr;
diff --git a/sound/soc/aml/m8/aml_spdif_dai.c b/sound/soc/aml/m8/aml_spdif_dai.c
index dc6fc100ac56..c0f71fb42a6f 100755
--- a/sound/soc/aml/m8/aml_spdif_dai.c
+++ b/sound/soc/aml/m8/aml_spdif_dai.c
@@ -45,7 +45,7 @@ extern unsigned int IEC958_mode_codec;
 static int iec958buf[32+16];
 void  aml_spdif_play()
 {
-    //return;
+    return;
    	 _aiu_958_raw_setting_t set;
    	 _aiu_958_channel_status_t chstat;	 
 	struct snd_pcm_substream substream;
-- 
2.19.0

