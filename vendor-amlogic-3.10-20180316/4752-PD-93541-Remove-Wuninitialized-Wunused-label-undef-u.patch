From f1c7d1fc46a4e1bbbda8d2330f74d4d92772bbb0 Mon Sep 17 00:00:00 2001
From: xu xing <xing.xu@amlogic.com>
Date: Fri, 8 Aug 2014 18:37:54 +0800
Subject: [PATCH 4752/5965] PD #93541:Remove Wuninitialized Wunused-label undef
 unused-result return-type parentheses int-to-pointer-cast warning

Change-Id: Ib93dfda81150c7f69d2d3b6bb0080383bd8b44f3
---
 Makefile                                         |  9 ++++++++-
 arch/arm/mach-meson6/clock.c                     |  1 +
 arch/arm/mach-meson6/lcd/lcd_config.c            |  6 +++---
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c |  4 ++--
 drivers/amlogic/amports/rdma.c                   |  5 +++--
 drivers/amlogic/camera/common/vm.c               |  4 ++--
 drivers/amlogic/crypto/crypto_dev.c              | 16 +++++++++++++---
 drivers/amlogic/deinterlace/deinterlace.c        |  2 ++
 drivers/amlogic/ethernet/phy/am_internal.c       |  2 +-
 .../amlogic/ext_hdmiin/sii9233/__sii9233/amf.h   |  2 +-
 .../ext_hdmiin/sii9233/__sii9233/infofrm.c       |  4 +++-
 drivers/amlogic/input/new_remote/remote_func.c   |  4 ++--
 drivers/amlogic/input/new_remote/remote_main.c   |  7 +++++--
 drivers/amlogic/input/remote/am_remote.c         |  7 ++++---
 drivers/amlogic/input/sensor/lsm303d.c           |  2 --
 .../input/touchscreen/gslx680_compatible.c       |  2 +-
 drivers/amlogic/power/aml_pmu/aml1216-sply.c     |  2 +-
 drivers/amlogic/power/aml_pmu/aml1218-sply.c     |  2 +-
 .../meson_cs_dcdc_regulator.c                    |  2 +-
 drivers/amlogic/tvin_v4l2/vdin_v4l2.c            |  1 +
 drivers/amlogic/video_dev/amlvideo.c             |  6 +++---
 mm/vmscan.c                                      |  2 +-
 sound/soc/aml/m6/aml_audio_hw.c                  |  2 +-
 sound/soc/aml/m6/aml_m_dummy.c                   |  6 +++---
 sound/soc/aml/m6/aml_pcm.c                       |  2 +-
 25 files changed, 64 insertions(+), 38 deletions(-)

diff --git a/Makefile b/Makefile
index 75eede736640..b6babaf9b3ec 100755
--- a/Makefile
+++ b/Makefile
@@ -385,7 +385,14 @@ KBUILD_CFLAGS   += -Werror=enum-compare \
 		   -Werror=unused-function \
 		   -Werror=switch \
 		   -Werror=strict-prototypes \
-		   -Werror=declaration-after-statement
+		   -Werror=declaration-after-statement \
+		   -Werror=uninitialized \
+		   -Werror=unused-label \
+		   -Werror=undef \
+		   -Werror=unused-result \
+		   -Werror=return-type \
+		   -Werror=parentheses \
+		   -Werror=int-to-pointer-cast
 KBUILD_AFLAGS_KERNEL :=
 KBUILD_CFLAGS_KERNEL :=
 KBUILD_AFLAGS   := -D__ASSEMBLY__
diff --git a/arch/arm/mach-meson6/clock.c b/arch/arm/mach-meson6/clock.c
index 25fe05085cd4..007c43e6b74c 100755
--- a/arch/arm/mach-meson6/clock.c
+++ b/arch/arm/mach-meson6/clock.c
@@ -1407,6 +1407,7 @@ static  int __init meson_device_low_power(char *s)
     if(strcmp(s, "1") == 0) {
         device_low_power = 1;
     }
+	return 0;
 }
 __setup("meson_device_low_power=",meson_device_low_power);
 
diff --git a/arch/arm/mach-meson6/lcd/lcd_config.c b/arch/arm/mach-meson6/lcd/lcd_config.c
index 88e2e1f8a056..54d7dba45d79 100755
--- a/arch/arm/mach-meson6/lcd/lcd_config.c
+++ b/arch/arm/mach-meson6/lcd/lcd_config.c
@@ -191,7 +191,7 @@ static void write_gamma_table(u16 *data, u32 rgb_mask, u16 gamma_coeff, u32 gamm
 	
 	spin_lock_irqsave(&gamma_write_lock, flags);
 	rgb_mask = gamma_sel_table[rgb_mask];
-	while ((!(READ_LCD_REG(L_GAMMA_CNTL_PORT+gamma_cntl_port_offset) & (0x1 << LCD_ADR_RDY))) && (cnt < LCD_GAMMA_RETRY_CNT)) {
+	while ((!(READ_LCD_REG((L_GAMMA_CNTL_PORT+gamma_cntl_port_offset)) & (0x1 << LCD_ADR_RDY))) && (cnt < LCD_GAMMA_RETRY_CNT)) {
 		udelay(10);
 		cnt++;
 	};
@@ -199,7 +199,7 @@ static void write_gamma_table(u16 *data, u32 rgb_mask, u16 gamma_coeff, u32 gamm
 	if (gamma_reverse == 0) {
 		for (i=0;i<256;i++) {
 			cnt = 0;
-			while ((!( READ_LCD_REG(L_GAMMA_CNTL_PORT+gamma_cntl_port_offset) & (0x1 << LCD_WR_RDY))) && (cnt < LCD_GAMMA_RETRY_CNT)) {
+			while ((!( READ_LCD_REG((L_GAMMA_CNTL_PORT+gamma_cntl_port_offset)) & (0x1 << LCD_WR_RDY))) && (cnt < LCD_GAMMA_RETRY_CNT)) {
 				udelay(10);
 				cnt++;
 			};
@@ -209,7 +209,7 @@ static void write_gamma_table(u16 *data, u32 rgb_mask, u16 gamma_coeff, u32 gamm
 	else {
 		for (i=0;i<256;i++) {
 			cnt = 0;
-			while ((!( READ_LCD_REG(L_GAMMA_CNTL_PORT+gamma_cntl_port_offset) & (0x1 << LCD_WR_RDY))) && (cnt < LCD_GAMMA_RETRY_CNT)) {
+			while ((!( READ_LCD_REG((L_GAMMA_CNTL_PORT+gamma_cntl_port_offset)) & (0x1 << LCD_WR_RDY))) && (cnt < LCD_GAMMA_RETRY_CNT)) {
 				udelay(10);
 				cnt++;
 			};
diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c
index 3d9e3e1994c1..bac87b7974de 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c
@@ -248,7 +248,7 @@ int cec_ll_tx(const unsigned char *msg, unsigned char len)
 {
     int ret = 0;
     if(cec_int_disable_flag)
-        return;
+        return 2;
         
     mutex_lock(&cec_mutex);
     //aml_write_reg32(P_AO_CEC_INTR_MASKN, aml_read_reg32(P_AO_CEC_INTR_MASKN) & ~(1 << 2));
@@ -360,4 +360,4 @@ void cec_arbit_bit_time_set(unsigned bit_set, unsigned time_set, unsigned flag){
 void cec_test_(unsigned int cmd)
 {
     
-}
\ No newline at end of file
+}
diff --git a/drivers/amlogic/amports/rdma.c b/drivers/amlogic/amports/rdma.c
index 7767f35c58d5..8934218e6e09 100755
--- a/drivers/amlogic/amports/rdma.c
+++ b/drivers/amlogic/amports/rdma.c
@@ -439,9 +439,10 @@ static int __init rmda_early_init(void)
 
 #else
 #if MESON_CPU_TYPE < MESON_CPU_TYPE_MESON8
-    request_irq(INT_RDMA, &rdma_isr,
+    if(request_irq(INT_RDMA, &rdma_isr,
                     IRQF_SHARED, "rdma",
-                    (void *)"rdma");
+                    (void *)"rdma"))
+		return -1;
 #endif    
 #endif
     //printk("%s phy_addr %x remap %x table %x\n", __func__, rmda_table_phy_addr, rmda_table_addr_remap, rmda_table); 
diff --git a/drivers/amlogic/camera/common/vm.c b/drivers/amlogic/camera/common/vm.c
index ee69a33e7232..d79a297183d3 100755
--- a/drivers/amlogic/camera/common/vm.c
+++ b/drivers/amlogic/camera/common/vm.c
@@ -2012,7 +2012,7 @@ MODULE_AMLOG(AMLOG_DEFAULT_LEVEL, 0xff, LOG_LEVEL_DESC, LOG_MASK_DESC);
 static int vm_driver_probe(struct platform_device *pdev)
 {
 #ifndef CONFIG_CMA
-	char* buf_start;
+	phys_addr_t buf_start;
 	unsigned int buf_size;
 //	struct resource *mem;
     int idx;
@@ -2035,7 +2035,7 @@ static int vm_driver_probe(struct platform_device *pdev)
      }
      else
      {
-         buf_start = (char *)get_reserve_block_addr(idx);
+         buf_start = (phys_addr_t)get_reserve_block_addr(idx);
          buf_size = (unsigned int)get_reserve_block_size(idx);
      }
 #endif 
diff --git a/drivers/amlogic/crypto/crypto_dev.c b/drivers/amlogic/crypto/crypto_dev.c
index 5b564c4dd548..aab718825469 100755
--- a/drivers/amlogic/crypto/crypto_dev.c
+++ b/drivers/amlogic/crypto/crypto_dev.c
@@ -95,7 +95,11 @@ int crypto_done(crypto_device_t * pcrypt_info)
     {
         return ret;
     }
-    copy_from_user((void *)key,(void*)pcrypt_info->keyaddr,keysize);
+    if(copy_from_user((void *)key,(void*)pcrypt_info->keyaddr,keysize))
+	{
+		kfree(key);
+		return ret;
+	}
     
     src = (char *)kmalloc(pcrypt_info->size,GFP_KERNEL);
     if(src==NULL)
@@ -103,7 +107,12 @@ int crypto_done(crypto_device_t * pcrypt_info)
         kfree(key);
         return ret;
     }
-    copy_from_user((void *)src,(void*)pcrypt_info->srcaddr,pcrypt_info->size);
+    if(copy_from_user((void *)src,(void*)pcrypt_info->srcaddr,pcrypt_info->size))
+	{	
+		kfree(src);
+		kfree(key);
+		return ret;
+	}
  
     sg_init_table(sg, 1);
     sg_set_buf(&sg[0], src, pcrypt_info->size-pad_byte);
@@ -126,7 +135,8 @@ int crypto_done(crypto_device_t * pcrypt_info)
         goto out;
      }
 
-    copy_to_user((void *)pcrypt_info->dstaddr,src,pcrypt_info->size);
+    if(copy_to_user((void *)pcrypt_info->dstaddr,src,pcrypt_info->size))
+		goto out;
 
     ret = CRYPTO_STATUS_FINISH;
 out:
diff --git a/drivers/amlogic/deinterlace/deinterlace.c b/drivers/amlogic/deinterlace/deinterlace.c
index 557756df6c68..ff0b0f7a1b71 100755
--- a/drivers/amlogic/deinterlace/deinterlace.c
+++ b/drivers/amlogic/deinterlace/deinterlace.c
@@ -6770,7 +6770,9 @@ static vframe_t *di_vf_get(void* arg)
     else
 #endif
     if (!queue_empty(QUEUE_POST_READY)){
+#ifdef SUPPORT_START_FRAME_HOLD
 get_vframe:
+#endif
         log_buffer_state("ge_");
         di_lock_irqfiq_save(irq_flag2, fiq_flag);
 
diff --git a/drivers/amlogic/ethernet/phy/am_internal.c b/drivers/amlogic/ethernet/phy/am_internal.c
index 697b96e59557..ff4ef313dfa2 100755
--- a/drivers/amlogic/ethernet/phy/am_internal.c
+++ b/drivers/amlogic/ethernet/phy/am_internal.c
@@ -275,7 +275,7 @@ static int internal_read_status(struct phy_device *phydev)
 
 int amlogic_phy_config_aneg(struct phy_device *phydev){
 
-	genphy_config_aneg(phydev);
+	return genphy_config_aneg(phydev);
 }
 static struct phy_driver amlogic_phy_driver[] = {
 	{
diff --git a/drivers/amlogic/ext_hdmiin/sii9233/__sii9233/amf.h b/drivers/amlogic/ext_hdmiin/sii9233/__sii9233/amf.h
index c5bbf6f5a9c1..e48fd54b2fb9 100755
--- a/drivers/amlogic/ext_hdmiin/sii9233/__sii9233/amf.h
+++ b/drivers/amlogic/ext_hdmiin/sii9233/__sii9233/amf.h
@@ -9,7 +9,7 @@
 #ifndef __AMF_H__
 #define __AMF_H__
         
-
+#include "config.h"
 
 //------------------------------------------------------------------------------
 // Constants
diff --git a/drivers/amlogic/ext_hdmiin/sii9233/__sii9233/infofrm.c b/drivers/amlogic/ext_hdmiin/sii9233/__sii9233/infofrm.c
index 6a0ffac92d7e..006fa42ff7c4 100755
--- a/drivers/amlogic/ext_hdmiin/sii9233/__sii9233/infofrm.c
+++ b/drivers/amlogic/ext_hdmiin/sii9233/__sii9233/infofrm.c
@@ -129,7 +129,9 @@ static IfCtrl_t IfCtrl;
 
 /***** local function prototypes *********************************************/
 
-//static uint8_t GetIfTypeFromUnreqBuffer ( void );
+#if (CONF__SUPPORT_REPEATER3D == ENABLE)
+static uint8_t GetIfTypeFromUnreqBuffer ( void );
+#endif
 static void SetDecodeIfBuffers ( const DevAddr_t DevAddr, const uint8_t bDecodeIfType );
 static void SetIfTo ( SelectIf_t eSelectIf, const uint16_t wTo );
 static bool_t GetIf( const uint8_t bIfType );
diff --git a/drivers/amlogic/input/new_remote/remote_func.c b/drivers/amlogic/input/new_remote/remote_func.c
index fb75eba83d6d..53998b695fe6 100755
--- a/drivers/amlogic/input/new_remote/remote_func.c
+++ b/drivers/amlogic/input/new_remote/remote_func.c
@@ -139,7 +139,7 @@ void get_cur_scancode(struct remote *remote_data){
 	}
 	else if(remote_data->work_mode > DECODEMODE_MAX){
 		remote_data->cur_lsbkeycode = remote_data->cur_keycode;
-		if(remote_data->work_mode = DECODEMODE_SW_DUOKAN )
+		if(remote_data->work_mode == DECODEMODE_SW_DUOKAN )
 			changeduokandecodeorder(remote_data);
 	}
 	else{
@@ -379,7 +379,7 @@ int remote_hw_reprot_key(struct remote *remote_data)
 	get_cur_scancode(remote_data);
 	get_cur_scanstatus(remote_data);
 	if(remote_data->status)// repeat enable & come in S timer is open
-		return;
+		return 0;
 	if (remote_data->cur_lsbkeycode) {	//key first press
 		if(remote_data->ig_custom_enable)
 		{
diff --git a/drivers/amlogic/input/new_remote/remote_main.c b/drivers/amlogic/input/new_remote/remote_main.c
index ec209f11bce9..e3497db522dd 100755
--- a/drivers/amlogic/input/new_remote/remote_main.c
+++ b/drivers/amlogic/input/new_remote/remote_main.c
@@ -305,7 +305,7 @@ static void enable_remote_irq(void)
 
 }
 
-int remote_reprot_key( struct remote * remote_data){
+void remote_reprot_key( struct remote * remote_data){
 	remote_report_key[remote_data->work_mode](remote_data);
 }
 static void remote_release_timer_sr(unsigned long data)
@@ -377,7 +377,10 @@ static DEVICE_ATTR(log_buffer, S_IRUGO | S_IWUSR, remote_log_buffer_show, NULL);
 
 static int hardware_init(struct platform_device *pdev)
 {
-	devm_pinctrl_get_select_default(&pdev->dev);
+	struct pinctrl *p;
+	p=devm_pinctrl_get_select_default(&pdev->dev);
+	if (IS_ERR(p))
+		return p;
 	set_remote_mode(DECODEMODE_NEC);
 	return request_irq(NEC_REMOTE_IRQ_NO, remote_interrupt, IRQF_SHARED, "keypad", (void *)remote_interrupt);
 }
diff --git a/drivers/amlogic/input/remote/am_remote.c b/drivers/amlogic/input/remote/am_remote.c
index b4a3ea275466..f063bcbb2488 100755
--- a/drivers/amlogic/input/remote/am_remote.c
+++ b/drivers/amlogic/input/remote/am_remote.c
@@ -487,7 +487,7 @@ static int hardware_init(struct platform_device *pdev)
 {
 	//struct aml_remote_platdata *remote_pdata;
 	unsigned int control_value, status, data_value;
-
+	 struct pinctrl *p;
 	//step 0: set pinmux to remote
 	//remote_pdata = (struct aml_remote_platdata *)pdev->dev.platform_data;
 	//if (!remote_pdata) {
@@ -496,8 +496,9 @@ static int hardware_init(struct platform_device *pdev)
 	//}
 	//if (remote_pdata->pinmux_setup)
 	//	remote_pdata->pinmux_setup();
-	devm_pinctrl_get_select_default(&pdev->dev);
-
+	p=devm_pinctrl_get_select_default(&pdev->dev);
+	if (IS_ERR(p))
+		return p;
 	//step 1 :set reg IR_DEC_CONTROL
 	control_value = 3 << 28 | (0xFA0 << 12) | 0x13;
 	am_remote_write_reg(AM_IR_DEC_REG0, control_value);
diff --git a/drivers/amlogic/input/sensor/lsm303d.c b/drivers/amlogic/input/sensor/lsm303d.c
index 89e7e206482d..28c02bbd0daa 100644
--- a/drivers/amlogic/input/sensor/lsm303d.c
+++ b/drivers/amlogic/input/sensor/lsm303d.c
@@ -745,7 +745,6 @@ static void lsm303d_irq1_work_func(struct work_struct *work)
 	
 	lsm303d_interrupt_catch(stat,1);
 	pr_info("%s: IRQ1 triggered\n", LSM303D_DEV_NAME);
-exit:
 	enable_irq(stat->irq1);
 }
 
@@ -759,7 +758,6 @@ static void lsm303d_irq2_work_func(struct work_struct *work)
 	
 	lsm303d_interrupt_catch(stat,2);
 	pr_info("%s: IRQ2 triggered\n", LSM303D_DEV_NAME);
-exit:
 	enable_irq(stat->irq2);
 }
 
diff --git a/drivers/amlogic/input/touchscreen/gslx680_compatible.c b/drivers/amlogic/input/touchscreen/gslx680_compatible.c
index d8306cd91a51..5c401047c3f3 100755
--- a/drivers/amlogic/input/touchscreen/gslx680_compatible.c
+++ b/drivers/amlogic/input/touchscreen/gslx680_compatible.c
@@ -913,7 +913,7 @@ static int gsl_ts_resume(struct i2c_client *client)
 
 static int gsl_ts_probe(struct i2c_client *client,const struct i2c_device_id *id)
 {
-	struct gsl_ts *ts;
+	struct gsl_ts *ts=NULL;
 	int rc = -1;
 
 	printk("GSLX680 Enter %s\n", __func__);
diff --git a/drivers/amlogic/power/aml_pmu/aml1216-sply.c b/drivers/amlogic/power/aml_pmu/aml1216-sply.c
index 41aaab1ba224..eb3917a5a730 100755
--- a/drivers/amlogic/power/aml_pmu/aml1216-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1216-sply.c
@@ -1345,7 +1345,7 @@ static int aml1216_update_state(struct aml_charger *charger)
         aml1216_set_charge_enable(1);               
     }
     if (aml1216_get_otp_version() == 0) {
-        if ((vsys_voltage > charger->vbat) && (vsys_voltage - charger->vbat < 500) || charger->vbat > 3950) {
+        if (((vsys_voltage > charger->vbat) && (vsys_voltage - charger->vbat < 500)) || (charger->vbat > 3950)) {
             printk("%s, vsys is not large, or vbat is too large, vsys:%d, vbat:%d\n", __func__, vsys_voltage, charger->vbat);
             aml1216_set_charge_enable(0);
         } else {
diff --git a/drivers/amlogic/power/aml_pmu/aml1218-sply.c b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
index 5bd55cca9fec..2b5a121c10b3 100755
--- a/drivers/amlogic/power/aml_pmu/aml1218-sply.c
+++ b/drivers/amlogic/power/aml_pmu/aml1218-sply.c
@@ -1370,7 +1370,7 @@ static int aml1218_update_state(struct aml_charger *charger)
     }
     vsys = aml1218_get_vsys_voltage();
     if (aml1218_get_pmu_version() == 0) {
-        if ((vsys > charger->vbat) && (vsys - charger->vbat < 500) || charger->vbat > 3950) {
+        if (((vsys > charger->vbat) && (vsys - charger->vbat < 500)) || (charger->vbat > 3950)) {
             //printk("%s, vsys is not large or vbat too large, vsys:%d, vbat:%d\n", __func__, vsys, charger->vbat);
             aml1218_set_charge_enable(0);
         } else {
diff --git a/drivers/amlogic/power/meson_cs_dcdc_regulator/meson_cs_dcdc_regulator.c b/drivers/amlogic/power/meson_cs_dcdc_regulator/meson_cs_dcdc_regulator.c
index 4ab26e49c859..489e04f8bb6d 100755
--- a/drivers/amlogic/power/meson_cs_dcdc_regulator/meson_cs_dcdc_regulator.c
+++ b/drivers/amlogic/power/meson_cs_dcdc_regulator/meson_cs_dcdc_regulator.c
@@ -630,6 +630,7 @@ static int dvfs_get_voltage_step(void)
 		}
         return reg_val & 0xf;
     }
+	return -1;
 }
 
 static int dvfs_set_voltage(int from, int to)
@@ -825,7 +826,6 @@ static int meson_cs_dvfs_probe(struct platform_device *pdev)
         printk("%2d, %08x, %7d\n", i, g_table[i].pwm_value, g_table[i].voltage);    
     }
 
-next:
     if (use_pwm) {
         dvfs_vcck_pwm_init(&pdev->dev);
     }
diff --git a/drivers/amlogic/tvin_v4l2/vdin_v4l2.c b/drivers/amlogic/tvin_v4l2/vdin_v4l2.c
index 1e54c59bfc27..5905800a0af3 100755
--- a/drivers/amlogic/tvin_v4l2/vdin_v4l2.c
+++ b/drivers/amlogic/tvin_v4l2/vdin_v4l2.c
@@ -116,5 +116,6 @@ const char *cam_cmd_to_str(cam_command_t cmd)
 		default:
 			break;
 	}
+	return NULL;
 }
 EXPORT_SYMBOL(cam_cmd_to_str);
diff --git a/drivers/amlogic/video_dev/amlvideo.c b/drivers/amlogic/video_dev/amlvideo.c
index b91441a0b003..95be46fb44d8 100755
--- a/drivers/amlogic/video_dev/amlvideo.c
+++ b/drivers/amlogic/video_dev/amlvideo.c
@@ -558,7 +558,7 @@ static int freerun_cleancache_dqbuf(struct v4l2_buffer *p) {
     if (freerun_start) {
         current_pts += DUR2PTS(ppmgrvf->duration);
     }
-    p->index = ppmgrvf->canvas0Addr&0xff - PPMGR_CANVAS_INDEX;
+    p->index = (ppmgrvf->canvas0Addr&0xff) - PPMGR_CANVAS_INDEX;
     p->timestamp.tv_sec = current_pts / 90000;
     p->timestamp.tv_usec = (current_pts % 90000) * 100 / 9;
     return ret;
@@ -622,7 +622,7 @@ static int freerun_dqbuf(struct v4l2_buffer *p) {
         mutex_unlock(&vfpMutex);
         return -EAGAIN;
     }
-    p->index = ppmgrvf->canvas0Addr&0xff - PPMGR_CANVAS_INDEX;
+    p->index = (ppmgrvf->canvas0Addr&0xff) - PPMGR_CANVAS_INDEX;
     p->timestamp.tv_sec = 0;
     p->timestamp.tv_usec = ppmgrvf->pts_us64;
     return ret;
@@ -693,7 +693,7 @@ static int normal_dqbuf(struct v4l2_buffer *p) {
         mutex_unlock(&vfpMutex);
         return -EAGAIN;
     }
-    p->index = ppmgrvf->canvas0Addr&0xff - PPMGR_CANVAS_INDEX;
+    p->index = (ppmgrvf->canvas0Addr&0xff) - PPMGR_CANVAS_INDEX;
     p->timestamp.tv_sec = 0;
     p->timestamp.tv_usec = ppmgrvf->duration;
 
diff --git a/mm/vmscan.c b/mm/vmscan.c
index 14bd987d913e..e1debb0f6370 100755
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -1064,7 +1064,7 @@ int __isolate_lru_page(struct page *page, isolate_mode_t mode, gfp_t gfp_mask)
 		}
 #endif
 
-		if((allocflags_to_migratetype(gfp_mask) & MIGRATE_MOVABLE == 0) \
+		if(((allocflags_to_migratetype(gfp_mask) & MIGRATE_MOVABLE) == 0) \
 			&& is_migrate_cma(get_pageblock_migratetype(page))){
 			return -EBUSY;
 		}
diff --git a/sound/soc/aml/m6/aml_audio_hw.c b/sound/soc/aml/m6/aml_audio_hw.c
index 9165fd2bd1f1..edc6d48bbe57 100755
--- a/sound/soc/aml/m6/aml_audio_hw.c
+++ b/sound/soc/aml/m6/aml_audio_hw.c
@@ -375,8 +375,8 @@ void audio_in_spdif_enable(int flag)
 //  int rd = 0, start=0;
 
 	if(flag){
-reset_again:
 #if 0
+reset_again:
 	     WRITE_MPEG_REG_BITS(AUDIN_FIFO1_CTRL, 1, 1, 1); // reset FIFO 0
             WRITE_MPEG_REG(AUDIN_FIFO1_PTR, 0);
             rd = READ_MPEG_REG(AUDIN_FIFO1_PTR);
diff --git a/sound/soc/aml/m6/aml_m_dummy.c b/sound/soc/aml/m6/aml_m_dummy.c
index d99e480ef84b..5871f13fc05f 100644
--- a/sound/soc/aml/m6/aml_m_dummy.c
+++ b/sound/soc/aml/m6/aml_m_dummy.c
@@ -190,18 +190,18 @@ static void dummy_codec_device_init(void)
 	p = pinctrl_get(dummy_codec_dev);
 
 	if (IS_ERR(p))
-		return p;
+		return;
 			
 	s = pinctrl_lookup_state(p, "dummy_codec_audio");
 	if (IS_ERR(s)) {
 		pinctrl_put(p);
-		return ERR_PTR(PTR_ERR(s));
+		return;
 	}
 		
 	ret = pinctrl_select_state(p, s);
 	if (ret < 0) {
 		pinctrl_put(p);
-		return ERR_PTR(ret);
+		return;
 	}
 	printk("=%s==,dummy_codec_audio init done\n",__func__);
 #else
diff --git a/sound/soc/aml/m6/aml_pcm.c b/sound/soc/aml/m6/aml_pcm.c
index bd38f1d9e6b7..6f953174d2fb 100755
--- a/sound/soc/aml/m6/aml_pcm.c
+++ b/sound/soc/aml/m6/aml_pcm.c
@@ -453,7 +453,7 @@ AIU_HDMI_CLK_DATA_CTRL can be writen sucessfully when audio PLL OFF.
 so notify HDMI to set audio parameter every time when HDMI AUDIO not ready
 */
 
-static int audio_notify_hdmi_info(int audio_type, void *v){
+static void audio_notify_hdmi_info(int audio_type, void *v){
     	struct snd_pcm_substream *substream =(struct snd_pcm_substream*)v;
 	if(substream->runtime->rate != audio_sr_info || audio_type_info != audio_type || !audio_hdmi_init_ready()
 		|| substream->runtime->channels != audio_ch_info)
-- 
2.19.0

