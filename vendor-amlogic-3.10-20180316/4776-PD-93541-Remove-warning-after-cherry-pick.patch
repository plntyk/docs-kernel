From dd9a2d8776fa054a29e8c8413244c6bb934675fe Mon Sep 17 00:00:00 2001
From: xu xing <xing.xu@amlogic.com>
Date: Thu, 21 Aug 2014 12:17:12 +0800
Subject: [PATCH 4776/5965] PD #93541:Remove warning after cherry pick

Change-Id: Ie35fbbb7b9f476a3bd4eec2702ee204413a1383b
---
 arch/arm/mach-meson8/lcd/edp_drv.c |  4 ++--
 drivers/amlogic/amports/vh264.c    | 10 +++++-----
 drivers/amlogic/amports/video.c    | 12 ++++++------
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/arch/arm/mach-meson8/lcd/edp_drv.c b/arch/arm/mach-meson8/lcd/edp_drv.c
index 36cdc708a47f..03bbdbf70564 100755
--- a/arch/arm/mach-meson8/lcd/edp_drv.c
+++ b/arch/arm/mach-meson8/lcd/edp_drv.c
@@ -372,7 +372,7 @@ static int dptx_init_downspread(unsigned char ss_enable)
 	
 	return status;
 }
-
+#if 0
 static char *dptx_explain_reply_code(int status)
 {
 	switch (status) {
@@ -380,7 +380,7 @@ static char *dptx_explain_reply_code(int status)
 			return "unknown status";
 	}
 }
-
+#endif
 static int trdp_AUX_check_status(void)
 {
 	if (READ_DPTX_REG(EDP_TX_TRANSMITTER_OUTPUT_ENABLE) & 1)
diff --git a/drivers/amlogic/amports/vh264.c b/drivers/amlogic/amports/vh264.c
index 0dd5b6e55bb3..83d5cd96b2c7 100755
--- a/drivers/amlogic/amports/vh264.c
+++ b/drivers/amlogic/amports/vh264.c
@@ -253,7 +253,7 @@ extern u32 get_blackout_policy(void);
 #ifdef CONFIG_GE2D_KEEP_FRAME
 static ge2d_context_t *ge2d_videoh264_context = NULL;
 
-static int ge2d_videoh264task_init()
+static int ge2d_videoh264task_init(void)
 {
     if (ge2d_videoh264_context == NULL)
             ge2d_videoh264_context = create_ge2d_work_queue();
@@ -264,7 +264,7 @@ static int ge2d_videoh264task_init()
     }
     return 0;
 }
-static int ge2d_videoh264task_release()
+static int ge2d_videoh264task_release(void)
 {
     if (ge2d_videoh264_context) {
             destroy_ge2d_work_queue(ge2d_videoh264_context);
@@ -275,9 +275,9 @@ static int ge2d_videoh264task_release()
 static int ge2d_canvas_dup(canvas_t *srcy ,canvas_t *srcu,canvas_t *des,
     int format,u32 srcindex,u32 desindex)
 {
-    printk("ge2d_canvas_dupvh264 ADDR srcy[0x%x] srcu[0x%x] des[0x%x]\n",srcy->addr,srcu->addr,des->addr);
 
     config_para_ex_t ge2d_config;
+    printk("ge2d_canvas_dupvh264 ADDR srcy[0x%lx] srcu[0x%lx] des[0x%lx]\n",srcy->addr,srcu->addr,des->addr);
     memset(&ge2d_config,0,sizeof(config_para_ex_t));
 
     ge2d_config.alu_const_color= 0;
@@ -1850,7 +1850,7 @@ static void stream_switching_done(void)
         spin_unlock_irqrestore(&lock, flags);
     }
 }
-
+#if !defined(NV21)|| !defined(CONFIG_GE2D_KEEP_FRAME)
 static int canvas_dup(u8 *dst, ulong src_paddr, ulong size)
 {
     void __iomem *p = ioremap_wc(src_paddr, size);
@@ -1861,7 +1861,7 @@ static int canvas_dup(u8 *dst, ulong src_paddr, ulong size)
     }
     return 0;
 }
-
+#endif
 static void stream_switching_do(struct work_struct *work)
 {
     vframe_t *vf_prev, *vf_curr;
diff --git a/drivers/amlogic/amports/video.c b/drivers/amlogic/amports/video.c
index 40ac1f7f3c60..855318d76762 100755
--- a/drivers/amlogic/amports/video.c
+++ b/drivers/amlogic/amports/video.c
@@ -679,7 +679,7 @@ static int noneseamless_play_clone_rate = 5;
 
 #ifdef CONFIG_GE2D_KEEP_FRAME
 static ge2d_context_t *ge2d_video_context = NULL;
-static int ge2d_videotask_init()
+static int ge2d_videotask_init(void)
 {
     if (ge2d_video_context == NULL)
             ge2d_video_context = create_ge2d_work_queue();
@@ -692,7 +692,7 @@ static int ge2d_videotask_init()
 
     return 0;
 }
-static int ge2d_videotask_release()
+static int ge2d_videotask_release(void)
 {
     if (ge2d_video_context) {
             destroy_ge2d_work_queue(ge2d_video_context);
@@ -704,9 +704,9 @@ static int ge2d_videotask_release()
 static int ge2d_canvas_dup(canvas_t *srcy ,canvas_t *srcu,canvas_t *des,
     int format,u32 srcindex,u32 desindex)
 {
-    printk("ge2d_canvas_dup ADDR srcy[0x%x] srcu[0x%x] des[0x%x]\n",srcy->addr,srcu->addr,des->addr);
 
     config_para_ex_t ge2d_config;
+    printk("ge2d_canvas_dup ADDR srcy[0x%lx] srcu[0x%lx] des[0x%lx]\n",srcy->addr,srcu->addr,des->addr);
     memset(&ge2d_config,0,sizeof(config_para_ex_t));
 
     ge2d_config.alu_const_color= 0;
@@ -758,10 +758,10 @@ static int ge2d_canvas_dup(canvas_t *srcy ,canvas_t *srcu,canvas_t *des,
     return 0;
 }
 
-int ge2d_show_frame(ulong yaddr,ulong uaddr)
+void ge2d_show_frame(ulong yaddr,ulong uaddr)
 {
     u32 cur_index;
-    u32 y_index, u_index,des_index,src_index;
+    u32 y_index, u_index;
     cur_index = READ_MPEG_REG(VD1_IF0_CANVAS0);
     y_index = cur_index & 0xff;
     u_index = (cur_index >> 8) & 0xff;
@@ -798,7 +798,7 @@ int ge2d_store_frame(ulong yaddr,ulong uaddr,u32 ydupindex,u32 udupindex)
     ge2d_canvas_dup(&cs0,&cs1,&cyd,GE2D_FORMAT_M24_NV21,src_index,des_index);
     return 0;
 }
-static void ge2d_keeplastframe_block()
+static void ge2d_keeplastframe_block(void)
 {
     mutex_lock(&video_module_mutex);
     ge2d_store_frame(keep_y_addr,keep_u_addr,DISPLAY_CANVAS_YDUP_INDEX,DISPLAY_CANVAS_UDUP_INDEX);
-- 
2.19.0

