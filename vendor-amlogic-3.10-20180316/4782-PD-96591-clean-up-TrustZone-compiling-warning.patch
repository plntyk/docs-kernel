From c79d8723ac62884b214f28310684b508b6f2e44b Mon Sep 17 00:00:00 2001
From: Peifu Jiang <peifu.jiang@amlogic.com>
Date: Tue, 26 Aug 2014 15:28:49 +0800
Subject: [PATCH 4782/5965] PD #96591: clean up TrustZone compiling warning

Change-Id: I0efc54e9f42beaaedd675c15e5d6e4f1461ad6aa
---
 arch/arm/mach-meson8/clock.c                  |  8 +++++---
 arch/arm/mach-meson8/cpu.c                    |  4 +++-
 arch/arm/mach-meson8b/clock.c                 |  8 +++++---
 arch/arm/mach-meson8b/cpu.c                   |  2 ++
 drivers/amlogic/efuse/efuse_hw.c              | 17 ++++++++++-------
 drivers/amlogic/secure_monitor/flash_secure.c | 13 ++++++-------
 drivers/mmc/card/mmc_storage.c                | 18 ++++++++++--------
 7 files changed, 41 insertions(+), 29 deletions(-)

diff --git a/arch/arm/mach-meson8/clock.c b/arch/arm/mach-meson8/clock.c
index cbd81cd9fb6f..ea1ba6a278a2 100755
--- a/arch/arm/mach-meson8/clock.c
+++ b/arch/arm/mach-meson8/clock.c
@@ -885,12 +885,14 @@ void meson_set_cpu_power_ctrl(uint32_t cpu,int is_power_on)
 
 void meson_set_cpu_ctrl_reg(int cpu,int is_on)
 {
+#ifdef CONFIG_MESON_TRUSTZONE
+	uint32_t value = 0;
+#endif
 	spin_lock(&clockfw_lock);
 
 #ifdef CONFIG_MESON_TRUSTZONE
-	uint32_t value = 0;
 	value = meson_read_corectrl();
-	value = value & ~(1U << cpu) | (is_on << cpu);
+	value = (value & ~(1U << cpu)) | (is_on << cpu);
 	value |= 1;
 	meson_modify_corectrl(value);
 #else
@@ -916,9 +918,9 @@ void meson_set_cpu_ctrl_addr(uint32_t cpu, const uint32_t addr)
 
 int meson_get_cpu_ctrl_addr(int cpu)
 {
-
 #ifdef CONFIG_MESON_TRUSTZONE
 //	meson_auxcoreboot_addr(cpu, addr);
+	return 0;
 #else
 //printk("sram=0x%x addr=0x%x\n",(MESON_CPU1_CONTROL_ADDR_REG + ((cpu-1) << 2)),addr);
 	return aml_read_reg32(MESON_CPU1_CONTROL_ADDR_REG + ((cpu-1) << 2));
diff --git a/arch/arm/mach-meson8/cpu.c b/arch/arm/mach-meson8/cpu.c
index eb5b374ff648..91dffe5aed88 100755
--- a/arch/arm/mach-meson8/cpu.c
+++ b/arch/arm/mach-meson8/cpu.c
@@ -34,8 +34,10 @@
 static int meson_cpu_version[MESON_CPU_VERSION_LVL_MAX+1];
 int __init meson_cpu_version_init(void)
 {
-	unsigned int version,ver;	
+	unsigned int version,ver;
+#ifndef CONFIG_MESON_TRUSTZONE
 	unsigned int  *version_map;
+#endif
 
 	meson_cpu_version[MESON_CPU_VERSION_LVL_MAJOR] = 
 		aml_read_reg32(P_ASSIST_HW_REV);
diff --git a/arch/arm/mach-meson8b/clock.c b/arch/arm/mach-meson8b/clock.c
index e4feeb6a31e6..491a252fa56f 100755
--- a/arch/arm/mach-meson8b/clock.c
+++ b/arch/arm/mach-meson8b/clock.c
@@ -900,12 +900,14 @@ void meson_set_cpu_power_ctrl(uint32_t cpu,int is_power_on)
 
 void meson_set_cpu_ctrl_reg(int cpu,int is_on)
 {
+#ifdef CONFIG_MESON_TRUSTZONE
+	uint32_t value = 0;
+#endif
 	spin_lock(&clockfw_lock);
 
 #ifdef CONFIG_MESON_TRUSTZONE
-	uint32_t value = 0;
 	value = meson_read_corectrl();
-	value = value & ~(1U << cpu) | (is_on << cpu);
+	value = (value & ~(1U << cpu)) | (is_on << cpu);
 	value |= 1;
 	meson_modify_corectrl(value);
 #else
@@ -931,9 +933,9 @@ void meson_set_cpu_ctrl_addr(uint32_t cpu, const uint32_t addr)
 
 int meson_get_cpu_ctrl_addr(int cpu)
 {
-
 #ifdef CONFIG_MESON_TRUSTZONE
 //	meson_auxcoreboot_addr(cpu, addr);
+	return 0;
 #else
 //printk("sram=0x%x addr=0x%x\n",(MESON_CPU1_CONTROL_ADDR_REG + ((cpu-1) << 2)),addr);
 	return aml_read_reg32(MESON_CPU1_CONTROL_ADDR_REG + ((cpu-1) << 2));
diff --git a/arch/arm/mach-meson8b/cpu.c b/arch/arm/mach-meson8b/cpu.c
index 93b6ef3e1b72..8ea004e0fa01 100755
--- a/arch/arm/mach-meson8b/cpu.c
+++ b/arch/arm/mach-meson8b/cpu.c
@@ -35,7 +35,9 @@ static int meson_cpu_version[MESON_CPU_VERSION_LVL_MAX+1];
 int __init meson_cpu_version_init(void)
 {
 	unsigned int version,ver;
+#ifndef CONFIG_MESON_TRUSTZONE
 	unsigned int  *version_map;
+#endif
 
 	meson_cpu_version[MESON_CPU_VERSION_LVL_MAJOR] = 
 		aml_read_reg32(P_ASSIST_HW_REV);
diff --git a/drivers/amlogic/efuse/efuse_hw.c b/drivers/amlogic/efuse/efuse_hw.c
index 7f9fab3c1606..4612447b53c7 100755
--- a/drivers/amlogic/efuse/efuse_hw.c
+++ b/drivers/amlogic/efuse/efuse_hw.c
@@ -17,8 +17,10 @@
 #include <mach/meson-secure.h>
 #endif
 
+#ifndef CONFIG_MESON_TRUSTZONE
 static void __efuse_write_byte( unsigned long addr, unsigned long data );
 static void __efuse_read_dword( unsigned long addr, unsigned long *data);
+#endif
 
 extern int efuseinfo_num;
 extern int efuse_active_version;
@@ -80,6 +82,7 @@ void __efuse_debug_init(void)
 #endif
 
 
+#ifndef CONFIG_MESON_TRUSTZONE
 static void __efuse_write_byte( unsigned long addr, unsigned long data )
 {
 	unsigned long auto_wr_is_enabled = 0;
@@ -202,21 +205,22 @@ static void __efuse_read_dword( unsigned long addr, unsigned long *data )
 
 	//printk(KERN_INFO "__efuse_read_dword: addr=%ld, data=0x%lx\n", addr, *data);
 }
+#endif
 
 static ssize_t __efuse_read( char *buf, size_t count, loff_t *ppos )
 {
 	unsigned long* contents = (unsigned long*)kzalloc(sizeof(unsigned long)*EFUSE_DWORDS, GFP_KERNEL);
 	unsigned pos = *ppos;
-	unsigned long *pdw;
-	char* tmp_p;
-
 #ifdef CONFIG_MESON_TRUSTZONE
 	struct efuse_hal_api_arg arg;
 	unsigned int retcnt;
 	int ret;
-#endif				
+#else
+	unsigned long *pdw;
+	char* tmp_p;
 	/*pos may not align to 4*/
 	unsigned int dwsize = (count + 3 +  pos%4) >> 2;	
+#endif
 	
 	if (!contents) {
 		printk(KERN_INFO "memory not enough\n"); 
@@ -277,13 +281,12 @@ static ssize_t __efuse_read( char *buf, size_t count, loff_t *ppos )
 static ssize_t __efuse_write(const char *buf, size_t count, loff_t *ppos )
 {
 	unsigned pos = *ppos;
-	//loff_t *readppos = ppos;
-	unsigned char *pc;	
-
 #ifdef CONFIG_MESON_TRUSTZONE
 	struct efuse_hal_api_arg arg;	
 	unsigned int retcnt;
 	int ret;
+#else
+	unsigned char *pc;	
 #endif
 
 	if (pos >= EFUSE_BYTES)
diff --git a/drivers/amlogic/secure_monitor/flash_secure.c b/drivers/amlogic/secure_monitor/flash_secure.c
index 44513c52caa2..db914e2efa18 100755
--- a/drivers/amlogic/secure_monitor/flash_secure.c
+++ b/drivers/amlogic/secure_monitor/flash_secure.c
@@ -103,7 +103,7 @@ flash_monitor_probe_exit:
 }
 
 void write_to_flash(unsigned char* psrc, unsigned size)
-{	
+{
 #ifdef CONFIG_SECURE_NAND
 extern int aml_nand_save_secure(struct mtd_info *mtd, u_char *buf, unsigned int size);
 extern struct mtd_info * nand_secure_mtd;
@@ -117,8 +117,9 @@ extern struct mtd_info * nand_secure_mtd;
 	}	
 	printk("///////////////////////////////////////save secure success//////////////////////////////////\n");
 	return;
-	
-#elif CONFIG_SPI_NOR_SECURE_STORAGE
+#endif
+
+#ifdef CONFIG_SPI_NOR_SECURE_STORAGE
 extern 	int secure_storage_spi_write(u8 *buf,u32 len);
 	unsigned char * secure_ptr = psrc;
 	int error = 0;
@@ -145,7 +146,6 @@ extern 	int mmc_secure_storage_ops(unsigned char * buf, unsigned int len, int wr
 	printk("///////////////////////////////////////save secure success//////////////////////////////////\n");
 	return;
 #endif
-
 }
 
 
@@ -153,7 +153,7 @@ static int secure_writer_monitor(void *arg)
 {
 	struct secure_monitor_arg *parg = (struct secure_monitor_arg*)arg;
 	unsigned char *pfbuf = parg->pfbuf;	
-	unsigned long flags;
+	//unsigned long flags;
 	
 	NS_SHARE_MEM_HEAD *pshead = (NS_SHARE_MEM_HEAD*)(parg->psbuf+SHARE_MEM_HEAD_OFFSET);
 	unsigned char *psdata = parg->psbuf + SHARE_MEM_DATA_OFFSET;
@@ -201,7 +201,6 @@ static int __init secure_monitor_init(void)
 
 static void __exit secure_monitor_exit(void)
 {
-	int ret=0;
 	printk("**************flash_secure_remove start!\n");
 	if(secure_task){
 		kthread_stop(secure_task);
@@ -217,7 +216,7 @@ static void __exit secure_monitor_exit(void)
 	secure_monitor_buf.pfbuf = NULL;
 
 	printk("**************flash_secure_remove end!\n");
-	return ret;
+	return;
 }
 
 module_init(secure_monitor_init);
diff --git a/drivers/mmc/card/mmc_storage.c b/drivers/mmc/card/mmc_storage.c
index 645833a5ef9b..bbc04c96c2d2 100644
--- a/drivers/mmc/card/mmc_storage.c
+++ b/drivers/mmc/card/mmc_storage.c
@@ -40,6 +40,7 @@ void print_storage_node_info(void)
 	return;	
 }
 
+#ifdef MMC_STORAGE_DEBUG
 static void show_data_buf(unsigned char *data_buf)
 {
 	int i= 0;
@@ -48,6 +49,7 @@ static void show_data_buf(unsigned char *data_buf)
 	}
 	return;
 }
+#endif
 
 struct mmc_card * storage_device = NULL;
 
@@ -77,7 +79,7 @@ static int check_data(void * cmp)
 	struct mmc_storage_head_t * head = (struct mmc_storage_head_t * )cmp;
 	int ret =0;
 	store_dbg("check_data :head->checksum = %d",head->checksum);
-	if(head->checksum != mmc_checksum(&(head->data[0]),MMC_STORAGE_AREA_VALID_SIZE)){
+	if(head->checksum != mmc_checksum((unsigned char *)&(head->data[0]),MMC_STORAGE_AREA_VALID_SIZE)){
 		ret = -1;
 		store_msg("mmc storage data check_sum failed\n");
 	}
@@ -135,9 +137,9 @@ static int storage_check(struct mmc_card *device, void * buf)
 // direct : 0 read  / 1 write
 int mmc_storage_rw_kernel(struct mmc_card *device, struct storage_node_t * storage_node, unsigned char * databuf, int len, int direct)
 {
-    int ret=0, start_blk, size, force_size,blk_cnt,tmp_size;
+    int ret=0, start_blk, size, force_size;
     int bit = device->csd.read_blkbits;
-    int blk_size = 1 << bit; // size of a block	
+    //int blk_size = 1 << bit; // size of a block	
     
 	mmc_claim_host(device->host);
 
@@ -202,7 +204,7 @@ int mmc_storage_read(struct mmc_card *device, unsigned char * buf, int len)
 	list_for_each_entry(storage_node,&storage_node_list,storage_list){
 		if((storage_node != NULL) && (storage_node->valid_node_flag == 1)){
 			memset((unsigned char *)storage_data,0x0,sizeof(struct mmc_storage_head_t));
-			ret = mmc_storage_rw_kernel(device, storage_node, storage_data, read_len,0);
+			ret = mmc_storage_rw_kernel(device, storage_node, (unsigned char *)storage_data, read_len,0);
 			if(ret){
 				store_msg("storage read failed");
 			}
@@ -223,7 +225,7 @@ int mmc_storage_read(struct mmc_card *device, unsigned char * buf, int len)
 		list_for_each_entry(storage_node,&storage_node_list,storage_list){
 			if((storage_node != NULL) && (storage_node->valid_node_flag == 0)){
 				memset((unsigned char *)storage_data,0x0,sizeof(struct mmc_storage_head_t));
-				ret = mmc_storage_rw_kernel(device, storage_node, storage_data, read_len,0);
+				ret = mmc_storage_rw_kernel(device, storage_node, (unsigned char *)storage_data, read_len,0);
 				if(ret){
 					store_msg("storage read failed");
 				}
@@ -279,7 +281,7 @@ int mmc_storage_write(struct mmc_card *device, unsigned char * buf, int len)
 	
 	init_magic(&storage_data->magic[0]);
 	
-	storage_data->magic_checksum = mmc_checksum(&storage_data->magic[0],MMC_STORAGE_MAGIC_SIZE);
+	storage_data->magic_checksum = mmc_checksum((unsigned char *)&storage_data->magic[0],MMC_STORAGE_MAGIC_SIZE);
 	storage_data->timestamp = 0;
 	storage_data->version = 0;
 	
@@ -288,7 +290,7 @@ int mmc_storage_write(struct mmc_card *device, unsigned char * buf, int len)
 	store_msg("mmc_storage_write : show write buf : ");
 	show_data_buf(&storage_data->data[0]);
 #endif
-	storage_data->checksum = mmc_checksum(&storage_data->data[0],MMC_STORAGE_AREA_VALID_SIZE);
+	storage_data->checksum = mmc_checksum((unsigned char *)&storage_data->data[0],MMC_STORAGE_AREA_VALID_SIZE);
 
 	//show_data_buf(&storage_data);
 	list_for_each_entry(storage_node,&storage_node_list,storage_list){
@@ -300,7 +302,7 @@ int mmc_storage_write(struct mmc_card *device, unsigned char * buf, int len)
 	list_for_each_entry(storage_node,&storage_node_list,storage_list){
 		if((storage_node != NULL) && (part_num < MMC_STORAGE_AREA_COUNT)){
 			write_failed_flag = 0;
-			ret = mmc_storage_rw_kernel(device, storage_node, storage_data, write_len,1);
+			ret = mmc_storage_rw_kernel(device, storage_node, (unsigned char *)storage_data, write_len,1);
 			if(ret){
 				store_msg("storage write part %d failed at %llx",part_num,storage_node->offset_addr );
 				write_failed_flag = 1; 
-- 
2.19.0

