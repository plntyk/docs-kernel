From 6e31ced113524f7fa80b8984c1c965756470ace6 Mon Sep 17 00:00:00 2001
From: xu xing <xing.xu@amlogic.com>
Date: Mon, 25 Aug 2014 20:19:02 +0800
Subject: [PATCH 4803/5965] PD #95953:modify reboot flow for hang up issue when
 power off

Change-Id: I2f016de004d128c215a046ec74884ba40ade7425
---
 arch/arm/kernel/process.c                     | 16 ++-----
 arch/arm/mach-meson6/board-meson6-common.c    |  3 +-
 .../arm/mach-meson6tv/board-meson6tv-common.c |  8 ++--
 .../mach-meson6tvd/board-meson6tvd-common.c   |  8 ++--
 arch/arm/mach-meson8/board-meson8-common.c    |  3 +-
 arch/arm/mach-meson8b/board-meson8b-common.c  |  3 +-
 arch/arm/plat-meson/power.c                   | 43 +++++++++++++++----
 7 files changed, 54 insertions(+), 30 deletions(-)

diff --git a/arch/arm/kernel/process.c b/arch/arm/kernel/process.c
index 82efbf9f546e..7fc30a911730 100755
--- a/arch/arm/kernel/process.c
+++ b/arch/arm/kernel/process.c
@@ -41,13 +41,6 @@
 #include <asm/stacktrace.h>
 #include <asm/mach/time.h>
 
-#if defined (CONFIG_PLAT_MESON)
-#include <asm/cacheflush.h>
-#include <plat/sram.h>
-#include <plat/io.h>
-#endif /* CONFIG_PLAT_MESON */
-#include <mach/system.h>
-#include <mach/register.h>
 
 #ifdef CONFIG_CC_STACKPROTECTOR
 #include <linux/stackprotector.h>
@@ -157,11 +150,10 @@ void soft_restart(unsigned long addr)
 	/* Should never get here. */
 	BUG();
 }
-#if 0
 static void null_restart(char mode, const char *cmd)
 {
 }
-#endif
+#if 0
 void arm_machine_restart(char mode, const char *cmd)
 {
 #if defined (CONFIG_PLAT_MESON) && !defined(CONFIG_ARCH_MESON2)
@@ -220,15 +212,14 @@ void arm_machine_restart(char mode, const char *cmd)
     arch_reset(mode, cmd);
 
 }
-
+#endif
 /*
  * Function pointers to optional machine specific functions
  */
 void (*pm_power_off)(void);
 EXPORT_SYMBOL(pm_power_off);
 
-//void (*arm_pm_restart)(char str, const char *cmd) = null_restart;
-void (*arm_pm_restart)(char str, const char *cmd) = arm_machine_restart;
+void (*arm_pm_restart)(char str, const char *cmd) = null_restart;
 EXPORT_SYMBOL_GPL(arm_pm_restart);
 
 /*
@@ -341,6 +332,7 @@ void machine_power_off(void)
 	local_irq_disable();
 	smp_send_stop();
 
+	arm_machine_flush_console();
 	if (pm_power_off)
 		pm_power_off();
 }
diff --git a/arch/arm/mach-meson6/board-meson6-common.c b/arch/arm/mach-meson6/board-meson6-common.c
index f25f9116e254..6a824ae62f64 100644
--- a/arch/arm/mach-meson6/board-meson6-common.c
+++ b/arch/arm/mach-meson6/board-meson6-common.c
@@ -45,6 +45,7 @@
 
 #include <linux/of_fdt.h>
 #include <linux/amlogic/vmapi.h>
+extern void meson_common_restart(char mode,const char *cmd);
 static void meson_map_board_io(void);
 extern unsigned long long aml_reserved_start;
 extern unsigned long long aml_reserved_end;
@@ -185,6 +186,6 @@ DT_MACHINE_START(AML8726_MX, "Amlogic Meson6")
 	.init_time		= meson_timer_init, /// dt - 4
 //	.handle_irq	= gic_handle_irq,
 	.init_machine	= meson_init_machine_devicetree,
-//.restart	= 
+	.restart	= meson_common_restart,
 	.dt_compat	= m6_common_board_compat,
 MACHINE_END
diff --git a/arch/arm/mach-meson6tv/board-meson6tv-common.c b/arch/arm/mach-meson6tv/board-meson6tv-common.c
index 33c4fe46338b..0c630890c507 100755
--- a/arch/arm/mach-meson6tv/board-meson6tv-common.c
+++ b/arch/arm/mach-meson6tv/board-meson6tv-common.c
@@ -40,6 +40,7 @@
 
 #include "common.h"
 
+extern void meson_common_restart(char mode,const char *cmd);
 extern unsigned long long aml_reserved_start;
 extern unsigned long long aml_reserved_end;
 
@@ -88,13 +89,13 @@ static struct of_device_id mxs_of_lm_bus_ids[] = {
 	{},
 };
 #endif
-
+#if 0
 static void meson6tv_power_off(void)
 {
 	printk("triggering power off\n");
 	kernel_restart("charging_reboot");
 }
-
+#endif
 static void __init meson6tv_dt_init_machine(void)
 {
 	struct device *parent;
@@ -107,7 +108,7 @@ static void __init meson6tv_dt_init_machine(void)
 
 	//of_platform_populate(NULL, of_default_bus_match_table,
 	//aml_meson6_auxdata_lookup, NULL);
-	pm_power_off = meson6tv_power_off;
+	//pm_power_off = meson6tv_power_off;
 }
 
 static const char __initdata *m6tv_common_boards_compat[] = {
@@ -125,5 +126,6 @@ DT_MACHINE_START(AML8726_MX, "Amlogic Meson6TV")
 	.init_time	= meson6tv_timer_init,	// dt - 4
 	.init_machine	= meson6tv_dt_init_machine,
 	.dt_compat	= m6tv_common_boards_compat,
+	.restart    = meson_common_restart,
 MACHINE_END
 
diff --git a/arch/arm/mach-meson6tvd/board-meson6tvd-common.c b/arch/arm/mach-meson6tvd/board-meson6tvd-common.c
index 45d1b9b86f3e..385077cb3777 100755
--- a/arch/arm/mach-meson6tvd/board-meson6tvd-common.c
+++ b/arch/arm/mach-meson6tvd/board-meson6tvd-common.c
@@ -39,6 +39,7 @@
 
 #include "common.h"
 
+extern void meson_common_restart(char mode,const char *cmd);
 extern unsigned long long aml_reserved_start;
 extern unsigned long long aml_reserved_end;
 
@@ -83,13 +84,13 @@ static struct of_device_id mxs_of_lm_bus_ids[] = {
 	{.compatible = "logicmodule-bus",},
 	{},
 };
-
+#if 0
 static void meson6tv_power_off(void)
 {
 	printk("triggering power off\n");
 	kernel_restart("charging_reboot");
 }
-
+#endif
 static void __init meson6tv_dt_init_machine(void)
 {
 	struct device *parent;
@@ -102,7 +103,7 @@ static void __init meson6tv_dt_init_machine(void)
 
 	//of_platform_populate(NULL, of_default_bus_match_table,
 	//aml_meson6_auxdata_lookup, NULL);
-	pm_power_off = meson6tv_power_off;
+	//pm_power_off = meson6tv_power_off;
 }
 
 static const char __initdata *m6tv_common_boards_compat[] = {
@@ -120,5 +121,6 @@ DT_MACHINE_START(AML8726_MX, "Amlogic Meson6TVD")
 	.init_time	= meson6tv_timer_init,	// dt - 4
 	.init_machine	= meson6tv_dt_init_machine,
 	.dt_compat	= m6tv_common_boards_compat,
+	.restart	= meson_common_restart,
 MACHINE_END
 
diff --git a/arch/arm/mach-meson8/board-meson8-common.c b/arch/arm/mach-meson8/board-meson8-common.c
index 1ce76c1be1ee..d702b76e4632 100755
--- a/arch/arm/mach-meson8/board-meson8-common.c
+++ b/arch/arm/mach-meson8/board-meson8-common.c
@@ -48,6 +48,7 @@
 #include <linux/of_fdt.h>
 #include <linux/amlogic/vmapi.h>
 
+extern void meson_common_restart(char mode,const char *cmd);
 static void meson_map_board_io(void);
 extern unsigned long long aml_reserved_start;
 extern unsigned long long aml_reserved_end;
@@ -144,6 +145,6 @@ DT_MACHINE_START(AML8726_M8, "Amlogic Meson8")
 	.init_time		= meson_timer_init, /// dt - 4
 //	.handle_irq	= gic_handle_irq,
 	.init_machine	= meson_init_machine_devicetree,
-//.restart	= 
+	.restart	= meson_common_restart,
 	.dt_compat	= m8_common_board_compat,
 MACHINE_END
diff --git a/arch/arm/mach-meson8b/board-meson8b-common.c b/arch/arm/mach-meson8b/board-meson8b-common.c
index e4a120b05d06..a5597b136510 100755
--- a/arch/arm/mach-meson8b/board-meson8b-common.c
+++ b/arch/arm/mach-meson8b/board-meson8b-common.c
@@ -47,6 +47,7 @@
 
 #include <linux/amlogic/vmapi.h>
 
+extern void meson_common_restart(char mode,const char *cmd);
 static void meson_map_board_io(void);
 extern unsigned long long aml_reserved_start;
 extern unsigned long long aml_reserved_end;
@@ -142,6 +143,6 @@ DT_MACHINE_START(AML8726_M8, "Amlogic Meson8B")
 	.init_time		= meson_timer_init, /// dt - 4
 //	.handle_irq	= gic_handle_irq,
 	.init_machine	= meson_init_machine_devicetree,
-//.restart	= 
+	.restart	= meson_common_restart,
 	.dt_compat	= m8_common_board_compat,
 MACHINE_END
diff --git a/arch/arm/plat-meson/power.c b/arch/arm/plat-meson/power.c
index 34709c3abe63..e73df57502d3 100644
--- a/arch/arm/plat-meson/power.c
+++ b/arch/arm/plat-meson/power.c
@@ -22,7 +22,8 @@
 #include <linux/sched.h>
 #include <linux/tboot.h>
 #include <linux/delay.h>
-
+#include <asm/proc-fns.h>
+#include <mach/system.h>
 /*
  * These are system power hooks to implement power down policy
  * pls add rule and policy notes 
@@ -36,7 +37,33 @@
  *
  *
  */
-
+void meson_common_restart(char mode,const char *cmd)
+{
+    u32 reboot_reason = MESON_NORMAL_BOOT;
+    if (cmd) {
+        if (strcmp(cmd, "charging_reboot") == 0)
+            reboot_reason = MESON_CHARGING_REBOOT;
+        else if (strcmp(cmd, "recovery") == 0 || strcmp(cmd, "factory_reset") == 0)
+            reboot_reason = MESON_FACTORY_RESET_REBOOT;
+        else if (strcmp(cmd, "update") == 0)
+            reboot_reason = MESON_UPDATE_REBOOT;
+        else if (strcmp(cmd, "report_crash") == 0)
+            reboot_reason = MESON_CRASH_REBOOT;
+        else if (strcmp(cmd, "factory_testl_reboot") == 0)
+            reboot_reason = MESON_FACTORY_TEST_REBOOT;
+        else if (strcmp(cmd, "switch_system") == 0)
+            reboot_reason = MESON_SYSTEM_SWITCH_REBOOT;
+        else if (strcmp(cmd, "safe_mode") == 0)
+            reboot_reason = MESON_SAFE_REBOOT;
+        else if (strcmp(cmd, "lock_system") == 0)
+            reboot_reason = MESON_LOCK_REBOOT;
+        else if (strcmp(cmd, "usb_burner_reboot") == 0)
+            reboot_reason = MESON_USB_BURNER_REBOOT;
+	}
+    aml_write_reg32(P_AO_RTI_STATUS_REG1, reboot_reason);
+    printk("reboot_reason(0x%x) = 0x%x\n", P_AO_RTI_STATUS_REG1, aml_read_reg32(P_AO_RTI_STATUS_REG1));
+	arch_reset(mode,cmd);
+}
 void meson_power_off_prepare(void)
 {
 	printk("meson prepare power off \n");
@@ -44,8 +71,8 @@ void meson_power_off_prepare(void)
 
 void meson_power_off(void)
 {
-        printk("meson power off \n");
-	kernel_restart("charging_reboot");
+	printk("meson power off \n");
+	meson_common_restart('h',"charging_reboot");
 }
 
 void meson_power_idle(void)
@@ -55,11 +82,9 @@ void meson_power_idle(void)
 
 static int __init meson_reboot_setup(void)
 {
-        pm_power_off_prepare = meson_power_off_prepare;
-        pm_power_off = meson_power_off;
+	pm_power_off_prepare = meson_power_off_prepare;
+	pm_power_off = meson_power_off;
 //	pm_idle = meson_power_idle;
-        return 0;
+	return 0;
 }
-
 arch_initcall(meson_reboot_setup);
-
-- 
2.19.0

