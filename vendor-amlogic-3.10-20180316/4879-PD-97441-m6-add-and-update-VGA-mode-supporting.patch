From c33b090d6a4375980fd2058267ec28600ca2003d Mon Sep 17 00:00:00 2001
From: Evoke Zhang <evoke.zhang@amlogic.com>
Date: Mon, 15 Sep 2014 10:47:12 +0800
Subject: [PATCH 4879/5965] PD#97441: m6: add and update VGA mode supporting

Change-Id: I9b25cab5b4610aa571e00a5b232fa67d1cf9010f
---
 arch/arm/mach-meson6/include/mach/tvregs.h    | 668 ++++++++++++------
 drivers/amlogic/display/vout/enc_clk_config.c |  22 +-
 drivers/amlogic/display/vout/tvconf.c         |  28 +-
 drivers/amlogic/display/vout/tvmode.h         |   2 +
 drivers/amlogic/display/vout/tvoutc.c         |  12 +-
 include/linux/amlogic/vout/vinfo.h            |  10 +-
 6 files changed, 510 insertions(+), 232 deletions(-)

diff --git a/arch/arm/mach-meson6/include/mach/tvregs.h b/arch/arm/mach-meson6/include/mach/tvregs.h
index a98422c2fa10..887a0f089e16 100755
--- a/arch/arm/mach-meson6/include/mach/tvregs.h
+++ b/arch/arm/mach-meson6/include/mach/tvregs.h
@@ -1007,261 +1007,475 @@ static const reg_t tvregs_1080p_24hz[] = {
     {MREG_END_MARKER,            0      }
 };
 
+static const reg_t tvregs_4k2k_30hz[] = {{MREG_END_MARKER,   0},};
+static const reg_t tvregs_4k2k_25hz[] = {{MREG_END_MARKER,   0},};
+static const reg_t tvregs_4k2k_24hz[] = {{MREG_END_MARKER,   0},};
+static const reg_t tvregs_4k2k_smpte[] = {{MREG_END_MARKER,   0},};
+
 static const reg_t tvregs_vga_640x480[] = { // 25.17mhz 800 *525
-     {VENC_VDAC_SETTING,          0xff,  },
+    {VENC_VDAC_SETTING,          0xff,      },
+    {ENCI_VIDEO_EN,              0,         },
+    {ENCP_VIDEO_EN,              0,         },
+
     {HHI_VID_CLK_CNTL,           0x0,       },
-    {HHI_VID_PLL_CNTL,           0x2001042d,},
+    {HHI_VID_PLL_CNTL,           0x2001042a,},
     {HHI_VID_PLL_CNTL2,          0x814d3928,},
-    {HHI_VID_PLL_CNTL3,          0x6b425012,    },
-    {HHI_VID_PLL_CNTL4,          0x110},
-    {HHI_VID_PLL_CNTL,           0x0001042a,},//50
-
-    {HHI_VID_DIVIDER_CNTL,       0x00011943,},
-    {HHI_VID_CLK_DIV,            0x100},
-    {HHI_VID_CLK_CNTL,           0x80000,},
-    {HHI_VID_CLK_CNTL,           0x88001,},
-    {HHI_VID_CLK_CNTL,           0x80003,},
-    {HHI_VIID_CLK_DIV,           0x00000101,},
-    {ENCP_VIDEO_FILT_CTRL,       0x1052,},
-    //{HHI_VID_CLK_DIV,            0x01000100,},
-    {ENCP_VIDEO_FILT_CTRL,       0x2052,},
-    {VENC_DVI_SETTING,           0x21,  },
-    {ENCP_VIDEO_MODE,            0,     },
-    {ENCP_VIDEO_MODE_ADV,        0x009,     },
-    {ENCP_VIDEO_YFP1_HTIME,      244,   },
-    {ENCP_VIDEO_YFP2_HTIME,      1630,  },
-    {ENCP_VIDEO_YC_DLY,          0,     },
-    {ENCP_VIDEO_MAX_PXCNT,       1599,  },
+    {HHI_VID_PLL_CNTL3,          0x6b425012,},
+    {HHI_VID_PLL_CNTL4,          0x110,     },
+    {HHI_VID_PLL_CNTL,           0x0001042a,},
+    {HHI_VID_DIVIDER_CNTL,       0x00010803,},
+    {HHI_VID_CLK_DIV,            0x13,      },
+    {HHI_VID_CLK_CNTL,           0x80000,   },
+    {HHI_VID_CLK_CNTL,           0x88001,   },
+    {HHI_VID_CLK_CNTL,           0x80003,   },
+    {HHI_VIID_CLK_DIV,           0x0,       },
+
+    {ENCP_VIDEO_FILT_CTRL,       0x1000,}, //bypass filter
+    {VENC_DVI_SETTING,           0x0001,}, //bit[3:2]:invert Vsync/Hsync polarity //bit[0]:sync source select(1:progressive 0:interlace)
+    {ENCP_VIDEO_MODE,            0x0,   },
+    {ENCP_VIDEO_MODE_ADV,        0x3808,}, //bit6:swap PbPr; //bit4:YPbPr gain as HDTV type; //bit[0]:sampling rate(0:1, 1:1/2, 2:1/4, 3:1/8)
+
+    {ENCP_VIDEO_YFP1_HTIME,      144,   },
+    {ENCP_VIDEO_YFP2_HTIME,      144+640,  },
+    {ENCP_VIDEO_MAX_PXCNT,       800,   },
     {ENCP_VIDEO_MAX_LNCNT,       525,   },
-    {ENCP_VIDEO_HSPULS_BEGIN,    0x60,  },
-    {ENCP_VIDEO_HSPULS_END,      0xa0,  },
-    {ENCP_VIDEO_HSPULS_SWITCH,   88,    },
-    {ENCP_VIDEO_VSPULS_BEGIN,    0,     },
-    {ENCP_VIDEO_VSPULS_END,      1589   },
-    {ENCP_VIDEO_VSPULS_BLINE,    0,     },
-    {ENCP_VIDEO_VSPULS_ELINE,    5,     },
-    {ENCP_VIDEO_HAVON_BEGIN,     153,   },
-    {ENCP_VIDEO_HAVON_END,       1433,  },
-    {ENCP_VIDEO_VAVON_BLINE,     59,    },
-    {ENCP_VIDEO_VAVON_ELINE,     540,   },
-    {ENCP_VIDEO_SYNC_MODE,       0x07,  },
-    {VENC_VIDEO_PROG_MODE,       0x100,   },
-    {VENC_VIDEO_EXSRC,           0x0,   },
-    {ENCP_VIDEO_HSO_BEGIN,       0x3,   },
-    {ENCP_VIDEO_HSO_END,         0x5,   },
-    {ENCP_VIDEO_VSO_BEGIN,       0x3,   },
-    {ENCP_VIDEO_VSO_END,         0x5,   },
-    {ENCP_VIDEO_VSO_BLINE,       0,     },
+    {ENCP_VIDEO_HAVON_BEGIN,     144,   },
+    {ENCP_VIDEO_HAVON_END,       144+640-1,  },
+    {ENCP_VIDEO_VAVON_BLINE,     35,    },
+    {ENCP_VIDEO_VAVON_ELINE,     35+480-1,   },
+    {ENCP_DVI_HSO_BEGIN,         16,     },
+    {ENCP_DVI_HSO_END,           96,    },
+    {ENCP_DVI_VSO_BLINE_EVN,     0,     },
+    {ENCP_DVI_VSO_BLINE_ODD,     0,     },
+    {ENCP_DVI_VSO_ELINE_EVN,     2,     },
+    {ENCP_DVI_VSO_ELINE_ODD,     2,     },
+    {ENCP_DVI_VSO_BEGIN_EVN,     0,     },
+    {ENCP_DVI_VSO_BEGIN_ODD,     0,     },
+    {ENCP_DVI_VSO_END_EVN,       0,     },
+    {ENCP_DVI_VSO_END_ODD,       0,     },
+
+    {VENC_VIDEO_PROG_MODE,       0x100, }, //bit[8]:set for Progressive mode(1:progressive 0:interlace)
+    {ENCP_VIDEO_SYNC_MODE,       0x07,  }, //master mode
+    {ENCP_VIDEO_RGB_CTRL,        0,     }, //disable sync on B
+    {ENCP_VIDEO_YC_DLY,          0,     },
     {ENCP_VIDEO_SY_VAL,          8,     },
     {ENCP_VIDEO_SY2_VAL,         0x1d8, },
+    {ENCP_VFIFO2VD_CTL,          0,     },
     {VENC_SYNC_ROUTE,            0,     },
     {VENC_INTCTRL,               0x200, },
-    {ENCP_VFIFO2VD_CTL,               0,     },
-    {VENC_VDAC_SETTING,          0,     },
-    /////////////////////////////
-    {ENCP_VIDEO_RGB_CTRL,		 0,},
-    {VENC_UPSAMPLE_CTRL0,        0xc061,},
-    {VENC_UPSAMPLE_CTRL1,        0xd061,},
-    {VENC_UPSAMPLE_CTRL2,        0xe061,},
-    {VENC_VDAC_DACSEL0,          0xf003,},
-    {VENC_VDAC_DACSEL1,          0xf003,},
-    {VENC_VDAC_DACSEL2,          0xf003,},
-    {VENC_VDAC_DACSEL3,          0xf003,},
-    {VENC_VDAC_DACSEL4,          0xf003,},
-    {VENC_VDAC_DACSEL5,          0xf003,},
     {VPU_VIU_VENC_MUX_CTRL,      0x000a,},
-    {VENC_VDAC_FIFO_CTRL,        0x1fc0,},
+
+    {VENC_VDAC_SETTING,          0,     },
+    {VENC_UPSAMPLE_CTRL0,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL1,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL2,        0x0,   },//0xc061
+    {VENC_VDAC_DACSEL0,          0x0001,},//bit[15:12]delay //bit[1]enable upsamping //bit[0]output from ENCP(1) or ENCI(0)
+    {VENC_VDAC_DACSEL1,          0x0001,},
+    {VENC_VDAC_DACSEL2,          0x0001,},
+    {VENC_VDAC_FIFO_CTRL,        0x1000,},//bit[12]enable_encp //bit[11:6]DAC_clock_2X
     {ENCP_DACSEL_0,              0x0543,},
     {ENCP_DACSEL_1,              0x0000,},
+    {VENC_VDAC_DAC0_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC0_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC1_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC1_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC2_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC2_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC0_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC1_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC2_FILT_CTRL0,  0x0,   },
 
-    {ENCI_VIDEO_EN,              0      },
-    {ENCP_VIDEO_EN,              1      },
-    {MREG_END_MARKER,            0      }
-/////////////////////////////////////
+    {ENCI_VIDEO_EN,              0,     },
+    {ENCP_VIDEO_EN,              1,     },
+    {MREG_END_MARKER,            0,     }
 };
 static const reg_t tvregs_svga_800x600[]={ //39.5mhz 1056 *628
-    {VENC_VDAC_SETTING,          0xff,  },
-    {HHI_VID_CLK_CNTL,           0x0,},
-    {HHI_VID_PLL_CNTL2,          0x814d3928},
-    {HHI_VID_PLL_CNTL3,          0x6b425012},
-    {HHI_VID_PLL_CNTL4,          0x110},
-    {HHI_VID_PLL_CNTL,           0x00010422,},//79
-    {HHI_VID_DIVIDER_CNTL,       0x00010843,},
-    {HHI_VID_CLK_DIV,            0x100},
-    {HHI_VID_CLK_CNTL,           0x80000,},
-    {HHI_VID_CLK_CNTL,           0x88001,},
-    {HHI_VID_CLK_CNTL,           0x80003,},
-    {HHI_VIID_CLK_DIV,           0x00000101,},
-    {ENCP_VIDEO_FILT_CTRL,       0x0052,},
-    {VENC_DVI_SETTING,           0x2029,},
-    {ENCP_VIDEO_MODE,            0x0040,},
-    {ENCP_VIDEO_MODE_ADV,        0x0019,},
-    {ENCP_VIDEO_YFP1_HTIME,      500,   },
-    {ENCP_VIDEO_YFP2_HTIME,      2112,  },
-    {ENCP_VIDEO_MAX_PXCNT,       2111,  },
-    {ENCP_VIDEO_MAX_LNCNT,       628,   },//628
-    {ENCP_VIDEO_HSPULS_BEGIN,    0,    },
-    {ENCP_VIDEO_HSPULS_END,      230,   },
-    {ENCP_VIDEO_HSPULS_SWITCH,   80,    },
-    {ENCP_VIDEO_VSPULS_BEGIN,    0x58,   },
-    {ENCP_VIDEO_VSPULS_END,      0x80,  },
-    {ENCP_VIDEO_VSPULS_BLINE,    0,     },
-    {ENCP_VIDEO_VSPULS_ELINE,    5,     },
-    {ENCP_VIDEO_EQPULS_BLINE,    0,     },
-    {ENCP_VIDEO_EQPULS_ELINE,    5,     },
-    {ENCP_VIDEO_HAVON_BEGIN,     267,   },//59
-    {ENCP_VIDEO_HAVON_END,       1866,  },//1659
-    {ENCP_VIDEO_VAVON_BLINE,    59,    },//59
-    {ENCP_VIDEO_VAVON_ELINE,     658,   },//659
-    {ENCP_VIDEO_HSO_BEGIN,       0,    },
-    {ENCP_VIDEO_HSO_END,         260,   },
-    {ENCP_VIDEO_VSO_BEGIN,       0,   },
-    {ENCP_VIDEO_VSO_END,         2200,   },
-    {ENCP_VIDEO_VSO_BLINE,       0,     },
-    {ENCP_VIDEO_VSO_ELINE,       5,     },
-    {VENC_VIDEO_PROG_MODE,       0x100, },
-    {VENC_VIDEO_EXSRC,           0x0,   },
-    {ENCP_VIDEO_HSO_BEGIN,       0x3,   },
-    {ENCP_VIDEO_HSO_END,         0x5,   },
-    {ENCP_VIDEO_VSO_BEGIN,       0x3,   },
-    {ENCP_VIDEO_VSO_END,         0x5,   },
-    {ENCP_VIDEO_VSO_BLINE,       0,     },
+    {VENC_VDAC_SETTING,          0xff,      },
+    {ENCI_VIDEO_EN,              0          },
+    {ENCP_VIDEO_EN,              0          },
+
+    {HHI_VID_CLK_CNTL,           0x0,       },
+    {HHI_VID_PLL_CNTL,           0x20010421,},
+    {HHI_VID_PLL_CNTL2,          0x814d3928,},
+    {HHI_VID_PLL_CNTL3,          0x6b425012,},
+    {HHI_VID_PLL_CNTL4,          0x110,     },
+    {HHI_VID_PLL_CNTL,           0x00010421,},
+    {HHI_VID_DIVIDER_CNTL,       0x00010803,},
+    {HHI_VID_CLK_DIV,            0x9,       },
+    {HHI_VID_CLK_CNTL,           0x80000,   },
+    {HHI_VID_CLK_CNTL,           0x88001,   },
+    {HHI_VID_CLK_CNTL,           0x80003,   },
+    {HHI_VIID_CLK_DIV,           0x0,       },
+
+    {ENCP_VIDEO_FILT_CTRL,       0x1000,}, //bypass filter
+    {VENC_DVI_SETTING,           0x0001,}, //bit[3:2]:invert Vsync/Hsync polarity //bit[0]:sync source select(1:progressive 0:interlace)
+    {ENCP_VIDEO_MODE,            0x0,   },
+    {ENCP_VIDEO_MODE_ADV,        0x3808,}, //bit6:swap PbPr; //bit4:YPbPr gain as HDTV type; //bit[0]:sampling rate(0:1, 1:1/2, 2:1/4, 3:1/8)
+
+    {ENCP_VIDEO_YFP1_HTIME,      216,   },
+    {ENCP_VIDEO_YFP2_HTIME,      216+800,  },
+    {ENCP_VIDEO_MAX_PXCNT,       1056,  },
+    {ENCP_VIDEO_MAX_LNCNT,       628,   },
+    {ENCP_VIDEO_HAVON_BEGIN,     216,   },
+    {ENCP_VIDEO_HAVON_END,       216+800-1,  },
+    {ENCP_VIDEO_VAVON_BLINE,     27,    },
+    {ENCP_VIDEO_VAVON_ELINE,     27+600-1,   },
+    {ENCP_DVI_HSO_BEGIN,         26,    },
+    {ENCP_DVI_HSO_END,           72,    },
+    {ENCP_DVI_VSO_BLINE_EVN,     0,     },
+    {ENCP_DVI_VSO_BLINE_ODD,     0,     },
+    {ENCP_DVI_VSO_ELINE_EVN,     2,     },
+    {ENCP_DVI_VSO_ELINE_ODD,     2,     },
+    {ENCP_DVI_VSO_BEGIN_EVN,     0,     },
+    {ENCP_DVI_VSO_BEGIN_ODD,     0,     },
+    {ENCP_DVI_VSO_END_EVN,       0,     },
+    {ENCP_DVI_VSO_END_ODD,       0,     },
+
+    {VENC_VIDEO_PROG_MODE,       0x100, },  //bit[8]:set for Progressive mode(1:progressive 0:interlace)
+    {ENCP_VIDEO_SYNC_MODE,       0x07,  }, //master mode
+    {ENCP_VIDEO_RGB_CTRL,        0,     }, //disable sync on B
+    {ENCP_VIDEO_YC_DLY,          0,     },
     {ENCP_VIDEO_SY_VAL,          8,     },
     {ENCP_VIDEO_SY2_VAL,         0x1d8, },
+    {ENCP_VFIFO2VD_CTL,          0,     },
     {VENC_SYNC_ROUTE,            0,     },
     {VENC_INTCTRL,               0x200, },
-    {ENCP_VFIFO2VD_CTL,               0,     },
-    {VENC_VDAC_SETTING,          0,     },
-    //////////////////////////
-    {ENCP_VIDEO_RGB_CTRL,		 0,},
-    {VENC_UPSAMPLE_CTRL0,        0xc061,},
-    {VENC_UPSAMPLE_CTRL1,        0xd061,},
-    {VENC_UPSAMPLE_CTRL2,        0xe061,},
-    {VENC_VDAC_DACSEL0,          0xf003,},
-    {VENC_VDAC_DACSEL1,          0xf003,},
-    {VENC_VDAC_DACSEL2,          0xf003,},
-    {VENC_VDAC_DACSEL3,          0xf003,},
-    {VENC_VDAC_DACSEL4,          0xf003,},
-    {VENC_VDAC_DACSEL5,          0xf003,},
     {VPU_VIU_VENC_MUX_CTRL,      0x000a,},
-    {VENC_VDAC_FIFO_CTRL,        0x1fc0,},
+
+    {VENC_VDAC_SETTING,          0,     },
+    {VENC_UPSAMPLE_CTRL0,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL1,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL2,        0x0,   },//0xc061
+    {VENC_VDAC_DACSEL0,          0x0001,},//bit[15:12]delay //bit[1]enable upsamping //bit[0]output from ENCP(1) or ENCI(0)
+    {VENC_VDAC_DACSEL1,          0x0001,},
+    {VENC_VDAC_DACSEL2,          0x0001,},
+    {VENC_VDAC_FIFO_CTRL,        0x1000,},//bit[12]enable_encp //bit[11:6]DAC_clock_2X
     {ENCP_DACSEL_0,              0x0543,},
     {ENCP_DACSEL_1,              0x0000,},
+    {VENC_VDAC_DAC0_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC0_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC1_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC1_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC2_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC2_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC0_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC1_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC2_FILT_CTRL0,  0x0,   },
+
     {ENCI_VIDEO_EN,              0      },
     {ENCP_VIDEO_EN,              1      },
     {MREG_END_MARKER,            0      }
-	//////////////////////////////
  };
 static const reg_t tvregs_xga_1024x768[] = {
-   /* {VENC_VDAC_SETTING,          0xff,  },
-    {HHI_VID_CLK_CNTL,           0x0,},
-    {HHI_VID_PLL_CNTL2,          0x814d3928},
-    {HHI_VID_PLL_CNTL3,          0x6b425012},
-    {HHI_VID_PLL_CNTL4,          0x110},
-    {HHI_VID_PLL_CNTL,           0x0001043e,},
-    {HHI_VID_DIVIDER_CNTL,       0x00010843,},
-    {HHI_VID_CLK_DIV,            0x100},
-    {HHI_VID_CLK_CNTL,           0x80000,},
-    {HHI_VID_CLK_CNTL,           0x88001,},
-    {HHI_VID_CLK_CNTL,           0x80003,},
-    {HHI_VIID_CLK_DIV,           0x00000101,},
-    {ENCP_VIDEO_FILT_CTRL,       0x0052,},
-    {VENC_DVI_SETTING,           0x2029,},
-    {ENCP_VIDEO_MODE,            0x0040,},
-    {ENCP_VIDEO_MODE_ADV,        0x0009,},
-    {ENCP_VIDEO_YFP1_HTIME,      500,   },
-    {ENCP_VIDEO_YFP2_HTIME,      2500,  },
-    {ENCP_VIDEO_MAX_PXCNT,       2531,  },
-    {ENCP_VIDEO_MAX_LNCNT,       804,   },
-    {ENCP_VIDEO_HSPULS_BEGIN,    0,    },
-    {ENCP_VIDEO_HSPULS_END,      230,   },
-    {ENCP_VIDEO_HSPULS_SWITCH,   80,    },
-    {ENCP_VIDEO_VSPULS_BEGIN,    0x22,   },
-    {ENCP_VIDEO_VSPULS_END,      0xa0,  },
-    {ENCP_VIDEO_VSPULS_BLINE,    0,     },
-    {ENCP_VIDEO_VSPULS_ELINE,    5,     },
-    {ENCP_VIDEO_EQPULS_BLINE,    0,     },
-    {ENCP_VIDEO_EQPULS_ELINE,    5,     },
-    {ENCP_VIDEO_HAVON_BEGIN,     59,   },
-    {ENCP_VIDEO_HAVON_END,       2106,  },
-    {ENCP_VIDEO_VAVON_BLINE,     59,    },
-    {ENCP_VIDEO_VAVON_ELINE,     827,   },//827
-    {ENCP_VIDEO_HSO_BEGIN,       0,    },
-    {ENCP_VIDEO_HSO_END,         260,   },
-    {ENCP_VIDEO_VSO_BEGIN,       0,   },
-    {ENCP_VIDEO_VSO_END,         2200,   },
-    {ENCP_VIDEO_VSO_BLINE,       0,     },
-    {ENCP_VIDEO_VSO_ELINE,       5,     },
-    {VENC_VIDEO_PROG_MODE,       0x100, },
+    {VENC_VDAC_SETTING,          0xff,      },
+    {ENCI_VIDEO_EN,              0,         },
+    {ENCP_VIDEO_EN,              0,         },
+
+    {HHI_VID_CLK_CNTL,           0x0,       },
+    {HHI_VID_PLL_CNTL,           0x20010841,},
+    {HHI_VID_PLL_CNTL2,          0x814d3928,},
+    {HHI_VID_PLL_CNTL3,          0x6b425012,},
+    {HHI_VID_PLL_CNTL4,          0x110,     },
+    {HHI_VID_PLL_CNTL,           0x00010841,},
+    {HHI_VID_DIVIDER_CNTL,       0x00010823,},
+    {HHI_VID_CLK_DIV,            0x1,       },
+    {HHI_VID_CLK_CNTL,           0x80000,   },
+    {HHI_VID_CLK_CNTL,           0x88001,   },
+    {HHI_VID_CLK_CNTL,           0x80003,   },
+    {HHI_VIID_CLK_DIV,           0x0,       },
+
+    {ENCP_VIDEO_FILT_CTRL,       0x1000,}, //bypass filter
+    {VENC_DVI_SETTING,           0x0001,}, //bit[3:2]:invert Vsync/Hsync polarity //bit[0]:sync source select(1:progressive 0:interlace)
+    {ENCP_VIDEO_MODE,            0x0,   },
+    {ENCP_VIDEO_MODE_ADV,        0x3808,}, //bit6:swap PbPr; //bit4:YPbPr gain as HDTV type; //bit[0]:sampling rate(0:1, 1:1/2, 2:1/4, 3:1/8)
+
+    {ENCP_VIDEO_YFP1_HTIME,      296,   },
+    {ENCP_VIDEO_YFP2_HTIME,      296+1024,  },
+    {ENCP_VIDEO_MAX_PXCNT,       1344,   },
+    {ENCP_VIDEO_MAX_LNCNT,       806,   },
+    {ENCP_VIDEO_HAVON_BEGIN,     296,   },
+    {ENCP_VIDEO_HAVON_END,       296+1024-1,  },
+    {ENCP_VIDEO_VAVON_BLINE,     35,    },
+    {ENCP_VIDEO_VAVON_ELINE,     35+768-1,   },
+    {ENCP_DVI_HSO_BEGIN,         32,     },
+    {ENCP_DVI_HSO_END,           136,    },
+    {ENCP_DVI_VSO_BLINE_EVN,     0,     },
+    {ENCP_DVI_VSO_BLINE_ODD,     0,     },
+    {ENCP_DVI_VSO_ELINE_EVN,     6,     },
+    {ENCP_DVI_VSO_ELINE_ODD,     6,     },
+    {ENCP_DVI_VSO_BEGIN_EVN,     0,     },
+    {ENCP_DVI_VSO_BEGIN_ODD,     0,     },
+    {ENCP_DVI_VSO_END_EVN,       0,     },
+    {ENCP_DVI_VSO_END_ODD,       0,     },
+
+    {VENC_VIDEO_PROG_MODE,       0x100, }, //bit[8]:set for Progressive mode(1:progressive 0:interlace)
+    {ENCP_VIDEO_SYNC_MODE,       0x07,  }, //master mode
+    {ENCP_VIDEO_RGB_CTRL,        0,     }, //disable sync on B
+    {ENCP_VIDEO_YC_DLY,          0,     },
+    {ENCP_VIDEO_SY_VAL,          8,     },
+    {ENCP_VIDEO_SY2_VAL,         0x1d8, },
+    {ENCP_VFIFO2VD_CTL,          0,     },
     {VENC_SYNC_ROUTE,            0,     },
     {VENC_INTCTRL,               0x200, },
-    {ENCP_VFIFO2VD_CTL,               0,     },
+    {VPU_VIU_VENC_MUX_CTRL,      0x000a,},
+
     {VENC_VDAC_SETTING,          0,     },
-    */
-    {VENC_VDAC_SETTING,          0xff,  },
-    {HHI_VID_CLK_CNTL,           0x0,},
-    {HHI_VID_PLL_CNTL2,          0x814d3928},
-    {HHI_VID_PLL_CNTL3,          0x6b425012},
-    {HHI_VID_PLL_CNTL4,          0x110},
-    {HHI_VID_PLL_CNTL,           0x00010436,},
+    {VENC_UPSAMPLE_CTRL0,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL1,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL2,        0x0,   },//0xc061
+    {VENC_VDAC_DACSEL0,          0x0001,},//bit[15:12]delay //bit[1]enable upsamping //bit[0]output from ENCP(1) or ENCI(0)
+    {VENC_VDAC_DACSEL1,          0x0001,},
+    {VENC_VDAC_DACSEL2,          0x0001,},
+    {VENC_VDAC_FIFO_CTRL,        0x1000,},//bit[12]enable_encp //bit[11:6]DAC_clock_2X
+    {ENCP_DACSEL_0,              0x0543,},
+    {ENCP_DACSEL_1,              0x0000,},
+    {VENC_VDAC_DAC0_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC0_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC1_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC1_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC2_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC2_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC0_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC1_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC2_FILT_CTRL0,  0x0,   },
+
+    {ENCI_VIDEO_EN,              0,     },
+    {ENCP_VIDEO_EN,              1,     },
+    {MREG_END_MARKER,            0,     }
+};
+
+static const reg_t tvregs_sxga_1280x1024[] = {
+    {VENC_VDAC_SETTING,          0xff,      },
+    {ENCI_VIDEO_EN,              0,         },
+    {ENCP_VIDEO_EN,              0,         },
+
+    {HHI_VID_CLK_CNTL,           0x0,       },
+    {HHI_VID_PLL_CNTL,           0x20010424,},
+    {HHI_VID_PLL_CNTL2,          0x814d3928,},
+    {HHI_VID_PLL_CNTL3,          0x6b425012,},
+    {HHI_VID_PLL_CNTL4,          0x110,     },
+    {HHI_VID_PLL_CNTL,           0x00010424,},
+    {HHI_VID_DIVIDER_CNTL,       0x00010803,},
+    {HHI_VID_CLK_DIV,            0x3,      },
+    {HHI_VID_CLK_CNTL,           0x80000,   },
+    {HHI_VID_CLK_CNTL,           0x88001,   },
+    {HHI_VID_CLK_CNTL,           0x80003,   },
+    {HHI_VIID_CLK_DIV,           0x0,       },
+
+    {ENCP_VIDEO_FILT_CTRL,       0x1000,}, //bypass filter
+    {VENC_DVI_SETTING,           0x0001,}, //bit[3:2]:invert Vsync/Hsync polarity //bit[0]:sync source select(1:progressive 0:interlace)
+    {ENCP_VIDEO_MODE,            0x0,   },
+    {ENCP_VIDEO_MODE_ADV,        0x3808,}, //bit6:swap PbPr; //bit4:YPbPr gain as HDTV type; //bit[0]:sampling rate(0:1, 1:1/2, 2:1/4, 3:1/8)
+
+    {ENCP_VIDEO_YFP1_HTIME,      360,   },
+    {ENCP_VIDEO_YFP2_HTIME,      360+1280,  },
+    {ENCP_VIDEO_MAX_PXCNT,       1688,   },
+    {ENCP_VIDEO_MAX_LNCNT,       1066,   },
+    {ENCP_VIDEO_HAVON_BEGIN,     360,    },
+    {ENCP_VIDEO_HAVON_END,       360+1280-1,  },
+    {ENCP_VIDEO_VAVON_BLINE,     41,    },
+    {ENCP_VIDEO_VAVON_ELINE,     41+1024-1,   },
+    {ENCP_DVI_HSO_BEGIN,         112,     },
+    {ENCP_DVI_HSO_END,           0,     },
+    {ENCP_DVI_VSO_BLINE_EVN,     3,     },
+    {ENCP_DVI_VSO_BLINE_ODD,     3,     },
+    {ENCP_DVI_VSO_ELINE_EVN,     0,     },
+    {ENCP_DVI_VSO_ELINE_ODD,     0,     },
+    {ENCP_DVI_VSO_BEGIN_EVN,     0,     },
+    {ENCP_DVI_VSO_BEGIN_ODD,     0,     },
+    {ENCP_DVI_VSO_END_EVN,       0,     },
+    {ENCP_DVI_VSO_END_ODD,       0,     },
+
+    {VENC_VIDEO_PROG_MODE,       0x100, }, //bit[8]:set for Progressive mode(1:progressive 0:interlace)
+    {ENCP_VIDEO_SYNC_MODE,       0x07,  }, //master mode
+    {ENCP_VIDEO_RGB_CTRL,        0,     }, //disable sync on B
+    {ENCP_VIDEO_YC_DLY,          0,     },
+    {ENCP_VIDEO_SY_VAL,          8,     },
+    {ENCP_VIDEO_SY2_VAL,         0x1d8, },
+    {ENCP_VFIFO2VD_CTL,          0,     },
+    {VENC_SYNC_ROUTE,            0,     },
+    {VENC_INTCTRL,               0x200, },
+    {VPU_VIU_VENC_MUX_CTRL,      0x000a,},
+
+    {VENC_VDAC_SETTING,          0,     },
+    {VENC_UPSAMPLE_CTRL0,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL1,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL2,        0x0,   },//0xc061
+    {VENC_VDAC_DACSEL0,          0x0001,},//bit[15:12]delay //bit[1]enable upsamping //bit[0]output from ENCP(1) or ENCI(0)
+    {VENC_VDAC_DACSEL1,          0x0001,},
+    {VENC_VDAC_DACSEL2,          0x0001,},
+    {VENC_VDAC_FIFO_CTRL,        0x1000,},//bit[12]enable_encp //bit[11:6]DAC_clock_2X
+    {ENCP_DACSEL_0,              0x0543,},
+    {ENCP_DACSEL_1,              0x0000,},
+    {VENC_VDAC_DAC0_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC0_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC1_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC1_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC2_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC2_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC0_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC1_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC2_FILT_CTRL0,  0x0,   },
+
+    {ENCI_VIDEO_EN,              0,     },
+    {ENCP_VIDEO_EN,              1,     },
+    {MREG_END_MARKER,            0,     }
+};
+
+static const reg_t tvregs_wsxga_1440x900[] = {
+    {VENC_VDAC_SETTING,          0xff,      },
+    {ENCI_VIDEO_EN,              0,         },
+    {ENCP_VIDEO_EN,              0,         },
+
+    {HHI_VID_CLK_CNTL,           0x0,       },
+    {HHI_VID_PLL_CNTL,           0x20000425,},
+    {HHI_VID_PLL_CNTL2,          0x814d3928,},
+    {HHI_VID_PLL_CNTL3,          0x6b425012,},
+    {HHI_VID_PLL_CNTL4,          0x110,     },
+    {HHI_VID_PLL_CNTL,           0x00000425,},
     {HHI_VID_DIVIDER_CNTL,       0x00010843,},
-    {HHI_VID_CLK_DIV,            0x100},
-    {HHI_VID_CLK_CNTL,           0x80000,},
-    {HHI_VID_CLK_CNTL,           0x88001,},
-    {HHI_VID_CLK_CNTL,           0x80003,},
-    {HHI_VIID_CLK_DIV,           0x00000101,},
-    {ENCP_VIDEO_FILT_CTRL,       0x0052,},
-    {VENC_DVI_SETTING,           0x2029,},
-    {ENCP_VIDEO_MODE,            0x0040,},
-    {ENCP_VIDEO_MODE_ADV,        0x0009,},
-    {ENCP_VIDEO_YFP1_HTIME,      500,   },
-    {ENCP_VIDEO_YFP2_HTIME,      2500,  },
-    {ENCP_VIDEO_MAX_PXCNT,       2691,  },
-    {ENCP_VIDEO_MAX_LNCNT,       806,   },
-    {ENCP_VIDEO_HSPULS_BEGIN,    0,    },
-    {ENCP_VIDEO_HSPULS_END,      230,   },
-    {ENCP_VIDEO_HSPULS_SWITCH,   80,    },
-    {ENCP_VIDEO_VSPULS_BEGIN,    0x22,   },
-    {ENCP_VIDEO_VSPULS_END,      0xa0,  },
-    {ENCP_VIDEO_VSPULS_BLINE,    0,     },
-    {ENCP_VIDEO_VSPULS_ELINE,    5,     },
-    {ENCP_VIDEO_EQPULS_BLINE,    0,     },
-    {ENCP_VIDEO_EQPULS_ELINE,    5,     },
-    {ENCP_VIDEO_HAVON_BEGIN,     315,   },
-    {ENCP_VIDEO_HAVON_END,       2362,  },
-    {ENCP_VIDEO_VAVON_BLINE,     59,    },
-    {ENCP_VIDEO_VAVON_ELINE,     827,   },//827
-    {ENCP_VIDEO_HSO_BEGIN,       0,    },
-    {ENCP_VIDEO_HSO_END,         260,   },
-    {ENCP_VIDEO_VSO_BEGIN,       0,   },
-    {ENCP_VIDEO_VSO_END,         2200,   },
-    {ENCP_VIDEO_VSO_BLINE,       0,     },
-    {ENCP_VIDEO_VSO_ELINE,       5,     },
-    {VENC_VIDEO_PROG_MODE,       0x100, },
+    {HHI_VID_CLK_DIV,            0x1,      },
+    {HHI_VID_CLK_CNTL,           0x80000,   },
+    {HHI_VID_CLK_CNTL,           0x88001,   },
+    {HHI_VID_CLK_CNTL,           0x80003,   },
+    {HHI_VIID_CLK_DIV,           0x0,       },
+
+    {ENCP_VIDEO_FILT_CTRL,       0x1000,}, //bypass filter
+    {VENC_DVI_SETTING,           0x0001,}, //bit[3:2]:invert Vsync/Hsync polarity //bit[0]:sync source select(1:progressive 0:interlace)
+    {ENCP_VIDEO_MODE,            0x0,   },
+    {ENCP_VIDEO_MODE_ADV,        0x3808,}, //bit6:swap PbPr; //bit4:YPbPr gain as HDTV type; //bit[0]:sampling rate(0:1, 1:1/2, 2:1/4, 3:1/8)
+
+    {ENCP_VIDEO_YFP1_HTIME,      112,   },
+    {ENCP_VIDEO_YFP2_HTIME,      112+1440,  },
+    {ENCP_VIDEO_MAX_PXCNT,       1600,   },
+    {ENCP_VIDEO_MAX_LNCNT,       926,   },
+    {ENCP_VIDEO_HAVON_BEGIN,     112,   },
+    {ENCP_VIDEO_HAVON_END,       112+1440-1,  },
+    {ENCP_VIDEO_VAVON_BLINE,     23,    },
+    {ENCP_VIDEO_VAVON_ELINE,     23+900-1,   },
+    {ENCP_DVI_HSO_BEGIN,         0,     },
+    {ENCP_DVI_HSO_END,           32,    },
+    {ENCP_DVI_VSO_BLINE_EVN,     0,     },
+    {ENCP_DVI_VSO_BLINE_ODD,     0,     },
+    {ENCP_DVI_VSO_ELINE_EVN,     6,     },
+    {ENCP_DVI_VSO_ELINE_ODD,     6,     },
+    {ENCP_DVI_VSO_BEGIN_EVN,     0,     },
+    {ENCP_DVI_VSO_BEGIN_ODD,     0,     },
+    {ENCP_DVI_VSO_END_EVN,       0,     },
+    {ENCP_DVI_VSO_END_ODD,       0,     },
+
+    {VENC_VIDEO_PROG_MODE,       0x100, }, //bit[8]:set for Progressive mode(1:progressive 0:interlace)
+    {ENCP_VIDEO_SYNC_MODE,       0x07,  }, //master mode
+    {ENCP_VIDEO_RGB_CTRL,        0,     }, //disable sync on B
+    {ENCP_VIDEO_YC_DLY,          0,     },
+    {ENCP_VIDEO_SY_VAL,          8,     },
+    {ENCP_VIDEO_SY2_VAL,         0x1d8, },
+    {ENCP_VFIFO2VD_CTL,          0,     },
     {VENC_SYNC_ROUTE,            0,     },
     {VENC_INTCTRL,               0x200, },
-    {ENCP_VFIFO2VD_CTL,               0,     },
+    {VPU_VIU_VENC_MUX_CTRL,      0x000a,},
+
     {VENC_VDAC_SETTING,          0,     },
-    ////////////////////////
-    {ENCP_VIDEO_RGB_CTRL,		 0,},
-    {VENC_UPSAMPLE_CTRL0,        0xc061,},
-    {VENC_UPSAMPLE_CTRL1,        0xd061,},
-    {VENC_UPSAMPLE_CTRL2,        0xe061,},
-    {VENC_VDAC_DACSEL0,          0xf003,},
-    {VENC_VDAC_DACSEL1,          0xf003,},
-    {VENC_VDAC_DACSEL2,          0xf003,},
-    {VENC_VDAC_DACSEL3,          0xf003,},
-    {VENC_VDAC_DACSEL4,          0xf003,},
-    {VENC_VDAC_DACSEL5,          0xf003,},
+    {VENC_UPSAMPLE_CTRL0,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL1,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL2,        0x0,   },//0xc061
+    {VENC_VDAC_DACSEL0,          0x0001,},//bit[15:12]delay //bit[1]enable upsamping //bit[0]output from ENCP(1) or ENCI(0)
+    {VENC_VDAC_DACSEL1,          0x0001,},
+    {VENC_VDAC_DACSEL2,          0x0001,},
+    {VENC_VDAC_FIFO_CTRL,        0x1000,},//bit[12]enable_encp //bit[11:6]DAC_clock_2X
+    {ENCP_DACSEL_0,              0x0543,},
+    {ENCP_DACSEL_1,              0x0000,},
+    {VENC_VDAC_DAC0_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC0_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC1_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC1_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC2_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC2_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC0_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC1_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC2_FILT_CTRL0,  0x0,   },
+
+    {ENCI_VIDEO_EN,              0,     },
+    {ENCP_VIDEO_EN,              1,     },
+    {MREG_END_MARKER,            0,     }
+};
+
+static const reg_t tvregs_fhdvga_1920x1080[] = {
+    {VENC_VDAC_SETTING,          0xff,      },
+    {ENCI_VIDEO_EN,              0,         },
+    {ENCP_VIDEO_EN,              0,         },
+
+    {HHI_VID_CLK_CNTL,           0x0,       },
+    {HHI_VID_PLL_CNTL,           0x20010863,},
+    {HHI_VID_PLL_CNTL2,          0x814d3928,},
+    {HHI_VID_PLL_CNTL3,          0x6b425012,},
+    {HHI_VID_PLL_CNTL4,          0x110,     },
+    {HHI_VID_PLL_CNTL,           0x00010863,},
+    {HHI_VID_DIVIDER_CNTL,       0x00010813,},
+    {HHI_VID_CLK_DIV,            0x1,      },
+    {HHI_VID_CLK_CNTL,           0x80000,   },
+    {HHI_VID_CLK_CNTL,           0x88001,   },
+    {HHI_VID_CLK_CNTL,           0x80003,   },
+    {HHI_VIID_CLK_DIV,           0x0,       },
+
+    {ENCP_VIDEO_FILT_CTRL,       0x1000,}, //bypass filter
+    {VENC_DVI_SETTING,           0x0001,}, //bit[3:2]:invert Vsync/Hsync polarity //bit[0]:sync source select(1:progressive 0:interlace)
+    {ENCP_VIDEO_MODE,            0x0,   },
+    {ENCP_VIDEO_MODE_ADV,        0x3808,}, //bit6:swap PbPr; //bit4:YPbPr gain as HDTV type; //bit[0]:sampling rate(0:1, 1:1/2, 2:1/4, 3:1/8)
+
+    {ENCP_VIDEO_YFP1_HTIME,      192,   },
+    {ENCP_VIDEO_YFP2_HTIME,      192+1920,  },
+    {ENCP_VIDEO_MAX_PXCNT,       2200,   },
+    {ENCP_VIDEO_MAX_LNCNT,       1125,   },
+    {ENCP_VIDEO_HAVON_BEGIN,     192,   },
+    {ENCP_VIDEO_HAVON_END,       192+1920-1,  },
+    {ENCP_VIDEO_VAVON_BLINE,     41,    },
+    {ENCP_VIDEO_VAVON_ELINE,     41+1080-1,   },
+    {ENCP_DVI_HSO_BEGIN,         0,     },
+    {ENCP_DVI_HSO_END,           44,    },
+    {ENCP_DVI_VSO_BLINE_EVN,     0,     },
+    {ENCP_DVI_VSO_BLINE_ODD,     0,     },
+    {ENCP_DVI_VSO_ELINE_EVN,     5,     },
+    {ENCP_DVI_VSO_ELINE_ODD,     5,     },
+    {ENCP_DVI_VSO_BEGIN_EVN,     0,     },
+    {ENCP_DVI_VSO_BEGIN_ODD,     0,     },
+    {ENCP_DVI_VSO_END_EVN,       0,     },
+    {ENCP_DVI_VSO_END_ODD,       0,     },
+
+    {VENC_VIDEO_PROG_MODE,       0x100, }, //bit[8]:set for Progressive mode(1:progressive 0:interlace)
+    {ENCP_VIDEO_SYNC_MODE,       0x07,  }, //master mode
+    {ENCP_VIDEO_RGB_CTRL,        0,     }, //disable sync on B
+    {ENCP_VIDEO_YC_DLY,          0,     },
+    {ENCP_VIDEO_SY_VAL,          8,     },
+    {ENCP_VIDEO_SY2_VAL,         0x1d8, },
+    {ENCP_VFIFO2VD_CTL,          0,     },
+    {VENC_SYNC_ROUTE,            0,     },
+    {VENC_INTCTRL,               0x200, },
     {VPU_VIU_VENC_MUX_CTRL,      0x000a,},
-    {VENC_VDAC_FIFO_CTRL,        0x1fc0,},
+
+    {VENC_VDAC_SETTING,          0,     },
+    {VENC_UPSAMPLE_CTRL0,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL1,        0x0,   },//0xc061
+    {VENC_UPSAMPLE_CTRL2,        0x0,   },//0xc061
+    {VENC_VDAC_DACSEL0,          0x0001,},//bit[15:12]delay //bit[1]enable upsamping //bit[0]output from ENCP(1) or ENCI(0)
+    {VENC_VDAC_DACSEL1,          0x0001,},
+    {VENC_VDAC_DACSEL2,          0x0001,},
+    {VENC_VDAC_FIFO_CTRL,        0x1000,},//bit[12]enable_encp //bit[11:6]DAC_clock_2X
     {ENCP_DACSEL_0,              0x0543,},
     {ENCP_DACSEL_1,              0x0000,},
-    {ENCI_VIDEO_EN,              0      },
-    {ENCP_VIDEO_EN,              1      },
-    {MREG_END_MARKER,            0      }
-	///////////////////////////////////
+    {VENC_VDAC_DAC0_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC0_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC1_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC1_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC2_GAINCTRL,    0x8000,},
+    {VENC_VDAC_DAC2_OFFSET,      0x0,   },
+    {VENC_VDAC_DAC0_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC1_FILT_CTRL0,  0x0,   },
+    {VENC_VDAC_DAC2_FILT_CTRL0,  0x0,   },
 
+    {ENCI_VIDEO_EN,              0,     },
+    {ENCP_VIDEO_EN,              1,     },
+    {MREG_END_MARKER,            0,     }
 };
 
 /* The sequence of register tables items must match the enum define in tvmode.h */
@@ -1283,9 +1497,16 @@ static const reg_t *tvregsTab[] = {
     tvregs_1080i_50hz,
     tvregs_1080p_50hz,
     tvregs_1080p_24hz,
+    tvregs_4k2k_30hz,
+    tvregs_4k2k_25hz,
+    tvregs_4k2k_24hz,
+    tvregs_4k2k_smpte,
     tvregs_vga_640x480,
     tvregs_svga_800x600,
-    tvregs_xga_1024x768
+    tvregs_xga_1024x768,
+    tvregs_sxga_1280x1024,
+    tvregs_wsxga_1440x900,
+    tvregs_fhdvga_1920x1080,
 };
 
 static const tvinfo_t tvinfoTab[] = {
@@ -1306,15 +1527,22 @@ static const tvinfo_t tvinfoTab[] = {
     {.xres = 1920, .yres = 1080, .id = "1080i50hz"},
     {.xres = 1920, .yres = 1080, .id = "1080p50hz"},
     {.xres = 1920, .yres = 1080, .id = "1080p24hz"},
+    {.xres = 3840, .yres = 2160, .id = "4k2k30hz"},
+    {.xres = 3840, .yres = 2160, .id = "4k2k25hz"},
+    {.xres = 3840, .yres = 2160, .id = "4k2k24hz"},
+    {.xres = 4096, .yres = 2160, .id = "4k2ksmpte"},
     {.xres = 640, .yres = 480, .id = "vga"},
     {.xres = 800, .yres = 600, .id = "svga"},
     {.xres = 1024, .yres = 768, .id = "xga"},
+    {.xres = 1280, .yres = 1024, .id = "sxga"},
+    {.xres = 1440, .yres = 900, .id = "wsxga"},
+    {.xres = 1920, .yres = 1080, .id = "fhdvga"},
 };
 
 static inline void setreg(const reg_t *r)
 {
     aml_write_reg32(CBUS_REG_ADDR(r->reg), r->val);
-    printk("[0x%x] = 0x%x\n", r->reg, r->val);
+    //printk("[0x%x] = 0x%x\n", r->reg, r->val);
 }
 
 #endif /* TVREGS_H */
diff --git a/drivers/amlogic/display/vout/enc_clk_config.c b/drivers/amlogic/display/vout/enc_clk_config.c
index 16f2d3dcda85..3251a02b8e52 100755
--- a/drivers/amlogic/display/vout/enc_clk_config.c
+++ b/drivers/amlogic/display/vout/enc_clk_config.c
@@ -6,6 +6,10 @@
 #include <mach/clock.h>
 #include <linux/amlogic/vout/enc_clk_config.h>
 
+#define check_clk_config(para)\
+    if (para == -1)\
+        return;
+
 #define check_div() \
     if(div == -1)\
         return ;\
@@ -50,6 +54,7 @@
 
 static void set_hpll_clk_out(unsigned clk)
 {
+    check_clk_config(clk);
     printk("config HPLL\n");
 
 #if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
@@ -282,6 +287,7 @@ static void set_hpll_clk_out(unsigned clk)
 
 static void set_hpll_hdmi_od(unsigned div)
 {
+    check_clk_config(div);
     switch(div){
         case 1:
             WRITE_CBUS_REG_BITS(HHI_VID_PLL_CNTL, 0, 18, 2);
@@ -307,6 +313,7 @@ static void set_hpll_hdmi_od(unsigned div)
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
 static void set_hpll_lvds_od(unsigned div)
 {
+    check_clk_config(div);
     switch(div) {
         case 1:
             aml_set_reg32_bits(P_HHI_VID_PLL_CNTL, 0, 16, 2);
@@ -350,6 +357,7 @@ int set_viu_path(unsigned viu_channel_sel, viu_type_e viu_type_sel)
 
 static void set_vid_pll_div(unsigned div)
 {
+    check_clk_config(div);
 #if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
     // Gate disable
     WRITE_CBUS_REG_BITS(HHI_VID_DIVIDER_CNTL, 0, 16, 1);
@@ -413,6 +421,7 @@ static void set_vid_pll_div(unsigned div)
 
 static void set_clk_final_div(unsigned div)
 {
+    check_clk_config(div);
     if(div == 0)
         div = 1;
     WRITE_CBUS_REG_BITS(HHI_VID_CLK_CNTL, 1, 19, 1);
@@ -560,9 +569,16 @@ static enc_clk_val_t setting_enc_clk_val[] = {
     {VMODE_1080I_50HZ, 1488, 2, 1, VIU_ENCP, 10, 1, 2, 1, -1, -1, -1,  1,  -1},
     {VMODE_1080P_50HZ, 1488, 1, 1, VIU_ENCP, 10, 1, 1, 1, -1, -1, -1,  1,  -1},
     {VMODE_1080P_24HZ, 1488, 2, 1, VIU_ENCP, 10, 2, 1, 1, -1, -1, -1,  1,  -1},
-    {VMODE_VGA,  1066, 3, 1, VIU_ENCP, 10, 1, 2, 1, -1, -1, -1,  1,  1},
-    {VMODE_SVGA, 1058, 2, 1, VIU_ENCP, 10, 1, 2, 1, -1, -1, -1,  1,  1},
-    {VMODE_XGA, 1085, 1, 1, VIU_ENCP, 5, 1, 1, 1, -1, -1, -1,  1,  1},
+    {VMODE_4K2K_30HZ,  2970, 1, 2, VIU_ENCP, 5, 1, 1, 1, -1, -1, -1,  1,  -1},
+    {VMODE_4K2K_25HZ,  2970, 1, 2, VIU_ENCP, 5, 1, 1, 1, -1, -1, -1,  1,  -1},
+    {VMODE_4K2K_24HZ,  2970, 1, 2, VIU_ENCP, 5, 1, 1, 1, -1, -1, -1,  1,  -1},
+    {VMODE_4K2K_SMPTE, 2970, 1, 2, VIU_ENCP, 5, 1, 1, 1, -1, -1, -1,  1,  -1},
+    {VMODE_VGA,        -1, -1, 1, VIU_ENCP, -1, -1, -1, 1, -1, -1, -1,  1,  1},
+    {VMODE_SVGA,       -1, -1, 1, VIU_ENCP, -1, -1, -1, 1, -1, -1, -1,  1,  1},
+    {VMODE_XGA,        -1, -1, 1, VIU_ENCP, -1, -1, -1, 1, -1, -1, -1,  1,  1},
+    {VMODE_SXGA,       -1, -1, 1, VIU_ENCP, -1, -1, -1, 1, -1, -1, -1,  1,  1},
+    {VMODE_WSXGA,      -1, -1, 1, VIU_ENCP, -1, -1, -1, 1, -1, -1, -1,  1,  1},
+    {VMODE_FHDVGA,     -1, -1, 1, VIU_ENCP, -1, -1, -1, 1, -1, -1, -1,  1,  1},
 #endif
 };
 
diff --git a/drivers/amlogic/display/vout/tvconf.c b/drivers/amlogic/display/vout/tvconf.c
index f473e1fc50d1..e358fa9fb495 100755
--- a/drivers/amlogic/display/vout/tvconf.c
+++ b/drivers/amlogic/display/vout/tvconf.c
@@ -74,7 +74,7 @@ static const tvmode_t vmode_tvmode_tab[] =
 {
 	TVMODE_480I, TVMODE_480I_RPT, TVMODE_480CVBS, TVMODE_480P, TVMODE_480P_RPT, TVMODE_576I, TVMODE_576I_RPT, TVMODE_576CVBS, TVMODE_576P, TVMODE_576P_RPT, TVMODE_720P, TVMODE_1080I, TVMODE_1080P,
     TVMODE_720P_50HZ, TVMODE_1080I_50HZ, TVMODE_1080P_50HZ,TVMODE_1080P_24HZ, TVMODE_4K2K_30HZ, TVMODE_4K2K_25HZ, TVMODE_4K2K_24HZ, TVMODE_4K2K_SMPTE, 
-    TVMODE_VGA, TVMODE_SVGA, TVMODE_XGA, TVMODE_SXGA
+    TVMODE_VGA, TVMODE_SVGA, TVMODE_XGA, TVMODE_SXGA, TVMODE_WSXGA, TVMODE_FHDVGA,
 };
 
 
@@ -380,6 +380,30 @@ static const vinfo_t tv_info[] =
         .sync_duration_den = 1,
 		.video_clk         = 108000000,
     }, 
+	{ /* VMODE_wsxga */
+		.name              = "wsxga",
+		.mode              = VMODE_WSXGA,
+        .width             = 1440,
+        .height            = 900,
+        .field_height      = 900,
+        .aspect_ratio_num  = 8,
+        .aspect_ratio_den  = 5,
+        .sync_duration_num = 60,
+        .sync_duration_den = 1,
+		.video_clk         = 88750000,
+    },
+	{ /* VMODE_fhdvga */
+		.name              = "fhdvga",
+		.mode              = VMODE_FHDVGA,
+        .width             = 1920,
+        .height            = 1080,
+        .field_height      = 1080,
+        .aspect_ratio_num  = 16,
+        .aspect_ratio_den  = 9,
+        .sync_duration_num = 60,
+        .sync_duration_den = 1,
+		.video_clk         = 148500000,
+    },
 };
 
 static const struct file_operations am_tv_fops = {
@@ -422,7 +446,7 @@ tvmode_t vmode_to_tvmode(vmode_t mod)
 
 static int tv_set_current_vmode(vmode_t mod)
 {
-	if ((mod&VMODE_MODE_BIT_MASK)> VMODE_SXGA)
+	if ((mod&VMODE_MODE_BIT_MASK)> VMODE_FHDVGA)
 		return -EINVAL;
 	info->vinfo = &tv_info[mod & VMODE_MODE_BIT_MASK];
 	if(mod&VMODE_LOGO_BIT_MASK)  return 0;
diff --git a/drivers/amlogic/display/vout/tvmode.h b/drivers/amlogic/display/vout/tvmode.h
index a357eec6f1d9..7356c58e86fc 100755
--- a/drivers/amlogic/display/vout/tvmode.h
+++ b/drivers/amlogic/display/vout/tvmode.h
@@ -51,6 +51,8 @@ typedef enum {
     TVMODE_SVGA,
     TVMODE_XGA,
     TVMODE_SXGA,
+    TVMODE_WSXGA,
+    TVMODE_FHDVGA,
     TVMODE_MAX    
 } tvmode_t;
 
diff --git a/drivers/amlogic/display/vout/tvoutc.c b/drivers/amlogic/display/vout/tvoutc.c
index 4cffba02e225..9311f6122cf1 100755
--- a/drivers/amlogic/display/vout/tvoutc.c
+++ b/drivers/amlogic/display/vout/tvoutc.c
@@ -451,10 +451,10 @@ int tvoutc_setmode(tvmode_t mode)
 	cvbs_performance_enhancement(mode);
 #endif
 
-    if(mode >= TVMODE_VGA && mode <= TVMODE_SXGA){
-        aml_write_reg32(P_PERIPHS_PIN_MUX_0,aml_read_reg32(P_PERIPHS_PIN_MUX_0)|(3<<20));
+    if(mode >= TVMODE_VGA && mode <= TVMODE_FHDVGA){ //set VGA pinmux
+        aml_write_reg32(P_PERIPHS_PIN_MUX_0, (aml_read_reg32(P_PERIPHS_PIN_MUX_0)|(3<<20)));
     }else{
-	aml_write_reg32(P_PERIPHS_PIN_MUX_0,aml_read_reg32(P_PERIPHS_PIN_MUX_0)&(~(3<<20)));
+	aml_write_reg32(P_PERIPHS_PIN_MUX_0, (aml_read_reg32(P_PERIPHS_PIN_MUX_0)&(~(3<<20))));
     }
 
 #if ((defined CONFIG_ARCH_MESON8) || (defined CONFIG_ARCH_MESON8B))
@@ -498,6 +498,12 @@ int tvoutc_setmode(tvmode_t mode)
         case TVMODE_4K2K_25HZ:
         case TVMODE_4K2K_24HZ:
         case TVMODE_4K2K_SMPTE:
+		case TVMODE_VGA:
+		case TVMODE_SVGA:
+		case TVMODE_XGA:
+		case TVMODE_SXGA:
+		case TVMODE_WSXGA:
+		case TVMODE_FHDVGA:
         aml_set_reg32_bits(P_VPU_VIU_VENC_MUX_CTRL, 2, 0, 2); //reg0x271a, select ENCP to VIU1
         aml_set_reg32_bits(P_VPU_VIU_VENC_MUX_CTRL, 2, 4, 4); //reg0x271a, Select encP clock to VDIN
         aml_set_reg32_bits(P_VPU_VIU_VENC_MUX_CTRL, 2, 8, 4); //reg0x271a,Enable VIU of ENC_P domain to VDIN;
diff --git a/include/linux/amlogic/vout/vinfo.h b/include/linux/amlogic/vout/vinfo.h
index 7ab626cb1176..b2ba613daa9d 100755
--- a/include/linux/amlogic/vout/vinfo.h
+++ b/include/linux/amlogic/vout/vinfo.h
@@ -53,10 +53,12 @@ typedef enum {
     VMODE_SVGA,
     VMODE_XGA,
     VMODE_SXGA,
-    VMODE_LCD	,
-	VMODE_LVDS_1080P,
-	VMODE_LVDS_1080P_50HZ,
-	VMODE_LVDS_768P,
+    VMODE_WSXGA,
+    VMODE_FHDVGA,
+    VMODE_LCD,
+    VMODE_LVDS_1080P,
+    VMODE_LVDS_1080P_50HZ,
+    VMODE_LVDS_768P,
     VMODE_MAX,
     VMODE_INIT_NULL,
     VMODE_MASK = 0xFF,
-- 
2.19.0

