From 97c71d040ce36529dcd6b7a36692d9fccfae40a0 Mon Sep 17 00:00:00 2001
From: "jets.yan" <jets.yan@amlogic.com>
Date: Wed, 10 Sep 2014 19:13:02 +0800
Subject: [PATCH 4892/5965] PD #97180: improve the compatibility of cvbs
 performance for 802/805/812.

Change-Id: I76cb902284b3ba89ae5d6c5a6fbeabd8b4c537d0
---
 arch/arm/mach-meson8/include/mach/tvregs.h  | 45 +++++++++++++++++----
 arch/arm/mach-meson8b/include/mach/tvregs.h | 36 +++++++++++++++++
 drivers/amlogic/display/vout/tvoutc.c       | 30 ++++++++++++--
 3 files changed, 100 insertions(+), 11 deletions(-)

diff --git a/arch/arm/mach-meson8/include/mach/tvregs.h b/arch/arm/mach-meson8/include/mach/tvregs.h
index 95c636785949..fd1c4fc4cdd4 100755
--- a/arch/arm/mach-meson8/include/mach/tvregs.h
+++ b/arch/arm/mach-meson8/include/mach/tvregs.h
@@ -62,12 +62,12 @@ static const  reg_t tvreg_vclk_hd[]={
 
 #ifdef CONFIG_CVBS_PERFORMANCE_COMPATIBLITY_SUPPORT
 
-static const reg_t tvregs_576cvbs_china_sarft[] =
+static const reg_t tvregs_576cvbs_china_sarft_m8[] =
 {
 	{MREG_END_MARKER,            	0      }
 };
 
-static const reg_t tvregs_576cvbs_china_telecom[] =
+static const reg_t tvregs_576cvbs_china_telecom_m8[] =
 {
 	{P_ENCI_SYNC_ADJ,				0x8060	},
     {P_ENCI_VIDEO_SAT,              0xfe	},
@@ -75,7 +75,7 @@ static const reg_t tvregs_576cvbs_china_telecom[] =
 	{MREG_END_MARKER,            	0		}
 };
 
-static const reg_t tvregs_576cvbs_china_mobile[] =
+static const reg_t tvregs_576cvbs_china_mobile_m8[] =
 {
 	{P_ENCI_SYNC_ADJ,				0x8060	},
     {P_ENCI_VIDEO_SAT,              0xfe	},
@@ -83,11 +83,42 @@ static const reg_t tvregs_576cvbs_china_mobile[] =
 	{MREG_END_MARKER,            	0       }
 };
 
-static const reg_t *tvregs_576cvbs_performance[] =
+static const reg_t *tvregs_576cvbs_performance_m8[] =
 {
-	tvregs_576cvbs_china_sarft,
-	tvregs_576cvbs_china_telecom,
-	tvregs_576cvbs_china_mobile
+	tvregs_576cvbs_china_sarft_m8,
+	tvregs_576cvbs_china_telecom_m8,
+	tvregs_576cvbs_china_mobile_m8
+};
+
+static const reg_t tvregs_576cvbs_china_sarft_m8m2[] =
+{
+	{P_ENCI_YC_DELAY,				0x343  },
+	{MREG_END_MARKER,            	0      }
+};
+
+static const reg_t tvregs_576cvbs_china_telecom_m8m2[] =
+{
+	{P_ENCI_YC_DELAY,				0x343   },
+	{P_ENCI_SYNC_ADJ,				0x8080	},
+    {P_ENCI_VIDEO_SAT,              0xfd	},
+    {P_VENC_VDAC_DAC0_FILT_CTRL1,   0xf850	},
+	{MREG_END_MARKER,            	0		}
+};
+
+static const reg_t tvregs_576cvbs_china_mobile_m8m2[] =
+{
+	{P_ENCI_YC_DELAY,				0x343   },
+	{P_ENCI_SYNC_ADJ,				0x8080	},
+    {P_ENCI_VIDEO_SAT,              0xfd	},
+    {P_VENC_VDAC_DAC0_FILT_CTRL1,   0xf850	},
+	{MREG_END_MARKER,            	0       }
+};
+
+static const reg_t *tvregs_576cvbs_performance_m8m2[] =
+{
+	tvregs_576cvbs_china_sarft_m8m2,
+	tvregs_576cvbs_china_telecom_m8m2,
+	tvregs_576cvbs_china_mobile_m8m2
 };
 
 #endif
diff --git a/arch/arm/mach-meson8b/include/mach/tvregs.h b/arch/arm/mach-meson8b/include/mach/tvregs.h
index caad3f875be8..16e614726238 100755
--- a/arch/arm/mach-meson8b/include/mach/tvregs.h
+++ b/arch/arm/mach-meson8b/include/mach/tvregs.h
@@ -28,6 +28,7 @@
 #include "am_regs.h"
 #define MREG_END_MARKER 0xffff
 
+#define CONFIG_CVBS_PERFORMANCE_COMPATIBLITY_SUPPORT	1
 
 	#define VIDEO_CLOCK_HD_25	0x00101529
 	#define VIDEO_CLOCK_SD_25	0x00500a6c
@@ -59,6 +60,41 @@ static const  reg_t tvreg_vclk_hd[]={
     {P_HHI_VID_PLL_CNTL,VIDEO_CLOCK_HD_25},//HD,25
 };
 
+#ifdef CONFIG_CVBS_PERFORMANCE_COMPATIBLITY_SUPPORT
+
+static const reg_t tvregs_576cvbs_china_sarft_m8b[] =
+{
+	{P_ENCI_YC_DELAY,				0x343  },
+	{MREG_END_MARKER,            	0      }
+};
+
+static const reg_t tvregs_576cvbs_china_telecom_m8b[] =
+{
+	{P_ENCI_YC_DELAY,				0x343   },
+	{P_ENCI_SYNC_ADJ,				0x8080	},
+    {P_ENCI_VIDEO_SAT,              0xfd	},
+    {P_VENC_VDAC_DAC0_FILT_CTRL1,   0xf850	},
+	{MREG_END_MARKER,            	0		}
+};
+
+static const reg_t tvregs_576cvbs_china_mobile_m8b[] =
+{
+	{P_ENCI_YC_DELAY,				0x343   },
+	{P_ENCI_SYNC_ADJ,				0x8080	},
+    {P_ENCI_VIDEO_SAT,              0xfd	},
+    {P_VENC_VDAC_DAC0_FILT_CTRL1,   0xf850	},
+	{MREG_END_MARKER,            	0       }
+};
+
+static const reg_t *tvregs_576cvbs_performance_m8b[] =
+{
+	tvregs_576cvbs_china_sarft_m8b,
+	tvregs_576cvbs_china_telecom_m8b,
+	tvregs_576cvbs_china_mobile_m8b
+};
+
+#endif
+
 static const  reg_t tvregs_720p[] = {
     {P_VENC_VDAC_SETTING,          0xff,  },
 
diff --git a/drivers/amlogic/display/vout/tvoutc.c b/drivers/amlogic/display/vout/tvoutc.c
index a6b4e849aa28..0a1400b2055a 100755
--- a/drivers/amlogic/display/vout/tvoutc.c
+++ b/drivers/amlogic/display/vout/tvoutc.c
@@ -363,7 +363,8 @@ static void cvbs_performance_enhancement(tvmode_t mode)
 {
 	const reg_t *s;
 	unsigned int index = cvbs_performance_index;
-	unsigned int max = sizeof(tvregs_576cvbs_performance)/sizeof(reg_t*);
+	unsigned int max = 0;
+	unsigned int type = 0;
 
 	if( TVMODE_576CVBS != mode )
 		return ;
@@ -371,9 +372,30 @@ static void cvbs_performance_enhancement(tvmode_t mode)
 	if( 0xff == index )
 		return ;
 
-	index = (index>=max)?0:index;
-	printk("cvbs performance use table = %d\n", index);
-	s = tvregs_576cvbs_performance[index];
+#if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8
+		if( IS_MESON_M8M2_CPU )
+		{
+			max = sizeof(tvregs_576cvbs_performance_m8m2)/sizeof(reg_t*);
+			index = (index>=max)?0:index;
+			s = tvregs_576cvbs_performance_m8m2[index];
+			type = 2;
+		}
+		else
+		{
+			max = sizeof(tvregs_576cvbs_performance_m8)/sizeof(reg_t*);
+			index = (index>=max)?0:index;
+			s = tvregs_576cvbs_performance_m8[index];
+			type = 0;
+		}
+#elif MESON_CPU_TYPE == MESON_CPU_TYPE_MESON8B
+		max = sizeof(tvregs_576cvbs_performance_m8b)/sizeof(reg_t*);
+		index = (index>=max)?0:index;
+		s = tvregs_576cvbs_performance_m8b[index];
+		type = 1;
+#endif
+
+	printk("cvbs performance type = %d, table = %d\n", type, index);
+
 	while (MREG_END_MARKER != s->reg)
 	{
     	setreg(s++);
-- 
2.19.0

