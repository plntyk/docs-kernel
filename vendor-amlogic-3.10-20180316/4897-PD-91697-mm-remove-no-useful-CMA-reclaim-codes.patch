From b2b4be19a065f514906bc195662173bca358ada7 Mon Sep 17 00:00:00 2001
From: "shi.liu" <shi.liu@amlogic.com>
Date: Mon, 22 Sep 2014 14:24:23 +0800
Subject: [PATCH 4897/5965] PD #91697: mm: remove no useful CMA reclaim codes

http://10.8.9.5/kernel/common/commit/?h=amlogic-3.10-bringup&id=e97d1f3cfbd100e0a126b1f19e63c822c77ccd08

Above commit limits size of cma at memory reclaim. The two code segments are added.

The 1st one can work well.

+	free_cma = global_page_state(NR_FREE_CMA_PAGES);
+	free_cma += free_cma << 1;
+	total_free = global_page_state(NR_FREE_PAGES);
+	if(page){
+		if((free_cma > total_free) && is_migrate_cma(get_pageblock_migratetype(page))){
+			return -EBUSY;
+		}
+	}

2nd don't work at all, because of the systax error. So 2nd one can be removed.

+	if((allocflags_to_migratetype(gfp_mask) & MIGRATE_MOVABLE == 0) \
+		&& is_migrate_cma(get_pageblock_migratetype(page))){
+		return -EBUSY;
+	}

Change-Id: Id5424afb94a00848faac6096e9bac0c18401ae22
---
 mm/vmscan.c | 5 -----
 1 file changed, 5 deletions(-)

diff --git a/mm/vmscan.c b/mm/vmscan.c
index e1debb0f6370..7020a8e83d16 100755
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -1063,11 +1063,6 @@ int __isolate_lru_page(struct page *page, isolate_mode_t mode, gfp_t gfp_mask)
 			}
 		}
 #endif
-
-		if(((allocflags_to_migratetype(gfp_mask) & MIGRATE_MOVABLE) == 0) \
-			&& is_migrate_cma(get_pageblock_migratetype(page))){
-			return -EBUSY;
-		}
 	}
 
 	/* Only take pages on the LRU. */
-- 
2.19.0

