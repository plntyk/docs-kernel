From 9caec27296d4d0e3316cedc5ed8c177df225b0a2 Mon Sep 17 00:00:00 2001
From: Lawrence Mok <lawrence.mok@amlogic.com>
Date: Mon, 22 Sep 2014 16:50:34 -0700
Subject: [PATCH 4899/5965] meson-rng: add additional disturbances

Change-Id: I0ace44ab80bf0936ac47c667d3c5cb0fedd3e070
---
 drivers/char/hw_random/meson-rng.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/char/hw_random/meson-rng.c b/drivers/char/hw_random/meson-rng.c
index 946ad4efe5fc..cf4bf9afdb9d 100644
--- a/drivers/char/hw_random/meson-rng.c
+++ b/drivers/char/hw_random/meson-rng.c
@@ -57,6 +57,11 @@ static int meson_read(struct hwrng *rng, void *buf,
 
 	pm_runtime_get_sync(meson_rng->dev);
 
+	// this will cause additional disturbances
+	aml_read_reg32(P_VDIN_ASFIFO_CTRL2);
+	aml_read_reg32(P_VDIN_MATRIX_CTRL);
+	aml_read_reg32(P_PAD_PULL_UP_REG5);
+
 	// 'max' minimum is 32, so this is safe
 	data[0] = aml_read_reg32(P_RAND64_ADDR0);
 	data[1] = aml_read_reg32(P_RAND64_ADDR1);
@@ -113,6 +118,13 @@ static int meson_rng_runtime_resume(struct device *dev)
 	print_state("b resu");
 	switch_mod_gate_by_type(MOD_RANDOM_NUM_GEN, 1);
 	print_state("a resu");
+
+	// Enable the ring oscillator
+	// NOTE:  CBUS 0x207f bit[0] = enable
+	// NOTE:  CBUS 0x207f bit[1] = high-frequency mode.
+	//      Setting bit[1]=1 may change the randomness even more
+	aml_set_reg32_mask(P_AM_RING_OSC_REG0, (1 << 0) | (1 << 1));
+
 	return 0;
 }
 #endif
-- 
2.19.0

