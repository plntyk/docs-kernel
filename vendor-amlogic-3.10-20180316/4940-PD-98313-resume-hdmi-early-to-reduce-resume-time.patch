From 493931783565ea9fe32222c7b2b33746f362d983 Mon Sep 17 00:00:00 2001
From: "wenbiao.zhang" <wenbiao.zhang@amlogic.com>
Date: Sat, 11 Oct 2014 16:21:21 +0800
Subject: [PATCH 4940/5965] PD #98313: resume hdmi early to reduce resume time

Change-Id: Idf8bf51fd68e1ee83faf54790750fecdadc41224
---
 arch/arm/configs/meson8_defconfig          |  1 +
 arch/arm/configs/meson8b_defconfig         |  1 +
 arch/arm/mach-meson8/pm.c                  | 10 +++
 arch/arm/mach-meson8b/pm.c                 | 10 +++
 drivers/amlogic/amports/video.c            |  6 +-
 drivers/amlogic/display/vout/vout_notify.c |  2 +-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c     | 93 +++++++++++++++++-----
 7 files changed, 100 insertions(+), 23 deletions(-)

diff --git a/arch/arm/configs/meson8_defconfig b/arch/arm/configs/meson8_defconfig
index ba905d9a4f36..6c575b81d186 100755
--- a/arch/arm/configs/meson8_defconfig
+++ b/arch/arm/configs/meson8_defconfig
@@ -399,3 +399,4 @@ CONFIG_CRYPTO_PCBC=y
 CONFIG_CRYPTO_TWOFISH=y
 CONFIG_CRC_T10DIF=y
 CONFIG_CRC7=y
+CONFIG_SCREEN_ON_EARLY=y
diff --git a/arch/arm/configs/meson8b_defconfig b/arch/arm/configs/meson8b_defconfig
index 509c45526056..7d2983957e10 100755
--- a/arch/arm/configs/meson8b_defconfig
+++ b/arch/arm/configs/meson8b_defconfig
@@ -381,3 +381,4 @@ CONFIG_CRYPTO_PCBC=y
 CONFIG_CRYPTO_TWOFISH=y
 CONFIG_CRC_T10DIF=y
 CONFIG_CRC7=y
+CONFIG_SCREEN_ON_EARLY=y
diff --git a/arch/arm/mach-meson8/pm.c b/arch/arm/mach-meson8/pm.c
index 3f4d04b83541..abd78bf9fcc8 100755
--- a/arch/arm/mach-meson8/pm.c
+++ b/arch/arm/mach-meson8/pm.c
@@ -238,6 +238,10 @@ static void meson_system_late_resume(struct early_suspend *h)
 
 extern int det_pwr_key(void);
 extern void clr_pwr_key(void);
+#ifdef CONFIG_SCREEN_ON_EARLY
+int power_key_pressed;
+EXPORT_SYMBOL(power_key_pressed);
+#endif
 
 static void meson_pm_suspend(void)
 {
@@ -307,6 +311,12 @@ static void meson_pm_suspend(void)
 	//power_gate_switch(ON);
 	clk_switch(ON);
 	//analog_switch(ON);
+
+#ifdef CONFIG_SCREEN_ON_EARLY
+    if (READ_AOBUS_REG(AO_RTI_STATUS_REG2) == FLAG_WAKEUP_PWRKEY) {
+        power_key_pressed = 1;
+    }
+#endif	
 }
 
 static int meson_pm_prepare(void)
diff --git a/arch/arm/mach-meson8b/pm.c b/arch/arm/mach-meson8b/pm.c
index 694bc66db54d..7b853116f6fe 100755
--- a/arch/arm/mach-meson8b/pm.c
+++ b/arch/arm/mach-meson8b/pm.c
@@ -249,6 +249,10 @@ static void meson_system_late_resume(struct early_suspend *h)
 
 extern int det_pwr_key(void);
 extern void clr_pwr_key(void);
+#ifdef CONFIG_SCREEN_ON_EARLY
+int power_key_pressed;
+EXPORT_SYMBOL(power_key_pressed);
+#endif
 
 static void meson_pm_suspend(void)
 {
@@ -321,6 +325,12 @@ static void meson_pm_suspend(void)
 	//power_gate_switch(ON);
 	clk_switch(ON);
 	//analog_switch(ON);
+
+#ifdef CONFIG_SCREEN_ON_EARLY
+    if (READ_AOBUS_REG(AO_RTI_STATUS_REG2) == FLAG_WAKEUP_PWRKEY) {
+        power_key_pressed = 1;
+    }
+#endif	
 }
 
 static int meson_pm_prepare(void)
diff --git a/drivers/amlogic/amports/video.c b/drivers/amlogic/amports/video.c
index 67b71ecaf4bf..be6db81511c6 100755
--- a/drivers/amlogic/amports/video.c
+++ b/drivers/amlogic/amports/video.c
@@ -5096,8 +5096,8 @@ static int amvideo_class_suspend(struct device *dev, pm_message_t state)
 
 #ifdef CONFIG_SCREEN_ON_EARLY
 extern void osd_resume_early(void);
-extern void vout_pll_resume_early(void);
 extern void resume_vout_early(void);
+extern void hdmi_resume_early(void);
 extern int power_key_pressed;
 #endif
 
@@ -5128,10 +5128,10 @@ static int amvideo_class_resume(struct device *dev)
 
 #ifdef CONFIG_SCREEN_ON_EARLY
 	if(power_key_pressed){
-		vout_pll_resume_early();
+		power_key_pressed = 0;
 		osd_resume_early();
 		resume_vout_early();
-		power_key_pressed = 0;
+		hdmi_resume_early();
 	}
 #endif
 
diff --git a/drivers/amlogic/display/vout/vout_notify.c b/drivers/amlogic/display/vout/vout_notify.c
index fa7cfde0f42c..ec61a5b2781b 100755
--- a/drivers/amlogic/display/vout/vout_notify.c
+++ b/drivers/amlogic/display/vout/vout_notify.c
@@ -103,8 +103,8 @@ int vout_suspend(void)
 	int ret=0 ;
 	vout_server_t  *p_server = vout_module.curr_vout_server;
 #ifdef CONFIG_SCREEN_ON_EARLY
-	wake_up_flag = 0;
 	int i = 0;
+	wake_up_flag = 0;
 	for(; i < 20; i++)
 		if (wake_up_flag)
 			break;
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index 3da1b36adfc5..caca0e65c4a9 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -68,43 +68,66 @@ static hdmitx_dev_t hdmitx_device;
 static struct switch_dev sdev = {      // android ics switch device
        .name = "hdmi",
        };
-#ifdef CONFIG_HAS_EARLYSUSPEND
-#include <linux/earlysuspend.h>
-static void hdmitx_early_suspend(struct early_suspend *h)
+
+static void hdmitx_suspend(void) 
 {
     const vinfo_t *info = hdmi_get_current_vinfo();
-    hdmitx_dev_t * phdmi = (hdmitx_dev_t *)h->param;
     if (info && (strncmp(info->name, "panel", 5) == 0 || strncmp(info->name, "null", 4) == 0))
         return;
-    phdmi->hpd_lock = 1;
-    phdmi->HWOp.Cntl((hdmitx_dev_t *)h->param, HDMITX_EARLY_SUSPEND_RESUME_CNTL, HDMITX_EARLY_SUSPEND);
-    phdmi->cur_VIC = HDMI_Unkown;
-    phdmi->output_blank_flag = 0;
-    phdmi->HWOp.CntlDDC(phdmi, DDC_HDCP_OP, HDCP_OFF);
-    phdmi->HWOp.CntlDDC(phdmi, DDC_HDCP_OP, DDC_RESET_HDCP);
-    phdmi->HWOp.CntlConfig(&hdmitx_device, CONF_CLR_AVI_PACKET, 0);
-    phdmi->HWOp.CntlConfig(&hdmitx_device, CONF_CLR_VSDB_PACKET, 0);
-    hdmi_print(IMP, SYS "HDMITX: early suspend\n");
+    hdmitx_device.hpd_lock = 1;
+
+    hdmitx_device.HWOp.Cntl(&hdmitx_device, HDMITX_EARLY_SUSPEND_RESUME_CNTL, HDMITX_EARLY_SUSPEND);
+    hdmitx_device.cur_VIC = HDMI_Unkown;
+    hdmitx_device.output_blank_flag = 0;
+    hdmitx_device.HWOp.CntlDDC(&hdmitx_device, DDC_HDCP_OP, HDCP_OFF);
+    hdmitx_device.HWOp.CntlDDC(&hdmitx_device, DDC_HDCP_OP, DDC_RESET_HDCP);
+    hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_CLR_AVI_PACKET, 0);
+    hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_CLR_VSDB_PACKET, 0);
+    hdmi_print(IMP, SYS "HDMITX: suspend\n");
 }
 
-static void hdmitx_late_resume(struct early_suspend *h)
+static void hdmitx_resume(void) 
 {
     const vinfo_t *info = hdmi_get_current_vinfo();
-    hdmitx_dev_t * phdmi = (hdmitx_dev_t *)h->param;
     if (info && (strncmp(info->name, "panel", 5) == 0 || strncmp(info->name, "null", 4) == 0)) {
         hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_VIDEO_BLANK_OP, VIDEO_UNBLANK);
        return ;
     } else {
         hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_VIDEO_BLANK_OP, VIDEO_BLANK);
     }
-    phdmi->hpd_lock = 0;
+    hdmitx_device.hpd_lock = 0;
     hdmitx_device.HWOp.CntlConfig(&hdmitx_device, CONF_AUDIO_MUTE_OP, AUDIO_MUTE);
     hdmitx_device.HWOp.CntlDDC(&hdmitx_device, DDC_HDCP_OP, HDCP_OFF);
     hdmitx_device.internal_mode_change = 0;
     set_disp_mode_auto();
-    pr_info("amhdmitx: late resume module %d\n", __LINE__);
-    phdmi->HWOp.Cntl((hdmitx_dev_t *)h->param, HDMITX_EARLY_SUSPEND_RESUME_CNTL, HDMITX_LATE_RESUME);
-    hdmi_print(INF, SYS "late resume\n");
+
+    hdmitx_device.HWOp.Cntl(&hdmitx_device, HDMITX_EARLY_SUSPEND_RESUME_CNTL, HDMITX_LATE_RESUME);
+    hdmi_print(INF, SYS "resume\n");
+}
+
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+#include <linux/earlysuspend.h>
+static int early_suspend_flag = 0;
+#ifdef CONFIG_SCREEN_ON_EARLY
+static int early_resume_flag = 0;
+#endif
+
+
+static void hdmitx_early_suspend(struct early_suspend *h)
+{
+    if(early_suspend_flag)
+        return;
+    early_suspend_flag = 1;
+    hdmitx_suspend();
+}
+
+static void hdmitx_late_resume(struct early_suspend *h)
+{
+    if(!early_suspend_flag)
+        return;
+    early_suspend_flag = 0;
+    hdmitx_resume();
 }
 
 static struct early_suspend hdmitx_early_suspend_handler = {
@@ -115,6 +138,20 @@ static struct early_suspend hdmitx_early_suspend_handler = {
 };
 #endif
 
+#ifdef CONFIG_SCREEN_ON_EARLY
+void hdmi_resume_early(void)
+{
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	hdmitx_resume();
+	early_suspend_flag = 0;
+#endif
+	early_resume_flag = 1;
+	return ;
+}
+EXPORT_SYMBOL(hdmi_resume_early);
+#endif
+
+
 //static HDMI_TX_INFO_t hdmi_info;
 #define INIT_FLAG_VDACOFF        0x1
     /* unplug powerdown */
@@ -1624,6 +1661,11 @@ static int amhdmitx_remove(struct platform_device *pdev)
 #ifdef CONFIG_PM
 static int amhdmitx_suspend(struct platform_device *pdev,pm_message_t state)
 {
+#ifdef CONFIG_HAS_EARLYSUSPEND
+    if (early_suspend_flag)
+        return 0;
+#endif
+    hdmitx_suspend();
 #if 0
     pr_info("amhdmitx: hdmirx_suspend\n");
     hdmitx_pre_display_init();
@@ -1639,6 +1681,19 @@ static int amhdmitx_suspend(struct platform_device *pdev,pm_message_t state)
 
 static int amhdmitx_resume(struct platform_device *pdev)
 {
+#ifdef CONFIG_SCREEN_ON_EARLY
+	if (early_resume_flag) {
+		early_resume_flag = 0;
+		return 0;
+	}
+#endif
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+    if (early_suspend_flag)
+        return 0;
+#endif
+    hdmitx_resume();
+
 #if 0
     pr_info("amhdmitx: resume module\n");
     if(hdmi_pdata){
-- 
2.19.0

