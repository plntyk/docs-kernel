From 5eaf9e5e1daa5778342aa019ca7b5e7862084770 Mon Sep 17 00:00:00 2001
From: "jian.xu" <jian.xu@amlogic.com>
Date: Mon, 13 Oct 2014 19:31:02 +0800
Subject: [PATCH 5014/5965] PD#99288:PD#98494: add i2s zero play when module
 probe to fix DAC/AMP first startup popo noise

Change-Id: Ic6c686c4bc891de916199de352a7bccadbc43420
---
 sound/soc/aml/m8/aml_i2s.c     |  4 ++--
 sound/soc/aml/m8/aml_i2s_dai.c | 25 ++++++++++++++++++++++---
 2 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/sound/soc/aml/m8/aml_i2s.c b/sound/soc/aml/m8/aml_i2s.c
index 71e87d4aeb7c..7e33583cd224 100755
--- a/sound/soc/aml/m8/aml_i2s.c
+++ b/sound/soc/aml/m8/aml_i2s.c
@@ -550,12 +550,12 @@ static int aml_i2s_open(struct snd_pcm_substream *substream)
 
 	spin_lock_init(&prtd->s.lock);
 	s->xrun_num = 0;
-	WRITE_MPEG_REG_BITS(MPLL_I2S_CNTL, 1,14, 1);
+	//WRITE_MPEG_REG_BITS(MPLL_I2S_CNTL, 1,14, 1);
 	mutex_lock(&gate_mutex);
 	if(!num_clk_gate){
         num_clk_gate = 1;
     	if(audio_gate_status == 0){
-    		audio_aiu_pg_enable(1);
+    	//	audio_aiu_pg_enable(1);
     		ALSA_DEBUG("aml_pcm_open  device type %x \n", s->device_type);
 
     	}
diff --git a/sound/soc/aml/m8/aml_i2s_dai.c b/sound/soc/aml/m8/aml_i2s_dai.c
index ee7cb9e959db..c5b4386be2e3 100755
--- a/sound/soc/aml/m8/aml_i2s_dai.c
+++ b/sound/soc/aml/m8/aml_i2s_dai.c
@@ -38,6 +38,17 @@ static int i2s_pos_sync = 0;
 #define ALSA_TRACE()   
 #endif
 
+static int i2sbuf[32+16];
+static void  aml_i2s_play()
+{
+        audio_util_set_dac_i2s_format(AUDIO_ALGOUT_DAC_FORMAT_DSP); 	
+	audio_set_i2s_mode(AIU_I2S_MODE_PCM16);
+	memset(i2sbuf,0,sizeof(i2sbuf));	
+	audio_set_aiubuf((virt_to_phys(i2sbuf)+63)&(~63),128,2);
+	audio_out_i2s_enable(1);
+	
+        
+}
 /*
 the I2S hw  and IEC958 PCM output initation,958 initation here,
 for the case that only use our ALSA driver for PCM s/pdif output.
@@ -154,7 +165,8 @@ static int aml_dai_i2s_prepare(struct snd_pcm_substream *substream,
 			audio_clk_config	=	AUDIO_CLK_FREQ_441;
 			break;
 	};
-
+    if(substream->stream == SNDRV_PCM_STREAM_PLAYBACK)	
+    	audio_out_i2s_enable(0);
     if( i2s->old_samplerate != runtime->rate ){
 		ALSA_PRINT("enterd %s,old_samplerate:%d,sample_rate=%d\n",__func__,i2s->old_samplerate,runtime->rate);
         i2s->old_samplerate = runtime->rate;
@@ -336,9 +348,16 @@ static int aml_i2s_dai_probe(struct platform_device *pdev)
 		printk(KERN_INFO "i2s get no clk src setting in dts, use the default mpll 0\n");
 		i2s->mpll = 0;
 	}
+	//enable i2s MPLL and power gate first
+       WRITE_MPEG_REG_BITS(MPLL_I2S_CNTL, 1,14, 1);
+       audio_aiu_pg_enable(1);
 	/* enable the mclk because m8 codec need it to setup */
-	audio_set_i2s_clk(AUDIO_CLK_FREQ_48, AUDIO_CLK_256FS, i2s->mpll);
-
+       if( i2s->old_samplerate != 48000 ){
+	 	ALSA_PRINT("enterd %s,old_samplerate:%d,sample_rate=%d\n",__func__,i2s->old_samplerate,48000);
+        	i2s->old_samplerate = 48000;
+	 	audio_set_i2s_clk(AUDIO_CLK_FREQ_48, AUDIO_CLK_256FS, i2s->mpll);
+       }
+       aml_i2s_play();
 	return snd_soc_register_component(&pdev->dev, &aml_component,
 					 aml_i2s_dai, ARRAY_SIZE(aml_i2s_dai));
 
-- 
2.19.0

