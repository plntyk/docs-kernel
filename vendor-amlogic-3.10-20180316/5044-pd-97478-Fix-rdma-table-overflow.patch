From 77bd505efae6705031f3d828bbec2c4d28066fc7 Mon Sep 17 00:00:00 2001
From: "alex.cao" <alex.cao@droid01-sz.amlogic.com>
Date: Wed, 12 Nov 2014 14:09:28 +0800
Subject: [PATCH 5044/5965] pd #97478: Fix rdma table overflow

Change-Id: Id0af25279e1fa1ccce812b3d591d39cdf7b5e99e
---
 drivers/amlogic/amports/rdma.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/amlogic/amports/rdma.c b/drivers/amlogic/amports/rdma.c
index 66ea752ec790..166be5f5c3be 100755
--- a/drivers/amlogic/amports/rdma.c
+++ b/drivers/amlogic/amports/rdma.c
@@ -145,11 +145,17 @@ void rdma_table_prepare_write(unsigned long reg_adr, unsigned long val)
     if(((rmda_item_count<<1)+1)<(RDMA_TABLE_SIZE/4)){
         rmda_table[rmda_item_count<<1] = reg_adr; //CBUS_REG_ADDR(reg_adr);
         rmda_table[(rmda_item_count<<1)+1] = val;
-        //printk("%s %d: %x %x\n",__func__, rmda_item_count, rmda_table[rmda_item_count<<1], rmda_table[(rmda_item_count<<1)+1]);
         rmda_item_count++;
     }
     else{
-        printk("%s fail: %d, %lx %lx\n",__func__, rmda_item_count, reg_adr, val);
+        int i;
+        for(i=0; i<rmda_item_count; i++){
+            Wr(rmda_table[i<<1], rmda_table[(i<<1)+1]);
+        }   
+        rmda_item_count = 0;
+        rmda_table[rmda_item_count<<1] = reg_adr; //CBUS_REG_ADDR(reg_adr);
+        rmda_table[(rmda_item_count<<1)+1] = val;
+        rmda_item_count++;
     }
 }
 
-- 
2.19.0

