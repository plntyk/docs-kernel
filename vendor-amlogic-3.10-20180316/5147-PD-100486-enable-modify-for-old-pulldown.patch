From 3d9fb8283c2cb2c065d109466e9b330607de69ce Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Tue, 2 Dec 2014 14:23:30 +0800
Subject: [PATCH 5147/5965] PD #100486:enable /modify for old pulldown.

commit 2d5609835388d350f6a31402e9575b244c6b98b2
Author: kele.bai <kele.bai@amlogic.com>
Date:   Tue Dec 2 14:19:31 2014 +0800

    PD #100486:fix for previous commit.

    Change-Id: I0939918287ec63caf797113daeac9efb6e7031e5

commit 40984de4c5bff1009dd57230ad5bfad701ab4f80
Author: kele.bai <kele.bai@amlogic.com>
Date:   Tue Dec 2 10:25:21 2014 +0800

    PD #100486:enable pd only for tv projects.

    Change-Id: Ief6f171bab4eed0aa79a4d5ce369df3ed49cd49f

commit 3467c037d79221489b8a14ef9a0cc7c7a4b25b17
Author: kele.bai <kele.bai@amlogic.com>
Date:   Tue Dec 2 09:45:30 2014 +0800

    PD #100486:enable /modify for old pulldown.

    Change-Id: Ibc99b397d23e84421958a617b0507102c35450ce

Change-Id: Iaedf8910a479901e30f68e413e00b962d0f625b3
---
 drivers/amlogic/deinterlace/deinterlace.c | 62 +++++++++++++----------
 drivers/amlogic/deinterlace/deinterlace.h |  2 +-
 2 files changed, 35 insertions(+), 29 deletions(-)

diff --git a/drivers/amlogic/deinterlace/deinterlace.c b/drivers/amlogic/deinterlace/deinterlace.c
index 095c685adc11..ddf8c7b4bb4e 100755
--- a/drivers/amlogic/deinterlace/deinterlace.c
+++ b/drivers/amlogic/deinterlace/deinterlace.c
@@ -186,7 +186,7 @@ static dev_t di_id;
 static struct class *di_class;
 
 #define INIT_FLAG_NOT_LOAD 0x80
-static char version_s[] = "2014-11-20a";//modify vscale skip for g9tv
+static char version_s[] = "2014-12-1a";//modify for old pulldown
 static unsigned char boot_init_flag=0;
 static int receiver_is_amvideo = 1;
 
@@ -4745,7 +4745,9 @@ static void get_vscale_skip_count(unsigned par)
 }
 
 #define get_vpp_reg_update_flag(par) ((par>>16)&0x1)
-
+static unsigned int post_blend = 0;
+module_param(post_blend,uint,0664);
+MODULE_PARM_DESC(post_blend,"/n show blend mode/n");
 static int de_post_process(void* arg, unsigned zoom_start_x_lines,
      unsigned zoom_end_x_lines, unsigned zoom_start_y_lines, unsigned zoom_end_y_lines, vframe_t* disp_vf)
 {
@@ -4840,9 +4842,9 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
              di_post_stru.next_canvas_id = 1;
         }
 #endif
-		
+	post_blend = di_buf->pulldown_mode;
 	switch(di_buf->pulldown_mode){
-	    case PULL_DONW_BLEND_0:
+	    case PULL_DOWN_BLEND_0:
 	    case PULL_DOWN_NORMAL:
 		config_canvas_idx(di_buf->di_buf_dup_p[1], di_post_buf0_canvas_idx[di_post_stru.canvas_id], -1);
 		config_canvas_idx(di_buf->di_buf_dup_p[2], -1, di_post_mtnprd_canvas_idx[di_post_stru.canvas_id]);
@@ -4854,7 +4856,7 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
 		break;
 	    case PULL_DOWN_BLEND_2:
 		config_canvas_idx(di_buf->di_buf_dup_p[1], di_post_buf0_canvas_idx[di_post_stru.canvas_id], -1);
-		config_canvas_idx(di_buf->di_buf_dup_p[1], -1, di_post_mtnprd_canvas_idx[di_post_stru.canvas_id]);
+		config_canvas_idx(di_buf->di_buf_dup_p[2], -1, di_post_mtnprd_canvas_idx[di_post_stru.canvas_id]);
 		config_canvas_idx(di_buf->di_buf_dup_p[2], di_post_buf1_canvas_idx[di_post_stru.canvas_id], -1);
 		config_canvas_idx(di_buf->di_buf_dup_p[1], -1, di_post_mtncrd_canvas_idx[di_post_stru.canvas_id]);
 		#ifdef NEW_DI_V3
@@ -4863,9 +4865,9 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
 		break;
 	    case PULL_DOWN_MTN:
 		config_canvas_idx(di_buf->di_buf_dup_p[1], di_post_buf0_canvas_idx[di_post_stru.canvas_id], -1);
-		config_canvas_idx(di_buf->di_buf_dup_p[1], -1, di_post_mtnprd_canvas_idx[di_post_stru.canvas_id]);
+		config_canvas_idx(di_buf->di_buf_dup_p[2], -1, di_post_mtnprd_canvas_idx[di_post_stru.canvas_id]);
 		config_canvas_idx(di_buf->di_buf_dup_p[0], di_post_buf1_canvas_idx[di_post_stru.canvas_id], -1);
-		config_canvas_idx(di_buf->di_buf_dup_p[0], -1, di_post_mtncrd_canvas_idx[di_post_stru.canvas_id]);
+		config_canvas_idx(di_buf->di_buf_dup_p[1], -1, di_post_mtncrd_canvas_idx[di_post_stru.canvas_id]);
 		break;
 	    case PULL_DOWN_BUF1://wave with buf1
 		config_canvas_idx(di_buf->di_buf_dup_p[1], di_post_buf0_canvas_idx[di_post_stru.canvas_id], -1);
@@ -4882,7 +4884,7 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
      	di_post_stru.next_canvas_id = di_post_stru.canvas_id?0:1;
 #endif
 	switch(di_buf->pulldown_mode){
-	    case PULL_DONW_BLEND_0:
+	    case PULL_DOWN_BLEND_0:
 	    case PULL_DOWN_NORMAL:
 		di_post_stru.di_buf0_mif.canvas0_addr0 = di_buf->di_buf_dup_p[1]->nr_canvas_idx;
 		di_post_stru.di_buf1_mif.canvas0_addr0 = di_buf->di_buf_dup_p[0]->nr_canvas_idx;
@@ -4891,7 +4893,7 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
 		#ifdef NEW_DI_V3
 		di_post_stru.di_mcvecrd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mcvec_canvas_idx;
 		#endif
-		post_blend_mode = 3;
+		post_blend_mode = di_buf->pulldown_mode==PULL_DOWN_NORMAL?3:1;
 		blend_mtn_en = 1;
 		ei_en = 1;
 		post_blend_en = 1;
@@ -4899,12 +4901,12 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
 	    case PULL_DOWN_BLEND_2:
 		di_post_stru.di_buf0_mif.canvas0_addr0 = di_buf->di_buf_dup_p[1]->nr_canvas_idx;
 		di_post_stru.di_buf1_mif.canvas0_addr0 = di_buf->di_buf_dup_p[2]->nr_canvas_idx;
-		di_post_stru.di_mtnprd_mif.canvas_num = di_buf->di_buf_dup_p[1]->mtn_canvas_idx;
-		di_post_stru.di_mtncrd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mtn_canvas_idx;
+		di_post_stru.di_mtnprd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mtn_canvas_idx;
+		di_post_stru.di_mtncrd_mif.canvas_num = di_buf->di_buf_dup_p[1]->mtn_canvas_idx;
 		#ifdef NEW_DI_V3
 		di_post_stru.di_mcvecrd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mcvec_canvas_idx;
 		#endif
-		post_blend_mode = 3;
+		post_blend_mode = 1;
 		blend_mtn_en = 1;
 		ei_en = 1;
 		post_blend_en = 1;
@@ -4912,8 +4914,8 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
 	    case PULL_DOWN_MTN:
 		di_post_stru.di_buf0_mif.canvas0_addr0 = di_buf->di_buf_dup_p[1]->nr_canvas_idx;
 		di_post_stru.di_buf1_mif.canvas0_addr0 = di_buf->di_buf_dup_p[0]->nr_canvas_idx;
-		di_post_stru.di_mtnprd_mif.canvas_num = di_buf->di_buf_dup_p[1]->mtn_canvas_idx;
-		di_post_stru.di_mtncrd_mif.canvas_num = di_buf->di_buf_dup_p[0]->mtn_canvas_idx;
+		di_post_stru.di_mtnprd_mif.canvas_num = di_buf->di_buf_dup_p[2]->mtn_canvas_idx;
+		di_post_stru.di_mtncrd_mif.canvas_num = di_buf->di_buf_dup_p[1]->mtn_canvas_idx;
 		post_blend_mode = 0;
 		blend_mtn_en = 1;
 		ei_en = 1;
@@ -4939,7 +4941,7 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
 	    default:
 		break;
 	}
-	di_print("post_blend_mode %d\n", post_blend_mode);
+
 #ifdef NEW_DI_V1
     if(get_new_mode_flag() == 1){
         blend_ctrl |= (1<<31);
@@ -5444,7 +5446,7 @@ static int pulldown_process(di_buf_t* di_buf, int buffer_count)
         di_print("\n");
     }
 
-    di_buf->pulldown_mode = PULL_DOWN_NORMAL;
+    di_buf->pulldown_mode = -1;
     if(pulldown_detect){
         if(pulldown_detect&0x1){
             di_buf->pulldown_mode = di_buf->di_buf_dup_p[1]->pulldown_mode; //used by de_post_process
@@ -5527,7 +5529,7 @@ static int pulldown_process(di_buf_t* di_buf, int buffer_count)
                 }
             }
             if(ii<5){
-                di_buf->pulldown_mode = PULL_DOWN_NORMAL;
+                di_buf->pulldown_mode = -1;
                 if(mode==1){
                //     printk("Deinterlace pulldown %s, win%d pd field_diff_num %08x/%08x is too big\n",
                //         (pulldown_type==0)?"2:2":"3:2", ii, pd_win_prop[ii].pixels_num,
@@ -5573,7 +5575,7 @@ static int pulldown_process(di_buf_t* di_buf, int buffer_count)
         }
 #if defined(NEW_DI_TV)
        if(di_buf->vframe->source_type == VFRAME_SOURCE_TYPE_TUNER)                      {
-                 di_buf->pulldown_mode = PULL_DOWN_NORMAL;
+                 di_buf->pulldown_mode = -1;
                  //printk("2:2 ignore\n");
         }
 #endif
@@ -5630,7 +5632,11 @@ static void force_bob_vframe(di_buf_t* di_buf)
     di_unlock_irqfiq_restore(irq_flag2, fiq_flag);
 }
 #endif
+#ifdef NEW_DI_TV
 static int blend_mode = -2;
+#else
+static int blend_mode = 5;
+#endif
 module_param(blend_mode,int,0664);
 MODULE_PARM_DESC(blend_mode,"\n force post blend mode \n");
 static int process_post_vframe(void)
@@ -5737,10 +5743,11 @@ static int process_post_vframe(void)
                 else{
                     if(di_buf->di_buf_dup_p[1]->post_proc_flag == 2){
                         reset_pulldown_state();
-                        di_buf->pulldown_mode = 1; /* blend with di_buf->di_buf_dup_p[2] */
+                        di_buf->pulldown_mode = PULL_DOWN_BLEND_2; /* blend with di_buf->di_buf_dup_p[2] */
                     }
-                    else{
-                        pulldown_mode_hise = pulldown_process(di_buf, buffer_keep_count);
+                    else{ 
+                    	if(blend_mode == -2)
+                            pulldown_mode_hise = pulldown_process(di_buf, buffer_keep_count);
                     }
 #ifdef FORCE_BOB_SUPPORT
         /*added for hisense*/
@@ -5773,14 +5780,13 @@ static int process_post_vframe(void)
                             di_buf->vframe->process_fun = NULL;
                             di_buf->process_fun_index = PROCESS_FUN_NULL;
                         }
-                        /*
-                        else if(di_buf->pulldown_mode >= 0){
-                            di_buf->vframe->process_fun = de_post_process;
-                            di_buf->process_fun_index = PROCESS_FUN_DI;
-                            inc_post_ref_count(di_buf);
-                        }
-                        */
                         else{
+                       	    if(di_buf->pulldown_mode == -1)
+                         	di_buf->pulldown_mode = PULL_DOWN_NORMAL;
+                            else if(di_buf->pulldown_mode == 0)
+                        	di_buf->pulldown_mode = PULL_DOWN_BLEND_0;
+                            else if(di_buf->pulldown_mode == 1)
+                        	di_buf->pulldown_mode = PULL_DOWN_BLEND_2;
                		    /*for debug*/
                             if(blend_mode != -2)				
                                 di_buf->pulldown_mode = blend_mode;
diff --git a/drivers/amlogic/deinterlace/deinterlace.h b/drivers/amlogic/deinterlace/deinterlace.h
index c74a08c17174..b4d08fd1ebad 100755
--- a/drivers/amlogic/deinterlace/deinterlace.h
+++ b/drivers/amlogic/deinterlace/deinterlace.h
@@ -147,7 +147,7 @@ typedef enum {
 }process_fun_index_t;
 
 typedef enum {
-    PULL_DONW_BLEND_0 = 0,//buf1=dup[0]
+    PULL_DOWN_BLEND_0 = 0,//buf1=dup[0]
     PULL_DOWN_BLEND_2 = 1,//buf1=dup[2]
     PULL_DOWN_MTN     = 2,//mtn only
     PULL_DOWN_BUF1    = 3,//do wave with dup[0]
-- 
2.19.0

