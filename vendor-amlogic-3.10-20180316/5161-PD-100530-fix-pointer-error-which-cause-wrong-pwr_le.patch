From a8673229776c9656b6b5b62de312b7048fcdbb25 Mon Sep 17 00:00:00 2001
From: "jets.yan" <jets.yan@amlogic.com>
Date: Fri, 5 Dec 2014 13:32:32 +0800
Subject: [PATCH 5161/5965] PD #100530: fix pointer error which cause wrong
 pwr_level for hdmi.

Change-Id: I488b1ce0cc46432927f717195c3c8bfa6c66c9f8
---
 arch/arm/mach-meson6/include/mach/tvregs.h | 42 ++++++++++++++++++++++
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c     | 16 +++++----
 2 files changed, 52 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-meson6/include/mach/tvregs.h b/arch/arm/mach-meson6/include/mach/tvregs.h
index 887a0f089e16..290f35511df3 100755
--- a/arch/arm/mach-meson6/include/mach/tvregs.h
+++ b/arch/arm/mach-meson6/include/mach/tvregs.h
@@ -1484,6 +1484,9 @@ static const reg_t *tvregsTab[] = {
     tvregs_480i,        // For REPEAT MODE use, ENC setting is same
     tvregs_480cvbs,
     tvregs_480p,
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	tvregs_480p,
+#endif
     tvregs_480p,        // For REPEAT MODE use, ENC setting is same
     tvregs_576i,
     tvregs_576i,        // For REPEAT MODE use, ENC setting is same
@@ -1491,15 +1494,33 @@ static const reg_t *tvregsTab[] = {
     tvregs_576p,
     tvregs_576p,        // For REPEAT MODE use, ENC setting is same
     tvregs_720p,
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	tvregs_720p,
+#endif
     tvregs_1080i,       //Adjust tvregs_* sequences and match the enum define in tvmode.h
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	tvregs_1080i,
+#endif
     tvregs_1080p,
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	tvregs_1080p,
+#endif
     tvregs_720p_50hz,
     tvregs_1080i_50hz,
     tvregs_1080p_50hz,
     tvregs_1080p_24hz,
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	tvregs_1080p_24hz,
+#endif
     tvregs_4k2k_30hz,
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	tvregs_4k2k_30hz,
+#endif
     tvregs_4k2k_25hz,
     tvregs_4k2k_24hz,
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	tvregs_4k2k_24hz,
+#endif
     tvregs_4k2k_smpte,
     tvregs_vga_640x480,
     tvregs_svga_800x600,
@@ -1514,6 +1535,9 @@ static const tvinfo_t tvinfoTab[] = {
     {.xres =  720, .yres =  480, .id = "480i_rpt"},
     {.xres =  720, .yres =  480, .id = "480cvbs"},
     {.xres =  720, .yres =  480, .id = "480p"},
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	{.xres =  720, .yres =	480, .id = "480p59hz"},
+#endif
     {.xres =  720, .yres =  480, .id = "480p_rpt"},
     {.xres =  720, .yres =  576, .id = "576i"},
     {.xres =  720, .yres =  576, .id = "576i_rpt"},
@@ -1521,15 +1545,33 @@ static const tvinfo_t tvinfoTab[] = {
     {.xres =  720, .yres =  576, .id = "576p"},
     {.xres =  720, .yres =  576, .id = "576p_prt"},
     {.xres = 1280, .yres =  720, .id = "720p"},
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	{.xres = 1280, .yres =	720, .id = "720p59hz"},
+#endif
     {.xres = 1920, .yres = 1080, .id = "1080i"},
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION    
+	{.xres = 1920, .yres = 1080, .id = "1080i59hz"},
+#endif  	
     {.xres = 1920, .yres = 1080, .id = "1080p"},
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	{.xres = 1920, .yres = 1080, .id = "1080p59hz"},
+#endif
     {.xres = 1280, .yres =  720, .id = "720p50hz"},
     {.xres = 1920, .yres = 1080, .id = "1080i50hz"},
     {.xres = 1920, .yres = 1080, .id = "1080p50hz"},
     {.xres = 1920, .yres = 1080, .id = "1080p24hz"},
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	{.xres = 1920, .yres = 1080, .id = "1080p23hz"},
+#endif
     {.xres = 3840, .yres = 2160, .id = "4k2k30hz"},
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	{.xres = 3840, .yres = 2160, .id = "4k2k29hz"},
+#endif
     {.xres = 3840, .yres = 2160, .id = "4k2k25hz"},
     {.xres = 3840, .yres = 2160, .id = "4k2k24hz"},
+#ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
+	{.xres = 3840, .yres = 2160, .id = "4k2k23hz"},
+#endif
     {.xres = 4096, .yres = 2160, .id = "4k2ksmpte"},
     {.xres = 640, .yres = 480, .id = "vga"},
     {.xres = 800, .yres = 600, .id = "svga"},
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index c7b4e21c3193..31e2e36c4c0e 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -1425,7 +1425,8 @@ static int pwr_type_match(struct device_node *np, const char *str, int idx, stru
     int i = 0;
     int ret = 0;
     int gpio_val;
-    struct pwr_ctl_var (*var)[HDMI_TX_PWR_CTRL_NUM] = (struct pwr_ctl_var (*)[HDMI_TX_PWR_CTRL_NUM])pwr;
+    //struct pwr_ctl_var (*var)[HDMI_TX_PWR_CTRL_NUM] = (struct pwr_ctl_var (*)[HDMI_TX_PWR_CTRL_NUM])pwr;
+    struct pwr_ctl_var *var = (struct pwr_ctl_var*)pwr;
 
     const static char *pwr_types_id[] = {"none", "cpu", "axp202", NULL};     //match with dts file
     while(pwr_types_id[i]) {
@@ -1435,28 +1436,31 @@ static int pwr_type_match(struct device_node *np, const char *str, int idx, stru
         }
         i ++;
     }
+
+	var += idx;
+
     switch(i) {
     case CPU_GPO:
-        var[idx]->type = CPU_GPO;
+        var->type = CPU_GPO;
         ret = of_property_read_string_index(np, pwr_col, 1, &str);
         if(!ret) {
             gpio_val = amlogic_gpio_name_map_num(str);
             ret = amlogic_gpio_request(gpio_val, DEVICE_NAME);
             if (!ret) {
-                var[idx]->var.gpo.pin = gpio_val;
+                var->var.gpo.pin = gpio_val;
                 ret = of_property_read_string_index(np, pwr_col, 2, &str);
                 if(!ret) {
-                    var[idx]->var.gpo.val = (strcmp(str, "H") == 0);
+                    var->var.gpo.val = (strcmp(str, "H") == 0);
                 }
             }
         }
         break;
     case AXP202:
-        var[idx]->type = AXP202;
+        var->type = AXP202;
 // TODO later
         break;
     default:
-        var[idx]->type = NONE;
+        var->type = NONE;
     };
     return ret;
 }
-- 
2.19.0

