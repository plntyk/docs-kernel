From 1d0c65c930eecb0aadb1d182e167af72d85a1f6f Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Tue, 16 Dec 2014 14:13:29 +0800
Subject: [PATCH 5227/5965] PD #101092:DI,modify for vskip,bypass all for mbox
 project,bypass post for tv

Change-Id: I040874581479c818ab1bb78019b5553942ee1c3e
---
 drivers/amlogic/deinterlace/deinterlace.c | 26 +++++++++++------------
 1 file changed, 12 insertions(+), 14 deletions(-)

diff --git a/drivers/amlogic/deinterlace/deinterlace.c b/drivers/amlogic/deinterlace/deinterlace.c
index 642c48d02ab0..e44e3c8cac1d 100755
--- a/drivers/amlogic/deinterlace/deinterlace.c
+++ b/drivers/amlogic/deinterlace/deinterlace.c
@@ -186,7 +186,7 @@ static dev_t di_id;
 static struct class *di_class;
 
 #define INIT_FLAG_NOT_LOAD 0x80
-static char version_s[] = "2014-12-10a";//remove mtninfo,mtnc
+static char version_s[] = "2014-12-16a";//modify for vskip
 static unsigned char boot_init_flag=0;
 static int receiver_is_amvideo = 1;
 
@@ -239,20 +239,17 @@ static int post_ready_empty_count = 0;
 
 static int force_width = 0;
 static int force_height = 0;
-#ifdef NEW_DI_V1
-#if ((MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8)&&(MESON_CPU_TYPE != MESON_CPU_TYPE_MESONG9TV))
-static int di_vscale_skip_enable = 7;
+#ifdef NEW_DI_TV
+static int di_vscale_skip_enable = 3;
 /*
-bit[2]: enable bypass all for progressive
+bit[2]: enable bypass all when skip
 bit[1:0]: enable bypass post when skip
 */
 #else
-static int di_vscale_skip_enable = 3;
-#endif
-#else
-static int di_vscale_skip_enable = 1;
+static int di_vscale_skip_enable = 4;
 #endif
 
+
 #ifdef RUN_DI_PROCESS_IN_IRQ
 /*
     di_process() run in irq,
@@ -2308,14 +2305,15 @@ static unsigned char is_bypass(vframe_t *vf_in)
 /*prot is conflict with di post*/
     if(di_pre_stru.orientation)
 	return 1;
-
+#endif
     if((di_vscale_skip_enable & 0x4)&& vf_in){
 	di_vscale_skip_count = get_current_vscale_skip_count(vf_in);
-	if(di_vscale_skip_count > 0 && di_pre_stru.cur_prog_flag)
+	if((di_vscale_skip_count > 0 && di_pre_stru.cur_prog_flag) ||
+           (di_vscale_skip_count > 1 && !di_pre_stru.cur_prog_flag)
+          )
             return 1;
 	return 0;
     }
-    #endif
     return 0;
 
 }
@@ -4627,8 +4625,8 @@ static void process_vscale_skip(di_buf_t* di_buf, vframe_t* disp_vf)
 {
     //vframe_t* di_post_vf = di_buf->vframe;
     di_buf_t* di_buf_i = NULL;
-    if(di_buf->di_buf[0]!=NULL &&
-        di_buf->process_fun_index!=PROCESS_FUN_NULL){ //di post is enabled
+    if((di_buf->di_buf[0]!=NULL) && (di_vscale_skip_enable&0x1) &&
+        (di_buf->process_fun_index!=PROCESS_FUN_NULL)){ //di post is enabled
         di_vscale_skip_count = get_current_vscale_skip_count(disp_vf);
         if(((di_vscale_skip_count>0)&&(di_vscale_skip_enable&0x1))||(di_vscale_skip_enable>>16)||(bypass_dynamic_flag&0x2)){
             int width = (di_buf->di_buf[0]->canvas_config_size>>16)&0xffff;
-- 
2.19.0

