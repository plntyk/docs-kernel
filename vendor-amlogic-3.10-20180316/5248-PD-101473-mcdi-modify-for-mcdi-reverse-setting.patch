From 2bc2042966841056a002c5e1a222a75b21f8865d Mon Sep 17 00:00:00 2001
From: "kele.bai" <kele.bai@amlogic.com>
Date: Tue, 23 Dec 2014 19:02:35 +0800
Subject: [PATCH 5248/5965] PD #101473:mcdi,modify for mcdi reverse setting

Change-Id: Ibbb0c6139d837ee016e190c58bc7e1e2ac43ace0
---
 drivers/amlogic/amports/vpp.c                | 77 +++++++++-----------
 drivers/amlogic/deinterlace/deinterlace.c    | 10 ++-
 drivers/amlogic/deinterlace/deinterlace_hw.c | 15 +++-
 3 files changed, 56 insertions(+), 46 deletions(-)

diff --git a/drivers/amlogic/amports/vpp.c b/drivers/amlogic/amports/vpp.c
index 1dc49ef8cc42..745a6ffb4a0f 100755
--- a/drivers/amlogic/amports/vpp.c
+++ b/drivers/amlogic/amports/vpp.c
@@ -830,54 +830,49 @@ RESTART:
 #ifdef TV_REVERSE
     if(reverse)
     {
-		printk("reverse \n");
-		if (video_left < 0) {
-		    if (start < 0) {
-		        temp = (-start * ratio_x) >> 18;
-		        next_frame_par->VPP_hd_end_lines_ = w_in - 1 - temp;
-
-		    } else {
-		        next_frame_par->VPP_hd_end_lines_ = w_in - 1;
-		    }
-
-		} else {
-		    if (start < video_left) {
-		        temp = ((video_left - start) * ratio_x) >> 18;
-		        next_frame_par->VPP_hd_end_lines_ = w_in - 1 - temp;
-
-		    } else {
-		        next_frame_par->VPP_hd_end_lines_ = w_in - 1;
-		    }
-		}
-
-		temp = next_frame_par->VPP_hd_end_lines_ - (video_width * ratio_x >> 18);
-		next_frame_par->VPP_hd_start_lines_ = (temp >= 0) ? temp : 0;
+	if (video_left < 0) {
+	    if (start < 0) {
+	        temp = (-start * ratio_x) >> 18;
+	        next_frame_par->VPP_hd_end_lines_ = w_in - 1 - temp;
+	    } else {
+	        next_frame_par->VPP_hd_end_lines_ = w_in - 1;
+	    }
+	} else {
+	    if (start < video_left) {
+	        temp = ((video_left - start) * ratio_x) >> 18;
+	        next_frame_par->VPP_hd_end_lines_ = w_in - 1 - temp;
+	    } else {
+	        next_frame_par->VPP_hd_end_lines_ = w_in - 1;
+	    }
+	}
+	temp = next_frame_par->VPP_hd_end_lines_ - (video_width * ratio_x >> 18);
+	next_frame_par->VPP_hd_start_lines_ = (temp >= 0) ? temp : 0;
     }
-	else
+    else
 #endif
-	{
-    if (video_left < 0) {
-        if (start < 0) {
-            temp = (-start * ratio_x) >> 18;
-            next_frame_par->VPP_hd_start_lines_ = temp;
-
-        } else {
-            next_frame_par->VPP_hd_start_lines_ = 0;
-        }
+    {
+        if (video_left < 0) {
+            if (start < 0) {
+                temp = (-start * ratio_x) >> 18;
+                next_frame_par->VPP_hd_start_lines_ = temp;
 
-    } else {
-        if (start < video_left) {
-            temp = ((video_left - start) * ratio_x) >> 18;
-            next_frame_par->VPP_hd_start_lines_ = temp;
+            } else {
+                next_frame_par->VPP_hd_start_lines_ = 0;
+            }
 
         } else {
-            next_frame_par->VPP_hd_start_lines_ = 0;
+            if (start < video_left) {
+                temp = ((video_left - start) * ratio_x) >> 18;
+                next_frame_par->VPP_hd_start_lines_ = temp;
+
+            } else {
+                next_frame_par->VPP_hd_start_lines_ = 0;
+            }
         }
-    }
 
-    temp = next_frame_par->VPP_hd_start_lines_ + (video_width * ratio_x >> 18);
-    next_frame_par->VPP_hd_end_lines_ = (temp <= (w_in - 1)) ? temp : (w_in - 1);
-	}
+        temp = next_frame_par->VPP_hd_start_lines_ + (video_width * ratio_x >> 18);
+        next_frame_par->VPP_hd_end_lines_ = (temp <= (w_in - 1)) ? temp : (w_in - 1);
+    }
 
     if (h_crop_enable) {
         next_frame_par->VPP_hd_start_lines_ += video_source_crop_left;
diff --git a/drivers/amlogic/deinterlace/deinterlace.c b/drivers/amlogic/deinterlace/deinterlace.c
index e44e3c8cac1d..0fdecfb14119 100755
--- a/drivers/amlogic/deinterlace/deinterlace.c
+++ b/drivers/amlogic/deinterlace/deinterlace.c
@@ -186,7 +186,7 @@ static dev_t di_id;
 static struct class *di_class;
 
 #define INIT_FLAG_NOT_LOAD 0x80
-static char version_s[] = "2014-12-16a";//modify for vskip
+static char version_s[] = "2014-12-23a";//modify for mcdi reverse
 static unsigned char boot_init_flag=0;
 static int receiver_is_amvideo = 1;
 
@@ -2229,6 +2229,7 @@ static unsigned char is_source_change(vframe_t* vframe)
     	((di_pre_stru.cur_inp_type&VIDTYPE_VIU_FIELD)!=(vframe->type&VIDTYPE_VIU_FIELD))
     	){
     	/* just scan mode changed */
+    	pr_info("DI I<->P.\n");
     	return 2;
     }
     return 0;
@@ -3304,7 +3305,7 @@ static void pre_de_process(void)
   int cont_rd = 1;
 #endif
 #ifdef NEW_DI_V3
-    int blkhsize = 0;
+    unsigned int blkhsize = 0;
 #endif
 #ifdef DI_DEBUG
     di_print("%s: start\n", __func__);
@@ -3362,7 +3363,7 @@ static void pre_de_process(void)
 #ifdef NEW_DI_V3
     blkhsize = (di_pre_stru.di_nrwr_mif.end_x+4)/5;
     Wr(MCDI_HV_SIZEIN, (di_pre_stru.di_nrwr_mif.end_y+1)|((di_pre_stru.di_nrwr_mif.end_x+1) << 16));
-    Wr(MCDI_HV_BLKSIZEIN,(blkhsize << 16)|(di_pre_stru.di_nrwr_mif.end_y+1));
+    Wr(MCDI_HV_BLKSIZEIN,(overturn?3:0) << 30|blkhsize << 16 |(di_pre_stru.di_nrwr_mif.end_y+1));
     Wr(MCDI_BLKTOTAL,blkhsize*(di_pre_stru.di_nrwr_mif.end_y+1));		
 #endif
     // set interrupt mask for pre module.
@@ -5031,7 +5032,8 @@ static int de_post_process(void* arg, unsigned zoom_start_x_lines,
     if(di_post_stru.update_post_reg_flag){
         di_apply_reg_cfg(1);
     }
-
+#endif
+#ifdef NEW_DI_TV
     di_post_read_reverse_irq(overturn);
 #endif
 #ifdef NEW_DI_V3
diff --git a/drivers/amlogic/deinterlace/deinterlace_hw.c b/drivers/amlogic/deinterlace/deinterlace_hw.c
index 369c884acc0d..e5443e8abfdb 100755
--- a/drivers/amlogic/deinterlace/deinterlace_hw.c
+++ b/drivers/amlogic/deinterlace/deinterlace_hw.c
@@ -2093,6 +2093,7 @@ void di_post_read_reverse(bool reverse)
         /* motion vector read reverse*/
         Wr_reg_bits(MCDI_MCVECRD_X, 1, 30, 1);
         Wr_reg_bits(MCDI_MCVECRD_Y, 1, 30, 1);
+        Wr_reg_bits(MCDI_MC_CRTL, 0, 8, 1);          
         #endif
     } else {
         Wr_reg_bits(DI_IF1_GEN_REG2,  0, 2, 2);
@@ -2101,23 +2102,35 @@ void di_post_read_reverse(bool reverse)
 	#ifdef NEW_DI_V3
 	Wr_reg_bits(MCDI_MCVECRD_X, 0, 30, 1);
         Wr_reg_bits(MCDI_MCVECRD_Y, 0, 30, 1);
+        Wr_reg_bits(MCDI_MC_CRTL, 1, 8, 1); 
         #endif
     }
 #endif    
 }
 void di_post_read_reverse_irq(bool reverse)
 {
-#if ((MESON_CPU_TYPE ==  MESON_CPU_TYPE_MESON6TV)||(MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6TVD	))
+#ifdef NEW_DI_TV
     if(reverse) {
         VSYNC_WR_MPEG_REG_BITS(DI_IF1_GEN_REG2,    3, 2, 2);
         VSYNC_WR_MPEG_REG_BITS(VD1_IF0_GEN_REG2, 0xf, 2, 4);
         VSYNC_WR_MPEG_REG_BITS(VD2_IF0_GEN_REG2, 0xf, 2, 4);
 	VSYNC_WR_MPEG_REG_BITS(DI_MTNRD_CTRL, 0xf, 17,4);
+        #ifdef NEW_DI_V3
+        /* motion vector read reverse*/
+        VSYNC_WR_MPEG_REG_BITS(MCDI_MCVECRD_X, 1, 30, 1);
+        VSYNC_WR_MPEG_REG_BITS(MCDI_MCVECRD_Y, 1, 30, 1);
+        VSYNC_WR_MPEG_REG_BITS(MCDI_MC_CRTL, 0, 8, 1); 
+        #endif
     } else {
         VSYNC_WR_MPEG_REG_BITS(DI_IF1_GEN_REG2,  0, 2, 2);
 	VSYNC_WR_MPEG_REG_BITS(VD1_IF0_GEN_REG2, 0, 2, 4);
 	VSYNC_WR_MPEG_REG_BITS(VD2_IF0_GEN_REG2, 0, 2, 4);
 	VSYNC_WR_MPEG_REG_BITS(DI_MTNRD_CTRL, 0, 17,4);
+	#ifdef NEW_DI_V3
+	VSYNC_WR_MPEG_REG_BITS(MCDI_MCVECRD_X, 0, 30, 1);
+        VSYNC_WR_MPEG_REG_BITS(MCDI_MCVECRD_Y, 0, 30, 1);
+        VSYNC_WR_MPEG_REG_BITS(MCDI_MC_CRTL, 1, 8, 1);
+        #endif
     }
 #endif    
 }
-- 
2.19.0

