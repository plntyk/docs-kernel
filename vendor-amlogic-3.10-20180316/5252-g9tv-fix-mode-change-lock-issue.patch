From 7fc0d53d8a93341b79476a5e8dbedd82a527bf96 Mon Sep 17 00:00:00 2001
From: Zongdong Jiao <zongdong.jiao@amlogic.com>
Date: Thu, 25 Dec 2014 17:11:21 +0800
Subject: [PATCH 5252/5965] g9tv: fix mode change lock issue

---
 arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c | 9 ---------
 arch/arm/mach-mesong9tv/include/mach/tvregs.h      | 2 ++
 arch/arm/mach-mesong9tv/vpu.c                      | 6 ++++++
 drivers/amlogic/display/vout/tvoutc.c              | 2 ++
 drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c      | 9 ++++++---
 5 files changed, 16 insertions(+), 12 deletions(-)

diff --git a/arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c b/arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c
index 0eceaf1e51ab..c13b5e4f32c7 100755
--- a/arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c
+++ b/arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c
@@ -3081,15 +3081,6 @@ static int hdmitx_cntl_misc(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned
         return !!(aml_read_reg32(P_HHI_VID2_PLL_CNTL) & (1 << 30));     // bit30: enable
         break;
     case MISC_CONF_MODE420:
-#define CLK_UTIL_VID_PLL_DIV_2p5    14
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0, 16, 2);
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0, 18, 2);
-        aml_set_reg32_bits(P_HHI_VID_CLK_DIV, 0, 0, 8);
-        aml_set_reg32_bits(P_HHI_VID_CLK_CNTL, 1, 1, 1);
-        aml_set_reg32_bits(P_HHI_HDMI_CLK_CNTL, 1, 16, 4);
-        aml_write_reg32(P_HHI_HDMI_PHY_CNTL3, 0x303e005b);
-        hdmitx_wr_reg(HDMITX_DWC_FC_AVICONF0, 0x43);
-        hdmitx_wr_reg(HDMITX_DWC_FC_SCRAMBLER_CTRL, 0);
         aml_write_reg32(P_VPU_HDMI_FMT_CTRL, 0x1a);
         aml_write_reg32(P_VPU_HDMI_SETTING, 0x10e);
         break;
diff --git a/arch/arm/mach-mesong9tv/include/mach/tvregs.h b/arch/arm/mach-mesong9tv/include/mach/tvregs.h
index 62c967c8c0de..62a909036873 100644
--- a/arch/arm/mach-mesong9tv/include/mach/tvregs.h
+++ b/arch/arm/mach-mesong9tv/include/mach/tvregs.h
@@ -1205,6 +1205,7 @@ static struct tvregs_set_t tvregsTab[] = {
     {TVMODE_4K2K_FAKE_5G, tvregs_4k2k_30hz,   },      // FAKE 4k2k5g
     {TVMODE_4K2K_60HZ, tvregs_4k2k_30hz,   },      // 4k2k60hz
     {TVMODE_4K2K_60HZ_Y420, tvregs_4k2k_30hz,   },      // 4k2k60hz YCbCr420 mode
+    {TVMODE_4K2K_50HZ_Y420, tvregs_4k2k_25hz, },
     {TVMODE_VGA, tvregs_vga_640x480, },
     {TVMODE_SVGA, tvregs_svga_800x600,},
     {TVMODE_XGA, tvregs_xga_1024x768,},
@@ -1234,6 +1235,7 @@ static const tvinfo_t tvinfoTab[] = {
     {.tvmode = TVMODE_4K2K_SMPTE, .xres = 4096, .yres = 2160, .id = "4k2ksmpte"},
     {.tvmode = TVMODE_4K2K_FAKE_5G, .xres = 4096, .yres = 2160, .id = "4k2k5g"},
     {.tvmode = TVMODE_4K2K_60HZ_Y420, .xres = 3840, .yres = 2160, .id = "4k2k60hz420"},
+    {.tvmode = TVMODE_4K2K_50HZ_Y420, .xres = 3840, .yres = 2160, .id = "4k2k50hz420"},
     {.tvmode = TVMODE_4K2K_60HZ, .xres = 3840, .yres = 2160, .id = "4k2k60hz"},
     {.tvmode = TVMODE_VGA, .xres = 640, .yres = 480, .id = "vga"},
     {.tvmode = TVMODE_SVGA, .xres = 800, .yres = 600, .id = "svga"},
diff --git a/arch/arm/mach-mesong9tv/vpu.c b/arch/arm/mach-mesong9tv/vpu.c
index 2994df75fe87..52fbe5a4c1b5 100644
--- a/arch/arm/mach-mesong9tv/vpu.c
+++ b/arch/arm/mach-mesong9tv/vpu.c
@@ -157,6 +157,12 @@ static vpu_mod_t get_vpu_mod(unsigned int vmod)
 			case VMODE_SVGA:
 			case VMODE_XGA:
 			case VMODE_SXGA:
+            case VMODE_4K2K_FAKE_5G:
+            case VMODE_4K2K_60HZ:
+            case VMODE_4K2K_60HZ_Y420:
+            case VMODE_4K2K_50HZ:
+            case VMODE_4K2K_50HZ_Y420:
+            case VMODE_4K2K_5G:
 				vpu_mod = VPU_VENCP;
 				break;
 			case VMODE_480I:
diff --git a/drivers/amlogic/display/vout/tvoutc.c b/drivers/amlogic/display/vout/tvoutc.c
index 6de2c7c81f05..5f6940bfce81 100755
--- a/drivers/amlogic/display/vout/tvoutc.c
+++ b/drivers/amlogic/display/vout/tvoutc.c
@@ -450,6 +450,7 @@ int tvoutc_setmode(tvmode_t mode)
     tvinfo = tvinfo_mode(mode);
     if(!tvinfo) {
         printk(KERN_ERR "tvinfo %d not find\n", mode);
+        mutex_unlock(&setmode_mutex);
         return 0;
     }
     printk("TV mode %s selected.\n", tvinfo->id);
@@ -471,6 +472,7 @@ int tvoutc_setmode(tvmode_t mode)
     s = tvregs_setting_mode(mode);
     if(!s) {
         printk("display mode %d regs setting failed\n", mode);
+        mutex_lock(&setmode_mutex);
         return 0;
     }
     //s = tvregsTab[mode];
diff --git a/drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c b/drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c
index 455f465b03dc..f64c3846c377 100644
--- a/drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c
+++ b/drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c
@@ -412,11 +412,14 @@ static int set_disp_mode_auto(void)
         }
     }
     if(hdmitx_device.mode420) {
-        if(hdmitx_device.cur_VIC == HDMI_3840x2160p60_16x9) {
+        switch(hdmitx_device.cur_VIC) {
+        // Currently, only below formats support 420 mode
+        case HDMI_3840x2160p60_16x9:
+        case HDMI_3840x2160p50_16x9:
             printk("configure mode420, VIC = %d\n", hdmitx_device.cur_VIC);
             hdmitx_device.HWOp.CntlMisc(&hdmitx_device, MISC_CONF_MODE420, hdmitx_device.mode420);
-        }
-        else {
+            break;
+        default:
             hdmitx_device.mode420 = 0;
             printk("mode420 only at VIC: %d\n", HDMI_3840x2160p60_16x9);
         }
-- 
2.19.0

