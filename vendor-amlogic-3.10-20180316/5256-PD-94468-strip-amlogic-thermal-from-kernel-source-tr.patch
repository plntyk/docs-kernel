From 202eb9d5e418a80df9b2a1007eeaa08b731d53eb Mon Sep 17 00:00:00 2001
From: Tao Zeng <tao.zeng@amlogic.com>
Date: Tue, 23 Dec 2014 15:24:11 +0800
Subject: [PATCH 5256/5965] PD #94468: strip amlogic thermal from kernel source
 tree

Change-Id: Icfbd20074e38900e0e74b4abb20b150fce710d85
---
 arch/arm/configs/meson8_defconfig        |  8 ++-
 arch/arm/configs/meson8_tee_defconfig    |  8 ++-
 arch/arm/configs/meson8b_defconfig       |  8 ++-
 arch/arm/configs/meson8b_tee_defconfig   |  8 ++-
 arch/arm/configs/meson8m2_vlsi_defconfig |  8 ++-
 arch/arm/configs/mesong9tv_defconfig     |  8 ++-
 arch/arm/mach-meson8/Makefile            |  2 +-
 arch/arm/mach-meson8/thermal.c           |  3 +
 arch/arm/mach-meson8b/Makefile           |  2 +-
 arch/arm/mach-meson8b/thermal.c          |  3 +-
 arch/arm/mach-mesong9tv/Makefile         |  2 +-
 arch/arm/mach-mesong9tv/thermal.c        |  4 +-
 drivers/amlogic/Makefile                 |  2 +-
 drivers/amlogic/input/saradc/saradc.c    |  2 +-
 drivers/amlogic/thermal/Kconfig          | 16 ++---
 drivers/cpufreq/cpufreq_hotplug.c        |  1 +
 drivers/thermal/Kconfig                  |  2 +-
 drivers/thermal/cpu_cooling.c            | 21 +++++--
 drivers/thermal/fair_share.c             |  2 +-
 drivers/thermal/gpu_cooling.c            | 24 ++++++-
 drivers/thermal/step_wise.c              |  2 +-
 drivers/thermal/thermal_core.c           |  2 +-
 drivers/thermal/user_space.c             |  2 +-
 include/linux/thermal_core.h             | 80 ++++++++++++++++++++++++
 24 files changed, 183 insertions(+), 37 deletions(-)
 create mode 100644 include/linux/thermal_core.h

diff --git a/arch/arm/configs/meson8_defconfig b/arch/arm/configs/meson8_defconfig
index dbe836f87958..7821ce19b7a8 100755
--- a/arch/arm/configs/meson8_defconfig
+++ b/arch/arm/configs/meson8_defconfig
@@ -216,8 +216,14 @@ CONFIG_AML1218=y
 CONFIG_RICOH_PMU=y
 CONFIG_SECURITYKEY=y
 CONFIG_EFUSE=y
-CONFIG_AMLOGIC_THERMAL=y
 CONFIG_AMLOGIC_USB=y
+CONFIG_AML_PLATFORM_THERMAL=y
+CONFIG_THERMAL=y
+CONFIG_AML_VIRTUAL_THERMAL=y
+CONFIG_CPU_THERMAL=y
+CONFIG_GPU_THERMAL=y
+CONFIG_CPUCORE_THERMAL=y
+CONFIG_GPUCORE_THERMAL=y
 CONFIG_MMC_AML=y
 CONFIG_AMLOGIC_SPI_NOR=y
 CONFIG_AML_NEXT_GEN_NAND=y
diff --git a/arch/arm/configs/meson8_tee_defconfig b/arch/arm/configs/meson8_tee_defconfig
index 4ea9c419a498..ee6efe6972ee 100755
--- a/arch/arm/configs/meson8_tee_defconfig
+++ b/arch/arm/configs/meson8_tee_defconfig
@@ -217,7 +217,13 @@ CONFIG_AML1218=y
 CONFIG_RICOH_PMU=y
 CONFIG_SECURITYKEY=y
 CONFIG_EFUSE=y
-CONFIG_AMLOGIC_THERMAL=y
+CONFIG_AML_PLATFORM_THERMAL=y
+CONFIG_AML_VIRTUAL_THERMAL=y
+CONFIG_THERMAL=y
+CONFIG_CPU_THERMAL=y
+CONFIG_GPU_THERMAL=y
+CONFIG_CPUCORE_THERMAL=y
+CONFIG_GPUCORE_THERMAL=y
 CONFIG_AMLOGIC_USB=y
 CONFIG_MMC_AML=y
 CONFIG_AMLOGIC_SPI_NOR=y
diff --git a/arch/arm/configs/meson8b_defconfig b/arch/arm/configs/meson8b_defconfig
index 1aa9ac041cb2..444db92f3c51 100755
--- a/arch/arm/configs/meson8b_defconfig
+++ b/arch/arm/configs/meson8b_defconfig
@@ -211,8 +211,14 @@ CONFIG_AML1218=y
 CONFIG_RICOH_PMU=y
 CONFIG_SECURITYKEY=y
 CONFIG_EFUSE=y
-CONFIG_AMLOGIC_THERMAL=y
 CONFIG_AMLOGIC_USB=y
+CONFIG_AML_PLATFORM_THERMAL=y
+CONFIG_AML_VIRTUAL_THERMAL=y
+CONFIG_THERMAL=y
+CONFIG_CPU_THERMAL=y
+CONFIG_GPU_THERMAL=y
+CONFIG_CPUCORE_THERMAL=y
+CONFIG_GPUCORE_THERMAL=y
 CONFIG_MMC_AML=y
 CONFIG_AMLOGIC_SPI_NOR=y
 CONFIG_AML_NEXT_GEN_NAND=y
diff --git a/arch/arm/configs/meson8b_tee_defconfig b/arch/arm/configs/meson8b_tee_defconfig
index 06e3108207aa..5ca61e4ff94a 100755
--- a/arch/arm/configs/meson8b_tee_defconfig
+++ b/arch/arm/configs/meson8b_tee_defconfig
@@ -212,7 +212,13 @@ CONFIG_AML1218=y
 CONFIG_RICOH_PMU=y
 CONFIG_SECURITYKEY=y
 CONFIG_EFUSE=y
-CONFIG_AMLOGIC_THERMAL=y
+CONFIG_AML_PLATFORM_THERMAL=y
+CONFIG_AML_VIRTUAL_THERMAL=y
+CONFIG_THERMAL=y
+CONFIG_CPU_THERMAL=y
+CONFIG_GPU_THERMAL=y
+CONFIG_CPUCORE_THERMAL=y
+CONFIG_GPUCORE_THERMAL=y
 CONFIG_AMLOGIC_USB=y
 CONFIG_MMC_AML=y
 CONFIG_AMLOGIC_SPI_NOR=y
diff --git a/arch/arm/configs/meson8m2_vlsi_defconfig b/arch/arm/configs/meson8m2_vlsi_defconfig
index f8d885039d19..0f5c58ed727b 100755
--- a/arch/arm/configs/meson8m2_vlsi_defconfig
+++ b/arch/arm/configs/meson8m2_vlsi_defconfig
@@ -164,7 +164,13 @@ CONFIG_AML_GPIO_KEY=y
 # CONFIG_AMLOGIC_BOARD_HAS_PMU is not set
 # CONFIG_AML_DVFS is not set
 CONFIG_EFUSE=y
-CONFIG_AMLOGIC_THERMAL=y
+CONFIG_AML_PLATFORM_THERMAL=y
+CONFIG_AML_VIRTUAL_THERMAL=y
+CONFIG_THERMAL=y
+CONFIG_CPU_THERMAL=y
+CONFIG_GPU_THERMAL=y
+CONFIG_CPUCORE_THERMAL=y
+CONFIG_GPUCORE_THERMAL=y
 CONFIG_MMC_AML=y
 # CONFIG_AML_NFTL_NEW is not set
 # CONFIG_AM_NAND is not set
diff --git a/arch/arm/configs/mesong9tv_defconfig b/arch/arm/configs/mesong9tv_defconfig
index 9293b1425943..25e480998757 100755
--- a/arch/arm/configs/mesong9tv_defconfig
+++ b/arch/arm/configs/mesong9tv_defconfig
@@ -164,7 +164,13 @@ CONFIG_AML_PMU=y
 CONFIG_AML1220=y
 CONFIG_SECURITYKEY=y
 CONFIG_EFUSE=y
-CONFIG_AMLOGIC_THERMAL=y
+CONFIG_AML_PLATFORM_THERMAL=y
+CONFIG_AML_VIRTUAL_THERMAL=y
+CONFIG_THERMAL=y
+CONFIG_CPU_THERMAL=y
+CONFIG_GPU_THERMAL=y
+CONFIG_CPUCORE_THERMAL=y
+CONFIG_GPUCORE_THERMAL=y
 CONFIG_AMLOGIC_USB_3=y
 CONFIG_MMC_AML=y
 # CONFIG_AML_NFTL_NEW is not set
diff --git a/arch/arm/mach-meson8/Makefile b/arch/arm/mach-meson8/Makefile
index 2ae182bf001d..4e4b80d40231 100755
--- a/arch/arm/mach-meson8/Makefile
+++ b/arch/arm/mach-meson8/Makefile
@@ -39,7 +39,7 @@ obj-$(CONFIG_MESON_SUSPEND) += power_suspend.o
 #obj-$(CONFIG_SUSPEND) += sleep.o
 #endif
 
-obj-$(CONFIG_AMLOGIC_THERMAL) += thermal.o
+obj-$(CONFIG_AML_PLATFORM_THERMAL) += thermal.o
 
 obj-$(CONFIG_AML_HDMI_TX) +=  hdmi_tx_hw/
 
diff --git a/arch/arm/mach-meson8/thermal.c b/arch/arm/mach-meson8/thermal.c
index 4c47a69b50cd..3fdf51ed5644 100755
--- a/arch/arm/mach-meson8/thermal.c
+++ b/arch/arm/mach-meson8/thermal.c
@@ -64,6 +64,8 @@ int thermal_firmware_init()
 		return -1;
 	
 }
+EXPORT_SYMBOL(thermal_firmware_init);
+
 int get_cpu_temp(void)
 {
 	int ret=-1,tempa=0;
@@ -79,3 +81,4 @@ int get_cpu_temp(void)
 	}
 	return ret;
 }
+EXPORT_SYMBOL(get_cpu_temp);
diff --git a/arch/arm/mach-meson8b/Makefile b/arch/arm/mach-meson8b/Makefile
index c1747faac38c..33df5d839ca6 100755
--- a/arch/arm/mach-meson8b/Makefile
+++ b/arch/arm/mach-meson8b/Makefile
@@ -38,7 +38,7 @@ obj-$(CONFIG_MESON_SUSPEND) += power_suspend.o
 #ifneq ($(CONFIG_MESON_SUSPEND),y)
 #obj-$(CONFIG_SUSPEND) += sleep.o
 #endif
-obj-$(CONFIG_AMLOGIC_THERMAL) += thermal.o
+obj-$(CONFIG_AML_PLATFORM_THERMAL) += thermal.o
 
 obj-$(CONFIG_AML_HDMI_TX) +=  hdmi_tx_hw/
 
diff --git a/arch/arm/mach-meson8b/thermal.c b/arch/arm/mach-meson8b/thermal.c
index f17da11a6bfd..f1848bf7c213 100755
--- a/arch/arm/mach-meson8b/thermal.c
+++ b/arch/arm/mach-meson8b/thermal.c
@@ -59,6 +59,7 @@ int thermal_firmware_init(void)
 		return -1;
 	
 }
+EXPORT_SYMBOL(thermal_firmware_init);
 int get_cpu_temp(void)
 {
 	int ret=-1,tempa;
@@ -71,4 +72,4 @@ int get_cpu_temp(void)
 	}
 	return ret;
 }
-
+EXPORT_SYMBOL(get_cpu_temp);
diff --git a/arch/arm/mach-mesong9tv/Makefile b/arch/arm/mach-mesong9tv/Makefile
index bc8bec1367b3..e01c0cbd276a 100644
--- a/arch/arm/mach-mesong9tv/Makefile
+++ b/arch/arm/mach-mesong9tv/Makefile
@@ -37,7 +37,7 @@ obj-$(CONFIG_MESON_SUSPEND)	+= power_suspend.o
 #ifneq ($(CONFIG_MESON_SUSPEND),y)
 #obj-$(CONFIG_SUSPEND) += sleep.o
 #endif
-obj-$(CONFIG_AMLOGIC_THERMAL) += thermal.o
+obj-$(CONFIG_AML_PLATFORM_THERMAL) += thermal.o
 
 obj-$(CONFIG_AML_HDMI_TX_20)   +=  hdmi_tx_hw_20/
 
diff --git a/arch/arm/mach-mesong9tv/thermal.c b/arch/arm/mach-mesong9tv/thermal.c
index ec35de6f1076..d8d4a65efd8b 100644
--- a/arch/arm/mach-mesong9tv/thermal.c
+++ b/arch/arm/mach-mesong9tv/thermal.c
@@ -59,6 +59,8 @@ int thermal_firmware_init(void)
 		return -1;
 	
 }
+EXPORT_SYMBOL(thermal_firmware_init);
+
 int get_cpu_temp(void)
 {
 	int ret=-1,tempa;
@@ -71,4 +73,4 @@ int get_cpu_temp(void)
 	}
 	return ret;
 }
-
+EXPORT_SYMBOL(get_cpu_temp);
diff --git a/drivers/amlogic/Makefile b/drivers/amlogic/Makefile
index df191f86155d..937a1db02c63 100755
--- a/drivers/amlogic/Makefile
+++ b/drivers/amlogic/Makefile
@@ -82,7 +82,7 @@ endif
 
 obj-$(CONFIG_AML_EXT_HDMIIN) += ext_hdmiin/
 
-obj-y += thermal/
+#obj-y += thermal/
 
 
 #####Sound system is later init in kernel default..######################
diff --git a/drivers/amlogic/input/saradc/saradc.c b/drivers/amlogic/input/saradc/saradc.c
index 2b42ddae1210..546f3831e6a2 100755
--- a/drivers/amlogic/input/saradc/saradc.c
+++ b/drivers/amlogic/input/saradc/saradc.c
@@ -163,7 +163,7 @@ static int saradc_get_cal_value(struct saradc *saradc, int val)
 }
 #endif
 
-#ifdef CONFIG_AMLOGIC_THERMAL
+#ifdef CONFIG_AML_PLATFORM_THERMAL
 void temp_sensor_adc_init(int triming)
 {
 	select_temp();
diff --git a/drivers/amlogic/thermal/Kconfig b/drivers/amlogic/thermal/Kconfig
index 6050501f96f5..eda919d0162c 100644
--- a/drivers/amlogic/thermal/Kconfig
+++ b/drivers/amlogic/thermal/Kconfig
@@ -6,16 +6,8 @@ config AML_VIRTUAL_THERMAL
     default y
     help 
         Say Y if you want use amlogic virtual thermal interface
-
-config AMLOGIC_THERMAL
-    bool "amlogic thermal support"
-    select THERMAL
-    select CPU_THERMAL
-    select GPU_THERMAL
-    select CPUCORE_THERMAL
-    select GPUCORE_THERMAL
-    select AML_VIRTUAL_THERMAL 
-    depends on CPU_FREQ
+config AML_PLATFORM_THERMAL 
+    bool "Amlogic platform thermal interface"
     default n
-    help
-      This is the Amlogic Thermal interface driver
+    help 
+    Say Y if you want use amlogic platform thermal interface
diff --git a/drivers/cpufreq/cpufreq_hotplug.c b/drivers/cpufreq/cpufreq_hotplug.c
index 6999f28574ee..244aa076b2a9 100755
--- a/drivers/cpufreq/cpufreq_hotplug.c
+++ b/drivers/cpufreq/cpufreq_hotplug.c
@@ -37,6 +37,7 @@
 #include <linux/notifier.h>
 #include "cpufreq_governor.h"
 unsigned int max_cpu_num=NR_CPUS;
+EXPORT_SYMBOL(max_cpu_num);
 unsigned int last_max_cpu_num=NR_CPUS;
 
 /* greater than 80% avg load across online CPUs increases frequency */
diff --git a/drivers/thermal/Kconfig b/drivers/thermal/Kconfig
index 45aa509a985f..ababf85ba6e5 100644
--- a/drivers/thermal/Kconfig
+++ b/drivers/thermal/Kconfig
@@ -3,7 +3,7 @@
 #
 
 menuconfig THERMAL
-	tristate "Generic Thermal sysfs driver"
+	bool "Generic Thermal sysfs driver"
 	help
 	  Generic Thermal Sysfs driver offers a generic mechanism for
 	  thermal management. Usually it's made up of one or more thermal
diff --git a/drivers/thermal/cpu_cooling.c b/drivers/thermal/cpu_cooling.c
index 94ace6b66e63..76f07d4d8360 100755
--- a/drivers/thermal/cpu_cooling.c
+++ b/drivers/thermal/cpu_cooling.c
@@ -59,6 +59,8 @@ static unsigned int cpufreq_dev_count;
 /* notify_table passes value to the CPUFREQ_ADJUST callback function. */
 #define NOTIFY_INVALID NULL
 static struct cpufreq_cooling_device *notify_device;
+static int cpufreq_get_cur_state(struct thermal_cooling_device *cdev,
+				 unsigned long *state);
 
 /**
  * get_idr - function to get a unique id.
@@ -256,7 +258,7 @@ EXPORT_SYMBOL_GPL(cpufreq_cooling_get_level);
  *
  * Return: 0 on error, the corresponding frequency otherwise.
  */
-static unsigned int get_cpu_frequency(unsigned int cpu, unsigned long level)
+unsigned int get_cpu_frequency(unsigned int cpu, unsigned long level)
 {
 	int ret = 0;
 	unsigned int freq;
@@ -267,6 +269,7 @@ static unsigned int get_cpu_frequency(unsigned int cpu, unsigned long level)
 
 	return freq;
 }
+EXPORT_SYMBOL(get_cpu_frequency);
 
 /**
  * cpufreq_apply_cooling - function to apply frequency clipping.
@@ -286,11 +289,21 @@ static int cpufreq_apply_cooling(struct cpufreq_cooling_device *cpufreq_device,
 	unsigned int cpuid, clip_freq;
 	struct cpumask *mask = &cpufreq_device->allowed_cpus;
 	unsigned int cpu = cpumask_any(mask);
-
+    unsigned long cur_state;
+    
+    cpufreq_get_cur_state(cpufreq_device->cool_dev, &cur_state);
 	pr_debug("cpufreq_device->cpufreq_state=%d,cooling_state=%ld\n",cpufreq_device->cpufreq_state,cooling_state);
 	/* Check if the old cooling action is same as new cooling action */
-	if (cpufreq_device->cpufreq_state == cooling_state)
-		return 0;
+	if ((cpufreq_device->cpufreq_state == cooling_state) && (cpufreq_device->cpufreq_state == cur_state)) {
+        return 0;
+    } else {
+        /*
+         * sometimes cpufreq state will be changed by other routines
+         * so we need update it again.
+         */
+        pr_debug("%s state is not same, cpufreq_state:%d, cur_state:%ld, cooling_state:%ld\n",
+               __func__, cpufreq_device->cpufreq_state, cur_state, cooling_state);    
+    }
 
 	clip_freq = get_cpu_frequency(cpu, cooling_state);
 	if (!clip_freq)
diff --git a/drivers/thermal/fair_share.c b/drivers/thermal/fair_share.c
index 944ba2f340c8..9158b57fb261 100644
--- a/drivers/thermal/fair_share.c
+++ b/drivers/thermal/fair_share.c
@@ -24,7 +24,7 @@
 
 #include <linux/thermal.h>
 
-#include "thermal_core.h"
+#include <linux/thermal_core.h>
 
 /**
  * get_trip_level: - obtains the current trip level for a zone
diff --git a/drivers/thermal/gpu_cooling.c b/drivers/thermal/gpu_cooling.c
index e34f482b6ec2..b98f7e476ba8 100755
--- a/drivers/thermal/gpu_cooling.c
+++ b/drivers/thermal/gpu_cooling.c
@@ -109,10 +109,17 @@ static int gpufreq_get_cur_state(struct thermal_cooling_device *cdev,
 				 unsigned long *state)
 {
 	struct gpufreq_cooling_device *gpufreq_device = cdev->devdata;
+    unsigned long max_state = 0, temp = 0;
+
 	//*state = gpufreq_device->gpufreq_state;
-	if(gpufreq_device->get_gpu_current_max_level)
-		*state = gpufreq_device->get_gpu_current_max_level();
-	pr_debug( "current max state=%ld\n",*state);
+	gpufreq_get_max_state(cdev, &max_state);
+	if (gpufreq_device->get_gpu_current_max_level) {
+		temp = gpufreq_device->get_gpu_current_max_level();
+        *state = ((max_state -1) - temp);
+	    pr_debug( "current max state=%ld\n",*state);
+    } else {
+        return -EINVAL;    
+    }
 	return 0;
 }
 
@@ -227,3 +234,14 @@ void gpufreq_cooling_unregister(struct thermal_cooling_device *cdev)
 	kfree(gpufreq_dev);
 }
 EXPORT_SYMBOL_GPL(gpufreq_cooling_unregister);
+
+unsigned int (*gpu_freq_callback)(void) = NULL;
+int register_gpu_freq_info(unsigned int (*fun)(void))
+{
+    if (fun) {
+        gpu_freq_callback = fun; 
+    }    
+    return 0;
+}
+EXPORT_SYMBOL(register_gpu_freq_info);
+EXPORT_SYMBOL(gpu_freq_callback);
diff --git a/drivers/thermal/step_wise.c b/drivers/thermal/step_wise.c
index e8c857bf624e..998464f4ed47 100755
--- a/drivers/thermal/step_wise.c
+++ b/drivers/thermal/step_wise.c
@@ -24,7 +24,7 @@
 
 #include <linux/thermal.h>
 
-#include "thermal_core.h"
+#include <linux/thermal_core.h>
 
 /*
  * If the temperature is higher than a trip point,
diff --git a/drivers/thermal/thermal_core.c b/drivers/thermal/thermal_core.c
index 40d0df9dc945..399155f3880a 100755
--- a/drivers/thermal/thermal_core.c
+++ b/drivers/thermal/thermal_core.c
@@ -36,7 +36,7 @@
 #include <net/netlink.h>
 #include <net/genetlink.h>
 
-#include "thermal_core.h"
+#include <linux/thermal_core.h>
 
 MODULE_AUTHOR("Zhang Rui");
 MODULE_DESCRIPTION("Generic thermal management sysfs support");
diff --git a/drivers/thermal/user_space.c b/drivers/thermal/user_space.c
index 10adcddc8821..a5cbf7d10e6f 100644
--- a/drivers/thermal/user_space.c
+++ b/drivers/thermal/user_space.c
@@ -24,7 +24,7 @@
 
 #include <linux/thermal.h>
 
-#include "thermal_core.h"
+#include <linux/thermal_core.h>
 
 /**
  * notify_user_space - Notifies user space about thermal events
diff --git a/include/linux/thermal_core.h b/include/linux/thermal_core.h
new file mode 100644
index 000000000000..7cf2f6626251
--- /dev/null
+++ b/include/linux/thermal_core.h
@@ -0,0 +1,80 @@
+/*
+ *  thermal_core.h
+ *
+ *  Copyright (C) 2012  Intel Corp
+ *  Author: Durgadoss R <durgadoss.r@intel.com>
+ *
+ * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; version 2 of the License.
+ *
+ *  This program is distributed in the hope that it will be useful, but
+ *  WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License along
+ *  with this program; if not, write to the Free Software Foundation, Inc.,
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
+ *
+ * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ */
+
+#ifndef __THERMAL_CORE_H__
+#define __THERMAL_CORE_H__
+
+#include <linux/device.h>
+#include <linux/thermal.h>
+
+/* Initial state of a cooling device during binding */
+#define THERMAL_NO_TARGET -1UL
+
+/*
+ * This structure is used to describe the behavior of
+ * a certain cooling device on a certain trip point
+ * in a certain thermal zone
+ */
+struct thermal_instance {
+	int id;
+	char name[THERMAL_NAME_LENGTH];
+	struct thermal_zone_device *tz;
+	struct thermal_cooling_device *cdev;
+	int trip;
+	unsigned long upper;	/* Highest cooling state for this trip point */
+	unsigned long lower;	/* Lowest cooling state for this trip point */
+	unsigned long target;	/* expected cooling state */
+	char attr_name[THERMAL_NAME_LENGTH];
+	struct device_attribute attr;
+	struct list_head tz_node; /* node in tz->thermal_instances */
+	struct list_head cdev_node; /* node in cdev->thermal_instances */
+};
+
+int thermal_register_governor(struct thermal_governor *);
+void thermal_unregister_governor(struct thermal_governor *);
+
+#ifdef CONFIG_THERMAL_GOV_STEP_WISE
+int thermal_gov_step_wise_register(void);
+void thermal_gov_step_wise_unregister(void);
+#else
+static inline int thermal_gov_step_wise_register(void) { return 0; }
+static inline void thermal_gov_step_wise_unregister(void) {}
+#endif /* CONFIG_THERMAL_GOV_STEP_WISE */
+
+#ifdef CONFIG_THERMAL_GOV_FAIR_SHARE
+int thermal_gov_fair_share_register(void);
+void thermal_gov_fair_share_unregister(void);
+#else
+static inline int thermal_gov_fair_share_register(void) { return 0; }
+static inline void thermal_gov_fair_share_unregister(void) {}
+#endif /* CONFIG_THERMAL_GOV_FAIR_SHARE */
+
+#ifdef CONFIG_THERMAL_GOV_USER_SPACE
+int thermal_gov_user_space_register(void);
+void thermal_gov_user_space_unregister(void);
+#else
+static inline int thermal_gov_user_space_register(void) { return 0; }
+static inline void thermal_gov_user_space_unregister(void) {}
+#endif /* CONFIG_THERMAL_GOV_USER_SPACE */
+
+#endif /* __THERMAL_CORE_H__ */
-- 
2.19.0

