From ceedcff6f49edd39d5e32ceb05d5a220c4011fba Mon Sep 17 00:00:00 2001
From: "yu.zheng" <yu.zheng@amlogic.com>
Date: Fri, 26 Dec 2014 15:19:10 +0800
Subject: [PATCH 5262/5965] pd #93985: M8baby: m200: hdmi ao-cec:add dtd for
 distinguish between Mbox and Tablet. 1.cec_config = <0x00000f> AO-CEC init
 for MBOX. 2.cec_config = <0x000000> or no this value for TABLET.

---
 arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd |  12 +-
 .../boot/dts/amlogic/meson8b_m200_1G_iptv.dtd |  12 +-
 .../boot/dts/amlogic/meson8b_m201C_512M.dtd   |  12 +-
 arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd |  12 +-
 .../boot/dts/amlogic/meson8b_m202_512M.dtd    |  12 +-
 arch/arm/boot/dts/amlogic/meson8b_m203a.dtd   |  12 +-
 arch/arm/boot/dts/amlogic/meson8b_m203b.dtd   |  12 +-
 arch/arm/mach-meson8b/pm.c                    | 105 +++++++++++-------
 .../arm/plat-meson/include/plat/hdmi_config.h |   6 +-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c        |  13 ++-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c    |  30 +++--
 11 files changed, 159 insertions(+), 79 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
index 16b6cc652221..fc181a974c12 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m200_1G.dtd
@@ -1414,12 +1414,16 @@ void root_func(){
 //$$ L2 PROP_STR = "vendor_name"
 //$$ L2 PROP_U32 = "vendor_id"
 //$$ L2 PROP_STR = "product_desc"
-//$$ L2 PROP_STR = "cec_osd_string"        
+//$$ L2 PROP_STR = "cec_osd_string"   
+//$$ L2 PROP_U32 = "cec_config"    
+//$$ L2 PROP_U32 = "ao_cec"   
         vend_data: vend_data{
             vendor_name = "Amlogic";           /* Max Chars: 8     */
-            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
-            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
-            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
+            vendor_id = <0x000000>;            /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt */
+            product_desc = "M8 MBox SKTv1";    /* Max Chars: 16    */
+            cec_osd_string = "MBox";           /* Max Chars: 14    */
+            cec_config = <0x00000f>;           /* 4 bytes: use to control cec switch on/off; distinguish between Mbox and Tablet. <0x00000f>:Mbox; <0x000000> or no this value:Tablet*/
+            ao_cec = <0x000001>;               /* switch between ao-cec and ee-cec:: 1: ao-cec; 0: ee-cec */
         };
         
 //$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m200_1G_iptv.dtd b/arch/arm/boot/dts/amlogic/meson8b_m200_1G_iptv.dtd
index a770dc009bca..54e251e4fc77 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m200_1G_iptv.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m200_1G_iptv.dtd
@@ -1404,12 +1404,16 @@ void root_func(){
 //$$ L2 PROP_STR = "vendor_name"
 //$$ L2 PROP_U32 = "vendor_id"
 //$$ L2 PROP_STR = "product_desc"
-//$$ L2 PROP_STR = "cec_osd_string"        
+//$$ L2 PROP_STR = "cec_osd_string"   
+//$$ L2 PROP_U32 = "cec_config"    
+//$$ L2 PROP_U32 = "ao_cec"   
         vend_data: vend_data{
             vendor_name = "Amlogic";           /* Max Chars: 8     */
-            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
-            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
-            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
+            vendor_id = <0x000000>;            /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt */
+            product_desc = "M8 MBox SKTv1";    /* Max Chars: 16    */
+            cec_osd_string = "MBox";           /* Max Chars: 14    */
+            cec_config = <0x00000f>;           /* 4 bytes: use to control cec switch on/off; distinguish between Mbox and Tablet. <0x00000f>:Mbox; <0x000000> or no this value:Tablet*/
+            ao_cec = <0x000001>;               /* switch between ao-cec and ee-cec:: 1: ao-cec; 0: ee-cec */
         };
         
 //$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m201C_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m201C_512M.dtd
index b0c3ed35e62a..d30b53de7822 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m201C_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m201C_512M.dtd
@@ -1467,12 +1467,16 @@ void root_func(){
 //$$ L2 PROP_STR = "vendor_name"
 //$$ L2 PROP_U32 = "vendor_id"
 //$$ L2 PROP_STR = "product_desc"
-//$$ L2 PROP_STR = "cec_osd_string"        
+//$$ L2 PROP_STR = "cec_osd_string"   
+//$$ L2 PROP_U32 = "cec_config"    
+//$$ L2 PROP_U32 = "ao_cec"   
         vend_data: vend_data{
             vendor_name = "Amlogic";           /* Max Chars: 8     */
-            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
-            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
-            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
+            vendor_id = <0x000000>;            /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt */
+            product_desc = "M8 MBox SKTv1";    /* Max Chars: 16    */
+            cec_osd_string = "MBox";           /* Max Chars: 14    */
+            cec_config = <0x00000f>;           /* 4 bytes: use to control cec switch on/off; distinguish between Mbox and Tablet. <0x00000f>:Mbox; <0x000000> or no this value:Tablet*/
+            ao_cec = <0x000001>;               /* switch between ao-cec and ee-cec:: 1: ao-cec; 0: ee-cec */
         };
         
 //$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd
index b10e2edc020a..68cc16fc4c08 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m201_1G.dtd
@@ -1461,12 +1461,16 @@ void root_func(){
 //$$ L2 PROP_STR = "vendor_name"
 //$$ L2 PROP_U32 = "vendor_id"
 //$$ L2 PROP_STR = "product_desc"
-//$$ L2 PROP_STR = "cec_osd_string"        
+//$$ L2 PROP_STR = "cec_osd_string"   
+//$$ L2 PROP_U32 = "cec_config"    
+//$$ L2 PROP_U32 = "ao_cec"   
         vend_data: vend_data{
             vendor_name = "Amlogic";           /* Max Chars: 8     */
-            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
-            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
-            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
+            vendor_id = <0x000000>;            /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt */
+            product_desc = "M8 MBox SKTv1";    /* Max Chars: 16    */
+            cec_osd_string = "MBox";           /* Max Chars: 14    */
+            cec_config = <0x00000f>;           /* 4 bytes: use to control cec switch on/off; distinguish between Mbox and Tablet. <0x00000f>:Mbox; <0x000000> or no this value:Tablet*/
+            ao_cec = <0x000001>;               /* switch between ao-cec and ee-cec:: 1: ao-cec; 0: ee-cec */
         };
         
 //$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m202_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m202_512M.dtd
index b49acdc9573d..1240a299d065 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m202_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m202_512M.dtd
@@ -1362,12 +1362,16 @@ void root_func(){
 //$$ L2 PROP_STR = "vendor_name"
 //$$ L2 PROP_U32 = "vendor_id"
 //$$ L2 PROP_STR = "product_desc"
-//$$ L2 PROP_STR = "cec_osd_string"        
+//$$ L2 PROP_STR = "cec_osd_string"   
+//$$ L2 PROP_U32 = "cec_config"    
+//$$ L2 PROP_U32 = "ao_cec"   
         vend_data: vend_data{
             vendor_name = "Amlogic";           /* Max Chars: 8     */
-            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
-            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
-            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
+            vendor_id = <0x000000>;            /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt */
+            product_desc = "M8 MBox SKTv1";    /* Max Chars: 16    */
+            cec_osd_string = "MBox";           /* Max Chars: 14    */
+            cec_config = <0x00000f>;           /* 4 bytes: use to control cec switch on/off; distinguish between Mbox and Tablet. <0x00000f>:Mbox; <0x000000> or no this value:Tablet*/
+            ao_cec = <0x000001>;               /* switch between ao-cec and ee-cec:: 1: ao-cec; 0: ee-cec */
         };
         
 //$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m203a.dtd b/arch/arm/boot/dts/amlogic/meson8b_m203a.dtd
index d7613a7cacdf..0e36d20af0ff 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m203a.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m203a.dtd
@@ -1364,12 +1364,16 @@ void root_func(){
 //$$ L2 PROP_STR = "vendor_name"
 //$$ L2 PROP_U32 = "vendor_id"
 //$$ L2 PROP_STR = "product_desc"
-//$$ L2 PROP_STR = "cec_osd_string"        
+//$$ L2 PROP_STR = "cec_osd_string"   
+//$$ L2 PROP_U32 = "cec_config"    
+//$$ L2 PROP_U32 = "ao_cec"   
         vend_data: vend_data{
             vendor_name = "Amlogic";           /* Max Chars: 8     */
-            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
-            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
-            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
+            vendor_id = <0x000000>;            /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt */
+            product_desc = "M8 MBox SKTv1";    /* Max Chars: 16    */
+            cec_osd_string = "MBox";           /* Max Chars: 14    */
+            cec_config = <0x00000f>;           /* 4 bytes: use to control cec switch on/off; distinguish between Mbox and Tablet. <0x00000f>:Mbox; <0x000000> or no this value:Tablet*/
+            ao_cec = <0x000001>;               /* switch between ao-cec and ee-cec:: 1: ao-cec; 0: ee-cec */
         };
         
 //$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m203b.dtd b/arch/arm/boot/dts/amlogic/meson8b_m203b.dtd
index d3b8d73ad705..9650c1921b39 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m203b.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m203b.dtd
@@ -1365,12 +1365,16 @@ void root_func(){
 //$$ L2 PROP_STR = "vendor_name"
 //$$ L2 PROP_U32 = "vendor_id"
 //$$ L2 PROP_STR = "product_desc"
-//$$ L2 PROP_STR = "cec_osd_string"        
+//$$ L2 PROP_STR = "cec_osd_string"   
+//$$ L2 PROP_U32 = "cec_config"    
+//$$ L2 PROP_U32 = "ao_cec"   
         vend_data: vend_data{
             vendor_name = "Amlogic";           /* Max Chars: 8     */
-            vendor_id = <0x000000>;                 /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
-            product_desc = "M8 MBox SKTv1";        /* Max Chars: 16    */
-            cec_osd_string = "Amlogic MBox";        /* Max Chars: 14    */
+            vendor_id = <0x000000>;            /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt */
+            product_desc = "M8 MBox SKTv1";    /* Max Chars: 16    */
+            cec_osd_string = "MBox";           /* Max Chars: 14    */
+            cec_config = <0x00000f>;           /* 4 bytes: use to control cec switch on/off; distinguish between Mbox and Tablet. <0x00000f>:Mbox; <0x000000> or no this value:Tablet*/
+            ao_cec = <0x000001>;               /* switch between ao-cec and ee-cec:: 1: ao-cec; 0: ee-cec */
         };
         
 //$$ MATCH "HDMI_pwr-ctrl_match" = <&pwr_ctrl>
diff --git a/arch/arm/mach-meson8b/pm.c b/arch/arm/mach-meson8b/pm.c
index c293dd9af15a..39bca4bf38ea 100755
--- a/arch/arm/mach-meson8b/pm.c
+++ b/arch/arm/mach-meson8b/pm.c
@@ -31,6 +31,7 @@
 #include <plat/regops.h>
 #include <plat/io.h>
 #include <plat/wakeup.h>
+#include <linux/of.h>
 #ifdef CONFIG_MESON_TRUSTZONE
 #include <mach/meson-secure.h>
 #endif
@@ -55,7 +56,9 @@ static int early_suspend_flag = 0;
 #define ON  1
 #define OFF 0
 
+static unsigned int  cec_config;       // 4 bytes: use to control cec switch on/off,distinguish between Mbox and Tablet. bit[0]:1:Mbox; 0:Tablet
 static struct meson_pm_config *pdata;
+static struct device_node *cec_np = NULL;
 
 #define CLK(addr)  \
 { \
@@ -262,51 +265,59 @@ int run_arc_program(void)
 	unsigned vaddr2,v;
 	unsigned* pbuffer;
 	vaddr2 = IO_SRAM_BASE;
-
-	aml_write_reg32(P_AO_REMAP_REG0,0);
-	udelay(10);
-	pbuffer = (unsigned*)vaddr2;
-
-	memcpy(pbuffer,arc_code,sizeof(arc_code));//need not flush cache for sram. Sram locates at io mapping.
-
-//	for(i = 0; i<sizeof(arc_code)/4; i+=4,pbuffer+=4)
-//		printk(" 0x%x	0x%x	0x%x	0x%x \n",*(pbuffer),*(pbuffer+1),*(pbuffer+2),*(pbuffer+3));
-    v = ((IO_SRAM_PHY_BASE & 0xFFFFF)>>12);
-    aml_write_reg32(P_AO_SECURE_REG0, v<<8 | aml_read_reg32(P_AO_SECURE_REG0)); //TEST_N : 1->output mode; 0->input mode
-
-    aml_write_reg32(P_AO_RTI_STATUS_REG1, 0);//clean status
-
-//	writel(0x200,P_AO_CPU_CNTL);//halt first
-	aml_write_reg32(P_RESET2_REGISTER, aml_read_reg32(P_RESET2_REGISTER)|(1<<13));//reset AO_CPU
-
-	udelay(10);
-
-  //enable arc
-    aml_write_reg32(P_AO_CPU_CNTL, 0x0c900101);//remap is right?
-
-	udelay(20);
-	if(aml_read_reg32(P_AO_RTI_STATUS_REG1) == 0xeeeeaaaa){
-		printk("AO cpu runs ok.\n");
-		return 0;
-	}
-	else{
-		printk("AO cpu runs fail. 0x%x\n",aml_read_reg32(P_AO_RTI_STATUS_REG1));
-		return -1;
-	}
+	
+	if(cec_config & 0x1)// 4 bytes: use to control cec switch on/off,distinguish between Mbox and Tablet. bit[0]:1:Mbox; 0:Tablet
+    {
+    	aml_write_reg32(P_AO_REMAP_REG0,0);
+    	udelay(10);
+    	pbuffer = (unsigned*)vaddr2;
+    
+    	memcpy(pbuffer,arc_code,sizeof(arc_code));//need not flush cache for sram. Sram locates at io mapping.
+    
+//    	for(i = 0; i<sizeof(arc_code)/4; i+=4,pbuffer+=4)
+//    		printk(" 0x%x	0x%x	0x%x	0x%x \n",*(pbuffer),*(pbuffer+1),*(pbuffer+2),*(pbuffer+3));
+        v = ((IO_SRAM_PHY_BASE & 0xFFFFF)>>12);
+        aml_write_reg32(P_AO_SECURE_REG0, v<<8 | aml_read_reg32(P_AO_SECURE_REG0)); //TEST_N : 1->output mode; 0->input mode
+    
+        aml_write_reg32(P_AO_RTI_STATUS_REG1, 0);//clean status
+    
+//    	writel(0x200,P_AO_CPU_CNTL);//halt first
+    	aml_write_reg32(P_RESET2_REGISTER, aml_read_reg32(P_RESET2_REGISTER)|(1<<13));//reset AO_CPU
+    
+    	udelay(10);
+    
+//      enable arc
+        aml_write_reg32(P_AO_CPU_CNTL, 0x0c900101);//remap is right?
+    
+    	udelay(20);
+    	if(aml_read_reg32(P_AO_RTI_STATUS_REG1) == 0xeeeeaaaa){
+    		printk("AO cpu runs ok.\n");
+    		return 0;
+    	}
+    	else{
+    		printk("AO cpu runs fail. 0x%x\n",aml_read_reg32(P_AO_RTI_STATUS_REG1));
+    		return -1;
+    	}
+    }
+    return -1;
 }
 
 int stop_ao_cpu(void)
 {
-	aml_write_reg32(P_AO_RTI_STATUS_REG1, 0xddddeeee); //ask ao to halt.
-	udelay(15);
-	if(aml_read_reg32(P_AO_RTI_STATUS_REG1) == 0x0){
-		printk("AO cpu stop ok.\n");
-		return 0;
-	}
-	else{
-		printk("AO cpu stop fail.\n");
-		return -1;
-	}
+	if(cec_config & 0x1)// 4 bytes: use to control cec switch on/off,distinguish between Mbox and Tablet. bit[0]:1:Mbox; 0:Tablet
+    {
+    	aml_write_reg32(P_AO_RTI_STATUS_REG1, 0xddddeeee); //ask ao to halt.
+    	udelay(15);
+    	if(aml_read_reg32(P_AO_RTI_STATUS_REG1) == 0x0){
+    		printk("AO cpu stop ok.\n");
+    		return 0;
+    	}
+    	else{
+    		printk("AO cpu stop fail.\n");
+    		return -1;
+    	}
+    }
+    return -1;
 }
 #endif
 
@@ -469,6 +480,18 @@ static int __init meson_pm_probe(struct platform_device *pdev)
 	
 	clk81 = clk_get_sys("clk81", NULL);
 	clkxtal = clk_get_sys("xtal", NULL);
+	
+	cec_np = of_find_node_by_name(NULL, "vend_data");
+	if(cec_np){
+	    if(of_property_read_u32(cec_np, "cec_config", &cec_config))
+	        cec_config = 0x0;
+	}
+	else
+	{
+	    cec_config = 0x0;
+	}
+    printk("hdmi: cec_pm: cec config:0x%x\n", cec_config);
+    
 	printk(KERN_INFO "meson_pm_probe done !\n");
 
 #ifdef CONFIG_AO_TRIG_CLK
diff --git a/arch/arm/plat-meson/include/plat/hdmi_config.h b/arch/arm/plat-meson/include/plat/hdmi_config.h
index 036c9e8b5f32..8590129e9f67 100755
--- a/arch/arm/plat-meson/include/plat/hdmi_config.h
+++ b/arch/arm/plat-meson/include/plat/hdmi_config.h
@@ -23,10 +23,12 @@ struct hdmi_phy_set_data {
 };
 
 struct vendor_info_data {
-	unsigned char *vendor_name;	// Max Chars: 8
-	unsigned int  vendor_id;	// 3 Bytes, Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt
+	unsigned char *vendor_name;	    // Max Chars: 8
+	unsigned int  vendor_id;	    // 3 Bytes, Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt
 	unsigned char *product_desc;	// Max Chars: 16
 	unsigned char *cec_osd_string;	// Max Chars: 14
+	unsigned int  cec_config;       // 4 bytes: use to control cec switch on/off
+	unsigned int  ao_cec;           //switch between ao-cec and ee-cec:: 1: ao-cec; 0: ee-cec
 };
 
 enum pwr_type {
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
index 5e13aabe06a0..9ce8cdfb2dca 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx.c
@@ -529,7 +529,7 @@ static ssize_t store_cec(struct device * dev, struct device_attribute *attr, con
 static ssize_t show_cec_config(struct device * dev, struct device_attribute *attr, char * buf)
 {
     int pos=0;
-    pos+=snprintf(buf+pos, PAGE_SIZE, "P_AO_DEBUG_REG0:0x%x\n", aml_read_reg32(P_AO_DEBUG_REG0));
+    pos+=snprintf(buf+pos, PAGE_SIZE, "0x%x\n", aml_read_reg32(P_AO_DEBUG_REG0));
     return pos;
 }
 
@@ -1433,6 +1433,17 @@ static int get_dt_vend_init_data(struct device_node *np, struct vendor_info_data
         hdmi_print(INF, SYS "not find cec osd string\n");
         return 1;
     }
+    
+    ret = of_property_read_u32(np, "cec_config", &(vend->cec_config));
+    if(ret) {
+        hdmi_print(INF, SYS "not find cec config\n");
+        return 1;
+    }
+    ret = of_property_read_u32(np, "ao_cec", &(vend->ao_cec));
+    if(ret) {
+        hdmi_print(INF, SYS "not find ao cec\n");
+        return 1;
+    }
     return 0;
 }
 
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
index 25149999cb5a..0bf8f49eb719 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
@@ -94,7 +94,7 @@ unsigned int menu_lang_array[] = {(((unsigned int)'c')<<16)|(((unsigned int)'h')
                                  };
 
 // CEC default setting
-static unsigned char * osd_name = "Amlogic MBox";
+static unsigned char * osd_name = "MBox";
 static unsigned int vendor_id = 0x00;
 
 static irqreturn_t cec_isr_handler(int irq, void *dev_instance);
@@ -181,7 +181,8 @@ static int detect_tv_support_cec(unsigned addr)
 void cec_node_init(hdmitx_dev_t* hdmitx_device)
 {
     struct vendor_info_data *vend_data = NULL;
-
+    unsigned int  cec_config;       // 4 bytes: use to control cec switch on/off
+    
     int i, bool = 0;
     const enum _cec_log_dev_addr_e player_dev[3] = {CEC_PLAYBACK_DEVICE_1_ADDR,
                                                     CEC_PLAYBACK_DEVICE_2_ADDR,
@@ -198,22 +199,37 @@ void cec_node_init(hdmitx_dev_t* hdmitx_device)
         hdmi_print(INF, CEC "CEC node init\n");
     }
 
-    if(!(hdmitx_device->cec_func_config & (1 << CEC_FUNC_MSAK)))
-        return ;
-
-#if 1       //todo
     if(hdmitx_device->config_data.vend_data)
         vend_data = hdmitx_device->config_data.vend_data;
+
+    if((vend_data) && (vend_data->cec_config))
+    {
+        cec_config = vend_data->cec_config;
+    }
+    else
+    {
+        cec_config = 0x0;
+    }
+    hdmi_print(INF, CEC "cec_config: 0x%x; ao_cec:0x%x\n", vend_data->cec_config, vend_data->ao_cec);
+    
+    //enable cec features by default.
+    hdmitx_device->cec_func_config = cec_config;
+    aml_write_reg32(P_AO_DEBUG_REG0, cec_config);
+    
     if((vend_data) && (vend_data->cec_osd_string)) {
         i = strlen(vend_data->cec_osd_string);
         if(i > 14) 
             vend_data->cec_osd_string[14] = '\0';   // OSD string length must be less than 14 bytes
         osd_name = vend_data->cec_osd_string;
     }
+    
     if((vend_data) && (vend_data->vendor_id)) {
         vendor_id = (vend_data->vendor_id ) & 0xffffff;
     }
-#endif
+
+    if(!(hdmitx_device->cec_func_config & (1 << CEC_FUNC_MSAK)))
+        return ;
+
 #if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
     aml_set_reg32_bits(P_PERIPHS_PIN_MUX_1, 1, 25, 1);
     // Clear CEC Int. state and set CEC Int. mask
-- 
2.19.0

