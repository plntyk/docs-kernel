From d951ff7c4409e2550093e84233f2b6f8dfe2fcfd Mon Sep 17 00:00:00 2001
From: "lei.yang" <lei.yang@amlogic.com>
Date: Wed, 17 Dec 2014 15:57:01 +0800
Subject: [PATCH 5278/5965] g9tv: lcd: add lvds setting for t868

---
 arch/arm/mach-mesong9tv/enc_clk_config.c | 12 +++---
 drivers/amlogic/display/lcd/aml_lcd.c    | 47 ++++++++++++++++++------
 2 files changed, 43 insertions(+), 16 deletions(-)

diff --git a/arch/arm/mach-mesong9tv/enc_clk_config.c b/arch/arm/mach-mesong9tv/enc_clk_config.c
index 09945cc12a82..e2990651f058 100755
--- a/arch/arm/mach-mesong9tv/enc_clk_config.c
+++ b/arch/arm/mach-mesong9tv/enc_clk_config.c
@@ -247,11 +247,11 @@ void clocks_set_vid_clk_div(int div_sel)
     case CLK_UTIL_VID_PLL_DIV_6p25:   shift_val = 0x0000; shift_sel = 3; break;
     case CLK_UTIL_VID_PLL_DIV_7:      shift_val = 0x3c78; shift_sel = 1; break;
     case CLK_UTIL_VID_PLL_DIV_7p5:    shift_val = 0x78f0; shift_sel = 2; break;
-    case CLK_UTIL_VID_PLL_DIV_12:     shift_val = 0x0fc0; shift_sel = 0; break; 
+    case CLK_UTIL_VID_PLL_DIV_12:     shift_val = 0x0fc0; shift_sel = 0; break;
     case CLK_UTIL_VID_PLL_DIV_14:     shift_val = 0x3f80; shift_sel = 1; break;
     case CLK_UTIL_VID_PLL_DIV_15:     shift_val = 0x7f80; shift_sel = 2; break;
     case CLK_UTIL_VID_PLL_DIV_2p5:    shift_val = 0x5294; shift_sel = 2; break;
-    default: 
+    default:
         printk("Error: clocks_set_vid_clk_div:  Invalid parameter\n");
         break;
     }
@@ -262,7 +262,7 @@ void clocks_set_vid_clk_div(int div_sel)
         aml_set_reg32_bits(P_HHI_VID_PLL_CLK_DIV, 0, 16, 2);
         aml_set_reg32_bits(P_HHI_VID_PLL_CLK_DIV, 0, 15, 1);
         aml_set_reg32_bits(P_HHI_VID_PLL_CLK_DIV, 0, 0, 14);
-        
+
         aml_set_reg32_bits(P_HHI_VID_PLL_CLK_DIV, shift_sel, 16, 2);
         aml_set_reg32_bits(P_HHI_VID_PLL_CLK_DIV, 1, 15, 1);
         aml_set_reg32_bits(P_HHI_VID_PLL_CLK_DIV, shift_val, 0, 14);
@@ -469,7 +469,8 @@ static int sHDMI_DPLL_DATA[][3] = {
 	//frequency(M)    HHI_HDMI_PLL_CNTL   HHI_HDMI_PLL_CNTL2: (bit18: OD1 is 1)
 	{   399.840,         0x60000663,         0x00520f5b},
 	{   378.000,         0x6000023e,         0x00920fff},
-	{  2079.000,         0x60000681,         0x00110eff},
+//	{  2079.000,         0x60000681,         0x00110eff},
+	{  2079.000,         0x500404ad,         0x00414400},
 	{   810.000,         0x60000886,         0x00120fff},
 	{  1080.000,         0x6000022c,         0x00120fff},
 	{  2227.500,         0x6000068b,         0x00110380},
@@ -506,7 +507,8 @@ int set_hdmi_dpll(int freq, int od1)
 	else {
 		aml_write_reg32(P_HHI_HDMI_PLL_CNTL, sHDMI_DPLL_DATA[i][1]);
 		aml_write_reg32(P_HHI_HDMI_PLL_CNTL2,sHDMI_DPLL_DATA[i][2]);
-		aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2,od1,18,2);
+//		aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2,od1,18,2);
+		aml_write_reg32(P_HHI_HDMI_PLL_CNTL, sHDMI_DPLL_DATA[i][1] & (~(1<<28)));
 	}
 
 	printk("Wait 10us for phy_clk stable!\n");
diff --git a/drivers/amlogic/display/lcd/aml_lcd.c b/drivers/amlogic/display/lcd/aml_lcd.c
index 32c8ee2cb72c..f4f8f67db0b2 100755
--- a/drivers/amlogic/display/lcd/aml_lcd.c
+++ b/drivers/amlogic/display/lcd/aml_lcd.c
@@ -173,17 +173,40 @@ static void set_tcon_lvds(Lcd_Config_t *pConf)
 	aml_write_reg32(P_VPP_MISC, aml_read_reg32(P_VPP_MISC) & ~(VPP_OUT_SATURATE));
 }
 
+
+
+//new lvd_vx1_phy config
+void lvds_phy_config(int lvds_vx1_sel)
+{
+	//debug
+	aml_write_reg32(P_VPU_VLOCK_GCLK_EN, 7);
+	aml_write_reg32(P_VPU_VLOCK_ADJ_EN_SYNC_CTRL, 0x108010ff);
+	aml_write_reg32(P_VPU_VLOCK_CTRL, 0xe0f50f1b);
+	//debug
+
+	if(lvds_vx1_sel == 0){ //lvds
+		aml_write_reg32(P_HHI_DIF_CSI_PHY_CNTL1, 0x6c6cca80);
+		aml_write_reg32(P_HHI_DIF_CSI_PHY_CNTL2, 0x0000006c);
+		aml_write_reg32(P_HHI_DIF_CSI_PHY_CNTL3, 0x0fff0800);
+		//od   clk 1039.5 / 2 = 519.75 = 74.25*7
+		aml_write_reg32(P_HHI_LVDS_TX_PHY_CNTL0, 0x0fff0040);
+	}else{
+
+	}
+
+}
+
 void vclk_set_encl_lvds(vmode_t vmode, int lvds_ports)
 {
 	int hdmi_clk_out;
-	int hdmi_vx1_clk_od1;
+	//int hdmi_vx1_clk_od1;
 	int vx1_phy_div;
-	int encl_div; 
+	int encl_div;
 	unsigned int xd;
+	//no used, od2 must >= od3.
+	//hdmi_vx1_clk_od1 = 1; //OD1 always 1
 
-	hdmi_vx1_clk_od1 = 1; //OD1 always 1
-
-	if(lvds_ports<2){  
+	if(lvds_ports<2){
 		//pll_video.pl 3500 pll_out
 		switch(vmode) {
 			case VMODE_LVDS_768P : //total: 1560x806 pixel clk = 75.5MHz, phy_clk(s)=(pclk*7)= 528.5 = 1057/2
@@ -200,8 +223,8 @@ void vclk_set_encl_lvds(vmode_t vmode, int lvds_ports)
 				pr_err("Error video format!\n");
 				return;
 		}
-
-		if(set_hdmi_dpll(hdmi_clk_out,hdmi_vx1_clk_od1)) {
+		//if(set_hdmi_dpll(hdmi_clk_out,hdmi_vx1_clk_od1)) {
+		if(set_hdmi_dpll(hdmi_clk_out,0)) {
 			pr_err("Unsupported HDMI_DPLL out frequency!\n");
 			return;
 		}
@@ -210,11 +233,11 @@ void vclk_set_encl_lvds(vmode_t vmode, int lvds_ports)
 			vx1_phy_div = vx1_phy_div*2;
 	}else if(lvds_ports>=2) {
 		pr_err("Quad-LVDS is not supported!\n");
-		return; 
+		return;
 	}
 
-	//configure vid_clk_div_top  
-	if((encl_div%14)==0){//7*even	
+	//configure vid_clk_div_top
+	if((encl_div%14)==0){//7*even
 		clocks_set_vid_clk_div(CLK_UTIL_VID_PLL_DIV_14);
 		xd = encl_div/14;
 	}else if((encl_div%7)==0){ //7*odd
@@ -224,9 +247,11 @@ void vclk_set_encl_lvds(vmode_t vmode, int lvds_ports)
 		clocks_set_vid_clk_div(CLK_UTIL_VID_PLL_DIV_3p5);
 		xd = encl_div/3.5;
 	}
-	//for lvds phy clock and enable decoupling FIFO 
+	//for lvds phy clock and enable decoupling FIFO
 	aml_write_reg32(P_HHI_LVDS_TX_PHY_CNTL1,((3<<6)|((vx1_phy_div-1)<<1)|1)<<24);
 
+	//config lvds phy
+	lvds_phy_config(0);
 	//configure crt_video
 	set_crt_video_enc(0,0,xd);  //configure crt_video V1: inSel=vid_pll_clk(0),DivN=xd)
 	enable_crt_video_encl(1,0); //select and enable the output
-- 
2.19.0

