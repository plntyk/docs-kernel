From ff4ae0ab3e435de2f8d219265beaba5d6df73458 Mon Sep 17 00:00:00 2001
From: "tao.dong" <tao.dong@amlogic.com>
Date: Sun, 4 Jan 2015 11:24:42 +0800
Subject: [PATCH 5288/5965] PD#100368:fix h265 seek mosaic when enable CMA

Change-Id: Ia1fc13cc0148b77f2d3feda2892943646bcd880f
---
 drivers/amlogic/amports/vh265.c | 23 +++++++++++++----------
 1 file changed, 13 insertions(+), 10 deletions(-)

diff --git a/drivers/amlogic/amports/vh265.c b/drivers/amlogic/amports/vh265.c
index 5769993c6965..49a8df303809 100755
--- a/drivers/amlogic/amports/vh265.c
+++ b/drivers/amlogic/amports/vh265.c
@@ -986,19 +986,22 @@ static unsigned int log2i (unsigned int val) {
 }
 
 static int init_buf_spec(hevc_stru_t* hevc);
-
+extern u32 get_blackout_policy(void);
 static void uninit_pic_list(hevc_stru_t* hevc)
 {
 	int i;
-	for(i=0; i<MAX_REF_PIC_NUM; i++){
-    if(m_PIC[i].alloc_pages!=NULL && m_PIC[i].cma_page_count>0){
-        dma_release_from_contiguous(cma_dev, m_PIC[i].alloc_pages, m_PIC[i].cma_page_count);
-        printk("release cma buffer[%d] (%d %x)\n", i, m_PIC[i].cma_page_count, (unsigned)m_PIC[i].alloc_pages);
-        m_PIC[i].alloc_pages=NULL;
-        m_PIC[i].cma_page_count=0;
-    }
-  }    
-  hevc->pic_list_init_flag = 0;
+
+	if (get_blackout_policy() == 1) {
+		for(i=0; i<MAX_REF_PIC_NUM; i++){
+			if(m_PIC[i].alloc_pages!=NULL && m_PIC[i].cma_page_count>0){
+				dma_release_from_contiguous(cma_dev,m_PIC[i].alloc_pages, m_PIC[i].cma_page_count);
+				printk("release cma buffer[%d] (%d %x)\n", i, m_PIC[i].cma_page_count, (unsigned)m_PIC[i].alloc_pages);
+				m_PIC[i].alloc_pages=NULL;
+				m_PIC[i].cma_page_count=0;
+			}
+		}
+	}
+	hevc->pic_list_init_flag = 0;
 }
 
 static void init_pic_list(hevc_stru_t* hevc)
-- 
2.19.0

