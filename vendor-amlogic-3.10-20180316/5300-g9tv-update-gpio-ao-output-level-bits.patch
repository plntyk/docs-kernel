From d6be2e81c0bfa3f71416be2fcc44deef4af4fc33 Mon Sep 17 00:00:00 2001
From: "bo.yang" <bo.yang@amlogic.com>
Date: Wed, 7 Jan 2015 17:03:23 +0800
Subject: [PATCH 5300/5965] g9tv: update gpio-ao output-level bits

1. we found that the gpio-ao output-level bits are error in the
   core pinmux document. so we confirmed with vlsi and validated.
2. fix GPIOH_10 pinmux definition.
3. fix GPIOAO pullup function.
4. update the comments and gpio order in the pullup and
   derection function.
---
 arch/arm/mach-mesong9tv/gpio.c    |  28 ++--
 arch/arm/mach-mesong9tv/pinctrl.c | 220 ++++++++++++++++++------------
 2 files changed, 146 insertions(+), 102 deletions(-)
 mode change 100644 => 100755 arch/arm/mach-mesong9tv/pinctrl.c

diff --git a/arch/arm/mach-mesong9tv/gpio.c b/arch/arm/mach-mesong9tv/gpio.c
index e462eb8752cb..774b99fe4170 100755
--- a/arch/arm/mach-mesong9tv/gpio.c
+++ b/arch/arm/mach-mesong9tv/gpio.c
@@ -361,20 +361,20 @@ struct amlogic_gpio_desc amlogic_pins[] = {
 	PIN_MAP(GPIOW_19,	0,	19),
 	PIN_MAP(GPIOW_20,	0,	20),
 
-	PIN_AOMAP(GPIOAO_0,	6,	0,	6,	0,	6,	0),
-	PIN_AOMAP(GPIOAO_1,	6,	1,	6,	1,	6,	1),
-	PIN_AOMAP(GPIOAO_2,	6,	2,	6,	2,	6,	2),
-	PIN_AOMAP(GPIOAO_3,	6,	3,	6,	3,	6,	3),
-	PIN_AOMAP(GPIOAO_4,	6,	4,	6,	4,	6,	4),
-	PIN_AOMAP(GPIOAO_5,	6,	5,	6,	5,	6,	5),
-	PIN_AOMAP(GPIOAO_6,	6,	6,	6,	6,	6,	6),
-	PIN_AOMAP(GPIOAO_7,	6,	7,	6,	7,	6,	7),
-	PIN_AOMAP(GPIOAO_8,	6,	8,	6,	8,	6,	8),
-	PIN_AOMAP(GPIOAO_9,	6,	9,	6,	9,	6,	9),
-	PIN_AOMAP(GPIOAO_10,	6,	10,	6,	10,	6,	10),
-	PIN_AOMAP(GPIOAO_11,	6,	11,	6,	11,	6,	11),
-	PIN_AOMAP(GPIOAO_12,	6,	12,	6,	12,	6,	12),
-	PIN_AOMAP(GPIOAO_13,	6,	13,	6,	13,	6,	13),
+	PIN_AOMAP(GPIOAO_0,	6,	0,	6,	16,	6,	0),
+	PIN_AOMAP(GPIOAO_1,	6,	1,	6,	17,	6,	1),
+	PIN_AOMAP(GPIOAO_2,	6,	2,	6,	18,	6,	2),
+	PIN_AOMAP(GPIOAO_3,	6,	3,	6,	19,	6,	3),
+	PIN_AOMAP(GPIOAO_4,	6,	4,	6,	20,	6,	4),
+	PIN_AOMAP(GPIOAO_5,	6,	5,	6,	21,	6,	5),
+	PIN_AOMAP(GPIOAO_6,	6,	6,	6,	22,	6,	6),
+	PIN_AOMAP(GPIOAO_7,	6,	7,	6,	23,	6,	7),
+	PIN_AOMAP(GPIOAO_8,	6,	8,	6,	24,	6,	8),
+	PIN_AOMAP(GPIOAO_9,	6,	9,	6,	25,	6,	9),
+	PIN_AOMAP(GPIOAO_10,	6,	10,	6,	26,	6,	10),
+	PIN_AOMAP(GPIOAO_11,	6,	11,	6,	27,	6,	11),
+	PIN_AOMAP(GPIOAO_12,	6,	12,	6,	28,	6,	12),
+	PIN_AOMAP(GPIOAO_13,	6,	13,	6,	29,	6,	13),
 
 	PIN_MAP(CARD_0,		2,	20),
 	PIN_MAP(CARD_1,		2,	21),
diff --git a/arch/arm/mach-mesong9tv/pinctrl.c b/arch/arm/mach-mesong9tv/pinctrl.c
old mode 100644
new mode 100755
index db5baf4539e2..7822dddcdfba
--- a/arch/arm/mach-mesong9tv/pinctrl.c
+++ b/arch/arm/mach-mesong9tv/pinctrl.c
@@ -222,55 +222,57 @@ int g9tv_pin_to_pullup(unsigned int pin , unsigned int *reg, unsigned int *bit,
 	unsigned int *en)
 {
 	/*
-	PAD_PULL_UP_REG0 0x203a
+	PAD_PULL_UP_REG4 0x203e
 
-	31~21	R/W	0		Unused
-	20~0	R/W	0x2223F 	gpioW[20:0] 1 = pull up.  0 = pull down
+	31~28	R/W	0		Unused
+	27~0	R/W	0x3000000	gpioX[27:0] 1 = pull up.  0 = pull down
 	*/
-	if(pin <= GPIOW_20)
-	{
-		*reg = 0;
-		*bit = pin - GPIOW_0;
-		*en  = *bit;
-	}
 	/*
-	PAD_PULL_UP_REG1 0x203b
+	PULL_UP_EN_REG4 0x204c
 
-	31~27	R/W	0		Unused
-	26~16	R/W	0x1FC		gpioH[10:0]
-	15~14	R/W	0		Reserved
-	13~0	R/W	0x09FB		gpioY[13:0]
+	31~28	R/W	0		Unused
+	27~0	R/W	0xF000FFF	gpioX[27:0]
 	*/
-	else if(pin <= GPIOH_10)
-	{
-		*reg = 1;
-		*bit = pin - GPIOH_0 + 16;
-		*en  = *bit;
-	}
-	else if (pin <= GPIOY_13)
+	if (pin <= GPIOX_27)
 	{
-		*reg = 1;
-		*bit = pin - GPIOY_0;
+		*reg = 4;
+		*bit = pin - GPIOX_0;
 		*en  = *bit;
 	}
 	/*
 	PAD_PULL_UP_REG2 0x203c
 
-	31~20	R/W	0		Reserved
-	28~20	R/W	0x1FF		card[8:0] 1 = pull up.	0 = pull down
 	19	R/W	1		Reserved
 	18~0	R/W	0x77FFF 	boot[18:0] 1 = pull up.  0 = pull down
 	*/
-	else if (pin <= CARD_8)
+	/*
+	PULL_UP_EN_REG2	0x204a
+
+	19	R/W	1		Reserved
+	18~0	R/W	0x7FFFF 	boot[18:0]
+	*/
+	else if (pin <= BOOT_18)
 	{
 		*reg = 2;
-		*bit = pin - CARD_0 + 20;
+		*bit = pin - BOOT_0;
 		*en  = *bit;
 	}
-	else if (pin <= BOOT_18)
+	/*
+	PAD_PULL_UP_REG1 0x203b
+
+	31~27	R/W	0		Unused
+	26~16	R/W	0x1FC		gpioH[10:0]
+	*/
+	/*
+	PULL_UP_EN_REG1	0x2049
+
+	31~27	R/W	0		Unused
+	26~16	R/W	0x67D		gpioH[10:0]
+	*/
+	else if(pin <= GPIOH_10)
 	{
-		*reg = 2;
-		*bit = pin - BOOT_0;
+		*reg = 1;
+		*bit = pin - GPIOH_0 + 16;
 		*en  = *bit;
 	}
 	/*
@@ -279,6 +281,12 @@ int g9tv_pin_to_pullup(unsigned int pin , unsigned int *reg, unsigned int *bit,
 	31~21	R/W	0		Reserved
 	20~0	R/W	0x1FA040	gpioZ[20:0] 1 = pull up.  0 = pull down
 	*/
+	/*
+	PULL_UP_EN_REG3	0x204b
+
+	31~21	R/W	0		Reserved
+	20~0	R/W	0x1FE07F	gpioZ[20:0]
+	*/
 	else if (pin <= GPIOZ_20)
 	{
 		*reg = 3;
@@ -286,90 +294,113 @@ int g9tv_pin_to_pullup(unsigned int pin , unsigned int *reg, unsigned int *bit,
 		*en  = *bit;
 	}
 	/*
-	PAD_PULL_UP_REG4 0x203e
+	PAD_PULL_UP_REG0 0x203a
 
-	31~28	R/W	0		Unused
-	27~0	R/W	0x3000000	gpioX[27:0] 1 = pull up.  0 = pull down
+	31~21	R/W	0		Unused
+	20~0	R/W	0x2223F 	gpioW[20:0] 1 = pull up.  0 = pull down
 	*/
-	else if (pin <= GPIOX_27)
+	/*
+	PULL_UP_EN_REG0	0x2048
+
+	31~21	R/W	0		Unused
+	20~0	R/W	0x2223F		gpioW[20:0]
+	*/
+	if(pin <= GPIOW_20)
 	{
-		*reg = 4;
-		*bit = pin - GPIOX_0;
+		*reg = 0;
+		*bit = pin - GPIOW_0;
 		*en  = *bit;
 	}
 	/*
-	AO_RTI_PULL_UP_REG	0xc810002c
-
-	31	R	0	Reserved
-	30	R/W	0	TEST_N pull-up/down direction.
-	29-16	R/W	0	gpioAO[13:0] pull-up/down direction.
+	AO_RTI_PULL_UP_REG		0xc810002c
+
+	31	R	0		Reserved
+	30	R/W	0		TEST_N pull-up/down direction.
+	29-16	R/W	0		gpioAO[13:0] pull-up/down direction.
+	15	R	0		Reserved
+	14	R/W	0		TEST_N pull-up enable.
+	13-0	R/W	0		gpioAO[13:0] pull-up enable
 	*/
 	else if (pin <= GPIOAO_13)
 	{
 		*reg = 5;
 		*bit = pin - GPIOAO_0 + 16;
-		*en  = *bit;
+		*en  = pin - GPIOAO_0;
 	}
-	else
-		return -1;
-	return 0;
-
-}
+	/*
+	PAD_PULL_UP_REG2 0x203c
 
-int g9tv_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit)
-{
+	31~20	R/W	0		Reserved
+	28~20	R/W	0x1FF		card[8:0] 1 = pull up.	0 = pull down
+	*/
 	/*
-	PULL_UP_EN_REG0	0x2048
+	PULL_UP_EN_REG2 0x204a
 
-	31~21	R/W	0		Unused
-	20~0	R/W	0x2223F		gpioW[20:0]
+	31~20	R/W	0		Reserved
+	28~20	R/W	0x1FF		card[8:0]
 	*/
-	if (pin <= GPIOW_20)
+	else if (pin <= CARD_8)
 	{
-		*reg = 0;
-		*bit = pin - GPIOW_0;
+		*reg = 2;
+		*bit = pin - CARD_0 + 20;
+		*en  = *bit;
 	}
 	/*
+	PAD_PULL_UP_REG1 0x203b
+
+	15~14	R/W	0		Reserved
+	13~0	R/W	0x09FB		gpioY[13:0]
+	*/
+	/*
 	PULL_UP_EN_REG1	0x2049
 
-	31~27	R/W	0		Unused
-	26~16	R/W	0x67D		gpioH[10:0]
 	15~14	R/W	0		Reserved
 	13~0	R/W	0x3FFF		gpioY[13:0]
 	*/
-	else if (pin <= GPIOH_10)
-	{
-		*reg = 1;
-		*bit = pin - GPIOH_0 + 16;
-	}
+
 	else if (pin <= GPIOY_13)
 	{
 		*reg = 1;
 		*bit = pin - GPIOY_0;
+		*en  = *bit;
 	}
-	/*
-	PULL_UP_EN_REG2	0x204a
+	else
+		return -1;
+	return 0;
+}
 
-	31~20	R/W	0		Reserved
-	28~20	R/W	0x1FF		card[8:0]
-	19	R/W	1		Reserved
-	18~0	R/W	0x7FFFF 	boot[18:0]
+int g9tv_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit)
+{
+	/*
+	PREG_PAD_GPIO4_EN_N	0x2018
+	27~0			GPIOX[27:0]
 	*/
-	else if (pin <= CARD_8)
+	if (pin <= GPIOX_27)
 	{
-		*reg = 2;
-		*bit = pin - CARD_0 + 20;
+		*reg = 4;
+		*bit = pin - GPIOX_0;
 	}
+	/*
+	PREG_PAD_GPIO2_EN_N	0x2012
+	18~0			BOOT[18:0]
+	*/
 	else if (pin <= BOOT_18)
 	{
 		*reg = 2;
 		*bit = pin - BOOT_0;
 	}
 	/*
-	PULL_UP_EN_REG3	0x204b
-
-	31~21	R/W	0		Reserved
-	20~0	R/W	0x1FE07F	gpioZ[20:0]
+	PREG_PAD_GPIO1_EN_N	0x200f
+	26~16			GPIOH[10:0]
+	*/
+	else if (pin <= GPIOH_10)
+	{
+		*reg = 1;
+		*bit = pin - GPIOH_0 + 16;
+	}
+	/*
+	PREG_PAD_GPIO3_EN_N	0x2015
+	20~0			GPIOZ[20:0]
 	*/
 	else if (pin <= GPIOZ_20)
 	{
@@ -377,28 +408,41 @@ int g9tv_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *b
 		*bit = pin - GPIOZ_0;
 	}
 	/*
-	PULL_UP_EN_REG4 0x204c
-
-	31~28	R/W	0		Unused
-	27~0	R/W	0xF000FFF	gpioX[27:0]
+	PREG_PAD_GPIO0_EN_N	0x200c
+	20~0			GPIOW[20:0]
 	*/
-	else if (pin <= GPIOX_27)
+	if (pin <= GPIOW_20)
 	{
-		*reg = 4;
-		*bit = pin - GPIOX_0;
+		*reg = 0;
+		*bit = pin - GPIOW_0;
 	}
 	/*
-	AO_RTI_PULL_UP_REG	0xc810002c
-
-	15	R	0	Reserved
-	14	R/W	0	TEST_N pull-up enable.
-	13-0	R/W	0	gpioAO[13:0] pull-up enable
+	P_AO_GPIO_O_EN_N	0xc8100024
+	13-0			GPIOAO[13:0]
 	*/
 	else if (pin < GPIOAO_13)
 	{
-		*reg = 5;
+		*reg = 6;
 		*bit = pin - GPIOAO_0;
 	}
+	/*
+	PREG_PAD_GPIO2_EN_N	0x2012
+	28~20			CARD[8:0]
+	*/
+	else if (pin <= CARD_8)
+	{
+		*reg = 2;
+		*bit = pin - CARD_0 + 20;
+	}
+	/*
+	PREG_PAD_GPIO1_EN_N	0x200f
+	13~0			GPIOY[13:0]
+	*/
+	else if (pin <= GPIOY_13)
+	{
+		*reg = 1;
+		*bit = pin - GPIOY_0;
+	}
 	else
 		return -1;
 	return 0;
-- 
2.19.0

