From daabdcd1d9e84a2530a661fb8a86b9ffbc7a95b6 Mon Sep 17 00:00:00 2001
From: Evoke Zhang <evoke.zhang@amlogic.com>
Date: Mon, 5 Jan 2015 10:52:13 +0800
Subject: [PATCH 5327/5965] PD#101841: lcd driver: update backporch definition
 without sync width, to match VESA standard definition

Change-Id: Ie635dcb4d0aafc644d48eb8ade2f765830891338
---
 arch/arm/boot/dts/amlogic/meson6_g24.dtd      |  12 +-
 arch/arm/boot/dts/amlogic/meson6_g33_1212.dtd |  14 +-
 arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd   |  14 +-
 arch/arm/boot/dts/amlogic/meson6_g33_512M.dtd |  14 +-
 arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd  |  30 ++---
 arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd  |  30 ++---
 arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd  |  38 +++---
 .../arm/boot/dts/amlogic/meson8_k101_512M.dtd |  34 ++---
 arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd  |  38 +++---
 arch/arm/boot/dts/amlogic/meson8_k150_v1.dtd  |  78 +++++------
 arch/arm/boot/dts/amlogic/meson8_k160_v1.dtd  |  78 +++++------
 arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd |  24 ++--
 .../boot/dts/amlogic/meson8b_m101_512M.dtd    |  10 +-
 arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd |  16 +--
 .../arm/boot/dts/amlogic/meson8m2_n100_1G.dtd |  40 +++---
 .../boot/dts/amlogic/meson8m2_n101_512M.dtd   |  52 ++++----
 arch/arm/mach-meson6/lcd/lcd_config.c         |  16 +--
 arch/arm/mach-meson6/lcd/lcd_config.h         |   2 +-
 arch/arm/mach-meson8/lcd/edp_drv.c            |   8 +-
 arch/arm/mach-meson8/lcd/lcd_config.c         |  16 +--
 arch/arm/mach-meson8/lcd/lcd_config.h         |   2 +-
 arch/arm/mach-meson8/lcd/mipi_dsi_util.c      |   6 +-
 arch/arm/mach-meson8b/lcd/lcd_config.c        |  16 +--
 arch/arm/mach-meson8b/lcd/lcd_config.h        |   2 +-
 arch/arm/mach-meson8b/lcd/mipi_dsi_util.c     |   6 +-
 drivers/amlogic/display/backlight/aml.dtd     |   4 +-
 .../display/backlight/aml_bl_extern/aml.dtd   |  12 +-
 drivers/amlogic/display/vout/aml_lcd.dtd      | 124 +++++++++---------
 28 files changed, 368 insertions(+), 368 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/meson6_g24.dtd b/arch/arm/boot/dts/amlogic/meson6_g24.dtd
index b0c6bd8d76cd..750460107ad4 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g24.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g24.dtd
@@ -551,8 +551,8 @@
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
@@ -566,8 +566,8 @@
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
@@ -581,8 +581,8 @@
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 		
diff --git a/arch/arm/boot/dts/amlogic/meson6_g33_1212.dtd b/arch/arm/boot/dts/amlogic/meson6_g33_1212.dtd
index a7258af7de53..191ed06b4923 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g33_1212.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g33_1212.dtd
@@ -792,7 +792,7 @@ void root_func(){
 //$$ L2 PROP_U32 = "bl_level_default"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -990,8 +990,8 @@ void root_func(){
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
@@ -1016,8 +1016,8 @@ void root_func(){
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
@@ -1042,8 +1042,8 @@ void root_func(){
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
diff --git a/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd b/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
index 3d9f06ecabb4..60008207d8ee 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g33_1G.dtd
@@ -792,7 +792,7 @@ void root_func(){
 //$$ L2 PROP_U32 = "bl_level_default"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -990,8 +990,8 @@ void root_func(){
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
@@ -1016,8 +1016,8 @@ void root_func(){
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
@@ -1042,8 +1042,8 @@ void root_func(){
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
diff --git a/arch/arm/boot/dts/amlogic/meson6_g33_512M.dtd b/arch/arm/boot/dts/amlogic/meson6_g33_512M.dtd
index b8dca8ae8db4..99fde6d137c1 100755
--- a/arch/arm/boot/dts/amlogic/meson6_g33_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson6_g33_512M.dtd
@@ -806,7 +806,7 @@ void root_func(){
 //$$ L2 PROP_U32 = "bl_level_default"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -1004,8 +1004,8 @@ void root_func(){
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
@@ -1030,8 +1030,8 @@ void root_func(){
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
@@ -1056,8 +1056,8 @@ void root_func(){
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 	
diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
index b35ab4e5e675..da918c87e4e7 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_1G.dtd
@@ -900,7 +900,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -946,7 +946,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -954,14 +954,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -970,7 +970,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1157,8 +1157,8 @@ sdio{
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 		max_lane_count=<4>; /** max lane count supported */
@@ -1193,8 +1193,8 @@ sdio{
 //		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 //		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 //		dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -1232,8 +1232,8 @@ sdio{
 //		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1258,8 +1258,8 @@ sdio{
 //		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1284,8 +1284,8 @@ sdio{
 //		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd b/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
index f6c171264438..1cec430a573b 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k100_2G.dtd
@@ -890,7 +890,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -936,7 +936,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -944,14 +944,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -960,7 +960,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1147,8 +1147,8 @@ sdio{
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 		max_lane_count=<4>; /** max lane count supported */
@@ -1183,8 +1183,8 @@ sdio{
 //		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 //		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 //		dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -1222,8 +1222,8 @@ sdio{
 //		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1248,8 +1248,8 @@ sdio{
 //		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1274,8 +1274,8 @@ sdio{
 //		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
index 7140aad7c048..336656a99053 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_1G.dtd
@@ -831,7 +831,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -877,7 +877,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -885,14 +885,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -901,7 +901,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1088,8 +1088,8 @@ sdio{
 //		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 //		max_lane_count=<4>; /** max lane count supported */
@@ -1124,8 +1124,8 @@ sdio{
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -1176,8 +1176,8 @@ sdio{
 //		period=<864 1315>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 //		clock_hz_pol=<56800000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<4 48>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<4 44>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<2 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //		vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
 
@@ -1229,8 +1229,8 @@ sdio{
 //		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1255,8 +1255,8 @@ sdio{
 //		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1281,8 +1281,8 @@ sdio{
 //		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1315,8 +1315,8 @@ sdio{
 //		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 //		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<32 112>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<6 20>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 //		dsi_lane_num=<4>;/** mipi dsi data lane number */
diff --git a/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
index b8ab3feedcaf..ccefd03f35b3 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k101_512M.dtd
@@ -832,7 +832,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -878,7 +878,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -886,14 +886,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -902,7 +902,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1089,8 +1089,8 @@ sdio{
 //		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 //		max_lane_count=<4>; /** max lane count supported */
@@ -1121,8 +1121,8 @@ sdio{
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -1160,8 +1160,8 @@ sdio{
 //		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1186,8 +1186,8 @@ sdio{
 //		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1212,8 +1212,8 @@ sdio{
 //		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1244,8 +1244,8 @@ sdio{
 //		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 //		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<32 112>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<6 20>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 //		dsi_lane_num=<4>;/** mipi dsi data lane number */
diff --git a/arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd
index 1e8e00a8f934..7e34f288797b 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k102_v1.dtd
@@ -882,7 +882,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -928,7 +928,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -936,14 +936,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -952,7 +952,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1139,8 +1139,8 @@ sdio{
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 		max_lane_count=<4>; /** max lane count supported */
@@ -1171,8 +1171,8 @@ sdio{
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -1216,8 +1216,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<864 1315>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<56800000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<4 48>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<4 44>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<2 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
 		
@@ -1266,8 +1266,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1292,8 +1292,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1318,8 +1318,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1350,8 +1350,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<32 112>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<6 20>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
diff --git a/arch/arm/boot/dts/amlogic/meson8_k150_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k150_v1.dtd
index 1851a01c88cc..fb0980a92e6a 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k150_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k150_v1.dtd
@@ -845,7 +845,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -891,7 +891,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -899,14 +899,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -915,7 +915,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1102,8 +1102,8 @@ sdio{
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 		max_lane_count=<4>; /** max lane count supported */
@@ -1134,20 +1134,20 @@ sdio{
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
 		dsi_bit_rate_max=<550>;/** mipi-dsi data lane bit rate limit(unit: MHz) */
-		dsi_init_on=<0x05 0x11 0 //sleep out
+		dsi_init_on=<0x05 1 0x11 //sleep out
 					0xff 20      //delay 20ms
-					0x05 0x29 0  //display on
+					0x05 1 0x29  //display on
 					0xff 20      //delay 20ms
 					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-		dsi_init_off=<0x05 0x28 0 //display off
+		dsi_init_off=<0x05 1 0x28 //display off
 					0xff 10       //delay 10ms
-					0x05 0x10 0   //sleep in
+					0x05 1 0x10   //sleep in
 					0xff 10       //delay 10ms
 					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 	};
@@ -1179,31 +1179,31 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<864 1315>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<56800000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<4 48>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<4 44>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<2 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
 		
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
 		dsi_operation_mode=<0 0>; /** operation mode when init and display: (0=video mode, 1=command mode). default is <1 0> */
 		dsi_bit_rate_max=<500>; /** mipi-dsi data lane bit rate limit(unit: MHz) */
-		dsi_init_on=<0x15 0x01 1 0x0 
+		dsi_init_on=<0x15 2 0x01 0x0 
 				0xff 20     //delay 20ms
-				0x15 0xAE 1 0x0B 
-				0x15 0xEE 1 0xEA 
-				0x15 0xEF 1 0x5F 
-				0x15 0xF2 1 0x68 
-				0x15 0xEE 1 0x0 
-				0x15 0xEF 1 0x0 
-
-				0x05 0x11 0  //sleep out
+				0x15 2 0xAE 0x0B 
+				0x15 2 0xEE 0xEA 
+				0x15 2 0xEF 0x5F 
+				0x15 2 0xF2 0x68 
+				0x15 2 0xEE 0x0 
+				0x15 2 0xEF 0x0 
+
+				0x05 1 0x11  //sleep out
 				0xff 200     //delay 200ms
-				0x05 0x29 0  //display on
+				0x05 1 0x29  //display on
 				0xff 100     //delay 100ms
 				0xff 0xff>;  /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-		dsi_init_off=<0x05 0x28 0 //display off
+		dsi_init_off=<0x05 1 0x28 //display off
 				0xff 10       //delay 10ms
-				0x05 0x10 0   //sleep in
+				0x05 1 0x10   //sleep in
 				0xff 10       //delay 10ms
 				0xff 0xff>;   /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 	};
@@ -1229,8 +1229,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1255,8 +1255,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1281,8 +1281,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1313,22 +1313,22 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<32 112>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<6 20>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
 		dsi_bit_rate_max=<1000>; /** mipi-dsi data lane bit rate limit(unit: MHz) */
 		pclk_lanebyteclk_factor =<15>;/** special adjust, default is 0 */
 		dsi_transfer_ctrl=<1 0>; /** clk_lane auto stop in LP mode: (0=disable, 1=enable), transfer switch between LP and HS: (0=auto, 1=standard, 2=slow). default is <0 0> */
-		dsi_init_on=<0x05 0x11 0 //sleep out
+		dsi_init_on=<0x05 1 0x11 //sleep out
 				0xff 100     //delay 100ms
-				0x05 0x29 0  //display on
+				0x05 1 0x29  //display on
 				0xff 100     //delay 100ms
 				0xff 0xff>;  /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-		dsi_init_off=<0x05 0x28 0 //display off
+		dsi_init_off=<0x05 1 0x28 //display off
 				0xff 10       //delay 10ms
-				0x05 0x10 0   //sleep in
+				0x05 1 0x10   //sleep in
 				0xff 10       //delay 10ms
 				0xff 0xff>;   /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 	};
diff --git a/arch/arm/boot/dts/amlogic/meson8_k160_v1.dtd b/arch/arm/boot/dts/amlogic/meson8_k160_v1.dtd
index f3977ff80df2..02bc6ee63af3 100755
--- a/arch/arm/boot/dts/amlogic/meson8_k160_v1.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8_k160_v1.dtd
@@ -865,7 +865,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -911,7 +911,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -919,14 +919,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "okay"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -935,7 +935,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1122,8 +1122,8 @@ sdio{
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 		max_lane_count=<4>; /** max lane count supported */
@@ -1154,20 +1154,20 @@ sdio{
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
 		dsi_bit_rate_max=<550>;/** mipi-dsi data lane bit rate limit(unit: MHz) */
-		dsi_init_on=<0x05 0x11 0 //sleep out
+		dsi_init_on=<0x05 1 0x11 //sleep out
 					0xff 20      //delay 20ms
-					0x05 0x29 0  //display on
+					0x05 1 0x29  //display on
 					0xff 20      //delay 20ms
 					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-		dsi_init_off=<0x05 0x28 0 //display off
+		dsi_init_off=<0x05 1 0x28 //display off
 					0xff 10       //delay 10ms
-					0x05 0x10 0   //sleep in
+					0x05 1 0x10   //sleep in
 					0xff 10       //delay 10ms
 					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 	};
@@ -1199,31 +1199,31 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<864 1315>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<56800000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<4 48>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<4 44>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<2 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
 		dsi_operation_mode=<0 0>; /** operation mode when init and display: (0=video mode, 1=command mode). default is <1 0> */
 		dsi_bit_rate_max=<500>; /** mipi-dsi data lane bit rate limit(unit: MHz) */
-		dsi_init_on=<0x15 0x01 1 0x0 
+		dsi_init_on=<0x15 2 0x01 0x0 
 				0xff 20     //delay 20ms
-				0x15 0xAE 1 0x0B 
-				0x15 0xEE 1 0xEA 
-				0x15 0xEF 1 0x5F 
-				0x15 0xF2 1 0x68 
-				0x15 0xEE 1 0x0 
-				0x15 0xEF 1 0x0 
-
-				0x05 0x11 0  //sleep out
+				0x15 2 0xAE 0x0B 
+				0x15 2 0xEE 0xEA 
+				0x15 2 0xEF 0x5F 
+				0x15 2 0xF2 0x68 
+				0x15 2 0xEE 0x0 
+				0x15 2 0xEF 0x0 
+
+				0x05 1 0x11  //sleep out
 				0xff 200     //delay 200ms
-				0x05 0x29 0  //display on
+				0x05 1 0x29  //display on
 				0xff 100     //delay 100ms
 				0xff 0xff>;  /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-		dsi_init_off=<0x05 0x28 0 //display off
+		dsi_init_off=<0x05 1 0x28 //display off
 				0xff 10       //delay 10ms
-				0x05 0x10 0   //sleep in
+				0x05 1 0x10   //sleep in
 				0xff 10       //delay 10ms
 				0xff 0xff>;   /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 	};
@@ -1249,8 +1249,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1275,8 +1275,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1301,8 +1301,8 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1333,22 +1333,22 @@ lcd_LD070WX4:lcd_LD070WX4{
 		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<32 112>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<6 20>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
 		dsi_bit_rate_max=<1000>; /** mipi-dsi data lane bit rate limit(unit: MHz) */
 		pclk_lanebyteclk_factor =<15>;/** special adjust, default is 0 */
 		dsi_transfer_ctrl=<1 0>; /** clk_lane auto stop in LP mode: (0=disable, 1=enable), transfer switch between LP and HS: (0=auto, 1=standard, 2=slow). default is <0 0> */
-		dsi_init_on=<0x05 0x11 0 //sleep out
+		dsi_init_on=<0x05 1 0x11 //sleep out
 				0xff 100     //delay 100ms
-				0x05 0x29 0  //display on
+				0x05 1 0x29  //display on
 				0xff 100     //delay 100ms
 				0xff 0xff>;  /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-		dsi_init_off=<0x05 0x28 0 //display off
+		dsi_init_off=<0x05 1 0x28 //display off
 				0xff 10       //delay 10ms
-				0x05 0x10 0   //sleep in
+				0x05 1 0x10   //sleep in
 				0xff 10       //delay 10ms
 				0xff 0xff>;   /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 	};
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd
index 4e140ef3ffc3..2efdad83ef37 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m100_1G.dtd
@@ -1033,7 +1033,7 @@ void root_func(){
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -1059,7 +1059,7 @@ void root_func(){
 		bl_power_on_delay=<110>; /** delay time before backlight power on(unit: ms) */
 		bl_ctrl_method=<4>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive, 3=pwm_combo. 4=extern. decided by hardware design) */
 		
-		bl_gpio_port="GPIODV_28";	/** backlight control gpio port */
+		bl_gpio_port_on_off="GPIODV_28","1","0";	/** backlight control gpio port, (on/off:1=output high, 0=output low, 2=input) */
 		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
 		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
 		bl_pwm_freq=<300000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
@@ -1079,7 +1079,7 @@ void root_func(){
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -1087,7 +1087,7 @@ void root_func(){
 		dev_name ="bl_pmu_aml1218";
 		status = "okay"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
@@ -1175,8 +1175,8 @@ void root_func(){
 		period=<928 1065>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<59300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<2 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1210,8 +1210,8 @@ void root_func(){
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -1219,14 +1219,14 @@ void root_func(){
 		dsi_bit_rate_max=<550>;/** mipi-dsi data lane bit rate limit(unit: MHz) */
 		pclk_lanebyteclk_factor =<0>;/** special adjust, default is 0 */
 		dsi_transfer_ctrl=<0 0>;/** clk_lane auto stop in LP mode: (0=disable, 1=enable), transfer switch between LP and HS: (0=auto, 1=standard, 2=slow). default is <0 0> */
-		dsi_init_on=<0x05 0x11 0 //sleep out
+		dsi_init_on=<0x05 1 0x11 //sleep out
 					0xff 20      //delay 20ms
-					0x05 0x29 0  //display on
+					0x05 1 0x29  //display on
 					0xff 20      //delay 20ms
 					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-		dsi_init_off=<0x05 0x28 0 //display off
+		dsi_init_off=<0x05 1 0x28 //display off
 					0xff 10       //delay 10ms
-					0x05 0x10 0   //sleep in
+					0x05 1 0x10   //sleep in
 					0xff 10       //delay 10ms
 					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 		lcd_extern_init=<0>;/** lcd extern init command control(0=disable, 1=enable) */
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
index 20c20fbba920..156d94f62172 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m101_512M.dtd
@@ -1004,7 +1004,7 @@ void root_func(){
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -1050,7 +1050,7 @@ void root_func(){
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -1058,7 +1058,7 @@ void root_func(){
 		dev_name ="bl_pmu_aml1218";
 		status = "okay"; /** "disabled" or "okay" */
 
-		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio ="n"for none, (on/off:1=output high, 0=output low, 2=input)*/
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
@@ -1146,8 +1146,8 @@ void root_func(){
 		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 170>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
diff --git a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
index 6eaedefddfef..4e28a192edf5 100755
--- a/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8b_m102_1G.dtd
@@ -983,7 +983,7 @@ void root_func(){
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -1009,7 +1009,7 @@ void root_func(){
 		bl_power_on_delay=<110>; /** delay time before backlight power on(unit: ms) */
 		bl_ctrl_method=<4>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive, 3=pwm_combo. 4=extern. decided by hardware design) */
 		
-		bl_gpio_port_on_off="GPIODV_28","1","0"; /** backlight control gpio port (on/off:1=output high, 0=output low, 2=input)*/
+		bl_gpio_port_on_off="GPIODV_28","1","0"; /** backlight control gpio port, (on/off:1=output high, 0=output low, 2=input)*/
 		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
 		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
 		bl_pwm_freq=<300000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
@@ -1029,7 +1029,7 @@ void root_func(){
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -1037,7 +1037,7 @@ void root_func(){
 		dev_name ="bl_pmu_aml1218";
 		status = "okay"; /** "disabled" or "okay" */
 
-		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio ="n"for none, (on/off:1=output high, 0=output low, 2=input)*/
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
@@ -1125,8 +1125,8 @@ void root_func(){
 		period=<928 1065>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<59300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<10 80>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<2 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 	};
 
@@ -1160,8 +1160,8 @@ void root_func(){
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
diff --git a/arch/arm/boot/dts/amlogic/meson8m2_n100_1G.dtd b/arch/arm/boot/dts/amlogic/meson8m2_n100_1G.dtd
index a1afcbbdef01..cedb56874378 100755
--- a/arch/arm/boot/dts/amlogic/meson8m2_n100_1G.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8m2_n100_1G.dtd
@@ -894,7 +894,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -920,7 +920,7 @@ sdio{
 		bl_power_on_delay=<200>; /** delay time before backlight power on(unit: ms) */
 		bl_ctrl_method=<1>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive, 3=pwm_combo. 4=extern. decided by hardware design) */
 		
-		bl_gpio_port="GPIODV_28";	/** backlight control gpio port */
+		bl_gpio_port_on_off="GPIODV_28","1","0";	/** backlight control gpio port, (on/off:1=output high, 0=output low, 2=input) */
 		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
 		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
 		bl_pwm_freq=<300000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
@@ -940,7 +940,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -948,14 +948,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -964,7 +964,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1148,8 +1148,8 @@ sdio{
 		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 		
 		max_lane_count=<4>; /** max lane count supported */
@@ -1184,20 +1184,20 @@ sdio{
 //		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 //		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 //		dsi_lane_num=<4>;/** mipi dsi data lane number */
 //		dsi_bit_rate_max=<550>; /** mipi-dsi data lane bit rate limit(unit: MHz) */
-//		dsi_init_on=<0x05 0x11 0 //sleep out
+//		dsi_init_on=<0x05 1 0x11 //sleep out
 //					0xff 20      //delay 20ms
-//					0x05 0x29 0  //display on
+//					0x05 1 0x29  //display on
 //					0xff 20      //delay 20ms
 //					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-//		dsi_init_off=<0x05 0x28 0 //display off
+//		dsi_init_off=<0x05 1 0x28 //display off
 //					0xff 10       //delay 10ms
-//					0x05 0x10 0   //sleep in
+//					0x05 1 0x10   //sleep in
 //					0xff 10       //delay 10ms
 //					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 //	};
@@ -1223,8 +1223,8 @@ sdio{
 //		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1249,8 +1249,8 @@ sdio{
 //		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1275,8 +1275,8 @@ sdio{
 //		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
diff --git a/arch/arm/boot/dts/amlogic/meson8m2_n101_512M.dtd b/arch/arm/boot/dts/amlogic/meson8m2_n101_512M.dtd
index 3cede5360f57..a9627533d6a5 100755
--- a/arch/arm/boot/dts/amlogic/meson8m2_n101_512M.dtd
+++ b/arch/arm/boot/dts/amlogic/meson8m2_n101_512M.dtd
@@ -828,7 +828,7 @@ sdio{
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -854,7 +854,7 @@ sdio{
 		bl_power_on_delay=<100>; /** delay time before backlight power on(unit: ms) */
 		bl_ctrl_method=<3>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive, 3=pwm_combo. 4=extern. decided by hardware design) */
 		
-		bl_gpio_port="GPIODV_28";	/** backlight control gpio port */
+		bl_gpio_port_on_off="GPIODV_28","1","0";	/** backlight control gpio port, (on/off:1=output high, 0=output low, 2=input) */
 		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
 		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
 		bl_pwm_freq=<300000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
@@ -874,7 +874,7 @@ sdio{
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -882,14 +882,14 @@ sdio{
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -898,7 +898,7 @@ sdio{
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable = "GPIODV_28"; /** "n" for none */
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -1083,8 +1083,8 @@ sdio{
 //		period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 //		max_lane_count=<4>; /** max lane count supported */
@@ -1119,20 +1119,20 @@ sdio{
 		period=<948 1140>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<64843200 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<64 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<50 80>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<64 56>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<50 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 		dsi_lane_num=<4>;/** mipi dsi data lane number */
 		dsi_bit_rate_max=<550>;/** mipi-dsi data lane bit rate limit(unit: MHz) */
-		dsi_init_on=<0x05 0x11 0 //sleep out
+		dsi_init_on=<0x05 1 0x11 //sleep out
 					0xff 20      //delay 20ms
-					0x05 0x29 0  //display on
+					0x05 1 0x29  //display on
 					0xff 20      //delay 20ms
 					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-		dsi_init_off=<0x05 0x28 0 //display off
+		dsi_init_off=<0x05 1 0x28 //display off
 					0xff 10       //delay 10ms
-					0x05 0x10 0   //sleep in
+					0x05 1 0x10   //sleep in
 					0xff 10       //delay 10ms
 					0xff 0xff>;/** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 	};
@@ -1158,8 +1158,8 @@ sdio{
 //		period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 150>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1184,8 +1184,8 @@ sdio{
 //		period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1210,8 +1210,8 @@ sdio{
 //		period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 		
 //		clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 //	};
 
@@ -1242,22 +1242,22 @@ sdio{
 //		period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
 //		clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-//		hsync_width_backporch=<32 112>;	/** hsync_width, hsync_backporch(include hsync_width) */
-//		vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+//		hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(without hsync_width) */
+//		vsync_width_backporch=<6 20>;	/** vsync_width, vsync_backporch(without vsync_width) */
 //		pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
 //		dsi_lane_num=<4>;/** mipi dsi data lane number */
 //		dsi_bit_rate_max=<1000>; /** mipi-dsi data lane bit rate limit(unit: MHz) */
 //		pclk_lanebyteclk_factor =<15>;/** special adjust, default is 0 */
 //		dsi_transfer_ctrl=<1 0>; /** clk_lane auto stop in LP mode: (0=disable, 1=enable), transfer switch between LP and HS: (0=auto, 1=standard, 2=slow). default is <0 0> */
-//		dsi_init_on=<0x05 0x11 0 //sleep out
+//		dsi_init_on=<0x05 1 0x11 //sleep out
 //				0xff 100     //delay 100ms
-//				0x05 0x29 0  //display on
+//				0x05 1 0x29  //display on
 //				0xff 100     //delay 100ms
 //				0xff 0xff>;  /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
-//		dsi_init_off=<0x05 0x28 0 //display off
+//		dsi_init_off=<0x05 1 0x28 //display off
 //				0xff 10       //delay 10ms
-//				0x05 0x10 0   //sleep in
+//				0x05 1 0x10   //sleep in
 //				0xff 10       //delay 10ms
 //				0xff 0xff>;   /** mipi command(data_type, command, para_num, parameters). 0xff,0xff is ending flag. 0xff,n(n<0xff) means delay n(unit: ms) */
 //	};
diff --git a/arch/arm/mach-meson6/lcd/lcd_config.c b/arch/arm/mach-meson6/lcd/lcd_config.c
index fdfd9827faaa..a1b1e5ccb57d 100755
--- a/arch/arm/mach-meson6/lcd/lcd_config.c
+++ b/arch/arm/mach-meson6/lcd/lcd_config.c
@@ -1732,8 +1732,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
 	else
 		de_vstart = (pConf->lcd_timing.video_on_line + pConf->lcd_basic.v_period - v_offset) % pConf->lcd_basic.v_period;
 	
-	hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
-	hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp + pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;	
+	hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp - pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;
+	hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
 	pConf->lcd_timing.hs_hs_addr = hstart;
 	pConf->lcd_timing.hs_he_addr = hend;
 	pConf->lcd_timing.hs_vs_addr = 0;
@@ -1746,8 +1746,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
 		vsync_h_phase = (hstart + pConf->lcd_basic.h_period + vsync_h_phase) % pConf->lcd_basic.h_period;
 	pConf->lcd_timing.vs_hs_addr = vsync_h_phase;
 	pConf->lcd_timing.vs_he_addr = vsync_h_phase;
-	vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
-	vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp + pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+	vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+	vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
 	pConf->lcd_timing.vs_vs_addr = vstart;
 	pConf->lcd_timing.vs_ve_addr = vend;
 	
@@ -1770,8 +1770,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
     else
         de_vstart = (pConf->lcd_basic.v_period - pConf->lcd_basic.v_active + v_offset) % pConf->lcd_basic.v_period;
 
-    hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
-    hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp + pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;	
+    hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp - pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;
+    hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
     pConf->lcd_timing.hs_hs_addr = hstart;
     pConf->lcd_timing.hs_he_addr = hend;
     pConf->lcd_timing.hs_vs_addr = 0;
@@ -1784,8 +1784,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
         vsync_h_phase = (hstart + pConf->lcd_basic.h_period + vsync_h_phase) % pConf->lcd_basic.h_period;
     pConf->lcd_timing.vs_hs_addr = vsync_h_phase;
     pConf->lcd_timing.vs_he_addr = vsync_h_phase;
-    vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
-    vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp + pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+    vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+    vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
     pConf->lcd_timing.vs_vs_addr = vstart;
     pConf->lcd_timing.vs_ve_addr = vend;
 
diff --git a/arch/arm/mach-meson6/lcd/lcd_config.h b/arch/arm/mach-meson6/lcd/lcd_config.h
index e50e4a8a12b1..28c5d5f1b919 100755
--- a/arch/arm/mach-meson6/lcd/lcd_config.h
+++ b/arch/arm/mach-meson6/lcd/lcd_config.h
@@ -8,7 +8,7 @@
 //lcd driver version
 //**********************************
 #define LCD_DRV_TYPE      "c6"
-#define LCD_DRV_DATE      "20141113"
+#define LCD_DRV_DATE      "20150105"
 //**********************************
 
 /* for GAMMA_CNTL_PORT */
diff --git a/arch/arm/mach-meson8/lcd/edp_drv.c b/arch/arm/mach-meson8/lcd/edp_drv.c
index 50a2b830f0f2..c7409d7f75e1 100755
--- a/arch/arm/mach-meson8/lcd/edp_drv.c
+++ b/arch/arm/mach-meson8/lcd/edp_drv.c
@@ -289,8 +289,8 @@ static void dptx_set_MSA(EDP_MSA_t *vm)
     WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_VSWIDTH, vm->vsync_width);
     WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_HRES, vm->h_active);
     WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_VRES, vm->v_active);
-    WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_HSTART, vm->hsync_bp);
-    WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_VSTART, vm->vsync_bp);
+    WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_HSTART, (vm->hsync_bp + vm->hsync_width));
+    WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_VSTART, (vm->vsync_bp + vm->vsync_width));
     //WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_MISC0, ((vm->cformat << 1) | (1 << 0))); //always sync mode
     WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_MISC0, misc0_data);
     WRITE_DPTX_REG(EDP_TX_MAIN_STREAM_MISC1, 0x00000000);
@@ -2421,9 +2421,9 @@ static void edp_edid_timing_config(Lcd_Config_t *pConf, EDP_EDID_Data_Type_t *ed
 	pConf->lcd_timing.lcd_clk = (temp * pConf->lcd_basic.v_period / 10) * pConf->lcd_basic.h_period;
 	
 	pConf->lcd_timing.hsync_width = edid_data_parase->preferred_timing.h_pw;
-	pConf->lcd_timing.hsync_bp = edid_data_parase->preferred_timing.h_blank - edid_data_parase->preferred_timing.h_fp; //include pw
+	pConf->lcd_timing.hsync_bp = edid_data_parase->preferred_timing.h_blank - edid_data_parase->preferred_timing.h_fp - edid_data_parase->preferred_timing.h_pw; //without pw
 	pConf->lcd_timing.vsync_width = edid_data_parase->preferred_timing.v_pw;
-	pConf->lcd_timing.vsync_bp = edid_data_parase->preferred_timing.v_blank - edid_data_parase->preferred_timing.v_fp; //include pw
+	pConf->lcd_timing.vsync_bp = edid_data_parase->preferred_timing.v_blank - edid_data_parase->preferred_timing.v_fp - edid_data_parase->preferred_timing.v_pw; //without pw
 	
 	pConf->lcd_basic.h_active_area = edid_data_parase->preferred_timing.h_size;
 	pConf->lcd_basic.v_active_area = edid_data_parase->preferred_timing.v_size;
diff --git a/arch/arm/mach-meson8/lcd/lcd_config.c b/arch/arm/mach-meson8/lcd/lcd_config.c
index fb8b2c0b49bd..e8dd37946e6f 100755
--- a/arch/arm/mach-meson8/lcd/lcd_config.c
+++ b/arch/arm/mach-meson8/lcd/lcd_config.c
@@ -1686,8 +1686,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
 	else
 		de_vstart = (pConf->lcd_timing.video_on_line + pConf->lcd_basic.v_period - v_offset) % pConf->lcd_basic.v_period;
 	
-	hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
-	hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp + pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;	
+	hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp - pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;
+	hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
 	pConf->lcd_timing.hs_hs_addr = hstart;
 	pConf->lcd_timing.hs_he_addr = hend;
 	pConf->lcd_timing.hs_vs_addr = 0;
@@ -1700,8 +1700,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
 		vsync_h_phase = (hstart + pConf->lcd_basic.h_period + vsync_h_phase) % pConf->lcd_basic.h_period;
 	pConf->lcd_timing.vs_hs_addr = vsync_h_phase;
 	pConf->lcd_timing.vs_he_addr = vsync_h_phase;
-	vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
-	vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp + pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+	vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+	vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
 	pConf->lcd_timing.vs_vs_addr = vstart;
 	pConf->lcd_timing.vs_ve_addr = vend;
 	
@@ -1724,8 +1724,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
     else
         de_vstart = (pConf->lcd_basic.v_period - pConf->lcd_basic.v_active + v_offset) % pConf->lcd_basic.v_period;
 
-    hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
-    hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp + pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;	
+    hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp - pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;
+    hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
     pConf->lcd_timing.hs_hs_addr = hstart;
     pConf->lcd_timing.hs_he_addr = hend;
     pConf->lcd_timing.hs_vs_addr = 0;
@@ -1738,8 +1738,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
         vsync_h_phase = (hstart + pConf->lcd_basic.h_period + vsync_h_phase) % pConf->lcd_basic.h_period;
     pConf->lcd_timing.vs_hs_addr = vsync_h_phase;
     pConf->lcd_timing.vs_he_addr = vsync_h_phase;
-    vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
-    vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp + pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+    vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+    vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
     pConf->lcd_timing.vs_vs_addr = vstart;
     pConf->lcd_timing.vs_ve_addr = vend;
 
diff --git a/arch/arm/mach-meson8/lcd/lcd_config.h b/arch/arm/mach-meson8/lcd/lcd_config.h
index ad13f1236821..a1affe1f3ff0 100755
--- a/arch/arm/mach-meson8/lcd/lcd_config.h
+++ b/arch/arm/mach-meson8/lcd/lcd_config.h
@@ -7,7 +7,7 @@
 //lcd driver version
 //**********************************
 #define LCD_DRV_TYPE      "c8"
-#define LCD_DRV_DATE      "20141223"
+#define LCD_DRV_DATE      "20150105"
 //**********************************
 
 /* for GAMMA_CNTL_PORT */
diff --git a/arch/arm/mach-meson8/lcd/mipi_dsi_util.c b/arch/arm/mach-meson8/lcd/mipi_dsi_util.c
index 689f7b0d962f..8ad00950a3e3 100755
--- a/arch/arm/mach-meson8/lcd/mipi_dsi_util.c
+++ b/arch/arm/mach-meson8/lcd/mipi_dsi_util.c
@@ -931,11 +931,11 @@ static void dsi_video_config(Lcd_Config_t *pConf)
 
     dsi_vid_config.hline =(pConf->lcd_basic.h_period * cfg->factor_denominator + cfg->factor_numerator - 1) / cfg->factor_numerator;  // Rounded. Applicable for Period(pixclk)/Period(bytelaneclk)=9/16
     dsi_vid_config.hsa =(pConf->lcd_timing.hsync_width * cfg->factor_denominator + cfg->factor_numerator - 1) / cfg->factor_numerator;
-    dsi_vid_config.hbp =((pConf->lcd_timing.hsync_bp-pConf->lcd_timing.hsync_width) * cfg->factor_denominator + cfg->factor_numerator - 1) / cfg->factor_numerator;
+    dsi_vid_config.hbp =(pConf->lcd_timing.hsync_bp * cfg->factor_denominator + cfg->factor_numerator - 1) / cfg->factor_numerator;
 
     dsi_vid_config.vsa = pConf->lcd_timing.vsync_width;
-    dsi_vid_config.vbp = pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width;
-    dsi_vid_config.vfp = pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp - pConf->lcd_basic.v_active;
+    dsi_vid_config.vbp = pConf->lcd_timing.vsync_bp;
+    dsi_vid_config.vfp = pConf->lcd_basic.v_period - pConf->lcd_basic.v_active - pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width;
     dsi_vid_config.vact = pConf->lcd_basic.v_active;
 
     lcd_print(" ============= VIDEO TIMING SETTING =============\n");
diff --git a/arch/arm/mach-meson8b/lcd/lcd_config.c b/arch/arm/mach-meson8b/lcd/lcd_config.c
index 1b24896178ad..16b7964d15d3 100755
--- a/arch/arm/mach-meson8b/lcd/lcd_config.c
+++ b/arch/arm/mach-meson8b/lcd/lcd_config.c
@@ -1252,8 +1252,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
 	else
 		de_vstart = (pConf->lcd_timing.video_on_line + pConf->lcd_basic.v_period - v_offset) % pConf->lcd_basic.v_period;
 	
-	hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
-	hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp + pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;	
+	hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp - pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;
+	hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
 	pConf->lcd_timing.hs_hs_addr = hstart;
 	pConf->lcd_timing.hs_he_addr = hend;
 	pConf->lcd_timing.hs_vs_addr = 0;
@@ -1266,8 +1266,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
 		vsync_h_phase = (hstart + pConf->lcd_basic.h_period + vsync_h_phase) % pConf->lcd_basic.h_period;
 	pConf->lcd_timing.vs_hs_addr = vsync_h_phase;
 	pConf->lcd_timing.vs_he_addr = vsync_h_phase;
-	vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
-	vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp + pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+	vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+	vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
 	pConf->lcd_timing.vs_vs_addr = vstart;
 	pConf->lcd_timing.vs_ve_addr = vend;
 	
@@ -1290,8 +1290,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
     else
         de_vstart = (pConf->lcd_basic.v_period - pConf->lcd_basic.v_active + v_offset) % pConf->lcd_basic.v_period;
 
-    hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
-    hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp + pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;	
+    hstart = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp - pConf->lcd_timing.hsync_width) % pConf->lcd_basic.h_period;
+    hend = (de_hstart + pConf->lcd_basic.h_period - pConf->lcd_timing.hsync_bp) % pConf->lcd_basic.h_period;
     pConf->lcd_timing.hs_hs_addr = hstart;
     pConf->lcd_timing.hs_he_addr = hend;
     pConf->lcd_timing.hs_vs_addr = 0;
@@ -1304,8 +1304,8 @@ static void lcd_tcon_config(Lcd_Config_t *pConf)
         vsync_h_phase = (hstart + pConf->lcd_basic.h_period + vsync_h_phase) % pConf->lcd_basic.h_period;
     pConf->lcd_timing.vs_hs_addr = vsync_h_phase;
     pConf->lcd_timing.vs_he_addr = vsync_h_phase;
-    vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
-    vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp + pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+    vstart = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width) % pConf->lcd_basic.v_period;
+    vend = (de_vstart + pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp) % pConf->lcd_basic.v_period;
     pConf->lcd_timing.vs_vs_addr = vstart;
     pConf->lcd_timing.vs_ve_addr = vend;
 
diff --git a/arch/arm/mach-meson8b/lcd/lcd_config.h b/arch/arm/mach-meson8b/lcd/lcd_config.h
index 7727956b80d6..66a36f055716 100755
--- a/arch/arm/mach-meson8b/lcd/lcd_config.h
+++ b/arch/arm/mach-meson8b/lcd/lcd_config.h
@@ -7,7 +7,7 @@
 //lcd driver version
 //**********************************
 #define LCD_DRV_TYPE      "c8b"
-#define LCD_DRV_DATE      "20141223"
+#define LCD_DRV_DATE      "20150105"
 //**********************************
 
 /* for GAMMA_CNTL_PORT */
diff --git a/arch/arm/mach-meson8b/lcd/mipi_dsi_util.c b/arch/arm/mach-meson8b/lcd/mipi_dsi_util.c
index 689f7b0d962f..8ad00950a3e3 100755
--- a/arch/arm/mach-meson8b/lcd/mipi_dsi_util.c
+++ b/arch/arm/mach-meson8b/lcd/mipi_dsi_util.c
@@ -931,11 +931,11 @@ static void dsi_video_config(Lcd_Config_t *pConf)
 
     dsi_vid_config.hline =(pConf->lcd_basic.h_period * cfg->factor_denominator + cfg->factor_numerator - 1) / cfg->factor_numerator;  // Rounded. Applicable for Period(pixclk)/Period(bytelaneclk)=9/16
     dsi_vid_config.hsa =(pConf->lcd_timing.hsync_width * cfg->factor_denominator + cfg->factor_numerator - 1) / cfg->factor_numerator;
-    dsi_vid_config.hbp =((pConf->lcd_timing.hsync_bp-pConf->lcd_timing.hsync_width) * cfg->factor_denominator + cfg->factor_numerator - 1) / cfg->factor_numerator;
+    dsi_vid_config.hbp =(pConf->lcd_timing.hsync_bp * cfg->factor_denominator + cfg->factor_numerator - 1) / cfg->factor_numerator;
 
     dsi_vid_config.vsa = pConf->lcd_timing.vsync_width;
-    dsi_vid_config.vbp = pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width;
-    dsi_vid_config.vfp = pConf->lcd_basic.v_period - pConf->lcd_timing.vsync_bp - pConf->lcd_basic.v_active;
+    dsi_vid_config.vbp = pConf->lcd_timing.vsync_bp;
+    dsi_vid_config.vfp = pConf->lcd_basic.v_period - pConf->lcd_basic.v_active - pConf->lcd_timing.vsync_bp - pConf->lcd_timing.vsync_width;
     dsi_vid_config.vact = pConf->lcd_basic.v_active;
 
     lcd_print(" ============= VIDEO TIMING SETTING =============\n");
diff --git a/drivers/amlogic/display/backlight/aml.dtd b/drivers/amlogic/display/backlight/aml.dtd
index beb99ca1d917..11d1b710b9b0 100755
--- a/drivers/amlogic/display/backlight/aml.dtd
+++ b/drivers/amlogic/display/backlight/aml.dtd
@@ -9,7 +9,7 @@
 //$$ L2 PROP_U32 2= "bl_level_max_min"
 //$$ L2 PROP_U32 = "bl_power_on_delay"
 //$$ L2 PROP_U32 = "bl_ctrl_method"
-//$$ L2 PROP_STR = "bl_gpio_port"
+//$$ L2 PROP_STR = "bl_gpio_port_on_off"
 //$$ L2 PROP_U32 2 = "bl_gpio_dim_max_min"
 //$$ L2 PROP_STR 2 = "bl_pwm_port_gpio_used"
 //$$ L2 PROP_U32 = "bl_pwm_freq"
@@ -35,7 +35,7 @@
 		bl_power_on_delay=<200>; /** delay time before backlight power on(unit: ms) */
 		bl_ctrl_method=<1>;	/** backlight control method(0=gpio, 1=pwm_negative, 2=pwm_positive. 3=pwm_combo. 4=extern. decided by hardware design) */
 		
-		bl_gpio_port_on_off="GPIODV_28","1","0";	/** backlight control gpio port */
+		bl_gpio_port_on_off="GPIODV_28","1","0";	/** backlight control gpio port, (on/off:1=output high, 0=output low, 2=input) */
 		bl_gpio_dim_max_min=<0x0 0xf>;	/** brightness diming level_max, level_min : (0x0~0xf, negative logic, only for gpio control method) */
 		bl_pwm_port_gpio_used="PWM_C","1";	/** pwm_port_name(for pwm control method), pwm_gpio_used(0=use pwm_port only, 1=use bl_gpio_port to control on/off) */
 		bl_pwm_freq=<1000>;	/** backlight control pwm frequency(unit: Hz, only for pwm control method) */
diff --git a/drivers/amlogic/display/backlight/aml_bl_extern/aml.dtd b/drivers/amlogic/display/backlight/aml_bl_extern/aml.dtd
index e78f1817a21c..6d4ed1226364 100755
--- a/drivers/amlogic/display/backlight/aml_bl_extern/aml.dtd
+++ b/drivers/amlogic/display/backlight/aml_bl_extern/aml.dtd
@@ -6,7 +6,7 @@
 //******************************************************************************
 //$$ DEVICE = "bl_extern_pmu_aml1218"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_pmu_aml1218{
@@ -14,14 +14,14 @@
 		dev_name ="bl_pmu_aml1218";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio ="n"for none, (on/off:1=output high, 0=output low, 2=input)*/
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <0x1 0x1b>;
 	};
 
 //$$ DEVICE = "bl_extern_i2c_lp8556"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_STR = "i2c_bus"
 //$$ L2 PROP_U32 2 = "dim_max_min"
@@ -30,7 +30,7 @@
 		dev_name ="bl_i2c_lp8556";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio ="n"for none, (on/off:1=output high, 0=output low, 2=input)*/
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <0>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		i2c_address = <0x2c>; /** 7bit i2c address */
 		i2c_bus = "i2c_bus_b";
@@ -39,7 +39,7 @@
 
 //$$ DEVICE = "bl_extern_mipi_LT070ME05"
 //$$ L2 PROP_STR = "status"
-//$$ L2 PROP_STR 2 = "gpio_enable"
+//$$ L2 PROP_STR 2 = "gpio_enable_on_off"
 //$$ L2 PROP_U32 = "type"
 //$$ L2 PROP_U32 2 = "dim_max_min"
 	bl_extern_mipi_LT070ME05{
@@ -47,7 +47,7 @@
 		dev_name ="bl_mipi_LT070ME056";
 		status = "disabled"; /** "disabled" or "okay" */
 
-		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio ="n"for none, (on/off:1=output high, 0=output low, 2=input)*/
+		gpio_enable_on_off = "GPIODV_28","1","0"; /** gpio("n"for none), on/off(1=output high, 0=output low, 2=input)*/
 		type = <2>;	/** bl_extern_driver type: 0=i2c, 1=spi, 2=other */
 		dim_max_min = <255 10>;
 	};
diff --git a/drivers/amlogic/display/vout/aml_lcd.dtd b/drivers/amlogic/display/vout/aml_lcd.dtd
index 041854848b81..35828795daf1 100755
--- a/drivers/amlogic/display/vout/aml_lcd.dtd
+++ b/drivers/amlogic/display/vout/aml_lcd.dtd
@@ -191,8 +191,8 @@
         period=<948 1140>;      /** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<64843200 0>; /** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<64 120>; /** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<50 80>;  /** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<64 56>; /** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<50 30>;  /** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;          /** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         dsi_lane_num=<4>; /** mipi dsi data lane number */
@@ -242,8 +242,8 @@
         period=<948 1140>;     /** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<64843200 0>; /** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<64 120>; /** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<50 80>;  /** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<64 56>; /** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<50 30>;  /** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;          /** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -293,8 +293,8 @@
         period=<2080 1235>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<154128000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<32 112>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<6 26>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<6 20>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -345,8 +345,8 @@
         period=<864 1315>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<56800000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<4 48>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<4 44>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
         vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
 
@@ -407,8 +407,8 @@
         period=<864 1315>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<56800000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<4 48>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<3 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<4 44>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<3 20>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
         vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
 
@@ -451,8 +451,8 @@
         period=<1984 1235>;      /** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<147010000 0>; /** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<16 48>; /** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;  /** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<16 32>; /** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;  /** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;         /** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -495,8 +495,8 @@
         period=<1392 1956>;     /** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<136138000 0>; /** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<12 72>; /** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 8>;   /** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<12 60>; /** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 6>;   /** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;         /** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         dsi_lane_num=<4>;/** mipi dsi data lane number */
@@ -558,8 +558,8 @@
         period=<880 1380>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<72864000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<16 64>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<4 8>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<16 48>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<4 4>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
         vsync_horizontal_phase=<1 4>; /** adj_sign(0=positive, 1=negative), adj_value. default is <0 0> */
 
@@ -598,8 +598,8 @@
         period=<2219 1560>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<207700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         max_lane_count=<4>; /** max lane count supported */
@@ -627,8 +627,8 @@
         period=<2720 1481>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<245500000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<32 112>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<5 38>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<32 80>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<5 33>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         max_lane_count=<4>; /** max lane count supported */
@@ -656,8 +656,8 @@
         period=<1598 798>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<76300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<1 22>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<1 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         max_lane_count=<1>; /** max lane count supported */
@@ -685,8 +685,8 @@
         period=<2032 930>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<113385600 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<32 200>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<32 168>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 21>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         max_lane_count=<1>; /** max lane count supported */
@@ -714,8 +714,8 @@
 		period=<1759 2081>;	 /** horizontal period(htotal), vertical period(vtotal) */
 
 		clock_hz_pol=<200000000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-		hsync_width_backporch=<15 67>;	/** hsync_width, hsync_backporch(include hsync_width) */
-		vsync_width_backporch=<1 4>;	/** vsync_width, vsync_backporch(include vsync_width) */
+		hsync_width_backporch=<15 52>;	/** hsync_width, hsync_backporch(without hsync_width) */
+		vsync_width_backporch=<1 3>;	/** vsync_width, vsync_backporch(without vsync_width) */
 		pol_hsync_vsync=<1 1>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
  
 		max_lane_count=<4>; /** max lane count supported */
@@ -745,8 +745,8 @@
         period=<2084 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<85700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<3 30>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<3 27>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -771,8 +771,8 @@
         period=<1000 1320>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<79200000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -797,8 +797,8 @@
         period=<960 1320>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<76000000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -823,8 +823,8 @@
         period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<51200000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -849,8 +849,8 @@
         period=<1344 806>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<65000000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -875,8 +875,8 @@
         period=<1440 838>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<72400000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -901,8 +901,8 @@
         period=<960 1320>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<63400000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -927,8 +927,8 @@
         period=<1440 835>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<71100000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<5 120>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 32>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<5 115>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 30>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -953,8 +953,8 @@
         period=<1440 838>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<72400000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -979,8 +979,8 @@
         period=<1560 806>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<78000000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -1006,8 +1006,8 @@
         period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<51200000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 170>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 25>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 23>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
 
         lcd_extern_init=<1>;/** lcd extern init command control(0=disable, 1=enable) */
@@ -1034,8 +1034,8 @@
         period=<928 1065>;        /** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<59300000 0>;    /** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 80>; /** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 23>;  /** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 70>; /** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 21>;  /** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;    /** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 //******************************************************************************
@@ -1062,8 +1062,8 @@
         period=<1344 635>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<42700000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 170>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 160>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -1088,8 +1088,8 @@
         period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -1114,8 +1114,8 @@
         period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<30000000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<20 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<20 26>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -1140,8 +1140,8 @@
         period=<1056 525>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<33300000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 46>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<5 23>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 36>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<5 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -1166,8 +1166,8 @@
         period=<620 310>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<11500000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<5 40>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 8>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<5 35>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 6>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
@@ -1195,8 +1195,8 @@
         period=<1440 810>;		/** horizontal period(htotal), vertical period(vtotal) */
 
         clock_hz_pol=<70000000 0>;	/** clock_hz(unit in Hz, both support clk and frame_rate, >200 regard as clk, <200 regard as frame_rate), clk_pol(only valid for TTL) */
-        hsync_width_backporch=<10 70>;	/** hsync_width, hsync_backporch(include hsync_width) */
-        vsync_width_backporch=<2 20>;	/** vsync_width, vsync_backporch(include vsync_width) */
+        hsync_width_backporch=<10 60>;	/** hsync_width, hsync_backporch(without hsync_width) */
+        vsync_width_backporch=<2 18>;	/** vsync_width, vsync_backporch(without vsync_width) */
         pol_hsync_vsync=<0 0>;	/** hsync_polarity, vsync_polarity : (0=negative, 1=positive) */
     };
 
-- 
2.19.0

