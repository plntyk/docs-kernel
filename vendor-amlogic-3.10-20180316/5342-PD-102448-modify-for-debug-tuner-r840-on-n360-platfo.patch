From 7b2926aa1edbb3a1b754e4a35036acacaad765e4 Mon Sep 17 00:00:00 2001
From: "dezhi.kong" <dezhi.kong@amlogic.com>
Date: Mon, 19 Jan 2015 14:14:26 +0800
Subject: [PATCH 5342/5965] PD#102448: modify for debug tuner r840 on n360
 platform

Change-Id: I792068c93ac27b1c23d17cb684bccfda9888b2f7
---
 drivers/amlogic/dvb_tv/Kconfig               |  7 +++++
 drivers/amlogic/dvb_tv/Makefile              |  4 +++
 drivers/amlogic/dvb_tv/aml_fe.h              |  6 ++--
 drivers/amlogic/power/aml_pmu/aml1220_pmu4.c | 30 ++++++++++++++------
 4 files changed, 36 insertions(+), 11 deletions(-)

diff --git a/drivers/amlogic/dvb_tv/Kconfig b/drivers/amlogic/dvb_tv/Kconfig
index d128d7345d38..6ab434b42942 100755
--- a/drivers/amlogic/dvb_tv/Kconfig
+++ b/drivers/amlogic/dvb_tv/Kconfig
@@ -268,5 +268,12 @@ config AM_MXL683_FE
 	depends on AM_DVB
 	help
 		Select to enable MXL683 demod driver.
+
+config AM_R840
+	tristate "the R840 tuner driver"
+	default n
+	depends on AM_DVB
+	help
+		Select to enable R840 tuner driver.		
 endmenu
 
diff --git a/drivers/amlogic/dvb_tv/Makefile b/drivers/amlogic/dvb_tv/Makefile
index 3a3627f9bcd0..99ca2dd1c0e1 100755
--- a/drivers/amlogic/dvb_tv/Makefile
+++ b/drivers/amlogic/dvb_tv/Makefile
@@ -50,4 +50,8 @@ ifneq ($(wildcard $(srctree)/../hardware/dvb/maxlinear/drivers/mxl683),)
 	obj-$(CONFIG_AM_MXL683_FE) += ../../../../hardware/dvb/maxlinear/drivers/mxl683/
 endif
 
+ifneq ($(wildcard $(srctree)/../hardware/dvb/rafael/drivers/r840),)
+	obj-$(CONFIG_AM_R840) += ../../../../hardware/dvb/rafael/drivers/r840/
+endif
+
 EXTRA_CFLAGS += -I.
diff --git a/drivers/amlogic/dvb_tv/aml_fe.h b/drivers/amlogic/dvb_tv/aml_fe.h
index 0044d75af361..50517e1279e4 100755
--- a/drivers/amlogic/dvb_tv/aml_fe.h
+++ b/drivers/amlogic/dvb_tv/aml_fe.h
@@ -59,7 +59,8 @@ typedef enum{
 	AM_TUNER_FQ1216 = 3,
 	AM_TUNER_HTM = 4,
 	AM_TUNER_CTC703=5,
-	AM_TUNER_SI2177 = 6
+	AM_TUNER_SI2177 = 6,
+	AM_TUNER_R840 = 7
 }aml_tuner_type_t;
 
 typedef enum{
@@ -69,7 +70,8 @@ typedef enum{
 	AM_ATV_DEMOD_HTM = 4,
 	AM_ATV_DEMOD_CTC703 = 5,
 	AM_ATV_DEMOD_SI2177 =6,
-	AM_ATV_DEMOD_AML =7
+	AM_ATV_DEMOD_AML =7,
+	AM_ATV_DEMOD_R840 =8
 }aml_atv_demod_type_t;
 
 typedef enum{
diff --git a/drivers/amlogic/power/aml_pmu/aml1220_pmu4.c b/drivers/amlogic/power/aml_pmu/aml1220_pmu4.c
index d928990cc281..a25a620d41ad 100755
--- a/drivers/amlogic/power/aml_pmu/aml1220_pmu4.c
+++ b/drivers/amlogic/power/aml_pmu/aml1220_pmu4.c
@@ -30,7 +30,7 @@ struct i2c_client *g_aml1220_client = NULL;
 
 unsigned int pmu4_analog_reg[15] = {0x00, 0x00, 0x00, 0x00, 0x00, //Reg   0x20 - 0x24
 	                                0x00, 0x00, 0x00, 0x00, 0x51, // Reg  0x25 - 0x29
-                                    0x42, 0x00, 0x42, 0x41, 0x02  //Reg   0x2a - 0x2e             
+                                    0x42, 0x00, 0x42, 0x41, 0x02  //Reg   0x2a - 0x2e
                                    };
 
 #define PMU4_ANALOG_REG_LEN ARRAY_SIZE(pmu4_analog_reg)
@@ -39,6 +39,8 @@ unsigned int pmu4_analog_reg[15] = {0x00, 0x00, 0x00, 0x00, 0x00, //Reg   0x20 -
 
 int aml1220_write(int32_t add, uint8_t val)
 {
+	return 0;
+	#if 0
     int ret;
     uint8_t buf[3] = {};
     struct i2c_client *pdev;
@@ -63,11 +65,14 @@ int aml1220_write(int32_t add, uint8_t val)
         return ret;
     }
     return 0;
+    #endif
 }
 EXPORT_SYMBOL_GPL(aml1220_write);
 
 int aml1220_write16(int32_t add, uint16_t val)
 {
+	return 0;
+	#if 0
     int ret;
     uint8_t buf[4] = {};
     struct i2c_client *pdev;
@@ -93,11 +98,14 @@ int aml1220_write16(int32_t add, uint16_t val)
         return ret;
     }
     return 0;
+    #endif
 }
 EXPORT_SYMBOL_GPL(aml1220_write16);
 
 int aml1220_read(int add, uint8_t *val)
 {
+	return 0;
+	#if 0
     int ret;
     uint8_t buf[2] = {};
     struct i2c_client *pdev;
@@ -127,11 +135,14 @@ int aml1220_read(int add, uint8_t *val)
         return ret;
     }
     return 0;
+    #endif
 }
 EXPORT_SYMBOL_GPL(aml1220_read);
 
 int aml1220_read16(int add, uint16_t *val)
 {
+	return 0;
+	#if 0
     int ret;
     uint8_t buf[2] = {};
     struct i2c_client *pdev;
@@ -145,13 +156,13 @@ int aml1220_read16(int add, uint16_t *val)
         {
             .addr  = AML1220_ADDR,
             .flags = I2C_M_RD,
-            .len   = 2, 
+            .len   = 2,
             .buf   = (uint8_t *)val,
         }
     };
 
     CHECK_DRIVER();
-    pdev = g_aml1220_client; 
+    pdev = g_aml1220_client;
 
     buf[0] = add & 0xff;
     buf[1] = (add >> 8) & 0x0f;
@@ -161,6 +172,7 @@ int aml1220_read16(int add, uint16_t *val)
         return ret;
     }
     return 0;
+    #endif
 }
 
 EXPORT_SYMBOL_GPL(aml1220_read16);
@@ -235,7 +247,7 @@ static ssize_t aml1220_pmu4_reg_write_file(struct file *file,
 	if (copy_from_user(buf, user_buf, buf_size))
 		return -EFAULT;
 	buf[buf_size] = 0;
-	
+
 	while (*start == ' ')
 		start++;
 
@@ -277,11 +289,11 @@ static const struct file_operations aml1220_pmu4_reg_fops = {
 #endif
 
 
-static void aml_pmu4_reg_init(unsigned int reg_base, unsigned int *val, 
+static void aml_pmu4_reg_init(unsigned int reg_base, unsigned int *val,
 	            unsigned int reg_len)
 {
 	unsigned int i = 0;
-	
+
 	for(i=0; i< reg_len; i++){
 		aml1220_write(reg_base + i, val[i]);
 	}
@@ -293,9 +305,9 @@ static int aml_pmu4_power_init(void)
 	printk("enter %s\n",__func__);
 
 	//pmu4 analog register init
-	aml_pmu4_reg_init(AML1220_ANALOG_ADDR, &pmu4_analog_reg[0], 
+	aml_pmu4_reg_init(AML1220_ANALOG_ADDR, &pmu4_analog_reg[0],
 		   PMU4_ANALOG_REG_LEN);
-	
+
 	return 0;
 
 }
@@ -327,7 +339,7 @@ static int aml_pmu4_i2c_remove(struct i2c_client *client)
 {
 	printk("enter %s\n",__func__);
 	kfree(i2c_get_clientdata(client));
-	
+
 	return 0;
 }
 
-- 
2.19.0

