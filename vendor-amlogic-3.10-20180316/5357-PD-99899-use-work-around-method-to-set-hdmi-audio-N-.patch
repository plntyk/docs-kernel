From adef882a6181e6b20d1b382fdb0639282d7b8616 Mon Sep 17 00:00:00 2001
From: Hang Cheng <hang.cheng@amlogic.com>
Date: Tue, 20 Jan 2015 19:30:26 +0800
Subject: [PATCH 5357/5965] PD #99899: use work-around method to set hdmi audio
 N=6144*2 for 480i/480p on special TVs for m8/m8b/m8m2

Squashed commit of the following:

commit e27d29896a9a656c45dc0350796d5197dc19a696
Author: Hang Cheng <hang.cheng@amlogic.com>
Date:   Mon Jan 19 12:35:52 2015 +0800

    PD #99899: use work-around method to set hdmi audio N=6144*2 for 480i/480p on special TVs for m8/m8b/m8m2: add a file that was missed to commit

    Change-Id: I32ce811595610052fc8e55ea9e279fe1f99b3eba

commit 066ddfe2a5e125b4b4ed667611448b27f543f14a
Author: Hang Cheng <hang.cheng@amlogic.com>
Date:   Fri Jan 16 15:11:52 2015 +0800

    PD #99899: use work-around method to set hdmi audio N=6144*2 for 480i/480p on special TVs for m8/m8b/m8m2

    Change-Id: I723a84cf57db367830303f9f46ed438c31961883

Change-Id: Iaa5fe7986a6a53c6cebbea33e237b77ee212f514
---
 arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c  |  20 +++
 arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c |  18 +++
 drivers/amlogic/hdmi/hdmi_tx/Makefile         |   2 +-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_audio.c  |   2 +
 .../amlogic/hdmi/hdmi_tx/hdmi_tx_compliance.c | 136 +++++++++---------
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_edid.c   |   4 +-
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c  |   2 +
 .../amlogic}/hdmi_tx/hdmi_tx_compliance.h     |  11 --
 .../linux/amlogic/hdmi_tx/hdmi_tx_module.h    |   8 ++
 9 files changed, 122 insertions(+), 81 deletions(-)
 rename {drivers/amlogic/hdmi => include/linux/amlogic}/hdmi_tx/hdmi_tx_compliance.h (58%)

diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
index bfced3f66027..4464ac369d4d 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_hw.c
@@ -3519,6 +3519,26 @@ static int hdmitx_cntl_misc(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned
     case MISC_VIID_IS_USING:
         return !!(aml_read_reg32(P_HHI_VID2_PLL_CNTL) & (1 << 30));     // bit30: enable
         break;
+    case MISC_COMP_HPLL:
+        if (argv == COMP_HPLL_SET_OPTIMISE_HPLL1)
+            printk("TODO %s[%d]\n", __func__, __LINE__);
+        if (argv == COMP_HPLL_SET_OPTIMISE_HPLL2)
+			
+            printk("TODO %s[%d]\n", __func__, __LINE__);
+        break;
+    case MISC_COMP_AUDIO:
+        if (argv == COMP_AUDIO_SET_N_6144x2) {
+			if(hdmitx_device->cur_audio_param.type == CT_PCM){
+				if( (hdmitx_device->cur_VIC == HDMI_480p60) || (hdmitx_device->cur_VIC == HDMI_480p60_16x9) ||
+					(hdmitx_device->cur_VIC == HDMI_480i60) || (hdmitx_device->cur_VIC == HDMI_480i60_16x9) )
+					hdmi_wr_reg(TX_SYS1_ACR_N_1, 0x30);
+			}
+        }
+        if (argv == COMP_AUDIO_SET_N_6144x3) {
+            hdmi_wr_reg(TX_SYS1_ACR_N_1, 0x48);
+            printk("TODO %s[%d]\n", __func__, __LINE__);
+        }
+        break;
     default:
         hdmi_print(ERR, "misc: " "hdmitx: unknown cmd: 0x%x\n", cmd);
     }
diff --git a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
index d97090686b3f..2927c5294e31 100755
--- a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
+++ b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_hw.c
@@ -3262,6 +3262,24 @@ static int hdmitx_cntl_misc(hdmitx_dev_t* hdmitx_device, unsigned cmd, unsigned
     case MISC_VIID_IS_USING:
         return !!(aml_read_reg32(P_HHI_VID2_PLL_CNTL) & (1 << 30));     // bit30: enable
         break;
+    case MISC_COMP_HPLL:
+        if (argv == COMP_HPLL_SET_OPTIMISE_HPLL1)
+            printk("TODO %s[%d]\n", __func__, __LINE__);
+        if (argv == COMP_HPLL_SET_OPTIMISE_HPLL2)
+            printk("TODO %s[%d]\n", __func__, __LINE__);
+        break;
+    case MISC_COMP_AUDIO:
+        if (argv == COMP_AUDIO_SET_N_6144x2) {
+			if(hdmitx_device->cur_audio_param.type == CT_PCM){
+				if( (hdmitx_device->cur_VIC == HDMI_480p60) || (hdmitx_device->cur_VIC == HDMI_480p60_16x9) ||
+					(hdmitx_device->cur_VIC == HDMI_480i60) || (hdmitx_device->cur_VIC == HDMI_480i60_16x9) )
+					hdmi_wr_reg(TX_SYS1_ACR_N_1, 0x30);
+			}
+        }
+        if (argv == COMP_AUDIO_SET_N_6144x3) {
+            hdmi_wr_reg(TX_SYS1_ACR_N_1, 0x48);
+        }
+        break;
     default:
         hdmi_print(ERR, "misc: " "hdmitx: unknown cmd: 0x%x\n", cmd);
     }
diff --git a/drivers/amlogic/hdmi/hdmi_tx/Makefile b/drivers/amlogic/hdmi/hdmi_tx/Makefile
index 5d423d04dc4c..7a944cd7f62e 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/Makefile
+++ b/drivers/amlogic/hdmi/hdmi_tx/Makefile
@@ -1,5 +1,5 @@
 obj-$(CONFIG_AML_HDMI_TX)		+= hdmitx.o
 
-hdmitx-objs := hdmi_tx.o hdmi_tx_cec.o hdmi_cec_key.o hdmi_tx_video.o hdmi_tx_audio.o hdmi_tx_edid.o hdmi_tx_audio.o hdmi_tx_hdcp.o
+hdmitx-objs := hdmi_tx.o hdmi_tx_cec.o hdmi_cec_key.o hdmi_tx_video.o hdmi_tx_audio.o hdmi_tx_edid.o hdmi_tx_audio.o hdmi_tx_hdcp.o hdmi_tx_compliance.o
 
 #EXTRA_CFLAGS += -O2
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_audio.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_audio.c
index 54b2a48502c7..7f82d30928bb 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_audio.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_audio.c
@@ -14,6 +14,7 @@
 
 #include <linux/amlogic/hdmi_tx/hdmi_info_global.h>
 #include <linux/amlogic/hdmi_tx/hdmi_tx_module.h>
+#include <linux/amlogic/hdmi_tx/hdmi_tx_compliance.h>
 
 #undef PCM_USE_INFOFRAME
 
@@ -227,6 +228,7 @@ int hdmitx_set_audio(hdmitx_dev_t* hdmitx_device, Hdmi_tx_audio_para_t* audio_pa
         hdmitx_device->HWOp.SetAudioInfoFrame(AUD_DB, CHAN_STAT_BUF);
         ret = 0;
     }
+    hdmitx_special_handler_audio(hdmitx_device);
     return ret;
 }
 
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_compliance.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_compliance.c
index 0bb699170a16..79a2e24086f7 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_compliance.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_compliance.c
@@ -39,88 +39,88 @@
 #include <mach/clock.h>
 #include <linux/amlogic/vout/vinfo.h>
 #include <linux/amlogic/vout/enc_clk_config.h>
+#include <linux/amlogic/hdmi_tx/hdmi_tx_compliance.h>
 
-#include "hdmi_info_global.h"
-#include "hdmi_tx_module.h"
-#include "hdmi_tx_compliance.h"
-#include "hdmi_tx_cec.h"
-#include "hdmi_tx_hdcp.h"
-#include "hw/hdmi_tx_reg.h"
+typedef struct{
+	char *ReceiverBrandName;
+	char *ReceiverProductName;
+	unsigned char blk0_chksum;
+}special_tv;
 
-// Note: 
-// set P_HHI_VID_PLL_CNTL as 0x43e, get better clock performance
-// while as 0x21ef, get better clock precision
-// 24 * 62 = 1488
-// 24 / 8 * 495 = 1485
+static special_tv special_N_6144x2_tv_tab[]={
+	/*SONY KDL-32R300B*/
+	{
+		.ReceiverBrandName="SNY",
+		.ReceiverProductName="SONY",
+		.blk0_chksum=0xf8,
+	},
+	/*TCL L19F3270B*/
+	{
+		.ReceiverBrandName="TCL",
+		.ReceiverProductName="MST6M16",
+		.blk0_chksum=0xa9,
+	},
+	/*Panasonic TH-32A400C*/
+	{
+		.ReceiverBrandName="MEI",
+		.ReceiverProductName="Panasonic-TV",
+		.blk0_chksum=0x28,
+	},
+};
 
-static void hdmitx_get_clk_better_performance(hdmitx_dev_t* hdmitx_device)
+/*
+ * # cat /sys/class/amhdmitx/amhdmitx0/edid
+ * Receiver Brand Name: GSM
+ * Receiver Product Name: LG
+ * blk0 chksum: 0xe7
+ *
+ * recoginze_tv()
+ * parameters:
+ *      brand_name: the name of "Receiver Brand Name"
+ *      prod_name: the name of "Receiver Product Name"
+ *      blk0_chksum: the value of blk0 chksum
+ */
+static int recoginze_tv(hdmitx_dev_t* hdev, char *brand_name, char *prod_name, unsigned char blk0_chksum)
 {
-    if((aml_read_reg32(P_HHI_VID_PLL_CNTL) & 0x3fff ) == 0x21ef) {
-        aml_set_reg32_bits(P_HHI_VID_PLL_CNTL, 0x43e, 0, 15);
-    }
+    if((strncmp(hdev->RXCap.ReceiverBrandName, brand_name, strlen(brand_name)) == 0) && \
+     (strncmp(hdev->RXCap.ReceiverProductName, prod_name, strlen(prod_name)) == 0) && \
+     (hdev->RXCap.blk0_chksum == blk0_chksum))
+        return 1;
+    else return 0;
 }
 
-static void hdmitx_reset_audio_n(hdmitx_dev_t* hdmitx_device)
+/*
+ * hdmitx_special_handler_video()
+ */
+void hdmitx_special_handler_video(hdmitx_dev_t* hdev)
 {
-    static int rewrite_flag = 0;
-    unsigned int audio_N_para = 6144;
-    switch(hdmitx_device->cur_VIC) {
-    case HDMI_480p60:
-    case HDMI_480p60_16x9:
-    case HDMI_576p50:
-    case HDMI_576p50_16x9:
-    case HDMI_480i60:
-    case HDMI_480i60_16x9:
-    case HDMI_576i50:
-    case HDMI_576i50_16x9:
-        switch(hdmitx_device->cur_audio_param.sample_rate){
-        case FS_44K1:
-            audio_N_para = 6272 * 3;
-            rewrite_flag = 1;
-            break;
-        case FS_48K:
-            audio_N_para = 6144 * 3;
-            rewrite_flag = 1;
-            break;
-        default:
-            break;
-        }
-        break;
-    default:
-        break;
+	if (recoginze_tv(hdev, "GSM", "LG", 0xE7)) {
+        hdev->HWOp.CntlMisc(hdev, MISC_COMP_HPLL, COMP_HPLL_SET_OPTIMISE_HPLL1);
     }
-    if(rewrite_flag) {
-        hdmi_wr_reg(TX_SYS1_ACR_N_0, (audio_N_para&0xff)); // N[7:0]
-        hdmi_wr_reg(TX_SYS1_ACR_N_1, (audio_N_para>>8)&0xff); // N[15:8]
-        hdmi_wr_reg(TX_SYS1_ACR_N_2, hdmi_rd_reg(TX_SYS1_ACR_N_2) | ((audio_N_para>>16)&0xf)); // N[19:16]
+    if (recoginze_tv(hdev, "SAM", "SAMSUNG", 0x22)) {
+        hdev->HWOp.CntlMisc(hdev, MISC_COMP_HPLL, COMP_HPLL_SET_OPTIMISE_HPLL2);
     }
 }
 
-// a sony special tv edid hash value: "acc0df36f1e523a2e02cfd54514732513e3a4351"
-// got the first 4 bytes
-static unsigned int SONY_EDID_HASH = 0xacc0df36;
-static int edid_hash_compare(unsigned char *dat, unsigned int SPECIAL)
+/*
+ * hdmitx_special_handler_audio()
+ */
+void hdmitx_special_handler_audio(hdmitx_dev_t* hdev)
 {
-    int ret = 0;
+    int i = 0;
+    for(i = 0; i < ARRAY_SIZE(special_N_6144x2_tv_tab); i++) {
+        if (recoginze_tv(hdev, special_N_6144x2_tv_tab[i].ReceiverBrandName, special_N_6144x2_tv_tab[i].ReceiverProductName, special_N_6144x2_tv_tab[i].blk0_chksum))
+			hdev->HWOp.CntlMisc(hdev, MISC_COMP_AUDIO, COMP_AUDIO_SET_N_6144x2);
+    }
 
-    if((dat[0] == ((SPECIAL >> 24)&0xff)) && (dat[1] == ((SPECIAL >> 16)&0xff)) && (dat[2] == ((SPECIAL >> 8)&0xff)) && (dat[3] == (SPECIAL & 0xff)))
-        ret = 1;
-    return ret;
-}
+#if 0
+	// TODO
 
-void hdmitx_special_handler_audio(hdmitx_dev_t* hdmitx_device)
-{
-    if(edid_hash_compare(&hdmitx_device->EDID_hash[0], SONY_EDID_HASH)) {
-        hdmitx_reset_audio_n(hdmitx_device);
+	if (recoginze_tv(hdev, "SAM", "SAMSUNG", 0x22)) {
+        hdev->HWOp.CntlMisc(hdev, MISC_COMP_AUDIO, COMP_AUDIO_SET_N_6144x2);
     }
-}
-
-void hdmitx_special_handler_video(hdmitx_dev_t* hdmitx_device)
-{
-    if(strncmp(hdmitx_device->RXCap.ReceiverBrandName, HDMI_RX_VIEWSONIC, strlen(HDMI_RX_VIEWSONIC)) == 0) {
-        if(strncmp(hdmitx_device->RXCap.ReceiverProductName, HDMI_RX_VIEWSONIC_MODEL, strlen(HDMI_RX_VIEWSONIC_MODEL)) == 0) {
-            hdmitx_get_clk_better_performance(hdmitx_device);
-        }
+    if (recoginze_tv(hdev, "GSM", "LG", 0xE7)) {
+        hdev->HWOp.CntlMisc(hdev, MISC_COMP_AUDIO, COMP_AUDIO_SET_N_6144x3);
     }
+#endif
 }
-
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_edid.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_edid.c
index 0b06bf57dde3..49aa4fe25d18 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_edid.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_edid.c
@@ -1215,7 +1215,8 @@ int hdmitx_edid_parse(hdmitx_dev_t* hdmitx_device)
     Edid_DecodeStandardTiming(&hdmitx_device->hdmi_info, &EDID_buf[26], 8);
     Edid_ParseCEADetailedTimingDescriptors(&hdmitx_device->hdmi_info, 4, 0x36, &EDID_buf[0]);
 
-    BlockCount = EDID_buf[0x7E] ;
+    BlockCount = EDID_buf[0x7E];
+    hdmitx_device->RXCap.blk0_chksum = EDID_buf[0x7F];
 
     if( BlockCount == 0 ){
         hdmitx_device->hdmi_info.output_state = CABLE_PLUGIN_DVI_OUT;
@@ -1605,6 +1606,7 @@ int hdmitx_edid_dump(hdmitx_dev_t* hdmitx_device, char* buffer, int buffer_len)
     pos+=snprintf(buffer+pos, buffer_len-pos, "Receiver Product Name: %s\n", pRXCap->ReceiverProductName);
 
     pos+=snprintf(buffer+pos, buffer_len-pos, "EDID block number: 0x%x\n",hdmitx_device->EDID_buf[0x7e]);
+    pos+=snprintf(buffer+pos, buffer_len-pos, "blk0 chksum: 0x%02x\n", pRXCap->blk0_chksum);
 
     pos+=snprintf(buffer+pos, buffer_len-pos, "Source Physical Address[a.b.c.d]: %x.%x.%x.%x\n",
         hdmitx_device->hdmi_info.vsdb_phy_addr.a, hdmitx_device->hdmi_info.vsdb_phy_addr.b, hdmitx_device->hdmi_info.vsdb_phy_addr.c, hdmitx_device->hdmi_info.vsdb_phy_addr.d);
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c
index ab9dc215ec15..f96e0bd2af8e 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_video.c
@@ -14,6 +14,7 @@
 
 #include <linux/amlogic/hdmi_tx/hdmi_info_global.h>
 #include <linux/amlogic/hdmi_tx/hdmi_tx_module.h>
+#include <linux/amlogic/hdmi_tx/hdmi_tx_compliance.h>
 
 static unsigned char hdmi_output_rgb = 0;
 static void hdmitx_set_spd_info(hdmitx_dev_t* hdmitx_device);
@@ -515,6 +516,7 @@ int hdmitx_set_display(hdmitx_dev_t* hdmitx_device, HDMI_Video_Codes_t VideoCode
         }
     }
     hdmitx_set_spd_info(hdmitx_device);
+    hdmitx_special_handler_video(hdmitx_device);
     return ret;
 }
 
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_compliance.h b/include/linux/amlogic/hdmi_tx/hdmi_tx_compliance.h
similarity index 58%
rename from drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_compliance.h
rename to include/linux/amlogic/hdmi_tx/hdmi_tx_compliance.h
index ebb981891304..9e8eb9f2f2fe 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_compliance.h
+++ b/include/linux/amlogic/hdmi_tx/hdmi_tx_compliance.h
@@ -21,16 +21,5 @@
 void hdmitx_special_handler_video(hdmitx_dev_t* hdmitx_device);
 void hdmitx_special_handler_audio(hdmitx_dev_t* hdmitx_device);
 
-// How to get RX's brand & product ?
-// root@android:/ # cat /sys/class/amhdmitx/amhdmitx0/edid
-// Receiver Brand Name: VSC
-// Receiver Product Name: VX2433wm
-// Then you will see VSC, ViewSonic's Abbr, and module is VX2433wm
-
-///////////////////////////////////
-// Brand: View Sonic
-#define HDMI_RX_VIEWSONIC           "VSC"           // must be 3 characters
-#define HDMI_RX_VIEWSONIC_MODEL     "VX2433wm"  // less than 13 characters
-
 #endif
 
diff --git a/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h b/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
index a8a0bca76541..86a2ba93d67d 100755
--- a/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
+++ b/include/linux/amlogic/hdmi_tx/hdmi_tx_module.h
@@ -65,6 +65,8 @@ typedef struct rx_cap_
         unsigned char top_and_bottom;
         unsigned char side_by_side;
     } support_3d_format[VIC_MAX_NUM];
+    /*blk0 check sum*/
+    unsigned char blk0_chksum;
 }rx_cap_t;
 
 typedef struct Cts_conf_tab_ {
@@ -222,6 +224,12 @@ typedef struct hdmi_tx_dev_s {
 #define MISC_VIID_IS_USING      (CMD_MISC_OFFSET + 0x05)
 #define MISC_CONF_MODE420       (CMD_MISC_OFFSET + 0x06)
 #define MISC_TMDS_CLK_DIV40     (CMD_MISC_OFFSET + 0x07)
+#define MISC_COMP_HPLL         (CMD_MISC_OFFSET + 0x08)
+    #define COMP_HPLL_SET_OPTIMISE_HPLL1    0x1
+    #define COMP_HPLL_SET_OPTIMISE_HPLL2    0x2
+#define MISC_COMP_AUDIO         (CMD_MISC_OFFSET + 0x09)
+    #define COMP_AUDIO_SET_N_6144x2          0x1
+    #define COMP_AUDIO_SET_N_6144x3          0x2
 
 /***********************************************************************
  *                          Get State //GetState
-- 
2.19.0

