From f50e50546ad06efcd99a2c279c37ee994aecb91e Mon Sep 17 00:00:00 2001
From: Zongdong Jiao <zongdong.jiao@amlogic.com>
Date: Sat, 28 Mar 2015 17:51:18 +0800
Subject: [PATCH 5519/5965] PD#104733: hdmitx2: enable EDID Func

Just enable edid function, also cat read singal edid data:
root@n210:/ # echo 0x01 > /sys/class/amhdmitx/amhdmitx0/edid
EDID[0x01]=0xff

Change-Id: Iffae606f3979105bb7b18bc08c0c1687689ceaa5
---
 .../mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c |  4 ++--
 drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c | 22 +++++++++++++++----
 2 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c b/arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c
index 2134eb6b83a7..799ab244a6fc 100755
--- a/arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c
+++ b/arch/arm/mach-mesong9tv/hdmi_tx_hw_20/hdmi_tx_hw.c
@@ -183,7 +183,7 @@ enum ddc_op {
 static int hdmitx_ddc_hw_op(enum ddc_op cmd)
 {
     int ret = 0;
-    return 0;   //tmp directly return
+
     switch(cmd) {
     case DDC_INIT_DISABLE_PULL_UP_DN:
         aml_set_reg32_bits(P_PAD_PULL_UP_EN_REG1, 0, 19, 2);      // Disable GPIOH_3/4 pull-up/down
@@ -2939,7 +2939,7 @@ static int hdmitx_cntl_ddc(hdmitx_dev_t* hdev, unsigned cmd, unsigned argv)
 {
     int i = 0;
     unsigned char *tmp_char = NULL;
-    return 0;    //tmp direct return
+
     if(!(cmd & CMD_DDC_OFFSET))
         hdmi_print(ERR, "ddc: " "w: invalid cmd 0x%x\n", cmd);
     else
diff --git a/drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c b/drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c
index 9ffc6553c7b3..632dd046e096 100644
--- a/drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c
+++ b/drivers/amlogic/hdmi/hdmi_tx_2/hdmi_tx_main.c
@@ -577,6 +577,20 @@ static ssize_t store_edid(struct device * dev, struct device_attribute *attr, co
             printk("%02x", hdmitx_device.EDID_hash[i]);
         printk("\n");
     }
+    // show singal EDID raw data
+    if ((buf[0] == '0') && ((buf[1] == 'x') || (buf[1] == 'X'))) {
+        unsigned long addr;
+        unsigned char idx, val;
+        addr = simple_strtoul(buf, NULL, 16);
+        if (addr > 0xff) {
+            printk("Invaild EDID Addr: 0x%x\n", (unsigned int)addr);
+            return 16;
+        }
+        idx = (unsigned char) addr;
+        val = hdmitx_device.EDID_buf[idx];
+        printk("EDID[0x%02x]=0x%02x\n", idx, val);
+    }
+
     if(buf[0]=='d'){
         int ii,jj;
         int block_idx;
@@ -1151,11 +1165,11 @@ void hdmitx_hpd_plugin_handler(struct work_struct *work)
 
     if(!(hdev->hdmitx_event & (HDMI_TX_HPD_PLUGIN)))
         return;
-    printk("TODO plugin\n");
+    printk("hdmitx: plugin\n");
     mutex_lock(&setclk_mutex);
     // start reading E-EDID
     hdev->hpd_state = 1;
-    goto tmp_no_edid_handler;
+
     hdmitx_edid_ram_buffer_clear(hdev);
     hdev->HWOp.CntlDDC(hdev, DDC_RESET_EDID, 0);
     hdev->HWOp.CntlDDC(hdev, DDC_PIN_MUX_OP, PIN_MUX);
@@ -1168,7 +1182,7 @@ void hdmitx_hpd_plugin_handler(struct work_struct *work)
     hdmitx_edid_buf_compare_print(hdev);
     hdmitx_edid_clear(hdev);
     hdmitx_edid_parse(hdev);
-tmp_no_edid_handler:
+
     set_disp_mode_auto();
     hdmitx_set_audio(hdev, &(hdev->cur_audio_param), hdmi_ch);
     switch_set_state(&sdev, 1);
@@ -1187,7 +1201,7 @@ void hdmitx_hpd_plugout_handler(struct work_struct *work)
     mutex_lock(&setclk_mutex);
     hdev->hpd_state = 0;
     //hdev->HWOp.CntlConfig(hdev, CONF_CLR_AVI_PACKET, 0);
-    printk("TODO plugout\n");
+    printk("hdmitx: plugout\n");
     switch_set_state(&sdev, 0);
     hdev->hdmitx_event &= ~HDMI_TX_HPD_PLUGOUT;
     mutex_unlock(&setclk_mutex);
-- 
2.19.0

