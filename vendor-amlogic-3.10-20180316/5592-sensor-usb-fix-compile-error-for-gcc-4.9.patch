From aebfef6334be73384e3a86adfb1054218c60ecd2 Mon Sep 17 00:00:00 2001
From: Yun Cai <yun.cai@amlogic.com>
Date: Thu, 7 May 2015 16:35:18 +0800
Subject: [PATCH 5592/5965] sensor/usb: fix compile error for gcc 4.9

Change-Id: Id6bd93e1245d8466c9adbf8516c5b7ba58b72a91
---
 drivers/amlogic/input/sensor/bma222.c         | 224 +++++++--------
 drivers/amlogic/input/sensor/bma250.c         | 254 +++++++++---------
 .../usb/dwc_otg/310/dwc_otg_pcd_intr.c        |   2 +-
 3 files changed, 240 insertions(+), 240 deletions(-)
 mode change 100755 => 100644 drivers/amlogic/usb/dwc_otg/310/dwc_otg_pcd_intr.c

diff --git a/drivers/amlogic/input/sensor/bma222.c b/drivers/amlogic/input/sensor/bma222.c
index e5877c37bced..5c6d5175b77d 100644
--- a/drivers/amlogic/input/sensor/bma222.c
+++ b/drivers/amlogic/input/sensor/bma222.c
@@ -788,7 +788,7 @@ static int bma222_smbus_read_byte_block(struct i2c_client *client,
 static int bma222_set_mode(struct i2c_client *client, unsigned char Mode)
 {
 	int comres = 0;
-	unsigned char data1;
+	unsigned char data1 = 0;
 
 
 	if (Mode < 3) {
@@ -831,7 +831,7 @@ static int bma222_set_int1_pad_sel(struct i2c_client *client, unsigned char
 		int1sel)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 	unsigned char state;
 	state = 0x01;
 
@@ -905,7 +905,7 @@ static int bma222_set_int2_pad_sel(struct i2c_client *client, unsigned char
 		int2sel)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 	unsigned char state;
 	state = 0x01;
 
@@ -979,7 +979,7 @@ static int bma222_set_Int_Enable(struct i2c_client *client, unsigned char
 		InterruptType , unsigned char value)
 {
 	int comres = 0;
-	unsigned char data1, data2;
+	unsigned char data1 = 0, data2 = 0;
 
 
 	comres = bma222_smbus_read_byte(client, BMA222_INT_ENABLE1_REG, &data1);
@@ -1083,7 +1083,7 @@ static int bma222_get_mode(struct i2c_client *client, unsigned char *Mode)
 static int bma222_set_range(struct i2c_client *client, unsigned char Range)
 {
 	int comres = 0;
-	unsigned char data1;
+	unsigned char data1 = 0;
 
 
 	if (Range < 4) {
@@ -1122,7 +1122,7 @@ static int bma222_set_range(struct i2c_client *client, unsigned char Range)
 static int bma222_get_range(struct i2c_client *client, unsigned char *Range)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma222_smbus_read_byte(client, BMA222_RANGE_SEL__REG,
@@ -1138,7 +1138,7 @@ static int bma222_get_range(struct i2c_client *client, unsigned char *Range)
 static int bma222_set_bandwidth(struct i2c_client *client, unsigned char BW)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 	int Bandwidth = 0;
 
 
@@ -1188,7 +1188,7 @@ static int bma222_set_bandwidth(struct i2c_client *client, unsigned char BW)
 static int bma222_get_bandwidth(struct i2c_client *client, unsigned char *BW)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma222_smbus_read_byte(client, BMA222_BANDWIDTH__REG,
@@ -1213,7 +1213,7 @@ static int bma222_get_interruptstatus1(struct i2c_client *client, unsigned char
 		*intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_STATUS1_REG, &data);
 	*intstatus = data;
@@ -1226,7 +1226,7 @@ static int bma222_get_HIGH_first(struct i2c_client *client, unsigned char
 						param, unsigned char *intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	switch (param) {
 	case 0:
@@ -1258,7 +1258,7 @@ static int bma222_get_HIGH_sign(struct i2c_client *client, unsigned char
 		*intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_STATUS_ORIENT_HIGH_REG,
 			&data);
@@ -1273,7 +1273,7 @@ static int bma222_get_slope_first(struct i2c_client *client, unsigned char
 	param, unsigned char *intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	switch (param) {
 	case 0:
@@ -1305,7 +1305,7 @@ static int bma222_get_slope_sign(struct i2c_client *client, unsigned char
 		*intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_STATUS_TAP_SLOPE_REG,
 			&data);
@@ -1319,7 +1319,7 @@ static int bma222_get_orient_status(struct i2c_client *client, unsigned char
 		*intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_STATUS_ORIENT_HIGH_REG,
 			&data);
@@ -1333,7 +1333,7 @@ static int bma222_get_orient_flat_status(struct i2c_client *client, unsigned
 		char *intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_STATUS_ORIENT_HIGH_REG,
 			&data);
@@ -1346,7 +1346,7 @@ static int bma222_get_orient_flat_status(struct i2c_client *client, unsigned
 static int bma222_set_Int_Mode(struct i2c_client *client, unsigned char Mode)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma222_smbus_read_byte(client,
@@ -1362,7 +1362,7 @@ static int bma222_set_Int_Mode(struct i2c_client *client, unsigned char Mode)
 static int bma222_get_Int_Mode(struct i2c_client *client, unsigned char *Mode)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma222_smbus_read_byte(client,
@@ -1377,7 +1377,7 @@ static int bma222_set_slope_duration(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma222_smbus_read_byte(client,
@@ -1394,7 +1394,7 @@ static int bma222_get_slope_duration(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma222_smbus_read_byte(client,
@@ -1410,7 +1410,7 @@ static int bma222_set_slope_threshold(struct i2c_client *client,
 		unsigned char threshold)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma222_smbus_read_byte(client,
@@ -1427,7 +1427,7 @@ static int bma222_get_slope_threshold(struct i2c_client *client,
 		unsigned char *status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma222_smbus_read_byte(client,
@@ -1442,7 +1442,7 @@ static int bma222_set_low_g_duration(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_LOWG_DUR__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_LOWG_DUR, duration);
@@ -1455,7 +1455,7 @@ static int bma222_get_low_g_duration(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_LOW_DURN_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_LOWG_DUR);
@@ -1468,7 +1468,7 @@ static int bma222_set_low_g_threshold(struct i2c_client *client, unsigned char
 		threshold)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_LOWG_THRES__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_LOWG_THRES, threshold);
@@ -1481,7 +1481,7 @@ static int bma222_get_low_g_threshold(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_LOW_THRES_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_LOWG_THRES);
@@ -1494,7 +1494,7 @@ static int bma222_set_high_g_duration(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_HIGHG_DUR__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_HIGHG_DUR, duration);
@@ -1507,7 +1507,7 @@ static int bma222_get_high_g_duration(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_HIGH_DURN_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_HIGHG_DUR);
@@ -1520,7 +1520,7 @@ static int bma222_set_high_g_threshold(struct i2c_client *client, unsigned char
 		threshold)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_HIGHG_THRES__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_HIGHG_THRES, threshold);
@@ -1534,7 +1534,7 @@ static int bma222_get_high_g_threshold(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_HIGH_THRES_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_HIGHG_THRES);
@@ -1548,7 +1548,7 @@ static int bma222_set_tap_duration(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_DUR__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_TAP_DUR, duration);
@@ -1561,7 +1561,7 @@ static int bma222_get_tap_duration(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_PARAM_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_TAP_DUR);
@@ -1573,7 +1573,7 @@ static int bma222_get_tap_duration(struct i2c_client *client, unsigned char
 static int bma222_set_tap_shock(struct i2c_client *client, unsigned char setval)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_SHOCK_DURN__REG,
 			&data);
@@ -1588,7 +1588,7 @@ static int bma222_get_tap_shock(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_PARAM_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_TAP_SHOCK_DURN);
@@ -1601,7 +1601,7 @@ static int bma222_set_tap_quiet(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_QUIET_DURN__REG,
 			&data);
@@ -1616,7 +1616,7 @@ static int bma222_get_tap_quiet(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_PARAM_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_TAP_QUIET_DURN);
@@ -1629,7 +1629,7 @@ static int bma222_set_tap_threshold(struct i2c_client *client, unsigned char
 		threshold)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_THRES__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_TAP_THRES, threshold);
@@ -1642,7 +1642,7 @@ static int bma222_get_tap_threshold(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_THRES_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_TAP_THRES);
@@ -1654,7 +1654,7 @@ static int bma222_get_tap_threshold(struct i2c_client *client, unsigned char
 static int bma222_set_tap_samp(struct i2c_client *client, unsigned char samp)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_SAMPLES__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_TAP_SAMPLES, samp);
@@ -1667,7 +1667,7 @@ static int bma222_set_tap_samp(struct i2c_client *client, unsigned char samp)
 static int bma222_get_tap_samp(struct i2c_client *client, unsigned char *status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_TAP_THRES_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_TAP_SAMPLES);
@@ -1679,7 +1679,7 @@ static int bma222_get_tap_samp(struct i2c_client *client, unsigned char *status)
 static int bma222_set_orient_mode(struct i2c_client *client, unsigned char mode)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_ORIENT_MODE__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_ORIENT_MODE, mode);
@@ -1693,7 +1693,7 @@ static int bma222_get_orient_mode(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_ORIENT_PARAM_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_ORIENT_MODE);
@@ -1706,7 +1706,7 @@ static int bma222_set_orient_blocking(struct i2c_client *client, unsigned char
 		samp)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_ORIENT_BLOCK__REG,
 			&data);
@@ -1721,7 +1721,7 @@ static int bma222_get_orient_blocking(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_ORIENT_PARAM_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_ORIENT_BLOCK);
@@ -1734,7 +1734,7 @@ static int bma222_set_orient_hyst(struct i2c_client *client, unsigned char
 		orienthyst)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_ORIENT_HYST__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_ORIENT_HYST, orienthyst);
@@ -1748,7 +1748,7 @@ static int bma222_get_orient_hyst(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_ORIENT_PARAM_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_ORIENT_HYST);
@@ -1760,7 +1760,7 @@ static int bma222_set_theta_blocking(struct i2c_client *client, unsigned char
 		thetablk)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_THETA_BLOCK__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_THETA_BLOCK, thetablk);
@@ -1774,7 +1774,7 @@ static int bma222_get_theta_blocking(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_THETA_BLOCK_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_THETA_BLOCK);
@@ -1787,7 +1787,7 @@ static int bma222_set_theta_flat(struct i2c_client *client, unsigned char
 		thetaflat)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_THETA_FLAT__REG, &data);
 	data = BMA222_SET_BITSLICE(data, BMA222_THETA_FLAT, thetaflat);
@@ -1800,7 +1800,7 @@ static int bma222_get_theta_flat(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0 ;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_THETA_FLAT_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_THETA_FLAT);
@@ -1813,7 +1813,7 @@ static int bma222_set_flat_hold_time(struct i2c_client *client, unsigned char
 		holdtime)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_FLAT_HOLD_TIME__REG,
 			&data);
@@ -1828,7 +1828,7 @@ static int bma222_get_flat_hold_time(struct i2c_client *client, unsigned char
 		*holdtime)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_FLAT_HOLD_TIME_REG,
 			&data);
@@ -1852,7 +1852,7 @@ static int bma222_set_offset_target_x(struct i2c_client *client, unsigned char
 		offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client,
 			BMA222_COMP_TARGET_OFFSET_X__REG, &data);
@@ -1868,7 +1868,7 @@ static int bma222_get_offset_target_x(struct i2c_client *client, unsigned char
 		*offsettarget)
 {
 	int comres = 0 ;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_OFFSET_PARAMS_REG,
 			&data);
@@ -1882,7 +1882,7 @@ static int bma222_set_offset_target_y(struct i2c_client *client, unsigned char
 		offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client,
 			BMA222_COMP_TARGET_OFFSET_Y__REG, &data);
@@ -1898,7 +1898,7 @@ static int bma222_get_offset_target_y(struct i2c_client *client, unsigned char
 		*offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_OFFSET_PARAMS_REG,
 			&data);
@@ -1912,7 +1912,7 @@ static int bma222_set_offset_target_z(struct i2c_client *client, unsigned char
 		offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client,
 			BMA222_COMP_TARGET_OFFSET_Z__REG, &data);
@@ -1928,7 +1928,7 @@ static int bma222_get_offset_target_z(struct i2c_client *client, unsigned char
 		*offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_OFFSET_PARAMS_REG,
 			&data);
@@ -1942,7 +1942,7 @@ static int bma222_get_cal_ready(struct i2c_client *client, unsigned char
 		*calrdy)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_OFFSET_CTRL_REG, &data);
 	data = BMA222_GET_BITSLICE(data, BMA222_FAST_COMP_RDY_S);
@@ -1955,7 +1955,7 @@ static int bma222_set_cal_trigger(struct i2c_client *client, unsigned char
 		caltrigger)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_EN_FAST_COMP__REG,
 			&data);
@@ -1970,7 +1970,7 @@ static int bma222_set_selftest_st(struct i2c_client *client, unsigned char
 		selftest)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_EN_SELF_TEST__REG,
 			&data);
@@ -1984,7 +1984,7 @@ static int bma222_set_selftest_st(struct i2c_client *client, unsigned char
 static int bma222_set_selftest_stn(struct i2c_client *client, unsigned char stn)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma222_smbus_read_byte(client, BMA222_NEG_SELF_TEST__REG,
 			&data);
@@ -2149,7 +2149,7 @@ static ssize_t bma222_register_show(struct device *dev,
 static ssize_t bma222_range_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2163,7 +2163,7 @@ static ssize_t bma222_range_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2180,7 +2180,7 @@ static ssize_t bma222_range_store(struct device *dev,
 static ssize_t bma222_bandwidth_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2195,7 +2195,7 @@ static ssize_t bma222_bandwidth_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2213,7 +2213,7 @@ static ssize_t bma222_bandwidth_store(struct device *dev,
 static ssize_t bma222_mode_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2227,7 +2227,7 @@ static ssize_t bma222_mode_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2271,7 +2271,7 @@ static ssize_t bma222_delay_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2329,7 +2329,7 @@ static ssize_t bma222_enable_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 
 	error = strict_strtoul(buf, 10, &data);
@@ -2360,7 +2360,7 @@ static ssize_t bma222_enable_int_store(struct device *dev,
 static ssize_t bma222_int_mode_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2374,7 +2374,7 @@ static ssize_t bma222_int_mode_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2391,7 +2391,7 @@ static ssize_t bma222_int_mode_store(struct device *dev,
 static ssize_t bma222_slope_duration_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2406,7 +2406,7 @@ static ssize_t bma222_slope_duration_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2425,7 +2425,7 @@ static ssize_t bma222_slope_duration_store(struct device *dev,
 static ssize_t bma222_slope_threshold_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2440,7 +2440,7 @@ static ssize_t bma222_slope_threshold_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2457,7 +2457,7 @@ static ssize_t bma222_slope_threshold_store(struct device *dev,
 static ssize_t bma222_high_g_duration_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2472,7 +2472,7 @@ static ssize_t bma222_high_g_duration_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2491,7 +2491,7 @@ static ssize_t bma222_high_g_duration_store(struct device *dev,
 static ssize_t bma222_high_g_threshold_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2506,7 +2506,7 @@ static ssize_t bma222_high_g_threshold_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2524,7 +2524,7 @@ static ssize_t bma222_high_g_threshold_store(struct device *dev,
 static ssize_t bma222_low_g_duration_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2539,7 +2539,7 @@ static ssize_t bma222_low_g_duration_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2558,7 +2558,7 @@ static ssize_t bma222_low_g_duration_store(struct device *dev,
 static ssize_t bma222_low_g_threshold_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2573,7 +2573,7 @@ static ssize_t bma222_low_g_threshold_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2590,7 +2590,7 @@ static ssize_t bma222_low_g_threshold_store(struct device *dev,
 static ssize_t bma222_tap_threshold_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2605,7 +2605,7 @@ static ssize_t bma222_tap_threshold_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2622,7 +2622,7 @@ static ssize_t bma222_tap_threshold_store(struct device *dev,
 static ssize_t bma222_tap_duration_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2637,7 +2637,7 @@ static ssize_t bma222_tap_duration_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2655,7 +2655,7 @@ static ssize_t bma222_tap_duration_store(struct device *dev,
 static ssize_t bma222_tap_quiet_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2670,7 +2670,7 @@ static ssize_t bma222_tap_quiet_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2689,7 +2689,7 @@ static ssize_t bma222_tap_quiet_store(struct device *dev,
 static ssize_t bma222_tap_shock_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2704,7 +2704,7 @@ static ssize_t bma222_tap_shock_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2723,7 +2723,7 @@ static ssize_t bma222_tap_shock_store(struct device *dev,
 static ssize_t bma222_tap_samp_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2738,7 +2738,7 @@ static ssize_t bma222_tap_samp_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2756,7 +2756,7 @@ static ssize_t bma222_tap_samp_store(struct device *dev,
 static ssize_t bma222_orient_mode_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2771,7 +2771,7 @@ static ssize_t bma222_orient_mode_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2790,7 +2790,7 @@ static ssize_t bma222_orient_mode_store(struct device *dev,
 static ssize_t bma222_orient_blocking_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2805,7 +2805,7 @@ static ssize_t bma222_orient_blocking_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2823,7 +2823,7 @@ static ssize_t bma222_orient_blocking_store(struct device *dev,
 static ssize_t bma222_orient_hyst_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2838,7 +2838,7 @@ static ssize_t bma222_orient_hyst_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2857,7 +2857,7 @@ static ssize_t bma222_orient_hyst_store(struct device *dev,
 static ssize_t bma222_orient_theta_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2872,7 +2872,7 @@ static ssize_t bma222_orient_theta_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2891,7 +2891,7 @@ static ssize_t bma222_orient_theta_store(struct device *dev,
 static ssize_t bma222_flat_theta_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2906,7 +2906,7 @@ static ssize_t bma222_flat_theta_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2924,7 +2924,7 @@ static ssize_t bma222_flat_theta_store(struct device *dev,
 static ssize_t bma222_flat_hold_time_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2939,7 +2939,7 @@ static ssize_t bma222_flat_hold_time_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
@@ -2961,7 +2961,7 @@ static ssize_t bma222_fast_calibration_x_show(struct device *dev,
 {
 
 
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -2976,7 +2976,7 @@ static ssize_t bma222_fast_calibration_x_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	signed char tmp;
 	unsigned char timeout = 0;
 	int error;
@@ -3016,7 +3016,7 @@ static ssize_t bma222_fast_calibration_y_show(struct device *dev,
 {
 
 
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -3031,7 +3031,7 @@ static ssize_t bma222_fast_calibration_y_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	signed char tmp;
 	unsigned char timeout = 0;
 	int error;
@@ -3071,7 +3071,7 @@ static ssize_t bma222_fast_calibration_z_show(struct device *dev,
 {
 
 
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma222_data *bma222 = i2c_get_clientdata(client);
 
@@ -3086,7 +3086,7 @@ static ssize_t bma222_fast_calibration_z_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	signed char tmp;
 	unsigned char timeout = 0;
 	int error;
@@ -3135,7 +3135,7 @@ static ssize_t bma222_selftest_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	unsigned char clear_value = 0;
 	int error;
 	short value1 = 0;
diff --git a/drivers/amlogic/input/sensor/bma250.c b/drivers/amlogic/input/sensor/bma250.c
index d01910f1b064..77d0783387be 100644
--- a/drivers/amlogic/input/sensor/bma250.c
+++ b/drivers/amlogic/input/sensor/bma250.c
@@ -769,7 +769,7 @@ static int bma250_smbus_read_byte_block(struct i2c_client *client,
 static int bma250_set_mode(struct i2c_client *client, unsigned char Mode)
 {
 	int comres = 0;
-	unsigned char data1;
+	unsigned char data1 = 0;
 
 
 	if (Mode < 3) {
@@ -812,8 +812,8 @@ static int bma250_set_int1_pad_sel(struct i2c_client *client, unsigned char
 		int1sel)
 {
 	int comres = 0;
-	unsigned char data;
-	unsigned char state;
+	unsigned char data = 0;
+	unsigned char state = 0;
 	state = 0x01;
 
 
@@ -886,8 +886,8 @@ static int bma250_set_int2_pad_sel(struct i2c_client *client, unsigned char
 		int2sel)
 {
 	int comres = 0;
-	unsigned char data;
-	unsigned char state;
+	unsigned char data = 0;
+	unsigned char state = 0;
 	state = 0x01;
 
 
@@ -960,7 +960,7 @@ static int bma250_set_Int_Enable(struct i2c_client *client, unsigned char
 		InterruptType , unsigned char value)
 {
 	int comres = 0;
-	unsigned char data1, data2;
+	unsigned char data1 = 0, data2 = 0;
 
 
 	comres = bma250_smbus_read_byte(client, BMA250_INT_ENABLE1_REG, &data1);
@@ -1064,7 +1064,7 @@ static int bma250_get_mode(struct i2c_client *client, unsigned char *Mode)
 static int bma250_set_range(struct i2c_client *client, unsigned char Range)
 {
 	int comres = 0;
-	unsigned char data1;
+	unsigned char data1 = 0;
 
 
 	if (Range < 4) {
@@ -1103,7 +1103,7 @@ static int bma250_set_range(struct i2c_client *client, unsigned char Range)
 static int bma250_get_range(struct i2c_client *client, unsigned char *Range)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma250_smbus_read_byte(client, BMA250_RANGE_SEL__REG,
@@ -1119,7 +1119,7 @@ static int bma250_get_range(struct i2c_client *client, unsigned char *Range)
 static int bma250_set_bandwidth(struct i2c_client *client, unsigned char BW)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 	int Bandwidth = 0;
 
 
@@ -1169,7 +1169,7 @@ static int bma250_set_bandwidth(struct i2c_client *client, unsigned char BW)
 static int bma250_get_bandwidth(struct i2c_client *client, unsigned char *BW)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma250_smbus_read_byte(client, BMA250_BANDWIDTH__REG,
@@ -1194,7 +1194,7 @@ static int bma250_get_interruptstatus1(struct i2c_client *client, unsigned char
 		*intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_STATUS1_REG, &data);
 	*intstatus = data;
@@ -1207,7 +1207,7 @@ static int bma250_get_HIGH_first(struct i2c_client *client, unsigned char
 						param, unsigned char *intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	switch (param) {
 	case 0:
@@ -1239,7 +1239,7 @@ static int bma250_get_HIGH_sign(struct i2c_client *client, unsigned char
 		*intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_STATUS_ORIENT_HIGH_REG,
 			&data);
@@ -1254,7 +1254,7 @@ static int bma250_get_slope_first(struct i2c_client *client, unsigned char
 	param, unsigned char *intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	switch (param) {
 	case 0:
@@ -1286,7 +1286,7 @@ static int bma250_get_slope_sign(struct i2c_client *client, unsigned char
 		*intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_STATUS_TAP_SLOPE_REG,
 			&data);
@@ -1300,7 +1300,7 @@ static int bma250_get_orient_status(struct i2c_client *client, unsigned char
 		*intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_STATUS_ORIENT_HIGH_REG,
 			&data);
@@ -1314,7 +1314,7 @@ static int bma250_get_orient_flat_status(struct i2c_client *client, unsigned
 		char *intstatus)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_STATUS_ORIENT_HIGH_REG,
 			&data);
@@ -1327,7 +1327,7 @@ static int bma250_get_orient_flat_status(struct i2c_client *client, unsigned
 static int bma250_set_Int_Mode(struct i2c_client *client, unsigned char Mode)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma250_smbus_read_byte(client,
@@ -1343,7 +1343,7 @@ static int bma250_set_Int_Mode(struct i2c_client *client, unsigned char Mode)
 static int bma250_get_Int_Mode(struct i2c_client *client, unsigned char *Mode)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma250_smbus_read_byte(client,
@@ -1358,7 +1358,7 @@ static int bma250_set_slope_duration(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma250_smbus_read_byte(client,
@@ -1375,7 +1375,7 @@ static int bma250_get_slope_duration(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma250_smbus_read_byte(client,
@@ -1391,7 +1391,7 @@ static int bma250_set_slope_threshold(struct i2c_client *client,
 		unsigned char threshold)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma250_smbus_read_byte(client,
@@ -1408,7 +1408,7 @@ static int bma250_get_slope_threshold(struct i2c_client *client,
 		unsigned char *status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 
 	comres = bma250_smbus_read_byte(client,
@@ -1423,7 +1423,7 @@ static int bma250_set_low_g_duration(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_LOWG_DUR__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_LOWG_DUR, duration);
@@ -1436,7 +1436,7 @@ static int bma250_get_low_g_duration(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_LOW_DURN_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_LOWG_DUR);
@@ -1449,7 +1449,7 @@ static int bma250_set_low_g_threshold(struct i2c_client *client, unsigned char
 		threshold)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_LOWG_THRES__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_LOWG_THRES, threshold);
@@ -1462,7 +1462,7 @@ static int bma250_get_low_g_threshold(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_LOW_THRES_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_LOWG_THRES);
@@ -1475,7 +1475,7 @@ static int bma250_set_high_g_duration(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_HIGHG_DUR__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_HIGHG_DUR, duration);
@@ -1488,7 +1488,7 @@ static int bma250_get_high_g_duration(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_HIGH_DURN_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_HIGHG_DUR);
@@ -1501,7 +1501,7 @@ static int bma250_set_high_g_threshold(struct i2c_client *client, unsigned char
 		threshold)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_HIGHG_THRES__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_HIGHG_THRES, threshold);
@@ -1515,7 +1515,7 @@ static int bma250_get_high_g_threshold(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_HIGH_THRES_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_HIGHG_THRES);
@@ -1529,7 +1529,7 @@ static int bma250_set_tap_duration(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_DUR__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_TAP_DUR, duration);
@@ -1542,7 +1542,7 @@ static int bma250_get_tap_duration(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_PARAM_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_TAP_DUR);
@@ -1554,7 +1554,7 @@ static int bma250_get_tap_duration(struct i2c_client *client, unsigned char
 static int bma250_set_tap_shock(struct i2c_client *client, unsigned char setval)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_SHOCK_DURN__REG,
 			&data);
@@ -1569,7 +1569,7 @@ static int bma250_get_tap_shock(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_PARAM_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_TAP_SHOCK_DURN);
@@ -1582,7 +1582,7 @@ static int bma250_set_tap_quiet(struct i2c_client *client, unsigned char
 		duration)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_QUIET_DURN__REG,
 			&data);
@@ -1597,7 +1597,7 @@ static int bma250_get_tap_quiet(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_PARAM_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_TAP_QUIET_DURN);
@@ -1610,7 +1610,7 @@ static int bma250_set_tap_threshold(struct i2c_client *client, unsigned char
 		threshold)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_THRES__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_TAP_THRES, threshold);
@@ -1623,7 +1623,7 @@ static int bma250_get_tap_threshold(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_THRES_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_TAP_THRES);
@@ -1635,7 +1635,7 @@ static int bma250_get_tap_threshold(struct i2c_client *client, unsigned char
 static int bma250_set_tap_samp(struct i2c_client *client, unsigned char samp)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_SAMPLES__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_TAP_SAMPLES, samp);
@@ -1648,7 +1648,7 @@ static int bma250_set_tap_samp(struct i2c_client *client, unsigned char samp)
 static int bma250_get_tap_samp(struct i2c_client *client, unsigned char *status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_TAP_THRES_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_TAP_SAMPLES);
@@ -1660,7 +1660,7 @@ static int bma250_get_tap_samp(struct i2c_client *client, unsigned char *status)
 static int bma250_set_orient_mode(struct i2c_client *client, unsigned char mode)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_ORIENT_MODE__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_ORIENT_MODE, mode);
@@ -1674,7 +1674,7 @@ static int bma250_get_orient_mode(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_ORIENT_PARAM_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_ORIENT_MODE);
@@ -1687,7 +1687,7 @@ static int bma250_set_orient_blocking(struct i2c_client *client, unsigned char
 		samp)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_ORIENT_BLOCK__REG,
 			&data);
@@ -1702,7 +1702,7 @@ static int bma250_get_orient_blocking(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_ORIENT_PARAM_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_ORIENT_BLOCK);
@@ -1715,7 +1715,7 @@ static int bma250_set_orient_hyst(struct i2c_client *client, unsigned char
 		orienthyst)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_ORIENT_HYST__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_ORIENT_HYST, orienthyst);
@@ -1729,7 +1729,7 @@ static int bma250_get_orient_hyst(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_ORIENT_PARAM_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_ORIENT_HYST);
@@ -1741,7 +1741,7 @@ static int bma250_set_theta_blocking(struct i2c_client *client, unsigned char
 		thetablk)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_THETA_BLOCK__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_THETA_BLOCK, thetablk);
@@ -1755,7 +1755,7 @@ static int bma250_get_theta_blocking(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_THETA_BLOCK_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_THETA_BLOCK);
@@ -1768,7 +1768,7 @@ static int bma250_set_theta_flat(struct i2c_client *client, unsigned char
 		thetaflat)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_THETA_FLAT__REG, &data);
 	data = BMA250_SET_BITSLICE(data, BMA250_THETA_FLAT, thetaflat);
@@ -1781,7 +1781,7 @@ static int bma250_get_theta_flat(struct i2c_client *client, unsigned char
 		*status)
 {
 	int comres = 0 ;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_THETA_FLAT_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_THETA_FLAT);
@@ -1794,7 +1794,7 @@ static int bma250_set_flat_hold_time(struct i2c_client *client, unsigned char
 		holdtime)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_FLAT_HOLD_TIME__REG,
 			&data);
@@ -1809,7 +1809,7 @@ static int bma250_get_flat_hold_time(struct i2c_client *client, unsigned char
 		*holdtime)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_FLAT_HOLD_TIME_REG,
 			&data);
@@ -1833,7 +1833,7 @@ static int bma250_set_offset_target_x(struct i2c_client *client, unsigned char
 		offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client,
 			BMA250_COMP_TARGET_OFFSET_X__REG, &data);
@@ -1849,7 +1849,7 @@ static int bma250_get_offset_target_x(struct i2c_client *client, unsigned char
 		*offsettarget)
 {
 	int comres = 0 ;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_OFFSET_PARAMS_REG,
 			&data);
@@ -1863,7 +1863,7 @@ static int bma250_set_offset_target_y(struct i2c_client *client, unsigned char
 		offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client,
 			BMA250_COMP_TARGET_OFFSET_Y__REG, &data);
@@ -1879,7 +1879,7 @@ static int bma250_get_offset_target_y(struct i2c_client *client, unsigned char
 		*offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_OFFSET_PARAMS_REG,
 			&data);
@@ -1893,7 +1893,7 @@ static int bma250_set_offset_target_z(struct i2c_client *client, unsigned char
 		offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client,
 			BMA250_COMP_TARGET_OFFSET_Z__REG, &data);
@@ -1909,7 +1909,7 @@ static int bma250_get_offset_target_z(struct i2c_client *client, unsigned char
 		*offsettarget)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_OFFSET_PARAMS_REG,
 			&data);
@@ -1923,7 +1923,7 @@ static int bma250_get_cal_ready(struct i2c_client *client, unsigned char
 		*calrdy)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_OFFSET_CTRL_REG, &data);
 	data = BMA250_GET_BITSLICE(data, BMA250_FAST_COMP_RDY_S);
@@ -1936,7 +1936,7 @@ static int bma250_set_cal_trigger(struct i2c_client *client, unsigned char
 		caltrigger)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_EN_FAST_COMP__REG,
 			&data);
@@ -1951,7 +1951,7 @@ static int bma250_set_selftest_st(struct i2c_client *client, unsigned char
 		selftest)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_EN_SELF_TEST__REG,
 			&data);
@@ -1965,7 +1965,7 @@ static int bma250_set_selftest_st(struct i2c_client *client, unsigned char
 static int bma250_set_selftest_stn(struct i2c_client *client, unsigned char stn)
 {
 	int comres = 0;
-	unsigned char data;
+	unsigned char data = 0;
 
 	comres = bma250_smbus_read_byte(client, BMA250_NEG_SELF_TEST__REG,
 			&data);
@@ -1978,7 +1978,7 @@ static int bma250_set_selftest_stn(struct i2c_client *client, unsigned char stn)
 static int bma250_read_accel_x(struct i2c_client *client, short *a_x)
 {
 	int comres;
-	unsigned char data[2];
+	unsigned char data[2] = {0};
 
 	comres = bma250_smbus_read_byte_block(client, BMA250_ACC_X_LSB__REG,
 			data, 2);
@@ -1995,7 +1995,7 @@ static int bma250_read_accel_x(struct i2c_client *client, short *a_x)
 static int bma250_read_accel_y(struct i2c_client *client, short *a_y)
 {
 	int comres;
-	unsigned char data[2];
+	unsigned char data[2] = {0};
 
 	comres = bma250_smbus_read_byte_block(client, BMA250_ACC_Y_LSB__REG,
 			data, 2);
@@ -2013,7 +2013,7 @@ static int bma250_read_accel_y(struct i2c_client *client, short *a_y)
 static int bma250_read_accel_z(struct i2c_client *client, short *a_z)
 {
 	int comres;
-	unsigned char data[2];
+	unsigned char data[2] = {0};
 
 	comres = bma250_smbus_read_byte_block(client, BMA250_ACC_Z_LSB__REG,
 			data, 2);
@@ -2033,7 +2033,7 @@ static int bma250_read_accel_xyz(struct i2c_client *client,
 		struct bma250acc *acc)
 {
 	int comres;
-	unsigned char data[6];
+	unsigned char data[6] = {0};
 
 	comres = bma250_smbus_read_byte_block(client,
 			BMA250_ACC_X_LSB__REG, data, 6);
@@ -2121,7 +2121,7 @@ static ssize_t bma250_register_show(struct device *dev,
 static ssize_t bma250_range_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2135,8 +2135,8 @@ static ssize_t bma250_range_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
-	int error;
+	unsigned long data = 0;
+	int error = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2152,7 +2152,7 @@ static ssize_t bma250_range_store(struct device *dev,
 static ssize_t bma250_bandwidth_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2167,8 +2167,8 @@ static ssize_t bma250_bandwidth_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
-	int error;
+	unsigned long data = 0;
+	int error = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2185,7 +2185,7 @@ static ssize_t bma250_bandwidth_store(struct device *dev,
 static ssize_t bma250_mode_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2199,8 +2199,8 @@ static ssize_t bma250_mode_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
-	int error;
+	unsigned long data = 0;
+	int error = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2243,8 +2243,8 @@ static ssize_t bma250_delay_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
-	int error;
+	unsigned long data = 0;
+	int error = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2301,8 +2301,8 @@ static ssize_t bma250_enable_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
-	int error;
+	unsigned long data = 0;
+	int error = 0;
 
 	error = strict_strtoul(buf, 10, &data);
 	if (error)
@@ -2317,7 +2317,7 @@ static ssize_t bma250_enable_int_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	int type, value;
+	int type = 0, value = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2332,7 +2332,7 @@ static ssize_t bma250_enable_int_store(struct device *dev,
 static ssize_t bma250_int_mode_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2346,8 +2346,8 @@ static ssize_t bma250_int_mode_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
-	int error;
+	unsigned long data = 0;
+	int error = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2363,7 +2363,7 @@ static ssize_t bma250_int_mode_store(struct device *dev,
 static ssize_t bma250_slope_duration_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2378,8 +2378,8 @@ static ssize_t bma250_slope_duration_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
-	int error;
+	unsigned long data = 0;
+	int error = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2397,7 +2397,7 @@ static ssize_t bma250_slope_duration_store(struct device *dev,
 static ssize_t bma250_slope_threshold_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2412,8 +2412,8 @@ static ssize_t bma250_slope_threshold_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
-	int error;
+	unsigned long data = 0;
+	int error = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2429,7 +2429,7 @@ static ssize_t bma250_slope_threshold_store(struct device *dev,
 static ssize_t bma250_high_g_duration_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2444,7 +2444,7 @@ static ssize_t bma250_high_g_duration_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2463,7 +2463,7 @@ static ssize_t bma250_high_g_duration_store(struct device *dev,
 static ssize_t bma250_high_g_threshold_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2478,7 +2478,7 @@ static ssize_t bma250_high_g_threshold_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2496,7 +2496,7 @@ static ssize_t bma250_high_g_threshold_store(struct device *dev,
 static ssize_t bma250_low_g_duration_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2511,7 +2511,7 @@ static ssize_t bma250_low_g_duration_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2530,7 +2530,7 @@ static ssize_t bma250_low_g_duration_store(struct device *dev,
 static ssize_t bma250_low_g_threshold_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2545,7 +2545,7 @@ static ssize_t bma250_low_g_threshold_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2562,7 +2562,7 @@ static ssize_t bma250_low_g_threshold_store(struct device *dev,
 static ssize_t bma250_tap_threshold_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2577,7 +2577,7 @@ static ssize_t bma250_tap_threshold_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2594,7 +2594,7 @@ static ssize_t bma250_tap_threshold_store(struct device *dev,
 static ssize_t bma250_tap_duration_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2609,7 +2609,7 @@ static ssize_t bma250_tap_duration_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2627,7 +2627,7 @@ static ssize_t bma250_tap_duration_store(struct device *dev,
 static ssize_t bma250_tap_quiet_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2642,7 +2642,7 @@ static ssize_t bma250_tap_quiet_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2661,7 +2661,7 @@ static ssize_t bma250_tap_quiet_store(struct device *dev,
 static ssize_t bma250_tap_shock_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2676,7 +2676,7 @@ static ssize_t bma250_tap_shock_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2695,7 +2695,7 @@ static ssize_t bma250_tap_shock_store(struct device *dev,
 static ssize_t bma250_tap_samp_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2710,7 +2710,7 @@ static ssize_t bma250_tap_samp_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2728,7 +2728,7 @@ static ssize_t bma250_tap_samp_store(struct device *dev,
 static ssize_t bma250_orient_mode_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2743,7 +2743,7 @@ static ssize_t bma250_orient_mode_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2762,7 +2762,7 @@ static ssize_t bma250_orient_mode_store(struct device *dev,
 static ssize_t bma250_orient_blocking_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2777,7 +2777,7 @@ static ssize_t bma250_orient_blocking_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2795,7 +2795,7 @@ static ssize_t bma250_orient_blocking_store(struct device *dev,
 static ssize_t bma250_orient_hyst_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2810,7 +2810,7 @@ static ssize_t bma250_orient_hyst_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2829,7 +2829,7 @@ static ssize_t bma250_orient_hyst_store(struct device *dev,
 static ssize_t bma250_orient_theta_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2844,7 +2844,7 @@ static ssize_t bma250_orient_theta_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2863,7 +2863,7 @@ static ssize_t bma250_orient_theta_store(struct device *dev,
 static ssize_t bma250_flat_theta_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2878,7 +2878,7 @@ static ssize_t bma250_flat_theta_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2896,7 +2896,7 @@ static ssize_t bma250_flat_theta_store(struct device *dev,
 static ssize_t bma250_flat_hold_time_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2911,7 +2911,7 @@ static ssize_t bma250_flat_hold_time_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	int error;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
@@ -2933,7 +2933,7 @@ static ssize_t bma250_fast_calibration_x_show(struct device *dev,
 {
 
 
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -2948,7 +2948,7 @@ static ssize_t bma250_fast_calibration_x_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	signed char tmp;
 	unsigned char timeout = 0;
 	int error;
@@ -2988,7 +2988,7 @@ static ssize_t bma250_fast_calibration_y_show(struct device *dev,
 {
 
 
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -3003,7 +3003,7 @@ static ssize_t bma250_fast_calibration_y_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	signed char tmp;
 	unsigned char timeout = 0;
 	int error;
@@ -3043,7 +3043,7 @@ static ssize_t bma250_fast_calibration_z_show(struct device *dev,
 {
 
 
-	unsigned char data;
+	unsigned char data = 0;
 	struct i2c_client *client = to_i2c_client(dev);
 	struct bma250_data *bma250 = i2c_get_clientdata(client);
 
@@ -3058,7 +3058,7 @@ static ssize_t bma250_fast_calibration_z_store(struct device *dev,
 		struct device_attribute *attr,
 		const char *buf, size_t count)
 {
-	unsigned long data;
+	unsigned long data = 0;
 	signed char tmp;
 	unsigned char timeout = 0;
 	int error;
@@ -3110,7 +3110,7 @@ static ssize_t bma250_selftest_store(struct device *dev,
 		const char *buf, size_t count)
 {
 
-	unsigned long data;
+	unsigned long data = 0;
 	unsigned char clear_value = 0;
 	int error;
 	short value1 = 0;
diff --git a/drivers/amlogic/usb/dwc_otg/310/dwc_otg_pcd_intr.c b/drivers/amlogic/usb/dwc_otg/310/dwc_otg_pcd_intr.c
old mode 100755
new mode 100644
index afeaba30fd9d..b30d4ff3032b
--- a/drivers/amlogic/usb/dwc_otg/310/dwc_otg_pcd_intr.c
+++ b/drivers/amlogic/usb/dwc_otg/310/dwc_otg_pcd_intr.c
@@ -2055,7 +2055,7 @@ static int32_t ep0_complete_request(dwc_otg_pcd_ep_t * ep)
 	} else if (ep->dwc_ep.is_in) {
 		deptsiz.d32 = DWC_READ_REG32(&in_ep_regs->dieptsiz);
 		if (core_if->dma_desc_enable != 0)
-			desc_sts = dev_if->in_desc_addr->status;
+			desc_sts.d32 = dev_if->in_desc_addr->status.d32;
 #ifdef DEBUG_EP0
 		DWC_DEBUGPL(DBG_PCDV, "%d len=%d  xfersize=%d pktcnt=%d\n",
 			    ep->dwc_ep.num, ep->dwc_ep.xfer_len,
-- 
2.19.0

