From d411dff66cb1cdf45aea6795f5a46e5d3cc56374 Mon Sep 17 00:00:00 2001
From: Bo Yang <bo.yang@amlogic.com>
Date: Tue, 12 May 2015 11:20:49 +0800
Subject: [PATCH 5597/5965] PD#103115: g9bb: reorder gpio definition according
 gpio interrupts

Change-Id: I3455bcc859e8212308bfa00f92889fd68381c7a4
---
 arch/arm/mach-mesong9bb/gpio.c              | 198 +++++------
 arch/arm/mach-mesong9bb/include/mach/gpio.h | 275 +++++++--------
 arch/arm/mach-mesong9bb/pinctrl.c           | 367 ++++++++++----------
 3 files changed, 421 insertions(+), 419 deletions(-)

diff --git a/arch/arm/mach-mesong9bb/gpio.c b/arch/arm/mach-mesong9bb/gpio.c
index 211ea0d295c1..dbe4dd3cf014 100644
--- a/arch/arm/mach-mesong9bb/gpio.c
+++ b/arch/arm/mach-mesong9bb/gpio.c
@@ -258,66 +258,20 @@ static unsigned int meson_pinmux_table[][PMUX_SIZE] = {
 
 struct amlogic_gpio_desc amlogic_pins[] = {
 
-	PIN_MAP(GPIOX_0,	4,	0),
-	PIN_MAP(GPIOX_1,	4,	1),
-	PIN_MAP(GPIOX_2,	4,	2),
-	PIN_MAP(GPIOX_3,	4,	3),
-	PIN_MAP(GPIOX_4,	4,	4),
-	PIN_MAP(GPIOX_5,	4,	5),
-	PIN_MAP(GPIOX_6,	4,	6),
-	PIN_MAP(GPIOX_7,	4,	7),
-	PIN_MAP(GPIOX_8,	4,	8),
-	PIN_MAP(GPIOX_9,	4,	9),
-	PIN_MAP(GPIOX_10,	4,	10),
-	PIN_MAP(GPIOX_11,	4,	11),
-	PIN_MAP(GPIOX_12,	4,	12),
-	PIN_MAP(GPIOX_13,	4,	13),
-	PIN_MAP(GPIOX_14,	4,	14),
-	PIN_MAP(GPIOX_15,	4,	15),
-	PIN_MAP(GPIOX_16,	4,	16),
-	PIN_MAP(GPIOX_17,	4,	17),
-	PIN_MAP(GPIOX_18,	4,	18),
-	PIN_MAP(GPIOX_19,	4,	19),
-	PIN_MAP(GPIOX_20,	4,	20),
-	PIN_MAP(GPIOX_21,	4,	21),
-	PIN_MAP(GPIOX_22,	4,	22),
-	PIN_MAP(GPIOX_23,	4,	23),
-	PIN_MAP(GPIOX_24,	4,	24),
-	PIN_MAP(GPIOX_25,	4,	25),
-	PIN_MAP(GPIOX_26,	4,	26),
-	PIN_MAP(GPIOX_27,	4,	27),
-
-	PIN_MAP(BOOT_0,		2,	0),
-	PIN_MAP(BOOT_1,		2,	1),
-	PIN_MAP(BOOT_2,		2,	2),
-	PIN_MAP(BOOT_3,		2,	3),
-	PIN_MAP(BOOT_4,		2,	4),
-	PIN_MAP(BOOT_5,		2,	5),
-	PIN_MAP(BOOT_6,		2,	6),
-	PIN_MAP(BOOT_7,		2,	7),
-	PIN_MAP(BOOT_8,		2,	8),
-	PIN_MAP(BOOT_9,		2,	9),
-	PIN_MAP(BOOT_10,	2,	10),
-	PIN_MAP(BOOT_11,	2,	11),
-	PIN_MAP(BOOT_12,	2,	12),
-	PIN_MAP(BOOT_13,	2,	13),
-	PIN_MAP(BOOT_14,	2,	14),
-	PIN_MAP(BOOT_15,	2,	15),
-	PIN_MAP(BOOT_16,	2,	16),
-	PIN_MAP(BOOT_17,	2,	17),
-	PIN_MAP(BOOT_18,	2,	18),
-
-	PIN_MAP(GPIOH_0,	1,	16),
-	PIN_MAP(GPIOH_1,	1,	17),
-	PIN_MAP(GPIOH_2,	1,	18),
-	PIN_MAP(GPIOH_3,	1,	19),
-	PIN_MAP(GPIOH_4,	1,	20),
-	PIN_MAP(GPIOH_5,	1,	21),
-	PIN_MAP(GPIOH_6,	1,	22),
-	PIN_MAP(GPIOH_7,	1,	23),
-	PIN_MAP(GPIOH_8,	1,	24),
-	PIN_MAP(GPIOH_9,	1,	25),
-	PIN_MAP(GPIOH_10,	1,	26),
+	PIN_AOMAP(GPIOAO_0,	6,	0,	6,	16,	6,	0),
+	PIN_AOMAP(GPIOAO_1,	6,	1,	6,	17,	6,	1),
+	PIN_AOMAP(GPIOAO_2,	6,	2,	6,	18,	6,	2),
+	PIN_AOMAP(GPIOAO_3,	6,	3,	6,	19,	6,	3),
+	PIN_AOMAP(GPIOAO_4,	6,	4,	6,	20,	6,	4),
+	PIN_AOMAP(GPIOAO_5,	6,	5,	6,	21,	6,	5),
+	PIN_AOMAP(GPIOAO_6,	6,	6,	6,	22,	6,	6),
+	PIN_AOMAP(GPIOAO_7,	6,	7,	6,	23,	6,	7),
+	PIN_AOMAP(GPIOAO_8,	6,	8,	6,	24,	6,	8),
+	PIN_AOMAP(GPIOAO_9,	6,	9,	6,	25,	6,	9),
+	PIN_AOMAP(GPIOAO_10,	6,	10,	6,	26,	6,	10),
+	PIN_AOMAP(GPIOAO_11,	6,	11,	6,	27,	6,	11),
+	PIN_AOMAP(GPIOAO_12,	6,	12,	6,	28,	6,	12),
+	PIN_AOMAP(GPIOAO_13,	6,	13,	6,	29,	6,	13),
 
 	PIN_MAP(GPIOZ_0,	3,	0),
 	PIN_MAP(GPIOZ_1,	3,	1),
@@ -341,6 +295,48 @@ struct amlogic_gpio_desc amlogic_pins[] = {
 	PIN_MAP(GPIOZ_19,	3,	19),
 	PIN_MAP(GPIOZ_20,	3,	20),
 
+	PIN_MAP(GPIOH_0,	1,	16),
+	PIN_MAP(GPIOH_1,	1,	17),
+	PIN_MAP(GPIOH_2,	1,	18),
+	PIN_MAP(GPIOH_3,	1,	19),
+	PIN_MAP(GPIOH_4,	1,	20),
+	PIN_MAP(GPIOH_5,	1,	21),
+	PIN_MAP(GPIOH_6,	1,	22),
+	PIN_MAP(GPIOH_7,	1,	23),
+	PIN_MAP(GPIOH_8,	1,	24),
+	PIN_MAP(GPIOH_9,	1,	25),
+	PIN_MAP(GPIOH_10,	1,	26),
+
+	PIN_MAP(BOOT_0,		2,	0),
+	PIN_MAP(BOOT_1,		2,	1),
+	PIN_MAP(BOOT_2,		2,	2),
+	PIN_MAP(BOOT_3,		2,	3),
+	PIN_MAP(BOOT_4,		2,	4),
+	PIN_MAP(BOOT_5,		2,	5),
+	PIN_MAP(BOOT_6,		2,	6),
+	PIN_MAP(BOOT_7,		2,	7),
+	PIN_MAP(BOOT_8,		2,	8),
+	PIN_MAP(BOOT_9,		2,	9),
+	PIN_MAP(BOOT_10,	2,	10),
+	PIN_MAP(BOOT_11,	2,	11),
+	PIN_MAP(BOOT_12,	2,	12),
+	PIN_MAP(BOOT_13,	2,	13),
+	PIN_MAP(BOOT_14,	2,	14),
+	PIN_MAP(BOOT_15,	2,	15),
+	PIN_MAP(BOOT_16,	2,	16),
+	PIN_MAP(BOOT_17,	2,	17),
+	PIN_MAP(BOOT_18,	2,	18),
+
+	PIN_MAP(CARD_0,		2,	20),
+	PIN_MAP(CARD_1,		2,	21),
+	PIN_MAP(CARD_2,		2,	22),
+	PIN_MAP(CARD_3,		2,	23),
+	PIN_MAP(CARD_4,		2,	24),
+	PIN_MAP(CARD_5,		2,	25),
+	PIN_MAP(CARD_6,		2,	26),
+	PIN_MAP(CARD_7,		2,	27),
+	PIN_MAP(CARD_8,		2,	28),
+
 	PIN_MAP(GPIOW_0,	0,	0),
 	PIN_MAP(GPIOW_1,	0,	1),
 	PIN_MAP(GPIOW_2,	0,	2),
@@ -363,31 +359,6 @@ struct amlogic_gpio_desc amlogic_pins[] = {
 	PIN_MAP(GPIOW_19,	0,	19),
 	PIN_MAP(GPIOW_20,	0,	20),
 
-	PIN_AOMAP(GPIOAO_0,	6,	0,	6,	16,	6,	0),
-	PIN_AOMAP(GPIOAO_1,	6,	1,	6,	17,	6,	1),
-	PIN_AOMAP(GPIOAO_2,	6,	2,	6,	18,	6,	2),
-	PIN_AOMAP(GPIOAO_3,	6,	3,	6,	19,	6,	3),
-	PIN_AOMAP(GPIOAO_4,	6,	4,	6,	20,	6,	4),
-	PIN_AOMAP(GPIOAO_5,	6,	5,	6,	21,	6,	5),
-	PIN_AOMAP(GPIOAO_6,	6,	6,	6,	22,	6,	6),
-	PIN_AOMAP(GPIOAO_7,	6,	7,	6,	23,	6,	7),
-	PIN_AOMAP(GPIOAO_8,	6,	8,	6,	24,	6,	8),
-	PIN_AOMAP(GPIOAO_9,	6,	9,	6,	25,	6,	9),
-	PIN_AOMAP(GPIOAO_10,	6,	10,	6,	26,	6,	10),
-	PIN_AOMAP(GPIOAO_11,	6,	11,	6,	27,	6,	11),
-	PIN_AOMAP(GPIOAO_12,	6,	12,	6,	28,	6,	12),
-	PIN_AOMAP(GPIOAO_13,	6,	13,	6,	29,	6,	13),
-
-	PIN_MAP(CARD_0,		2,	20),
-	PIN_MAP(CARD_1,		2,	21),
-	PIN_MAP(CARD_2,		2,	22),
-	PIN_MAP(CARD_3,		2,	23),
-	PIN_MAP(CARD_4,		2,	24),
-	PIN_MAP(CARD_5,		2,	25),
-	PIN_MAP(CARD_6,		2,	26),
-	PIN_MAP(CARD_7,		2,	27),
-	PIN_MAP(CARD_8,		2,	28),
-
 	PIN_MAP(GPIOY_0,	1,	0),
 	PIN_MAP(GPIOY_1,	1,	1),
 	PIN_MAP(GPIOY_2,	1,	2),
@@ -401,7 +372,36 @@ struct amlogic_gpio_desc amlogic_pins[] = {
 	PIN_MAP(GPIOY_10,	1,	10),
 	PIN_MAP(GPIOY_11,	1,	11),
 	PIN_MAP(GPIOY_12,	1,	12),
-	PIN_MAP(GPIOY_13,	1,	13)
+	PIN_MAP(GPIOY_13,	1,	13),
+
+	PIN_MAP(GPIOX_0,	4,	0),
+	PIN_MAP(GPIOX_1,	4,	1),
+	PIN_MAP(GPIOX_2,	4,	2),
+	PIN_MAP(GPIOX_3,	4,	3),
+	PIN_MAP(GPIOX_4,	4,	4),
+	PIN_MAP(GPIOX_5,	4,	5),
+	PIN_MAP(GPIOX_6,	4,	6),
+	PIN_MAP(GPIOX_7,	4,	7),
+	PIN_MAP(GPIOX_8,	4,	8),
+	PIN_MAP(GPIOX_9,	4,	9),
+	PIN_MAP(GPIOX_10,	4,	10),
+	PIN_MAP(GPIOX_11,	4,	11),
+	PIN_MAP(GPIOX_12,	4,	12),
+	PIN_MAP(GPIOX_13,	4,	13),
+	PIN_MAP(GPIOX_14,	4,	14),
+	PIN_MAP(GPIOX_15,	4,	15),
+	PIN_MAP(GPIOX_16,	4,	16),
+	PIN_MAP(GPIOX_17,	4,	17),
+	PIN_MAP(GPIOX_18,	4,	18),
+	PIN_MAP(GPIOX_19,	4,	19),
+	PIN_MAP(GPIOX_20,	4,	20),
+	PIN_MAP(GPIOX_21,	4,	21),
+	PIN_MAP(GPIOX_22,	4,	22),
+	PIN_MAP(GPIOX_23,	4,	23),
+	PIN_MAP(GPIOX_24,	4,	24),
+	PIN_MAP(GPIOX_25,	4,	25),
+	PIN_MAP(GPIOX_26,	4,	26),
+	PIN_MAP(GPIOX_27,	4,	27),
 };
 
 /* amlogic request gpio interface*/
@@ -444,7 +444,7 @@ int gpio_amlogic_to_irq(struct gpio_chip *chip,unsigned offset)
 				0x10001, /*GPIO_IRQ_FALLING*/
 				};
 	 /*set trigger type*/
-	if (offset>GPIOX_21)
+	if (offset > GPIO_MAX)
 		return -1;
 	aml_clrset_reg32_bits(P_GPIO_INTR_EDGE_POL,0x10001<<irq_bank,type[irq_type]<<irq_bank);
 	printk(" reg:%x,clearmask=%x,setmask=%x\n",(P_GPIO_INTR_EDGE_POL&0xffff)>>2,0x10001<<irq_bank,(aml_read_reg32(P_GPIO_INTR_EDGE_POL)>>irq_bank)&0x10001);
@@ -541,22 +541,22 @@ int gpio_amlogic_name_to_num(const char *name)
 			num=num*10+*p-'0';
 	}
 	p = start;
-	if (!strcmp(p, "GPIOX"))
+	if (!strcmp(p, "GPIOAO"))
 		num = num + 0;
-	else if (!strcmp(p, "BOOT"))
-		num = num + 28;
-	else if (!strcmp(p, "GPIOH"))
-		num = num + 47;
 	else if (!strcmp(p, "GPIOZ"))
-		num = num + 58;
-	else if (!strcmp(p, "GPIOW"))
-		num = num + 79;
-	else if (!strcmp(p, "GPIOAO"))
-		num = num + 100;
+		num = num + 14;
+	else if (!strcmp(p, "GPIOH"))
+		num = num + 35;
+	else if (!strcmp(p, "BOOT"))
+		num = num + 46;
 	else if (!strcmp(p, "CARD"))
-		num = num + 114;
+		num = num + 65;
+	else if (!strcmp(p, "GPIOW"))
+		num = num + 74;
 	else if (!strcmp(p, "GPIOY"))
-		num = num + 123;
+		num = num + 95;
+	else if (!strcmp(p, "GPIOX"))
+		num = num + 109;
 	else
 		num= -1;
 	kzfree(start);
diff --git a/arch/arm/mach-mesong9bb/include/mach/gpio.h b/arch/arm/mach-mesong9bb/include/mach/gpio.h
index 5df3188f0074..ffa0f29a3d82 100644
--- a/arch/arm/mach-mesong9bb/include/mach/gpio.h
+++ b/arch/arm/mach-mesong9bb/include/mach/gpio.h
@@ -17,150 +17,151 @@
 #define __MACH_MESONG9BB_GPIO_H
 
 typedef enum {
-	GPIOX_0		=	0,
-	GPIOX_1		=	1,
-	GPIOX_2		=	2,
-	GPIOX_3		=	3,
-	GPIOX_4		=	4,
-	GPIOX_5		=	5,
-	GPIOX_6		=	6,
-	GPIOX_7		=	7,
-	GPIOX_8		=	8,
-	GPIOX_9		=	9,
-	GPIOX_10	=	10,
-	GPIOX_11	=	11,
-	GPIOX_12	=	12,
-	GPIOX_13	=	13,
-	GPIOX_14	=	14,
-	GPIOX_15	=	15,
-	GPIOX_16	=	16,
-	GPIOX_17	=	17,
-	GPIOX_18	=	18,
-	GPIOX_19	=	19,
-	GPIOX_20	=	20,
-	GPIOX_21	=	21,
-	GPIOX_22	=	22,
-	GPIOX_23	=	23,
-	GPIOX_24	=	24,
-	GPIOX_25	=	25,
-	GPIOX_26	=	26,
-	GPIOX_27	=	27,
+	GPIOAO_0	=	0,
+	GPIOAO_1	=	1,
+	GPIOAO_2	=	2,
+	GPIOAO_3	=	3,
+	GPIOAO_4	=	4,
+	GPIOAO_5	=	5,
+	GPIOAO_6	=	6,
+	GPIOAO_7	=	7,
+	GPIOAO_8	=	8,
+	GPIOAO_9	=	9,
+	GPIOAO_10	=	10,
+	GPIOAO_11	=	11,
+	GPIOAO_12	=	12,
+	GPIOAO_13	=	13,
 
-	BOOT_0		=	28,
-	BOOT_1		=	29,
-	BOOT_2		=	30,
-	BOOT_3		=	31,
-	BOOT_4		=	32,
-	BOOT_5		=	33,
-	BOOT_6		=	34,
-	BOOT_7		=	35,
-	BOOT_8		=	36,
-	BOOT_9		=	37,
-	BOOT_10		=	38,
-	BOOT_11		=	39,
-	BOOT_12		=	40,
-	BOOT_13		=	41,
-	BOOT_14		=	42,
-	BOOT_15		=	43,
-	BOOT_16		=	44,
-	BOOT_17		=	45,
-	BOOT_18		=	46,
+	GPIOZ_0		=	14,
+	GPIOZ_1		=	15,
+	GPIOZ_2		=	16,
+	GPIOZ_3		=	17,
+	GPIOZ_4		=	18,
+	GPIOZ_5		=	19,
+	GPIOZ_6		=	20,
+	GPIOZ_7		=	21,
+	GPIOZ_8		=	22,
+	GPIOZ_9		=	23,
+	GPIOZ_10	=	24,
+	GPIOZ_11	=	25,
+	GPIOZ_12	=	26,
+	GPIOZ_13	=	27,
+	GPIOZ_14	=	28,
+	GPIOZ_15	=	29,
+	GPIOZ_16	=	30,
+	GPIOZ_17	=	31,
+	GPIOZ_18	=	32,
+	GPIOZ_19	=	33,
+	GPIOZ_20	=	34,
 
-	GPIOH_0		=	47,
-	GPIOH_1		=	48,
-	GPIOH_2		=	49,
-	GPIOH_3		=	50,
-	GPIOH_4		=	51,
-	GPIOH_5		=	52,
-	GPIOH_6		=	53,
-	GPIOH_7		=	54,
-	GPIOH_8		=	55,
-	GPIOH_9		=	56,
-	GPIOH_10	=	57,
+	GPIOH_0		=	35,
+	GPIOH_1		=	36,
+	GPIOH_2		=	37,
+	GPIOH_3		=	38,
+	GPIOH_4		=	39,
+	GPIOH_5		=	40,
+	GPIOH_6		=	41,
+	GPIOH_7		=	42,
+	GPIOH_8		=	43,
+	GPIOH_9		=	44,
+	GPIOH_10	=	45,
 
-	GPIOZ_0		=	58,
-	GPIOZ_1		=	59,
-	GPIOZ_2		=	60,
-	GPIOZ_3		=	61,
-	GPIOZ_4		=	62,
-	GPIOZ_5		=	63,
-	GPIOZ_6		=	64,
-	GPIOZ_7		=	65,
-	GPIOZ_8		=	66,
-	GPIOZ_9		=	67,
-	GPIOZ_10	=	68,
-	GPIOZ_11	=	69,
-	GPIOZ_12	=	70,
-	GPIOZ_13	=	71,
-	GPIOZ_14	=	72,
-	GPIOZ_15	=	73,
-	GPIOZ_16	=	74,
-	GPIOZ_17	=	75,
-	GPIOZ_18	=	76,
-	GPIOZ_19	=	77,
-	GPIOZ_20	=	78,
+	BOOT_0		=	46,
+	BOOT_1		=	47,
+	BOOT_2		=	48,
+	BOOT_3		=	49,
+	BOOT_4		=	50,
+	BOOT_5		=	51,
+	BOOT_6		=	52,
+	BOOT_7		=	53,
+	BOOT_8		=	54,
+	BOOT_9		=	55,
+	BOOT_10		=	56,
+	BOOT_11		=	57,
+	BOOT_12		=	58,
+	BOOT_13		=	59,
+	BOOT_14		=	60,
+	BOOT_15		=	61,
+	BOOT_16		=	62,
+	BOOT_17		=	63,
+	BOOT_18		=	64,
 
-	GPIOW_0		=	79,
-	GPIOW_1		=	80,
-	GPIOW_2		=	81,
-	GPIOW_3		=	82,
-	GPIOW_4		=	83,
-	GPIOW_5		=	84,
-	GPIOW_6		=	85,
-	GPIOW_7		=	86,
-	GPIOW_8		=	87,
-	GPIOW_9		=	88,
-	GPIOW_10	=	89,
-	GPIOW_11	=	90,
-	GPIOW_12	=	91,
-	GPIOW_13	=	92,
-	GPIOW_14	=	93,
-	GPIOW_15	=	94,
-	GPIOW_16	=	95,
-	GPIOW_17	=	96,
-	GPIOW_18	=	97,
-	GPIOW_19	=	98,
-	GPIOW_20	=	99,
+	CARD_0		=	65,
+	CARD_1		=	66,
+	CARD_2		=	67,
+	CARD_3		=	68,
+	CARD_4		=	69,
+	CARD_5		=	70,
+	CARD_6		=	71,
+	CARD_7		=	72,
+	CARD_8		=	73,
 
-	GPIOAO_0	=	100,
-	GPIOAO_1	=	101,
-	GPIOAO_2	=	102,
-	GPIOAO_3	=	103,
-	GPIOAO_4	=	104,
-	GPIOAO_5	=	105,
-	GPIOAO_6	=	106,
-	GPIOAO_7	=	107,
-	GPIOAO_8	=	108,
-	GPIOAO_9	=	109,
-	GPIOAO_10	=	110,
-	GPIOAO_11	=	111,
-	GPIOAO_12	=	112,
-	GPIOAO_13	=	113,
+	GPIOW_0		=	74,
+	GPIOW_1		=	75,
+	GPIOW_2		=	76,
+	GPIOW_3		=	77,
+	GPIOW_4		=	78,
+	GPIOW_5		=	79,
+	GPIOW_6		=	80,
+	GPIOW_7		=	81,
+	GPIOW_8		=	82,
+	GPIOW_9		=	83,
+	GPIOW_10	=	84,
+	GPIOW_11	=	85,
+	GPIOW_12	=	86,
+	GPIOW_13	=	87,
+	GPIOW_14	=	88,
+	GPIOW_15	=	89,
+	GPIOW_16	=	90,
+	GPIOW_17	=	91,
+	GPIOW_18	=	92,
+	GPIOW_19	=	93,
+	GPIOW_20	=	94,
 
-	CARD_0		=	114,
-	CARD_1		=	115,
-	CARD_2		=	116,
-	CARD_3		=	117,
-	CARD_4		=	118,
-	CARD_5		=	119,
-	CARD_6		=	120,
-	CARD_7		=	121,
-	CARD_8		=	122,
+	GPIOY_0		=	95,
+	GPIOY_1		=	96,
+	GPIOY_2		=	97,
+	GPIOY_3		=	98,
+	GPIOY_4		=	99,
+	GPIOY_5		=	100,
+	GPIOY_6		=	101,
+	GPIOY_7		=	102,
+	GPIOY_8		=	103,
+	GPIOY_9		=	104,
+	GPIOY_10	=	105,
+	GPIOY_11	=	106,
+	GPIOY_12	=	107,
+	GPIOY_13	=	108,
+
+	GPIOX_0		=	109,
+	GPIOX_1		=	110,
+	GPIOX_2		=	111,
+	GPIOX_3		=	112,
+	GPIOX_4		=	113,
+	GPIOX_5		=	114,
+	GPIOX_6		=	115,
+	GPIOX_7		=	116,
+	GPIOX_8		=	117,
+	GPIOX_9		=	118,
+	GPIOX_10	=	119,
+	GPIOX_11	=	120,
+	GPIOX_12	=	121,
+	GPIOX_13	=	122,
+	GPIOX_14	=	123,
+	GPIOX_15	=	124,
+	GPIOX_16	=	125,
+	GPIOX_17	=	126,
+	GPIOX_18	=	127,
+	GPIOX_19	=	128,
+	GPIOX_20	=	129,
+	GPIOX_21	=	130,
+	GPIOX_22	=	131,
+	GPIOX_23	=	132,
+	GPIOX_24	=	133,
+	GPIOX_25	=	134,
+	GPIOX_26	=	135,
+	GPIOX_27	=	136,
 
-	GPIOY_0		=	123,
-	GPIOY_1		=	124,
-	GPIOY_2		=	125,
-	GPIOY_3		=	126,
-	GPIOY_4		=	127,
-	GPIOY_5		=	128,
-	GPIOY_6		=	129,
-	GPIOY_7		=	130,
-	GPIOY_8		=	131,
-	GPIOY_9		=	132,
-	GPIOY_10	=	133,
-	GPIOY_11	=	134,
-	GPIOY_12	=	135,
-	GPIOY_13	=	136,
 	GPIO_MAX	=	137,
 } gpio_t;
 
diff --git a/arch/arm/mach-mesong9bb/pinctrl.c b/arch/arm/mach-mesong9bb/pinctrl.c
index 9f6514cd65a3..2764d376947f 100644
--- a/arch/arm/mach-mesong9bb/pinctrl.c
+++ b/arch/arm/mach-mesong9bb/pinctrl.c
@@ -69,66 +69,20 @@ unsigned p_pull_upen_addr[]={
 /* Pad names for the pinmux subsystem */
 const static struct pinctrl_pin_desc meson_pads[] = {
 
-	PINCTRL_PIN(GPIOX_0,	"GPIOX_0"),
-	PINCTRL_PIN(GPIOX_1,	"GPIOX_1"),
-	PINCTRL_PIN(GPIOX_2,	"GPIOX_2"),
-	PINCTRL_PIN(GPIOX_3,	"GPIOX_3"),
-	PINCTRL_PIN(GPIOX_4,	"GPIOX_4"),
-	PINCTRL_PIN(GPIOX_5,	"GPIOX_5"),
-	PINCTRL_PIN(GPIOX_6,	"GPIOX_6"),
-	PINCTRL_PIN(GPIOX_7,	"GPIOX_7"),
-	PINCTRL_PIN(GPIOX_8,	"GPIOX_8"),
-	PINCTRL_PIN(GPIOX_9,	"GPIOX_9"),
-	PINCTRL_PIN(GPIOX_10,	"GPIOX_10"),
-	PINCTRL_PIN(GPIOX_11,	"GPIOX_11"),
-	PINCTRL_PIN(GPIOX_12,	"GPIOX_12"),
-	PINCTRL_PIN(GPIOX_13,	"GPIOX_13"),
-	PINCTRL_PIN(GPIOX_14,	"GPIOX_14"),
-	PINCTRL_PIN(GPIOX_15,	"GPIOX_15"),
-	PINCTRL_PIN(GPIOX_16,	"GPIOX_16"),
-	PINCTRL_PIN(GPIOX_17,	"GPIOX_17"),
-	PINCTRL_PIN(GPIOX_18,	"GPIOX_18"),
-	PINCTRL_PIN(GPIOX_19,	"GPIOX_19"),
-	PINCTRL_PIN(GPIOX_20,	"GPIOX_20"),
-	PINCTRL_PIN(GPIOX_21,	"GPIOX_21"),
-	PINCTRL_PIN(GPIOX_22,	"GPIOX_22"),
-	PINCTRL_PIN(GPIOX_23,	"GPIOX_23"),
-	PINCTRL_PIN(GPIOX_24,	"GPIOX_24"),
-	PINCTRL_PIN(GPIOX_25,	"GPIOX_25"),
-	PINCTRL_PIN(GPIOX_26,	"GPIOX_26"),
-	PINCTRL_PIN(GPIOX_27,	"GPIOX_27"),
-
-	PINCTRL_PIN(BOOT_0,	"BOOT_0"),
-	PINCTRL_PIN(BOOT_1,	"BOOT_1"),
-	PINCTRL_PIN(BOOT_2,	"BOOT_2"),
-	PINCTRL_PIN(BOOT_3,	"BOOT_3"),
-	PINCTRL_PIN(BOOT_4,	"BOOT_4"),
-	PINCTRL_PIN(BOOT_5,	"BOOT_5"),
-	PINCTRL_PIN(BOOT_6,	"BOOT_6"),
-	PINCTRL_PIN(BOOT_7,	"BOOT_7"),
-	PINCTRL_PIN(BOOT_8,	"BOOT_8"),
-	PINCTRL_PIN(BOOT_9,	"BOOT_9"),
-	PINCTRL_PIN(BOOT_10,	"BOOT_10"),
-	PINCTRL_PIN(BOOT_11,	"BOOT_11"),
-	PINCTRL_PIN(BOOT_12,	"BOOT_12"),
-	PINCTRL_PIN(BOOT_13,	"BOOT_13"),
-	PINCTRL_PIN(BOOT_14,	"BOOT_14"),
-	PINCTRL_PIN(BOOT_15,	"BOOT_15"),
-	PINCTRL_PIN(BOOT_16,	"BOOT_16"),
-	PINCTRL_PIN(BOOT_17,	"BOOT_17"),
-	PINCTRL_PIN(BOOT_18,	"BOOT_18"),
-
-	PINCTRL_PIN(GPIOH_0,	"GPIOH_0"),
-	PINCTRL_PIN(GPIOH_1,	"GPIOH_1"),
-	PINCTRL_PIN(GPIOH_2,	"GPIOH_2"),
-	PINCTRL_PIN(GPIOH_3,	"GPIOH_3"),
-	PINCTRL_PIN(GPIOH_4,	"GPIOH_4"),
-	PINCTRL_PIN(GPIOH_5,	"GPIOH_5"),
-	PINCTRL_PIN(GPIOH_6,	"GPIOH_6"),
-	PINCTRL_PIN(GPIOH_7,	"GPIOH_7"),
-	PINCTRL_PIN(GPIOH_8,	"GPIOH_8"),
-	PINCTRL_PIN(GPIOH_9,	"GPIOH_9"),
-	PINCTRL_PIN(GPIOH_10,	"GPIOH_10"),
+	PINCTRL_PIN(GPIOAO_0,	"GPIOAO_0"),
+	PINCTRL_PIN(GPIOAO_1,	"GPIOAO_1"),
+	PINCTRL_PIN(GPIOAO_2,	"GPIOAO_2"),
+	PINCTRL_PIN(GPIOAO_3,	"GPIOAO_3"),
+	PINCTRL_PIN(GPIOAO_4,	"GPIOAO_4"),
+	PINCTRL_PIN(GPIOAO_5,	"GPIOAO_5"),
+	PINCTRL_PIN(GPIOAO_6,	"GPIOAO_6"),
+	PINCTRL_PIN(GPIOAO_7,	"GPIOAO_7"),
+	PINCTRL_PIN(GPIOAO_8,	"GPIOAO_8"),
+	PINCTRL_PIN(GPIOAO_9,	"GPIOAO_9"),
+	PINCTRL_PIN(GPIOAO_10,	"GPIOAO_10"),
+	PINCTRL_PIN(GPIOAO_11,	"GPIOAO_11"),
+	PINCTRL_PIN(GPIOAO_12,	"GPIOAO_12"),
+	PINCTRL_PIN(GPIOAO_13,	"GPIOAO_13"),
 
 	PINCTRL_PIN(GPIOZ_0,	"GPIOZ_0"),
 	PINCTRL_PIN(GPIOZ_1,	"GPIOZ_1"),
@@ -152,6 +106,48 @@ const static struct pinctrl_pin_desc meson_pads[] = {
 	PINCTRL_PIN(GPIOZ_19,	"GPIOZ_19"),
 	PINCTRL_PIN(GPIOZ_20,	"GPIOZ_20"),
 
+	PINCTRL_PIN(GPIOH_0,	"GPIOH_0"),
+	PINCTRL_PIN(GPIOH_1,	"GPIOH_1"),
+	PINCTRL_PIN(GPIOH_2,	"GPIOH_2"),
+	PINCTRL_PIN(GPIOH_3,	"GPIOH_3"),
+	PINCTRL_PIN(GPIOH_4,	"GPIOH_4"),
+	PINCTRL_PIN(GPIOH_5,	"GPIOH_5"),
+	PINCTRL_PIN(GPIOH_6,	"GPIOH_6"),
+	PINCTRL_PIN(GPIOH_7,	"GPIOH_7"),
+	PINCTRL_PIN(GPIOH_8,	"GPIOH_8"),
+	PINCTRL_PIN(GPIOH_9,	"GPIOH_9"),
+	PINCTRL_PIN(GPIOH_10,	"GPIOH_10"),
+
+	PINCTRL_PIN(BOOT_0,	"BOOT_0"),
+	PINCTRL_PIN(BOOT_1,	"BOOT_1"),
+	PINCTRL_PIN(BOOT_2,	"BOOT_2"),
+	PINCTRL_PIN(BOOT_3,	"BOOT_3"),
+	PINCTRL_PIN(BOOT_4,	"BOOT_4"),
+	PINCTRL_PIN(BOOT_5,	"BOOT_5"),
+	PINCTRL_PIN(BOOT_6,	"BOOT_6"),
+	PINCTRL_PIN(BOOT_7,	"BOOT_7"),
+	PINCTRL_PIN(BOOT_8,	"BOOT_8"),
+	PINCTRL_PIN(BOOT_9,	"BOOT_9"),
+	PINCTRL_PIN(BOOT_10,	"BOOT_10"),
+	PINCTRL_PIN(BOOT_11,	"BOOT_11"),
+	PINCTRL_PIN(BOOT_12,	"BOOT_12"),
+	PINCTRL_PIN(BOOT_13,	"BOOT_13"),
+	PINCTRL_PIN(BOOT_14,	"BOOT_14"),
+	PINCTRL_PIN(BOOT_15,	"BOOT_15"),
+	PINCTRL_PIN(BOOT_16,	"BOOT_16"),
+	PINCTRL_PIN(BOOT_17,	"BOOT_17"),
+	PINCTRL_PIN(BOOT_18,	"BOOT_18"),
+
+	PINCTRL_PIN(CARD_0,	"CARD_0"),
+	PINCTRL_PIN(CARD_1,	"CARD_1"),
+	PINCTRL_PIN(CARD_2,	"CARD_2"),
+	PINCTRL_PIN(CARD_3,	"CARD_3"),
+	PINCTRL_PIN(CARD_4,	"CARD_4"),
+	PINCTRL_PIN(CARD_5,	"CARD_5"),
+	PINCTRL_PIN(CARD_6,	"CARD_6"),
+	PINCTRL_PIN(CARD_7,	"CARD_7"),
+	PINCTRL_PIN(CARD_8,	"CARD_8"),
+
 	PINCTRL_PIN(GPIOW_0,	"GPIOW_0"),
 	PINCTRL_PIN(GPIOW_1,	"GPIOW_1"),
 	PINCTRL_PIN(GPIOW_2,	"GPIOW_2"),
@@ -174,31 +170,6 @@ const static struct pinctrl_pin_desc meson_pads[] = {
 	PINCTRL_PIN(GPIOW_19,	"GPIOW_19"),
 	PINCTRL_PIN(GPIOW_20,	"GPIOW_20"),
 
-	PINCTRL_PIN(GPIOAO_0,	"GPIOAO_0"),
-	PINCTRL_PIN(GPIOAO_1,	"GPIOAO_1"),
-	PINCTRL_PIN(GPIOAO_2,	"GPIOAO_2"),
-	PINCTRL_PIN(GPIOAO_3,	"GPIOAO_3"),
-	PINCTRL_PIN(GPIOAO_4,	"GPIOAO_4"),
-	PINCTRL_PIN(GPIOAO_5,	"GPIOAO_5"),
-	PINCTRL_PIN(GPIOAO_6,	"GPIOAO_6"),
-	PINCTRL_PIN(GPIOAO_7,	"GPIOAO_7"),
-	PINCTRL_PIN(GPIOAO_8,	"GPIOAO_8"),
-	PINCTRL_PIN(GPIOAO_9,	"GPIOAO_9"),
-	PINCTRL_PIN(GPIOAO_10,	"GPIOAO_10"),
-	PINCTRL_PIN(GPIOAO_11,	"GPIOAO_11"),
-	PINCTRL_PIN(GPIOAO_12,	"GPIOAO_12"),
-	PINCTRL_PIN(GPIOAO_13,	"GPIOAO_13"),
-
-	PINCTRL_PIN(CARD_0,	"CARD_0"),
-	PINCTRL_PIN(CARD_1,	"CARD_1"),
-	PINCTRL_PIN(CARD_2,	"CARD_2"),
-	PINCTRL_PIN(CARD_3,	"CARD_3"),
-	PINCTRL_PIN(CARD_4,	"CARD_4"),
-	PINCTRL_PIN(CARD_5,	"CARD_5"),
-	PINCTRL_PIN(CARD_6,	"CARD_6"),
-	PINCTRL_PIN(CARD_7,	"CARD_7"),
-	PINCTRL_PIN(CARD_8,	"CARD_8"),
-
 	PINCTRL_PIN(GPIOY_0,	"GPIOY_0"),
 	PINCTRL_PIN(GPIOY_1,	"GPIOY_1"),
 	PINCTRL_PIN(GPIOY_2,	"GPIOY_2"),
@@ -213,45 +184,72 @@ const static struct pinctrl_pin_desc meson_pads[] = {
 	PINCTRL_PIN(GPIOY_11,	"GPIOY_11"),
 	PINCTRL_PIN(GPIOY_12,	"GPIOY_12"),
 	PINCTRL_PIN(GPIOY_13,	"GPIOY_13"),
+
+	PINCTRL_PIN(GPIOX_0,	"GPIOX_0"),
+	PINCTRL_PIN(GPIOX_1,	"GPIOX_1"),
+	PINCTRL_PIN(GPIOX_2,	"GPIOX_2"),
+	PINCTRL_PIN(GPIOX_3,	"GPIOX_3"),
+	PINCTRL_PIN(GPIOX_4,	"GPIOX_4"),
+	PINCTRL_PIN(GPIOX_5,	"GPIOX_5"),
+	PINCTRL_PIN(GPIOX_6,	"GPIOX_6"),
+	PINCTRL_PIN(GPIOX_7,	"GPIOX_7"),
+	PINCTRL_PIN(GPIOX_8,	"GPIOX_8"),
+	PINCTRL_PIN(GPIOX_9,	"GPIOX_9"),
+	PINCTRL_PIN(GPIOX_10,	"GPIOX_10"),
+	PINCTRL_PIN(GPIOX_11,	"GPIOX_11"),
+	PINCTRL_PIN(GPIOX_12,	"GPIOX_12"),
+	PINCTRL_PIN(GPIOX_13,	"GPIOX_13"),
+	PINCTRL_PIN(GPIOX_14,	"GPIOX_14"),
+	PINCTRL_PIN(GPIOX_15,	"GPIOX_15"),
+	PINCTRL_PIN(GPIOX_16,	"GPIOX_16"),
+	PINCTRL_PIN(GPIOX_17,	"GPIOX_17"),
+	PINCTRL_PIN(GPIOX_18,	"GPIOX_18"),
+	PINCTRL_PIN(GPIOX_19,	"GPIOX_19"),
+	PINCTRL_PIN(GPIOX_20,	"GPIOX_20"),
+	PINCTRL_PIN(GPIOX_21,	"GPIOX_21"),
+	PINCTRL_PIN(GPIOX_22,	"GPIOX_22"),
+	PINCTRL_PIN(GPIOX_23,	"GPIOX_23"),
+	PINCTRL_PIN(GPIOX_24,	"GPIOX_24"),
+	PINCTRL_PIN(GPIOX_25,	"GPIOX_25"),
+	PINCTRL_PIN(GPIOX_26,	"GPIOX_26"),
+	PINCTRL_PIN(GPIOX_27,	"GPIOX_27"),
 };
 
 int meson_pin_to_pullup(unsigned int pin , unsigned int *reg, unsigned int *bit,
 	unsigned int *en)
 {
 	/*
-	PAD_PULL_UP_REG4 0x203e
-
-	31~28	R/W	0		Unused
-	27~0	R/W	0x3000000	gpioX[27:0] 1 = pull up.  0 = pull down
-	*/
-	/*
-	PULL_UP_EN_REG4 0x204c
+	AO_RTI_PULL_UP_REG		0xc810002c
 
-	31~28	R/W	0		Unused
-	27~0	R/W	0xF000FFF	gpioX[27:0]
+	31	R	0		Reserved
+	30	R/W	0		TEST_N pull-up/down direction.
+	29-16	R/W	0		gpioAO[13:0] pull-up/down direction.
+	15	R	0		Reserved
+	14	R/W	0		TEST_N pull-up enable.
+	13-0	R/W	0		gpioAO[13:0] pull-up enable
 	*/
-	if (pin <= GPIOX_27)
+	if (pin <= GPIOAO_13)
 	{
-		*reg = 4;
-		*bit = pin - GPIOX_0;
-		*en  = *bit;
+		*reg = 5;
+		*bit = pin - GPIOAO_0 + 16;
+		*en  = pin - GPIOAO_0;
 	}
 	/*
-	PAD_PULL_UP_REG2 0x203c
+	PAD_PULL_UP_REG3 0x203d
 
-	19	R/W	1		Reserved
-	18~0	R/W	0x77FFF 	boot[18:0] 1 = pull up.  0 = pull down
+	31~21	R/W	0		Reserved
+	20~0	R/W	0x1FA040	gpioZ[20:0] 1 = pull up.  0 = pull down
 	*/
 	/*
-	PULL_UP_EN_REG2	0x204a
+	PULL_UP_EN_REG3	0x204b
 
-	19	R/W	1		Reserved
-	18~0	R/W	0x7FFFF 	boot[18:0]
+	31~21	R/W	0		Reserved
+	20~0	R/W	0x1FE07F	gpioZ[20:0]
 	*/
-	else if (pin <= BOOT_18)
+	else if (pin <= GPIOZ_20)
 	{
-		*reg = 2;
-		*bit = pin - BOOT_0;
+		*reg = 3;
+		*bit = pin - GPIOZ_0;
 		*en  = *bit;
 	}
 	/*
@@ -273,73 +271,58 @@ int meson_pin_to_pullup(unsigned int pin , unsigned int *reg, unsigned int *bit,
 		*en  = *bit;
 	}
 	/*
-	PAD_PULL_UP_REG3 0x203d
+	PAD_PULL_UP_REG2 0x203c
 
-	31~21	R/W	0		Reserved
-	20~0	R/W	0x1FA040	gpioZ[20:0] 1 = pull up.  0 = pull down
+	19	R/W	1		Reserved
+	18~0	R/W	0x77FFF 	boot[18:0] 1 = pull up.  0 = pull down
 	*/
 	/*
-	PULL_UP_EN_REG3	0x204b
+	PULL_UP_EN_REG2	0x204a
 
-	31~21	R/W	0		Reserved
-	20~0	R/W	0x1FE07F	gpioZ[20:0]
+	19	R/W	1		Reserved
+	18~0	R/W	0x7FFFF 	boot[18:0]
 	*/
-	else if (pin <= GPIOZ_20)
+	else if (pin <= BOOT_18)
 	{
-		*reg = 3;
-		*bit = pin - GPIOZ_0;
+		*reg = 2;
+		*bit = pin - BOOT_0;
 		*en  = *bit;
 	}
 	/*
-	PAD_PULL_UP_REG0 0x203a
+	PAD_PULL_UP_REG2 0x203c
 
-	31~21	R/W	0		Unused
-	20~0	R/W	0x2223F 	gpioW[20:0] 1 = pull up.  0 = pull down
+	31~20	R/W	0		Reserved
+	28~20	R/W	0x1FF		card[8:0] 1 = pull up.	0 = pull down
 	*/
 	/*
-	PULL_UP_EN_REG0	0x2048
+	PULL_UP_EN_REG2 0x204a
 
-	31~21	R/W	0		Unused
-	20~0	R/W	0x2223F		gpioW[20:0]
+	31~20	R/W	0		Reserved
+	28~20	R/W	0x1FF		card[8:0]
 	*/
-	if (pin <= GPIOW_20)
+	else if (pin <= CARD_8)
 	{
-		*reg = 0;
-		*bit = pin - GPIOW_0;
+		*reg = 2;
+		*bit = pin - CARD_0 + 20;
 		*en  = *bit;
 	}
-	/*
-	AO_RTI_PULL_UP_REG		0xc810002c
 
-	31	R	0		Reserved
-	30	R/W	0		TEST_N pull-up/down direction.
-	29-16	R/W	0		gpioAO[13:0] pull-up/down direction.
-	15	R	0		Reserved
-	14	R/W	0		TEST_N pull-up enable.
-	13-0	R/W	0		gpioAO[13:0] pull-up enable
-	*/
-	else if (pin <= GPIOAO_13)
-	{
-		*reg = 5;
-		*bit = pin - GPIOAO_0 + 16;
-		*en  = pin - GPIOAO_0;
-	}
 	/*
-	PAD_PULL_UP_REG2 0x203c
+	PAD_PULL_UP_REG0 0x203a
 
-	31~20	R/W	0		Reserved
-	28~20	R/W	0x1FF		card[8:0] 1 = pull up.	0 = pull down
+	31~21	R/W	0		Unused
+	20~0	R/W	0x2223F 	gpioW[20:0] 1 = pull up.  0 = pull down
 	*/
 	/*
-	PULL_UP_EN_REG2 0x204a
+	PULL_UP_EN_REG0	0x2048
 
-	31~20	R/W	0		Reserved
-	28~20	R/W	0x1FF		card[8:0]
+	31~21	R/W	0		Unused
+	20~0	R/W	0x2223F		gpioW[20:0]
 	*/
-	else if (pin <= CARD_8)
+	else if (pin <= GPIOW_20)
 	{
-		*reg = 2;
-		*bit = pin - CARD_0 + 20;
+		*reg = 0;
+		*bit = pin - GPIOW_0;
 		*en  = *bit;
 	}
 	/*
@@ -354,46 +337,46 @@ int meson_pin_to_pullup(unsigned int pin , unsigned int *reg, unsigned int *bit,
 	15~14	R/W	0		Reserved
 	13~0	R/W	0x3FFF		gpioY[13:0]
 	*/
-
 	else if (pin <= GPIOY_13)
 	{
 		*reg = 1;
 		*bit = pin - GPIOY_0;
 		*en  = *bit;
 	}
-	else
-		return -1;
-	return 0;
-}
+	/*
+	PAD_PULL_UP_REG4 0x203e
 
-int meson_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit)
-{
+	31~28	R/W	0		Unused
+	27~0	R/W	0x3000000	gpioX[27:0] 1 = pull up.  0 = pull down
+	*/
 	/*
-	PREG_PAD_GPIO4_EN_N	0x2018
-	27~0			GPIOX[27:0]
+	PULL_UP_EN_REG4 0x204c
+
+	31~28	R/W	0		Unused
+	27~0	R/W	0xF000FFF	gpioX[27:0]
 	*/
-	if (pin <= GPIOX_27)
+	else if (pin <= GPIOX_27)
 	{
 		*reg = 4;
 		*bit = pin - GPIOX_0;
+		*en  = *bit;
 	}
+
+	else
+		return -1;
+	return 0;
+}
+
+int meson_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *bit)
+{
 	/*
-	PREG_PAD_GPIO2_EN_N	0x2012
-	18~0			BOOT[18:0]
-	*/
-	else if (pin <= BOOT_18)
-	{
-		*reg = 2;
-		*bit = pin - BOOT_0;
-	}
-	/*
-	PREG_PAD_GPIO1_EN_N	0x200f
-	26~16			GPIOH[10:0]
+	P_AO_GPIO_O_EN_N	0xc8100024
+	13-0			GPIOAO[13:0]
 	*/
-	else if (pin <= GPIOH_10)
+	if (pin < GPIOAO_13)
 	{
-		*reg = 1;
-		*bit = pin - GPIOH_0 + 16;
+		*reg = 6;
+		*bit = pin - GPIOAO_0;
 	}
 	/*
 	PREG_PAD_GPIO3_EN_N	0x2015
@@ -405,22 +388,22 @@ int meson_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *
 		*bit = pin - GPIOZ_0;
 	}
 	/*
-	PREG_PAD_GPIO0_EN_N	0x200c
-	20~0			GPIOW[20:0]
+	PREG_PAD_GPIO1_EN_N	0x200f
+	26~16			GPIOH[10:0]
 	*/
-	if (pin <= GPIOW_20)
+	else if (pin <= GPIOH_10)
 	{
-		*reg = 0;
-		*bit = pin - GPIOW_0;
+		*reg = 1;
+		*bit = pin - GPIOH_0 + 16;
 	}
 	/*
-	P_AO_GPIO_O_EN_N	0xc8100024
-	13-0			GPIOAO[13:0]
+	PREG_PAD_GPIO2_EN_N	0x2012
+	18~0			BOOT[18:0]
 	*/
-	else if (pin < GPIOAO_13)
+	else if (pin <= BOOT_18)
 	{
-		*reg = 6;
-		*bit = pin - GPIOAO_0;
+		*reg = 2;
+		*bit = pin - BOOT_0;
 	}
 	/*
 	PREG_PAD_GPIO2_EN_N	0x2012
@@ -432,6 +415,15 @@ int meson_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *
 		*bit = pin - CARD_0 + 20;
 	}
 	/*
+	PREG_PAD_GPIO0_EN_N	0x200c
+	20~0			GPIOW[20:0]
+	*/
+	else if (pin <= GPIOW_20)
+	{
+		*reg = 0;
+		*bit = pin - GPIOW_0;
+	}
+	/*
 	PREG_PAD_GPIO1_EN_N	0x200f
 	13~0			GPIOY[13:0]
 	*/
@@ -440,6 +432,15 @@ int meson_pin_map_to_direction(unsigned int pin,unsigned int *reg,unsigned int *
 		*reg = 1;
 		*bit = pin - GPIOY_0;
 	}
+	/*
+	PREG_PAD_GPIO4_EN_N	0x2018
+	27~0			GPIOX[27:0]
+	*/
+	else if (pin <= GPIOX_27)
+	{
+		*reg = 4;
+		*bit = pin - GPIOX_0;
+	}
 	else
 		return -1;
 	return 0;
-- 
2.19.0

