From ba61fb0d910b189eaf7d8129dc0c159b64a0c256 Mon Sep 17 00:00:00 2001
From: Tao Zeng <tao.zeng@amlogic.com>
Date: Tue, 16 Jun 2015 13:21:36 +0800
Subject: [PATCH 5662/5965] PD#107885: thermal: fix cpufreq can't limit in high
 temperature boot

init rc will change scaling max after thermal enabled, but thermal has
remembered it's limit state of cpu frequent. So it will cause cpu frequent
remain high level if system reboot with high temperature

Change-Id: I04064f612ff01605e80dd1ab10184435e3770636
---
 drivers/thermal/step_wise.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/thermal/step_wise.c b/drivers/thermal/step_wise.c
index 998464f4ed47..9b0ff9ec75f0 100755
--- a/drivers/thermal/step_wise.c
+++ b/drivers/thermal/step_wise.c
@@ -122,8 +122,10 @@ static void thermal_zone_trip_update(struct thermal_zone_device *tz, int trip)
 	enum thermal_trip_type trip_type;
 	enum thermal_trend trend;
 	struct thermal_instance *instance;
+	struct thermal_cooling_device *cdev;
 	bool throttle = false;
 	int old_target;
+	long cur_state;
 
 	if (trip == THERMAL_TRIPS_NONE) {
 		trip_temp = tz->forced_passive;
@@ -145,6 +147,17 @@ static void thermal_zone_trip_update(struct thermal_zone_device *tz, int trip)
 			continue;
 
 		old_target = instance->target;
+		cdev = instance->cdev;
+		if (cdev) {
+			cdev->ops->get_cur_state(cdev, (unsigned long *)&cur_state);
+			if ((throttle && cur_state < old_target)) {
+				/*
+				 * temperature raizing high but not limited
+				 * current state
+				 */
+				old_target = THERMAL_NO_TARGET;
+			}
+		}
 		instance->target = get_target_state(instance, trend, throttle);
 
 		if (old_target == instance->target)
-- 
2.19.0

