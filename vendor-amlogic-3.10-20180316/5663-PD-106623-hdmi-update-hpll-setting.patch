From f2576946c82cdbae70daf59bdf85a78a8bf79c29 Mon Sep 17 00:00:00 2001
From: Zongdong Jiao <zongdong.jiao@amlogic.com>
Date: Thu, 18 Jun 2015 19:11:24 +0800
Subject: [PATCH 5663/5965] PD#106623: hdmi: update hpll setting

Optimize HPLL setting to get better performance.

Change-Id: I7be9f7abe59a2be488ae3b9a95a30c17e20dee80
---
 arch/arm/mach-mesong9bb/enc_clk_config.c      | 80 ++++++++++++++-----
 arch/arm/mach-mesong9tv/enc_clk_config.c      | 57 +++++++++----
 .../mach-mesong9tv/include/mach/register.h    |  2 +
 3 files changed, 104 insertions(+), 35 deletions(-)
 mode change 100755 => 100644 arch/arm/mach-mesong9tv/enc_clk_config.c

diff --git a/arch/arm/mach-mesong9bb/enc_clk_config.c b/arch/arm/mach-mesong9bb/enc_clk_config.c
index 2e52fed7ae4c..2a387564562f 100644
--- a/arch/arm/mach-mesong9bb/enc_clk_config.c
+++ b/arch/arm/mach-mesong9bb/enc_clk_config.c
@@ -72,8 +72,6 @@ static unsigned int hpll_vco_clk = 0xffff;      // not initial value
     do {                                                \
         unsigned int st = 0, cnt = 10;                  \
         while (cnt --) {                                 \
-            aml_set_reg32_bits(reg, 0x5, 28, 3);        \
-            aml_set_reg32_bits(reg, 0x4, 28, 3);        \
             msleep_interruptible(10);                   \
             st = !!(aml_read_reg32(reg) & (1 << 31));   \
             if (st) {                                    \
@@ -82,6 +80,8 @@ static unsigned int hpll_vco_clk = 0xffff;      // not initial value
             }                                           \
             else {  /* reset pll */                     \
                 printk("hpll reseting\n");              \
+                aml_set_reg32_bits(reg, 0x5, 28, 3);    \
+                aml_set_reg32_bits(reg, 0x4, 28, 3);    \
             }                                           \
         }                                               \
         if (cnt < 9)                                     \
@@ -115,31 +115,33 @@ static void set_hdmitx_sys_clk(void)
     aml_set_reg32_bits(P_HHI_HDMI_CLK_CNTL, 1, 8, 1);
 }
 
+static unsigned int acq_val = 0;
 static void set_hpll_clk_out(unsigned clk)
 {
-    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL5, 1, 30, 1);
+    int i = 0;
 
+    for (i=0;i<10;i++) {
     check_clk_config(clk);
-    printk("config HPLL\n");
+    printk("config HPLL = %d\n", clk);
     switch (clk) {
     case 2970:
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x5000023d);
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 1, 14, 1); // div mode
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0xe00, 0, 12); // div_frac
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL3, 0x0d5c5091);
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL4, 0x801da72c);
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x71486980);
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL6, 0x00000e55);
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL, 0x5, 28, 3);  //reset hpll
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL, 0x4, 28, 3);
-        WAIT_FOR_PLL_LOCKED(P_HHI_HDMI_PLL_CNTL);
+            aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x5000023d);
+            aml_write_reg32(P_HHI_HDMI_PLL_CNTL2, 0);
+            aml_write_reg32(P_HHI_HDMI_PLL_CNTL3, 0x135c5091);
+            aml_write_reg32(P_HHI_HDMI_PLL_CNTL4, 0x801da72c);
+            aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x714869c0);    //5940 0x71c86900      // 0x71486900 2970
+            aml_write_reg32(P_HHI_HDMI_PLL_CNTL6, 0x00000e55);
+            aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x4000023d);
+            printk("waiting HPLL lock\n");
+            WAIT_FOR_PLL_LOCKED(P_HHI_HDMI_PLL_CNTL);
+            aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 1, 14, 1); // div mode
+            aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0xe00, 0, 12); // div_frac
         break;
     case 4320:
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0, 14, 1); // div mode
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0x000, 0, 12); // div_frac
+        aml_write_reg32(P_HHI_HDMI_PLL_CNTL2, 0);
         aml_write_reg32(P_HHI_HDMI_PLL_CNTL3, 0x0d5c5091);
         aml_write_reg32(P_HHI_HDMI_PLL_CNTL4, 0x801da72c);
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x71486980);
+        aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x714869c0);
         aml_write_reg32(P_HHI_HDMI_PLL_CNTL6, 0x00000e55);
         aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x0000022d);
         aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL, 0x5, 28, 3);  //reset hpll
@@ -147,11 +149,10 @@ static void set_hpll_clk_out(unsigned clk)
         WAIT_FOR_PLL_LOCKED(P_HHI_HDMI_PLL_CNTL);
         break;
     case 2448:
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 1, 14, 1); // div mode
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0xe00, 0, 12); // div_frac
+        aml_write_reg32(P_HHI_HDMI_PLL_CNTL2, 0);
         aml_write_reg32(P_HHI_HDMI_PLL_CNTL3, 0x0d5c5091);
         aml_write_reg32(P_HHI_HDMI_PLL_CNTL4, 0x801da72c);
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x71486980);
+        aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x714869c0);
         aml_write_reg32(P_HHI_HDMI_PLL_CNTL6, 0x00000e55);
         aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x00000266);
         aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL, 0x5, 28, 3);  //reset hpll
@@ -162,6 +163,45 @@ static void set_hpll_clk_out(unsigned clk)
         printk("error hpll clk: %d\n", clk);
         break;
     }
+
+    // Step 1: close PVT_FIX_EN, enable ACQ
+    mdelay(20);
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x754868c0);
+    // Step 2: read ACQ
+    mdelay(20);
+    acq_val = (aml_read_reg32(P_HHI_HDMI_PLL_CNTL_I) >> 4) & 0xff;
+    printk("acq_val1 = 0x%02x\n", acq_val);
+
+    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 1, 14, 1); // div mode
+    mdelay(20);
+
+    acq_val = (aml_read_reg32(P_HHI_HDMI_PLL_CNTL_I) >> 4) & 0xff;
+    printk("acq_val2 = 0x%02x\n", acq_val);
+
+    if (acq_val <= 0x8a) {
+        //aml_write_reg32(P_HHI_HDMI_PLL_CNTL6, 0xe51);
+        mdelay(20);
+    } else {
+        break;
+    }
+}
+    printk("acq_val = 0x%02x, loop = %d.\n", acq_val, i);
+
+/*
+    acq_val = (aml_read_reg32(P_HHI_HDMI_PLL_CNTL_I) >> 4) & 0xff;
+    printk("acq_val3 = 0x%02x\n", acq_val);
+    if ((acq_val <= 0x8a) || (acq_val >= 0xf0)) {
+        loop ++;
+        if (loop > 5) {
+            printk("pll set loop = %d, return\n", loop);
+            return;
+        } else
+            set_hpll_clk_out(clk);
+    } else {
+        printk("config HPLL done\n");
+        return ;
+    }
+*/
     printk("config HPLL done\n");
 }
 
diff --git a/arch/arm/mach-mesong9tv/enc_clk_config.c b/arch/arm/mach-mesong9tv/enc_clk_config.c
old mode 100755
new mode 100644
index 11d082185673..15f0a39f9a80
--- a/arch/arm/mach-mesong9tv/enc_clk_config.c
+++ b/arch/arm/mach-mesong9tv/enc_clk_config.c
@@ -73,8 +73,6 @@ static void hpll_load_en(void);
     do {                                                \
         unsigned int st = 0, cnt = 10;                  \
         while(cnt --) {                                 \
-            aml_set_reg32_bits(reg, 0x5, 28, 3);        \
-            aml_set_reg32_bits(reg, 0x4, 28, 3);        \
             hpll_load_en();                             \
             msleep_interruptible(10);                   \
             st = !!(aml_read_reg32(reg) & (1 << 31));   \
@@ -116,26 +114,35 @@ static void set_hdmitx_sys_clk(void)
     aml_set_reg32_bits(P_HHI_HDMI_CLK_CNTL, 0, 0, 7);
     aml_set_reg32_bits(P_HHI_HDMI_CLK_CNTL, 1, 8, 1);
 }
-
+static unsigned int acq_val = 0;
 static void set_hpll_clk_out(unsigned clk)
 {
-    hpll_load_initial();
+    int i = 0;
+    for (i=0;i<10;i++) {
+        hpll_load_initial();
 
     check_clk_config(clk);
     printk("config HPLL\n");
     switch(clk){
     case 2970:
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 1, 14, 1); // div mode
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0xe00, 0, 12); // div_frac
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL3, 0x135c5091);
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL4, 0x801da72c);
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x71486900);    //5940 0x71c86900      // 0x71486900 2970
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL6, 0x00000e55);
-        aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x0000023d);
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL, 0x5, 28, 3);  //reset hpll
-        aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL, 0x4, 28, 3);
-        WAIT_FOR_PLL_LOCKED(P_HHI_HDMI_PLL_CNTL);
-        break;
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x5000023c);
+    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0, 14, 1); // div mode
+    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0x000, 0, 12); // div_frac
+    aml_read_reg32(P_HHI_HDMI_PLL_CNTL2);
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL3, 0x135c5091);
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL4, 0x801da72c);
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x71486900);    //5940 0x71c86900      // 0x71486900 2970
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL6, 0x00000e55);
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x4000023c);
+    printk("waiting HPLL lock\n");
+    WAIT_FOR_PLL_LOCKED(P_HHI_HDMI_PLL_CNTL);
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL, 0x4000023d);
+    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 1, 14, 1); // div mode
+    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0xe00, 0, 12); // div_frac
+    WAIT_FOR_PLL_LOCKED(P_HHI_HDMI_PLL_CNTL);
+    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 1, 14, 1); // div mode
+    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0xe00, 0, 12); // div_frac
+    break;
     case 4320:
         aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0, 14, 1); // div mode
         aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 0x000, 0, 12); // div_frac
@@ -165,6 +172,26 @@ static void set_hpll_clk_out(unsigned clk)
         break;
     }
     printk("config HPLL done\n");
+    /* Step 1: close PVT_FIX_EN, enable ACQ */
+    mdelay(20);
+    aml_write_reg32(P_HHI_HDMI_PLL_CNTL5, 0x75486800);
+    /* Step 2: read ACQ */
+    mdelay(20);
+    acq_val = (aml_read_reg32(P_HHI_HDMI_PLL_CNTL_I) >> 4) & 0xff;
+    printk("acq_val1 = 0x%02x\n", acq_val);
+
+    aml_set_reg32_bits(P_HHI_HDMI_PLL_CNTL2, 1, 14, 1); // div mode
+    mdelay(20);
+
+    acq_val = (aml_read_reg32(P_HHI_HDMI_PLL_CNTL_I) >> 4) & 0xff;
+    printk("acq_val2 = 0x%02x\n", acq_val);
+
+    if (acq_val <= 0x8a)
+        mdelay(20);
+    else
+        break;
+    }
+    printk("acq_val = 0x%02x, loop = %d.\n", acq_val, i);
 }
 
 static void set_hpll_od1(unsigned div)
diff --git a/arch/arm/mach-mesong9tv/include/mach/register.h b/arch/arm/mach-mesong9tv/include/mach/register.h
index 2f4f571eddb2..5e232a04fdbe 100644
--- a/arch/arm/mach-mesong9tv/include/mach/register.h
+++ b/arch/arm/mach-mesong9tv/include/mach/register.h
@@ -1363,6 +1363,8 @@
 #define P_HHI_HDMI_PLL_CNTL6			CBUS_REG_ADDR(HHI_HDMI_PLL_CNTL6)
 #define HHI_VID_PLL_CNTL6			0x10cd
 #define P_HHI_VID_PLL_CNTL6			CBUS_REG_ADDR(HHI_VID_PLL_CNTL6)
+#define HHI_HDMI_PLL_CNTL_I                     0x10ce
+#define P_HHI_HDMI_PLL_CNTL_I                   CBUS_REG_ADDR(HHI_HDMI_PLL_CNTL_I)
 #define HHI_DSI_LVDS_EDP_CNTL0			0x10d1
 #define P_HHI_DSI_LVDS_EDP_CNTL0		CBUS_REG_ADDR(HHI_DSI_LVDS_EDP_CNTL0)
 #define HHI_DSI_LVDS_EDP_CNTL1			0x10d2
-- 
2.19.0

