From ac13ebb4cf2c299aad5b01ce23bbb6ce6dc4534b Mon Sep 17 00:00:00 2001
From: Zhe Wang <zhe.wang@amlogic.com>
Date: Wed, 1 Jul 2015 10:10:12 +0800
Subject: [PATCH 5680/5965] PD#108124: audio: select tas5707 eq and drc type
 from uboot parameter

Change-Id: Ic817589a2b9cda484a5846076d266da4eb6a7353
---
 arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd |  51 ++++++++-
 sound/soc/aml/m8/aml_g9tv.c                  | 108 +++++++++++--------
 2 files changed, 110 insertions(+), 49 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd
index 590958bc2a9f..cbe7442bc938 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd
@@ -1224,8 +1224,7 @@
 			reset_pin = "GPIOY_9";
 			i2c_bus = "i2c_bus_b";
 			master_vol = <150>;
-			eq_name = "table","wall";
-			table = /bits/ 8 <
+			table_0 = /bits/ 8 <
 				0x00 0x7E 0x95 0xFF 0x0F 0x02 0xD4 0x01 0x00 0x7E 0x95 0xFF 0x00 0xFD 0x27 0xFF 0x0F 0x82 0xD0 0x01 /*0x29---ch1_bq[0]*/
 				0x00 0x7F 0x83 0xD8 0x0F 0x02 0xC3 0x92 0x00 0x7D 0xDB 0x4F 0x00 0xFD 0x3C 0x6E 0x0F 0x82 0xA0 0xD8 /*0x2A---ch1_bq[1]*/
 				0x00 0x82 0xCE 0x97 0x0F 0x4C 0x87 0x81 0x00 0x5F 0x69 0x2D 0x00 0xB3 0x78 0x7F 0x0F 0x9D 0xC8 0x3B /*0x2B---ch1_bq[2]*/
@@ -1241,7 +1240,7 @@
 				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x35---ch2_bq[5]*/
 				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x36---ch2_bq[6]*/
 			>;
-			wall = /bits/ 8 <
+			wall_0 = /bits/ 8 <
 				0x00 0x7F 0x90 0xFF 0x0F 0x02 0xD4 0x01 0x00 0x7E 0x95 0xFF 0x00 0xFD 0x27 0xFF 0x0F 0x82 0xD0 0x01 /*0x29---ch1_bq[0]*/
 				0x00 0x7F 0x83 0xD8 0x0F 0x02 0xC3 0x92 0x00 0x7D 0xDB 0x4F 0x00 0xFD 0x3C 0x6E 0x0F 0x82 0xA0 0xD8 /*0x2A---ch1_bq[1]*/
 				0x00 0x82 0xCE 0x97 0x0F 0x4C 0x87 0x81 0x00 0x5F 0x69 0x2D 0x00 0xB3 0x78 0x7F 0x0F 0x9D 0xC8 0x3B /*0x2B---ch1_bq[2]*/
@@ -1257,12 +1256,54 @@
 				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x35---ch2_bq[5]*/
 				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x36---ch2_bq[6]*/
 			>;
-			drc1_tko_table = /bits/ 8 <
+			table_1 = /bits/ 8 <
+				0x00 0x7E 0x95 0xFF 0x0F 0x02 0xD4 0x01 0x00 0x7E 0x95 0xFF 0x00 0xFD 0x27 0xFF 0x0F 0x82 0xD0 0x01 /*0x29---ch1_bq[0]*/
+				0x00 0x7F 0x83 0xD8 0x0F 0x02 0xC3 0x92 0x00 0x7D 0xDB 0x4F 0x00 0xFD 0x3C 0x6E 0x0F 0x82 0xA0 0xD8 /*0x2A---ch1_bq[1]*/
+				0x00 0x82 0xCE 0x97 0x0F 0x4C 0x87 0x81 0x00 0x5F 0x69 0x2D 0x00 0xB3 0x78 0x7F 0x0F 0x9D 0xC8 0x3B /*0x2B---ch1_bq[2]*/
+				0x00 0x83 0x6B 0x4A 0x0F 0x7A 0x3D 0xA6 0x00 0x58 0x4D 0xED 0x00 0x85 0xC2 0x5A 0x0F 0xA4 0x46 0xC9 /*0x2C---ch1_bq[3]*/
+				0x00 0x83 0x6B 0x4A 0x0F 0xAB 0xEA 0x5C 0x00 0x58 0x4D 0xED 0x00 0x54 0x15 0xA4 0x0F 0xA4 0x46 0xC9 /*0x2D---ch1_bq[4]*/
+				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x2E---ch1_bq[5]*/
+				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x2F---ch1_bq[6]*/
+				0x00 0x7E 0x95 0xFF 0x0F 0x02 0xD4 0x01 0x00 0x7E 0x95 0xFF 0x00 0xFD 0x27 0xFF 0x0F 0x82 0xD0 0x01 /*0x30---ch2_bq[0]*/
+				0x00 0x7F 0x83 0xD8 0x0F 0x02 0xC3 0x92 0x00 0x7D 0xDB 0x4F 0x00 0xFD 0x3C 0x6E 0x0F 0x82 0xA0 0xD8 /*0x31---ch2_bq[1]*/
+				0x00 0x82 0xCE 0x97 0x0F 0x4C 0x87 0x81 0x00 0x5F 0x69 0x2D 0x00 0xB3 0x78 0x7F 0x0F 0x9D 0xC8 0x3B /*0x32---ch2_bq[2]*/
+				0x00 0x83 0x6B 0x4A 0x0F 0x7A 0x3D 0xA6 0x00 0x58 0x4D 0xED 0x00 0x85 0xC2 0x5A 0x0F 0xA4 0x46 0xC9 /*0x33---ch2_bq[3]*/
+				0x00 0x83 0x6B 0x4A 0x0F 0xAB 0xEA 0x5C 0x00 0x58 0x4D 0xED 0x00 0x54 0x15 0xA4 0x0F 0xA4 0x46 0xC9 /*0x34---ch2_bq[4]*/
+				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x35---ch2_bq[5]*/
+				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x36---ch2_bq[6]*/
+			>;
+			wall_1 = /bits/ 8 <
+				0x00 0x7F 0x90 0xFF 0x0F 0x02 0xD4 0x01 0x00 0x7E 0x95 0xFF 0x00 0xFD 0x27 0xFF 0x0F 0x82 0xD0 0x01 /*0x29---ch1_bq[0]*/
+				0x00 0x7F 0x83 0xD8 0x0F 0x02 0xC3 0x92 0x00 0x7D 0xDB 0x4F 0x00 0xFD 0x3C 0x6E 0x0F 0x82 0xA0 0xD8 /*0x2A---ch1_bq[1]*/
+				0x00 0x82 0xCE 0x97 0x0F 0x4C 0x87 0x81 0x00 0x5F 0x69 0x2D 0x00 0xB3 0x78 0x7F 0x0F 0x9D 0xC8 0x3B /*0x2B---ch1_bq[2]*/
+				0x00 0x83 0x6B 0x4A 0x0F 0x7A 0x3D 0xA6 0x00 0x58 0x4D 0xED 0x00 0x85 0xC2 0x5A 0x0F 0xA4 0x46 0xC9 /*0x2C---ch1_bq[3]*/
+				0x00 0x83 0x6B 0x4A 0x0F 0xAB 0xEA 0x5C 0x00 0x58 0x4D 0xED 0x00 0x54 0x15 0xA4 0x0F 0xA4 0x46 0xC9 /*0x2D---ch1_bq[4]*/
+				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x2E---ch1_bq[5]*/
+				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x2F---ch1_bq[6]*/
+				0x00 0x7E 0x95 0xFF 0x0F 0x02 0xD4 0x01 0x00 0x7E 0x95 0xFF 0x00 0xFD 0x27 0xFF 0x0F 0x82 0xD0 0x01 /*0x30---ch2_bq[0]*/
+				0x00 0x7F 0x83 0xD8 0x0F 0x02 0xC3 0x92 0x00 0x7D 0xDB 0x4F 0x00 0xFD 0x3C 0x6E 0x0F 0x82 0xA0 0xD8 /*0x31---ch2_bq[1]*/
+				0x00 0x82 0xCE 0x97 0x0F 0x4C 0x87 0x81 0x00 0x5F 0x69 0x2D 0x00 0xB3 0x78 0x7F 0x0F 0x9D 0xC8 0x3B /*0x32---ch2_bq[2]*/
+				0x00 0x83 0x6B 0x4A 0x0F 0x7A 0x3D 0xA6 0x00 0x58 0x4D 0xED 0x00 0x85 0xC2 0x5A 0x0F 0xA4 0x46 0xC9 /*0x33---ch2_bq[3]*/
+				0x00 0x83 0x6B 0x4A 0x0F 0xAB 0xEA 0x5C 0x00 0x58 0x4D 0xED 0x00 0x54 0x15 0xA4 0x0F 0xA4 0x46 0xC9 /*0x34---ch2_bq[4]*/
+				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x35---ch2_bq[5]*/
+				0x00 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 /*0x36---ch2_bq[6]*/
+			>;
+			drc1_tko_table_0 = /bits/ 8 <
+				0xFD 0xA2 0x14 0x90 /*0x40---drc1_t*/
+				0x0F 0x81 0x47 0xAF /*0x41---drc1_k*/
+				0x00 0x08 0x42 0x10 /*0x42---drc1_o*/
+			>;
+			drc1_table_0 = /bits/ 8 <
+				0x00 0x05 0x39 0x47 0x00 0x7A 0xC6 0xB8 /*0x3A---drc1_ae*/
+				0x00 0x05 0x39 0x47 0x00 0x7A 0xC6 0xB8 /*0x3B---drc1_aa*/
+				0x00 0x00 0x00 0xF9 0x00 0x7F 0xFF 0x06 /*0x3C---drc1_ad*/
+			>;
+			drc1_tko_table_1 = /bits/ 8 <
 				0xFD 0xA2 0x14 0x90 /*0x40---drc1_t*/
 				0x0F 0x81 0x47 0xAF /*0x41---drc1_k*/
 				0x00 0x08 0x42 0x10 /*0x42---drc1_o*/
 			>;
-			drc1_table = /bits/ 8 <
+			drc1_table_1 = /bits/ 8 <
 				0x00 0x05 0x39 0x47 0x00 0x7A 0xC6 0xB8 /*0x3A---drc1_ae*/
 				0x00 0x05 0x39 0x47 0x00 0x7A 0xC6 0xB8 /*0x3B---drc1_aa*/
 				0x00 0x00 0x00 0xF9 0x00 0x7F 0xFF 0x06 /*0x3C---drc1_ad*/
diff --git a/sound/soc/aml/m8/aml_g9tv.c b/sound/soc/aml/m8/aml_g9tv.c
index e5607fcd8266..d9cebdcf26a4 100644
--- a/sound/soc/aml/m8/aml_g9tv.c
+++ b/sound/soc/aml/m8/aml_g9tv.c
@@ -488,50 +488,37 @@ static int get_audio_codec_i2c_info(struct device_node* p_node,
     err_out: return ret;
 }
 
-static int of_get_eq_pdata(struct tas57xx_platform_data *pdata,
-        struct device_node* p_node) {
-    int i, ret = 0, length = 0;
-    const char *str = NULL;
-    char *regs = NULL;
-
-    prob_priv.num_eq = of_property_count_strings(p_node, "eq_name");
-    if (prob_priv.num_eq <= 0) {
-        printk("no of eq_name config\n");
-        ret = -ENODEV;
-        goto exit;
+static char drc1_table[15] = "drc1_table_0";
+static char drc1_tko_table[20] = "drc1_tko_table_0";
+static char drc2_table[15] = "drc2_table_0";
+static char drc2_tko_table[20] = "drc2_tko_table_0";
+static int __init aml_drc_type_select(char *s) {
+    char *sel = s;
+    if (NULL != s) {
+        sprintf(drc1_table, "%s%s", "drc1_table_", sel);
+        sprintf(drc1_tko_table, "%s%s", "drc1_tko_table_", sel);
+        sprintf(drc2_table, "%s%s", "drc2_table_", sel);
+        sprintf(drc2_tko_table, "%s%s", "drc2_tko_table_", sel);
+        printk("select drc type: %s \n", sel);
     }
+    return 0;
+}
+__setup("amp_drc_type=", aml_drc_type_select);
 
-    pdata->num_eq_cfgs = prob_priv.num_eq;
-
-    prob_priv.eq_configs = kzalloc(
-            prob_priv.num_eq * sizeof(struct tas57xx_eq_cfg), GFP_KERNEL);
-
-    for (i = 0; i < prob_priv.num_eq; i++) {
-        ret = of_property_read_string_index(p_node, "eq_name", i, &str);
-
-        if (of_find_property(p_node, str, &length) == NULL) {
-            printk("%s fail to get of eq_table\n", __func__);
-            goto exit1;
-        }
-
-        regs = kzalloc(length * sizeof(char *), GFP_KERNEL);
-        if (!regs) {
-            printk("ERROR, NO enough mem for eq_table!\n");
-            return -ENOMEM;
-        }
-
-        ret = of_property_read_u8_array(p_node, str, regs, length);
-
-        strncpy(prob_priv.eq_configs[i].name, str, NAME_SIZE);
-        prob_priv.eq_configs[i].regs = regs;
+static char table[10] = "table_0";
+static char wall[10] = "wall_0";
+static char sub_bq_table[20] = "sub_bq_table_0";
+static int __init aml_eq_type_select(char *s) {
+    char *sel = s;
+    if (NULL != s) {
+        sprintf(table, "%s%s","table_", sel);
+        sprintf(wall, "%s%s","wall_", sel);
+        sprintf(sub_bq_table, "%s%s", "sub_bq_table_", sel);
+        printk("select eq type: %s \n", sel);
     }
-
-    pdata->eq_cfgs = prob_priv.eq_configs;
-
     return 0;
-    exit1: kfree(prob_priv.eq_configs);
-    exit: return ret;
 }
+__setup("amp_eq_type=", aml_eq_type_select);
 
 static void *alloc_and_get_data_array(struct device_node *p_node, char *str,
         int *lenp) {
@@ -563,12 +550,45 @@ static void *alloc_and_get_data_array(struct device_node *p_node, char *str,
     exit: return p;
 }
 
+static int of_get_eq_pdata(struct tas57xx_platform_data *pdata,
+        struct device_node* p_node) {
+    int length = 0;
+    char *regs = NULL;
+
+    prob_priv.num_eq = 2;
+    pdata->num_eq_cfgs = prob_priv.num_eq;
+
+    prob_priv.eq_configs = kzalloc(
+            prob_priv.num_eq * sizeof(struct tas57xx_eq_cfg), GFP_KERNEL);
+
+    regs = alloc_and_get_data_array(p_node, table, &length);
+    if (regs == NULL) {
+        kfree(prob_priv.eq_configs);
+        return -2;
+    }
+    strncpy(prob_priv.eq_configs[0].name, table, NAME_SIZE);
+    prob_priv.eq_configs[0].regs = regs;
+    prob_priv.eq_configs[0].reg_bytes= length;
+
+    regs = alloc_and_get_data_array(p_node, wall, &length);
+    if (regs == NULL) {
+        kfree(prob_priv.eq_configs);
+        return -2;
+    }
+    strncpy(prob_priv.eq_configs[1].name, wall, NAME_SIZE);
+    prob_priv.eq_configs[1].regs = regs;
+    prob_priv.eq_configs[1].reg_bytes= length;
+
+    pdata->eq_cfgs = prob_priv.eq_configs;
+    return 0;
+}
+
 static int of_get_subwoofer_pdata(struct tas57xx_platform_data *pdata,
         struct device_node *p_node) {
     int length = 0;
     char *pd = NULL;
 
-    pd = alloc_and_get_data_array(p_node, "sub_bq_table", &length);
+    pd = alloc_and_get_data_array(p_node, sub_bq_table, &length);
 
     if (pd == NULL) {
         return -1;
@@ -586,7 +606,7 @@ static int of_get_drc_pdata(struct tas57xx_platform_data *pdata,
     char *pd = NULL;
 
     //get drc1 table
-    pd = alloc_and_get_data_array(p_node, "drc1_table", &length);
+    pd = alloc_and_get_data_array(p_node, drc1_table, &length);
     if (pd == NULL) {
         return -2;
     }
@@ -597,7 +617,7 @@ static int of_get_drc_pdata(struct tas57xx_platform_data *pdata,
     length = 0;
     pd = NULL;
 
-    pd = alloc_and_get_data_array(p_node, "drc1_tko_table", &length);
+    pd = alloc_and_get_data_array(p_node, drc1_tko_table, &length);
     if (pd == NULL) {
         return -2;
     }
@@ -608,7 +628,7 @@ static int of_get_drc_pdata(struct tas57xx_platform_data *pdata,
     //get drc2 table
     length = 0;
     pd = NULL;
-    pd = alloc_and_get_data_array(p_node, "drc2_table", &length);
+    pd = alloc_and_get_data_array(p_node, drc2_table, &length);
     if (pd == NULL) {
         return -1;
     }
@@ -618,7 +638,7 @@ static int of_get_drc_pdata(struct tas57xx_platform_data *pdata,
     //get drc2 tko table
     length = 0;
     pd = NULL;
-    pd = alloc_and_get_data_array(p_node, "drc2_tko_table", &length);
+    pd = alloc_and_get_data_array(p_node, drc2_tko_table, &length);
     if (pd == NULL) {
         return -1;
     }
-- 
2.19.0

