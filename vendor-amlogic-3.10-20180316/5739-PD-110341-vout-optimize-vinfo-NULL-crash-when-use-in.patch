From 42bbfaa61ef6ec30ddb9774e50e47e63a86db933 Mon Sep 17 00:00:00 2001
From: Evoke Zhang <evoke.zhang@amlogic.com>
Date: Fri, 31 Jul 2015 17:48:49 +0800
Subject: [PATCH 5739/5965] PD#110341: vout: optimize vinfo NULL crash when use
 invalid vmode

Change-Id: Iea659267d94fa12917268c254c482355fc7ede45
---
 .../aml_logo/logo_display/output_dev_osd.c    | 10 ++++++----
 drivers/amlogic/display/lcd/aml_lcd_tv.c      | 18 +++++++++++-------
 drivers/amlogic/display/vout/vinfo.c          | 19 +++++++++++++++++++
 drivers/amlogic/display/vout/vout_notify.c    |  2 ++
 include/linux/amlogic/vout/vinfo.h            |  1 +
 5 files changed, 39 insertions(+), 11 deletions(-)
 mode change 100755 => 100644 drivers/amlogic/display/aml_logo/logo_display/output_dev_osd.c

diff --git a/drivers/amlogic/display/aml_logo/logo_display/output_dev_osd.c b/drivers/amlogic/display/aml_logo/logo_display/output_dev_osd.c
old mode 100755
new mode 100644
index 69b100b8e34c..d0f5c7e3e4d4
--- a/drivers/amlogic/display/aml_logo/logo_display/output_dev_osd.c
+++ b/drivers/amlogic/display/aml_logo/logo_display/output_dev_osd.c
@@ -262,9 +262,10 @@ static int osd0_init(logo_object_t *plogo)
 		if(plogo->para.loaded)
 		{
 			osd_init_hw(plogo->para.loaded);
-			if(plogo->para.vout_mode > VMODE_4K2K_SMPTE){
+			/*if(plogo->para.vout_mode > VMODE_4K2K_SMPTE){
 				plogo->para.vout_mode|=VMODE_LOGO_BIT_MASK;
-			}
+			}*/
+			plogo->para.vout_mode|=VMODE_LOGO_BIT_MASK;
 		}
 #ifdef CONFIG_AM_HDMI_ONLY
 		if(plogo->para.vout_mode > VMODE_4K2K_SMPTE) {
@@ -331,9 +332,10 @@ static int osd1_init(logo_object_t *plogo)
 		if(plogo->para.loaded)
 		{
 			osd_init_hw(plogo->para.loaded);
-			if(plogo->para.vout_mode > VMODE_4K2K_SMPTE){
+			/*if(plogo->para.vout_mode > VMODE_4K2K_SMPTE){
 				plogo->para.vout_mode|=VMODE_LOGO_BIT_MASK;
-			}
+			}*/
+			plogo->para.vout_mode|=VMODE_LOGO_BIT_MASK;
 		}
 #ifdef CONFIG_AM_HDMI_ONLY
 		if(plogo->para.vout_mode > VMODE_4K2K_SMPTE) {
diff --git a/drivers/amlogic/display/lcd/aml_lcd_tv.c b/drivers/amlogic/display/lcd/aml_lcd_tv.c
index 7ec74e657cc7..7f287246c5a9 100644
--- a/drivers/amlogic/display/lcd/aml_lcd_tv.c
+++ b/drivers/amlogic/display/lcd/aml_lcd_tv.c
@@ -171,18 +171,18 @@ static const vinfo_t lcd_info[] =
 		.aspect_ratio_den  = 9,
 		.sync_duration_num = 60,
 		.sync_duration_den = 1,
+		.viu_color_fmt = TVIN_RGB444,
 	},
 };
 
 static int get_lcd_vmode(vmode_t mode)
 {
-	int i, count = ARRAY_SIZE(lcd_info);
+	int i, count = ARRAY_SIZE(lcd_info) - 1;
 
 	for (i = 0; i < count; i++) {
 		if (mode == lcd_info[i].mode)
 			break;
 	}
-	printk("%s: %d\n", __func__, i);
 	return i;
 }
 
@@ -548,21 +548,21 @@ static const vinfo_t *lcd_get_current_info(void)
 	return &lcd_info[lcd_output_mode];
 }
 
-static unsigned int first_init = 0;
+/* static unsigned int first_init = 0; */
 static int lcd_set_current_vmode(vmode_t mode)
 {
 	unsigned int ret = 0;
-	printk("initcall %s mode = %d\n", __func__, (mode & VMODE_MODE_BIT_MASK));
 
 	mutex_lock(&lcd_vout_mutex);
+/*	printk("initcall %s mode = %d\n", __func__, (mode & VMODE_MODE_BIT_MASK)); */
 	lcd_output_mode = get_lcd_vmode(mode & VMODE_MODE_BIT_MASK);
-	if (first_init == 0) {
+/*	if (first_init == 0) {
 		first_init = 1;
 		printk("skip %s when first enter kernel\n", __func__);
 		mutex_unlock(&lcd_vout_mutex);
 		return ret;
 	}
-
+*/
 	if (!(mode & VMODE_LOGO_BIT_MASK)) {
 		switch (mode & VMODE_MODE_BIT_MASK) {
 		case VMODE_1080P:
@@ -599,8 +599,12 @@ static vmode_t lcd_validate_vmode(char *mode)
 
 static int lcd_vmode_is_supported(vmode_t mode)
 {
+	int m;
+
 	mode &= VMODE_MODE_BIT_MASK;
 	printk("initcall %s mode = %d\n", __func__, mode);
+	m = get_lcd_vmode(mode);
+	printk("lcd mode: %d(%s)\n", m, lcd_info[m].name);
 
 	switch (mode) {
 	case VMODE_1080P:
@@ -726,7 +730,7 @@ static int lcd_probe(struct platform_device *pdev)
 		TV_LCD_ERR("lcd_register_client fail!\n");
 	}
 
-	first_init = 0;
+	/* first_init = 0; */
 	TV_LCD_INFO("LCD probe ok\n");
 
 	return 0;
diff --git a/drivers/amlogic/display/vout/vinfo.c b/drivers/amlogic/display/vout/vinfo.c
index f8e728d2256d..57ca73ff52d0 100644
--- a/drivers/amlogic/display/vout/vinfo.c
+++ b/drivers/amlogic/display/vout/vinfo.c
@@ -104,6 +104,19 @@ static const char* vmode_name[]={
 	"invalid",
 };
 
+static const vinfo_t vinfo_invalid = {
+	.name              = "invalid",
+	.mode              = VMODE_INIT_NULL,
+	.width             = 1920,
+	.height            = 1080,
+	.field_height      = 1080,
+	.aspect_ratio_num  = 16,
+	.aspect_ratio_den  = 9,
+	.sync_duration_num = 60,
+	.sync_duration_den = 1,
+	.viu_color_fmt = TVIN_RGB444,
+};
+
 vmode_t vmode_name_to_mode(char *str)
 {
 	int i;
@@ -117,3 +130,9 @@ vmode_t vmode_name_to_mode(char *str)
 	return vmode;
 }
 
+const vinfo_t *get_invalid_vinfo(void)
+{
+	printk("[error]: invalid vinfo. current vmode is not supported!\n");
+	return &vinfo_invalid;
+}
+
diff --git a/drivers/amlogic/display/vout/vout_notify.c b/drivers/amlogic/display/vout/vout_notify.c
index 42dda7efb4a9..2ff82bce7bc6 100644
--- a/drivers/amlogic/display/vout/vout_notify.c
+++ b/drivers/amlogic/display/vout/vout_notify.c
@@ -67,6 +67,8 @@ const vinfo_t *get_current_vinfo(void)
 		BUG_ON(vout_module.curr_vout_server->op.get_vinfo == NULL);
 		info = vout_module.curr_vout_server->op.get_vinfo();
 	}
+	if (info == NULL)
+		info = get_invalid_vinfo();
 	mutex_unlock(&vout_mutex);
 
 	return info;
diff --git a/include/linux/amlogic/vout/vinfo.h b/include/linux/amlogic/vout/vinfo.h
index 12ebd2d6a2e9..f6fc854d3605 100644
--- a/include/linux/amlogic/vout/vinfo.h
+++ b/include/linux/amlogic/vout/vinfo.h
@@ -212,5 +212,6 @@ typedef struct tvinfo_s {
 } tvinfo_t;
 
 extern vmode_t vmode_name_to_mode(char *name);
+extern const vinfo_t *get_invalid_vinfo(void);
 
 #endif /* VINFO_H */
-- 
2.19.0

