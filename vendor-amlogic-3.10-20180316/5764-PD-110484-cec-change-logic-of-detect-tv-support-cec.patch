From f07c684e89e3b9d5b1573c7606b4743b155f012e Mon Sep 17 00:00:00 2001
From: Tao Zeng <tao.zeng@amlogic.com>
Date: Wed, 12 Aug 2015 10:54:43 +0800
Subject: [PATCH 5764/5965] PD#110484: cec: change logic of detect tv support
 cec

1. detect tv support cec even cec config is not enabled;
2. reduce some print messages if dectect tv support cec.

Change-Id: Ic2a9011eb940cb2a8b7648a9b9355aec4ce7ac33
---
 .../mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c   | 10 +++----
 .../mach-meson8b/hdmi_tx_hw/hdmi_tx_cec_hw.c  | 10 +++----
 drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c    | 27 +++++++++----------
 3 files changed, 23 insertions(+), 24 deletions(-)

diff --git a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c
index e2242deb8b15..b4f9a17df774 100755
--- a/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c
+++ b/arch/arm/mach-meson8/hdmi_tx_hw/hdmi_tx_cec_hw.c
@@ -58,7 +58,7 @@ void cec_enable_irq(void)
 {
     aml_set_reg32_bits(P_AO_CEC_INTR_MASKN, 0x6, 0, 3);
     cec_int_disable_flag = 0;
-    hdmi_print(INF, CEC "enable:int mask:0x%x\n", aml_read_reg32(P_AO_CEC_INTR_MASKN));
+    hdmi_print(LOW, CEC "enable:int mask:0x%x\n", aml_read_reg32(P_AO_CEC_INTR_MASKN));
 }
 
 
@@ -279,7 +279,7 @@ int cec_ll_tx_polling(const unsigned char *msg, unsigned char len)
         msleep(5);
     }
 
-    hdmi_print(INF, CEC "now tx_stat:%d\n", tx_stat);
+    hdmi_print(LOW, CEC "now tx_stat:%d\n", tx_stat);
     if (TX_ERROR == tx_stat) {
         hdmi_print(INF, CEC "tx polling:tx error!.\n");
         //aocec_wr_reg(CEC_TX_MSG_CMD, TX_ABORT);
@@ -297,7 +297,7 @@ int cec_ll_tx_polling(const unsigned char *msg, unsigned char len)
     aocec_wr_reg(CEC_TX_MSG_CMD, RX_ACK_CURRENT);
 
     j = 50;
-    hdmi_print(INF, CEC "start poll\n");
+    hdmi_print(LOW, CEC "start poll\n");
     while (j--) {
         ret = aocec_rd_reg(CEC_TX_MSG_STATUS);
         if (ret != TX_BUSY) {
@@ -307,7 +307,7 @@ int cec_ll_tx_polling(const unsigned char *msg, unsigned char len)
     }
 
     ret = aocec_rd_reg(CEC_TX_MSG_STATUS);
-    hdmi_print(INF, CEC "end poll, tx_stat:%x\n", ret);
+    hdmi_print(LOW, CEC "end poll, tx_stat:%x\n", ret);
     if (ret == TX_BUSY) {
         hdmi_print(INF, CEC "tx busy timeout\n");
         aocec_wr_reg(CEC_TX_MSG_CMD, TX_ABORT);
@@ -450,7 +450,7 @@ void cec_polling_online_dev(int log_addr, int *bool)
         cec_global_info.cec_node_info[log_addr].dev_type = cec_log_addr_to_dev_type(log_addr);
         *bool = 1;
     }
-    hdmi_print(INF, CEC "CEC: poll online logic device: 0x%x BOOL: %d\n", log_addr, *bool);
+    hdmi_print(LOW, CEC "CEC: poll online logic device: 0x%x BOOL: %d\n", log_addr, *bool);
 
 }
 
diff --git a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_cec_hw.c b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_cec_hw.c
index 555ca88543fa..67b0e326e663 100755
--- a/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_cec_hw.c
+++ b/arch/arm/mach-meson8b/hdmi_tx_hw/hdmi_tx_cec_hw.c
@@ -58,7 +58,7 @@ void cec_enable_irq(void)
 {
     aml_set_reg32_bits(P_AO_CEC_INTR_MASKN, 0x6, 0, 3);
     cec_int_disable_flag = 0;
-    hdmi_print(INF, CEC "enable:int mask:0x%x\n", aml_read_reg32(P_AO_CEC_INTR_MASKN));
+    hdmi_print(LOW, CEC "enable:int mask:0x%x\n", aml_read_reg32(P_AO_CEC_INTR_MASKN));
 }
 
 void gpiox_10_pin_mux_mask(void){
@@ -304,7 +304,7 @@ int cec_ll_tx_polling(const unsigned char *msg, unsigned char len)
         msleep(5);
     }
 
-    hdmi_print(INF, CEC "now tx_stat:%d\n", tx_stat);
+    hdmi_print(LOW, CEC "now tx_stat:%d\n", tx_stat);
     if (TX_ERROR == tx_stat) {
         hdmi_print(INF, CEC "tx polling:tx error!.\n");
         //aocec_wr_reg(CEC_TX_MSG_CMD, TX_ABORT);
@@ -322,7 +322,7 @@ int cec_ll_tx_polling(const unsigned char *msg, unsigned char len)
     aocec_wr_reg(CEC_TX_MSG_CMD, RX_ACK_CURRENT);
 
     j = 50;
-    hdmi_print(INF, CEC "start poll\n");
+    hdmi_print(LOW, CEC "start poll\n");
     while (j--) {
         ret = aocec_rd_reg(CEC_TX_MSG_STATUS);
         if (ret != TX_BUSY) {
@@ -332,7 +332,7 @@ int cec_ll_tx_polling(const unsigned char *msg, unsigned char len)
     }
 
     ret = aocec_rd_reg(CEC_TX_MSG_STATUS);
-    hdmi_print(INF, CEC "end poll, tx_stat:%x\n", ret);
+    hdmi_print(LOW, CEC "end poll, tx_stat:%x\n", ret);
     if (ret == TX_BUSY) {
         hdmi_print(INF, CEC "tx busy timeout\n");
         aocec_wr_reg(CEC_TX_MSG_CMD, TX_ABORT);
@@ -475,7 +475,7 @@ void cec_polling_online_dev(int log_addr, int *bool)
         cec_global_info.cec_node_info[log_addr].dev_type = cec_log_addr_to_dev_type(log_addr);
         *bool = 1;
     }
-    hdmi_print(INF, CEC "CEC: poll online logic device: 0x%x BOOL: %d\n", log_addr, *bool);
+    hdmi_print(LOW, CEC "CEC: poll online logic device: 0x%x BOOL: %d\n", log_addr, *bool);
 
 }
 
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
index 5a672daead32..8d411f9924cd 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
@@ -254,9 +254,11 @@ static int detect_tv_support_cec(unsigned addr)
     unsigned int ret = 0;
     unsigned char msg[1];
     msg[0] = (addr << 4) | 0x0;	/* 0x0, TV's root address */
+    cec_msg_dbg_en = 0;
     cec_polling_online_dev(msg[0], &ret);
-    hdmi_print(INF, CEC "TV %s support CEC\n", ret ? "is" : "not");
+    hdmi_print(LOW, CEC "TV %s support CEC\n", ret ? "is" : "not");
     hdmitx_device->tv_cec_support = ret;
+    cec_msg_dbg_en = 1;
     return hdmitx_device->tv_cec_support;
 }
 
@@ -278,10 +280,6 @@ int cec_node_init(hdmitx_dev_t* hdmitx_device)
         hdmi_print(INF, CEC "CEC not ready\n");
         return -1;
     }
-    else
-    {
-        hdmi_print(INF, CEC "CEC node init\n");
-    }
 
     if (hdmitx_device->config_data.vend_data)
     {
@@ -310,9 +308,6 @@ int cec_node_init(hdmitx_dev_t* hdmitx_device)
         vendor_id = (vend_data->vendor_id ) & 0xffffff;
     }
 
-    if (!(hdmitx_device->cec_func_config & (1 << CEC_FUNC_MSAK)))
-        return -1;
-
     hdmi_print(INF, CEC "cec_func_config: 0x%x; P_AO_DEBUG_REG0:0x%x\n", hdmitx_device->cec_func_config, aml_read_reg32(P_AO_DEBUG_REG0));
 #if MESON_CPU_TYPE == MESON_CPU_TYPE_MESON6
     aml_set_reg32_bits(P_PERIPHS_PIN_MUX_1, 1, 25, 1);
@@ -349,6 +344,9 @@ int cec_node_init(hdmitx_dev_t* hdmitx_device)
     if (!(hdmitx_device->tv_cec_support) && (!detect_tv_support_cec(0xE)))
         return -1;
 
+    if (!(hdmitx_device->cec_func_config & (1 << CEC_FUNC_MSAK)))
+        return -1;
+
     for (i = 0; i < 3; i++)
     {
         hdmi_print(INF, CEC "CEC: start poll dev\n");
@@ -485,12 +483,6 @@ static void cec_task(struct work_struct *work)
 
     hdmitx_device = container_of(work, hdmitx_dev_t, cec_work.work);
     dwork = &hdmitx_device->cec_work;
-    /*
-     * do not process cec task if not enabled
-     */
-    if (!(hdmitx_device->cec_func_config & (1 << CEC_FUNC_MSAK)))
-        return;
-
     /*
      * some tv can't be ping OK if it's CEC funtion is disabled by
      * TV settings, but when CEC function is reopened, we should
@@ -506,6 +498,13 @@ static void cec_task(struct work_struct *work)
             return;
         }
     }
+
+    /*
+     * do not process cec task if not enabled
+     */
+    if (!(hdmitx_device->cec_func_config & (1 << CEC_FUNC_MSAK)))
+        return;
+
     cec_isr_post_process();
     if (!cec_late_check_rx_buffer())
         queue_delayed_work(cec_workqueue, dwork, CEC_FRAME_DELAY);
-- 
2.19.0

