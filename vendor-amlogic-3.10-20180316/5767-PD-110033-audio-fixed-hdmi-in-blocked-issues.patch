From 8ff4eeeb42f248dcab3b8c94e23008ae7f172e7e Mon Sep 17 00:00:00 2001
From: Zhe Wang <zhe.wang@amlogic.com>
Date: Fri, 14 Aug 2015 15:50:32 +0800
Subject: [PATCH 5767/5965] PD#110033: audio: fixed hdmi-in blocked issues

when no audio data input, HDMI-in maybe blocked by alsa

Change-Id: I0907879ea71542ccb8b0ea1356a0b937ba572284
---
 sound/soc/aml/m8/aml_i2s.c        | 5 ++++-
 sound/soc/codecs/aml_pmu4_codec.c | 2 +-
 2 files changed, 5 insertions(+), 2 deletions(-)
 mode change 100755 => 100644 sound/soc/codecs/aml_pmu4_codec.c

diff --git a/sound/soc/aml/m8/aml_i2s.c b/sound/soc/aml/m8/aml_i2s.c
index eefbabfa66c8..b628b0214ab0 100644
--- a/sound/soc/aml/m8/aml_i2s.c
+++ b/sound/soc/aml/m8/aml_i2s.c
@@ -815,6 +815,7 @@ static int aml_i2s_copy_capture(struct snd_pcm_runtime *runtime, int channel,
     int res = 0, n = 0, i = 0, j = 0, size = 0;
     unsigned int t1, t2;
     unsigned char r_shift = 8;
+    int i2s_hw_ptr_move = 1;
     struct aml_runtime_data *prtd = runtime->private_data;
     audio_stream_t *s = &prtd->s;
     char *hwbuf = runtime->dma_area + frames_to_bytes(runtime, pos) * 2;
@@ -825,6 +826,7 @@ static int aml_i2s_copy_capture(struct snd_pcm_runtime *runtime, int channel,
         unsigned int buffersize = (unsigned int)runtime->buffer_size * 8; //framesize*8
         unsigned int hw_ptr = aml_get_in_wr_ptr();
         unsigned int alsa_read_ptr = frames_to_bytes(runtime, pos) * 2;
+        i2s_hw_ptr_move = (s->last_ptr != hw_ptr);
         size = (buffersize + hw_ptr - alsa_read_ptr) % buffersize;
     }
     if (s->device_type == AML_AUDIO_SPDIFIN) { //spdif in
@@ -834,7 +836,7 @@ static int aml_i2s_copy_capture(struct snd_pcm_runtime *runtime, int channel,
     tfrom = (unsigned int *)hwbuf;  // 32bit buffer
     n = frames_to_bytes(runtime, count);
     // for low latency amaudio2 mode, check the hw ptr overrun  state machine
-    if (size < 2 * n && s->device_type == AML_AUDIO_I2SIN && amaudio2_enable) {
+    if (size < 2 * n && s->device_type == AML_AUDIO_I2SIN && amaudio2_enable && i2s_hw_ptr_move) {
         printk("Alsa ptr is too close to HW ptr, Reset ALSA!\n");
         return -EPIPE;
     }
@@ -858,6 +860,7 @@ static int aml_i2s_copy_capture(struct snd_pcm_runtime *runtime, int channel,
                 left += 8;
                 right += 8;
             }
+            memset(hwbuf,0,n * 2);
         }
     }
     res = copy_to_user(buf, ubuf, n);
diff --git a/sound/soc/codecs/aml_pmu4_codec.c b/sound/soc/codecs/aml_pmu4_codec.c
old mode 100755
new mode 100644
index ca048b3a2376..c749ff5e1e6f
--- a/sound/soc/codecs/aml_pmu4_codec.c
+++ b/sound/soc/codecs/aml_pmu4_codec.c
@@ -39,7 +39,7 @@ struct pmu4_audio_init_reg {
 static struct pmu4_audio_init_reg init_list[] = {
     {PMU4_BLOCK_ENABLE    , 0xBc06}, // 
     {PMU4_AUDIO_CONFIG    , 0x3400}, //
-    {PMU4_PGA_IN_CONFIG   , 0x2525}, // ALI1,0dB;AR1,0dB
+    {PMU4_PGA_IN_CONFIG   , 0x2929}, // ALI1,0dB;AR1,0dB
     {PMU4_ADC_VOL_CTR     , 0x5050}, // 0dB
     {PMU4_DAC_SOFT_MUTE   , 0x0000}, //
     {PMU4_DAC_VOL_CTR     , 0xFFFF}, // 0dB
-- 
2.19.0

