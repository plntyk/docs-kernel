From 64eaac2eb8564ed5d65cdef6568856d69a3c6770 Mon Sep 17 00:00:00 2001
From: Jian Wang <jian.wang@amlogic.com>
Date: Wed, 16 Sep 2015 23:06:07 -0400
Subject: [PATCH 5844/5965] PD#112652: amvideocap: TV use cma buf instead of
 reserved buf

Change-Id: I942ff8b88abdaffcddb81e81321d0e532aa67324
---
 arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd  | 14 +++-
 .../boot/dts/amlogic/mesong9tv_n300_15g.dtd   | 14 +++-
 .../boot/dts/amlogic/mesong9tv_n300_1g.dtd    | 14 +++-
 drivers/amlogic/amports/amvideocap.c          | 66 ++++++++++++++++---
 4 files changed, 93 insertions(+), 15 deletions(-)

diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd
index 26b75ef564c0..6f3ed1aaa269 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd
@@ -127,6 +127,13 @@
 			linux,contiguous-region;
 			reg = <0x00000000 0x00a00000>;
 		};
+
+		cma_amvideocap: region@6 {
+			region_name = "cma_amvideocap";
+			linux,contiguous-region;
+			reg = <0x00000000 0x00800000>;
+		};
+
 	};
 
 
@@ -990,8 +997,11 @@
 		compatible = "amlogic,amvideocap";
 		dev_name = "amvideocap.0";
 		status = "okay";
-		reserve-memory = <0x00800000>;//1920*1088*4
-		reserve-iomap = "true";
+		//reserve-memory = <0x00800000>;//1920*1088*4
+		//reserve-iomap = "true";
+		max_size = <8>;//8M
+		linux,contiguous-region = <&cma_amvideocap>;
+
 	};
 
 
diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n300_15g.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n300_15g.dtd
index 91ffcd0d978a..e0f4dcd115a6 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n300_15g.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n300_15g.dtd
@@ -127,6 +127,13 @@
 			linux,contiguous-region;
 			reg = <0x00000000 0x00a00000>;
 		};
+
+		cma_amvideocap: region@6 {
+			region_name = "cma_amvideocap";
+			linux,contiguous-region;
+			reg = <0x00000000 0x00800000>;
+		};
+
 	};
 
 
@@ -977,8 +984,11 @@
 		compatible = "amlogic,amvideocap";
 		dev_name = "amvideocap.0";
 		status = "okay";
-		reserve-memory = <0x00800000>;//1920*1088*4
-		reserve-iomap = "true";
+		//reserve-memory = <0x00800000>;//1920*1088*4
+		//reserve-iomap = "true";
+		max_size = <8>;//8M
+		linux,contiguous-region = <&cma_amvideocap>;
+
 	};
 
 
diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n300_1g.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n300_1g.dtd
index 1d1829ff4faf..f6ce0a6f69cd 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n300_1g.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n300_1g.dtd
@@ -127,6 +127,13 @@
 			linux,contiguous-region;
 			reg = <0x00000000 0x00a00000>;
 		};
+
+		cma_amvideocap: region@6 {
+			region_name = "cma_amvideocap";
+			linux,contiguous-region;
+			reg = <0x00000000 0x00800000>;
+		};
+
 	};
 
 
@@ -979,8 +986,11 @@
 		compatible = "amlogic,amvideocap";
 		dev_name = "amvideocap.0";
 		status = "okay";
-		reserve-memory = <0x00800000>;//1920*1088*4
-		reserve-iomap = "true";
+		//reserve-memory = <0x00800000>;//1920*1088*4
+		//reserve-iomap = "true";
+		max_size = <8>;//8M
+		linux,contiguous-region = <&cma_amvideocap>;
+
 	};
 
 
diff --git a/drivers/amlogic/amports/amvideocap.c b/drivers/amlogic/amports/amvideocap.c
index a89d74d30b56..1ad09c9899bc 100755
--- a/drivers/amlogic/amports/amvideocap.c
+++ b/drivers/amlogic/amports/amvideocap.c
@@ -47,6 +47,10 @@
 #include <linux/of.h>
 #include <linux/of_fdt.h>
 
+#include <linux/dma-contiguous.h>
+#include <linux/dma-mapping.h>
+#include <linux/sizes.h>
+
 #include "amports_priv.h"
 #include "amvideocap_priv.h"
 #if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON6
@@ -90,10 +94,16 @@ static struct amvideocap_global_data amvideocap_gdata;
 static inline struct amvideocap_global_data *getgctrl(void) {
     return &amvideocap_gdata;
 }
+
+static struct platform_device *amvideocap_pdev = NULL;
+static int use_cma = 0;
+static int cma_max_size = 0;
+static struct page *cma_page;
 #define gLOCK() mutex_lock(&(getgctrl()->lock))
 #define gUNLOCK() mutex_unlock(&(getgctrl()->lock))
 #define gLOCKINIT() mutex_init(&(getgctrl()->lock))
 
+
 /*********************************************************
  * /dev/amvideo APIs
  *********************************************************/
@@ -101,6 +111,14 @@ static int amvideocap_open(struct inode *inode, struct file *file)
 {
     struct amvideocap_private *priv;
     gLOCK();
+#ifdef CONFIG_CMA
+    if (use_cma && amvideocap_pdev) {
+        unsigned long phybufaddr;
+        cma_page = dma_alloc_from_contiguous(&(amvideocap_pdev->dev), (cma_max_size * SZ_1M) >> PAGE_SHIFT, 0);
+        phybufaddr = page_to_phys(cma_page);
+        amvideocap_register_memory((unsigned char *)phybufaddr, cma_max_size * SZ_1M);
+    }
+#endif
     if (!getgctrl()->phyaddr) {
         printk("Error,no memory have register for amvideocap\n");
         return -ENOMEM;
@@ -141,6 +159,11 @@ static int amvideocap_release(struct inode *inode, struct file *file)
 {
     struct amvideocap_private *priv = file->private_data;
     kfree(priv);
+#ifdef CONFIG_CMA
+    if (use_cma && amvideocap_pdev) {
+        dma_release_from_contiguous(&(amvideocap_pdev->dev), cma_page, (cma_max_size * SZ_1M)>>PAGE_SHIFT);
+    }
+#endif
     gLOCK();
     getgctrl()->opened_cnt--;
     gUNLOCK();
@@ -739,7 +762,7 @@ static struct class amvideocap_class = {
 };
 s32 amvideocap_register_memory(unsigned char *phybufaddr, int phybufsize)
 {
-    printk("amvideocap_register_memory %p %d\n", phybufaddr, phybufsize);
+    printk("amvideocap_register_memory %p %x\n", phybufaddr, phybufsize);
     getgctrl()->phyaddr = (unsigned long)phybufaddr;
     getgctrl()->size = (unsigned long)phybufsize;
     getgctrl()->vaddr = 0;
@@ -813,17 +836,42 @@ static int amvideocap_probe(struct platform_device *pdev)
     struct resource *mem;
     int idx;
 
-    mem = &memobj;
+#ifdef CONFIG_CMA
+    char buf[32];
+    u32 value;
+    int ret;
+#endif
+
     printk("amvideocap_probe,%s\n", pdev->dev.of_node->name);
 
-    idx = find_reserve_block(pdev->dev.of_node->name,0);
-    if(idx < 0){
-	    printk("amvideocap memory resource undefined.\n");
-        return -EFAULT;
+#ifdef CONFIG_CMA
+    snprintf(buf, sizeof(buf), "max_size");
+    ret = of_property_read_u32(pdev->dev.of_node, buf, &value);
+    if (ret < 0) {
+        printk("cma size undefined.\n");
+        use_cma = 0;
+    } else {
+        printk("use cma buf.\n");
+        mem = &memobj;
+        mem->start = 0;
+        buf_size = 0;
+        cma_max_size = value;
+        amvideocap_pdev = pdev;
+        use_cma = 1;
+    }
+#endif
+
+    if (!use_cma) {
+        mem = &memobj;
+        idx = find_reserve_block(pdev->dev.of_node->name,0);
+        if (idx < 0) {
+            printk("amvideocap memory resource undefined.\n");
+            return -EFAULT;
+        }
+        mem->start = (phys_addr_t)get_reserve_block_addr(idx);
+        mem->end = mem->start+ (phys_addr_t)get_reserve_block_size(idx)-1;
+        buf_size = mem->end - mem->start + 1;
     }
-    mem->start = (phys_addr_t)get_reserve_block_addr(idx);
-    mem->end = mem->start+ (phys_addr_t)get_reserve_block_size(idx)-1;
-    buf_size = mem->end - mem->start + 1;
     amvideocap_dev_register((unsigned char *)mem->start,buf_size);
     return 0;
 }
-- 
2.19.0

