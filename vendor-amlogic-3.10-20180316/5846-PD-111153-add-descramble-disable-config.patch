From e05944951f90f91146f1b74acfc5aa2542746192 Mon Sep 17 00:00:00 2001
From: Pengfei Liu <pengfei.liu@amlogic.com>
Date: Mon, 17 Aug 2015 20:36:25 -0400
Subject: [PATCH 5846/5965] PD#111153: add descramble disable config

Change-Id: Idd0bc8818b7e9113e8cc9f635d6df0b374a27eab
---
 drivers/amlogic/dvb_tv/Kconfig   |  7 +++++++
 drivers/amlogic/dvb_tv/aml_dmx.c |  6 ++++++
 drivers/amlogic/dvb_tv/aml_dvb.c | 16 ++++++++++++++++
 3 files changed, 29 insertions(+)

diff --git a/drivers/amlogic/dvb_tv/Kconfig b/drivers/amlogic/dvb_tv/Kconfig
index 9bcbcb7fc58a..211365defc66 100755
--- a/drivers/amlogic/dvb_tv/Kconfig
+++ b/drivers/amlogic/dvb_tv/Kconfig
@@ -289,5 +289,12 @@ config AM_MXL661
 	depends on AM_DVB
 	help
 		Select to enable MXL661 tuner driver.
+
+config AM_DISABLE_DSC
+	bool "disable the descrambler"
+	default n
+	depends on AM_DVB
+	help
+		Select to disable descrambler driver
 endmenu
 
diff --git a/drivers/amlogic/dvb_tv/aml_dmx.c b/drivers/amlogic/dvb_tv/aml_dmx.c
index ea07a9b1026d..e071c35165e9 100755
--- a/drivers/amlogic/dvb_tv/aml_dmx.c
+++ b/drivers/amlogic/dvb_tv/aml_dmx.c
@@ -1111,6 +1111,7 @@ static void stb_enable(struct aml_dvb *dvb)
 		(fec_clk<<FEC_FILE_CLK_DIV));
 }
 
+#ifndef CONFIG_AM_DISABLE_DSC
 int dsc_set_pid(struct aml_dsc *dsc, int pid)
 {
 	u32 data;
@@ -1160,6 +1161,7 @@ int dsc_set_key(struct aml_dsc *dsc, int type, u8 *key)
 			k0, k1, k2, k3);
 	return 0;
 }
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 
 /*Set section buffer*/
 static int dmx_alloc_sec_buffer(struct aml_dmx *dmx)
@@ -2225,6 +2227,7 @@ void dmx_reset_hw_ex(struct aml_dvb *dvb, int reset_irq)
 		dmx_enable(&dvb->dmx[id]);
 	}
 
+#ifndef CONFIG_AM_DISABLE_DSC
 	for(id=0; id<DSC_COUNT; id++)
 	{
 		struct aml_dsc *dsc = &dvb->dsc[id];
@@ -2239,6 +2242,7 @@ void dmx_reset_hw_ex(struct aml_dvb *dvb, int reset_irq)
 				dsc_set_key(dsc, 1, dsc->odd);
 		}
 	}
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 #ifdef ENABLE_SEC_BUFF_WATCHDOG
 	if(reset_irq){
 		mod_timer(&dvb->watchdog_timer, jiffies+msecs_to_jiffies(WATCHDOG_TIMER));
@@ -2385,6 +2389,7 @@ void dmx_reset_dmx_hw_ex_unlock(struct aml_dvb *dvb, struct aml_dmx *dmx, int re
 	}
 
 	{
+	#ifndef CONFIG_AM_DISABLE_DSC
 		int id;
 		for(id=0; id<DSC_COUNT; id++)
 		{
@@ -2400,6 +2405,7 @@ void dmx_reset_dmx_hw_ex_unlock(struct aml_dvb *dvb, struct aml_dmx *dmx, int re
 					dsc_set_key(dsc, 1, dsc->odd);
 			}
 		}
+	#endif // #ifndef CONFIG_AM_DISABLE_DSC
 	}
 #ifdef ENABLE_SEC_BUFF_WATCHDOG
 	if(reset_irq){
diff --git a/drivers/amlogic/dvb_tv/aml_dvb.c b/drivers/amlogic/dvb_tv/aml_dvb.c
index ea79ea90f289..b7fcec5aa277 100755
--- a/drivers/amlogic/dvb_tv/aml_dvb.c
+++ b/drivers/amlogic/dvb_tv/aml_dvb.c
@@ -238,6 +238,7 @@ struct aml_dvb* aml_get_dvb_device(void)
 
 EXPORT_SYMBOL(aml_get_dvb_device);
 
+#ifndef CONFIG_AM_DISABLE_DSC
 static int dvb_dsc_open(struct inode *inode, struct file *file)
 {
 	struct dvb_device *dvbdev = file->private_data;
@@ -246,6 +247,8 @@ static int dvb_dsc_open(struct inode *inode, struct file *file)
 	int id;
 	unsigned long flags;
 
+	pr_dbg("enable dsc");
+
 	spin_lock_irqsave(&dvb->slock, flags);
 
 	for(id=0; id<DSC_COUNT; id++) {
@@ -338,6 +341,7 @@ static int dvb_dsc_release(struct inode *inode, struct file *file)
 
 	return 0;
 }
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 
 static int aml_dvb_asyncfifo_init(struct aml_dvb *advb, struct aml_asyncfifo *asyncfifo, int id)
 {
@@ -773,6 +777,7 @@ static ssize_t dvr##i##_store_mode(struct class *class,  struct class_attribute
 	DEMUX_CHANNEL_ACTIVITY_FUNC_DECL(2)
 #endif
 
+#ifndef CONFIG_AM_DISABLE_DSC
 /*Show free descramblers count*/
 static ssize_t dsc_show_free_dscs(struct class *class,  struct class_attribute *attr,char *buf)
 {
@@ -792,6 +797,7 @@ static ssize_t dsc_show_free_dscs(struct class *class,  struct class_attribute *
 	ret = sprintf(buf, "%d\n", count);
 	return ret;
 }
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 
 /*Show the async fifo source*/
 #define ASYNCFIFO_SOURCE_FUNC_DECL(i)  \
@@ -1053,6 +1059,7 @@ static ssize_t demux##i##_reset_store(struct class *class,  struct class_attribu
 	DEMUX_RESET_FUNC_DECL(2)
 #endif
 
+#ifndef CONFIG_AM_DISABLE_DSC
 static struct file_operations dvb_dsc_fops = {
         .owner          = THIS_MODULE,
         .read           = NULL,
@@ -1069,6 +1076,7 @@ static struct dvb_device dvbdev_dsc = {
         .writers        = DSC_COUNT,
         .fops           = &dvb_dsc_fops,
 };
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 
 static struct class_attribute aml_stb_class_attrs[] = {
 	__ATTR(hw_setting, S_IRUGO|S_IWUSR, stb_show_hw_setting, stb_store_hw_setting),
@@ -1133,7 +1141,9 @@ static struct class_attribute aml_stb_class_attrs[] = {
 	__ATTR(audio_pts,  S_IRUGO | S_IWUSR | S_IWGRP, demux_show_audio_pts, NULL),
 	__ATTR(first_video_pts,  S_IRUGO | S_IWUSR, demux_show_first_video_pts, NULL),
 	__ATTR(first_audio_pts,  S_IRUGO | S_IWUSR, demux_show_first_audio_pts, NULL),
+#ifndef CONFIG_AM_DISABLE_DSC
 	__ATTR(free_dscs,  S_IRUGO | S_IWUSR, dsc_show_free_dscs, NULL),
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 
 #define DMX_RESET_ATTR_DECL(i)\
 		__ATTR(demux##i##_reset,  S_IRUGO | S_IWUSR, NULL, demux##i##_reset_store)
@@ -1272,12 +1282,14 @@ static int aml_dvb_probe(struct platform_device *pdev)
 		advb->dsc[i].pid = 0x1fff;
 	}
 
+#ifndef CONFIG_AM_DISABLE_DSC
 	/*Register descrambler device*/
 	ret = dvb_register_device(&advb->dvb_adapter, &advb->dsc_dev,
                                    &dvbdev_dsc, advb, DVB_DEVICE_DSC);
 	if(ret<0) {
 		goto error;
 	}
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 
 	/*Init the async fifos*/
 	for (i=0; i<ASYNCFIFO_COUNT; i++) {
@@ -1303,9 +1315,11 @@ error:
 		}
 	}
 
+#ifndef CONFIG_AM_DISABLE_DSC
 	if(advb->dsc_dev) {
 		dvb_unregister_device(advb->dsc_dev);
 	}
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 
 	for (i=0; i<DMX_DEV_COUNT; i++) {
 		if (advb->dmx[i].id!=-1) {
@@ -1327,7 +1341,9 @@ static int aml_dvb_remove(struct platform_device *pdev)
 	aml_unregist_dmx_class();
 	class_unregister(&aml_stb_class);
 
+#ifndef CONFIG_AM_DISABLE_DSC
 	dvb_unregister_device(advb->dsc_dev);
+#endif // #ifndef CONFIG_AM_DISABLE_DSC
 
 	for (i=0; i<DMX_DEV_COUNT; i++) {
 		aml_dvb_dmx_release(advb, &advb->dmx[i]);
-- 
2.19.0

