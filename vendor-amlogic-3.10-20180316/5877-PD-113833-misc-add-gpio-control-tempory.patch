From 4142bb4751b04b4716ac59daec28d9d6a0a5a933 Mon Sep 17 00:00:00 2001
From: Yukang Zhong <yukang.zhong@amlogic.com>
Date: Mon, 12 Oct 2015 23:02:03 +0800
Subject: [PATCH 5877/5965] PD#113833: misc: add gpio control tempory

This code is added to eeprom module temproy.
Should be moved to some proper module or a new module.

Change-Id: Ibedd0d1282e537d5db32817270f383f0ade4e99d
---
 drivers/misc/eeprom/at24.c | 37 ++++++++++++++++++++++++++++++++++++-
 1 file changed, 36 insertions(+), 1 deletion(-)

diff --git a/drivers/misc/eeprom/at24.c b/drivers/misc/eeprom/at24.c
index 02aec8b68d50..a15264301dee 100644
--- a/drivers/misc/eeprom/at24.c
+++ b/drivers/misc/eeprom/at24.c
@@ -133,7 +133,7 @@ MODULE_DEVICE_TABLE(i2c, at24_ids);
 
 #define MODULE_NAME  "at24"
 static struct at24_data *gp_at24;
-
+static int audio_pin;
 static ssize_t at24_wp_show(struct class *class, struct class_attribute *attr, char *buf)
 {
     return sprintf(buf, "%d\n", amlogic_get_value(gp_at24->chip.wp_port,MODULE_NAME));
@@ -159,10 +159,36 @@ static ssize_t at24_wp_store(struct class *class,struct class_attribute *attr, c
     return count;
 }
 
+static ssize_t gpioy4_show(struct class *class,
+struct class_attribute *attr, char *buf)
+{
+	return sprintf(buf, "%d\n", amlogic_get_value(audio_pin, MODULE_NAME));
+}
+static ssize_t gpioy4_store(struct class *class ,
+struct class_attribute *attr, const char *buf, size_t count)
+{
+	u8 wp;
+	sscanf(buf, "%x", (int *)&wp);
+
+	mutex_lock(&gp_at24->lock);
+	if (wp == 0)
+		amlogic_gpio_direction_output(audio_pin, 0 , MODULE_NAME);
+	else if (wp == 1)
+		amlogic_gpio_direction_output(audio_pin, 1 , MODULE_NAME);
+	else
+		pr_info("only support 1 or 0\n");
+
+	mutex_unlock(&gp_at24->lock);
+return count;
+}
+
 
 struct class *at24_class;
 static CLASS_ATTR(at24_wp,S_IWUSR | S_IRUGO, at24_wp_show, at24_wp_store);
 
+struct class *gpioy4_class;
+static CLASS_ATTR(gpioy4, S_IWUSR | S_IRUGO, gpioy4_show, gpioy4_store);
+
 /*eeprom protect gpio enable*/
 void at24_wp_enable(struct at24_platform_data *chip)
 {
@@ -753,6 +779,14 @@ static int at24_probe(struct i2c_client *client, const struct i2c_device_id *id)
 	at24_class = class_create(THIS_MODULE,"at24_wp");
 	err = class_create_file(at24_class,&class_attr_at24_wp);
 
+
+	gpioy4_class = class_create(THIS_MODULE , "gpioy4");
+	err = class_create_file(gpioy4_class , &class_attr_gpioy4);
+
+	audio_pin = amlogic_gpio_name_map_num("GPIOY_4");
+	amlogic_gpio_request(audio_pin , MODULE_NAME);
+
+
 	return 0;
 
 err_clients:
@@ -780,6 +814,7 @@ static int at24_remove(struct i2c_client *client)
 		i2c_unregister_device(at24->client[i]);
 
 	class_destroy(at24_class);
+	class_destroy(gpioy4_class);
 
 	kfree(at24->writebuf);
 	kfree(at24);
-- 
2.19.0

