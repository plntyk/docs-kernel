From af0d0065c6f67f767eed2c40497c1438fb9ec228 Mon Sep 17 00:00:00 2001
From: Pengguang Zhu <pengguang.zhu@amlogic.com>
Date: Tue, 27 Oct 2015 20:07:33 +0800
Subject: [PATCH 5899/5965] PD#114326: net: eth: remove read mac from nand.

Change-Id: I0a7338488f41b42a20f03f62dac43b6c5a85cdb8
---
 drivers/amlogic/ethernet/am_net8218.c         | 78 -------------------
 .../ethernet/stmicro/stmmac/stmmac_platform.c | 33 +-------
 2 files changed, 4 insertions(+), 107 deletions(-)

diff --git a/drivers/amlogic/ethernet/am_net8218.c b/drivers/amlogic/ethernet/am_net8218.c
index 15c9810b23dd..c03e7cd75925 100755
--- a/drivers/amlogic/ethernet/am_net8218.c
+++ b/drivers/amlogic/ethernet/am_net8218.c
@@ -886,41 +886,6 @@ static int mac_pmt_enable(unsigned int enable)
 	return 0;
 }
 
-/* --------------------------------------------------------------------------*/
-/**
- * @brief  phy_reset
- *
- * @param  ndev
- *
- * @return
- */
-/* --------------------------------------------------------------------------*/
-//#undef CONFIG_AML_NAND_KEY
-#if defined (CONFIG_AML_NAND_KEY) || defined (CONFIG_SECURITYKEY)
-extern int get_aml_key_kernel(const char* key_name, unsigned char* data, int ascii_flag);
-extern int extenal_api_key_set_version(char *devvesion);
-static char print_buff[1025];
-void read_mac_from_nand(struct net_device *ndev)
-{
-	int ret;
-	u8 mac[ETH_ALEN];
-	char *endp;
-	int j;
-	ret = get_aml_key_kernel("mac", print_buff, 0);
-	extenal_api_key_set_version("auto");
-	printk("ret = %d\nprint_buff=%s\n", ret, print_buff);
-	if (ret >= 0) {
-		strcpy(ndev->dev_addr, print_buff);
-	for(j=0; j < ETH_ALEN; j++)
-	{
-		mac[j] = simple_strtol(&ndev->dev_addr[3 * j], &endp, 16);
-		printk("%d : %d\n", j, mac[j]);
-	}
-	memcpy(ndev->dev_addr, mac, ETH_ALEN);
-	}
-
-}
-#endif
 static int aml_mac_init(struct net_device *ndev)
 {
 	struct am_net_private *np = netdev_priv(ndev);
@@ -928,14 +893,6 @@ static int aml_mac_init(struct net_device *ndev)
 
 	writel(1, (void*)(np->base_addr + ETH_DMA_0_Bus_Mode));
 	writel(0x00100800,(void*)(np->base_addr + ETH_DMA_0_Bus_Mode));
-	printk("--1--write mac add to:");
-
-	data_dump(ndev->dev_addr, 6);
-#if defined (CONFIG_AML_NAND_KEY) || defined (CONFIG_SECURITYKEY)
-	read_mac_from_nand(ndev);
-#endif
-	printk("--2--write mac add to:");
-	data_dump(ndev->dev_addr, 6);
 	write_mac_addr(ndev, ndev->dev_addr);
 
 	val = 0xc80c |		//8<<8 | 8<<17; //tx and rx all 8bit mode;
@@ -1570,41 +1527,6 @@ static void tx_timeout(struct net_device *dev)
 	}
 }
 
-/* --------------------------------------------------------------------------*/
-/**
- * @brief  write_mac_addr
- *
- * @param  dev
- * @param  macaddr
- */
-/* --------------------------------------------------------------------------*/
-/*static void get_mac_from_nand(struct net_device *dev, char *macaddr)
-{
-	int ret;
-	int use_nand_mac=0;
-	u8 mac[ETH_ALEN];
-
-	extenal_api_key_set_version("nand3");
-	ret = get_aml_key_kernel("mac_wifi", print_buff, 0);
-	printk("ret = %d\nprint_buff=%s\n", ret, print_buff);
-	if (ret >= 0) {
-		strcpy(mac_addr, print_buff);
-	}
-	for(; j < ETH_ALEN; j++)
-		{
-		mac[j] = simple_strtol(&mac_addr[3 * j], &endp, 16);
-		printk("%d : %d\n", j, mac[j]);
-	}
-	memcpy(macaddr, mac, ETH_ALEN);
-}
-static void print_mac(char *macaddr)
-{
-	printk("write mac add to:");
-	data_dump(macaddr, 6);
-}*/
-
-
-
 static void write_mac_addr(struct net_device *dev, char *macaddr)
 {
 	struct am_net_private *np = netdev_priv(dev);
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
index bb65ee1803ca..079c8ff87c4b 100755
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
@@ -140,11 +140,6 @@ static int dwmac1000_validate_ucast_entries(int ucast_entries)
 	}
 	return x;
 }
-#if defined (CONFIG_AML_NAND_KEY) || defined (CONFIG_SECURITYKEY)
-extern int get_aml_key_kernel(const char* key_name, unsigned char* data, int ascii_flag);
-extern int extenal_api_key_set_version(char *devvesion);
-static char print_buff[1025];
-#endif
 static int stmmac_probe_config_dt(struct platform_device *pdev,
 				  struct plat_stmmacenet_data *plat,
 				  const char **mac)
@@ -152,10 +147,6 @@ static int stmmac_probe_config_dt(struct platform_device *pdev,
 	struct device_node *np = pdev->dev.of_node;
 	struct stmmac_dma_cfg *dma_cfg;
 	const struct of_device_id *device;
-#if defined (CONFIG_AML_NAND_KEY) || defined (CONFIG_SECURITYKEY)
-	int ret;
-	char *addr =NULL;
-#endif
 	if (!np)
 		return -ENODEV;
 
@@ -180,28 +171,12 @@ static int stmmac_probe_config_dt(struct platform_device *pdev,
 		plat->exit = data->exit;
 	}
 
-#if defined (CONFIG_AML_NAND_KEY) || defined (CONFIG_SECURITYKEY)
-	ret = get_aml_key_kernel("mac", print_buff, 0);
-	extenal_api_key_set_version("auto");
-	printk("ret = %d\nprint_buff=%s\n", ret, print_buff);
-	if (ret >= 0) {
-		strcpy(addr, print_buff);
-		*mac = addr;
-	}
-	else
-	{
-		if(g_mac_addr_setup){
-			*mac = DEFMAC;
-		}
-		else{
-			*mac = of_get_mac_address(np);
-		}
+	if (g_mac_addr_setup) {
+		*mac = DEFMAC;
+	} else {
+		*mac = of_get_mac_address(np);
 	}
 
-#else
-	
-	*mac = of_get_mac_address(np);
-#endif
 	plat->interface = of_get_phy_mode(np);
 
 	/* Get max speed of operation from device tree */
-- 
2.19.0

