From 0ccb0fb6dbeffd1419ffb760437113113f092091 Mon Sep 17 00:00:00 2001
From: Zhenfei Li <zhenfei.li@amlogic.com>
Date: Mon, 23 Nov 2015 19:41:48 +0800
Subject: [PATCH 5926/5965] PD#115662: vrtc: add vrtc driver to support suspend
 function add vrtc for n210 n300 n301

Change-Id: I3ba9d840ef3c8bd61e0cd26758e0a64e39375bc2
---
 arch/arm/boot/dts/amlogic/mesong9bb_n302.dtd  |   7 +
 arch/arm/boot/dts/amlogic/mesong9bb_n303.dtd  |   7 +
 arch/arm/boot/dts/amlogic/mesong9bb_n304.dtd  |   7 +
 arch/arm/boot/dts/amlogic/mesong9tv_n210.dtd  |  15 ++
 arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd  |  12 ++
 .../boot/dts/amlogic/mesong9tv_n300_15g.dtd   |  13 +-
 .../boot/dts/amlogic/mesong9tv_n300_1g.dtd    |  14 +-
 arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd  |  13 +-
 arch/arm/configs/mesong9tv_defconfig          |   2 +-
 drivers/amlogic/Kconfig                       |   1 +
 drivers/amlogic/Makefile                      |   2 +
 drivers/amlogic/vrtc/Kconfig                  |  11 ++
 drivers/amlogic/vrtc/Makefile                 |   4 +
 drivers/amlogic/vrtc/aml_vrtc.c               | 146 ++++++++++++++++++
 14 files changed, 250 insertions(+), 4 deletions(-)
 create mode 100644 drivers/amlogic/vrtc/Kconfig
 create mode 100644 drivers/amlogic/vrtc/Makefile
 create mode 100644 drivers/amlogic/vrtc/aml_vrtc.c

diff --git a/arch/arm/boot/dts/amlogic/mesong9bb_n302.dtd b/arch/arm/boot/dts/amlogic/mesong9bb_n302.dtd
index 8c43b22e5a9a..555e0bc14bcd 100644
--- a/arch/arm/boot/dts/amlogic/mesong9bb_n302.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9bb_n302.dtd
@@ -924,6 +924,13 @@
 		linux,contiguous-region = <&cma_tvafe>;
 	};
 
+	hdmirx {
+		compatible = "amlogic,hdmirx";
+		dev_name = "hdmirx";
+		status = "ok";
+		hdmirx_id = <0>;
+	};
+
 	amlvecm {
 		compatible = "amlogic,vecm";
 		dev_name = "aml_vecm";
diff --git a/arch/arm/boot/dts/amlogic/mesong9bb_n303.dtd b/arch/arm/boot/dts/amlogic/mesong9bb_n303.dtd
index eeb03ff28363..c44301b9e240 100644
--- a/arch/arm/boot/dts/amlogic/mesong9bb_n303.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9bb_n303.dtd
@@ -1044,6 +1044,13 @@
 		linux,contiguous-region = <&cma_tvafe>;
 	};
 
+	hdmirx {
+		compatible = "amlogic,hdmirx";
+		dev_name = "hdmirx";
+		status = "ok";
+		hdmirx_id = <0>;
+	};
+
 	amlvecm {
 		compatible = "amlogic,vecm";
 		dev_name = "aml_vecm";
diff --git a/arch/arm/boot/dts/amlogic/mesong9bb_n304.dtd b/arch/arm/boot/dts/amlogic/mesong9bb_n304.dtd
index 358fa9119cd5..3d81ff3aa3c0 100644
--- a/arch/arm/boot/dts/amlogic/mesong9bb_n304.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9bb_n304.dtd
@@ -907,6 +907,13 @@
 		linux,contiguous-region = <&cma_tvafe>;
 	};
 
+	hdmirx {
+		compatible = "amlogic,hdmirx";
+		dev_name = "hdmirx";
+		status = "ok";
+		hdmirx_id = <0>;
+	};
+
 	amlvecm {
 		compatible = "amlogic,vecm";
 		dev_name = "aml_vecm";
diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n210.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n210.dtd
index ff093aff8825..88d487c2d0f7 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n210.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n210.dtd
@@ -238,6 +238,11 @@
 		>;
 	};
 
+	rtc{
+		compatible = "amlogic, aml_vrtc";
+		alarm_reg_addr = <0xc8100008>;
+		status = "okay";
+	};
 
 
 /// ****************************************************************************
@@ -425,6 +430,16 @@ ethmac: ethernet@0xc9410000{
 			pwr_hpll_vdd_off = "";
 		};
 	};
+/// ***************************************************************************************
+///	-	PowerManager
+//$$ MODULE="PowerManager"
+//$$ DEVICE="amvenc_avc"
+//$$ L2 PROP_STR = "status"
+    aml_pm{
+		compatible = "amlogic,pm-m8";
+		dev_name = "aml_pm_m8";
+		status = "okay";
+	};
 
 
 /// ****************************************************************************
diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd
index 6959516def6a..2d4addb642f0 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n300.dtd
@@ -252,6 +252,11 @@
         >;
 	};
 
+	rtc{
+		compatible = "amlogic, aml_vrtc";
+		alarm_reg_addr = <0xc8100008>;
+		status = "okay";
+	};
 
 
 /// ****************************************************************************
@@ -943,6 +948,13 @@
 		linux,contiguous-region = <&cma_tvafe>;
 	};
 
+	hdmirx {
+		compatible = "amlogic,hdmirx";
+		dev_name = "hdmirx";
+		status = "ok";
+		hdmirx_id = <0>;
+	};
+
 	amlvecm {
 		compatible = "amlogic,vecm";
 		dev_name = "aml_vecm";
diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n300_15g.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n300_15g.dtd
index d918d3b65cd1..0bc52f0e48fa 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n300_15g.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n300_15g.dtd
@@ -252,7 +252,11 @@
         >;
 	};
 
-
+	rtc{
+		compatible = "amlogic, aml_vrtc";
+		alarm_reg_addr = <0xc8100008>;
+		status = "okay";
+	};
 
 /// ****************************************************************************
 ///	-	UART
@@ -932,6 +936,13 @@
 		linux,contiguous-region = <&cma_tvafe>;
 	};
 
+	hdmirx {
+		compatible = "amlogic,hdmirx";
+		dev_name = "hdmirx";
+		status = "ok";
+		hdmirx_id = <0>;
+	};
+
 	amlvecm {
 		compatible = "amlogic,vecm";
 		dev_name = "aml_vecm";
diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n300_1g.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n300_1g.dtd
index e2135c3c3d63..59d2b736af33 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n300_1g.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n300_1g.dtd
@@ -15,7 +15,7 @@
 		#address-cells = <1>;
 		#size-cells = <0>;
 
-		//$$ DEVICE="cpu0"
+		//$$ DEVICE="cpu0"vd
 		cpu@0 {
 			device_type = "cpu";
 			compatible = "arm,cortex-a9";
@@ -252,6 +252,11 @@
         >;
 	};
 
+	rtc{
+		compatible = "amlogic, aml_vrtc";
+		alarm_reg_addr = <0xc8100008>;
+		status = "okay";
+	};
 
 
 /// ****************************************************************************
@@ -932,6 +937,13 @@
 		linux,contiguous-region = <&cma_tvafe>;
 	};
 
+	hdmirx {
+		compatible = "amlogic,hdmirx";
+		dev_name = "hdmirx";
+		status = "ok";
+		hdmirx_id = <0>;
+	};
+
 	amlvecm {
 		compatible = "amlogic,vecm";
 		dev_name = "aml_vecm";
diff --git a/arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd b/arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd
index 9eeb9dc92c7a..b2752a72686f 100644
--- a/arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd
+++ b/arch/arm/boot/dts/amlogic/mesong9tv_n301.dtd
@@ -363,6 +363,13 @@
 		linux,contiguous-region = <&cma_tvafe>;
 	};
 
+	hdmirx {
+		compatible = "amlogic,hdmirx";
+		dev_name = "hdmirx";
+		status = "ok";
+		hdmirx_id = <0>;
+	};
+
 	amlvecm {
 		compatible = "amlogic,vecm";
 		dev_name = "aml_vecm";
@@ -532,7 +539,11 @@
         >;
 	};
 
-
+	rtc{
+		compatible = "amlogic, aml_vrtc";
+		alarm_reg_addr = <0xc8100008>;
+		status = "okay";
+	};
 
 /// ****************************************************************************
 ///	-	UART
diff --git a/arch/arm/configs/mesong9tv_defconfig b/arch/arm/configs/mesong9tv_defconfig
index c026093aec44..5d6f14863d79 100644
--- a/arch/arm/configs/mesong9tv_defconfig
+++ b/arch/arm/configs/mesong9tv_defconfig
@@ -157,7 +157,7 @@ CONFIG_CFG80211=y
 CONFIG_MAC80211=y
 CONFIG_RFKILL=y
 # CONFIG_OF_LM is not set
-# CONFIG_AML_RTC is not set
+CONFIG_AML_VRTC=y
 CONFIG_I2C_AML=y
 CONFIG_SARADC_AM=y
 CONFIG_NEW_AM_REMOTE=y
diff --git a/drivers/amlogic/Kconfig b/drivers/amlogic/Kconfig
index b823e9c937ec..08cf8f74ff29 100644
--- a/drivers/amlogic/Kconfig
+++ b/drivers/amlogic/Kconfig
@@ -14,6 +14,7 @@ source "drivers/amlogic/regd/Kconfig"
 source "drivers/amlogic/uart/Kconfig"
 source "drivers/amlogic/of/Kconfig"
 source "drivers/amlogic/rtc/Kconfig"
+source "drivers/amlogic/vrtc/Kconfig"
 source "drivers/amlogic/i2c/Kconfig"
 source "drivers/amlogic/input/Kconfig"
 source "drivers/amlogic/gpio/Kconfig"
diff --git a/drivers/amlogic/Makefile b/drivers/amlogic/Makefile
index f33717cb7bc1..8b23b49c015d 100644
--- a/drivers/amlogic/Makefile
+++ b/drivers/amlogic/Makefile
@@ -70,6 +70,8 @@ obj-$(CONFIG_AML_AUDIO_DSP) += audiodsp/
 
 obj-$(CONFIG_AML_RTC)+= rtc/
 
+obj-$(CONFIG_AML_VRTC) += vrtc/
+
 obj-y += power/
 
 ifneq ($(wildcard $(srctree)/../hardware/amlogic/pmu),)
diff --git a/drivers/amlogic/vrtc/Kconfig b/drivers/amlogic/vrtc/Kconfig
new file mode 100644
index 000000000000..d4ee9c49e317
--- /dev/null
+++ b/drivers/amlogic/vrtc/Kconfig
@@ -0,0 +1,11 @@
+# Amlogic VRTC
+
+config AML_VRTC
+    bool "meson VRTC support"
+    default n
+    select RTC_CLASS
+    help
+      This is the Amlogic virtual Real Time Clock driver,
+      which only has alarm function.
+
+
diff --git a/drivers/amlogic/vrtc/Makefile b/drivers/amlogic/vrtc/Makefile
new file mode 100644
index 000000000000..22542412a14d
--- /dev/null
+++ b/drivers/amlogic/vrtc/Makefile
@@ -0,0 +1,4 @@
+#
+#Makefile for the vrtc dirver
+#
+obj-$(CONFIG_AML_VRTC) += aml_vrtc.o
diff --git a/drivers/amlogic/vrtc/aml_vrtc.c b/drivers/amlogic/vrtc/aml_vrtc.c
new file mode 100644
index 000000000000..f1a147147d58
--- /dev/null
+++ b/drivers/amlogic/vrtc/aml_vrtc.c
@@ -0,0 +1,146 @@
+/*
+ * drivers/amlogic/rtc/aml_vrtc.c
+ *
+ * Copyright (C) 2015 Amlogic, Inc. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+*/
+
+
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/rtc.h>
+#include <linux/slab.h>
+#include <linux/delay.h>
+#include <linux/io.h>
+#include <linux/of.h>
+#include <linux/pm_wakeup.h>
+#include <linux/jiffies.h>
+#include <mach/am_regs.h>
+
+static void __iomem *alarm_reg_vaddr;
+
+static int aml_vrtc_read_time(struct device *dev, struct rtc_time *tm)
+{
+	u64 cur_seconds;
+	u32 time_t;
+	cur_seconds = jiffies_64_to_clock_t(get_jiffies_64());
+	time_t = (u32)(cur_seconds + 305);
+
+	rtc_time_to_tm(time_t, tm);
+
+	return 0;
+}
+
+static int set_wakeup_time(unsigned long time)
+{
+	int ret = -1;
+	if (alarm_reg_vaddr) {
+		writel(time, alarm_reg_vaddr);
+		ret = 0;
+		pr_info("set_wakeup_time: %lu\n", time);
+	}
+	return ret;
+}
+
+static int aml_vrtc_set_alarm(struct device *dev, struct rtc_wkalrm *alarm)
+{
+	unsigned long alarm_secs, cur_secs;
+	int ret;
+	struct	rtc_device *vrtc;
+
+	struct rtc_time cur_rtc_time;
+
+	vrtc = dev_get_drvdata(dev);
+
+	if (alarm->enabled) {
+		ret = rtc_tm_to_time(&alarm->time, &alarm_secs);
+		if (ret)
+			return ret;
+		aml_vrtc_read_time(dev, &cur_rtc_time);
+		ret = rtc_tm_to_time(&cur_rtc_time, &cur_secs);
+		if (alarm_secs >= cur_secs) {
+			alarm_secs = alarm_secs - cur_secs;
+			ret = set_wakeup_time(alarm_secs);
+			if (ret < 0)
+				return ret;
+		}
+	}
+	return 0;
+}
+
+static const struct rtc_class_ops aml_vrtc_ops = {
+	.read_time = aml_vrtc_read_time,
+	.set_alarm = aml_vrtc_set_alarm,
+};
+
+static int aml_vrtc_probe(struct platform_device *pdev)
+{
+	struct	rtc_device *vrtc;
+	int ret;
+	u32 paddr = 0;
+
+	ret = of_property_read_u32(pdev->dev.of_node,
+			"alarm_reg_addr", &paddr);
+	if (!ret) {
+		pr_debug("alarm_reg_paddr: 0x%x\n", paddr);
+		alarm_reg_vaddr = ioremap(paddr, 0x4);
+	}
+
+	device_init_wakeup(&pdev->dev, 1);
+	vrtc = rtc_device_register("aml_vrtc", &pdev->dev,
+		&aml_vrtc_ops, THIS_MODULE);
+	if (!vrtc)
+		return -1;
+	platform_set_drvdata(pdev, vrtc);
+
+	return 0;
+}
+
+static int aml_vrtc_remove(struct platform_device *dev)
+{
+	struct rtc_device *vrtc = platform_get_drvdata(dev);
+	rtc_device_unregister(vrtc);
+
+	return 0;
+}
+
+static const struct of_device_id aml_vrtc_dt_match[] = {
+	{ .compatible = "amlogic, aml_vrtc"},
+	{},
+};
+
+struct platform_driver aml_vrtc_driver = {
+	.driver = {
+		.name = "aml_vrtc",
+		.owner = THIS_MODULE,
+		.of_match_table = aml_vrtc_dt_match,
+	},
+	.probe = aml_vrtc_probe,
+	.remove = aml_vrtc_remove,
+};
+
+static int  __init aml_vrtc_init(void)
+{
+	return platform_driver_register(&aml_vrtc_driver);
+}
+
+static void __init aml_vrtc_exit(void)
+{
+	return platform_driver_unregister(&aml_vrtc_driver);
+}
+
+module_init(aml_vrtc_init);
+module_exit(aml_vrtc_exit);
+
+MODULE_DESCRIPTION("Amlogic internal vrtc driver");
+MODULE_LICENSE("GPL");
-- 
2.19.0

